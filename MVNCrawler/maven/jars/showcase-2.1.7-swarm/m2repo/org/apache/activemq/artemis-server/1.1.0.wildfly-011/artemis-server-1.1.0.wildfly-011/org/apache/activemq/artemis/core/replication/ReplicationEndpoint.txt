Compiled from "ReplicationEndpoint.java"
public final class org.apache.activemq.artemis.core.replication.ReplicationEndpoint implements org.apache.activemq.artemis.core.protocol.core.ChannelHandler,org.apache.activemq.artemis.core.server.ActiveMQComponent {
  private static final boolean trace;

  private final org.apache.activemq.artemis.core.io.IOCriticalErrorListener criticalErrorListener;

  private final org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl server;

  private final boolean wantedFailBack;

  private final org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation activation;

  private final boolean noSync;

  private org.apache.activemq.artemis.core.protocol.core.Channel channel;

  private org.apache.activemq.artemis.core.journal.Journal[] journals;

  private final org.apache.activemq.artemis.core.journal.JournalLoadInformation[] journalLoadInformation;

  private final java.util.Map<org.apache.activemq.artemis.core.persistence.impl.journal.JournalStorageManager$JournalContent, java.util.Map<java.lang.Long, org.apache.activemq.artemis.core.replication.ReplicationEndpoint$JournalSyncFile>> filesReservedForSync;

  private java.util.Map<org.apache.activemq.artemis.core.persistence.impl.journal.JournalStorageManager$JournalContent, org.apache.activemq.artemis.core.journal.Journal> journalsHolder;

  private org.apache.activemq.artemis.core.persistence.StorageManager storageManager;

  private org.apache.activemq.artemis.core.paging.PagingManager pageManager;

  private final java.util.concurrent.ConcurrentMap<org.apache.activemq.artemis.api.core.SimpleString, java.util.concurrent.ConcurrentMap<java.lang.Integer, org.apache.activemq.artemis.core.paging.impl.Page>> pageIndex;

  private final java.util.concurrent.ConcurrentMap<java.lang.Long, org.apache.activemq.artemis.core.replication.ReplicatedLargeMessage> largeMessages;

  private boolean deletePages;

  private volatile boolean started;

  private org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum backupQuorum;

  private java.util.concurrent.Executor executor;

  public org.apache.activemq.artemis.core.replication.ReplicationEndpoint(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, org.apache.activemq.artemis.core.io.IOCriticalErrorListener, boolean, org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field noSync:Z
       9: aload_0
      10: iconst_2
      11: anewarray     #3                  // class org/apache/activemq/artemis/core/journal/JournalLoadInformation
      14: putfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      17: aload_0
      18: new           #5                  // class java/util/HashMap
      21: dup
      22: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      25: putfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
      28: aload_0
      29: new           #5                  // class java/util/HashMap
      32: dup
      33: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      36: putfield      #8                  // Field journalsHolder:Ljava/util/Map;
      39: aload_0
      40: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      43: dup
      44: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      47: putfield      #11                 // Field pageIndex:Ljava/util/concurrent/ConcurrentMap;
      50: aload_0
      51: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      54: dup
      55: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      58: putfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
      61: aload_0
      62: iconst_1
      63: putfield      #13                 // Field deletePages:Z
      66: aload_0
      67: aload_1
      68: putfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      71: aload_0
      72: aload_2
      73: putfield      #15                 // Field criticalErrorListener:Lorg/apache/activemq/artemis/core/io/IOCriticalErrorListener;
      76: aload_0
      77: iload_3
      78: putfield      #16                 // Field wantedFailBack:Z
      81: aload_0
      82: aload         4
      84: putfield      #17                 // Field activation:Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;
      87: return

  public synchronized void registerJournal(byte, org.apache.activemq.artemis.core.journal.Journal);
    Code:
       0: aload_0
       1: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
       4: ifnull        16
       7: iload_1
       8: aload_0
       9: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
      12: arraylength
      13: if_icmplt     62
      16: aload_0
      17: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
      20: astore_3
      21: aload_0
      22: iload_1
      23: iconst_1
      24: iadd
      25: anewarray     #19                 // class org/apache/activemq/artemis/core/journal/Journal
      28: putfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
      31: aload_3
      32: ifnull        62
      35: iconst_0
      36: istore        4
      38: iload         4
      40: aload_3
      41: arraylength
      42: if_icmpge     62
      45: aload_0
      46: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
      49: iload         4
      51: aload_3
      52: iload         4
      54: aaload
      55: aastore
      56: iinc          4, 1
      59: goto          38
      62: aload_0
      63: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
      66: iload_1
      67: aload_2
      68: aastore
      69: return

  public void handlePacket(org.apache.activemq.artemis.core.protocol.core.Packet);
    Code:
       0: new           #20                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationResponseMessage
       3: dup
       4: invokespecial #21                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationResponseMessage."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Packet.getType:()B
      14: istore_3
      15: aload_0
      16: getfield      #23                 // Field started:Z
      19: ifne          23
      22: return
      23: iload_3
      24: bipush        91
      26: if_icmpne     40
      29: aload_0
      30: aload_1
      31: checkcast     #25                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage
      34: invokespecial #26                 // Method handleAppendAddRecord:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage;)V
      37: goto          288
      40: iload_3
      41: bipush        92
      43: if_icmpne     57
      46: aload_0
      47: aload_1
      48: checkcast     #27                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage
      51: invokespecial #28                 // Method handleAppendAddTXRecord:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage;)V
      54: goto          288
      57: iload_3
      58: bipush        93
      60: if_icmpne     74
      63: aload_0
      64: aload_1
      65: checkcast     #29                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteMessage
      68: invokespecial #30                 // Method handleAppendDelete:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteMessage;)V
      71: goto          288
      74: iload_3
      75: bipush        94
      77: if_icmpne     91
      80: aload_0
      81: aload_1
      82: checkcast     #31                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage
      85: invokespecial #32                 // Method handleAppendDeleteTX:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage;)V
      88: goto          288
      91: iload_3
      92: bipush        95
      94: if_icmpne     108
      97: aload_0
      98: aload_1
      99: checkcast     #33                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage
     102: invokespecial #34                 // Method handlePrepare:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage;)V
     105: goto          288
     108: iload_3
     109: bipush        96
     111: if_icmpne     125
     114: aload_0
     115: aload_1
     116: checkcast     #35                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage
     119: invokespecial #36                 // Method handleCommitRollback:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage;)V
     122: goto          288
     125: iload_3
     126: bipush        97
     128: if_icmpne     142
     131: aload_0
     132: aload_1
     133: checkcast     #37                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageWriteMessage
     136: invokespecial #38                 // Method handlePageWrite:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageWriteMessage;)V
     139: goto          288
     142: iload_3
     143: bipush        98
     145: if_icmpne     159
     148: aload_0
     149: aload_1
     150: checkcast     #39                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage
     153: invokespecial #40                 // Method handlePageEvent:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage;)V
     156: goto          288
     159: iload_3
     160: bipush        99
     162: if_icmpne     176
     165: aload_0
     166: aload_1
     167: checkcast     #41                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageBeginMessage
     170: invokespecial #42                 // Method handleLargeMessageBegin:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageBeginMessage;)V
     173: goto          288
     176: iload_3
     177: bipush        101
     179: if_icmpne     193
     182: aload_0
     183: aload_1
     184: checkcast     #43                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageWriteMessage
     187: invokespecial #44                 // Method handleLargeMessageWrite:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageWriteMessage;)V
     190: goto          288
     193: iload_3
     194: bipush        100
     196: if_icmpne     210
     199: aload_0
     200: aload_1
     201: checkcast     #45                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageEndMessage
     204: invokespecial #46                 // Method handleLargeMessageEnd:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageEndMessage;)V
     207: goto          288
     210: iload_3
     211: bipush        120
     213: if_icmpne     228
     216: aload_0
     217: aload_1
     218: checkcast     #47                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage
     221: invokespecial #48                 // Method handleStartReplicationSynchronization:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage;)Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationResponseMessageV2;
     224: astore_2
     225: goto          288
     228: iload_3
     229: bipush        103
     231: if_icmpne     245
     234: aload_0
     235: aload_1
     236: checkcast     #49                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage
     239: invokespecial #50                 // Method handleReplicationSynchronization:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage;)V
     242: goto          288
     245: iload_3
     246: bipush        121
     248: if_icmpne     262
     251: aload_0
     252: aload_1
     253: checkcast     #51                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage
     256: invokespecial #52                 // Method handleLiveStopping:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage;)V
     259: goto          288
     262: iload_3
     263: bipush        116
     265: if_icmpne     279
     268: aload_0
     269: aload_1
     270: checkcast     #53                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupReplicationStartFailedMessage
     273: invokespecial #54                 // Method handleFatalError:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupReplicationStartFailedMessage;)V
     276: goto          288
     279: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     282: aload_1
     283: invokeinterface #56,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.invalidPacketForReplication:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)V
     288: goto          348
     291: astore        4
     293: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     296: aload         4
     298: aload_1
     299: invokeinterface #58,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorHandlingReplicationPacket:(Ljava/lang/Exception;Lorg/apache/activemq/artemis/core/protocol/core/Packet;)V
     304: new           #59                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ActiveMQExceptionMessage
     307: dup
     308: aload         4
     310: invokespecial #60                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ActiveMQExceptionMessage."<init>":(Lorg/apache/activemq/artemis/api/core/ActiveMQException;)V
     313: astore_2
     314: goto          348
     317: astore        4
     319: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     322: aload         4
     324: aload_1
     325: invokeinterface #58,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorHandlingReplicationPacket:(Ljava/lang/Exception;Lorg/apache/activemq/artemis/core/protocol/core/Packet;)V
     330: new           #59                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ActiveMQExceptionMessage
     333: dup
     334: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     337: aload         4
     339: invokeinterface #63,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationUnhandledError:(Ljava/lang/Exception;)Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
     344: invokespecial #60                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ActiveMQExceptionMessage."<init>":(Lorg/apache/activemq/artemis/api/core/ActiveMQException;)V
     347: astore_2
     348: aload_0
     349: getfield      #64                 // Field channel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
     352: aload_2
     353: invokeinterface #65,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.send:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Z
     358: pop
     359: return
    Exception table:
       from    to  target type
          15    22   291   Class org/apache/activemq/artemis/api/core/ActiveMQException
          23   288   291   Class org/apache/activemq/artemis/api/core/ActiveMQException
          15    22   317   Class java/lang/Exception
          23   288   317   Class java/lang/Exception

  private void handleFatalError(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.BackupReplicationStartFailedMessage);
    Code:
       0: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: aload_1
       4: invokevirtual #66                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupReplicationStartFailedMessage.getRegistrationProblem:()Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupReplicationStartFailedMessage$BackupRegistrationProblem;
       7: invokeinterface #67,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorStartingReplication:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupReplicationStartFailedMessage$BackupRegistrationProblem;)V
      12: aload_0
      13: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      16: iconst_0
      17: invokevirtual #68                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.stopTheServer:(Z)V
      20: return

  private void handleLiveStopping(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLiveIsStoppingMessage) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field activation:Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;
       4: aload_1
       5: invokevirtual #69                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage.isFinalMessage:()Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;
       8: invokevirtual #70                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation.remoteFailOver:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;)V
      11: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ireturn

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #71                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
       7: astore_1
       8: aload_0
       9: aload_0
      10: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      13: invokevirtual #72                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getStorageManager:()Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      16: putfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      19: aload_0
      20: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      23: invokeinterface #74,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.start:()V
      28: aload_0
      29: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      32: invokevirtual #75                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getManagementService:()Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      35: aload_0
      36: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      39: invokeinterface #76,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.setStorageManager:(Lorg/apache/activemq/artemis/core/persistence/StorageManager;)V
      44: aload_0
      45: getfield      #8                  // Field journalsHolder:Ljava/util/Map;
      48: getstatic     #77                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent.BINDINGS:Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;
      51: aload_0
      52: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      55: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.getBindingsJournal:()Lorg/apache/activemq/artemis/core/journal/Journal;
      60: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: getfield      #8                  // Field journalsHolder:Ljava/util/Map;
      70: getstatic     #80                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent.MESSAGES:Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;
      73: aload_0
      74: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      77: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.getMessageJournal:()Lorg/apache/activemq/artemis/core/journal/Journal;
      82: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: ldc           #82                 // class org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent
      90: invokestatic  #83                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      93: invokevirtual #84                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
      96: astore_2
      97: aload_2
      98: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          167
     106: aload_2
     107: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #82                 // class org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent
     115: astore_3
     116: aload_0
     117: getfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
     120: aload_3
     121: new           #5                  // class java/util/HashMap
     124: dup
     125: invokespecial #6                  // Method java/util/HashMap."<init>":()V
     128: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: aload_0
     135: getfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
     138: aload_3
     139: getfield      #87                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent.typeByte:B
     142: aload_0
     143: getfield      #8                  // Field journalsHolder:Ljava/util/Map;
     146: aload_3
     147: invokeinterface #88,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #19                 // class org/apache/activemq/artemis/core/journal/Journal
     155: getstatic     #89                 // Field org/apache/activemq/artemis/core/journal/Journal$JournalState.SYNCING:Lorg/apache/activemq/artemis/core/journal/Journal$JournalState;
     158: invokeinterface #90,  2           // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.loadSyncOnly:(Lorg/apache/activemq/artemis/core/journal/Journal$JournalState;)Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
     163: aastore
     164: goto          97
     167: aload_0
     168: new           #91                 // class org/apache/activemq/artemis/core/paging/impl/PagingManagerImpl
     171: dup
     172: new           #92                 // class org/apache/activemq/artemis/core/paging/impl/PagingStoreFactoryNIO
     175: dup
     176: aload_0
     177: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     180: aload_1
     181: invokeinterface #93,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getPagingLocation:()Ljava/io/File;
     186: aload_1
     187: invokeinterface #94,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getJournalBufferSize_NIO:()I
     192: i2l
     193: aload_0
     194: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     197: invokevirtual #95                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getScheduledPool:()Ljava/util/concurrent/ScheduledExecutorService;
     200: aload_0
     201: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     204: invokevirtual #96                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getExecutorFactory:()Lorg/apache/activemq/artemis/utils/ExecutorFactory;
     207: aload_1
     208: invokeinterface #97,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.isJournalSyncNonTransactional:()Z
     213: aload_0
     214: getfield      #15                 // Field criticalErrorListener:Lorg/apache/activemq/artemis/core/io/IOCriticalErrorListener;
     217: invokespecial #98                 // Method org/apache/activemq/artemis/core/paging/impl/PagingStoreFactoryNIO."<init>":(Lorg/apache/activemq/artemis/core/persistence/StorageManager;Ljava/io/File;JLjava/util/concurrent/ScheduledExecutorService;Lorg/apache/activemq/artemis/utils/ExecutorFactory;ZLorg/apache/activemq/artemis/core/io/IOCriticalErrorListener;)V
     220: aload_0
     221: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     224: invokevirtual #99                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getAddressSettingsRepository:()Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
     227: invokespecial #100                // Method org/apache/activemq/artemis/core/paging/impl/PagingManagerImpl."<init>":(Lorg/apache/activemq/artemis/core/paging/PagingStoreFactory;Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;)V
     230: putfield      #101                // Field pageManager:Lorg/apache/activemq/artemis/core/paging/PagingManager;
     233: aload_0
     234: getfield      #101                // Field pageManager:Lorg/apache/activemq/artemis/core/paging/PagingManager;
     237: invokeinterface #102,  1          // InterfaceMethod org/apache/activemq/artemis/core/paging/PagingManager.start:()V
     242: aload_0
     243: iconst_1
     244: putfield      #23                 // Field started:Z
     247: goto          263
     250: astore_2
     251: aload_0
     252: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     255: invokevirtual #103                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.isStarted:()Z
     258: ifeq          263
     261: aload_2
     262: athrow
     263: return
    Exception table:
       from    to  target type
           8   247   250   Class java/lang/Exception

  public synchronized void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #64                 // Field channel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      12: ifnull        24
      15: aload_0
      16: getfield      #64                 // Field channel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      19: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.close:()V
      24: aload_0
      25: getfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
      28: invokeinterface #105,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      33: invokeinterface #106,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      38: astore_1
      39: aload_1
      40: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          67
      48: aload_1
      49: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #107                // class org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage
      57: astore_2
      58: aload_2
      59: invokeinterface #108,  1          // InterfaceMethod org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage.releaseResources:()V
      64: goto          39
      67: aload_0
      68: getfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
      71: invokeinterface #109,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      76: aload_0
      77: getfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
      80: invokeinterface #110,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      85: invokeinterface #111,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      90: astore_1
      91: aload_1
      92: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          161
     100: aload_1
     101: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #112                // class java/util/Map$Entry
     109: astore_2
     110: aload_2
     111: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     116: checkcast     #114                // class java/util/Map
     119: invokeinterface #115,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     124: invokeinterface #106,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     129: astore_3
     130: aload_3
     131: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     136: ifeq          158
     139: aload_3
     140: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #116                // class org/apache/activemq/artemis/core/replication/ReplicationEndpoint$JournalSyncFile
     148: astore        4
     150: aload         4
     152: invokevirtual #117                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint$JournalSyncFile.close:()V
     155: goto          130
     158: goto          91
     161: aload_0
     162: getfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
     165: invokeinterface #118,  1          // InterfaceMethod java/util/Map.clear:()V
     170: aload_0
     171: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
     174: ifnull        218
     177: aload_0
     178: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
     181: astore_1
     182: aload_1
     183: arraylength
     184: istore_2
     185: iconst_0
     186: istore_3
     187: iload_3
     188: iload_2
     189: if_icmpge     218
     192: aload_1
     193: iload_3
     194: aaload
     195: astore        4
     197: aload         4
     199: instanceof    #119                // class org/apache/activemq/artemis/core/journal/impl/FileWrapperJournal
     202: ifeq          212
     205: aload         4
     207: invokeinterface #120,  1          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.stop:()V
     212: iinc          3, 1
     215: goto          187
     218: aload_0
     219: getfield      #11                 // Field pageIndex:Ljava/util/concurrent/ConcurrentMap;
     222: invokeinterface #105,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     227: invokeinterface #106,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     232: astore_1
     233: aload_1
     234: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     239: ifeq          315
     242: aload_1
     243: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     248: checkcast     #121                // class java/util/concurrent/ConcurrentMap
     251: astore_2
     252: aload_2
     253: invokeinterface #105,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     258: invokeinterface #106,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     263: astore_3
     264: aload_3
     265: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     270: ifeq          312
     273: aload_3
     274: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     279: checkcast     #122                // class org/apache/activemq/artemis/core/paging/impl/Page
     282: astore        4
     284: aload         4
     286: invokevirtual #123                // Method org/apache/activemq/artemis/core/paging/impl/Page.sync:()V
     289: aload         4
     291: invokevirtual #124                // Method org/apache/activemq/artemis/core/paging/impl/Page.close:()V
     294: goto          309
     297: astore        5
     299: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     302: aload         5
     304: invokeinterface #125,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorClosingPageOnReplication:(Ljava/lang/Exception;)V
     309: goto          264
     312: goto          233
     315: aload_0
     316: getfield      #101                // Field pageManager:Lorg/apache/activemq/artemis/core/paging/PagingManager;
     319: invokeinterface #126,  1          // InterfaceMethod org/apache/activemq/artemis/core/paging/PagingManager.stop:()V
     324: aload_0
     325: getfield      #11                 // Field pageIndex:Ljava/util/concurrent/ConcurrentMap;
     328: invokeinterface #109,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
     333: new           #127                // class java/util/concurrent/CountDownLatch
     336: dup
     337: iconst_1
     338: invokespecial #128                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     341: astore_1
     342: aload_0
     343: getfield      #129                // Field executor:Ljava/util/concurrent/Executor;
     346: new           #130                // class org/apache/activemq/artemis/core/replication/ReplicationEndpoint$1
     349: dup
     350: aload_0
     351: aload_1
     352: invokespecial #131                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint$1."<init>":(Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;Ljava/util/concurrent/CountDownLatch;)V
     355: invokeinterface #132,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     360: aload_1
     361: ldc2_w        #133                // long 30l
     364: getstatic     #135                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     367: invokevirtual #136                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
     370: pop
     371: aload_0
     372: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     375: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.stop:()V
     380: aload_0
     381: iconst_0
     382: putfield      #23                 // Field started:Z
     385: return
    Exception table:
       from    to  target type
         284   294   297   Class java/lang/Exception

  public org.apache.activemq.artemis.core.protocol.core.Channel getChannel();
    Code:
       0: aload_0
       1: getfield      #64                 // Field channel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
       4: areturn

  public void setChannel(org.apache.activemq.artemis.core.protocol.core.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field channel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
       5: return

  public void compareJournalInformation(org.apache.activemq.artemis.core.journal.JournalLoadInformation[]) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field activation:Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;
       4: invokevirtual #138                // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation.isRemoteBackupUpToDate:()Z
       7: ifne          19
      10: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      13: invokeinterface #139,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.journalsNotInSync:()Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
      18: athrow
      19: aload_0
      20: getfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      23: ifnull        36
      26: aload_0
      27: getfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      30: arraylength
      31: aload_1
      32: arraylength
      33: if_icmpeq     45
      36: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      39: invokeinterface #140,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationTooManyJournals:()Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
      44: athrow
      45: iconst_0
      46: istore_2
      47: iload_2
      48: aload_1
      49: arraylength
      50: if_icmpge     96
      53: aload_1
      54: iload_2
      55: aaload
      56: aload_0
      57: getfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      60: iload_2
      61: aaload
      62: invokevirtual #141                // Method org/apache/activemq/artemis/core/journal/JournalLoadInformation.equals:(Ljava/lang/Object;)Z
      65: ifne          90
      68: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      71: aload_0
      72: aload_1
      73: invokespecial #142                // Method journalParametersToString:([Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;)Ljava/lang/String;
      76: invokeinterface #143,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.journalcomparisonMismatch:(Ljava/lang/String;)V
      81: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      84: invokeinterface #140,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationTooManyJournals:()Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
      89: athrow
      90: iinc          2, 1
      93: goto          47
      96: return

  public void setDeletePages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field deletePages:Z
       5: return

  private java.lang.String journalParametersToString(org.apache.activemq.artemis.core.journal.JournalLoadInformation[]);
    Code:
       0: new           #144                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #145                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #146                // String **********************************************************\nparameters:\nBindingsImpl =
       9: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: iconst_0
      14: aaload
      15: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #149                // String \n
      20: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #150                // String Messaging =
      25: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: iconst_1
      30: aaload
      31: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #149                // String \n
      36: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #151                // String **********************************************************
      41: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #149                // String \n
      46: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #152                // String Expected:
      51: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #149                // String \n
      56: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #153                // String BindingsImpl =
      61: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      68: iconst_0
      69: aaload
      70: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #149                // String \n
      75: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #150                // String Messaging =
      80: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: getfield      #4                  // Field journalLoadInformation:[Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      87: iconst_1
      88: aaload
      89: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: ldc           #149                // String \n
      94: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #151                // String **********************************************************
      99: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #154                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: areturn

  private void finishSynchronization(java.lang.String) throws java.lang.Exception;
    Code:
       0: ldc           #82                 // class org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent
       2: invokestatic  #83                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       5: invokevirtual #84                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          121
      18: aload_2
      19: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #82                 // class org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent
      27: astore_3
      28: aload_0
      29: getfield      #8                  // Field journalsHolder:Ljava/util/Map;
      32: aload_3
      33: invokeinterface #155,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #19                 // class org/apache/activemq/artemis/core/journal/Journal
      41: astore        4
      43: aload         4
      45: invokeinterface #156,  1          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.synchronizationLock:()V
      50: aload_0
      51: getfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
      54: aload_3
      55: invokeinterface #155,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_0
      62: aload_3
      63: getfield      #87                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent.typeByte:B
      66: aload         4
      68: invokevirtual #157                // Method registerJournal:(BLorg/apache/activemq/artemis/core/journal/Journal;)V
      71: aload         4
      73: invokeinterface #120,  1          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.stop:()V
      78: aload         4
      80: invokeinterface #158,  1          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.start:()V
      85: aload         4
      87: getstatic     #159                // Field org/apache/activemq/artemis/core/journal/Journal$JournalState.SYNCING_UP_TO_DATE:Lorg/apache/activemq/artemis/core/journal/Journal$JournalState;
      90: invokeinterface #90,  2           // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.loadSyncOnly:(Lorg/apache/activemq/artemis/core/journal/Journal$JournalState;)Lorg/apache/activemq/artemis/core/journal/JournalLoadInformation;
      95: pop
      96: aload         4
      98: invokeinterface #160,  1          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.synchronizationUnlock:()V
     103: goto          118
     106: astore        5
     108: aload         4
     110: invokeinterface #160,  1          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.synchronizationUnlock:()V
     115: aload         5
     117: athrow
     118: goto          9
     121: sipush        4096
     124: invokestatic  #161                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     127: astore_2
     128: aload_0
     129: getfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
     132: invokeinterface #162,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
     137: invokeinterface #111,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     142: astore_3
     143: aload_3
     144: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifeq          199
     152: aload_3
     153: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #112                // class java/util/Map$Entry
     161: astore        4
     163: aload         4
     165: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     170: checkcast     #107                // class org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage
     173: astore        5
     175: aload         5
     177: instanceof    #163                // class org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync
     180: ifeq          196
     183: aload         5
     185: checkcast     #163                // class org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync
     188: astore        6
     190: aload         6
     192: aload_2
     193: invokevirtual #164                // Method org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync.joinSyncedData:(Ljava/nio/ByteBuffer;)V
     196: goto          143
     199: aload_0
     200: aconst_null
     201: putfield      #8                  // Field journalsHolder:Ljava/util/Map;
     204: aload_0
     205: getfield      #165                // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     208: aload_1
     209: invokevirtual #166                // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.liveIDSet:(Ljava/lang/String;)V
     212: aload_0
     213: getfield      #17                 // Field activation:Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;
     216: invokevirtual #167                // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation.setRemoteBackupUpToDate:()V
     219: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     222: aload_0
     223: getfield      #14                 // Field server:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     226: invokeinterface #168,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.backupServerSynched:(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;)V
     231: return
    Exception table:
       from    to  target type
          50    96   106   any
         106   108   106   any

  private synchronized void handleReplicationSynchronization(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationSyncFileMessage) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #169                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getId:()J
       4: invokestatic  #170                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: astore_2
       8: aload_1
       9: invokevirtual #171                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getData:()[B
      12: astore_3
      13: getstatic     #172                // Field org/apache/activemq/artemis/core/replication/ReplicationEndpoint$3.$SwitchMap$org$apache$activemq$artemis$core$protocol$core$impl$wireformat$ReplicationSyncFileMessage$FileType:[I
      16: aload_1
      17: invokevirtual #173                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getFileType:()Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage$FileType;
      20: invokevirtual #174                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage$FileType.ordinal:()I
      23: iaload
      24: tableswitch   { // 1 to 3
                     1: 52
                     2: 97
                     3: 122
               default: 177
          }
      52: aload_0
      53: aload_2
      54: invokevirtual #175                // Method java/lang/Long.longValue:()J
      57: iconst_0
      58: invokespecial #176                // Method lookupLargeMessage:(JZ)Lorg/apache/activemq/artemis/core/replication/ReplicatedLargeMessage;
      61: astore        5
      63: aload         5
      65: instanceof    #163                // class org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync
      68: ifne          80
      71: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      74: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.largeMessageIncompatible:()V
      79: return
      80: aload         5
      82: checkcast     #163                // class org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync
      85: astore        6
      87: aload         6
      89: invokevirtual #178                // Method org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync.getSyncFile:()Lorg/apache/activemq/artemis/core/io/SequentialFile;
      92: astore        4
      94: goto          190
      97: aload_0
      98: aload_1
      99: invokevirtual #179                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getPageStore:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     102: aload_1
     103: invokevirtual #169                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getId:()J
     106: l2i
     107: invokespecial #180                // Method getPage:(Lorg/apache/activemq/artemis/api/core/SimpleString;I)Lorg/apache/activemq/artemis/core/paging/impl/Page;
     110: astore        5
     112: aload         5
     114: invokevirtual #181                // Method org/apache/activemq/artemis/core/paging/impl/Page.getFile:()Lorg/apache/activemq/artemis/core/io/SequentialFile;
     117: astore        4
     119: goto          190
     122: aload_0
     123: getfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
     126: aload_1
     127: invokevirtual #182                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getJournalContent:()Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;
     130: invokeinterface #88,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #114                // class java/util/Map
     138: aload_2
     139: invokeinterface #88,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     144: checkcast     #116                // class org/apache/activemq/artemis/core/replication/ReplicationEndpoint$JournalSyncFile
     147: astore        5
     149: aload         5
     151: invokevirtual #183                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint$JournalSyncFile.getChannel:()Ljava/nio/channels/FileChannel;
     154: astore        6
     156: aload_3
     157: ifnonnull     166
     160: aload         6
     162: invokevirtual #184                // Method java/nio/channels/FileChannel.close:()V
     165: return
     166: aload         6
     168: aload_3
     169: invokestatic  #185                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     172: invokevirtual #186                // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
     175: pop
     176: return
     177: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     180: aload_1
     181: invokevirtual #173                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage.getFileType:()Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage$FileType;
     184: invokeinterface #187,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationUnhandledFileType:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage$FileType;)Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
     189: athrow
     190: aload_3
     191: ifnonnull     202
     194: aload         4
     196: invokeinterface #188,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.close:()V
     201: return
     202: aload         4
     204: invokeinterface #189,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
     209: ifne          219
     212: aload         4
     214: invokeinterface #190,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.open:()V
     219: aload         4
     221: aload_3
     222: invokestatic  #185                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     225: iconst_1
     226: invokeinterface #191,  3          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.writeDirect:(Ljava/nio/ByteBuffer;Z)V
     231: return

  private org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationResponseMessageV2 handleStartReplicationSynchronization(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage) throws java.lang.Exception;
    Code:
       0: new           #192                // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationResponseMessageV2
       3: dup
       4: invokespecial #193                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationResponseMessageV2."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #17                 // Field activation:Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;
      12: invokevirtual #138                // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation.isRemoteBackupUpToDate:()Z
      15: ifeq          27
      18: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      21: invokeinterface #194,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationBackupUpToDate:()Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
      26: athrow
      27: aload_0
      28: dup
      29: astore_3
      30: monitorenter
      31: aload_0
      32: getfield      #23                 // Field started:Z
      35: ifne          42
      38: aload_2
      39: aload_3
      40: monitorexit
      41: areturn
      42: aload_1
      43: invokevirtual #195                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.isSynchronizationFinished:()Z
      46: ifeq          66
      49: aload_0
      50: aload_1
      51: invokevirtual #196                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getNodeID:()Ljava/lang/String;
      54: invokespecial #197                // Method finishSynchronization:(Ljava/lang/String;)V
      57: aload_2
      58: iconst_1
      59: invokevirtual #198                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationResponseMessageV2.setSynchronizationIsFinishedAcknowledgement:(Z)V
      62: aload_2
      63: aload_3
      64: monitorexit
      65: areturn
      66: getstatic     #199                // Field org/apache/activemq/artemis/core/replication/ReplicationEndpoint$3.$SwitchMap$org$apache$activemq$artemis$core$protocol$core$impl$wireformat$ReplicationStartSyncMessage$SyncDataType:[I
      69: aload_1
      70: invokevirtual #200                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getDataType:()Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      73: invokevirtual #201                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.ordinal:()I
      76: iaload
      77: tableswitch   { // 1 to 3
                     1: 104
                     2: 148
                     3: 148
               default: 334
          }
     104: aload_1
     105: invokevirtual #202                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getFileIds:()[J
     108: astore        4
     110: aload         4
     112: arraylength
     113: istore        5
     115: iconst_0
     116: istore        6
     118: iload         6
     120: iload         5
     122: if_icmpge     145
     125: aload         4
     127: iload         6
     129: laload
     130: lstore        7
     132: aload_0
     133: lload         7
     135: iconst_1
     136: invokespecial #203                // Method createLargeMessage:(JZ)V
     139: iinc          6, 1
     142: goto          118
     145: goto          343
     148: aload_0
     149: getfield      #16                 // Field wantedFailBack:Z
     152: ifeq          170
     155: aload_1
     156: invokevirtual #204                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.isServerToFailBack:()Z
     159: ifne          170
     162: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     165: invokeinterface #205,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.autoFailBackDenied:()V
     170: aload_1
     171: invokevirtual #200                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getDataType:()Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
     174: invokestatic  #206                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.getJournalContentType:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;)Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;
     177: astore        4
     179: aload_0
     180: getfield      #8                  // Field journalsHolder:Ljava/util/Map;
     183: aload         4
     185: invokeinterface #88,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     190: checkcast     #19                 // class org/apache/activemq/artemis/core/journal/Journal
     193: astore        5
     195: aload_1
     196: invokevirtual #196                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getNodeID:()Ljava/lang/String;
     199: ifnull        213
     202: aload_0
     203: getfield      #165                // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     206: aload_1
     207: invokevirtual #196                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getNodeID:()Ljava/lang/String;
     210: invokevirtual #166                // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.liveIDSet:(Ljava/lang/String;)V
     213: aload_0
     214: getfield      #7                  // Field filesReservedForSync:Ljava/util/Map;
     217: aload         4
     219: invokeinterface #88,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     224: checkcast     #114                // class java/util/Map
     227: astore        6
     229: aload         5
     231: aload_1
     232: invokevirtual #202                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage.getFileIds:()[J
     235: invokeinterface #207,  2          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.createFilesForBackupSync:([J)Ljava/util/Map;
     240: invokeinterface #110,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     245: invokeinterface #111,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     250: astore        7
     252: aload         7
     254: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     259: ifeq          309
     262: aload         7
     264: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     269: checkcast     #112                // class java/util/Map$Entry
     272: astore        8
     274: aload         6
     276: aload         8
     278: invokeinterface #208,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     283: new           #116                // class org/apache/activemq/artemis/core/replication/ReplicationEndpoint$JournalSyncFile
     286: dup
     287: aload         8
     289: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     294: checkcast     #209                // class org/apache/activemq/artemis/core/journal/impl/JournalFile
     297: invokespecial #210                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint$JournalSyncFile."<init>":(Lorg/apache/activemq/artemis/core/journal/impl/JournalFile;)V
     300: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     305: pop
     306: goto          252
     309: new           #119                // class org/apache/activemq/artemis/core/journal/impl/FileWrapperJournal
     312: dup
     313: aload         5
     315: invokespecial #211                // Method org/apache/activemq/artemis/core/journal/impl/FileWrapperJournal."<init>":(Lorg/apache/activemq/artemis/core/journal/Journal;)V
     318: astore        7
     320: aload_0
     321: aload         4
     323: getfield      #87                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent.typeByte:B
     326: aload         7
     328: invokevirtual #157                // Method registerJournal:(BLorg/apache/activemq/artemis/core/journal/Journal;)V
     331: goto          343
     334: getstatic     #62                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     337: invokeinterface #212,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationUnhandledDataType:()Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
     342: athrow
     343: aload_3
     344: monitorexit
     345: goto          355
     348: astore        9
     350: aload_3
     351: monitorexit
     352: aload         9
     354: athrow
     355: aload_2
     356: areturn
    Exception table:
       from    to  target type
          31    41   348   any
          42    65   348   any
          66   345   348   any
         348   352   348   any

  private void handleLargeMessageEnd(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLargeMessageEndMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #213                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageEndMessage.getMessageId:()J
       5: iconst_1
       6: invokespecial #176                // Method lookupLargeMessage:(JZ)Lorg/apache/activemq/artemis/core/replication/ReplicatedLargeMessage;
       9: astore_2
      10: aload_2
      11: ifnull        33
      14: aload_0
      15: getfield      #129                // Field executor:Ljava/util/concurrent/Executor;
      18: new           #214                // class org/apache/activemq/artemis/core/replication/ReplicationEndpoint$2
      21: dup
      22: aload_0
      23: aload_2
      24: aload_1
      25: invokespecial #215                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint$2."<init>":(Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;Lorg/apache/activemq/artemis/core/replication/ReplicatedLargeMessage;Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageEndMessage;)V
      28: invokeinterface #132,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      33: return

  private void handleLargeMessageWrite(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLargeMessageWriteMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #216                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageWriteMessage.getMessageId:()J
       5: iconst_0
       6: invokespecial #176                // Method lookupLargeMessage:(JZ)Lorg/apache/activemq/artemis/core/replication/ReplicatedLargeMessage;
       9: astore_2
      10: aload_2
      11: ifnull        24
      14: aload_2
      15: aload_1
      16: invokevirtual #217                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageWriteMessage.getBody:()[B
      19: invokeinterface #218,  2          // InterfaceMethod org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage.addBytes:([B)V
      24: return

  private org.apache.activemq.artemis.core.replication.ReplicatedLargeMessage lookupLargeMessage(long, boolean);
    Code:
       0: iload_3
       1: ifeq          25
       4: aload_0
       5: getfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
       8: lload_1
       9: invokestatic  #170                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokeinterface #219,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #107                // class org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage
      20: astore        4
      22: goto          57
      25: aload_0
      26: getfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
      29: lload_1
      30: invokestatic  #170                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: invokeinterface #220,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #107                // class org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage
      41: astore        4
      43: aload         4
      45: ifnonnull     57
      48: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      51: lload_1
      52: invokeinterface #221,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.largeMessageNotAvailable:(J)V
      57: aload         4
      59: areturn

  private void handleLargeMessageBegin(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLargeMessageBeginMessage);
    Code:
       0: aload_1
       1: invokevirtual #222                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageBeginMessage.getMessageId:()J
       4: lstore_2
       5: aload_0
       6: lload_2
       7: iconst_0
       8: invokespecial #203                // Method createLargeMessage:(JZ)V
      11: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      14: new           #144                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #145                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #223                // String Receiving Large Message
      23: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: lload_2
      27: invokevirtual #224                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      30: ldc           #225                // String  on backup
      32: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #154                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokeinterface #226,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      43: return

  private void createLargeMessage(long, boolean);
    Code:
       0: iload_3
       1: ifeq          20
       4: new           #163                // class org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync
       7: dup
       8: aload_0
       9: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      12: invokespecial #227                // Method org/apache/activemq/artemis/core/persistence/impl/journal/LargeServerMessageInSync."<init>":(Lorg/apache/activemq/artemis/core/persistence/StorageManager;)V
      15: astore        4
      17: goto          31
      20: aload_0
      21: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      24: invokeinterface #228,  1          // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.createLargeMessage:()Lorg/apache/activemq/artemis/core/server/LargeServerMessage;
      29: astore        4
      31: aload         4
      33: iconst_1
      34: invokeinterface #229,  2          // InterfaceMethod org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage.setDurable:(Z)Lorg/apache/activemq/artemis/api/core/Message;
      39: pop
      40: aload         4
      42: lload_1
      43: invokeinterface #230,  3          // InterfaceMethod org/apache/activemq/artemis/core/replication/ReplicatedLargeMessage.setMessageID:(J)Lorg/apache/activemq/artemis/api/core/Message;
      48: pop
      49: aload_0
      50: getfield      #12                 // Field largeMessages:Ljava/util/concurrent/ConcurrentMap;
      53: lload_1
      54: invokestatic  #170                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      57: aload         4
      59: invokeinterface #231,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: return

  private void handleCommitRollback(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationCommitMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #232                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage.getJournalID:()B
       5: invokespecial #233                // Method getJournal:(B)Lorg/apache/activemq/artemis/core/journal/Journal;
       8: astore_2
       9: aload_1
      10: invokevirtual #234                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage.isRollback:()Z
      13: ifeq          30
      16: aload_2
      17: aload_1
      18: invokevirtual #235                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage.getTxId:()J
      21: iconst_0
      22: invokeinterface #237,  4          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendRollbackRecord:(JZ)V
      27: goto          41
      30: aload_2
      31: aload_1
      32: invokevirtual #235                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage.getTxId:()J
      35: iconst_0
      36: invokeinterface #238,  4          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendCommitRecord:(JZ)V
      41: return

  private void handlePrepare(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationPrepareMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #239                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage.getJournalID:()B
       5: invokespecial #233                // Method getJournal:(B)Lorg/apache/activemq/artemis/core/journal/Journal;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #240                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage.getTxId:()J
      14: aload_1
      15: invokevirtual #241                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage.getRecordData:()[B
      18: iconst_0
      19: invokeinterface #242,  5          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendPrepareRecord:(J[BZ)V
      24: return

  private void handleAppendDeleteTX(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationDeleteTXMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #243                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage.getJournalID:()B
       5: invokespecial #233                // Method getJournal:(B)Lorg/apache/activemq/artemis/core/journal/Journal;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #244                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage.getTxId:()J
      14: aload_1
      15: invokevirtual #245                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage.getId:()J
      18: aload_1
      19: invokevirtual #246                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage.getRecordData:()[B
      22: invokeinterface #247,  6          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendDeleteRecordTransactional:(JJ[B)V
      27: return

  private void handleAppendDelete(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationDeleteMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #248                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteMessage.getJournalID:()B
       5: invokespecial #233                // Method getJournal:(B)Lorg/apache/activemq/artemis/core/journal/Journal;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #249                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteMessage.getId:()J
      14: iconst_0
      15: invokeinterface #250,  4          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendDeleteRecord:(JZ)V
      20: return

  private void handleAppendAddTXRecord(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationAddTXMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #251                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getJournalID:()B
       5: invokespecial #233                // Method getJournal:(B)Lorg/apache/activemq/artemis/core/journal/Journal;
       8: astore_2
       9: aload_1
      10: invokevirtual #252                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getOperation:()Lorg/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE;
      13: getstatic     #253                // Field org/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE.UPDATE:Lorg/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE;
      16: if_acmpne     44
      19: aload_2
      20: aload_1
      21: invokevirtual #254                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getTxId:()J
      24: aload_1
      25: invokevirtual #255                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getId:()J
      28: aload_1
      29: invokevirtual #256                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getRecordType:()B
      32: aload_1
      33: invokevirtual #257                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getRecordData:()[B
      36: invokeinterface #258,  7          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendUpdateRecordTransactional:(JJB[B)V
      41: goto          66
      44: aload_2
      45: aload_1
      46: invokevirtual #254                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getTxId:()J
      49: aload_1
      50: invokevirtual #255                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getId:()J
      53: aload_1
      54: invokevirtual #256                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getRecordType:()B
      57: aload_1
      58: invokevirtual #257                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage.getRecordData:()[B
      61: invokeinterface #259,  7          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendAddRecordTransactional:(JJB[B)V
      66: return

  private void handleAppendAddRecord(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationAddMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #260                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getJournalID:()B
       5: invokespecial #233                // Method getJournal:(B)Lorg/apache/activemq/artemis/core/journal/Journal;
       8: astore_2
       9: aload_1
      10: invokevirtual #261                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getRecord:()Lorg/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE;
      13: getstatic     #253                // Field org/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE.UPDATE:Lorg/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE;
      16: if_acmpne     78
      19: getstatic     #262                // Field trace:Z
      22: ifeq          56
      25: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      28: new           #144                // class java/lang/StringBuilder
      31: dup
      32: invokespecial #145                // Method java/lang/StringBuilder."<init>":()V
      35: ldc_w         #263                // String Endpoint appendUpdate id =
      38: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #264                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getId:()J
      45: invokevirtual #224                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      48: invokevirtual #154                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #226,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      56: aload_2
      57: aload_1
      58: invokevirtual #264                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getId:()J
      61: aload_1
      62: invokevirtual #265                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getJournalRecordType:()B
      65: aload_1
      66: invokevirtual #266                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getRecordData:()[B
      69: iconst_0
      70: invokeinterface #267,  6          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendUpdateRecord:(JB[BZ)V
      75: goto          134
      78: getstatic     #262                // Field trace:Z
      81: ifeq          115
      84: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      87: new           #144                // class java/lang/StringBuilder
      90: dup
      91: invokespecial #145                // Method java/lang/StringBuilder."<init>":()V
      94: ldc_w         #268                // String Endpoint append id =
      97: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_1
     101: invokevirtual #264                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getId:()J
     104: invokevirtual #224                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     107: invokevirtual #154                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #226,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
     115: aload_2
     116: aload_1
     117: invokevirtual #264                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getId:()J
     120: aload_1
     121: invokevirtual #265                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getJournalRecordType:()B
     124: aload_1
     125: invokevirtual #266                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage.getRecordData:()[B
     128: iconst_0
     129: invokeinterface #269,  6          // InterfaceMethod org/apache/activemq/artemis/core/journal/Journal.appendAddRecord:(JB[BZ)V
     134: return

  private void handlePageEvent(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationPageEventMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #270                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage.getStoreName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
       5: invokespecial #271                // Method getPageMap:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Ljava/util/concurrent/ConcurrentMap;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #272                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage.getPageNumber:()I
      14: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokeinterface #219,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #122                // class org/apache/activemq/artemis/core/paging/impl/Page
      25: astore_3
      26: aload_3
      27: ifnonnull     43
      30: aload_0
      31: aload_1
      32: invokevirtual #270                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage.getStoreName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      35: aload_1
      36: invokevirtual #272                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage.getPageNumber:()I
      39: invokespecial #180                // Method getPage:(Lorg/apache/activemq/artemis/api/core/SimpleString;I)Lorg/apache/activemq/artemis/core/paging/impl/Page;
      42: astore_3
      43: aload_3
      44: ifnull        74
      47: aload_1
      48: invokevirtual #274                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage.isDelete:()Z
      51: ifeq          70
      54: aload_0
      55: getfield      #13                 // Field deletePages:Z
      58: ifeq          74
      61: aload_3
      62: aconst_null
      63: invokevirtual #275                // Method org/apache/activemq/artemis/core/paging/impl/Page.delete:([Lorg/apache/activemq/artemis/core/paging/PagedMessage;)Z
      66: pop
      67: goto          74
      70: aload_3
      71: invokevirtual #124                // Method org/apache/activemq/artemis/core/paging/impl/Page.close:()V
      74: return

  private void handlePageWrite(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationPageWriteMessage) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #276                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageWriteMessage.getPagedMessage:()Lorg/apache/activemq/artemis/core/paging/PagedMessage;
       4: astore_2
       5: aload_2
       6: aload_0
       7: getfield      #73                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      10: invokeinterface #277,  2          // InterfaceMethod org/apache/activemq/artemis/core/paging/PagedMessage.initMessage:(Lorg/apache/activemq/artemis/core/persistence/StorageManager;)V
      15: aload_2
      16: invokeinterface #278,  1          // InterfaceMethod org/apache/activemq/artemis/core/paging/PagedMessage.getMessage:()Lorg/apache/activemq/artemis/core/server/ServerMessage;
      21: astore_3
      22: aload_0
      23: aload_3
      24: invokeinterface #279,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ServerMessage.getAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      29: aload_1
      30: invokevirtual #280                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageWriteMessage.getPageNumber:()I
      33: invokespecial #180                // Method getPage:(Lorg/apache/activemq/artemis/api/core/SimpleString;I)Lorg/apache/activemq/artemis/core/paging/impl/Page;
      36: astore        4
      38: aload         4
      40: aload_2
      41: invokevirtual #281                // Method org/apache/activemq/artemis/core/paging/impl/Page.write:(Lorg/apache/activemq/artemis/core/paging/PagedMessage;)V
      44: return

  private java.util.concurrent.ConcurrentMap<java.lang.Integer, org.apache.activemq.artemis.core.paging.impl.Page> getPageMap(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #11                 // Field pageIndex:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #220,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #121                // class java/util/concurrent/ConcurrentMap
      13: astore_2
      14: aload_2
      15: ifnonnull     47
      18: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #11                 // Field pageIndex:Ljava/util/concurrent/ConcurrentMap;
      30: aload_1
      31: aload_2
      32: invokeinterface #282,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #121                // class java/util/concurrent/ConcurrentMap
      40: astore_3
      41: aload_3
      42: ifnull        47
      45: aload_3
      46: astore_2
      47: aload_2
      48: areturn

  private org.apache.activemq.artemis.core.paging.impl.Page getPage(org.apache.activemq.artemis.api.core.SimpleString, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #271                // Method getPageMap:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Ljava/util/concurrent/ConcurrentMap;
       5: astore_3
       6: aload_3
       7: iload_2
       8: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #220,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #122                // class org/apache/activemq/artemis/core/paging/impl/Page
      19: astore        4
      21: aload         4
      23: ifnonnull     35
      26: aload_0
      27: iload_2
      28: aload_1
      29: aload_3
      30: invokespecial #283                // Method newPage:(ILorg/apache/activemq/artemis/api/core/SimpleString;Ljava/util/concurrent/ConcurrentMap;)Lorg/apache/activemq/artemis/core/paging/impl/Page;
      33: astore        4
      35: aload         4
      37: areturn

  private synchronized org.apache.activemq.artemis.core.paging.impl.Page newPage(int, org.apache.activemq.artemis.api.core.SimpleString, java.util.concurrent.ConcurrentMap<java.lang.Integer, org.apache.activemq.artemis.core.paging.impl.Page>) throws java.lang.Exception;
    Code:
       0: aload_3
       1: iload_1
       2: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokeinterface #220,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #122                // class org/apache/activemq/artemis/core/paging/impl/Page
      13: astore        4
      15: aload         4
      17: ifnonnull     56
      20: aload_0
      21: getfield      #101                // Field pageManager:Lorg/apache/activemq/artemis/core/paging/PagingManager;
      24: aload_2
      25: invokeinterface #284,  2          // InterfaceMethod org/apache/activemq/artemis/core/paging/PagingManager.getPageStore:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/paging/PagingStore;
      30: iload_1
      31: invokeinterface #285,  2          // InterfaceMethod org/apache/activemq/artemis/core/paging/PagingStore.createPage:(I)Lorg/apache/activemq/artemis/core/paging/impl/Page;
      36: astore        4
      38: aload         4
      40: invokevirtual #286                // Method org/apache/activemq/artemis/core/paging/impl/Page.open:()V
      43: aload_3
      44: iload_1
      45: invokestatic  #273                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aload         4
      50: invokeinterface #231,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload         4
      58: areturn

  private org.apache.activemq.artemis.core.journal.Journal getJournal(byte);
    Code:
       0: aload_0
       1: getfield      #18                 // Field journals:[Lorg/apache/activemq/artemis/core/journal/Journal;
       4: iload_1
       5: aaload
       6: areturn

  public synchronized void setBackupQuorum(org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
       5: return

  public void setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #129                // Field executor:Ljava/util/concurrent/Executor;
       5: return

  static {};
    Code:
       0: getstatic     #55                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: invokeinterface #287,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isTraceEnabled:()Z
       8: putstatic     #262                // Field trace:Z
      11: return
}
