Compiled from "ServerLocatorImpl.java"
public final class org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl implements org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal,org.apache.activemq.artemis.core.cluster.DiscoveryListener {
  private static final long serialVersionUID;

  private org.apache.activemq.artemis.spi.core.remoting.ClientProtocolManagerFactory protocolManagerFactory;

  private final boolean ha;

  private boolean finalizeCheck;

  private boolean clusterConnection;

  private transient java.lang.String identity;

  private final java.util.Set<org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal> factories;

  private final java.util.Set<org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal> connectingFactories;

  private volatile org.apache.activemq.artemis.api.core.TransportConfiguration[] initialConnectors;

  private final org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration discoveryGroupConfiguration;

  private final org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl$StaticConnector staticConnector;

  private final org.apache.activemq.artemis.core.client.impl.Topology topology;

  private final java.lang.Object topologyArrayGuard;

  private volatile org.apache.activemq.artemis.api.core.Pair<org.apache.activemq.artemis.api.core.TransportConfiguration, org.apache.activemq.artemis.api.core.TransportConfiguration>[] topologyArray;

  private volatile boolean receivedTopology;

  private boolean compressLargeMessage;

  private transient boolean shutdownPool;

  private transient java.util.concurrent.ExecutorService threadPool;

  private transient java.util.concurrent.ScheduledExecutorService scheduledThreadPool;

  private transient org.apache.activemq.artemis.core.cluster.DiscoveryGroup discoveryGroup;

  private transient org.apache.activemq.artemis.api.core.client.loadbalance.ConnectionLoadBalancingPolicy loadBalancingPolicy;

  private boolean cacheLargeMessagesClient;

  private long clientFailureCheckPeriod;

  private long connectionTTL;

  private long callTimeout;

  private long callFailoverTimeout;

  private int minLargeMessageSize;

  private int consumerWindowSize;

  private int consumerMaxRate;

  private int confirmationWindowSize;

  private int producerWindowSize;

  private int producerMaxRate;

  private boolean blockOnAcknowledge;

  private boolean blockOnDurableSend;

  private boolean blockOnNonDurableSend;

  private boolean autoGroup;

  private boolean preAcknowledge;

  private java.lang.String connectionLoadBalancingPolicyClassName;

  private int ackBatchSize;

  private boolean useGlobalPools;

  private int scheduledThreadPoolMaxSize;

  private int threadPoolMaxSize;

  private long retryInterval;

  private double retryIntervalMultiplier;

  private long maxRetryInterval;

  private int reconnectAttempts;

  private int initialConnectAttempts;

  private boolean failoverOnInitialConnection;

  private int initialMessagePacketSize;

  private final java.lang.Object stateGuard;

  private transient org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl$STATE state;

  private transient java.util.concurrent.CountDownLatch latch;

  private final java.util.List<org.apache.activemq.artemis.api.core.Interceptor> incomingInterceptors;

  private final java.util.List<org.apache.activemq.artemis.api.core.Interceptor> outgoingInterceptors;

  private java.util.concurrent.Executor startExecutor;

  private org.apache.activemq.artemis.core.client.impl.AfterConnectInternalListener afterConnectListener;

  private java.lang.String groupID;

  private java.lang.String nodeID;

  private org.apache.activemq.artemis.api.core.TransportConfiguration clusterTransportConfiguration;

  private final java.lang.Exception traceException;

  public static java.lang.Runnable finalizeCallback;

  public static synchronized void clearThreadPools();
    Code:
       0: invokestatic  #26                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.clearThreadPools:()V
       3: return

  private synchronized void setThreadPools();
    Code:
       0: aload_0
       1: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
       4: ifnull        8
       7: return
       8: aload_0
       9: getfield      #27                 // Field useGlobalPools:Z
      12: ifeq          32
      15: aload_0
      16: invokestatic  #28                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.getGlobalThreadPool:()Ljava/util/concurrent/ThreadPoolExecutor;
      19: putfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      22: aload_0
      23: invokestatic  #29                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.getGlobalScheduledThreadPool:()Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      26: putfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      29: goto          110
      32: aload_0
      33: iconst_1
      34: putfield      #30                 // Field shutdownPool:Z
      37: new           #31                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$1
      40: dup
      41: aload_0
      42: invokespecial #32                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$1."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;)V
      45: invokestatic  #33                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      48: checkcast     #34                 // class java/util/concurrent/ThreadFactory
      51: astore_1
      52: aload_0
      53: getfield      #35                 // Field threadPoolMaxSize:I
      56: iconst_m1
      57: if_icmpne     71
      60: aload_0
      61: aload_1
      62: invokestatic  #36                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      65: putfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      68: goto          83
      71: aload_0
      72: aload_0
      73: getfield      #35                 // Field threadPoolMaxSize:I
      76: aload_1
      77: invokestatic  #37                 // Method java/util/concurrent/Executors.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      80: putfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      83: new           #38                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$2
      86: dup
      87: aload_0
      88: invokespecial #39                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$2."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;)V
      91: invokestatic  #33                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      94: checkcast     #34                 // class java/util/concurrent/ThreadFactory
      97: astore_1
      98: aload_0
      99: aload_0
     100: getfield      #40                 // Field scheduledThreadPoolMaxSize:I
     103: aload_1
     104: invokestatic  #41                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
     107: putfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
     110: return

  public synchronized boolean setThreadPools(java.util.concurrent.ExecutorService, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      14: ifnonnull     46
      17: aload_0
      18: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      21: ifnonnull     46
      24: aload_0
      25: iconst_0
      26: putfield      #27                 // Field useGlobalPools:Z
      29: aload_0
      30: iconst_0
      31: putfield      #30                 // Field shutdownPool:Z
      34: aload_0
      35: aload_1
      36: putfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      39: aload_0
      40: aload_2
      41: putfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  private void instantiateLoadBalancingPolicy();
    Code:
       0: aload_0
       1: getfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #42                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String Please specify a load balancing policy class name on the session factory
      13: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #45                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$3
      20: dup
      21: aload_0
      22: invokespecial #46                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$3."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;)V
      25: invokestatic  #33                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      28: pop
      29: return

  private synchronized void initialise() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
       4: getstatic     #48                 // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.INITIALIZED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #49                 // Field stateGuard:Ljava/lang/Object;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      22: getstatic     #50                 // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.CLOSING:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      25: if_acmpne     36
      28: new           #51                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
      31: dup
      32: invokespecial #52                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":()V
      35: athrow
      36: aload_0
      37: getstatic     #48                 // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.INITIALIZED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      40: putfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      43: aload_0
      44: new           #53                 // class java/util/concurrent/CountDownLatch
      47: dup
      48: iconst_1
      49: invokespecial #54                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      52: putfield      #17                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      55: aload_0
      56: invokespecial #55                 // Method setThreadPools:()V
      59: aload_0
      60: invokespecial #56                 // Method instantiateLoadBalancingPolicy:()V
      63: aload_0
      64: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      67: ifnull        100
      70: aload_0
      71: aload_0
      72: getfield      #58                 // Field nodeID:Ljava/lang/String;
      75: aload_0
      76: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      79: invokestatic  #59                 // Method createDiscoveryGroup:(Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      82: putfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      85: aload_0
      86: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      89: aload_0
      90: invokevirtual #61                 // Method org/apache/activemq/artemis/core/cluster/DiscoveryGroup.registerListener:(Lorg/apache/activemq/artemis/core/cluster/DiscoveryListener;)V
      93: aload_0
      94: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      97: invokevirtual #62                 // Method org/apache/activemq/artemis/core/cluster/DiscoveryGroup.start:()V
     100: goto          119
     103: astore_2
     104: aload_0
     105: aconst_null
     106: putfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
     109: getstatic     #64                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
     112: aload_2
     113: invokeinterface #65,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.failedToInitialiseSessionFactory:(Ljava/lang/Exception;)Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
     118: athrow
     119: aload_1
     120: monitorexit
     121: goto          129
     124: astore_3
     125: aload_1
     126: monitorexit
     127: aload_3
     128: athrow
     129: return
    Exception table:
       from    to  target type
          36   100   103   Class java/lang/Exception
          18   121   124   any
         124   127   124   any

  private static org.apache.activemq.artemis.core.cluster.DiscoveryGroup createDiscoveryGroup(java.lang.String, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration) throws java.lang.Exception;
    Code:
       0: new           #66                 // class org/apache/activemq/artemis/core/cluster/DiscoveryGroup
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #67                 // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getName:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #68                 // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getRefreshTimeout:()J
      13: aload_1
      14: invokevirtual #69                 // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getBroadcastEndpointFactory:()Lorg/apache/activemq/artemis/api/core/BroadcastEndpointFactory;
      17: aconst_null
      18: invokespecial #70                 // Method org/apache/activemq/artemis/core/cluster/DiscoveryGroup."<init>":(Ljava/lang/String;Ljava/lang/String;JLorg/apache/activemq/artemis/api/core/BroadcastEndpointFactory;Lorg/apache/activemq/artemis/core/server/management/NotificationService;)V
      21: astore_2
      22: aload_2
      23: areturn

  private org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl(org.apache.activemq.artemis.core.client.impl.Topology, boolean, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration, org.apache.activemq.artemis.api.core.TransportConfiguration[]);
    Code:
       0: aload_0
       1: invokespecial #71                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokestatic  #72                 // Method org/apache/activemq/artemis/core/protocol/core/impl/ActiveMQClientProtocolManagerFactory.getInstance:(Lorg/apache/activemq/artemis/api/core/client/ServerLocator;)Lorg/apache/activemq/artemis/core/protocol/core/impl/ActiveMQClientProtocolManagerFactory;
       9: putfield      #73                 // Field protocolManagerFactory:Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
      12: aload_0
      13: iconst_1
      14: putfield      #3                  // Field finalizeCheck:Z
      17: aload_0
      18: new           #74                 // class java/util/HashSet
      21: dup
      22: invokespecial #75                 // Method java/util/HashSet."<init>":()V
      25: putfield      #76                 // Field factories:Ljava/util/Set;
      28: aload_0
      29: new           #74                 // class java/util/HashSet
      32: dup
      33: invokespecial #75                 // Method java/util/HashSet."<init>":()V
      36: putfield      #77                 // Field connectingFactories:Ljava/util/Set;
      39: aload_0
      40: new           #78                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #79                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$1;)V
      49: putfield      #80                 // Field staticConnector:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector;
      52: aload_0
      53: new           #81                 // class java/lang/Object
      56: dup
      57: invokespecial #71                 // Method java/lang/Object."<init>":()V
      60: putfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
      63: aload_0
      64: new           #81                 // class java/lang/Object
      67: dup
      68: invokespecial #71                 // Method java/lang/Object."<init>":()V
      71: putfield      #49                 // Field stateGuard:Ljava/lang/Object;
      74: aload_0
      75: new           #83                 // class java/util/concurrent/CopyOnWriteArrayList
      78: dup
      79: invokespecial #84                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      82: putfield      #5                  // Field incomingInterceptors:Ljava/util/List;
      85: aload_0
      86: new           #83                 // class java/util/concurrent/CopyOnWriteArrayList
      89: dup
      90: invokespecial #84                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      93: putfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
      96: aload_0
      97: new           #63                 // class java/lang/Exception
     100: dup
     101: invokespecial #85                 // Method java/lang/Exception."<init>":()V
     104: putfield      #16                 // Field traceException:Ljava/lang/Exception;
     107: aload_0
     108: getfield      #16                 // Field traceException:Ljava/lang/Exception;
     111: invokevirtual #86                 // Method java/lang/Exception.fillInStackTrace:()Ljava/lang/Throwable;
     114: pop
     115: aload_0
     116: aload_1
     117: ifnonnull     131
     120: new           #87                 // class org/apache/activemq/artemis/core/client/impl/Topology
     123: dup
     124: aload_0
     125: invokespecial #88                 // Method org/apache/activemq/artemis/core/client/impl/Topology."<init>":(Ljava/lang/Object;)V
     128: goto          132
     131: aload_1
     132: putfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     135: aload_0
     136: iload_2
     137: putfield      #90                 // Field ha:Z
     140: aload_0
     141: aload_3
     142: putfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
     145: aload_0
     146: aload         4
     148: ifnull        156
     151: aload         4
     153: goto          157
     156: aconst_null
     157: putfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     160: aload_0
     161: invokestatic  #91                 // Method org/apache/activemq/artemis/utils/UUIDGenerator.getInstance:()Lorg/apache/activemq/artemis/utils/UUIDGenerator;
     164: invokevirtual #92                 // Method org/apache/activemq/artemis/utils/UUIDGenerator.generateStringUUID:()Ljava/lang/String;
     167: putfield      #58                 // Field nodeID:Ljava/lang/String;
     170: aload_0
     171: getstatic     #93                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
     174: putfield      #12                 // Field clientFailureCheckPeriod:J
     177: aload_0
     178: getstatic     #94                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CONNECTION_TTL:J
     181: putfield      #11                 // Field connectionTTL:J
     184: aload_0
     185: ldc2_w        #96                 // long 30000l
     188: putfield      #14                 // Field callTimeout:J
     191: aload_0
     192: ldc2_w        #98                 // long -1l
     195: putfield      #13                 // Field callFailoverTimeout:J
     198: aload_0
     199: ldc           #100                // int 102400
     201: putfield      #101                // Field minLargeMessageSize:I
     204: aload_0
     205: ldc           #102                // int 1048576
     207: putfield      #103                // Field consumerWindowSize:I
     210: aload_0
     211: iconst_m1
     212: putfield      #104                // Field consumerMaxRate:I
     215: aload_0
     216: iconst_m1
     217: putfield      #105                // Field confirmationWindowSize:I
     220: aload_0
     221: ldc           #106                // int 65536
     223: putfield      #107                // Field producerWindowSize:I
     226: aload_0
     227: iconst_m1
     228: putfield      #108                // Field producerMaxRate:I
     231: aload_0
     232: iconst_0
     233: putfield      #109                // Field blockOnAcknowledge:Z
     236: aload_0
     237: iconst_1
     238: putfield      #110                // Field blockOnDurableSend:Z
     241: aload_0
     242: iconst_0
     243: putfield      #111                // Field blockOnNonDurableSend:Z
     246: aload_0
     247: iconst_0
     248: putfield      #112                // Field autoGroup:Z
     251: aload_0
     252: iconst_0
     253: putfield      #113                // Field preAcknowledge:Z
     256: aload_0
     257: ldc           #102                // int 1048576
     259: putfield      #114                // Field ackBatchSize:I
     262: aload_0
     263: getstatic     #115                // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME:Ljava/lang/String;
     266: putfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
     269: aload_0
     270: iconst_1
     271: putfield      #27                 // Field useGlobalPools:Z
     274: aload_0
     275: iconst_m1
     276: putfield      #35                 // Field threadPoolMaxSize:I
     279: aload_0
     280: iconst_5
     281: putfield      #40                 // Field scheduledThreadPoolMaxSize:I
     284: aload_0
     285: ldc2_w        #116                // long 2000l
     288: putfield      #18                 // Field retryInterval:J
     291: aload_0
     292: getstatic     #118                // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
     295: putfield      #10                 // Field retryIntervalMultiplier:D
     298: aload_0
     299: getstatic     #119                // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_MAX_RETRY_INTERVAL:J
     302: putfield      #9                  // Field maxRetryInterval:J
     305: aload_0
     306: iconst_0
     307: putfield      #8                  // Field reconnectAttempts:I
     310: aload_0
     311: iconst_1
     312: putfield      #19                 // Field initialConnectAttempts:I
     315: aload_0
     316: iconst_0
     317: putfield      #120                // Field failoverOnInitialConnection:Z
     320: aload_0
     321: iconst_0
     322: putfield      #121                // Field cacheLargeMessagesClient:Z
     325: aload_0
     326: sipush        1500
     329: putfield      #122                // Field initialMessagePacketSize:I
     332: aload_0
     333: iconst_0
     334: putfield      #121                // Field cacheLargeMessagesClient:Z
     337: aload_0
     338: iconst_0
     339: putfield      #123                // Field compressLargeMessage:Z
     342: aload_0
     343: iconst_0
     344: putfield      #21                 // Field clusterConnection:Z
     347: return

  public static org.apache.activemq.artemis.api.core.client.ServerLocator newLocator(java.lang.String);
    Code:
       0: new           #124                // class java/net/URI
       3: dup
       4: aload_0
       5: invokespecial #125                // Method java/net/URI."<init>":(Ljava/lang/String;)V
       8: invokestatic  #126                // Method newLocator:(Ljava/net/URI;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      11: areturn
      12: astore_1
      13: new           #127                // class java/lang/RuntimeException
      16: dup
      17: aload_1
      18: invokespecial #128                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Exception

  public static org.apache.activemq.artemis.api.core.client.ServerLocator newLocator(java.net.URI);
    Code:
       0: new           #129                // class org/apache/activemq/artemis/uri/ServerLocatorParser
       3: dup
       4: invokespecial #130                // Method org/apache/activemq/artemis/uri/ServerLocatorParser."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: aconst_null
      11: invokevirtual #131                // Method org/apache/activemq/artemis/uri/ServerLocatorParser.newObject:(Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #132                // class org/apache/activemq/artemis/api/core/client/ServerLocator
      17: areturn
      18: astore_1
      19: new           #127                // class java/lang/RuntimeException
      22: dup
      23: aload_1
      24: invokespecial #128                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/Exception

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl(boolean, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: aload_0
       1: new           #87                 // class org/apache/activemq/artemis/core/client/impl/Topology
       4: dup
       5: aconst_null
       6: invokespecial #88                 // Method org/apache/activemq/artemis/core/client/impl/Topology."<init>":(Ljava/lang/Object;)V
       9: iload_1
      10: aload_2
      11: aconst_null
      12: invokespecial #133                // Method "<init>":(Lorg/apache/activemq/artemis/core/client/impl/Topology;ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
      15: iload_1
      16: ifeq          27
      19: aload_0
      20: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      23: aload_0
      24: invokevirtual #134                // Method org/apache/activemq/artemis/core/client/impl/Topology.setOwner:(Ljava/lang/Object;)V
      27: return

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl(boolean, org.apache.activemq.artemis.api.core.TransportConfiguration...);
    Code:
       0: aload_0
       1: new           #87                 // class org/apache/activemq/artemis/core/client/impl/Topology
       4: dup
       5: aconst_null
       6: invokespecial #88                 // Method org/apache/activemq/artemis/core/client/impl/Topology."<init>":(Ljava/lang/Object;)V
       9: iload_1
      10: aconst_null
      11: aload_2
      12: invokespecial #133                // Method "<init>":(Lorg/apache/activemq/artemis/core/client/impl/Topology;ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
      15: iload_1
      16: ifeq          27
      19: aload_0
      20: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      23: aload_0
      24: invokevirtual #134                // Method org/apache/activemq/artemis/core/client/impl/Topology.setOwner:(Ljava/lang/Object;)V
      27: return

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl(org.apache.activemq.artemis.core.client.impl.Topology, boolean, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #133                // Method "<init>":(Lorg/apache/activemq/artemis/core/client/impl/Topology;ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
       8: return

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl(org.apache.activemq.artemis.core.client.impl.Topology, boolean, org.apache.activemq.artemis.api.core.TransportConfiguration...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: aload_3
       5: invokespecial #133                // Method "<init>":(Lorg/apache/activemq/artemis/core/client/impl/Topology;ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
       8: return

  public void resetToInitialConnectors();
    Code:
       0: aload_0
       1: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_0
       9: putfield      #135                // Field receivedTopology:Z
      12: aload_0
      13: aconst_null
      14: putfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
      17: aload_0
      18: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      21: invokevirtual #137                // Method org/apache/activemq/artemis/core/client/impl/Topology.clear:()V
      24: aload_1
      25: monitorexit
      26: goto          34
      29: astore_2
      30: aload_1
      31: monitorexit
      32: aload_2
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    26    29   any
          29    32    29   any

  public boolean allInVM();
    Code:
       0: aload_0
       1: invokevirtual #138                // Method getStaticTransportConfigurations:()[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     41
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #139                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getFactoryClassName:()Ljava/lang/String;
      25: ldc           #140                // String InVMConnectorFactory
      27: invokevirtual #141                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      30: ifne          35
      33: iconst_0
      34: ireturn
      35: iinc          3, 1
      38: goto          10
      41: iconst_1
      42: ireturn

  private org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: invokespecial #71                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokestatic  #72                 // Method org/apache/activemq/artemis/core/protocol/core/impl/ActiveMQClientProtocolManagerFactory.getInstance:(Lorg/apache/activemq/artemis/api/core/client/ServerLocator;)Lorg/apache/activemq/artemis/core/protocol/core/impl/ActiveMQClientProtocolManagerFactory;
       9: putfield      #73                 // Field protocolManagerFactory:Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
      12: aload_0
      13: iconst_1
      14: putfield      #3                  // Field finalizeCheck:Z
      17: aload_0
      18: new           #74                 // class java/util/HashSet
      21: dup
      22: invokespecial #75                 // Method java/util/HashSet."<init>":()V
      25: putfield      #76                 // Field factories:Ljava/util/Set;
      28: aload_0
      29: new           #74                 // class java/util/HashSet
      32: dup
      33: invokespecial #75                 // Method java/util/HashSet."<init>":()V
      36: putfield      #77                 // Field connectingFactories:Ljava/util/Set;
      39: aload_0
      40: new           #78                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #79                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$1;)V
      49: putfield      #80                 // Field staticConnector:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector;
      52: aload_0
      53: new           #81                 // class java/lang/Object
      56: dup
      57: invokespecial #71                 // Method java/lang/Object."<init>":()V
      60: putfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
      63: aload_0
      64: new           #81                 // class java/lang/Object
      67: dup
      68: invokespecial #71                 // Method java/lang/Object."<init>":()V
      71: putfield      #49                 // Field stateGuard:Ljava/lang/Object;
      74: aload_0
      75: new           #83                 // class java/util/concurrent/CopyOnWriteArrayList
      78: dup
      79: invokespecial #84                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      82: putfield      #5                  // Field incomingInterceptors:Ljava/util/List;
      85: aload_0
      86: new           #83                 // class java/util/concurrent/CopyOnWriteArrayList
      89: dup
      90: invokespecial #84                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      93: putfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
      96: aload_0
      97: new           #63                 // class java/lang/Exception
     100: dup
     101: invokespecial #85                 // Method java/lang/Exception."<init>":()V
     104: putfield      #16                 // Field traceException:Ljava/lang/Exception;
     107: aload_0
     108: aload_1
     109: getfield      #90                 // Field ha:Z
     112: putfield      #90                 // Field ha:Z
     115: aload_0
     116: aload_1
     117: getfield      #3                  // Field finalizeCheck:Z
     120: putfield      #3                  // Field finalizeCheck:Z
     123: aload_0
     124: aload_1
     125: getfield      #21                 // Field clusterConnection:Z
     128: putfield      #21                 // Field clusterConnection:Z
     131: aload_0
     132: aload_1
     133: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     136: putfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     139: aload_0
     140: aload_1
     141: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
     144: putfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
     147: aload_0
     148: aload_1
     149: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     152: putfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     155: aload_0
     156: aload_1
     157: getfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
     160: putfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
     163: aload_0
     164: aload_1
     165: getfield      #135                // Field receivedTopology:Z
     168: putfield      #135                // Field receivedTopology:Z
     171: aload_0
     172: aload_1
     173: getfield      #123                // Field compressLargeMessage:Z
     176: putfield      #123                // Field compressLargeMessage:Z
     179: aload_0
     180: aload_1
     181: getfield      #121                // Field cacheLargeMessagesClient:Z
     184: putfield      #121                // Field cacheLargeMessagesClient:Z
     187: aload_0
     188: aload_1
     189: getfield      #12                 // Field clientFailureCheckPeriod:J
     192: putfield      #12                 // Field clientFailureCheckPeriod:J
     195: aload_0
     196: aload_1
     197: getfield      #11                 // Field connectionTTL:J
     200: putfield      #11                 // Field connectionTTL:J
     203: aload_0
     204: aload_1
     205: getfield      #14                 // Field callTimeout:J
     208: putfield      #14                 // Field callTimeout:J
     211: aload_0
     212: aload_1
     213: getfield      #13                 // Field callFailoverTimeout:J
     216: putfield      #13                 // Field callFailoverTimeout:J
     219: aload_0
     220: aload_1
     221: getfield      #101                // Field minLargeMessageSize:I
     224: putfield      #101                // Field minLargeMessageSize:I
     227: aload_0
     228: aload_1
     229: getfield      #103                // Field consumerWindowSize:I
     232: putfield      #103                // Field consumerWindowSize:I
     235: aload_0
     236: aload_1
     237: getfield      #104                // Field consumerMaxRate:I
     240: putfield      #104                // Field consumerMaxRate:I
     243: aload_0
     244: aload_1
     245: getfield      #105                // Field confirmationWindowSize:I
     248: putfield      #105                // Field confirmationWindowSize:I
     251: aload_0
     252: aload_1
     253: getfield      #107                // Field producerWindowSize:I
     256: putfield      #107                // Field producerWindowSize:I
     259: aload_0
     260: aload_1
     261: getfield      #108                // Field producerMaxRate:I
     264: putfield      #108                // Field producerMaxRate:I
     267: aload_0
     268: aload_1
     269: getfield      #109                // Field blockOnAcknowledge:Z
     272: putfield      #109                // Field blockOnAcknowledge:Z
     275: aload_0
     276: aload_1
     277: getfield      #110                // Field blockOnDurableSend:Z
     280: putfield      #110                // Field blockOnDurableSend:Z
     283: aload_0
     284: aload_1
     285: getfield      #111                // Field blockOnNonDurableSend:Z
     288: putfield      #111                // Field blockOnNonDurableSend:Z
     291: aload_0
     292: aload_1
     293: getfield      #112                // Field autoGroup:Z
     296: putfield      #112                // Field autoGroup:Z
     299: aload_0
     300: aload_1
     301: getfield      #113                // Field preAcknowledge:Z
     304: putfield      #113                // Field preAcknowledge:Z
     307: aload_0
     308: aload_1
     309: getfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
     312: putfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
     315: aload_0
     316: aload_1
     317: getfield      #114                // Field ackBatchSize:I
     320: putfield      #114                // Field ackBatchSize:I
     323: aload_0
     324: aload_1
     325: getfield      #27                 // Field useGlobalPools:Z
     328: putfield      #27                 // Field useGlobalPools:Z
     331: aload_0
     332: aload_1
     333: getfield      #40                 // Field scheduledThreadPoolMaxSize:I
     336: putfield      #40                 // Field scheduledThreadPoolMaxSize:I
     339: aload_0
     340: aload_1
     341: getfield      #35                 // Field threadPoolMaxSize:I
     344: putfield      #35                 // Field threadPoolMaxSize:I
     347: aload_0
     348: aload_1
     349: getfield      #18                 // Field retryInterval:J
     352: putfield      #18                 // Field retryInterval:J
     355: aload_0
     356: aload_1
     357: getfield      #10                 // Field retryIntervalMultiplier:D
     360: putfield      #10                 // Field retryIntervalMultiplier:D
     363: aload_0
     364: aload_1
     365: getfield      #9                  // Field maxRetryInterval:J
     368: putfield      #9                  // Field maxRetryInterval:J
     371: aload_0
     372: aload_1
     373: getfield      #8                  // Field reconnectAttempts:I
     376: putfield      #8                  // Field reconnectAttempts:I
     379: aload_0
     380: aload_1
     381: getfield      #19                 // Field initialConnectAttempts:I
     384: putfield      #19                 // Field initialConnectAttempts:I
     387: aload_0
     388: aload_1
     389: getfield      #120                // Field failoverOnInitialConnection:Z
     392: putfield      #120                // Field failoverOnInitialConnection:Z
     395: aload_0
     396: aload_1
     397: getfield      #122                // Field initialMessagePacketSize:I
     400: putfield      #122                // Field initialMessagePacketSize:I
     403: aload_0
     404: aload_1
     405: getfield      #20                 // Field startExecutor:Ljava/util/concurrent/Executor;
     408: putfield      #20                 // Field startExecutor:Ljava/util/concurrent/Executor;
     411: aload_0
     412: aload_1
     413: getfield      #142                // Field afterConnectListener:Lorg/apache/activemq/artemis/core/client/impl/AfterConnectInternalListener;
     416: putfield      #142                // Field afterConnectListener:Lorg/apache/activemq/artemis/core/client/impl/AfterConnectInternalListener;
     419: aload_0
     420: aload_1
     421: getfield      #143                // Field groupID:Ljava/lang/String;
     424: putfield      #143                // Field groupID:Ljava/lang/String;
     427: aload_0
     428: aload_1
     429: getfield      #58                 // Field nodeID:Ljava/lang/String;
     432: putfield      #58                 // Field nodeID:Ljava/lang/String;
     435: aload_0
     436: aload_1
     437: getfield      #144                // Field clusterTransportConfiguration:Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     440: putfield      #144                // Field clusterTransportConfiguration:Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     443: return

  private org.apache.activemq.artemis.api.core.TransportConfiguration selectConnector();
    Code:
       0: aload_0
       1: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
      11: astore_1
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: aload_0
      23: dup
      24: astore_2
      25: monitorenter
      26: aload_1
      27: ifnull        79
      30: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      33: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.isTraceEnabled:()Z
      38: ifeq          51
      41: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      44: ldc           #147                // String Selecting connector from toplogy.
      46: invokeinterface #148,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.trace:(Ljava/lang/Object;)V
      51: aload_0
      52: getfield      #25                 // Field loadBalancingPolicy:Lorg/apache/activemq/artemis/api/core/client/loadbalance/ConnectionLoadBalancingPolicy;
      55: aload_1
      56: arraylength
      57: invokeinterface #149,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/loadbalance/ConnectionLoadBalancingPolicy.select:(I)I
      62: istore_3
      63: aload_1
      64: iload_3
      65: aaload
      66: astore        4
      68: aload         4
      70: invokevirtual #150                // Method org/apache/activemq/artemis/api/core/Pair.getA:()Ljava/lang/Object;
      73: checkcast     #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      76: aload_2
      77: monitorexit
      78: areturn
      79: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      82: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.isTraceEnabled:()Z
      87: ifeq          100
      90: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      93: ldc           #152                // String Selecting connector from initial connectors.
      95: invokeinterface #148,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.trace:(Ljava/lang/Object;)V
     100: aload_0
     101: getfield      #25                 // Field loadBalancingPolicy:Lorg/apache/activemq/artemis/api/core/client/loadbalance/ConnectionLoadBalancingPolicy;
     104: aload_0
     105: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     108: arraylength
     109: invokeinterface #149,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/loadbalance/ConnectionLoadBalancingPolicy.select:(I)I
     114: istore_3
     115: aload_0
     116: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     119: iload_3
     120: aaload
     121: aload_2
     122: monitorexit
     123: areturn
     124: astore        5
     126: aload_2
     127: monitorexit
     128: aload         5
     130: athrow
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any
          26    78   124   any
          79   123   124   any
         124   128   124   any

  public void start(java.util.concurrent.Executor) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #22                 // Method initialise:()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field startExecutor:Ljava/util/concurrent/Executor;
       9: aload_1
      10: ifnull        27
      13: aload_1
      14: new           #153                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$4
      17: dup
      18: aload_0
      19: invokespecial #154                // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$4."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;)V
      22: invokeinterface #155,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      27: return

  public org.apache.activemq.artemis.spi.core.remoting.ClientProtocolManager newProtocolManager();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method getProtocolManagerFactory:()Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
       4: invokeinterface #157,  1          // InterfaceMethod org/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory.newProtocolManager:()Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManager;
       9: areturn

  public org.apache.activemq.artemis.spi.core.remoting.ClientProtocolManagerFactory getProtocolManagerFactory();
    Code:
       0: aload_0
       1: getfield      #73                 // Field protocolManagerFactory:Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokestatic  #72                 // Method org/apache/activemq/artemis/core/protocol/core/impl/ActiveMQClientProtocolManagerFactory.getInstance:(Lorg/apache/activemq/artemis/api/core/client/ServerLocator;)Lorg/apache/activemq/artemis/core/protocol/core/impl/ActiveMQClientProtocolManagerFactory;
      12: putfield      #73                 // Field protocolManagerFactory:Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
      15: aload_0
      16: getfield      #73                 // Field protocolManagerFactory:Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
      19: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setProtocolManagerFactory(org.apache.activemq.artemis.spi.core.remoting.ClientProtocolManagerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field protocolManagerFactory:Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;
       5: aload_1
       6: aload_0
       7: invokeinterface #158,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory.setLocator:(Lorg/apache/activemq/artemis/api/core/client/ServerLocator;)V
      12: aload_0
      13: areturn

  public void disableFinalizeCheck();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field finalizeCheck:Z
       5: return

  public org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal connect() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #159                // Method connect:(Z)Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       5: areturn

  private org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal connect(boolean) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: invokespecial #160                // Method getNumInitialConnectors:()I
      10: ifle          32
      13: aload_0
      14: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      17: ifnonnull     32
      20: aload_0
      21: getfield      #80                 // Field staticConnector:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector;
      24: iload_1
      25: invokevirtual #161                // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector.connect:(Z)Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
      28: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
      31: astore_2
      32: aload_3
      33: monitorexit
      34: goto          44
      37: astore        4
      39: aload_3
      40: monitorexit
      41: aload         4
      43: athrow
      44: aload_2
      45: ifnull        55
      48: aload_0
      49: aload_2
      50: invokespecial #163                // Method addFactory:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
      53: aload_2
      54: areturn
      55: aload_0
      56: invokevirtual #164                // Method createSessionFactory:()Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
      59: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
      62: areturn
    Exception table:
       from    to  target type
           6    34    37   any
          37    41    37   any

  public org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal connectNoWarnings() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #159                // Method connect:(Z)Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       5: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setAfterConnectionInternalListener(org.apache.activemq.artemis.core.client.impl.AfterConnectInternalListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field afterConnectListener:Lorg/apache/activemq/artemis/core/client/impl/AfterConnectInternalListener;
       5: aload_0
       6: areturn

  public org.apache.activemq.artemis.core.client.impl.AfterConnectInternalListener getAfterConnectInternalListener();
    Code:
       0: aload_0
       1: getfield      #142                // Field afterConnectListener:Lorg/apache/activemq/artemis/core/client/impl/AfterConnectInternalListener;
       4: areturn

  public org.apache.activemq.artemis.api.core.client.ClientSessionFactory createSessionFactory(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
       4: aload_1
       5: invokevirtual #165                // Method org/apache/activemq/artemis/core/client/impl/Topology.getMember:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/TopologyMemberImpl;
       8: astore_2
       9: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      12: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.isTraceEnabled:()Z
      17: ifeq          71
      20: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      23: new           #166                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #167                // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #168                // String Creating connection factory towards
      32: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #170                // String  =
      41: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_2
      45: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #172                // String , topology=
      50: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      57: invokevirtual #173                // Method org/apache/activemq/artemis/core/client/impl/Topology.describe:()Ljava/lang/String;
      60: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #148,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.trace:(Ljava/lang/Object;)V
      71: aload_2
      72: ifnonnull     77
      75: aconst_null
      76: areturn
      77: aload_2
      78: invokeinterface #175,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      83: ifnull        129
      86: aload_0
      87: aload_2
      88: invokeinterface #175,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      93: invokevirtual #176                // Method createSessionFactory:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
      96: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
      99: astore_3
     100: aload_2
     101: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     106: ifnull        127
     109: aload_3
     110: aload_2
     111: invokeinterface #175,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     116: aload_2
     117: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     122: invokeinterface #178,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.setBackupConnector:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
     127: aload_3
     128: areturn
     129: aload_2
     130: invokeinterface #175,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     135: ifnonnull     163
     138: aload_2
     139: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     144: ifnull        163
     147: aload_0
     148: aload_2
     149: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     154: invokevirtual #176                // Method createSessionFactory:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
     157: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
     160: astore_3
     161: aload_3
     162: areturn
     163: aconst_null
     164: areturn

  public org.apache.activemq.artemis.api.core.client.ClientSessionFactory createSessionFactory(org.apache.activemq.artemis.api.core.TransportConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method assertOpen:()V
       4: aload_0
       5: invokespecial #22                 // Method initialise:()V
       8: new           #179                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl
      11: dup
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #14                 // Field callTimeout:J
      18: aload_0
      19: getfield      #13                 // Field callFailoverTimeout:J
      22: aload_0
      23: getfield      #12                 // Field clientFailureCheckPeriod:J
      26: aload_0
      27: getfield      #11                 // Field connectionTTL:J
      30: aload_0
      31: getfield      #18                 // Field retryInterval:J
      34: aload_0
      35: getfield      #10                 // Field retryIntervalMultiplier:D
      38: aload_0
      39: getfield      #9                  // Field maxRetryInterval:J
      42: aload_0
      43: getfield      #8                  // Field reconnectAttempts:I
      46: aload_0
      47: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      50: aload_0
      51: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      54: aload_0
      55: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
      58: aload_0
      59: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
      62: invokespecial #180                // Method org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;JJJJJDJILjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/List;Ljava/util/List;)V
      65: astore_2
      66: aload_0
      67: aload_2
      68: invokespecial #2                  // Method addToConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
      71: aload_2
      72: aload_0
      73: getfield      #8                  // Field reconnectAttempts:I
      76: aload_0
      77: getfield      #120                // Field failoverOnInitialConnection:Z
      80: invokeinterface #181,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.connect:(IZ)V
      85: goto          97
      88: astore_3
      89: aload_2
      90: invokeinterface #183,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
      95: aload_3
      96: athrow
      97: aload_0
      98: aload_2
      99: invokespecial #163                // Method addFactory:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     102: aload_2
     103: astore_3
     104: aload_0
     105: aload_2
     106: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     109: aload_3
     110: areturn
     111: astore        4
     113: aload_0
     114: aload_2
     115: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     118: aload         4
     120: athrow
    Exception table:
       from    to  target type
          71    85    88   Class org/apache/activemq/artemis/api/core/ActiveMQException
          71   104   111   any
         111   113   111   any

  public org.apache.activemq.artemis.api.core.client.ClientSessionFactory createSessionFactory(org.apache.activemq.artemis.api.core.TransportConfiguration, int, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method assertOpen:()V
       4: aload_0
       5: invokespecial #22                 // Method initialise:()V
       8: new           #179                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl
      11: dup
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #14                 // Field callTimeout:J
      18: aload_0
      19: getfield      #13                 // Field callFailoverTimeout:J
      22: aload_0
      23: getfield      #12                 // Field clientFailureCheckPeriod:J
      26: aload_0
      27: getfield      #11                 // Field connectionTTL:J
      30: aload_0
      31: getfield      #18                 // Field retryInterval:J
      34: aload_0
      35: getfield      #10                 // Field retryIntervalMultiplier:D
      38: aload_0
      39: getfield      #9                  // Field maxRetryInterval:J
      42: iload_2
      43: aload_0
      44: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
      47: aload_0
      48: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
      51: aload_0
      52: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
      55: aload_0
      56: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
      59: invokespecial #180                // Method org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;JJJJJDJILjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/List;Ljava/util/List;)V
      62: astore        4
      64: aload_0
      65: aload         4
      67: invokespecial #2                  // Method addToConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
      70: aload         4
      72: iload_2
      73: iload_3
      74: invokeinterface #181,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.connect:(IZ)V
      79: goto          94
      82: astore        5
      84: aload         4
      86: invokeinterface #183,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
      91: aload         5
      93: athrow
      94: aload_0
      95: aload         4
      97: invokespecial #163                // Method addFactory:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     100: aload         4
     102: astore        5
     104: aload_0
     105: aload         4
     107: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     110: aload         5
     112: areturn
     113: astore        6
     115: aload_0
     116: aload         4
     118: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     121: aload         6
     123: athrow
    Exception table:
       from    to  target type
          70    79    82   Class org/apache/activemq/artemis/api/core/ActiveMQException
          70   104   113   any
         113   115   113   any

  private void removeFromConnecting(org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_0
       1: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #184,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  private void addToConnecting(org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_0
       1: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: invokespecial #23                 // Method assertOpen:()V
      11: aload_0
      12: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #185,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    30    27   any

  public org.apache.activemq.artemis.api.core.client.ClientSessionFactory createSessionFactory() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method assertOpen:()V
       4: aload_0
       5: invokespecial #22                 // Method initialise:()V
       8: aload_0
       9: invokespecial #160                // Method getNumInitialConnectors:()I
      12: ifne          63
      15: aload_0
      16: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      19: ifnull        63
      22: aload_0
      23: getfield      #21                 // Field clusterConnection:Z
      26: ifeq          33
      29: lconst_0
      30: goto          40
      33: aload_0
      34: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      37: invokevirtual #186                // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getDiscoveryInitialWaitTimeout:()J
      40: lstore_1
      41: aload_0
      42: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
      45: lload_1
      46: invokevirtual #187                // Method org/apache/activemq/artemis/core/cluster/DiscoveryGroup.waitForBroadcast:(J)Z
      49: istore_3
      50: iload_3
      51: ifne          63
      54: getstatic     #64                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
      57: invokeinterface #188,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.connectionTimedOutInInitialBroadcast:()Lorg/apache/activemq/artemis/api/core/ActiveMQConnectionTimedOutException;
      62: athrow
      63: aconst_null
      64: astore_1
      65: aload_0
      66: dup
      67: astore_2
      68: monitorenter
      69: iconst_0
      70: istore        4
      72: iconst_0
      73: istore_3
      74: aload_0
      75: invokespecial #189                // Method selectConnector:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      78: astore        5
      80: aload         5
      82: ifnonnull     94
      85: getstatic     #64                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
      88: invokeinterface #190,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.noTCForSessionFactory:()Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
      93: athrow
      94: new           #179                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl
      97: dup
      98: aload_0
      99: aload         5
     101: aload_0
     102: getfield      #14                 // Field callTimeout:J
     105: aload_0
     106: getfield      #13                 // Field callFailoverTimeout:J
     109: aload_0
     110: getfield      #12                 // Field clientFailureCheckPeriod:J
     113: aload_0
     114: getfield      #11                 // Field connectionTTL:J
     117: aload_0
     118: getfield      #18                 // Field retryInterval:J
     121: aload_0
     122: getfield      #10                 // Field retryIntervalMultiplier:D
     125: aload_0
     126: getfield      #9                  // Field maxRetryInterval:J
     129: aload_0
     130: getfield      #8                  // Field reconnectAttempts:I
     133: aload_0
     134: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
     137: aload_0
     138: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
     141: aload_0
     142: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
     145: aload_0
     146: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
     149: invokespecial #180                // Method org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;JJJJJDJILjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/List;Ljava/util/List;)V
     152: astore_1
     153: aload_0
     154: aload_1
     155: invokespecial #2                  // Method addToConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     158: aload_1
     159: aload_0
     160: getfield      #19                 // Field initialConnectAttempts:I
     163: aload_0
     164: getfield      #120                // Field failoverOnInitialConnection:Z
     167: invokeinterface #181,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.connect:(IZ)V
     172: aload_0
     173: aload_1
     174: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     177: goto          190
     180: astore        6
     182: aload_0
     183: aload_1
     184: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     187: aload         6
     189: athrow
     190: goto          298
     193: astore        6
     195: aload_1
     196: invokeinterface #183,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
     201: aconst_null
     202: astore_1
     203: aload         6
     205: invokevirtual #191                // Method org/apache/activemq/artemis/api/core/ActiveMQException.getType:()Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
     208: getstatic     #192                // Field org/apache/activemq/artemis/api/core/ActiveMQExceptionType.NOT_CONNECTED:Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
     211: if_acmpne     295
     214: iinc          4, 1
     217: aload_0
     218: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
     221: dup
     222: astore        7
     224: monitorenter
     225: aload_0
     226: getfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
     229: ifnull        251
     232: iload         4
     234: aload_0
     235: getfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
     238: arraylength
     239: if_icmpne     251
     242: getstatic     #64                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
     245: invokeinterface #193,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.cannotConnectToServers:()Lorg/apache/activemq/artemis/api/core/ActiveMQNotConnectedException;
     250: athrow
     251: aload_0
     252: getfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
     255: ifnonnull     276
     258: iload         4
     260: aload_0
     261: invokespecial #160                // Method getNumInitialConnectors:()I
     264: if_icmpne     276
     267: getstatic     #64                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
     270: invokeinterface #193,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.cannotConnectToServers:()Lorg/apache/activemq/artemis/api/core/ActiveMQNotConnectedException;
     275: athrow
     276: aload         7
     278: monitorexit
     279: goto          290
     282: astore        8
     284: aload         7
     286: monitorexit
     287: aload         8
     289: athrow
     290: iconst_1
     291: istore_3
     292: goto          298
     295: aload         6
     297: athrow
     298: iload_3
     299: ifne          72
     302: aload_2
     303: monitorexit
     304: goto          314
     307: astore        9
     309: aload_2
     310: monitorexit
     311: aload         9
     313: athrow
     314: aload_0
     315: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
     318: dup
     319: astore_2
     320: monitorenter
     321: invokestatic  #194                // Method java/lang/System.currentTimeMillis:()J
     324: aload_0
     325: getfield      #14                 // Field callTimeout:J
     328: ladd
     329: lstore_3
     330: aload_0
     331: invokevirtual #195                // Method isClosed:()Z
     334: ifne          377
     337: aload_0
     338: getfield      #135                // Field receivedTopology:Z
     341: ifne          377
     344: lload_3
     345: invokestatic  #194                // Method java/lang/System.currentTimeMillis:()J
     348: lcmp
     349: ifle          377
     352: aload_0
     353: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
     356: ldc2_w        #196                // long 1000l
     359: invokevirtual #198                // Method java/lang/Object.wait:(J)V
     362: goto          330
     365: astore        5
     367: new           #200                // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     370: dup
     371: aload         5
     373: invokespecial #201                // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     376: athrow
     377: lload_3
     378: invokestatic  #194                // Method java/lang/System.currentTimeMillis:()J
     381: lcmp
     382: ifle          389
     385: iconst_1
     386: goto          390
     389: iconst_0
     390: istore        5
     392: iload         5
     394: ifne          427
     397: aload_0
     398: getfield      #135                // Field receivedTopology:Z
     401: ifne          427
     404: aload_1
     405: ifnull        414
     408: aload_1
     409: invokeinterface #202,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.cleanup:()V
     414: getstatic     #64                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
     417: aload_0
     418: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
     421: invokeinterface #203,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.connectionTimedOutOnReceiveTopology:(Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;)Lorg/apache/activemq/artemis/api/core/ActiveMQConnectionTimedOutException;
     426: athrow
     427: aload_2
     428: monitorexit
     429: goto          439
     432: astore        10
     434: aload_2
     435: monitorexit
     436: aload         10
     438: athrow
     439: aload_0
     440: aload_1
     441: invokespecial #163                // Method addFactory:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
     444: aload_1
     445: areturn
    Exception table:
       from    to  target type
         153   172   180   any
         180   182   180   any
          94   190   193   Class org/apache/activemq/artemis/api/core/ActiveMQException
         225   279   282   any
         282   287   282   any
          69   304   307   any
         307   311   307   any
         352   362   365   Class java/lang/InterruptedException
         321   429   432   any
         432   436   432   any

  public boolean isHA();
    Code:
       0: aload_0
       1: getfield      #90                 // Field ha:Z
       4: ireturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setIncomingInterceptorList(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
       5: aload_1
       6: invokespecial #204                // Method feedInterceptors:(Ljava/util/List;Ljava/lang/String;)V
       9: aload_0
      10: areturn

  public java.lang.String getIncomingInterceptorList();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
       5: invokespecial #205                // Method fromInterceptors:(Ljava/util/List;)Ljava/lang/String;
       8: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setOutgoingInterceptorList(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
       5: aload_1
       6: invokespecial #204                // Method feedInterceptors:(Ljava/util/List;Ljava/lang/String;)V
       9: aload_0
      10: areturn

  public java.lang.String getOutgoingInterceptorList();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
       5: invokespecial #205                // Method fromInterceptors:(Ljava/util/List;)Ljava/lang/String;
       8: areturn

  public boolean isCacheLargeMessagesClient();
    Code:
       0: aload_0
       1: getfield      #121                // Field cacheLargeMessagesClient:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setCacheLargeMessagesClient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #121                // Field cacheLargeMessagesClient:Z
       5: aload_0
       6: areturn

  public long getClientFailureCheckPeriod();
    Code:
       0: aload_0
       1: getfield      #12                 // Field clientFailureCheckPeriod:J
       4: lreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setClientFailureCheckPeriod(long);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: lload_1
       6: putfield      #12                 // Field clientFailureCheckPeriod:J
       9: aload_0
      10: areturn

  public long getConnectionTTL();
    Code:
       0: aload_0
       1: getfield      #11                 // Field connectionTTL:J
       4: lreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setConnectionTTL(long);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: lload_1
       6: putfield      #11                 // Field connectionTTL:J
       9: aload_0
      10: areturn

  public long getCallTimeout();
    Code:
       0: aload_0
       1: getfield      #14                 // Field callTimeout:J
       4: lreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setCallTimeout(long);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: lload_1
       6: putfield      #14                 // Field callTimeout:J
       9: aload_0
      10: areturn

  public long getCallFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #13                 // Field callFailoverTimeout:J
       4: lreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setCallFailoverTimeout(long);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: lload_1
       6: putfield      #13                 // Field callFailoverTimeout:J
       9: aload_0
      10: areturn

  public int getMinLargeMessageSize();
    Code:
       0: aload_0
       1: getfield      #101                // Field minLargeMessageSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setMinLargeMessageSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #101                // Field minLargeMessageSize:I
       9: aload_0
      10: areturn

  public int getConsumerWindowSize();
    Code:
       0: aload_0
       1: getfield      #103                // Field consumerWindowSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setConsumerWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #103                // Field consumerWindowSize:I
       9: aload_0
      10: areturn

  public int getConsumerMaxRate();
    Code:
       0: aload_0
       1: getfield      #104                // Field consumerMaxRate:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setConsumerMaxRate(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #104                // Field consumerMaxRate:I
       9: aload_0
      10: areturn

  public int getConfirmationWindowSize();
    Code:
       0: aload_0
       1: getfield      #105                // Field confirmationWindowSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setConfirmationWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #105                // Field confirmationWindowSize:I
       9: aload_0
      10: areturn

  public int getProducerWindowSize();
    Code:
       0: aload_0
       1: getfield      #107                // Field producerWindowSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setProducerWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #107                // Field producerWindowSize:I
       9: aload_0
      10: areturn

  public int getProducerMaxRate();
    Code:
       0: aload_0
       1: getfield      #108                // Field producerMaxRate:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setProducerMaxRate(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #108                // Field producerMaxRate:I
       9: aload_0
      10: areturn

  public boolean isBlockOnAcknowledge();
    Code:
       0: aload_0
       1: getfield      #109                // Field blockOnAcknowledge:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setBlockOnAcknowledge(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #109                // Field blockOnAcknowledge:Z
       9: aload_0
      10: areturn

  public boolean isBlockOnDurableSend();
    Code:
       0: aload_0
       1: getfield      #110                // Field blockOnDurableSend:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setBlockOnDurableSend(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #110                // Field blockOnDurableSend:Z
       9: aload_0
      10: areturn

  public boolean isBlockOnNonDurableSend();
    Code:
       0: aload_0
       1: getfield      #111                // Field blockOnNonDurableSend:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setBlockOnNonDurableSend(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #111                // Field blockOnNonDurableSend:Z
       9: aload_0
      10: areturn

  public boolean isAutoGroup();
    Code:
       0: aload_0
       1: getfield      #112                // Field autoGroup:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setAutoGroup(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #112                // Field autoGroup:Z
       9: aload_0
      10: areturn

  public boolean isPreAcknowledge();
    Code:
       0: aload_0
       1: getfield      #113                // Field preAcknowledge:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setPreAcknowledge(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #113                // Field preAcknowledge:Z
       9: aload_0
      10: areturn

  public int getAckBatchSize();
    Code:
       0: aload_0
       1: getfield      #114                // Field ackBatchSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setAckBatchSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #114                // Field ackBatchSize:I
       9: aload_0
      10: areturn

  public boolean isUseGlobalPools();
    Code:
       0: aload_0
       1: getfield      #27                 // Field useGlobalPools:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setUseGlobalPools(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #27                 // Field useGlobalPools:Z
       9: aload_0
      10: areturn

  public int getScheduledThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #40                 // Field scheduledThreadPoolMaxSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setScheduledThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #40                 // Field scheduledThreadPoolMaxSize:I
       9: aload_0
      10: areturn

  public int getThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #35                 // Field threadPoolMaxSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #35                 // Field threadPoolMaxSize:I
       9: aload_0
      10: areturn

  public long getRetryInterval();
    Code:
       0: aload_0
       1: getfield      #18                 // Field retryInterval:J
       4: lreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: lload_1
       6: putfield      #18                 // Field retryInterval:J
       9: aload_0
      10: areturn

  public long getMaxRetryInterval();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxRetryInterval:J
       4: lreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setMaxRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: lload_1
       6: putfield      #9                  // Field maxRetryInterval:J
       9: aload_0
      10: areturn

  public double getRetryIntervalMultiplier();
    Code:
       0: aload_0
       1: getfield      #10                 // Field retryIntervalMultiplier:D
       4: dreturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setRetryIntervalMultiplier(double);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: dload_1
       6: putfield      #10                 // Field retryIntervalMultiplier:D
       9: aload_0
      10: areturn

  public int getReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #8                  // Field reconnectAttempts:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setReconnectAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #8                  // Field reconnectAttempts:I
       9: aload_0
      10: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setInitialConnectAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #19                 // Field initialConnectAttempts:I
       9: aload_0
      10: areturn

  public int getInitialConnectAttempts();
    Code:
       0: aload_0
       1: getfield      #19                 // Field initialConnectAttempts:I
       4: ireturn

  public boolean isFailoverOnInitialConnection();
    Code:
       0: aload_0
       1: getfield      #120                // Field failoverOnInitialConnection:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setFailoverOnInitialConnection(boolean);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #120                // Field failoverOnInitialConnection:Z
       9: aload_0
      10: areturn

  public java.lang.String getConnectionLoadBalancingPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setConnectionLoadBalancingPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
       9: aload_0
      10: areturn

  public org.apache.activemq.artemis.api.core.TransportConfiguration[] getStaticTransportConfigurations();
    Code:
       0: aload_0
       1: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       4: ifnonnull     12
       7: iconst_0
       8: anewarray     #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      11: areturn
      12: aload_0
      13: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      16: aload_0
      17: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      20: arraylength
      21: invokestatic  #207                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      24: checkcast     #208                // class "[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;"
      27: areturn

  public org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration getDiscoveryGroupConfiguration();
    Code:
       0: aload_0
       1: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
       4: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl addIncomingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #209,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl addOutgoingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #209,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public boolean removeIncomingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #210,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean removeOutgoingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #210,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public int getInitialMessagePacketSize();
    Code:
       0: aload_0
       1: getfield      #122                // Field initialMessagePacketSize:I
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setInitialMessagePacketSize(int);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #122                // Field initialMessagePacketSize:I
       9: aload_0
      10: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setGroupID(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #206                // Method checkWrite:()V
       4: aload_0
       5: aload_1
       6: putfield      #143                // Field groupID:Ljava/lang/String;
       9: aload_0
      10: areturn

  public java.lang.String getGroupID();
    Code:
       0: aload_0
       1: getfield      #143                // Field groupID:Ljava/lang/String;
       4: areturn

  public boolean isCompressLargeMessage();
    Code:
       0: aload_0
       1: getfield      #123                // Field compressLargeMessage:Z
       4: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setCompressLargeMessage(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #123                // Field compressLargeMessage:Z
       5: aload_0
       6: areturn

  private void checkWrite();
    Code:
       0: aload_0
       1: getfield      #49                 // Field stateGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      11: ifnull        34
      14: aload_0
      15: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      18: getstatic     #211                // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.CLOSED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      21: if_acmpeq     34
      24: new           #42                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #212                // String Cannot set attribute on SessionFactory after it has been used
      30: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_1
      35: monitorexit
      36: goto          44
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    42    39   any

  private int getNumInitialConnectors();
    Code:
       0: aload_0
       1: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      13: arraylength
      14: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setIdentity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #213                // Field identity:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setNodeID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field nodeID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getNodeID();
    Code:
       0: aload_0
       1: getfield      #58                 // Field nodeID:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setClusterConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field clusterConnection:Z
       5: aload_0
       6: areturn

  public boolean isClusterConnection();
    Code:
       0: aload_0
       1: getfield      #21                 // Field clusterConnection:Z
       4: ireturn

  public org.apache.activemq.artemis.api.core.TransportConfiguration getClusterTransportConfiguration();
    Code:
       0: aload_0
       1: getfield      #144                // Field clusterTransportConfiguration:Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       4: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl setClusterTransportConfiguration(org.apache.activemq.artemis.api.core.TransportConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #144                // Field clusterTransportConfiguration:Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       5: aload_0
       6: areturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #3                  // Field finalizeCheck:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #214                // Method close:()V
      11: aload_0
      12: invokespecial #215                // Method java/lang/Object.finalize:()V
      15: return

  public void cleanup();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #216                // Method doClose:(Z)V
       5: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #216                // Method doClose:(Z)V
       5: return

  private void doClose(boolean);
    Code:
       0: aload_0
       1: getfield      #49                 // Field stateGuard:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      11: getstatic     #211                // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.CLOSED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      14: if_acmpne     58
      17: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      20: invokeinterface #217,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.isDebugEnabled:()Z
      25: ifeq          55
      28: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      31: new           #166                // class java/lang/StringBuilder
      34: dup
      35: invokespecial #167                // Method java/lang/StringBuilder."<init>":()V
      38: aload_0
      39: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #218                // String  is already closed when calling closed
      44: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokeinterface #219,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.debug:(Ljava/lang/Object;)V
      55: aload_2
      56: monitorexit
      57: return
      58: aload_0
      59: getstatic     #50                 // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.CLOSING:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      62: putfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      65: aload_2
      66: monitorexit
      67: goto          75
      70: astore_3
      71: aload_2
      72: monitorexit
      73: aload_3
      74: athrow
      75: aload_0
      76: getfield      #17                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      79: ifnull        89
      82: aload_0
      83: getfield      #17                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      86: invokevirtual #220                // Method java/util/concurrent/CountDownLatch.countDown:()V
      89: aload_0
      90: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
      93: dup
      94: astore_2
      95: monitorenter
      96: aload_0
      97: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
     100: invokeinterface #221,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     105: astore_3
     106: aload_3
     107: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          136
     115: aload_3
     116: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
     124: astore        4
     126: aload         4
     128: invokeinterface #224,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.causeExit:()V
     133: goto          106
     136: aload_2
     137: monitorexit
     138: goto          148
     141: astore        5
     143: aload_2
     144: monitorexit
     145: aload         5
     147: athrow
     148: aload_0
     149: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
     152: ifnull        194
     155: aload_0
     156: dup
     157: astore_2
     158: monitorenter
     159: aload_0
     160: getfield      #60                 // Field discoveryGroup:Lorg/apache/activemq/artemis/core/cluster/DiscoveryGroup;
     163: invokevirtual #225                // Method org/apache/activemq/artemis/core/cluster/DiscoveryGroup.stop:()V
     166: goto          179
     169: astore_3
     170: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
     173: aload_3
     174: invokeinterface #226,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.failedToStopDiscovery:(Ljava/lang/Throwable;)V
     179: aload_2
     180: monitorexit
     181: goto          191
     184: astore        6
     186: aload_2
     187: monitorexit
     188: aload         6
     190: athrow
     191: goto          201
     194: aload_0
     195: getfield      #80                 // Field staticConnector:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector;
     198: invokevirtual #227                // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$StaticConnector.disconnect:()V
     201: aload_0
     202: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
     205: dup
     206: astore_2
     207: monitorenter
     208: aload_0
     209: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
     212: invokeinterface #221,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     217: astore_3
     218: aload_3
     219: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     224: ifeq          248
     227: aload_3
     228: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     233: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
     236: astore        4
     238: aload         4
     240: invokeinterface #224,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.causeExit:()V
     245: goto          218
     248: aload_0
     249: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
     252: invokeinterface #221,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     257: astore_3
     258: aload_3
     259: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     264: ifeq          288
     267: aload_3
     268: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     273: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
     276: astore        4
     278: aload         4
     280: invokeinterface #183,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
     285: goto          258
     288: aload_0
     289: getfield      #77                 // Field connectingFactories:Ljava/util/Set;
     292: invokeinterface #228,  1          // InterfaceMethod java/util/Set.clear:()V
     297: aload_2
     298: monitorexit
     299: goto          309
     302: astore        7
     304: aload_2
     305: monitorexit
     306: aload         7
     308: athrow
     309: aload_0
     310: getfield      #76                 // Field factories:Ljava/util/Set;
     313: dup
     314: astore_3
     315: monitorenter
     316: new           #74                 // class java/util/HashSet
     319: dup
     320: aload_0
     321: getfield      #76                 // Field factories:Ljava/util/Set;
     324: invokespecial #229                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     327: astore_2
     328: aload_0
     329: getfield      #76                 // Field factories:Ljava/util/Set;
     332: invokeinterface #228,  1          // InterfaceMethod java/util/Set.clear:()V
     337: aload_3
     338: monitorexit
     339: goto          349
     342: astore        8
     344: aload_3
     345: monitorexit
     346: aload         8
     348: athrow
     349: aload_2
     350: invokeinterface #221,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     355: astore_3
     356: aload_3
     357: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     362: ifeq          386
     365: aload_3
     366: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     371: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
     374: astore        4
     376: aload         4
     378: invokeinterface #224,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.causeExit:()V
     383: goto          356
     386: aload_2
     387: invokeinterface #221,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     392: astore_3
     393: aload_3
     394: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     399: ifeq          437
     402: aload_3
     403: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     408: checkcast     #230                // class org/apache/activemq/artemis/api/core/client/ClientSessionFactory
     411: astore        4
     413: iload_1
     414: ifeq          427
     417: aload         4
     419: invokeinterface #231,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ClientSessionFactory.close:()V
     424: goto          434
     427: aload         4
     429: invokeinterface #232,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ClientSessionFactory.cleanup:()V
     434: goto          393
     437: aload_0
     438: getfield      #30                 // Field shutdownPool:Z
     441: ifeq          554
     444: aload_0
     445: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
     448: ifnull        499
     451: aload_0
     452: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
     455: invokeinterface #233,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
     460: aload_0
     461: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
     464: ldc2_w        #234                // long 10000l
     467: getstatic     #236                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     470: invokeinterface #237,  4          // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     475: ifne          486
     478: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
     481: invokeinterface #238,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.timedOutWaitingForTermination:()V
     486: goto          499
     489: astore_3
     490: new           #200                // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     493: dup
     494: aload_3
     495: invokespecial #201                // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     498: athrow
     499: aload_0
     500: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
     503: ifnull        554
     506: aload_0
     507: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
     510: invokeinterface #239,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
     515: aload_0
     516: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
     519: ldc2_w        #234                // long 10000l
     522: getstatic     #236                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     525: invokeinterface #240,  4          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     530: ifne          541
     533: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
     536: invokeinterface #241,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.timedOutWaitingForScheduledPoolTermination:()V
     541: goto          554
     544: astore_3
     545: new           #200                // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     548: dup
     549: aload_3
     550: invokespecial #201                // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     553: athrow
     554: aload_0
     555: getfield      #49                 // Field stateGuard:Ljava/lang/Object;
     558: dup
     559: astore_3
     560: monitorenter
     561: aload_0
     562: getstatic     #211                // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.CLOSED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
     565: putfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
     568: aload_3
     569: monitorexit
     570: goto          580
     573: astore        9
     575: aload_3
     576: monitorexit
     577: aload         9
     579: athrow
     580: return
    Exception table:
       from    to  target type
           7    57    70   any
          58    67    70   any
          70    73    70   any
          96   138   141   any
         141   145   141   any
         159   166   169   Class java/lang/Exception
         159   181   184   any
         184   188   184   any
         208   299   302   any
         302   306   302   any
         316   339   342   any
         342   346   342   any
         460   486   489   Class java/lang/InterruptedException
         515   541   544   Class java/lang/InterruptedException
         561   570   573   any
         573   577   573   any

  public void notifyNodeDown(long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #90                 // Field ha:Z
       4: ifne          8
       7: return
       8: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      11: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.isTraceEnabled:()Z
      16: ifeq          69
      19: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      22: new           #166                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #167                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #242                // String nodeDown
      31: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #243                // String  nodeID=
      40: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_3
      44: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #244                // String  as being down
      49: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: new           #63                 // class java/lang/Exception
      58: dup
      59: ldc           #245                // String trace
      61: invokespecial #246                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      64: invokeinterface #247,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      69: aload_0
      70: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      73: lload_1
      74: aload_3
      75: invokevirtual #248                // Method org/apache/activemq/artemis/core/client/impl/Topology.removeMember:(JLjava/lang/String;)Z
      78: pop
      79: aload_0
      80: getfield      #21                 // Field clusterConnection:Z
      83: ifeq          93
      86: aload_0
      87: invokespecial #249                // Method updateArraysAndPairs:()V
      90: goto          172
      93: aload_0
      94: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
      97: dup
      98: astore        4
     100: monitorenter
     101: aload_0
     102: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     105: invokevirtual #250                // Method org/apache/activemq/artemis/core/client/impl/Topology.isEmpty:()Z
     108: ifeq          124
     111: aload_0
     112: iconst_0
     113: putfield      #135                // Field receivedTopology:Z
     116: aload_0
     117: aconst_null
     118: putfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
     121: goto          158
     124: aload_0
     125: invokespecial #249                // Method updateArraysAndPairs:()V
     128: aload_0
     129: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     132: invokevirtual #251                // Method org/apache/activemq/artemis/core/client/impl/Topology.nodes:()I
     135: iconst_1
     136: if_icmpne     158
     139: aload_0
     140: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     143: aload_0
     144: getfield      #58                 // Field nodeID:Ljava/lang/String;
     147: invokevirtual #165                // Method org/apache/activemq/artemis/core/client/impl/Topology.getMember:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/TopologyMemberImpl;
     150: ifnull        158
     153: aload_0
     154: iconst_0
     155: putfield      #135                // Field receivedTopology:Z
     158: aload         4
     160: monitorexit
     161: goto          172
     164: astore        5
     166: aload         4
     168: monitorexit
     169: aload         5
     171: athrow
     172: return
    Exception table:
       from    to  target type
         101   161   164   any
         164   169   164   any

  public void notifyNodeUp(long, java.lang.String, java.lang.String, java.lang.String, org.apache.activemq.artemis.api.core.Pair<org.apache.activemq.artemis.api.core.TransportConfiguration, org.apache.activemq.artemis.api.core.TransportConfiguration>, boolean);
    Code:
       0: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
       3: invokeinterface #146,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.isTraceEnabled:()Z
       8: ifeq          66
      11: getstatic     #145                // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      14: new           #166                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #167                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #252                // String NodeUp
      23: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #253                // String ::nodeID=
      32: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_3
      36: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #254                // String , connectorPair=
      41: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload         6
      46: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: new           #63                 // class java/lang/Exception
      55: dup
      56: ldc           #245                // String trace
      58: invokespecial #246                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      61: invokeinterface #247,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      66: new           #255                // class org/apache/activemq/artemis/core/client/impl/TopologyMemberImpl
      69: dup
      70: aload_3
      71: aload         4
      73: aload         5
      75: aload         6
      77: invokevirtual #150                // Method org/apache/activemq/artemis/api/core/Pair.getA:()Ljava/lang/Object;
      80: checkcast     #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      83: aload         6
      85: invokevirtual #256                // Method org/apache/activemq/artemis/api/core/Pair.getB:()Ljava/lang/Object;
      88: checkcast     #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      91: invokespecial #257                // Method org/apache/activemq/artemis/core/client/impl/TopologyMemberImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
      94: astore        8
      96: aload_0
      97: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     100: lload_1
     101: aload_3
     102: aload         8
     104: invokevirtual #258                // Method org/apache/activemq/artemis/core/client/impl/Topology.updateMember:(JLjava/lang/String;Lorg/apache/activemq/artemis/core/client/impl/TopologyMemberImpl;)Z
     107: pop
     108: aload_0
     109: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     112: aload_3
     113: invokevirtual #165                // Method org/apache/activemq/artemis/core/client/impl/Topology.getMember:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/TopologyMemberImpl;
     116: astore        9
     118: aload         9
     120: ifnull        240
     123: aload         9
     125: invokeinterface #175,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     130: ifnull        240
     133: aload         9
     135: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     140: ifnull        240
     143: new           #74                 // class java/util/HashSet
     146: dup
     147: invokespecial #75                 // Method java/util/HashSet."<init>":()V
     150: astore        10
     152: aload_0
     153: getfield      #76                 // Field factories:Ljava/util/Set;
     156: dup
     157: astore        11
     159: monitorenter
     160: aload         10
     162: aload_0
     163: getfield      #76                 // Field factories:Ljava/util/Set;
     166: invokevirtual #259                // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
     169: pop
     170: aload         11
     172: monitorexit
     173: goto          184
     176: astore        12
     178: aload         11
     180: monitorexit
     181: aload         12
     183: athrow
     184: aload         10
     186: invokevirtual #260                // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     189: astore        11
     191: aload         11
     193: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     198: ifeq          240
     201: aload         11
     203: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     208: checkcast     #230                // class org/apache/activemq/artemis/api/core/client/ClientSessionFactory
     211: astore        12
     213: aload         12
     215: checkcast     #162                // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
     218: aload         9
     220: invokeinterface #175,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     225: aload         9
     227: invokeinterface #177,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     232: invokeinterface #178,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.setBackupConnector:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
     237: goto          191
     240: aload_0
     241: invokespecial #249                // Method updateArraysAndPairs:()V
     244: iload         7
     246: ifeq          283
     249: aload_0
     250: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
     253: dup
     254: astore        10
     256: monitorenter
     257: aload_0
     258: iconst_1
     259: putfield      #135                // Field receivedTopology:Z
     262: aload_0
     263: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
     266: invokevirtual #261                // Method java/lang/Object.notifyAll:()V
     269: aload         10
     271: monitorexit
     272: goto          283
     275: astore        13
     277: aload         10
     279: monitorexit
     280: aload         13
     282: athrow
     283: return
    Exception table:
       from    to  target type
         160   173   176   any
         176   181   176   any
         257   272   275   any
         275   280   275   any

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #213                // Field identity:Ljava/lang/String;
       4: ifnull        80
       7: new           #166                // class java/lang/StringBuilder
      10: dup
      11: invokespecial #167                // Method java/lang/StringBuilder."<init>":()V
      14: ldc_w         #262                // String ServerLocatorImpl (identity=
      17: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: getfield      #213                // Field identity:Ljava/lang/String;
      24: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc_w         #263                // String ) [initialConnectors=
      30: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      37: ifnonnull     47
      40: iconst_0
      41: anewarray     #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      44: goto          51
      47: aload_0
      48: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      51: invokestatic  #264                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      54: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc_w         #265                // String , discoveryGroupConfiguration=
      60: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      67: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: ldc_w         #266                // String ]
      73: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn
      80: new           #166                // class java/lang/StringBuilder
      83: dup
      84: invokespecial #167                // Method java/lang/StringBuilder."<init>":()V
      87: ldc_w         #267                // String ServerLocatorImpl [initialConnectors=
      90: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      97: ifnonnull     107
     100: iconst_0
     101: anewarray     #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
     104: goto          111
     107: aload_0
     108: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     111: invokestatic  #264                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     114: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc_w         #265                // String , discoveryGroupConfiguration=
     120: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: getfield      #57                 // Field discoveryGroupConfiguration:Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
     127: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: ldc_w         #266                // String ]
     133: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: areturn

  private void updateArraysAndPairs();
    Code:
       0: aload_0
       1: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      11: invokevirtual #268                // Method org/apache/activemq/artemis/core/client/impl/Topology.getMembers:()Ljava/util/Collection;
      14: astore_2
      15: ldc_w         #269                // class org/apache/activemq/artemis/api/core/Pair
      18: aload_2
      19: invokeinterface #270,  1          // InterfaceMethod java/util/Collection.size:()I
      24: invokestatic  #271                // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      27: checkcast     #272                // class "[Lorg/apache/activemq/artemis/api/core/Pair;"
      30: checkcast     #272                // class "[Lorg/apache/activemq/artemis/api/core/Pair;"
      33: astore_3
      34: iconst_0
      35: istore        4
      37: aload_2
      38: invokeinterface #273,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      43: astore        5
      45: aload         5
      47: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          82
      55: aload         5
      57: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #255                // class org/apache/activemq/artemis/core/client/impl/TopologyMemberImpl
      65: astore        6
      67: aload_3
      68: iload         4
      70: iinc          4, 1
      73: aload         6
      75: invokevirtual #274                // Method org/apache/activemq/artemis/core/client/impl/TopologyMemberImpl.getConnector:()Lorg/apache/activemq/artemis/api/core/Pair;
      78: aastore
      79: goto          45
      82: aload_0
      83: aload_3
      84: putfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
      87: aload_1
      88: monitorexit
      89: goto          99
      92: astore        7
      94: aload_1
      95: monitorexit
      96: aload         7
      98: athrow
      99: return
    Exception table:
       from    to  target type
           7    89    92   any
          92    96    92   any

  public synchronized void connectorsChanged(java.util.List<org.apache.activemq.artemis.core.cluster.DiscoveryEntry>);
    Code:
       0: aload_0
       1: getfield      #135                // Field receivedTopology:Z
       4: ifeq          8
       7: return
       8: ldc           #151                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      10: aload_1
      11: invokeinterface #275,  1          // InterfaceMethod java/util/List.size:()I
      16: invokestatic  #271                // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      19: checkcast     #208                // class "[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;"
      22: checkcast     #208                // class "[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;"
      25: astore_2
      26: iconst_0
      27: istore_3
      28: aload_1
      29: invokeinterface #276,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore        4
      36: aload         4
      38: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          132
      46: aload         4
      48: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #277                // class org/apache/activemq/artemis/core/cluster/DiscoveryEntry
      56: astore        5
      58: aload_2
      59: iload_3
      60: iinc          3, 1
      63: aload         5
      65: invokevirtual #278                // Method org/apache/activemq/artemis/core/cluster/DiscoveryEntry.getConnector:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      68: aastore
      69: aload_0
      70: getfield      #90                 // Field ha:Z
      73: ifeq          129
      76: aload_0
      77: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      80: aload         5
      82: invokevirtual #279                // Method org/apache/activemq/artemis/core/cluster/DiscoveryEntry.getNodeID:()Ljava/lang/String;
      85: invokevirtual #165                // Method org/apache/activemq/artemis/core/client/impl/Topology.getMember:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/TopologyMemberImpl;
      88: ifnonnull     129
      91: new           #255                // class org/apache/activemq/artemis/core/client/impl/TopologyMemberImpl
      94: dup
      95: aload         5
      97: invokevirtual #279                // Method org/apache/activemq/artemis/core/cluster/DiscoveryEntry.getNodeID:()Ljava/lang/String;
     100: aconst_null
     101: aconst_null
     102: aload         5
     104: invokevirtual #278                // Method org/apache/activemq/artemis/core/cluster/DiscoveryEntry.getConnector:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     107: aconst_null
     108: invokespecial #257                // Method org/apache/activemq/artemis/core/client/impl/TopologyMemberImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
     111: astore        6
     113: aload_0
     114: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
     117: lconst_0
     118: aload         5
     120: invokevirtual #279                // Method org/apache/activemq/artemis/core/cluster/DiscoveryEntry.getNodeID:()Ljava/lang/String;
     123: aload         6
     125: invokevirtual #258                // Method org/apache/activemq/artemis/core/client/impl/Topology.updateMember:(JLjava/lang/String;Lorg/apache/activemq/artemis/core/client/impl/TopologyMemberImpl;)Z
     128: pop
     129: goto          36
     132: aload_0
     133: aload_2
     134: arraylength
     135: ifne          142
     138: aconst_null
     139: goto          143
     142: aload_2
     143: putfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     146: aload_0
     147: getfield      #21                 // Field clusterConnection:Z
     150: ifeq          205
     153: aload_0
     154: getfield      #135                // Field receivedTopology:Z
     157: ifne          205
     160: aload_0
     161: invokespecial #160                // Method getNumInitialConnectors:()I
     164: ifle          205
     167: new           #280                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$5
     170: dup
     171: aload_0
     172: invokespecial #281                // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$5."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;)V
     175: astore        4
     177: aload_0
     178: getfield      #20                 // Field startExecutor:Ljava/util/concurrent/Executor;
     181: ifnull        198
     184: aload_0
     185: getfield      #20                 // Field startExecutor:Ljava/util/concurrent/Executor;
     188: aload         4
     190: invokeinterface #155,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     195: goto          205
     198: aload         4
     200: invokeinterface #282,  1          // InterfaceMethod java/lang/Runnable.run:()V
     205: return

  public void factoryClosed(org.apache.activemq.artemis.api.core.client.ClientSessionFactory);
    Code:
       0: aload_0
       1: getfield      #76                 // Field factories:Ljava/util/Set;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #76                 // Field factories:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #184,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: getfield      #76                 // Field factories:Ljava/util/Set;
      22: invokeinterface #283,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      27: istore_2
      28: aload_3
      29: monitorexit
      30: goto          40
      33: astore        4
      35: aload_3
      36: monitorexit
      37: aload         4
      39: athrow
      40: aload_0
      41: getfield      #21                 // Field clusterConnection:Z
      44: ifne          80
      47: iload_2
      48: ifeq          80
      51: aload_0
      52: getfield      #82                 // Field topologyArrayGuard:Ljava/lang/Object;
      55: dup
      56: astore_3
      57: monitorenter
      58: aload_0
      59: iconst_0
      60: putfield      #135                // Field receivedTopology:Z
      63: aload_0
      64: aconst_null
      65: putfield      #136                // Field topologyArray:[Lorg/apache/activemq/artemis/api/core/Pair;
      68: aload_3
      69: monitorexit
      70: goto          80
      73: astore        5
      75: aload_3
      76: monitorexit
      77: aload         5
      79: athrow
      80: return
    Exception table:
       from    to  target type
           7    30    33   any
          33    37    33   any
          58    70    73   any
          73    77    73   any

  public org.apache.activemq.artemis.core.client.impl.Topology getTopology();
    Code:
       0: aload_0
       1: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
       4: areturn

  public boolean isConnectable();
    Code:
       0: aload_0
       1: invokespecial #160                // Method getNumInitialConnectors:()I
       4: ifgt          14
       7: aload_0
       8: invokevirtual #284                // Method getDiscoveryGroupConfiguration:()Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl addClusterTopologyListener(org.apache.activemq.artemis.api.core.client.ClusterTopologyListener);
    Code:
       0: aload_0
       1: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
       4: aload_1
       5: invokevirtual #285                // Method org/apache/activemq/artemis/core/client/impl/Topology.addClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)V
       8: aload_0
       9: areturn

  public void removeClusterTopologyListener(org.apache.activemq.artemis.api.core.client.ClusterTopologyListener);
    Code:
       0: aload_0
       1: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
       4: aload_1
       5: invokevirtual #286                // Method org/apache/activemq/artemis/core/client/impl/Topology.removeClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)V
       8: return

  private void addFactory(org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #195                // Method isClosed:()Z
       9: ifeq          19
      12: aload_1
      13: invokeinterface #183,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
      18: return
      19: aconst_null
      20: astore_2
      21: aload_0
      22: getfield      #90                 // Field ha:Z
      25: ifeq          45
      28: aload_0
      29: getfield      #89                 // Field topology:Lorg/apache/activemq/artemis/core/client/impl/Topology;
      32: aload_1
      33: invokeinterface #287,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getConnector:()Ljava/lang/Object;
      38: checkcast     #288                // class org/apache/activemq/artemis/spi/core/remoting/Connector
      41: invokevirtual #289                // Method org/apache/activemq/artemis/core/client/impl/Topology.getBackupForConnector:(Lorg/apache/activemq/artemis/spi/core/remoting/Connector;)Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      44: astore_2
      45: aload_1
      46: aload_1
      47: invokeinterface #290,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getConnectorConfiguration:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      52: aload_2
      53: invokeinterface #178,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.setBackupConnector:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
      58: aload_0
      59: getfield      #76                 // Field factories:Ljava/util/Set;
      62: dup
      63: astore_3
      64: monitorenter
      65: aload_0
      66: getfield      #76                 // Field factories:Ljava/util/Set;
      69: aload_1
      70: invokeinterface #185,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      75: pop
      76: aload_3
      77: monitorexit
      78: goto          88
      81: astore        4
      83: aload_3
      84: monitorexit
      85: aload         4
      87: athrow
      88: return
    Exception table:
       from    to  target type
          65    78    81   any
          81    85    81   any

  private void assertOpen();
    Code:
       0: aload_0
       1: getfield      #49                 // Field stateGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      11: ifnull        35
      14: aload_0
      15: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      18: getstatic     #48                 // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.INITIALIZED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      21: if_acmpeq     35
      24: new           #42                 // class java/lang/IllegalStateException
      27: dup
      28: ldc_w         #291                // String Server locator is closed (maybe it was garbage collected)
      31: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: monitorexit
      37: goto          45
      40: astore_2
      41: aload_1
      42: monitorexit
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
           7    37    40   any
          40    43    40   any

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #49                 // Field stateGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #47                 // Field state:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      11: getstatic     #48                 // Field org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE.INITIALIZED:Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$STATE;
      14: if_acmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: aload_1
      23: monitorexit
      24: ireturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  private java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #292                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: aload_0
       5: invokespecial #293                // Method "<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;)V
       8: astore_1
       9: aload_1
      10: areturn

  public boolean isReceivedToplogy();
    Code:
       0: aload_0
       1: getfield      #135                // Field receivedTopology:Z
       4: ireturn

  private java.lang.String fromInterceptors(java.util.List<org.apache.activemq.artemis.api.core.Interceptor>);
    Code:
       0: new           #294                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #295                // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: iconst_1
       9: istore_3
      10: aload_1
      11: invokeinterface #276,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          70
      28: aload         4
      30: invokeinterface #223,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #296                // class org/apache/activemq/artemis/api/core/Interceptor
      38: astore        5
      40: iload_3
      41: ifne          52
      44: aload_2
      45: ldc_w         #297                // String ,
      48: invokevirtual #298                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      51: pop
      52: iconst_0
      53: istore_3
      54: aload_2
      55: aload         5
      57: invokevirtual #299                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #300                // Method java/lang/Class.getName:()Ljava/lang/String;
      63: invokevirtual #298                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      66: pop
      67: goto          18
      70: aload_2
      71: invokevirtual #301                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      74: areturn

  private void feedInterceptors(java.util.List<org.apache.activemq.artemis.api.core.Interceptor>, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #302,  1          // InterfaceMethod java/util/List.clear:()V
       6: aload_2
       7: ifnull        23
      10: aload_2
      11: invokevirtual #303                // Method java/lang/String.trim:()Ljava/lang/String;
      14: ldc_w         #304                // String
      17: invokevirtual #305                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          24
      23: return
      24: new           #306                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$6
      27: dup
      28: aload_0
      29: aload_2
      30: aload_1
      31: invokespecial #307                // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl$6."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;Ljava/lang/String;Ljava/util/List;)V
      34: invokestatic  #33                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      37: pop
      38: return

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal setClusterTransportConfiguration(org.apache.activemq.artemis.api.core.TransportConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #308                // Method setClusterTransportConfiguration:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal setClusterConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #309                // Method setClusterConnection:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal setNodeID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #310                // Method setNodeID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal setIdentity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #311                // Method setIdentity:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal setAfterConnectionInternalListener(org.apache.activemq.artemis.core.client.impl.AfterConnectInternalListener);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #312                // Method setAfterConnectionInternalListener:(Lorg/apache/activemq/artemis/core/client/impl/AfterConnectInternalListener;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator addClusterTopologyListener(org.apache.activemq.artemis.api.core.client.ClusterTopologyListener);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #313                // Method addClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setCompressLargeMessage(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #314                // Method setCompressLargeMessage:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator addOutgoingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #315                // Method addOutgoingInterceptor:(Lorg/apache/activemq/artemis/api/core/Interceptor;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator addIncomingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #316                // Method addIncomingInterceptor:(Lorg/apache/activemq/artemis/api/core/Interceptor;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setInitialMessagePacketSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #317                // Method setInitialMessagePacketSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setConnectionLoadBalancingPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #318                // Method setConnectionLoadBalancingPolicyClassName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setFailoverOnInitialConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #319                // Method setFailoverOnInitialConnection:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setInitialConnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #320                // Method setInitialConnectAttempts:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setReconnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #321                // Method setReconnectAttempts:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setMaxRetryInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #322                // Method setMaxRetryInterval:(J)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setRetryIntervalMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #323                // Method setRetryIntervalMultiplier:(D)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setRetryInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #324                // Method setRetryInterval:(J)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #325                // Method setThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setScheduledThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #326                // Method setScheduledThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setUseGlobalPools(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #327                // Method setUseGlobalPools:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setAckBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #328                // Method setAckBatchSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setPreAcknowledge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #329                // Method setPreAcknowledge:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setGroupID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #330                // Method setGroupID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setAutoGroup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #331                // Method setAutoGroup:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setBlockOnNonDurableSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #332                // Method setBlockOnNonDurableSend:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setBlockOnDurableSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #333                // Method setBlockOnDurableSend:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setBlockOnAcknowledge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #334                // Method setBlockOnAcknowledge:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setProducerMaxRate(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #335                // Method setProducerMaxRate:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setProducerWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #336                // Method setProducerWindowSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setConfirmationWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #337                // Method setConfirmationWindowSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setConsumerMaxRate(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #338                // Method setConsumerMaxRate:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setConsumerWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #339                // Method setConsumerWindowSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setMinLargeMessageSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #340                // Method setMinLargeMessageSize:(I)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setCallFailoverTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #341                // Method setCallFailoverTimeout:(J)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setCallTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #342                // Method setCallTimeout:(J)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setConnectionTTL(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #343                // Method setConnectionTTL:(J)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setCacheLargeMessagesClient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #344                // Method setCacheLargeMessagesClient:(Z)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  public org.apache.activemq.artemis.api.core.client.ServerLocator setClientFailureCheckPeriod(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #345                // Method setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorImpl;
       5: areturn

  static org.apache.activemq.artemis.api.core.client.loadbalance.ConnectionLoadBalancingPolicy access$102(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl, org.apache.activemq.artemis.api.core.client.loadbalance.ConnectionLoadBalancingPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #25                 // Field loadBalancingPolicy:Lorg/apache/activemq/artemis/api/core/client/loadbalance/ConnectionLoadBalancingPolicy;
       6: areturn

  static java.lang.String access$200(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #24                 // Field connectionLoadBalancingPolicyClassName:Ljava/lang/String;
       4: areturn

  static void access$300(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method assertOpen:()V
       4: return

  static void access$400(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: invokespecial #22                 // Method initialise:()V
       4: return

  static boolean access$500(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #21                 // Field clusterConnection:Z
       4: ireturn

  static java.util.concurrent.Executor access$600(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #20                 // Field startExecutor:Ljava/util/concurrent/Executor;
       4: areturn

  static int access$700(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #19                 // Field initialConnectAttempts:I
       4: ireturn

  static long access$800(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #18                 // Field retryInterval:J
       4: lreturn

  static java.util.concurrent.CountDownLatch access$900(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #17                 // Field latch:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static java.lang.Exception access$1000(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #16                 // Field traceException:Ljava/lang/Exception;
       4: areturn

  static org.apache.activemq.artemis.api.core.TransportConfiguration[] access$1100(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #15                 // Field initialConnectors:[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       4: areturn

  static long access$1200(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #14                 // Field callTimeout:J
       4: lreturn

  static long access$1300(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #13                 // Field callFailoverTimeout:J
       4: lreturn

  static long access$1400(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #12                 // Field clientFailureCheckPeriod:J
       4: lreturn

  static long access$1500(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #11                 // Field connectionTTL:J
       4: lreturn

  static double access$1600(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #10                 // Field retryIntervalMultiplier:D
       4: dreturn

  static long access$1700(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxRetryInterval:J
       4: lreturn

  static int access$1800(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field reconnectAttempts:I
       4: ireturn

  static java.util.concurrent.ExecutorService access$1900(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field threadPool:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static java.util.concurrent.ScheduledExecutorService access$2000(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field scheduledThreadPool:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static java.util.List access$2100(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field incomingInterceptors:Ljava/util/List;
       4: areturn

  static java.util.List access$2200(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field outgoingInterceptors:Ljava/util/List;
       4: areturn

  static boolean access$2300(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field finalizeCheck:Z
       4: ireturn

  static void access$2400(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl, org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method addToConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
       5: return

  static void access$2500(org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl, org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method removeFromConnecting:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)V
       5: return

  static {};
    Code:
       0: aconst_null
       1: putstatic     #346                // Field finalizeCallback:Ljava/lang/Runnable;
       4: return
}
