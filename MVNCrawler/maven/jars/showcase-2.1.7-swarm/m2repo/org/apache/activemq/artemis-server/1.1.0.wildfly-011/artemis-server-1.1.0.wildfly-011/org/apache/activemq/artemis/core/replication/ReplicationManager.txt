Compiled from "ReplicationManager.java"
public final class org.apache.activemq.artemis.core.replication.ReplicationManager implements org.apache.activemq.artemis.core.server.ActiveMQComponent,org.apache.activemq.artemis.spi.core.remoting.ReadyListener {
  private final org.apache.activemq.artemis.core.replication.ReplicationManager$ResponseHandler responseHandler;

  private final org.apache.activemq.artemis.core.protocol.core.Channel replicatingChannel;

  private boolean started;

  private volatile boolean enabled;

  private final java.lang.Object replicationLock;

  private final org.apache.activemq.artemis.utils.ReusableLatch latch;

  private final java.util.Queue<org.apache.activemq.artemis.core.persistence.OperationContext> pendingTokens;

  private final org.apache.activemq.artemis.utils.ExecutorFactory executorFactory;

  private org.apache.activemq.artemis.api.core.client.SessionFailureListener failureListener;

  private org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection remotingConnection;

  private volatile boolean inSync;

  private final org.apache.activemq.artemis.utils.ReusableLatch synchronizationIsFinishedAcknowledgement;

  public org.apache.activemq.artemis.core.replication.ReplicationManager(org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection, org.apache.activemq.artemis.utils.ExecutorFactory);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class org/apache/activemq/artemis/core/replication/ReplicationManager$ResponseHandler
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #5                  // Method org/apache/activemq/artemis/core/replication/ReplicationManager$ResponseHandler."<init>":(Lorg/apache/activemq/artemis/core/replication/ReplicationManager;Lorg/apache/activemq/artemis/core/replication/ReplicationManager$1;)V
      14: putfield      #6                  // Field responseHandler:Lorg/apache/activemq/artemis/core/replication/ReplicationManager$ResponseHandler;
      17: aload_0
      18: new           #7                  // class java/lang/Object
      21: dup
      22: invokespecial #3                  // Method java/lang/Object."<init>":()V
      25: putfield      #8                  // Field replicationLock:Ljava/lang/Object;
      28: aload_0
      29: new           #9                  // class org/apache/activemq/artemis/utils/ReusableLatch
      32: dup
      33: invokespecial #10                 // Method org/apache/activemq/artemis/utils/ReusableLatch."<init>":()V
      36: putfield      #11                 // Field latch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      39: aload_0
      40: new           #12                 // class java/util/concurrent/ConcurrentLinkedQueue
      43: dup
      44: invokespecial #13                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      47: putfield      #14                 // Field pendingTokens:Ljava/util/Queue;
      50: aload_0
      51: iconst_1
      52: putfield      #15                 // Field inSync:Z
      55: aload_0
      56: new           #9                  // class org/apache/activemq/artemis/utils/ReusableLatch
      59: dup
      60: iconst_0
      61: invokespecial #16                 // Method org/apache/activemq/artemis/utils/ReusableLatch."<init>":(I)V
      64: putfield      #1                  // Field synchronizationIsFinishedAcknowledgement:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      67: aload_0
      68: aload_2
      69: putfield      #17                 // Field executorFactory:Lorg/apache/activemq/artemis/utils/ExecutorFactory;
      72: aload_0
      73: aload_1
      74: getstatic     #18                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.REPLICATION:Lorg/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
      77: getfield      #19                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
      80: iconst_m1
      81: invokeinterface #20,  4           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getChannel:(JI)Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      86: putfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      89: aload_0
      90: aload_1
      91: putfield      #22                 // Field remotingConnection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      94: return

  public void appendUpdateRecord(byte, org.apache.activemq.artemis.core.replication.ReplicationManager$ADD_OPERATION_TYPE, long, byte, org.apache.activemq.artemis.core.journal.EncodingSupport) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          26
       7: aload_0
       8: new           #24                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage
      11: dup
      12: iload_1
      13: aload_2
      14: lload_3
      15: iload         5
      17: aload         6
      19: invokespecial #25                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddMessage."<init>":(BLorg/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE;JBLorg/apache/activemq/artemis/core/journal/EncodingSupport;)V
      22: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      25: pop
      26: return

  public void appendDeleteRecord(byte, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          21
       7: aload_0
       8: new           #27                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteMessage
      11: dup
      12: iload_1
      13: lload_2
      14: invokespecial #28                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteMessage."<init>":(BJ)V
      17: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      20: pop
      21: return

  public void appendAddRecordTransactional(byte, org.apache.activemq.artemis.core.replication.ReplicationManager$ADD_OPERATION_TYPE, long, long, byte, org.apache.activemq.artemis.core.journal.EncodingSupport) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          28
       7: aload_0
       8: new           #29                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage
      11: dup
      12: iload_1
      13: aload_2
      14: lload_3
      15: lload         5
      17: iload         7
      19: aload         8
      21: invokespecial #30                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationAddTXMessage."<init>":(BLorg/apache/activemq/artemis/core/replication/ReplicationManager$ADD_OPERATION_TYPE;JJBLorg/apache/activemq/artemis/core/journal/EncodingSupport;)V
      24: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      27: pop
      28: return

  public void appendCommitRecord(byte, long, boolean, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          24
       7: aload_0
       8: new           #31                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage
      11: dup
      12: iload_1
      13: iconst_0
      14: lload_2
      15: invokespecial #32                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage."<init>":(BZJ)V
      18: iload         5
      20: invokespecial #33                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;Z)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      23: pop
      24: return

  public void appendDeleteRecordTransactional(byte, long, long, org.apache.activemq.artemis.core.journal.EncodingSupport) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          25
       7: aload_0
       8: new           #34                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage
      11: dup
      12: iload_1
      13: lload_2
      14: lload         4
      16: aload         6
      18: invokespecial #35                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage."<init>":(BJJLorg/apache/activemq/artemis/core/journal/EncodingSupport;)V
      21: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      24: pop
      25: return

  public void appendDeleteRecordTransactional(byte, long, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          26
       7: aload_0
       8: new           #34                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage
      11: dup
      12: iload_1
      13: lload_2
      14: lload         4
      16: getstatic     #36                 // Field org/apache/activemq/artemis/core/replication/ReplicationManager$NullEncoding.instance:Lorg/apache/activemq/artemis/core/replication/ReplicationManager$NullEncoding;
      19: invokespecial #35                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationDeleteTXMessage."<init>":(BJJLorg/apache/activemq/artemis/core/journal/EncodingSupport;)V
      22: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      25: pop
      26: return

  public void appendPrepareRecord(byte, long, org.apache.activemq.artemis.core.journal.EncodingSupport) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          23
       7: aload_0
       8: new           #37                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage
      11: dup
      12: iload_1
      13: lload_2
      14: aload         4
      16: invokespecial #38                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPrepareMessage."<init>":(BJLorg/apache/activemq/artemis/core/journal/EncodingSupport;)V
      19: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      22: pop
      23: return

  public void appendRollbackRecord(byte, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          22
       7: aload_0
       8: new           #31                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage
      11: dup
      12: iload_1
      13: iconst_1
      14: lload_2
      15: invokespecial #32                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationCommitMessage."<init>":(BZJ)V
      18: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      21: pop
      22: return

  public void pageClosed(org.apache.activemq.artemis.api.core.SimpleString, int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          22
       7: aload_0
       8: new           #39                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage
      11: dup
      12: aload_1
      13: iload_2
      14: iconst_0
      15: invokespecial #40                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage."<init>":(Lorg/apache/activemq/artemis/api/core/SimpleString;IZ)V
      18: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      21: pop
      22: return

  public void pageDeleted(org.apache.activemq.artemis.api.core.SimpleString, int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          22
       7: aload_0
       8: new           #39                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage
      11: dup
      12: aload_1
      13: iload_2
      14: iconst_1
      15: invokespecial #40                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageEventMessage."<init>":(Lorg/apache/activemq/artemis/api/core/SimpleString;IZ)V
      18: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      21: pop
      22: return

  public void pageWrite(org.apache.activemq.artemis.core.paging.PagedMessage, int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          21
       7: aload_0
       8: new           #41                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageWriteMessage
      11: dup
      12: aload_1
      13: iload_2
      14: invokespecial #42                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationPageWriteMessage."<init>":(Lorg/apache/activemq/artemis/core/paging/PagedMessage;I)V
      17: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      20: pop
      21: return

  public void largeMessageBegin(long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          20
       7: aload_0
       8: new           #43                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageBeginMessage
      11: dup
      12: lload_1
      13: invokespecial #44                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageBeginMessage."<init>":(J)V
      16: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      19: pop
      20: return

  public void largeMessageDelete(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          23
       7: aload_0
       8: new           #45                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageEndMessage
      11: dup
      12: aload_1
      13: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      16: invokespecial #47                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageEndMessage."<init>":(J)V
      19: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      22: pop
      23: return

  public void largeMessageWrite(long, byte[]);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          21
       7: aload_0
       8: new           #48                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageWriteMessage
      11: dup
      12: lload_1
      13: aload_3
      14: invokespecial #49                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLargeMessageWriteMessage."<init>":(J[B)V
      17: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      20: pop
      21: return

  public synchronized boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #50                 // Field started:Z
       4: ireturn

  public synchronized void start() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field started:Z
       4: ifeq          17
       7: new           #51                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #52                 // String ReplicationManager is already started
      13: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      21: aload_0
      22: getfield      #6                  // Field responseHandler:Lorg/apache/activemq/artemis/core/replication/ReplicationManager$ResponseHandler;
      25: invokeinterface #54,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.setHandler:(Lorg/apache/activemq/artemis/core/protocol/core/ChannelHandler;)V
      30: aload_0
      31: new           #55                 // class org/apache/activemq/artemis/core/replication/ReplicationManager$ReplicatedSessionFailureListener
      34: dup
      35: aload_0
      36: aconst_null
      37: invokespecial #56                 // Method org/apache/activemq/artemis/core/replication/ReplicationManager$ReplicatedSessionFailureListener."<init>":(Lorg/apache/activemq/artemis/core/replication/ReplicationManager;Lorg/apache/activemq/artemis/core/replication/ReplicationManager$1;)V
      40: putfield      #57                 // Field failureListener:Lorg/apache/activemq/artemis/api/core/client/SessionFailureListener;
      43: aload_0
      44: getfield      #22                 // Field remotingConnection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      47: aload_0
      48: getfield      #57                 // Field failureListener:Lorg/apache/activemq/artemis/api/core/client/SessionFailureListener;
      51: invokeinterface #58,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.addFailureListener:(Lorg/apache/activemq/artemis/core/remoting/FailureListener;)V
      56: aload_0
      57: iconst_1
      58: putfield      #50                 // Field started:Z
      61: aload_0
      62: iconst_1
      63: putfield      #23                 // Field enabled:Z
      66: return

  public synchronized void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #50                 // Field started:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #23                 // Field enabled:Z
      13: aload_0
      14: getfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      17: ifnull        57
      20: aload_0
      21: getfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      24: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.close:()V
      29: aload_0
      30: getfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      33: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.getConnection:()Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      38: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getTransportConnection:()Lorg/apache/activemq/artemis/spi/core/remoting/Connection;
      43: iconst_1
      44: invokeinterface #62,  2           // InterfaceMethod org/apache/activemq/artemis/spi/core/remoting/Connection.fireReady:(Z)V
      49: aload_0
      50: getfield      #11                 // Field latch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      53: iconst_0
      54: invokevirtual #63                 // Method org/apache/activemq/artemis/utils/ReusableLatch.setCount:(I)V
      57: aload_0
      58: getfield      #8                  // Field replicationLock:Ljava/lang/Object;
      61: dup
      62: astore_1
      63: monitorenter
      64: aload_0
      65: invokevirtual #64                 // Method clearReplicationTokens:()V
      68: aload_1
      69: monitorexit
      70: goto          78
      73: astore_2
      74: aload_1
      75: monitorexit
      76: aload_2
      77: athrow
      78: aload_0
      79: getfield      #22                 // Field remotingConnection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      82: astore_1
      83: aload_1
      84: ifnull        98
      87: aload_1
      88: aload_0
      89: getfield      #57                 // Field failureListener:Lorg/apache/activemq/artemis/api/core/client/SessionFailureListener;
      92: invokeinterface #65,  2           // InterfaceMethod org/apache/activemq/artemis/spi/core/protocol/RemotingConnection.removeFailureListener:(Lorg/apache/activemq/artemis/core/remoting/FailureListener;)Z
      97: pop
      98: aload_0
      99: aconst_null
     100: putfield      #22                 // Field remotingConnection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
     103: aload_0
     104: iconst_0
     105: putfield      #50                 // Field started:Z
     108: return
    Exception table:
       from    to  target type
          64    70    73   any
          73    76    73   any

  public void clearReplicationTokens();
    Code:
       0: aload_0
       1: getfield      #8                  // Field replicationLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field pendingTokens:Ljava/util/Queue;
      11: invokeinterface #66,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      16: ifne          54
      19: aload_0
      20: getfield      #14                 // Field pendingTokens:Ljava/util/Queue;
      23: invokeinterface #67,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      28: checkcast     #68                 // class org/apache/activemq/artemis/core/persistence/OperationContext
      31: astore_2
      32: aload_2
      33: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/OperationContext.replicationDone:()V
      38: goto          51
      41: astore_3
      42: getstatic     #71                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      45: aload_3
      46: invokeinterface #72,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorCompletingCallbackOnReplicationManager:(Ljava/lang/Throwable;)V
      51: goto          7
      54: aload_1
      55: monitorexit
      56: goto          66
      59: astore        4
      61: aload_1
      62: monitorexit
      63: aload         4
      65: athrow
      66: return
    Exception table:
       from    to  target type
          32    38    41   Class java/lang/Throwable
           7    56    59   any
          59    63    59   any

  public java.util.Set<org.apache.activemq.artemis.core.persistence.OperationContext> getActiveTokens();
    Code:
       0: new           #73                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #74                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #14                 // Field pendingTokens:Ljava/util/Queue;
      12: invokeinterface #75,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          46
      27: aload_2
      28: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #68                 // class org/apache/activemq/artemis/core/persistence/OperationContext
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #78                 // Method java/util/LinkedHashSet.add:(Ljava/lang/Object;)Z
      42: pop
      43: goto          18
      46: aload_1
      47: areturn

  private org.apache.activemq.artemis.core.persistence.OperationContext sendReplicatePacket(org.apache.activemq.artemis.core.protocol.core.Packet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #33                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;Z)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
       6: areturn

  private org.apache.activemq.artemis.core.persistence.OperationContext sendReplicatePacket(org.apache.activemq.artemis.core.protocol.core.Packet, boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: iconst_0
      10: istore_3
      11: aload_0
      12: getfield      #17                 // Field executorFactory:Lorg/apache/activemq/artemis/utils/ExecutorFactory;
      15: invokestatic  #79                 // Method org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl.getContext:(Lorg/apache/activemq/artemis/utils/ExecutorFactory;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      18: astore        4
      20: iload_2
      21: ifeq          31
      24: aload         4
      26: invokeinterface #80,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/OperationContext.replicationLineUp:()V
      31: aload_0
      32: getfield      #8                  // Field replicationLock:Ljava/lang/Object;
      35: dup
      36: astore        5
      38: monitorenter
      39: aload_0
      40: getfield      #23                 // Field enabled:Z
      43: ifeq          126
      46: aload_0
      47: getfield      #14                 // Field pendingTokens:Ljava/util/Queue;
      50: aload         4
      52: invokeinterface #81,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: getfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      62: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.getConnection:()Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      67: aload_0
      68: invokeinterface #82,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.isWritable:(Lorg/apache/activemq/artemis/spi/core/remoting/ReadyListener;)Z
      73: ifne          112
      76: aload_0
      77: getfield      #11                 // Field latch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      80: invokevirtual #83                 // Method org/apache/activemq/artemis/utils/ReusableLatch.countUp:()V
      83: aload_0
      84: getfield      #11                 // Field latch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      87: ldc2_w        #84                 // long 5l
      90: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      93: invokevirtual #87                 // Method org/apache/activemq/artemis/utils/ReusableLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      96: pop
      97: goto          112
     100: astore        6
     102: new           #89                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     105: dup
     106: aload         6
     108: invokespecial #90                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     111: athrow
     112: aload_0
     113: getfield      #21                 // Field replicatingChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
     116: aload_1
     117: invokeinterface #91,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.send:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Z
     122: pop
     123: goto          128
     126: iconst_1
     127: istore_3
     128: aload         5
     130: monitorexit
     131: goto          142
     134: astore        7
     136: aload         5
     138: monitorexit
     139: aload         7
     141: athrow
     142: iload_3
     143: ifeq          153
     146: aload         4
     148: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/OperationContext.replicationDone:()V
     153: aload         4
     155: areturn
    Exception table:
       from    to  target type
          83    97   100   Class java/lang/InterruptedException
          39   131   134   any
         134   139   134   any

  public void readyForWriting();
    Code:
       0: aload_0
       1: getfield      #11                 // Field latch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
       4: invokevirtual #92                 // Method org/apache/activemq/artemis/utils/ReusableLatch.countDown:()V
       7: return

  private void replicated();
    Code:
       0: aload_0
       1: getfield      #14                 // Field pendingTokens:Ljava/util/Queue;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #68                 // class org/apache/activemq/artemis/core/persistence/OperationContext
      12: astore_1
      13: aload_1
      14: ifnonnull     27
      17: new           #51                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #93                 // String Missing replication token on the queue.
      23: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_1
      28: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/OperationContext.replicationDone:()V
      33: return

  public void syncJournalFile(org.apache.activemq.artemis.core.journal.impl.JournalFile, org.apache.activemq.artemis.core.persistence.impl.journal.JournalStorageManager$JournalContent) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifne          8
       7: return
       8: aload_1
       9: invokeinterface #94,  1           // InterfaceMethod org/apache/activemq/artemis/core/journal/impl/JournalFile.getFile:()Lorg/apache/activemq/artemis/core/io/SequentialFile;
      14: invokeinterface #95,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.cloneFile:()Lorg/apache/activemq/artemis/core/io/SequentialFile;
      19: astore_3
      20: getstatic     #71                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      23: aload_1
      24: aload_3
      25: invokeinterface #96,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.size:()J
      30: invokestatic  #97                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: aload_3
      34: invokeinterface #98,  4           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.journalSynch:(Lorg/apache/activemq/artemis/core/journal/impl/JournalFile;Ljava/lang/Long;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      39: aload_0
      40: aload_2
      41: aconst_null
      42: aload_1
      43: invokeinterface #99,  1           // InterfaceMethod org/apache/activemq/artemis/core/journal/impl/JournalFile.getFileID:()J
      48: aload_3
      49: ldc2_w        #101                // long 9223372036854775807l
      52: invokespecial #103                // Method sendLargeFile:(Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;Lorg/apache/activemq/artemis/api/core/SimpleString;JLorg/apache/activemq/artemis/core/io/SequentialFile;J)V
      55: aload_3
      56: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
      61: ifeq          93
      64: aload_3
      65: invokeinterface #105,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.close:()V
      70: goto          93
      73: astore        4
      75: aload_3
      76: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
      81: ifeq          90
      84: aload_3
      85: invokeinterface #105,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.close:()V
      90: aload         4
      92: athrow
      93: return
    Exception table:
       from    to  target type
          20    55    73   any
          73    75    73   any

  public void syncLargeMessageFile(org.apache.activemq.artemis.core.io.SequentialFile, long, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          17
       7: aload_0
       8: aconst_null
       9: aconst_null
      10: lload         4
      12: aload_1
      13: lload_2
      14: invokespecial #103                // Method sendLargeFile:(Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;Lorg/apache/activemq/artemis/api/core/SimpleString;JLorg/apache/activemq/artemis/core/io/SequentialFile;J)V
      17: return

  public void syncPages(org.apache.activemq.artemis.core.io.SequentialFile, long, org.apache.activemq.artemis.api.core.SimpleString) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          19
       7: aload_0
       8: aconst_null
       9: aload         4
      11: lload_2
      12: aload_1
      13: ldc2_w        #101                // long 9223372036854775807l
      16: invokespecial #103                // Method sendLargeFile:(Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;Lorg/apache/activemq/artemis/api/core/SimpleString;JLorg/apache/activemq/artemis/core/io/SequentialFile;J)V
      19: return

  private void sendLargeFile(org.apache.activemq.artemis.core.persistence.impl.journal.JournalStorageManager$JournalContent, org.apache.activemq.artemis.api.core.SimpleString, long, org.apache.activemq.artemis.core.io.SequentialFile, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifne          8
       7: return
       8: aload         5
      10: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
      15: ifne          25
      18: aload         5
      20: invokeinterface #106,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.open:()V
      25: new           #107                // class java/io/FileInputStream
      28: dup
      29: aload         5
      31: invokeinterface #108,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.getJavaFile:()Ljava/io/File;
      36: invokespecial #109                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      39: astore        8
      41: aload         8
      43: invokevirtual #110                // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      46: astore        9
      48: ldc           #111                // int 131072
      50: invokestatic  #112                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      53: astore        10
      55: aload         10
      57: invokevirtual #113                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      60: pop
      61: aload         9
      63: aload         10
      65: invokevirtual #114                // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      68: istore        11
      70: iload         11
      72: istore        12
      74: iload         11
      76: ifle          115
      79: iload         11
      81: i2l
      82: lload         6
      84: lcmp
      85: iflt          99
      88: lload         6
      90: l2i
      91: istore        12
      93: lconst_0
      94: lstore        6
      96: goto          107
      99: lload         6
     101: iload         11
     103: i2l
     104: lsub
     105: lstore        6
     107: aload         10
     109: iload         12
     111: invokevirtual #115                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     114: pop
     115: aload         10
     117: invokevirtual #116                // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     120: pop
     121: aload_0
     122: new           #117                // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage
     125: dup
     126: aload_1
     127: aload_2
     128: lload_3
     129: iload         12
     131: aload         10
     133: invokespecial #118                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationSyncFileMessage."<init>":(Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;Lorg/apache/activemq/artemis/api/core/SimpleString;JILjava/nio/ByteBuffer;)V
     136: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
     139: pop
     140: iload         11
     142: iconst_m1
     143: if_icmpeq     164
     146: iload         11
     148: ifeq          164
     151: lload         6
     153: lconst_0
     154: lcmp
     155: ifne          161
     158: goto          164
     161: goto          55
     164: aload         9
     166: invokevirtual #119                // Method java/nio/channels/FileChannel.close:()V
     169: goto          182
     172: astore        13
     174: aload         9
     176: invokevirtual #119                // Method java/nio/channels/FileChannel.close:()V
     179: aload         13
     181: athrow
     182: aload         8
     184: invokevirtual #120                // Method java/io/FileInputStream.close:()V
     187: goto          200
     190: astore        14
     192: aload         8
     194: invokevirtual #120                // Method java/io/FileInputStream.close:()V
     197: aload         14
     199: athrow
     200: aload         5
     202: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
     207: ifeq          242
     210: aload         5
     212: invokeinterface #105,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.close:()V
     217: goto          242
     220: astore        15
     222: aload         5
     224: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
     229: ifeq          239
     232: aload         5
     234: invokeinterface #105,  1          // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.close:()V
     239: aload         15
     241: athrow
     242: return
    Exception table:
       from    to  target type
          48   164   172   any
         172   174   172   any
          41   182   190   any
         190   192   190   any
          25   200   220   any
         220   222   220   any

  public void sendStartSyncMessage(org.apache.activemq.artemis.core.journal.impl.JournalFile[], org.apache.activemq.artemis.core.persistence.impl.journal.JournalStorageManager$JournalContent, java.lang.String, boolean) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          24
       7: aload_0
       8: new           #121                // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage
      11: dup
      12: aload_1
      13: aload_2
      14: aload_3
      15: iload         4
      17: invokespecial #122                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage."<init>":([Lorg/apache/activemq/artemis/core/journal/impl/JournalFile;Lorg/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent;Ljava/lang/String;Z)V
      20: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      23: pop
      24: return

  public void sendSynchronizationDone(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #23                 // Field enabled:Z
       4: ifeq          68
       7: aload_0
       8: getfield      #1                  // Field synchronizationIsFinishedAcknowledgement:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      11: invokevirtual #83                 // Method org/apache/activemq/artemis/utils/ReusableLatch.countUp:()V
      14: aload_0
      15: new           #121                // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage
      18: dup
      19: aload_1
      20: invokespecial #123                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage."<init>":(Ljava/lang/String;)V
      23: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      26: pop
      27: aload_0
      28: getfield      #1                  // Field synchronizationIsFinishedAcknowledgement:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      31: lload_2
      32: invokevirtual #124                // Method org/apache/activemq/artemis/utils/ReusableLatch.await:(J)Z
      35: ifne          48
      38: getstatic     #125                // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      41: lload_2
      42: invokeinterface #126,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.replicationSynchronizationTimeout:(J)Ljava/lang/IllegalStateException;
      47: athrow
      48: goto          63
      51: astore        4
      53: getstatic     #71                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      56: aload         4
      58: invokeinterface #127,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      63: aload_0
      64: iconst_0
      65: putfield      #15                 // Field inSync:Z
      68: return
    Exception table:
       from    to  target type
          27    48    51   Class java/lang/InterruptedException

  public void sendLargeMessageIdListMessage(java.util.Map<java.lang.Long, org.apache.activemq.artemis.api.core.Pair<java.lang.String, java.lang.Long>>);
    Code:
       0: new           #128                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #129,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      10: invokespecial #130                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: astore_2
      14: aload_0
      15: getfield      #23                 // Field enabled:Z
      18: ifeq          34
      21: aload_0
      22: new           #121                // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage
      25: dup
      26: aload_2
      27: invokespecial #131                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage."<init>":(Ljava/util/List;)V
      30: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      33: pop
      34: return

  public org.apache.activemq.artemis.core.persistence.OperationContext sendLiveIsStopping(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLiveIsStoppingMessage$LiveStopping);
    Code:
       0: getstatic     #71                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: new           #132                // class java/lang/StringBuilder
       6: dup
       7: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #134                // String LIVE IS STOPPING?!? message=
      12: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #137                // String  enabled=
      21: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #23                 // Field enabled:Z
      28: invokevirtual #138                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokeinterface #127,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #23                 // Field enabled:Z
      43: ifeq          98
      46: getstatic     #71                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      49: new           #132                // class java/lang/StringBuilder
      52: dup
      53: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #134                // String LIVE IS STOPPING?!? message=
      58: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #140                // String
      67: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #23                 // Field enabled:Z
      74: invokevirtual #138                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      77: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokeinterface #127,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      85: aload_0
      86: new           #141                // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage
      89: dup
      90: aload_1
      91: invokespecial #142                // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage."<init>":(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;)V
      94: invokespecial #26                 // Method sendReplicatePacket:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      97: areturn
      98: aconst_null
      99: areturn

  public org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection getBackupTransportConnection();
    Code:
       0: aload_0
       1: getfield      #22                 // Field remotingConnection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
       4: areturn

  public boolean isSynchronizing();
    Code:
       0: aload_0
       1: getfield      #15                 // Field inSync:Z
       4: ireturn

  static void access$300(org.apache.activemq.artemis.core.replication.ReplicationManager);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method replicated:()V
       4: return

  static org.apache.activemq.artemis.utils.ReusableLatch access$400(org.apache.activemq.artemis.core.replication.ReplicationManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field synchronizationIsFinishedAcknowledgement:Lorg/apache/activemq/artemis/utils/ReusableLatch;
       4: areturn
}
