Compiled from "Create.java"
public class org.apache.activemq.artemis.cli.commands.Create extends org.apache.activemq.artemis.cli.commands.InputAbstract {
  private static final java.lang.Integer DEFAULT_PORT;

  private static final java.lang.Integer AMQP_PORT;

  private static final java.lang.Integer STOMP_PORT;

  private static final java.lang.Integer HQ_PORT;

  private static final java.lang.Integer HTTP_PORT;

  private static final java.lang.Integer MQTT_PORT;

  public static final java.lang.String BIN_ARTEMIS_CMD;

  public static final java.lang.String BIN_ARTEMIS_SERVICE_EXE;

  public static final java.lang.String BIN_ARTEMIS_SERVICE_XML;

  public static final java.lang.String ETC_ARTEMIS_PROFILE_CMD;

  public static final java.lang.String BIN_ARTEMIS;

  public static final java.lang.String BIN_ARTEMIS_SERVICE;

  public static final java.lang.String ETC_ARTEMIS_PROFILE;

  public static final java.lang.String ETC_LOGGING_PROPERTIES;

  public static final java.lang.String ETC_BOOTSTRAP_XML;

  public static final java.lang.String ETC_BROKER_XML;

  public static final java.lang.String ETC_ARTEMIS_ROLES_PROPERTIES;

  public static final java.lang.String ETC_ARTEMIS_USERS_PROPERTIES;

  public static final java.lang.String ETC_REPLICATED_SETTINGS_TXT;

  public static final java.lang.String ETC_SHARED_STORE_SETTINGS_TXT;

  public static final java.lang.String ETC_CLUSTER_SECURITY_SETTINGS_TXT;

  public static final java.lang.String ETC_CLUSTER_SETTINGS_TXT;

  public static final java.lang.String ETC_CONNECTOR_SETTINGS_TXT;

  public static final java.lang.String ETC_BOOTSTRAP_WEB_SETTINGS_TXT;

  public static final java.lang.String ETC_JOURNAL_BUFFER_SETTINGS;

  java.io.File directory;

  java.lang.String host;

  int portOffset;

  boolean force;

  java.io.File home;

  java.lang.String data;

  boolean clustered;

  int maxHops;

  org.apache.activemq.artemis.core.server.cluster.impl.MessageLoadBalancingType messageLoadBalancing;

  boolean replicated;

  boolean sharedStore;

  boolean slave;

  boolean failoverOnShutodwn;

  java.lang.String clusterUser;

  java.lang.String clusterPassword;

  java.lang.String encoding;

  java.lang.String javaOptions;

  java.lang.Boolean allowAnonymous;

  java.lang.Boolean requireLogin;

  boolean noAutoTune;

  java.lang.String user;

  java.lang.String password;

  java.lang.String role;

  boolean noWeb;

  java.lang.String queues;

  java.lang.String topics;

  boolean forceLibaio;

  boolean IS_WINDOWS;

  boolean IS_CYGWIN;

  public org.apache.activemq.artemis.cli.commands.Create();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/cli/commands/InputAbstract."<init>":()V
       4: aload_0
       5: ldc           #2                  // String ./data
       7: putfield      #3                  // Field data:Ljava/lang/String;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field clustered:Z
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field maxHops:I
      20: aload_0
      21: getstatic     #6                  // Field org/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType.ON_DEMAND:Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
      24: putfield      #7                  // Field messageLoadBalancing:Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
      27: aload_0
      28: iconst_0
      29: putfield      #8                  // Field replicated:Z
      32: aload_0
      33: iconst_0
      34: putfield      #9                  // Field sharedStore:Z
      37: aload_0
      38: aconst_null
      39: putfield      #10                 // Field clusterUser:Ljava/lang/String;
      42: aload_0
      43: aconst_null
      44: putfield      #11                 // Field clusterPassword:Ljava/lang/String;
      47: aload_0
      48: ldc           #12                 // String UTF-8
      50: putfield      #13                 // Field encoding:Ljava/lang/String;
      53: aload_0
      54: ldc           #14                 // String
      56: putfield      #15                 // Field javaOptions:Ljava/lang/String;
      59: aload_0
      60: aconst_null
      61: putfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
      64: aload_0
      65: aconst_null
      66: putfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
      69: return

  public int getMaxHops();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxHops:I
       4: ireturn

  public void setMaxHops(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maxHops:I
       5: return

  public boolean isNoWeb();
    Code:
       0: aload_0
       1: getfield      #18                 // Field noWeb:Z
       4: ireturn

  public void setNoWeb(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field noWeb:Z
       5: return

  public int getPortOffset();
    Code:
       0: aload_0
       1: getfield      #19                 // Field portOffset:I
       4: ireturn

  public void setPortOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field portOffset:I
       5: return

  public org.apache.activemq.artemis.core.server.cluster.impl.MessageLoadBalancingType getMessageLoadBalancing();
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageLoadBalancing:Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
       4: areturn

  public void setMessageLoadBalancing(org.apache.activemq.artemis.core.server.cluster.impl.MessageLoadBalancingType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field messageLoadBalancing:Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
       5: return

  public java.lang.String getJavaOptions();
    Code:
       0: aload_0
       1: getfield      #15                 // Field javaOptions:Ljava/lang/String;
       4: areturn

  public void setJavaOptions(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field javaOptions:Ljava/lang/String;
       5: return

  public java.io.File getInstance();
    Code:
       0: aload_0
       1: getfield      #20                 // Field directory:Ljava/io/File;
       4: areturn

  public void setInstance(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field directory:Ljava/io/File;
       5: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #21                 // Field host:Ljava/lang/String;
       4: ifnonnull     13
       7: aload_0
       8: ldc           #22                 // String 0.0.0.0
      10: putfield      #21                 // Field host:Ljava/lang/String;
      13: aload_0
      14: getfield      #21                 // Field host:Ljava/lang/String;
      17: areturn

  public java.lang.String getHostForClustered();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getHost:()Ljava/lang/String;
       4: ldc           #22                 // String 0.0.0.0
       6: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          51
      12: aload_0
      13: aload_0
      14: ldc           #25                 // String --host
      16: new           #26                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #28                 // String Host
      25: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #21                 // Field host:Ljava/lang/String;
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #30                 // String  is not valid for clustering, please provide a valid IP or hostname
      37: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: ldc           #32                 // String localhost
      45: invokevirtual #33                 // Method input:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: putfield      #21                 // Field host:Ljava/lang/String;
      51: aload_0
      52: getfield      #21                 // Field host:Ljava/lang/String;
      55: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field host:Ljava/lang/String;
       5: return

  public boolean isForce();
    Code:
       0: aload_0
       1: getfield      #34                 // Field force:Z
       4: ireturn

  public void setForce(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field force:Z
       5: return

  public java.io.File getHome();
    Code:
       0: aload_0
       1: getfield      #35                 // Field home:Ljava/io/File;
       4: ifnonnull     22
       7: aload_0
       8: new           #36                 // class java/io/File
      11: dup
      12: aload_0
      13: invokevirtual #37                 // Method getBrokerHome:()Ljava/lang/String;
      16: invokespecial #38                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      19: putfield      #35                 // Field home:Ljava/io/File;
      22: aload_0
      23: getfield      #35                 // Field home:Ljava/io/File;
      26: areturn

  public void setHome(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field home:Ljava/io/File;
       5: return

  public boolean isClustered();
    Code:
       0: aload_0
       1: getfield      #4                  // Field clustered:Z
       4: ireturn

  public void setClustered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field clustered:Z
       5: return

  public boolean isReplicated();
    Code:
       0: aload_0
       1: getfield      #8                  // Field replicated:Z
       4: ireturn

  public void setReplicated(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field replicated:Z
       5: return

  public boolean isSharedStore();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedStore:Z
       4: ireturn

  public void setSharedStore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field sharedStore:Z
       5: return

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #13                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void setEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field encoding:Ljava/lang/String;
       5: return

  public java.lang.String getData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:Ljava/lang/String;
       4: areturn

  public void setData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field data:Ljava/lang/String;
       5: return

  public java.lang.String getClusterUser();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clusterUser:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: ldc           #39                 // String --cluster-user
      11: ldc           #40                 // String Please provide the username:
      13: ldc           #41                 // String cluster-admin
      15: invokevirtual #33                 // Method input:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: putfield      #10                 // Field clusterUser:Ljava/lang/String;
      21: aload_0
      22: getfield      #10                 // Field clusterUser:Ljava/lang/String;
      25: areturn

  public void setClusterUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field clusterUser:Ljava/lang/String;
       5: return

  public java.lang.String getClusterPassword();
    Code:
       0: aload_0
       1: getfield      #11                 // Field clusterPassword:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: ldc           #42                 // String --cluster-password
      11: ldc           #43                 // String Please enter the password:
      13: ldc           #44                 // String password-admin
      15: invokevirtual #45                 // Method inputPassword:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: putfield      #11                 // Field clusterPassword:Ljava/lang/String;
      21: aload_0
      22: getfield      #11                 // Field clusterPassword:Ljava/lang/String;
      25: areturn

  public void setClusterPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field clusterPassword:Ljava/lang/String;
       5: return

  public boolean isAllowAnonymous();
    Code:
       0: aload_0
       1: getfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
       4: ifnonnull     34
       7: aload_0
       8: ldc           #46                 // String --allow-anonymous | --require-login
      10: ldc           #47                 // String Allow anonymous access? (Y/N):
      12: ldc           #48                 // String Y
      14: invokevirtual #33                 // Method input:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      17: astore_1
      18: aload_0
      19: aload_1
      20: invokevirtual #49                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      23: ldc           #50                 // String y
      25: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: invokestatic  #51                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      31: putfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
      34: aload_0
      35: getfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
      38: invokevirtual #52                 // Method java/lang/Boolean.booleanValue:()Z
      41: ireturn

  public void setAllowAnonymous(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #51                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
       8: return

  public java.lang.Boolean getRequireLogin();
    Code:
       0: aload_0
       1: getfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
       4: ifnonnull     26
       7: aload_0
       8: aload_0
       9: invokevirtual #53                 // Method isAllowAnonymous:()Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokestatic  #51                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: putfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
      26: aload_0
      27: getfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
      30: areturn

  public void setRequireLogin(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #54                 // Field password:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: ldc           #55                 // String --password
      11: ldc           #56                 // String Please provide the default password:
      13: ldc           #57                 // String admin
      15: invokevirtual #45                 // Method inputPassword:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: putfield      #54                 // Field password:Ljava/lang/String;
      21: aload_0
      22: getfield      #54                 // Field password:Ljava/lang/String;
      25: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field password:Ljava/lang/String;
       5: return

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #58                 // Field user:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: ldc           #59                 // String --user
      11: ldc           #60                 // String Please provide the default username:
      13: ldc           #57                 // String admin
      15: invokevirtual #33                 // Method input:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: putfield      #58                 // Field user:Ljava/lang/String;
      21: aload_0
      22: getfield      #58                 // Field user:Ljava/lang/String;
      25: areturn

  public void setUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field user:Ljava/lang/String;
       5: return

  public java.lang.String getRole();
    Code:
       0: aload_0
       1: getfield      #61                 // Field role:Ljava/lang/String;
       4: ifnonnull     13
       7: aload_0
       8: ldc           #62                 // String amq
      10: putfield      #61                 // Field role:Ljava/lang/String;
      13: aload_0
      14: getfield      #61                 // Field role:Ljava/lang/String;
      17: areturn

  public void setRole(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field role:Ljava/lang/String;
       5: return

  public boolean isSlave();
    Code:
       0: aload_0
       1: getfield      #63                 // Field slave:Z
       4: ireturn

  public void setSlave(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field slave:Z
       5: return

  public boolean isFailoverOnShutodwn();
    Code:
       0: aload_0
       1: getfield      #64                 // Field failoverOnShutodwn:Z
       4: ireturn

  public void setFailoverOnShutodwn(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #64                 // Field failoverOnShutodwn:Z
       5: return

  public java.lang.Boolean getAllowAnonymous();
    Code:
       0: aload_0
       1: getfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
       4: areturn

  public void setAllowAnonymous(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
       5: return

  public java.lang.Object execute(org.apache.activemq.artemis.cli.commands.ActionContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #65                 // Method checkDirectory:()V
       4: aload_0
       5: aload_1
       6: invokespecial #66                 // Method org/apache/activemq/artemis/cli/commands/InputAbstract.execute:(Lorg/apache/activemq/artemis/cli/commands/ActionContext;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokevirtual #67                 // Method run:(Lorg/apache/activemq/artemis/cli/commands/ActionContext;)Ljava/lang/Object;
      15: areturn
      16: astore_2
      17: aload_2
      18: aload_1
      19: getfield      #69                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.err:Ljava/io/PrintStream;
      22: invokevirtual #70                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      25: aload_2
      26: athrow
    Exception table:
       from    to  target type
          10    15    16   Class java/lang/Throwable

  public java.io.InputStream openStream(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #72                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       8: areturn

  private void checkDirectory();
    Code:
       0: aload_0
       1: getfield      #20                 // Field directory:Ljava/io/File;
       4: invokevirtual #73                 // Method java/io/File.exists:()Z
       7: ifne          49
      10: aload_0
      11: getfield      #20                 // Field directory:Ljava/io/File;
      14: invokevirtual #74                 // Method java/io/File.mkdirs:()Z
      17: istore_1
      18: iload_1
      19: ifne          46
      22: new           #75                 // class java/lang/RuntimeException
      25: dup
      26: ldc           #76                 // String Unable to create the path \'%s\'.
      28: iconst_1
      29: anewarray     #77                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_0
      35: getfield      #20                 // Field directory:Ljava/io/File;
      38: aastore
      39: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: goto          83
      49: aload_0
      50: getfield      #20                 // Field directory:Ljava/io/File;
      53: invokevirtual #80                 // Method java/io/File.canWrite:()Z
      56: ifne          83
      59: new           #75                 // class java/lang/RuntimeException
      62: dup
      63: ldc           #81                 // String The path \'%s\' is not writable.
      65: iconst_1
      66: anewarray     #77                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_0
      72: getfield      #20                 // Field directory:Ljava/io/File;
      75: aastore
      76: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      79: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: return

  public java.lang.Object run(org.apache.activemq.artemis.cli.commands.ActionContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #82                 // String os.name
       3: invokestatic  #83                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: invokevirtual #49                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       9: invokevirtual #84                 // Method java/lang/String.trim:()Ljava/lang/String;
      12: ldc           #85                 // String win
      14: invokevirtual #86                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: putfield      #87                 // Field IS_WINDOWS:Z
      20: aload_0
      21: aload_0
      22: getfield      #87                 // Field IS_WINDOWS:Z
      25: ifeq          45
      28: ldc           #88                 // String cygwin
      30: ldc           #89                 // String OSTYPE
      32: invokestatic  #90                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: putfield      #91                 // Field IS_CYGWIN:Z
      49: aload_0
      50: getfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
      53: ifnull        73
      56: aload_0
      57: getfield      #17                 // Field requireLogin:Ljava/lang/Boolean;
      60: invokevirtual #52                 // Method java/lang/Boolean.booleanValue:()Z
      63: ifeq          73
      66: aload_0
      67: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      70: putfield      #16                 // Field allowAnonymous:Ljava/lang/Boolean;
      73: aload_1
      74: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
      77: ldc           #94                 // String Creating ActiveMQ Artemis instance at: %s
      79: iconst_1
      80: anewarray     #77                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: aload_0
      86: getfield      #20                 // Field directory:Ljava/io/File;
      89: invokevirtual #95                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      92: aastore
      93: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      96: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      99: new           #97                 // class java/util/HashMap
     102: dup
     103: invokespecial #98                 // Method java/util/HashMap."<init>":()V
     106: astore_2
     107: aload_2
     108: ldc           #99                 // String ${master-slave}
     110: aload_0
     111: invokevirtual #100                // Method isSlave:()Z
     114: ifeq          122
     117: ldc           #101                // String slave
     119: goto          124
     122: ldc           #102                // String master
     124: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_2
     129: ldc           #104                // String ${failover-on-shutdown}
     131: aload_0
     132: invokevirtual #105                // Method isFailoverOnShutodwn:()Z
     135: ifeq          143
     138: ldc           #106                // String true
     140: goto          145
     143: ldc           #107                // String false
     145: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     148: pop
     149: aload_0
     150: getfield      #8                  // Field replicated:Z
     153: ifeq          182
     156: aload_0
     157: iconst_1
     158: putfield      #4                  // Field clustered:Z
     161: aload_2
     162: ldc           #108                // String ${replicated.settings}
     164: aload_0
     165: aload_0
     166: ldc           #110                // String etc/replicated-settings.txt
     168: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
     171: aload_2
     172: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
     175: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     178: pop
     179: goto          191
     182: aload_2
     183: ldc           #108                // String ${replicated.settings}
     185: ldc           #14                 // String
     187: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     190: pop
     191: aload_0
     192: getfield      #9                  // Field sharedStore:Z
     195: ifeq          224
     198: aload_0
     199: iconst_1
     200: putfield      #4                  // Field clustered:Z
     203: aload_2
     204: ldc           #113                // String ${shared-store.settings}
     206: aload_0
     207: aload_0
     208: ldc           #114                // String etc/shared-store-settings.txt
     210: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
     213: aload_2
     214: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
     217: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     220: pop
     221: goto          233
     224: aload_2
     225: ldc           #113                // String ${shared-store.settings}
     227: ldc           #14                 // String
     229: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     232: pop
     233: aload_0
     234: getfield      #87                 // Field IS_WINDOWS:Z
     237: ifne          247
     240: aload_0
     241: invokevirtual #115                // Method supportsLibaio:()Z
     244: ifne          261
     247: iconst_0
     248: istore_3
     249: aload_2
     250: ldc           #116                // String ${journal.settings}
     252: ldc           #117                // String NIO
     254: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     257: pop
     258: goto          272
     261: iconst_1
     262: istore_3
     263: aload_2
     264: ldc           #116                // String ${journal.settings}
     266: ldc           #118                // String ASYNCIO
     268: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     271: pop
     272: aload_2
     273: ldc           #119                // String ${user}
     275: ldc           #120                // String user.name
     277: ldc           #14                 // String
     279: invokestatic  #121                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     282: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     285: pop
     286: aload_2
     287: ldc           #122                // String ${default.port}
     289: getstatic     #123                // Field DEFAULT_PORT:Ljava/lang/Integer;
     292: invokevirtual #124                // Method java/lang/Integer.intValue:()I
     295: aload_0
     296: getfield      #19                 // Field portOffset:I
     299: iadd
     300: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     303: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     306: pop
     307: aload_2
     308: ldc           #126                // String ${amqp.port}
     310: getstatic     #127                // Field AMQP_PORT:Ljava/lang/Integer;
     313: invokevirtual #124                // Method java/lang/Integer.intValue:()I
     316: aload_0
     317: getfield      #19                 // Field portOffset:I
     320: iadd
     321: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     324: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     327: pop
     328: aload_2
     329: ldc           #128                // String ${stomp.port}
     331: getstatic     #129                // Field STOMP_PORT:Ljava/lang/Integer;
     334: invokevirtual #124                // Method java/lang/Integer.intValue:()I
     337: aload_0
     338: getfield      #19                 // Field portOffset:I
     341: iadd
     342: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     345: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     348: pop
     349: aload_2
     350: ldc           #130                // String ${hq.port}
     352: getstatic     #131                // Field HQ_PORT:Ljava/lang/Integer;
     355: invokevirtual #124                // Method java/lang/Integer.intValue:()I
     358: aload_0
     359: getfield      #19                 // Field portOffset:I
     362: iadd
     363: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     366: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     369: pop
     370: aload_2
     371: ldc           #132                // String ${mqtt.port}
     373: getstatic     #133                // Field MQTT_PORT:Ljava/lang/Integer;
     376: invokevirtual #124                // Method java/lang/Integer.intValue:()I
     379: aload_0
     380: getfield      #19                 // Field portOffset:I
     383: iadd
     384: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     387: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     390: pop
     391: aload_2
     392: ldc           #134                // String ${http.port}
     394: getstatic     #135                // Field HTTP_PORT:Ljava/lang/Integer;
     397: invokevirtual #124                // Method java/lang/Integer.intValue:()I
     400: aload_0
     401: getfield      #19                 // Field portOffset:I
     404: iadd
     405: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     408: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     411: pop
     412: aload_2
     413: ldc           #136                // String ${data.dir}
     415: aload_0
     416: getfield      #3                  // Field data:Ljava/lang/String;
     419: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     422: pop
     423: aload_2
     424: ldc           #137                // String ${max-hops}
     426: aload_0
     427: getfield      #5                  // Field maxHops:I
     430: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     433: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     436: pop
     437: aload_2
     438: ldc           #138                // String ${message-load-balancing}
     440: aload_0
     441: getfield      #7                  // Field messageLoadBalancing:Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
     444: invokevirtual #139                // Method org/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType.toString:()Ljava/lang/String;
     447: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     450: pop
     451: aload_2
     452: ldc           #119                // String ${user}
     454: aload_0
     455: invokevirtual #140                // Method getUser:()Ljava/lang/String;
     458: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     461: pop
     462: aload_2
     463: ldc           #141                // String ${password}
     465: aload_0
     466: invokevirtual #142                // Method getPassword:()Ljava/lang/String;
     469: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     472: pop
     473: aload_2
     474: ldc           #143                // String ${role}
     476: aload_0
     477: invokevirtual #144                // Method getRole:()Ljava/lang/String;
     480: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     483: pop
     484: aload_0
     485: getfield      #4                  // Field clustered:Z
     488: ifeq          584
     491: aload_2
     492: ldc           #145                // String ${host}
     494: aload_0
     495: invokevirtual #146                // Method getHostForClustered:()Ljava/lang/String;
     498: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     501: pop
     502: aload_0
     503: ldc           #147                // String etc/connector-settings.txt
     505: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
     508: astore        4
     510: aload_0
     511: aload         4
     513: aload_2
     514: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
     517: astore        4
     519: aload_2
     520: ldc           #148                // String ${connector-config.settings}
     522: aload         4
     524: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     527: pop
     528: aload_2
     529: ldc           #149                // String ${cluster-security.settings}
     531: aload_0
     532: ldc           #150                // String etc/cluster-security-settings.txt
     534: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
     537: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     540: pop
     541: aload_2
     542: ldc           #151                // String ${cluster.settings}
     544: aload_0
     545: aload_0
     546: ldc           #152                // String etc/cluster-settings.txt
     548: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
     551: aload_2
     552: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
     555: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     558: pop
     559: aload_2
     560: ldc           #153                // String ${cluster-user}
     562: aload_0
     563: invokevirtual #154                // Method getClusterUser:()Ljava/lang/String;
     566: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     569: pop
     570: aload_2
     571: ldc           #155                // String ${cluster-password}
     573: aload_0
     574: invokevirtual #156                // Method getClusterPassword:()Ljava/lang/String;
     577: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     580: pop
     581: goto          640
     584: aload_2
     585: ldc           #145                // String ${host}
     587: aload_0
     588: invokevirtual #23                 // Method getHost:()Ljava/lang/String;
     591: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     594: pop
     595: aload_2
     596: ldc           #148                // String ${connector-config.settings}
     598: ldc           #14                 // String
     600: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     603: pop
     604: aload_2
     605: ldc           #149                // String ${cluster-security.settings}
     607: ldc           #14                 // String
     609: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     612: pop
     613: aload_2
     614: ldc           #151                // String ${cluster.settings}
     616: ldc           #14                 // String
     618: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     621: pop
     622: aload_2
     623: ldc           #153                // String ${cluster-user}
     625: ldc           #14                 // String
     627: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     630: pop
     631: aload_2
     632: ldc           #155                // String ${cluster-password}
     634: ldc           #14                 // String
     636: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     639: pop
     640: aload_0
     641: aload_2
     642: invokespecial #157                // Method applyJMSObjects:(Ljava/util/HashMap;)V
     645: aload_0
     646: getfield      #35                 // Field home:Ljava/io/File;
     649: ifnull        668
     652: aload_2
     653: ldc           #158                // String ${home}
     655: aload_0
     656: aload_0
     657: getfield      #35                 // Field home:Ljava/io/File;
     660: iconst_0
     661: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
     664: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     667: pop
     668: aload_2
     669: ldc           #160                // String ${artemis.home}
     671: aload_0
     672: aload_0
     673: invokevirtual #161                // Method getHome:()Ljava/io/File;
     676: invokevirtual #162                // Method java/io/File.toString:()Ljava/lang/String;
     679: iconst_0
     680: invokevirtual #163                // Method path:(Ljava/lang/String;Z)Ljava/lang/String;
     683: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     686: pop
     687: aload_2
     688: ldc           #164                // String ${artemis.instance}
     690: aload_0
     691: aload_0
     692: getfield      #20                 // Field directory:Ljava/io/File;
     695: iconst_0
     696: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
     699: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     702: pop
     703: aload_2
     704: ldc           #165                // String ${artemis.instance.name}
     706: aload_0
     707: getfield      #20                 // Field directory:Ljava/io/File;
     710: invokevirtual #166                // Method java/io/File.getName:()Ljava/lang/String;
     713: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     716: pop
     717: aload_2
     718: ldc           #167                // String ${java.home}
     720: aload_0
     721: ldc           #168                // String java.home
     723: invokestatic  #83                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     726: iconst_0
     727: invokevirtual #163                // Method path:(Ljava/lang/String;Z)Ljava/lang/String;
     730: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     733: pop
     734: new           #36                 // class java/io/File
     737: dup
     738: aload_0
     739: getfield      #20                 // Field directory:Ljava/io/File;
     742: ldc           #169                // String bin
     744: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     747: invokevirtual #74                 // Method java/io/File.mkdirs:()Z
     750: pop
     751: new           #36                 // class java/io/File
     754: dup
     755: aload_0
     756: getfield      #20                 // Field directory:Ljava/io/File;
     759: ldc           #171                // String etc
     761: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     764: invokevirtual #74                 // Method java/io/File.mkdirs:()Z
     767: pop
     768: new           #36                 // class java/io/File
     771: dup
     772: aload_0
     773: getfield      #20                 // Field directory:Ljava/io/File;
     776: ldc           #172                // String log
     778: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     781: invokevirtual #74                 // Method java/io/File.mkdirs:()Z
     784: pop
     785: new           #36                 // class java/io/File
     788: dup
     789: aload_0
     790: getfield      #20                 // Field directory:Ljava/io/File;
     793: ldc           #173                // String tmp
     795: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     798: invokevirtual #74                 // Method java/io/File.mkdirs:()Z
     801: pop
     802: new           #36                 // class java/io/File
     805: dup
     806: aload_0
     807: getfield      #20                 // Field directory:Ljava/io/File;
     810: ldc           #174                // String data
     812: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     815: astore        4
     817: aload         4
     819: invokevirtual #74                 // Method java/io/File.mkdirs:()Z
     822: pop
     823: aload_0
     824: getfield      #15                 // Field javaOptions:Ljava/lang/String;
     827: ifnull        840
     830: aload_0
     831: getfield      #15                 // Field javaOptions:Ljava/lang/String;
     834: invokevirtual #175                // Method java/lang/String.length:()I
     837: ifne          846
     840: aload_0
     841: ldc           #14                 // String
     843: putfield      #15                 // Field javaOptions:Ljava/lang/String;
     846: aload_2
     847: ldc           #176                // String ${java-opts}
     849: aload_0
     850: getfield      #15                 // Field javaOptions:Ljava/lang/String;
     853: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     856: pop
     857: aload_0
     858: getfield      #87                 // Field IS_WINDOWS:Z
     861: ifeq          894
     864: aload_0
     865: ldc           #177                // String bin/artemis.cmd
     867: aconst_null
     868: iconst_0
     869: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     872: aload_0
     873: ldc           #179                // String bin/artemis-service.exe
     875: invokespecial #180                // Method write:(Ljava/lang/String;)V
     878: aload_0
     879: ldc           #181                // String bin/artemis-service.xml
     881: aload_2
     882: iconst_0
     883: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     886: aload_0
     887: ldc           #182                // String etc/artemis.profile.cmd
     889: aload_2
     890: iconst_0
     891: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     894: aload_0
     895: getfield      #87                 // Field IS_WINDOWS:Z
     898: ifeq          908
     901: aload_0
     902: getfield      #91                 // Field IS_CYGWIN:Z
     905: ifeq          950
     908: aload_0
     909: ldc           #183                // String bin/artemis
     911: aconst_null
     912: iconst_1
     913: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     916: aload_0
     917: ldc           #183                // String bin/artemis
     919: invokespecial #184                // Method makeExec:(Ljava/lang/String;)V
     922: aload_0
     923: ldc           #185                // String bin/artemis-service
     925: aconst_null
     926: iconst_1
     927: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     930: aload_0
     931: ldc           #185                // String bin/artemis-service
     933: invokespecial #184                // Method makeExec:(Ljava/lang/String;)V
     936: aload_0
     937: ldc           #186                // String etc/artemis.profile
     939: aload_2
     940: iconst_1
     941: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     944: aload_0
     945: ldc           #186                // String etc/artemis.profile
     947: invokespecial #184                // Method makeExec:(Ljava/lang/String;)V
     950: aload_0
     951: ldc           #187                // String etc/logging.properties
     953: aconst_null
     954: iconst_0
     955: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
     958: aload_0
     959: invokevirtual #53                 // Method isAllowAnonymous:()Z
     962: ifeq          1002
     965: aload_2
     966: ldc           #188                // String ${bootstrap.guest}
     968: new           #26                 // class java/lang/StringBuilder
     971: dup
     972: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     975: ldc           #189                // String default-user=\"
     977: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     980: aload_0
     981: invokevirtual #140                // Method getUser:()Ljava/lang/String;
     984: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     987: ldc           #190                // String \"
     989: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     992: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     995: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     998: pop
     999: goto          1011
    1002: aload_2
    1003: ldc           #188                // String ${bootstrap.guest}
    1005: ldc           #14                 // String
    1007: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1010: pop
    1011: aload_0
    1012: getfield      #18                 // Field noWeb:Z
    1015: ifeq          1030
    1018: aload_2
    1019: ldc           #191                // String ${bootstrap-web-settings}
    1021: ldc           #14                 // String
    1023: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1026: pop
    1027: goto          1048
    1030: aload_2
    1031: ldc           #191                // String ${bootstrap-web-settings}
    1033: aload_0
    1034: aload_0
    1035: ldc           #192                // String etc/bootstrap-web-settings.txt
    1037: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
    1040: aload_2
    1041: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
    1044: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1047: pop
    1048: aload_0
    1049: aload_2
    1050: iload_3
    1051: aload         4
    1053: invokespecial #193                // Method performAutoTune:(Ljava/util/HashMap;ZLjava/io/File;)V
    1056: aload_0
    1057: ldc           #194                // String etc/bootstrap.xml
    1059: aload_2
    1060: iconst_0
    1061: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
    1064: aload_0
    1065: ldc           #195                // String etc/broker.xml
    1067: aload_2
    1068: iconst_0
    1069: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
    1072: aload_0
    1073: ldc           #196                // String etc/artemis-roles.properties
    1075: aload_2
    1076: iconst_0
    1077: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
    1080: aload_0
    1081: ldc           #197                // String etc/artemis-users.properties
    1083: aload_2
    1084: iconst_0
    1085: invokespecial #178                // Method write:(Ljava/lang/String;Ljava/util/HashMap;Z)V
    1088: aload_1
    1089: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1092: ldc           #14                 // String
    1094: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1097: aload_1
    1098: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1101: ldc           #198                // String You can now start the broker by executing:
    1103: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1106: aload_1
    1107: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1110: ldc           #14                 // String
    1112: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1115: aload_1
    1116: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1119: ldc           #199                // String    \"%s\" run
    1121: iconst_1
    1122: anewarray     #77                 // class java/lang/Object
    1125: dup
    1126: iconst_0
    1127: aload_0
    1128: new           #36                 // class java/io/File
    1131: dup
    1132: aload_0
    1133: getfield      #20                 // Field directory:Ljava/io/File;
    1136: ldc           #183                // String bin/artemis
    1138: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
    1141: iconst_1
    1142: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
    1145: aastore
    1146: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1149: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1152: new           #36                 // class java/io/File
    1155: dup
    1156: aload_0
    1157: getfield      #20                 // Field directory:Ljava/io/File;
    1160: ldc           #185                // String bin/artemis-service
    1162: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
    1165: astore        5
    1167: aload_1
    1168: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1171: ldc           #14                 // String
    1173: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1176: aload_0
    1177: getfield      #87                 // Field IS_WINDOWS:Z
    1180: ifeq          1190
    1183: aload_0
    1184: getfield      #91                 // Field IS_CYGWIN:Z
    1187: ifeq          1319
    1190: new           #36                 // class java/io/File
    1193: dup
    1194: ldc           #200                // String /etc/init.d/
    1196: invokespecial #38                 // Method java/io/File."<init>":(Ljava/lang/String;)V
    1199: invokevirtual #201                // Method java/io/File.isDirectory:()Z
    1202: ifeq          1266
    1205: aload_1
    1206: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1209: ldc           #202                // String Or you can setup the broker as system service and run it in the background:
    1211: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1214: aload_1
    1215: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1218: ldc           #14                 // String
    1220: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1223: aload_1
    1224: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1227: ldc           #203                // String    sudo ln -s \"%s\" /etc/init.d/
    1229: pop
    1230: aload         5
    1232: invokevirtual #95                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
    1235: iconst_0
    1236: anewarray     #77                 // class java/lang/Object
    1239: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1242: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1245: aload_1
    1246: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1249: ldc           #204                // String    /etc/init.d/artemis-service start
    1251: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1254: aload_1
    1255: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1258: ldc           #14                 // String
    1260: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1263: goto          1319
    1266: aload_1
    1267: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1270: ldc           #205                // String Or you can run the broker in the background using:
    1272: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1275: aload_1
    1276: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1279: ldc           #14                 // String
    1281: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1284: aload_1
    1285: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1288: ldc           #206                // String    \"%s\" start
    1290: iconst_1
    1291: anewarray     #77                 // class java/lang/Object
    1294: dup
    1295: iconst_0
    1296: aload_0
    1297: aload         5
    1299: iconst_1
    1300: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
    1303: aastore
    1304: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1307: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1310: aload_1
    1311: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1314: ldc           #14                 // String
    1316: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1319: aload_0
    1320: getfield      #87                 // Field IS_WINDOWS:Z
    1323: ifeq          1499
    1326: new           #36                 // class java/io/File
    1329: dup
    1330: aload_0
    1331: getfield      #20                 // Field directory:Ljava/io/File;
    1334: ldc           #179                // String bin/artemis-service.exe
    1336: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
    1339: astore        5
    1341: aload_1
    1342: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1345: ldc           #207                // String Or you can setup the broker as Windows service and run it in the background:
    1347: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1350: aload_1
    1351: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1354: ldc           #14                 // String
    1356: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1359: aload_1
    1360: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1363: ldc           #208                // String    \"%s\" install
    1365: iconst_1
    1366: anewarray     #77                 // class java/lang/Object
    1369: dup
    1370: iconst_0
    1371: aload_0
    1372: aload         5
    1374: iconst_1
    1375: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
    1378: aastore
    1379: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1382: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1385: aload_1
    1386: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1389: ldc           #206                // String    \"%s\" start
    1391: iconst_1
    1392: anewarray     #77                 // class java/lang/Object
    1395: dup
    1396: iconst_0
    1397: aload_0
    1398: aload         5
    1400: iconst_1
    1401: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
    1404: aastore
    1405: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1408: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1411: aload_1
    1412: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1415: ldc           #14                 // String
    1417: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1420: aload_1
    1421: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1424: ldc           #209                // String    To stop the windows service:
    1426: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1429: aload_1
    1430: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1433: ldc           #210                // String       \"%s\" stop
    1435: iconst_1
    1436: anewarray     #77                 // class java/lang/Object
    1439: dup
    1440: iconst_0
    1441: aload_0
    1442: aload         5
    1444: iconst_1
    1445: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
    1448: aastore
    1449: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1452: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1455: aload_1
    1456: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1459: ldc           #14                 // String
    1461: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1464: aload_1
    1465: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1468: ldc           #211                // String    To uninstall the windows service
    1470: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1473: aload_1
    1474: getfield      #93                 // Field org/apache/activemq/artemis/cli/commands/ActionContext.out:Ljava/io/PrintStream;
    1477: ldc           #212                // String       \"%s\" uninstall
    1479: iconst_1
    1480: anewarray     #77                 // class java/lang/Object
    1483: dup
    1484: iconst_0
    1485: aload_0
    1486: aload         5
    1488: iconst_1
    1489: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
    1492: aastore
    1493: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1496: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
    1499: aconst_null
    1500: areturn

  private void applyJMSObjects(java.util.HashMap<java.lang.String, java.lang.String>);
    Code:
       0: new           #213                // class java/io/StringWriter
       3: dup
       4: invokespecial #214                // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: new           #215                // class java/io/PrintWriter
      11: dup
      12: aload_2
      13: invokespecial #216                // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      16: astore_3
      17: aload_3
      18: invokevirtual #217                // Method java/io/PrintWriter.println:()V
      21: aload_0
      22: invokespecial #218                // Method getQueueList:()[Ljava/lang/String;
      25: astore        4
      27: aload         4
      29: arraylength
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload         5
      39: if_icmpge     84
      42: aload         4
      44: iload         6
      46: aaload
      47: astore        7
      49: aload_3
      50: new           #26                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #219                // String       <queue name=\"
      59: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload         7
      64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #220                // String \"/>
      69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokevirtual #221                // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      78: iinc          6, 1
      81: goto          35
      84: aload_0
      85: invokespecial #222                // Method getTopicList:()[Ljava/lang/String;
      88: astore        4
      90: aload         4
      92: arraylength
      93: istore        5
      95: iconst_0
      96: istore        6
      98: iload         6
     100: iload         5
     102: if_icmpge     147
     105: aload         4
     107: iload         6
     109: aaload
     110: astore        7
     112: aload_3
     113: new           #26                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #223                // String       <topic name=\"
     122: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload         7
     127: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: ldc           #220                // String \"/>
     132: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokevirtual #221                // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
     141: iinc          6, 1
     144: goto          98
     147: aload_1
     148: ldc           #224                // String ${jms-list.settings}
     150: aload_2
     151: invokevirtual #225                // Method java/io/StringWriter.toString:()Ljava/lang/String;
     154: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: return

  private void performAutoTune(java.util.HashMap<java.lang.String, java.lang.String>, boolean, java.io.File);
    Code:
       0: aload_0
       1: getfield      #226                // Field noAutoTune:Z
       4: ifeq          19
       7: aload_1
       8: ldc           #227                // String ${journal-buffer.settings}
      10: ldc           #14                 // String
      12: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: goto          206
      19: sipush        250
      22: istore        4
      24: getstatic     #228                // Field java/lang/System.out:Ljava/io/PrintStream;
      27: ldc           #14                 // String
      29: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      32: getstatic     #228                // Field java/lang/System.out:Ljava/io/PrintStream;
      35: ldc           #229                // String Auto tuning journal ...
      37: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      40: aload_3
      41: sipush        4096
      44: iload         4
      46: iconst_5
      47: aload_0
      48: getfield      #230                // Field verbose:Z
      51: iload_2
      52: invokestatic  #231                // Method org/apache/activemq/artemis/cli/commands/util/SyncCalculation.syncTest:(Ljava/io/File;IIIZZ)J
      55: lstore        5
      57: lload         5
      59: iload         4
      61: i2l
      62: invokestatic  #232                // Method org/apache/activemq/artemis/cli/commands/util/SyncCalculation.toNanos:(JJ)J
      65: lstore        7
      67: iload         4
      69: i2d
      70: lload         5
      72: l2d
      73: ddiv
      74: dstore        9
      76: new           #233                // class java/text/DecimalFormat
      79: dup
      80: ldc           #234                // String ###.##
      82: invokespecial #235                // Method java/text/DecimalFormat."<init>":(Ljava/lang/String;)V
      85: dload         9
      87: invokevirtual #236                // Method java/text/DecimalFormat.format:(D)Ljava/lang/String;
      90: astore        11
      92: new           #97                 // class java/util/HashMap
      95: dup
      96: invokespecial #98                 // Method java/util/HashMap."<init>":()V
      99: astore        12
     101: aload         12
     103: ldc           #237                // String ${nanoseconds}
     105: lload         7
     107: invokestatic  #238                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     110: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload         12
     116: ldc           #239                // String ${writesPerMillisecond}
     118: aload         11
     120: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: getstatic     #228                // Field java/lang/System.out:Ljava/io/PrintStream;
     127: new           #26                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #240                // String done! Your system can make
     136: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload         11
     141: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #241                // String  writes per millisecond, your journal-buffer-timeout will be
     146: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: lload         7
     151: invokevirtual #242                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     154: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     160: aload_1
     161: ldc           #227                // String ${journal-buffer.settings}
     163: aload_0
     164: aload_0
     165: ldc           #243                // String etc/journal-buffer-settings.txt
     167: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
     170: aload         12
     172: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
     175: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     178: pop
     179: goto          206
     182: astore        4
     184: aload_1
     185: ldc           #227                // String ${journal-buffer.settings}
     187: ldc           #14                 // String
     189: invokevirtual #103                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     192: pop
     193: aload         4
     195: invokevirtual #245                // Method java/lang/Exception.printStackTrace:()V
     198: getstatic     #246                // Field java/lang/System.err:Ljava/io/PrintStream;
     201: ldc           #247                // String Couldn\'t perform sync calculation, using default values
     203: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     206: return
    Exception table:
       from    to  target type
          19   179   182   Class java/lang/Exception

  public boolean supportsLibaio();
    Code:
       0: aload_0
       1: getfield      #248                // Field forceLibaio:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: invokestatic  #249                // Method org/apache/activemq/artemis/jlibaio/LibaioContext.isLoaded:()Z
      12: ifeq          187
      15: new           #250                // class org/apache/activemq/artemis/jlibaio/LibaioContext
      18: dup
      19: iconst_1
      20: iconst_1
      21: invokespecial #251                // Method org/apache/activemq/artemis/jlibaio/LibaioContext."<init>":(IZ)V
      24: astore_1
      25: aconst_null
      26: astore_2
      27: new           #36                 // class java/io/File
      30: dup
      31: aload_0
      32: getfield      #20                 // Field directory:Ljava/io/File;
      35: ldc           #252                // String validateAIO.bin
      37: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      40: astore_3
      41: iconst_1
      42: istore        4
      44: aload_1
      45: aload_3
      46: iconst_1
      47: invokevirtual #253                // Method org/apache/activemq/artemis/jlibaio/LibaioContext.openFile:(Ljava/io/File;Z)Lorg/apache/activemq/artemis/jlibaio/LibaioFile;
      50: astore        5
      52: aload         5
      54: invokevirtual #254                // Method org/apache/activemq/artemis/jlibaio/LibaioFile.close:()V
      57: goto          65
      60: astore        5
      62: iconst_0
      63: istore        4
      65: aload_3
      66: invokevirtual #255                // Method java/io/File.delete:()Z
      69: pop
      70: iload         4
      72: ifne          110
      75: getstatic     #246                // Field java/lang/System.err:Ljava/io/PrintStream;
      78: new           #26                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc_w         #256                // String The filesystem used on
      88: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #20                 // Field directory:Ljava/io/File;
      95: invokevirtual #257                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc_w         #258                // String  doesn\'t support libAIO and O_DIRECT files, switching journal-type to NIO
     101: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokevirtual #96                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     110: iload         4
     112: istore        5
     114: aload_1
     115: ifnull        144
     118: aload_2
     119: ifnull        140
     122: aload_1
     123: invokevirtual #259                // Method org/apache/activemq/artemis/jlibaio/LibaioContext.close:()V
     126: goto          144
     129: astore        6
     131: aload_2
     132: aload         6
     134: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     137: goto          144
     140: aload_1
     141: invokevirtual #259                // Method org/apache/activemq/artemis/jlibaio/LibaioContext.close:()V
     144: iload         5
     146: ireturn
     147: astore_3
     148: aload_3
     149: astore_2
     150: aload_3
     151: athrow
     152: astore        7
     154: aload_1
     155: ifnull        184
     158: aload_2
     159: ifnull        180
     162: aload_1
     163: invokevirtual #259                // Method org/apache/activemq/artemis/jlibaio/LibaioContext.close:()V
     166: goto          184
     169: astore        8
     171: aload_2
     172: aload         8
     174: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     177: goto          184
     180: aload_1
     181: invokevirtual #259                // Method org/apache/activemq/artemis/jlibaio/LibaioContext.close:()V
     184: aload         7
     186: athrow
     187: iconst_0
     188: ireturn
    Exception table:
       from    to  target type
          44    57    60   Class java/lang/Exception
         122   126   129   Class java/lang/Throwable
          27   114   147   Class java/lang/Throwable
          27   114   152   any
         162   166   169   Class java/lang/Throwable
         147   154   152   any

  private void makeExec(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #36                 // class java/io/File
       3: dup
       4: aload_0
       5: getfield      #20                 // Field directory:Ljava/io/File;
       8: aload_1
       9: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: invokestatic  #261                // Method org/apache/activemq/artemis/utils/FileUtil.makeExec:(Ljava/io/File;)V
      15: return

  private java.lang.String[] getQueueList();
    Code:
       0: aload_0
       1: getfield      #262                // Field queues:Ljava/lang/String;
       4: ifnonnull     12
       7: iconst_0
       8: anewarray     #263                // class java/lang/String
      11: areturn
      12: aload_0
      13: getfield      #262                // Field queues:Ljava/lang/String;
      16: ldc_w         #264                // String ,
      19: invokevirtual #265                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      22: areturn

  private java.lang.String[] getTopicList();
    Code:
       0: aload_0
       1: getfield      #266                // Field topics:Ljava/lang/String;
       4: ifnonnull     12
       7: iconst_0
       8: anewarray     #263                // class java/lang/String
      11: areturn
      12: aload_0
      13: getfield      #266                // Field topics:Ljava/lang/String;
      16: ldc_w         #264                // String ,
      19: invokevirtual #265                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      22: areturn

  java.lang.String path(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #36                 // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #38                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: iload_2
      10: invokespecial #159                // Method path:(Ljava/io/File;Z)Ljava/lang/String;
      13: areturn

  private java.lang.String path(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifeq          16
       4: aload_0
       5: getfield      #91                 // Field IS_CYGWIN:Z
       8: ifeq          16
      11: aload_1
      12: invokevirtual #95                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      15: areturn
      16: aload_1
      17: invokevirtual #95                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      20: areturn

  private void write(java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #36                 // class java/io/File
       5: dup
       6: aload_0
       7: getfield      #20                 // Field directory:Ljava/io/File;
      10: aload_1
      11: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      14: aload_2
      15: iload_3
      16: invokespecial #267                // Method write:(Ljava/lang/String;Ljava/io/File;Ljava/util/HashMap;Z)V
      19: return

  private void write(java.lang.String, java.io.File, java.util.HashMap<java.lang.String, java.lang.String>, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #73                 // Method java/io/File.exists:()Z
       4: ifeq          36
       7: aload_0
       8: getfield      #34                 // Field force:Z
      11: ifne          36
      14: new           #75                 // class java/lang/RuntimeException
      17: dup
      18: ldc_w         #268                // String The file \'%s\' already exists.  Use --force to overwrite.
      21: iconst_1
      22: anewarray     #77                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_2
      28: aastore
      29: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_0
      38: aload_1
      39: invokespecial #111                // Method readTextFile:(Ljava/lang/String;)Ljava/lang/String;
      42: aload_3
      43: invokespecial #112                // Method applyFilters:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;
      46: astore        5
      48: iload         4
      50: ifeq          66
      53: aload_0
      54: getfield      #91                 // Field IS_CYGWIN:Z
      57: ifeq          66
      60: ldc_w         #269                // String \n
      63: goto          72
      66: ldc_w         #270                // String line.separator
      69: invokestatic  #83                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      72: astore        6
      74: aload         5
      76: ldc_w         #271                // String \\r?\\n
      79: aload         6
      81: invokestatic  #272                // Method java/util/regex/Matcher.quoteReplacement:(Ljava/lang/String;)Ljava/lang/String;
      84: invokevirtual #273                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      87: astore        5
      89: new           #274                // class java/io/ByteArrayInputStream
      92: dup
      93: aload         5
      95: aload_0
      96: getfield      #13                 // Field encoding:Ljava/lang/String;
      99: invokevirtual #275                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
     102: invokespecial #276                // Method java/io/ByteArrayInputStream."<init>":([B)V
     105: astore        7
     107: new           #277                // class java/io/FileOutputStream
     110: dup
     111: aload_2
     112: invokespecial #278                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
     115: astore        8
     117: aconst_null
     118: astore        9
     120: aload_0
     121: aload         7
     123: aload         8
     125: invokespecial #279                // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
     128: aload         8
     130: ifnull        215
     133: aload         9
     135: ifnull        158
     138: aload         8
     140: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     143: goto          215
     146: astore        10
     148: aload         9
     150: aload         10
     152: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     155: goto          215
     158: aload         8
     160: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     163: goto          215
     166: astore        10
     168: aload         10
     170: astore        9
     172: aload         10
     174: athrow
     175: astore        11
     177: aload         8
     179: ifnull        212
     182: aload         9
     184: ifnull        207
     187: aload         8
     189: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     192: goto          212
     195: astore        12
     197: aload         9
     199: aload         12
     201: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     204: goto          212
     207: aload         8
     209: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     212: aload         11
     214: athrow
     215: return
    Exception table:
       from    to  target type
         138   143   146   Class java/lang/Throwable
         120   128   166   Class java/lang/Throwable
         120   128   175   any
         187   192   195   Class java/lang/Throwable
         166   177   175   any

  private java.lang.String applyFilters(java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        63
       4: aload_2
       5: invokevirtual #281                // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       8: invokeinterface #282,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #283,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          63
      23: aload_3
      24: invokeinterface #284,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #285                // class java/util/Map$Entry
      32: astore        4
      34: aload_0
      35: aload_1
      36: aload         4
      38: invokeinterface #286,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      43: checkcast     #263                // class java/lang/String
      46: aload         4
      48: invokeinterface #287,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: checkcast     #263                // class java/lang/String
      56: invokespecial #288                // Method replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      59: astore_1
      60: goto          14
      63: aload_1
      64: areturn

  private java.lang.String readTextFile(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #289                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #290                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokevirtual #291                // Method openStream:(Ljava/lang/String;)Ljava/io/InputStream;
      13: astore_3
      14: aconst_null
      15: astore        4
      17: aload_0
      18: aload_3
      19: aload_2
      20: invokespecial #279                // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      23: aload_3
      24: ifnull        104
      27: aload         4
      29: ifnull        51
      32: aload_3
      33: invokevirtual #292                // Method java/io/InputStream.close:()V
      36: goto          104
      39: astore        5
      41: aload         4
      43: aload         5
      45: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      48: goto          104
      51: aload_3
      52: invokevirtual #292                // Method java/io/InputStream.close:()V
      55: goto          104
      58: astore        5
      60: aload         5
      62: astore        4
      64: aload         5
      66: athrow
      67: astore        6
      69: aload_3
      70: ifnull        101
      73: aload         4
      75: ifnull        97
      78: aload_3
      79: invokevirtual #292                // Method java/io/InputStream.close:()V
      82: goto          101
      85: astore        7
      87: aload         4
      89: aload         7
      91: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      94: goto          101
      97: aload_3
      98: invokevirtual #292                // Method java/io/InputStream.close:()V
     101: aload         6
     103: athrow
     104: new           #263                // class java/lang/String
     107: dup
     108: aload_2
     109: invokevirtual #293                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     112: ldc           #12                 // String UTF-8
     114: invokespecial #294                // Method java/lang/String."<init>":([BLjava/lang/String;)V
     117: areturn
    Exception table:
       from    to  target type
          32    36    39   Class java/lang/Throwable
          17    23    58   Class java/lang/Throwable
          17    23    67   any
          78    82    85   Class java/lang/Throwable
          58    69    67   any

  private void write(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #36                 // class java/io/File
       3: dup
       4: aload_0
       5: getfield      #20                 // Field directory:Ljava/io/File;
       8: aload_1
       9: invokespecial #170                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: astore_2
      13: aload_2
      14: invokevirtual #73                 // Method java/io/File.exists:()Z
      17: ifeq          49
      20: aload_0
      21: getfield      #34                 // Field force:Z
      24: ifne          49
      27: new           #75                 // class java/lang/RuntimeException
      30: dup
      31: ldc_w         #268                // String The file \'%s\' already exists.  Use --force to overwrite.
      34: iconst_1
      35: anewarray     #77                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_2
      41: aastore
      42: invokestatic  #78                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: invokespecial #79                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: new           #277                // class java/io/FileOutputStream
      52: dup
      53: aload_2
      54: invokespecial #278                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      57: astore_3
      58: aconst_null
      59: astore        4
      61: aload_0
      62: aload_1
      63: invokevirtual #291                // Method openStream:(Ljava/lang/String;)Ljava/io/InputStream;
      66: astore        5
      68: aconst_null
      69: astore        6
      71: aload_0
      72: aload         5
      74: aload_3
      75: invokespecial #279                // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      78: aload         5
      80: ifnull        165
      83: aload         6
      85: ifnull        108
      88: aload         5
      90: invokevirtual #292                // Method java/io/InputStream.close:()V
      93: goto          165
      96: astore        7
      98: aload         6
     100: aload         7
     102: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     105: goto          165
     108: aload         5
     110: invokevirtual #292                // Method java/io/InputStream.close:()V
     113: goto          165
     116: astore        7
     118: aload         7
     120: astore        6
     122: aload         7
     124: athrow
     125: astore        8
     127: aload         5
     129: ifnull        162
     132: aload         6
     134: ifnull        157
     137: aload         5
     139: invokevirtual #292                // Method java/io/InputStream.close:()V
     142: goto          162
     145: astore        9
     147: aload         6
     149: aload         9
     151: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     154: goto          162
     157: aload         5
     159: invokevirtual #292                // Method java/io/InputStream.close:()V
     162: aload         8
     164: athrow
     165: aload_3
     166: ifnull        246
     169: aload         4
     171: ifnull        193
     174: aload_3
     175: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     178: goto          246
     181: astore        5
     183: aload         4
     185: aload         5
     187: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     190: goto          246
     193: aload_3
     194: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     197: goto          246
     200: astore        5
     202: aload         5
     204: astore        4
     206: aload         5
     208: athrow
     209: astore        10
     211: aload_3
     212: ifnull        243
     215: aload         4
     217: ifnull        239
     220: aload_3
     221: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     224: goto          243
     227: astore        11
     229: aload         4
     231: aload         11
     233: invokevirtual #260                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     236: goto          243
     239: aload_3
     240: invokevirtual #280                // Method java/io/FileOutputStream.close:()V
     243: aload         10
     245: athrow
     246: return
    Exception table:
       from    to  target type
          88    93    96   Class java/lang/Throwable
          71    78   116   Class java/lang/Throwable
          71    78   125   any
         137   142   145   Class java/lang/Throwable
         116   127   125   any
         174   178   181   Class java/lang/Throwable
          61   165   200   Class java/lang/Throwable
          61   165   209   any
         220   224   227   Class java/lang/Throwable
         200   211   209   any

  private java.lang.String replace(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #295                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
       5: aload_3
       6: invokestatic  #272                // Method java/util/regex/Matcher.quoteReplacement:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #273                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  private void copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: sipush        4096
       3: newarray       byte
       5: astore_3
       6: aload_1
       7: aload_3
       8: invokevirtual #296                // Method java/io/InputStream.read:([B)I
      11: istore        4
      13: iload         4
      15: iflt          36
      18: aload_2
      19: aload_3
      20: iconst_0
      21: iload         4
      23: invokevirtual #297                // Method java/io/OutputStream.write:([BII)V
      26: aload_1
      27: aload_3
      28: invokevirtual #296                // Method java/io/InputStream.read:([B)I
      31: istore        4
      33: goto          13
      36: return

  static {};
    Code:
       0: ldc_w         #298                // int 61616
       3: invokestatic  #299                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: putstatic     #123                // Field DEFAULT_PORT:Ljava/lang/Integer;
       9: sipush        5672
      12: invokestatic  #299                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: putstatic     #127                // Field AMQP_PORT:Ljava/lang/Integer;
      18: ldc_w         #300                // int 61613
      21: invokestatic  #299                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: putstatic     #129                // Field STOMP_PORT:Ljava/lang/Integer;
      27: sipush        5445
      30: invokestatic  #299                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: putstatic     #131                // Field HQ_PORT:Ljava/lang/Integer;
      36: sipush        8161
      39: invokestatic  #299                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: putstatic     #135                // Field HTTP_PORT:Ljava/lang/Integer;
      45: sipush        1883
      48: invokestatic  #299                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: putstatic     #133                // Field MQTT_PORT:Ljava/lang/Integer;
      54: return
}
