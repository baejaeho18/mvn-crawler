Compiled from "SharedStoreLiveActivation.java"
public final class org.apache.activemq.artemis.core.server.impl.SharedStoreLiveActivation extends org.apache.activemq.artemis.core.server.impl.LiveActivation {
  private org.apache.activemq.artemis.core.server.cluster.ha.SharedStoreMasterPolicy sharedStoreMasterPolicy;

  private org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl activeMQServer;

  public org.apache.activemq.artemis.core.server.impl.SharedStoreLiveActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, org.apache.activemq.artemis.core.server.cluster.ha.SharedStoreMasterPolicy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/core/server/impl/LiveActivation."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sharedStoreMasterPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy;
      14: return

  public void run();
    Code:
       0: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.awaitingLiveLock:()V
       8: aload_0
       9: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      12: invokevirtual #6                  // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.checkJournalDirectory:()V
      15: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      18: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isDebugEnabled:()Z
      23: ifeq          53
      26: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      29: new           #8                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #10                 // String First part initialization on
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokeinterface #14,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      53: aload_0
      54: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      57: iconst_0
      58: invokevirtual #15                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart1:(Z)Z
      61: ifne          65
      64: return
      65: aload_0
      66: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      69: invokevirtual #16                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      72: invokevirtual #17                 // Method org/apache/activemq/artemis/core/server/NodeManager.isBackupLive:()Z
      75: ifeq          136
      78: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      81: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isDebugEnabled:()Z
      86: ifeq          116
      89: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      92: new           #8                  // class java/lang/StringBuilder
      95: dup
      96: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #18                 // String announcing backup to the former live
     101: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokeinterface #14,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     116: aload_0
     117: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     120: invokevirtual #19                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
     123: invokevirtual #20                 // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.start:()V
     126: aload_0
     127: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     130: invokevirtual #19                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
     133: invokevirtual #21                 // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.announceBackup:()V
     136: aload_0
     137: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     140: aload_0
     141: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     144: invokevirtual #16                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     147: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/NodeManager.startLiveNode:()Lorg/apache/activemq/artemis/core/server/ActivateCallback;
     150: invokevirtual #23                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.registerActivateCallback:(Lorg/apache/activemq/artemis/core/server/ActivateCallback;)V
     153: aload_0
     154: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     157: invokevirtual #24                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getState:()Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     160: getstatic     #25                 // Field org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE.STOPPED:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     163: if_acmpeq     179
     166: aload_0
     167: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     170: invokevirtual #24                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getState:()Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     173: getstatic     #26                 // Field org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE.STOPPING:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     176: if_acmpne     180
     179: return
     180: aload_0
     181: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     184: iconst_0
     185: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart2:(Z)V
     188: aload_0
     189: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     192: invokevirtual #28                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.completeActivation:()V
     195: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     198: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.serverIsLive:()V
     203: goto          216
     206: astore_1
     207: getstatic     #4                  // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     210: aload_1
     211: invokeinterface #31,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.initializationError:(Ljava/lang/Throwable;)V
     216: return
    Exception table:
       from    to  target type
           0    64   206   Class java/lang/Exception
          65   179   206   Class java/lang/Exception
         180   203   206   Class java/lang/Exception

  public void close(boolean, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #16                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
       7: astore_3
       8: aload_3
       9: ifnull        37
      12: aload_0
      13: getfield      #3                  // Field sharedStoreMasterPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy;
      16: invokevirtual #32                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy.isFailoverOnServerShutdown:()Z
      19: ifne          26
      22: iload_1
      23: ifeq          33
      26: aload_3
      27: invokevirtual #33                 // Method org/apache/activemq/artemis/core/server/NodeManager.crashLiveServer:()V
      30: goto          37
      33: aload_3
      34: invokevirtual #34                 // Method org/apache/activemq/artemis/core/server/NodeManager.pauseLiveServer:()V
      37: return
}
