Compiled from "InVMConnection.java"
public class org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection implements org.apache.activemq.artemis.spi.core.remoting.Connection {
  private static final boolean isTrace;

  private final org.apache.activemq.artemis.spi.core.remoting.BufferHandler handler;

  private final org.apache.activemq.artemis.spi.core.remoting.ConnectionLifeCycleListener listener;

  private final java.lang.String id;

  private boolean closed;

  private static boolean flushEnabled;

  private final int serverID;

  private final java.util.concurrent.Executor executor;

  private volatile boolean closing;

  private final org.apache.activemq.artemis.core.security.ActiveMQPrincipal defaultActiveMQPrincipal;

  private org.apache.activemq.artemis.spi.core.protocol.RemotingConnection protocolConnection;

  public org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection(int, org.apache.activemq.artemis.spi.core.remoting.BufferHandler, org.apache.activemq.artemis.spi.core.remoting.ConnectionLifeCycleListener, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #5                  // Method org/apache/activemq/artemis/utils/UUIDGenerator.getInstance:()Lorg/apache/activemq/artemis/utils/UUIDGenerator;
       5: invokevirtual #6                  // Method org/apache/activemq/artemis/utils/UUIDGenerator.generateSimpleStringUUID:()Lorg/apache/activemq/artemis/api/core/SimpleString;
       8: invokevirtual #7                  // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      11: aload_2
      12: aload_3
      13: aload         4
      15: invokespecial #8                  // Method "<init>":(ILjava/lang/String;Lorg/apache/activemq/artemis/spi/core/remoting/BufferHandler;Lorg/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener;Ljava/util/concurrent/Executor;)V
      18: return

  public org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection(int, java.lang.String, org.apache.activemq.artemis.spi.core.remoting.BufferHandler, org.apache.activemq.artemis.spi.core.remoting.ConnectionLifeCycleListener, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aconst_null
       9: invokespecial #9                  // Method "<init>":(ILjava/lang/String;Lorg/apache/activemq/artemis/spi/core/remoting/BufferHandler;Lorg/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener;Ljava/util/concurrent/Executor;Lorg/apache/activemq/artemis/core/security/ActiveMQPrincipal;)V
      12: return

  public org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection(int, java.lang.String, org.apache.activemq.artemis.spi.core.remoting.BufferHandler, org.apache.activemq.artemis.spi.core.remoting.ConnectionLifeCycleListener, java.util.concurrent.Executor, org.apache.activemq.artemis.core.security.ActiveMQPrincipal);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #11                 // Field serverID:I
       9: aload_0
      10: aload_3
      11: putfield      #1                  // Field handler:Lorg/apache/activemq/artemis/spi/core/remoting/BufferHandler;
      14: aload_0
      15: aload         4
      17: putfield      #12                 // Field listener:Lorg/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener;
      20: aload_0
      21: aload_2
      22: putfield      #2                  // Field id:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
      31: aload_0
      32: aload         6
      34: putfield      #14                 // Field defaultActiveMQPrincipal:Lorg/apache/activemq/artemis/core/security/ActiveMQPrincipal;
      37: return

  public void forceClose();
    Code:
       0: return

  public boolean isWritable(org.apache.activemq.artemis.spi.core.remoting.ReadyListener);
    Code:
       0: iconst_1
       1: ireturn

  public void fireReady(boolean);
    Code:
       0: return

  public org.apache.activemq.artemis.spi.core.protocol.RemotingConnection getProtocolConnection();
    Code:
       0: aload_0
       1: getfield      #15                 // Field protocolConnection:Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
       4: areturn

  public void setProtocolConnection(org.apache.activemq.artemis.spi.core.protocol.RemotingConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field protocolConnection:Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
       5: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #16                 // Field closing:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #16                 // Field closing:Z
      13: aload_0
      14: dup
      15: astore_1
      16: monitorenter
      17: aload_0
      18: getfield      #4                  // Field closed:Z
      21: ifne          42
      24: aload_0
      25: getfield      #12                 // Field listener:Lorg/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener;
      28: aload_0
      29: getfield      #2                  // Field id:Ljava/lang/String;
      32: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener.connectionDestroyed:(Ljava/lang/Object;)V
      37: aload_0
      38: iconst_1
      39: putfield      #4                  // Field closed:Z
      42: aload_1
      43: monitorexit
      44: goto          52
      47: astore_2
      48: aload_1
      49: monitorexit
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
          17    44    47   any
          47    50    47   any

  public org.apache.activemq.artemis.api.core.ActiveMQBuffer createTransportBuffer(int);
    Code:
       0: iload_1
       1: invokestatic  #18                 // Method org/apache/activemq/artemis/api/core/ActiveMQBuffers.dynamicBuffer:(I)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
       4: areturn

  public java.lang.Object getID();
    Code:
       0: aload_0
       1: getfield      #2                  // Field id:Ljava/lang/String;
       4: areturn

  public void checkFlushBatchBuffer();
    Code:
       0: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: aconst_null
       5: invokevirtual #19                 // Method write:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZZLio/netty/channel/ChannelFutureListener;)V
       8: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #19                 // Method write:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZZLio/netty/channel/ChannelFutureListener;)V
       8: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean, boolean, io.netty.channel.ChannelFutureListener);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_1
       3: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.capacity:()I
       8: invokeinterface #21,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.copy:(II)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      13: astore        5
      15: aload         5
      17: aload_1
      18: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readerIndex:()I
      23: aload_1
      24: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writerIndex:()I
      29: invokeinterface #24,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.setIndex:(II)V
      34: aload_0
      35: getfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
      38: new           #25                 // class org/apache/activemq/artemis/core/remoting/impl/invm/InVMConnection$1
      41: dup
      42: aload_0
      43: aload         5
      45: aload         4
      47: invokespecial #26                 // Method org/apache/activemq/artemis/core/remoting/impl/invm/InVMConnection$1."<init>":(Lorg/apache/activemq/artemis/core/remoting/impl/invm/InVMConnection;Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Lio/netty/channel/ChannelFutureListener;)V
      50: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      55: iload_2
      56: ifeq          131
      59: getstatic     #28                 // Field flushEnabled:Z
      62: ifeq          131
      65: new           #29                 // class java/util/concurrent/CountDownLatch
      68: dup
      69: iconst_1
      70: invokespecial #30                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      73: astore        6
      75: aload_0
      76: getfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
      79: new           #31                 // class org/apache/activemq/artemis/core/remoting/impl/invm/InVMConnection$2
      82: dup
      83: aload_0
      84: aload         6
      86: invokespecial #32                 // Method org/apache/activemq/artemis/core/remoting/impl/invm/InVMConnection$2."<init>":(Lorg/apache/activemq/artemis/core/remoting/impl/invm/InVMConnection;Ljava/util/concurrent/CountDownLatch;)V
      89: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      94: aload         6
      96: ldc2_w        #33                 // long 10l
      99: getstatic     #35                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     102: invokevirtual #36                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
     105: ifne          116
     108: getstatic     #37                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     111: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.timedOutFlushingInvmChannel:()V
     116: goto          131
     119: astore        7
     121: new           #40                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     124: dup
     125: aload         7
     127: invokespecial #41                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     130: athrow
     131: goto          136
     134: astore        6
     136: return
    Exception table:
       from    to  target type
          94   116   119   Class java/lang/InterruptedException
          34   131   134   Class java/util/concurrent/RejectedExecutionException

  public java.lang.String getRemoteAddress();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #45                 // String invm:
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #11                 // Field serverID:I
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public java.lang.String getLocalAddress();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #45                 // String invm:
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #11                 // Field serverID:I
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public int getBatchingBufferSize();
    Code:
       0: iconst_m1
       1: ireturn

  public boolean isUsingProtocolHandling();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.activemq.artemis.core.security.ActiveMQPrincipal getDefaultActiveMQPrincipal();
    Code:
       0: aload_0
       1: getfield      #14                 // Field defaultActiveMQPrincipal:Lorg/apache/activemq/artemis/core/security/ActiveMQPrincipal;
       4: areturn

  public static void setFlushEnabled(boolean);
    Code:
       0: iload_0
       1: putstatic     #28                 // Field flushEnabled:Z
       4: return

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public org.apache.activemq.artemis.api.core.TransportConfiguration getConnectorConfig();
    Code:
       0: new           #49                 // class java/util/HashMap
       3: dup
       4: invokespecial #50                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #52                 // String serverId
      11: aload_0
      12: getfield      #11                 // Field serverID:I
      15: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: new           #55                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
      27: dup
      28: ldc           #56                 // class org/apache/activemq/artemis/core/remoting/impl/invm/InVMConnectorFactory
      30: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: aload_1
      34: invokespecial #58                 // Method org/apache/activemq/artemis/api/core/TransportConfiguration."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      37: areturn

  public java.lang.String toString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #59                 // String InVMConnection [serverID=
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #11                 // Field serverID:I
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #60                 // String , id=
      21: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field id:Ljava/lang/String;
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #61                 // String ]
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static boolean access$000(org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ireturn

  static boolean access$100();
    Code:
       0: getstatic     #3                  // Field isTrace:Z
       3: ireturn

  static java.lang.String access$200(org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field id:Ljava/lang/String;
       4: areturn

  static org.apache.activemq.artemis.spi.core.remoting.BufferHandler access$300(org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handler:Lorg/apache/activemq/artemis/spi/core/remoting/BufferHandler;
       4: areturn

  static {};
    Code:
       0: getstatic     #37                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isTraceEnabled:()Z
       8: putstatic     #3                  // Field isTrace:Z
      11: iconst_1
      12: putstatic     #28                 // Field flushEnabled:Z
      15: return
}
