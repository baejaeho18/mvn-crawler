Compiled from "ActiveMQServer.java"
public interface org.apache.activemq.artemis.core.server.ActiveMQServer extends org.apache.activemq.artemis.core.server.ActiveMQComponent {
  public abstract void setIdentity(java.lang.String);

  public abstract java.lang.String getIdentity();

  public abstract java.lang.String describe();

  public abstract void addActivationParam(java.lang.String, java.lang.Object);

  public abstract org.apache.activemq.artemis.core.config.Configuration getConfiguration();

  public abstract org.apache.activemq.artemis.core.server.ServiceRegistry getServiceRegistry();

  public abstract org.apache.activemq.artemis.core.remoting.server.RemotingService getRemotingService();

  public abstract org.apache.activemq.artemis.core.persistence.StorageManager getStorageManager();

  public abstract org.apache.activemq.artemis.core.paging.PagingManager getPagingManager();

  public abstract org.apache.activemq.artemis.core.server.management.ManagementService getManagementService();

  public abstract org.apache.activemq.artemis.spi.core.security.ActiveMQSecurityManager getSecurityManager();

  public abstract org.apache.activemq.artemis.core.version.Version getVersion();

  public abstract org.apache.activemq.artemis.core.server.NodeManager getNodeManager();

  public abstract org.apache.activemq.artemis.core.management.impl.ActiveMQServerControlImpl getActiveMQServerControl();

  public abstract void registerActivateCallback(org.apache.activemq.artemis.core.server.ActivateCallback);

  public abstract void unregisterActivateCallback(org.apache.activemq.artemis.core.server.ActivateCallback);

  public abstract void checkQueueCreationLimit(java.lang.String) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.ServerSession createSession(java.lang.String, java.lang.String, java.lang.String, int, org.apache.activemq.artemis.spi.core.protocol.RemotingConnection, boolean, boolean, boolean, boolean, java.lang.String, org.apache.activemq.artemis.spi.core.protocol.SessionCallback, org.apache.activemq.artemis.core.server.ServerSessionFactory, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.security.SecurityStore getSecurityStore();

  public abstract void removeSession(java.lang.String) throws java.lang.Exception;

  public abstract java.util.Set<org.apache.activemq.artemis.core.server.ServerSession> getSessions();

  public abstract org.apache.activemq.artemis.core.settings.HierarchicalRepository<java.util.Set<org.apache.activemq.artemis.core.security.Role>> getSecurityRepository();

  public abstract org.apache.activemq.artemis.core.settings.HierarchicalRepository<org.apache.activemq.artemis.core.settings.impl.AddressSettings> getAddressSettingsRepository();

  public abstract int getConnectionCount();

  public abstract org.apache.activemq.artemis.core.postoffice.PostOffice getPostOffice();

  public abstract org.apache.activemq.artemis.core.server.QueueFactory getQueueFactory();

  public abstract org.apache.activemq.artemis.core.transaction.ResourceManager getResourceManager();

  public abstract java.util.List<org.apache.activemq.artemis.core.server.ServerSession> getSessions(java.lang.String);

  public abstract org.apache.activemq.artemis.core.server.ServerSession lookupSession(java.lang.String, java.lang.String);

  public abstract org.apache.activemq.artemis.core.server.cluster.ClusterManager getClusterManager();

  public abstract org.apache.activemq.artemis.api.core.SimpleString getNodeID();

  public abstract boolean isActive();

  public abstract void setJMSQueueCreator(org.apache.activemq.artemis.core.server.QueueCreator);

  public abstract org.apache.activemq.artemis.core.server.QueueCreator getJMSQueueCreator();

  public abstract boolean waitForActivation(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

  public abstract void createSharedQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.Queue createQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, boolean, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.Queue createQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, boolean, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.Queue createQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, boolean, boolean, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.Queue deployQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, boolean, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.Queue locateQueue(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract void destroyQueue(org.apache.activemq.artemis.api.core.SimpleString) throws java.lang.Exception;

  public abstract void destroyQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.core.security.SecurityAuth) throws java.lang.Exception;

  public abstract void destroyQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.core.security.SecurityAuth, boolean) throws java.lang.Exception;

  public abstract void destroyQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.core.security.SecurityAuth, boolean, boolean) throws java.lang.Exception;

  public abstract java.lang.String destroyConnectionWithSessionMetadata(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract java.util.concurrent.ScheduledExecutorService getScheduledPool();

  public abstract org.apache.activemq.artemis.utils.ExecutorFactory getExecutorFactory();

  public abstract void setGroupingHandler(org.apache.activemq.artemis.core.server.group.GroupingHandler);

  public abstract org.apache.activemq.artemis.core.server.group.GroupingHandler getGroupingHandler();

  public abstract org.apache.activemq.artemis.core.replication.ReplicationManager getReplicationManager();

  public abstract void deployDivert(org.apache.activemq.artemis.core.config.DivertConfiguration) throws java.lang.Exception;

  public abstract void destroyDivert(org.apache.activemq.artemis.api.core.SimpleString) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.impl.ConnectorsService getConnectorsService();

  public abstract void deployBridge(org.apache.activemq.artemis.core.config.BridgeConfiguration) throws java.lang.Exception;

  public abstract void destroyBridge(java.lang.String) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.ServerSession getSessionByID(java.lang.String);

  public abstract void threadDump();

  public abstract boolean isAddressBound(java.lang.String) throws java.lang.Exception;

  public abstract void stop(boolean) throws java.lang.Exception;

  public abstract void addProtocolManagerFactory(org.apache.activemq.artemis.spi.core.protocol.ProtocolManagerFactory);

  public abstract void removeProtocolManagerFactory(org.apache.activemq.artemis.spi.core.protocol.ProtocolManagerFactory);

  public abstract org.apache.activemq.artemis.core.server.ActiveMQServer createBackupServer(org.apache.activemq.artemis.core.config.Configuration);

  public abstract void addScaledDownNode(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract boolean hasScaledDown(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract org.apache.activemq.artemis.core.server.impl.Activation getActivation();

  public abstract org.apache.activemq.artemis.core.server.cluster.ha.HAPolicy getHAPolicy();

  public abstract void setHAPolicy(org.apache.activemq.artemis.core.server.cluster.ha.HAPolicy);

  public abstract void setMBeanServer(javax.management.MBeanServer);
}
