Compiled from "Configuration.java"
public interface org.apache.activemq.artemis.core.config.Configuration {
  public abstract java.lang.String getName();

  public abstract org.apache.activemq.artemis.core.config.Configuration setName(java.lang.String);

  public abstract boolean isClustered();

  public abstract boolean isPersistDeliveryCountBeforeDelivery();

  public abstract org.apache.activemq.artemis.core.config.Configuration setPersistDeliveryCountBeforeDelivery(boolean);

  public abstract boolean isPersistenceEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setPersistenceEnabled(boolean);

  public abstract java.util.Map<java.lang.String, org.apache.activemq.artemis.core.settings.impl.ResourceLimitSettings> getResourceLimitSettings();

  public abstract org.apache.activemq.artemis.core.config.Configuration setResourceLimitSettings(java.util.Map<java.lang.String, org.apache.activemq.artemis.core.settings.impl.ResourceLimitSettings>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addResourceLimitSettings(org.apache.activemq.artemis.core.settings.impl.ResourceLimitSettings);

  public abstract long getFileDeployerScanPeriod();

  public abstract org.apache.activemq.artemis.core.config.Configuration setFileDeployerScanPeriod(long);

  public abstract int getThreadPoolMaxSize();

  public abstract org.apache.activemq.artemis.core.config.Configuration setThreadPoolMaxSize(int);

  public abstract int getScheduledThreadPoolMaxSize();

  public abstract org.apache.activemq.artemis.core.config.Configuration setScheduledThreadPoolMaxSize(int);

  public abstract long getSecurityInvalidationInterval();

  public abstract org.apache.activemq.artemis.core.config.Configuration setSecurityInvalidationInterval(long);

  public abstract boolean isSecurityEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setSecurityEnabled(boolean);

  public abstract boolean isGracefulShutdownEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setGracefulShutdownEnabled(boolean);

  public abstract long getGracefulShutdownTimeout();

  public abstract org.apache.activemq.artemis.core.config.Configuration setGracefulShutdownTimeout(long);

  public abstract boolean isJMXManagementEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJMXManagementEnabled(boolean);

  public abstract java.lang.String getJMXDomain();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJMXDomain(java.lang.String);

  public abstract java.util.List<java.lang.String> getIncomingInterceptorClassNames();

  public abstract java.util.List<java.lang.String> getOutgoingInterceptorClassNames();

  public abstract org.apache.activemq.artemis.core.config.Configuration setIncomingInterceptorClassNames(java.util.List<java.lang.String>);

  public abstract org.apache.activemq.artemis.core.config.Configuration setOutgoingInterceptorClassNames(java.util.List<java.lang.String>);

  public abstract long getConnectionTTLOverride();

  public abstract org.apache.activemq.artemis.core.config.Configuration setConnectionTTLOverride(long);

  public abstract boolean isAsyncConnectionExecutionEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setEnabledAsyncConnectionExecution(boolean);

  public abstract java.util.Set<org.apache.activemq.artemis.api.core.TransportConfiguration> getAcceptorConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setAcceptorConfigurations(java.util.Set<org.apache.activemq.artemis.api.core.TransportConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addAcceptorConfiguration(org.apache.activemq.artemis.api.core.TransportConfiguration);

  public abstract org.apache.activemq.artemis.core.config.Configuration addAcceptorConfiguration(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.config.Configuration clearAcceptorConfigurations();

  public abstract java.util.Map<java.lang.String, org.apache.activemq.artemis.api.core.TransportConfiguration> getConnectorConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setConnectorConfigurations(java.util.Map<java.lang.String, org.apache.activemq.artemis.api.core.TransportConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addConnectorConfiguration(java.lang.String, org.apache.activemq.artemis.api.core.TransportConfiguration);

  public abstract org.apache.activemq.artemis.core.config.Configuration addConnectorConfiguration(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.config.Configuration clearConnectorConfigurations();

  public abstract java.util.List<org.apache.activemq.artemis.api.core.BroadcastGroupConfiguration> getBroadcastGroupConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setBroadcastGroupConfigurations(java.util.List<org.apache.activemq.artemis.api.core.BroadcastGroupConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addBroadcastGroupConfiguration(org.apache.activemq.artemis.api.core.BroadcastGroupConfiguration);

  public abstract java.util.Map<java.lang.String, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration> getDiscoveryGroupConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setDiscoveryGroupConfigurations(java.util.Map<java.lang.String, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addDiscoveryGroupConfiguration(java.lang.String, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);

  public abstract org.apache.activemq.artemis.core.server.group.impl.GroupingHandlerConfiguration getGroupingHandlerConfiguration();

  public abstract org.apache.activemq.artemis.core.config.Configuration setGroupingHandlerConfiguration(org.apache.activemq.artemis.core.server.group.impl.GroupingHandlerConfiguration);

  public abstract java.util.List<org.apache.activemq.artemis.core.config.BridgeConfiguration> getBridgeConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setBridgeConfigurations(java.util.List<org.apache.activemq.artemis.core.config.BridgeConfiguration>);

  public abstract java.util.List<org.apache.activemq.artemis.core.config.DivertConfiguration> getDivertConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setDivertConfigurations(java.util.List<org.apache.activemq.artemis.core.config.DivertConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addDivertConfiguration(org.apache.activemq.artemis.core.config.DivertConfiguration);

  public abstract java.util.List<org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration> getClusterConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setClusterConfigurations(java.util.List<org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addClusterConfiguration(org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration);

  public abstract org.apache.activemq.artemis.core.config.Configuration clearClusterConfigurations();

  public abstract java.util.List<org.apache.activemq.artemis.core.config.CoreQueueConfiguration> getQueueConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setQueueConfigurations(java.util.List<org.apache.activemq.artemis.core.config.CoreQueueConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addQueueConfiguration(org.apache.activemq.artemis.core.config.CoreQueueConfiguration);

  public abstract org.apache.activemq.artemis.api.core.SimpleString getManagementAddress();

  public abstract org.apache.activemq.artemis.core.config.Configuration setManagementAddress(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract org.apache.activemq.artemis.api.core.SimpleString getManagementNotificationAddress();

  public abstract org.apache.activemq.artemis.core.config.Configuration setManagementNotificationAddress(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract java.lang.String getClusterUser();

  public abstract org.apache.activemq.artemis.core.config.Configuration setClusterUser(java.lang.String);

  public abstract java.lang.String getClusterPassword();

  public abstract org.apache.activemq.artemis.core.config.Configuration setClusterPassword(java.lang.String);

  public abstract int getIDCacheSize();

  public abstract org.apache.activemq.artemis.core.config.Configuration setIDCacheSize(int);

  public abstract boolean isPersistIDCache();

  public abstract org.apache.activemq.artemis.core.config.Configuration setPersistIDCache(boolean);

  public abstract java.lang.String getBindingsDirectory();

  public abstract java.io.File getBindingsLocation();

  public abstract org.apache.activemq.artemis.core.config.Configuration setBindingsDirectory(java.lang.String);

  public abstract int getPageMaxConcurrentIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setPageMaxConcurrentIO(int);

  public abstract java.lang.String getJournalDirectory();

  public abstract java.io.File getJournalLocation();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalDirectory(java.lang.String);

  public abstract org.apache.activemq.artemis.core.server.JournalType getJournalType();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalType(org.apache.activemq.artemis.core.server.JournalType);

  public abstract boolean isJournalSyncTransactional();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalSyncTransactional(boolean);

  public abstract boolean isJournalSyncNonTransactional();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalSyncNonTransactional(boolean);

  public abstract int getJournalFileSize();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalFileSize(int);

  public abstract int getJournalCompactMinFiles();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalCompactMinFiles(int);

  public abstract int getJournalPoolFiles();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalPoolFiles(int);

  public abstract int getJournalCompactPercentage();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalCompactPercentage(int);

  public abstract int getJournalMinFiles();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalMinFiles(int);

  public abstract int getJournalMaxIO_AIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalMaxIO_AIO(int);

  public abstract int getJournalBufferTimeout_AIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalBufferTimeout_AIO(int);

  public abstract int getJournalBufferSize_AIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalBufferSize_AIO(int);

  public abstract int getJournalMaxIO_NIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalMaxIO_NIO(int);

  public abstract int getJournalBufferTimeout_NIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalBufferTimeout_NIO(int);

  public abstract int getJournalBufferSize_NIO();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalBufferSize_NIO(int);

  public abstract boolean isCreateBindingsDir();

  public abstract org.apache.activemq.artemis.core.config.Configuration setCreateBindingsDir(boolean);

  public abstract boolean isCreateJournalDir();

  public abstract org.apache.activemq.artemis.core.config.Configuration setCreateJournalDir(boolean);

  public abstract boolean isLogJournalWriteRate();

  public abstract org.apache.activemq.artemis.core.config.Configuration setLogJournalWriteRate(boolean);

  public abstract int getJournalPerfBlastPages();

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalPerfBlastPages(int);

  public abstract long getServerDumpInterval();

  public abstract org.apache.activemq.artemis.core.config.Configuration setServerDumpInterval(long);

  public abstract int getMemoryWarningThreshold();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMemoryWarningThreshold(int);

  public abstract long getMemoryMeasureInterval();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMemoryMeasureInterval(long);

  public abstract boolean isRunSyncSpeedTest();

  public abstract org.apache.activemq.artemis.core.config.Configuration setRunSyncSpeedTest(boolean);

  public abstract java.lang.String getPagingDirectory();

  public abstract org.apache.activemq.artemis.core.config.Configuration setPagingDirectory(java.lang.String);

  public abstract java.io.File getPagingLocation();

  public abstract java.lang.String getLargeMessagesDirectory();

  public abstract java.io.File getLargeMessagesLocation();

  public abstract org.apache.activemq.artemis.core.config.Configuration setLargeMessagesDirectory(java.lang.String);

  public abstract boolean isWildcardRoutingEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setWildcardRoutingEnabled(boolean);

  public abstract long getTransactionTimeout();

  public abstract org.apache.activemq.artemis.core.config.Configuration setTransactionTimeout(long);

  public abstract boolean isMessageCounterEnabled();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMessageCounterEnabled(boolean);

  public abstract long getMessageCounterSamplePeriod();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMessageCounterSamplePeriod(long);

  public abstract int getMessageCounterMaxDayHistory();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMessageCounterMaxDayHistory(int);

  public abstract long getTransactionTimeoutScanPeriod();

  public abstract org.apache.activemq.artemis.core.config.Configuration setTransactionTimeoutScanPeriod(long);

  public abstract long getMessageExpiryScanPeriod();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMessageExpiryScanPeriod(long);

  public abstract int getMessageExpiryThreadPriority();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMessageExpiryThreadPriority(int);

  public abstract java.util.Map<java.lang.String, org.apache.activemq.artemis.core.settings.impl.AddressSettings> getAddressesSettings();

  public abstract org.apache.activemq.artemis.core.config.Configuration setAddressesSettings(java.util.Map<java.lang.String, org.apache.activemq.artemis.core.settings.impl.AddressSettings>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addAddressesSetting(java.lang.String, org.apache.activemq.artemis.core.settings.impl.AddressSettings);

  public abstract org.apache.activemq.artemis.core.config.Configuration clearAddressesSettings();

  public abstract org.apache.activemq.artemis.core.config.Configuration setSecurityRoles(java.util.Map<java.lang.String, java.util.Set<org.apache.activemq.artemis.core.security.Role>>);

  public abstract java.util.Map<java.lang.String, java.util.Set<org.apache.activemq.artemis.core.security.Role>> getSecurityRoles();

  public abstract org.apache.activemq.artemis.core.config.Configuration setConnectorServiceConfigurations(java.util.List<org.apache.activemq.artemis.core.config.ConnectorServiceConfiguration>);

  public abstract org.apache.activemq.artemis.core.config.Configuration addConnectorServiceConfiguration(org.apache.activemq.artemis.core.config.ConnectorServiceConfiguration);

  public abstract java.util.List<org.apache.activemq.artemis.core.config.ConnectorServiceConfiguration> getConnectorServiceConfigurations();

  public abstract org.apache.activemq.artemis.core.config.Configuration setPasswordCodec(java.lang.String);

  public abstract java.lang.String getPasswordCodec();

  public abstract org.apache.activemq.artemis.core.config.Configuration setMaskPassword(boolean);

  public abstract boolean isMaskPassword();

  public abstract org.apache.activemq.artemis.core.config.Configuration setResolveProtocols(boolean);

  public abstract boolean isResolveProtocols();

  public abstract org.apache.activemq.artemis.core.config.Configuration copy() throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.config.Configuration setJournalLockAcquisitionTimeout(long);

  public abstract long getJournalLockAcquisitionTimeout();

  public abstract org.apache.activemq.artemis.core.config.HAPolicyConfiguration getHAPolicyConfiguration();

  public abstract org.apache.activemq.artemis.core.config.Configuration setHAPolicyConfiguration(org.apache.activemq.artemis.core.config.HAPolicyConfiguration);

  public abstract void setBrokerInstance(java.io.File);

  public abstract java.io.File getBrokerInstance();
}
