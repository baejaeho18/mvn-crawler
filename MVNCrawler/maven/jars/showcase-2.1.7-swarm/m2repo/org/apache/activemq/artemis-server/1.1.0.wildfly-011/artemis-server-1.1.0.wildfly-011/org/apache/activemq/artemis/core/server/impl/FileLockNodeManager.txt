Compiled from "FileLockNodeManager.java"
public class org.apache.activemq.artemis.core.server.impl.FileLockNodeManager extends org.apache.activemq.artemis.core.server.NodeManager {
  private static final int LIVE_LOCK_POS;

  private static final int BACKUP_LOCK_POS;

  private static final int LOCK_LENGTH;

  private static final byte LIVE;

  private static final byte FAILINGBACK;

  private static final byte PAUSED;

  private static final byte NOT_STARTED;

  private java.nio.channels.FileLock liveLock;

  private java.nio.channels.FileLock backupLock;

  protected long lockAcquisitionTimeout;

  protected boolean interrupted;

  static final boolean $assertionsDisabled;

  public org.apache.activemq.artemis.core.server.impl.FileLockNodeManager(java.io.File, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: aload_1
       3: invokespecial #2                  // Method org/apache/activemq/artemis/core/server/NodeManager."<init>":(ZLjava/io/File;)V
       6: aload_0
       7: ldc2_w        #3                  // long -1l
      10: putfield      #5                  // Field lockAcquisitionTimeout:J
      13: aload_0
      14: iconst_0
      15: putfield      #6                  // Field interrupted:Z
      18: return

  public org.apache.activemq.artemis.core.server.impl.FileLockNodeManager(java.io.File, boolean, long);
    Code:
       0: aload_0
       1: iload_2
       2: aload_1
       3: invokespecial #2                  // Method org/apache/activemq/artemis/core/server/NodeManager."<init>":(ZLjava/io/File;)V
       6: aload_0
       7: ldc2_w        #3                  // long -1l
      10: putfield      #5                  // Field lockAcquisitionTimeout:J
      13: aload_0
      14: iconst_0
      15: putfield      #6                  // Field interrupted:Z
      18: aload_0
      19: lload_3
      20: putfield      #5                  // Field lockAcquisitionTimeout:J
      23: return

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isStarted:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #8                  // Field replicatedBackup:Z
      12: ifne          19
      15: aload_0
      16: invokevirtual #9                  // Method setUpServerLockFile:()V
      19: aload_0
      20: invokespecial #10                 // Method org/apache/activemq/artemis/core/server/NodeManager.start:()V
      23: return

  public boolean isAwaitingFailback() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getState:()B
       4: bipush        70
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isBackupLive() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #13                 // Method tryLock:(I)Ljava/nio/channels/FileLock;
       5: astore_1
       6: aload_1
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_1
      13: invokevirtual #14                 // Method java/nio/channels/FileLock.release:()V
      16: iconst_0
      17: ireturn

  public boolean isLiveLocked();
    Code:
       0: aload_0
       1: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void interrupt();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field interrupted:Z
       5: return

  public final void releaseBackup() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field backupLock:Ljava/nio/channels/FileLock;
       4: ifnull        19
       7: aload_0
       8: getfield      #16                 // Field backupLock:Ljava/nio/channels/FileLock;
      11: invokevirtual #14                 // Method java/nio/channels/FileLock.release:()V
      14: aload_0
      15: aconst_null
      16: putfield      #16                 // Field backupLock:Ljava/nio/channels/FileLock;
      19: return

  public void awaitLiveNode() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getState:()B
       4: istore_1
       5: iload_1
       6: bipush        78
       8: if_icmpeq     17
      11: iload_1
      12: bipush        48
      14: if_icmpne     63
      17: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      20: new           #19                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #21                 // String awaiting live node startup state=\'
      29: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #24                 // String \'
      38: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      49: ldc2_w        #27                 // long 2000l
      52: invokestatic  #29                 // Method java/lang/Thread.sleep:(J)V
      55: aload_0
      56: invokespecial #11                 // Method getState:()B
      59: istore_1
      60: goto          5
      63: aload_0
      64: aload_0
      65: iconst_1
      66: invokevirtual #30                 // Method lock:(I)Ljava/nio/channels/FileLock;
      69: putfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
      72: aload_0
      73: getfield      #6                  // Field interrupted:Z
      76: ifeq          94
      79: aload_0
      80: iconst_0
      81: putfield      #6                  // Field interrupted:Z
      84: new           #31                 // class java/lang/InterruptedException
      87: dup
      88: ldc           #32                 // String Lock was interrupted
      90: invokespecial #33                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: invokespecial #11                 // Method getState:()B
      98: istore_1
      99: iload_1
     100: bipush        80
     102: if_icmpne     131
     105: aload_0
     106: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
     109: invokevirtual #14                 // Method java/nio/channels/FileLock.release:()V
     112: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     115: ldc           #34                 // String awaiting live node restarting
     117: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     122: ldc2_w        #27                 // long 2000l
     125: invokestatic  #29                 // Method java/lang/Thread.sleep:(J)V
     128: goto          200
     131: iload_1
     132: bipush        70
     134: if_icmpne     163
     137: aload_0
     138: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
     141: invokevirtual #14                 // Method java/nio/channels/FileLock.release:()V
     144: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     147: ldc           #35                 // String awaiting live node failing back
     149: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     154: ldc2_w        #27                 // long 2000l
     157: invokestatic  #29                 // Method java/lang/Thread.sleep:(J)V
     160: goto          200
     163: iload_1
     164: bipush        76
     166: if_icmpne     200
     169: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     172: new           #19                 // class java/lang/StringBuilder
     175: dup
     176: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     179: ldc           #36                 // String acquired live node lock state =
     181: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: iload_1
     185: i2c
     186: invokevirtual #37                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     189: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     197: goto          203
     200: goto          0
     203: return

  public void startBackup() throws java.lang.Exception;
    Code:
       0: getstatic     #38                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #8                  // Field replicatedBackup:Z
      10: ifeq          21
      13: new           #39                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #40                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      24: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.waitingToBecomeBackup:()V
      29: aload_0
      30: aload_0
      31: iconst_2
      32: invokevirtual #30                 // Method lock:(I)Ljava/nio/channels/FileLock;
      35: putfield      #16                 // Field backupLock:Ljava/nio/channels/FileLock;
      38: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      41: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.gotBackupLock:()V
      46: aload_0
      47: invokevirtual #43                 // Method getUUID:()Lorg/apache/activemq/artemis/utils/UUID;
      50: ifnonnull     58
      53: aload_0
      54: invokevirtual #44                 // Method readNodeId:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      57: pop
      58: return

  public org.apache.activemq.artemis.core.server.ActivateCallback startLiveNode() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #45                 // Method setFailingBack:()V
       4: aload_0
       5: getfield      #5                  // Field lockAcquisitionTimeout:J
       8: ldc2_w        #3                  // long -1l
      11: lcmp
      12: ifne          20
      15: ldc           #46                 // String indefinitely
      17: goto          42
      20: new           #19                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_0
      28: getfield      #5                  // Field lockAcquisitionTimeout:J
      31: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: ldc           #48                 // String  milliseconds
      36: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: astore_1
      43: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      46: aload_1
      47: invokeinterface #49,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.waitingToObtainLiveLock:(Ljava/lang/String;)V
      52: aload_0
      53: aload_0
      54: iconst_1
      55: invokevirtual #30                 // Method lock:(I)Ljava/nio/channels/FileLock;
      58: putfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
      61: getstatic     #18                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      64: invokeinterface #50,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.obtainedLiveLock:()V
      69: new           #51                 // class org/apache/activemq/artemis/core/server/impl/FileLockNodeManager$1
      72: dup
      73: aload_0
      74: invokespecial #52                 // Method org/apache/activemq/artemis/core/server/impl/FileLockNodeManager$1."<init>":(Lorg/apache/activemq/artemis/core/server/impl/FileLockNodeManager;)V
      77: areturn

  public void pauseLiveServer() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #53                 // Method setPaused:()V
       4: aload_0
       5: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
       8: ifnull        18
      11: aload_0
      12: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
      15: invokevirtual #14                 // Method java/nio/channels/FileLock.release:()V
      18: return

  public void crashLiveServer() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
       4: ifnull        19
       7: aload_0
       8: getfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
      11: invokevirtual #14                 // Method java/nio/channels/FileLock.release:()V
      14: aload_0
      15: aconst_null
      16: putfield      #15                 // Field liveLock:Ljava/nio/channels/FileLock;
      19: return

  public void awaitLiveStatus() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getState:()B
       4: bipush        76
       6: if_icmpeq     18
       9: ldc2_w        #27                 // long 2000l
      12: invokestatic  #29                 // Method java/lang/Thread.sleep:(J)V
      15: goto          0
      18: return

  private void setLive() throws java.lang.Exception;
    Code:
       0: aload_0
       1: bipush        76
       3: invokespecial #54                 // Method writeFileLockStatus:(B)V
       6: return

  private void setFailingBack() throws java.lang.Exception;
    Code:
       0: aload_0
       1: bipush        70
       3: invokespecial #54                 // Method writeFileLockStatus:(B)V
       6: return

  private void setPaused() throws java.lang.Exception;
    Code:
       0: aload_0
       1: bipush        80
       3: invokespecial #54                 // Method writeFileLockStatus:(B)V
       6: return

  private void writeFileLockStatus(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field replicatedBackup:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
      11: ifnonnull     15
      14: return
      15: iconst_1
      16: invokestatic  #56                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      19: astore_2
      20: aload_2
      21: iload_1
      22: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_2
      27: iconst_0
      28: invokevirtual #58                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_0
      33: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
      36: aload_2
      37: lconst_0
      38: invokevirtual #59                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      41: pop
      42: aload_0
      43: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
      46: iconst_1
      47: invokevirtual #60                 // Method java/nio/channels/FileChannel.force:(Z)V
      50: return

  private byte getState() throws java.lang.Exception;
    Code:
       0: iconst_1
       1: invokestatic  #56                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_0
       6: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
       9: aload_1
      10: lconst_0
      11: invokevirtual #61                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      14: istore_2
      15: iload_2
      16: ifgt          22
      19: bipush        78
      21: ireturn
      22: aload_1
      23: iconst_0
      24: invokevirtual #62                 // Method java/nio/ByteBuffer.get:(I)B
      27: ireturn

  public final org.apache.activemq.artemis.api.core.SimpleString readNodeId() throws org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException, java.io.IOException;
    Code:
       0: bipush        16
       2: invokestatic  #56                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       5: astore_1
       6: aload_0
       7: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
      10: aload_1
      11: ldc2_w        #63                 // long 3l
      14: invokevirtual #61                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      17: istore_2
      18: iload_2
      19: bipush        16
      21: if_icmpeq     34
      24: new           #65                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
      27: dup
      28: ldc           #66                 // String live server did not write id to file
      30: invokespecial #67                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: bipush        16
      36: newarray       byte
      38: astore_3
      39: aload_1
      40: iconst_0
      41: invokevirtual #58                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      44: pop
      45: aload_1
      46: aload_3
      47: invokevirtual #68                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      50: pop
      51: aload_0
      52: new           #69                 // class org/apache/activemq/artemis/utils/UUID
      55: dup
      56: iconst_1
      57: aload_3
      58: invokespecial #70                 // Method org/apache/activemq/artemis/utils/UUID."<init>":(I[B)V
      61: invokevirtual #71                 // Method setUUID:(Lorg/apache/activemq/artemis/utils/UUID;)V
      64: aload_0
      65: invokevirtual #72                 // Method getNodeId:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      68: areturn

  protected java.nio.channels.FileLock tryLock(int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
       4: iload_1
       5: i2l
       6: lconst_1
       7: iconst_0
       8: invokevirtual #73                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
      11: areturn
      12: astore_2
      13: aconst_null
      14: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/nio/channels/OverlappingFileLockException

  protected java.nio.channels.FileLock lock(int) throws java.lang.Exception;
    Code:
       0: invokestatic  #75                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: aload_0
       5: getfield      #6                  // Field interrupted:Z
       8: ifne          90
      11: aconst_null
      12: astore        4
      14: aload_0
      15: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
      18: iload_1
      19: i2l
      20: lconst_1
      21: iconst_0
      22: invokevirtual #73                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
      25: astore        4
      27: goto          32
      30: astore        5
      32: aload         4
      34: ifnonnull     84
      37: ldc2_w        #76                 // long 500l
      40: invokestatic  #29                 // Method java/lang/Thread.sleep:(J)V
      43: goto          50
      46: astore        5
      48: aconst_null
      49: areturn
      50: aload_0
      51: getfield      #5                  // Field lockAcquisitionTimeout:J
      54: ldc2_w        #3                  // long -1l
      57: lcmp
      58: ifeq          87
      61: invokestatic  #75                 // Method java/lang/System.currentTimeMillis:()J
      64: lload_2
      65: lsub
      66: aload_0
      67: getfield      #5                  // Field lockAcquisitionTimeout:J
      70: lcmp
      71: ifle          87
      74: new           #78                 // class java/lang/Exception
      77: dup
      78: ldc           #79                 // String timed out waiting for lock
      80: invokespecial #80                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         4
      86: areturn
      87: goto          4
      90: aload_0
      91: getfield      #55                 // Field channel:Ljava/nio/channels/FileChannel;
      94: iload_1
      95: i2l
      96: lconst_1
      97: iconst_0
      98: invokevirtual #73                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
     101: astore        4
     103: aload         4
     105: ifnonnull     119
     108: ldc2_w        #76                 // long 500l
     111: invokestatic  #29                 // Method java/lang/Thread.sleep:(J)V
     114: goto          119
     117: astore        5
     119: aload_0
     120: getfield      #6                  // Field interrupted:Z
     123: ifeq          141
     126: aload_0
     127: iconst_0
     128: putfield      #6                  // Field interrupted:Z
     131: new           #81                 // class java/io/IOException
     134: dup
     135: ldc           #32                 // String Lock was interrupted
     137: invokespecial #82                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload         4
     143: ifnull        90
     146: aload         4
     148: areturn
    Exception table:
       from    to  target type
          14    27    30   Class java/nio/channels/OverlappingFileLockException
          37    43    46   Class java/lang/InterruptedException
         108   114   117   Class java/lang/InterruptedException

  static void access$000(org.apache.activemq.artemis.core.server.impl.FileLockNodeManager) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method setLive:()V
       4: return

  static {};
    Code:
       0: ldc           #12                 // class org/apache/activemq/artemis/core/server/impl/FileLockNodeManager
       2: invokevirtual #83                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #38                 // Field $assertionsDisabled:Z
      16: return
}
