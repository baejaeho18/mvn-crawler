Compiled from "ClusterManager.java"
public final class org.apache.activemq.artemis.core.server.cluster.ClusterManager implements org.apache.activemq.artemis.core.server.ActiveMQComponent {
  private org.apache.activemq.artemis.core.server.cluster.ClusterController clusterController;

  private org.apache.activemq.artemis.core.server.cluster.ha.HAManager haManager;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.core.server.cluster.BroadcastGroup> broadcastGroups;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.core.server.cluster.Bridge> bridges;

  private final org.apache.activemq.artemis.utils.ExecutorFactory executorFactory;

  private final org.apache.activemq.artemis.core.server.ActiveMQServer server;

  private final org.apache.activemq.artemis.core.postoffice.PostOffice postOffice;

  private final java.util.concurrent.ScheduledExecutorService scheduledExecutor;

  private org.apache.activemq.artemis.core.server.cluster.ClusterConnection defaultClusterConnection;

  private final org.apache.activemq.artemis.core.server.management.ManagementService managementService;

  private final org.apache.activemq.artemis.core.config.Configuration configuration;

  private volatile org.apache.activemq.artemis.core.server.cluster.ClusterManager$State state;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.core.server.cluster.ClusterConnection> clusterConnections;

  private final java.util.Set<org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal> clusterLocators;

  private final java.util.concurrent.Executor executor;

  private final org.apache.activemq.artemis.core.server.NodeManager nodeManager;

  public org.apache.activemq.artemis.core.server.cluster.qourum.QuorumManager getQuorumManager();
    Code:
       0: aload_0
       1: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
       4: invokevirtual #2                  // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.getQuorumManager:()Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
       7: areturn

  public org.apache.activemq.artemis.core.server.cluster.ClusterController getClusterController();
    Code:
       0: aload_0
       1: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
       4: areturn

  public org.apache.activemq.artemis.core.server.cluster.ha.HAManager getHAManager();
    Code:
       0: aload_0
       1: getfield      #3                  // Field haManager:Lorg/apache/activemq/artemis/core/server/cluster/ha/HAManager;
       4: areturn

  public void addClusterChannelHandler(org.apache.activemq.artemis.core.protocol.core.Channel, org.apache.activemq.artemis.spi.core.remoting.Acceptor, org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection, org.apache.activemq.artemis.core.server.impl.Activation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #4                  // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.addClusterChannelHandler:(Lorg/apache/activemq/artemis/core/protocol/core/Channel;Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;Lorg/apache/activemq/artemis/core/server/impl/Activation;)V
      12: return

  public org.apache.activemq.artemis.core.server.cluster.ClusterManager(org.apache.activemq.artemis.utils.ExecutorFactory, org.apache.activemq.artemis.core.server.ActiveMQServer, org.apache.activemq.artemis.core.postoffice.PostOffice, java.util.concurrent.ScheduledExecutorService, org.apache.activemq.artemis.core.server.management.ManagementService, org.apache.activemq.artemis.core.config.Configuration, org.apache.activemq.artemis.core.server.NodeManager, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/HashMap
       8: dup
       9: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      12: putfield      #8                  // Field broadcastGroups:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class java/util/HashMap
      19: dup
      20: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      23: putfield      #9                  // Field bridges:Ljava/util/Map;
      26: aload_0
      27: getstatic     #10                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STOPPED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      30: putfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      33: aload_0
      34: new           #6                  // class java/util/HashMap
      37: dup
      38: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      41: putfield      #12                 // Field clusterConnections:Ljava/util/Map;
      44: aload_0
      45: new           #13                 // class org/apache/activemq/artemis/utils/ConcurrentHashSet
      48: dup
      49: invokespecial #14                 // Method org/apache/activemq/artemis/utils/ConcurrentHashSet."<init>":()V
      52: putfield      #15                 // Field clusterLocators:Ljava/util/Set;
      55: aload_0
      56: aload_1
      57: putfield      #16                 // Field executorFactory:Lorg/apache/activemq/artemis/utils/ExecutorFactory;
      60: aload_0
      61: aload_1
      62: invokeinterface #17,  1           // InterfaceMethod org/apache/activemq/artemis/utils/ExecutorFactory.getExecutor:()Ljava/util/concurrent/Executor;
      67: putfield      #18                 // Field executor:Ljava/util/concurrent/Executor;
      70: aload_0
      71: aload_2
      72: putfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      75: aload_0
      76: aload_3
      77: putfield      #20                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
      80: aload_0
      81: aload         4
      83: putfield      #21                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      86: aload_0
      87: aload         5
      89: putfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      92: aload_0
      93: aload         6
      95: putfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
      98: aload_0
      99: aload         7
     101: putfield      #24                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
     104: aload_0
     105: new           #25                 // class org/apache/activemq/artemis/core/server/cluster/ClusterController
     108: dup
     109: aload_2
     110: aload         4
     112: invokespecial #26                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController."<init>":(Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Ljava/util/concurrent/ScheduledExecutorService;)V
     115: putfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
     118: aload_0
     119: aload_2
     120: invokeinterface #27,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActivation:()Lorg/apache/activemq/artemis/core/server/impl/Activation;
     125: invokevirtual #28                 // Method org/apache/activemq/artemis/core/server/impl/Activation.getHAManager:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAManager;
     128: putfield      #3                  // Field haManager:Lorg/apache/activemq/artemis/core/server/cluster/ha/HAManager;
     131: return

  public java.lang.String describe();
    Code:
       0: new           #29                 // class java/io/StringWriter
       3: dup
       4: invokespecial #30                 // Method java/io/StringWriter."<init>":()V
       7: astore_1
       8: new           #31                 // class java/io/PrintWriter
      11: dup
      12: aload_1
      13: invokespecial #32                 // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      16: astore_2
      17: aload_2
      18: new           #33                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #35                 // String Information on
      27: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #39                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      40: aload_2
      41: ldc           #40                 // String *******************************************************
      43: invokevirtual #39                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      46: aload_0
      47: invokespecial #41                 // Method cloneClusterConnections:()Ljava/util/Collection;
      50: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      55: astore_3
      56: aload_3
      57: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          90
      65: aload_3
      66: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
      74: astore        4
      76: aload_2
      77: aload         4
      79: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.describe:()Ljava/lang/String;
      84: invokevirtual #39                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      87: goto          56
      90: aload_2
      91: ldc           #40                 // String *******************************************************
      93: invokevirtual #39                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      96: aload_1
      97: invokevirtual #47                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
     100: areturn

  public org.apache.activemq.artemis.core.server.cluster.ClusterConnection getDefaultConnection(org.apache.activemq.artemis.api.core.TransportConfiguration);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
       8: areturn
       9: aload_0
      10: getfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
      13: ifnull        37
      16: aload_0
      17: getfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
      20: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.getConnector:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      25: aload_1
      26: invokevirtual #50                 // Method org/apache/activemq/artemis/api/core/TransportConfiguration.isEquivalent:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Z
      29: ifeq          37
      32: aload_0
      33: getfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
      36: areturn
      37: aload_0
      38: invokespecial #41                 // Method cloneClusterConnections:()Ljava/util/Collection;
      41: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      46: astore_2
      47: aload_2
      48: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          84
      56: aload_2
      57: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
      65: astore_3
      66: aload_3
      67: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.getConnector:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      72: aload_1
      73: invokevirtual #50                 // Method org/apache/activemq/artemis/api/core/TransportConfiguration.isEquivalent:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Z
      76: ifeq          81
      79: aload_3
      80: areturn
      81: goto          47
      84: aconst_null
      85: areturn

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #51                 // String ClusterManagerImpl[server=
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #52                 // String ]@
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokestatic  #53                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      28: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public java.lang.String getNodeId();
    Code:
       0: aload_0
       1: getfield      #24                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
       4: invokevirtual #55                 // Method org/apache/activemq/artemis/core/server/NodeManager.getNodeId:()Lorg/apache/activemq/artemis/api/core/SimpleString;
       7: invokevirtual #56                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      10: areturn

  public java.lang.String getBackupGroupName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #57,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getHAPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
       9: invokeinterface #58,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAPolicy.getBackupGroupName:()Ljava/lang/String;
      14: areturn

  public java.lang.String getScaleDownGroupName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #57,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getHAPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
       9: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAPolicy.getScaleDownGroupName:()Ljava/lang/String;
      14: areturn

  public synchronized void deploy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
       4: getstatic     #10                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STOPPED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
       7: if_acmpne     20
      10: aload_0
      11: getstatic     #60                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.DEPLOYED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      14: putfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      17: goto          28
      20: new           #61                 // class java/lang/IllegalStateException
      23: dup
      24: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":()V
      27: athrow
      28: aload_0
      29: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
      32: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getBroadcastGroupConfigurations:()Ljava/util/List;
      37: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore_1
      43: aload_1
      44: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          70
      52: aload_1
      53: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #65                 // class org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration
      61: astore_2
      62: aload_0
      63: aload_2
      64: invokespecial #66                 // Method deployBroadcastGroup:(Lorg/apache/activemq/artemis/api/core/BroadcastGroupConfiguration;)V
      67: goto          43
      70: aload_0
      71: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
      74: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterConfigurations:()Ljava/util/List;
      79: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      84: astore_1
      85: aload_1
      86: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          112
      94: aload_1
      95: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #68                 // class org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration
     103: astore_2
     104: aload_0
     105: aload_2
     106: invokespecial #69                 // Method deployClusterConnection:(Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)V
     109: goto          85
     112: aload_0
     113: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
     116: invokeinterface #70,  1           // InterfaceMethod java/util/Map.size:()I
     121: ifle          131
     124: aload_0
     125: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
     128: invokevirtual #71                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.start:()V
     131: return

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
       4: getstatic     #72                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STARTED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
      15: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      20: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          73
      35: aload_1
      36: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #74                 // class org/apache/activemq/artemis/core/server/cluster/BroadcastGroup
      44: astore_2
      45: aload_2
      46: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.start:()V
      51: goto          70
      54: astore_3
      55: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      58: aload_3
      59: aload_2
      60: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.getName:()Ljava/lang/String;
      65: invokeinterface #79,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.unableToStartBroadcastGroup:(Ljava/lang/Exception;Ljava/lang/String;)V
      70: goto          26
      73: aload_0
      74: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
      77: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      82: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      87: astore_1
      88: aload_1
      89: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          135
      97: aload_1
      98: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
     106: astore_2
     107: aload_2
     108: invokeinterface #80,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.start:()V
     113: goto          132
     116: astore_3
     117: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     120: aload_3
     121: aload_2
     122: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     127: invokeinterface #82,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.unableToStartClusterConnection:(Ljava/lang/Exception;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
     132: goto          88
     135: aload_0
     136: invokespecial #83                 // Method deployConfiguredBridges:()V
     139: aload_0
     140: getfield      #9                  // Field bridges:Ljava/util/Map;
     143: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     148: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     153: astore_1
     154: aload_1
     155: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     160: ifeq          201
     163: aload_1
     164: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #84                 // class org/apache/activemq/artemis/core/server/cluster/Bridge
     172: astore_2
     173: aload_2
     174: invokeinterface #85,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.start:()V
     179: goto          198
     182: astore_3
     183: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     186: aload_3
     187: aload_2
     188: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     193: invokeinterface #87,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.unableToStartBridge:(Ljava/lang/Exception;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
     198: goto          154
     201: aload_0
     202: getfield      #3                  // Field haManager:Lorg/apache/activemq/artemis/core/server/cluster/ha/HAManager;
     205: invokeinterface #88,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAManager.start:()V
     210: aload_0
     211: getstatic     #72                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STARTED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
     214: putfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
     217: return
    Exception table:
       from    to  target type
          45    51    54   Class java/lang/Exception
         107   113   116   Class java/lang/Exception
         173   179   182   Class java/lang/Exception

  private void deployConfiguredBridges() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
       4: invokeinterface #89,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getBridgeConfigurations:()Ljava/util/List;
       9: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_1
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #90                 // class org/apache/activemq/artemis/core/config/BridgeConfiguration
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokevirtual #91                 // Method deployBridge:(Lorg/apache/activemq/artemis/core/config/BridgeConfiguration;)V
      39: goto          15
      42: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field haManager:Lorg/apache/activemq/artemis/core/server/cluster/ha/HAManager;
       4: invokeinterface #92,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAManager.stop:()V
       9: aload_0
      10: dup
      11: astore_1
      12: monitorenter
      13: aload_0
      14: getfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      17: getstatic     #10                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STOPPED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      20: if_acmpeq     33
      23: aload_0
      24: getfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      27: getstatic     #93                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STOPPING:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      30: if_acmpne     36
      33: aload_1
      34: monitorexit
      35: return
      36: aload_0
      37: getstatic     #93                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STOPPING:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      40: putfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
      43: aload_0
      44: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
      47: invokevirtual #94                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.stop:()V
      50: aload_0
      51: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
      54: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      59: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      64: astore_2
      65: aload_2
      66: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          108
      74: aload_2
      75: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #74                 // class org/apache/activemq/artemis/core/server/cluster/BroadcastGroup
      83: astore_3
      84: aload_3
      85: invokeinterface #95,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.stop:()V
      90: aload_0
      91: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      94: aload_3
      95: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.getName:()Ljava/lang/String;
     100: invokeinterface #96,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.unregisterBroadcastGroup:(Ljava/lang/String;)V
     105: goto          65
     108: aload_0
     109: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
     112: invokeinterface #97,  1           // InterfaceMethod java/util/Map.clear:()V
     117: aload_0
     118: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
     121: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     126: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     131: astore_2
     132: aload_2
     133: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          178
     141: aload_2
     142: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
     150: astore_3
     151: aload_3
     152: invokeinterface #98,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.stop:()V
     157: aload_0
     158: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
     161: aload_3
     162: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     167: invokevirtual #56                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
     170: invokeinterface #99,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.unregisterCluster:(Ljava/lang/String;)V
     175: goto          132
     178: aload_0
     179: getfield      #9                  // Field bridges:Ljava/util/Map;
     182: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     187: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     192: astore_2
     193: aload_2
     194: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     199: ifeq          239
     202: aload_2
     203: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     208: checkcast     #84                 // class org/apache/activemq/artemis/core/server/cluster/Bridge
     211: astore_3
     212: aload_3
     213: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.stop:()V
     218: aload_0
     219: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
     222: aload_3
     223: invokeinterface #86,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     228: invokevirtual #56                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
     231: invokeinterface #101,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.unregisterBridge:(Ljava/lang/String;)V
     236: goto          193
     239: aload_0
     240: getfield      #9                  // Field bridges:Ljava/util/Map;
     243: invokeinterface #97,  1           // InterfaceMethod java/util/Map.clear:()V
     248: aload_1
     249: monitorexit
     250: goto          260
     253: astore        4
     255: aload_1
     256: monitorexit
     257: aload         4
     259: athrow
     260: aload_0
     261: getfield      #15                 // Field clusterLocators:Ljava/util/Set;
     264: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     269: astore_1
     270: aload_1
     271: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     276: ifeq          312
     279: aload_1
     280: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     285: checkcast     #103                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
     288: astore_2
     289: aload_2
     290: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.close:()V
     295: goto          309
     298: astore_3
     299: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     302: aload_3
     303: aload_2
     304: invokeinterface #105,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorClosingServerLocator:(Ljava/lang/Exception;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;)V
     309: goto          270
     312: aload_0
     313: getfield      #15                 // Field clusterLocators:Ljava/util/Set;
     316: invokeinterface #106,  1          // InterfaceMethod java/util/Set.clear:()V
     321: aload_0
     322: getstatic     #10                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STOPPED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
     325: putfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
     328: aload_0
     329: invokespecial #107                // Method clearClusterConnections:()V
     332: return
    Exception table:
       from    to  target type
          13    35   253   any
          36   250   253   any
         253   257   253   any
         289   295   298   Class java/lang/Exception

  public void flushExecutor();
    Code:
       0: new           #108                // class org/apache/activemq/artemis/utils/FutureLatch
       3: dup
       4: invokespecial #109                // Method org/apache/activemq/artemis/utils/FutureLatch."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #18                 // Field executor:Ljava/util/concurrent/Executor;
      12: aload_1
      13: invokeinterface #110,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      18: aload_1
      19: ldc2_w        #111                // long 10000l
      22: invokevirtual #113                // Method org/apache/activemq/artemis/utils/FutureLatch.await:(J)Z
      25: ifne          49
      28: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      31: aload_0
      32: invokevirtual #114                // Method toString:()Ljava/lang/String;
      35: invokeinterface #115,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.couldNotFlushClusterManager:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      44: invokeinterface #116,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.threadDump:()V
      49: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
       4: getstatic     #72                 // Field org/apache/activemq/artemis/core/server/cluster/ClusterManager$State.STARTED:Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.util.Map<java.lang.String, org.apache.activemq.artemis.core.server.cluster.Bridge> getBridges();
    Code:
       0: new           #6                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #9                  // Field bridges:Ljava/util/Map;
       8: invokespecial #117                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.util.Set<org.apache.activemq.artemis.core.server.cluster.ClusterConnection> getClusterConnections();
    Code:
       0: new           #118                // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #119                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  public java.util.Set<org.apache.activemq.artemis.core.server.cluster.BroadcastGroup> getBroadcastGroups();
    Code:
       0: new           #118                // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #119                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  public org.apache.activemq.artemis.core.server.cluster.ClusterConnection getClusterConnection(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
      13: areturn

  public void removeClusterLocator(org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal);
    Code:
       0: aload_0
       1: getfield      #15                 // Field clusterLocators:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #121,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public synchronized void deployBridge(org.apache.activemq.artemis.core.config.BridgeConfiguration) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
       4: ifnonnull     16
       7: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      10: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeNotUnique:()V
      15: return
      16: aload_1
      17: invokevirtual #124                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getQueueName:()Ljava/lang/String;
      20: ifnonnull     36
      23: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      26: aload_1
      27: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
      30: invokeinterface #125,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeNoQueue:(Ljava/lang/String;)V
      35: return
      36: aload_1
      37: invokevirtual #126                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getForwardingAddress:()Ljava/lang/String;
      40: ifnonnull     55
      43: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      46: aload_1
      47: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
      50: invokeinterface #127,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeNoForwardAddress:(Ljava/lang/String;)V
      55: aload_0
      56: getfield      #9                  // Field bridges:Ljava/util/Map;
      59: aload_1
      60: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
      63: invokeinterface #128,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      68: ifeq          84
      71: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      74: aload_1
      75: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
      78: invokeinterface #129,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeAlreadyDeployed:(Ljava/lang/String;)V
      83: return
      84: aload_0
      85: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      88: invokeinterface #130,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getServiceRegistry:()Lorg/apache/activemq/artemis/core/server/ServiceRegistry;
      93: aload_1
      94: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
      97: aload_1
      98: invokevirtual #131                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getTransformerClassName:()Ljava/lang/String;
     101: invokeinterface #132,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ServiceRegistry.getBridgeTransformer:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/activemq/artemis/core/server/cluster/Transformer;
     106: astore_2
     107: aload_0
     108: getfield      #20                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
     111: new           #133                // class org/apache/activemq/artemis/api/core/SimpleString
     114: dup
     115: aload_1
     116: invokevirtual #124                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getQueueName:()Ljava/lang/String;
     119: invokespecial #134                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     122: invokeinterface #135,  2          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/PostOffice.getBinding:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/postoffice/Binding;
     127: astore_3
     128: aload_3
     129: ifnonnull     149
     132: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     135: aload_1
     136: invokevirtual #124                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getQueueName:()Ljava/lang/String;
     139: aload_1
     140: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
     143: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeQueueNotFound:(Ljava/lang/String;Ljava/lang/String;)V
     148: return
     149: aload_3
     150: invokeinterface #137,  1          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/Binding.getBindable:()Lorg/apache/activemq/artemis/core/server/Bindable;
     155: checkcast     #138                // class org/apache/activemq/artemis/core/server/Queue
     158: astore        4
     160: aload_1
     161: invokevirtual #139                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
     164: ifnull        241
     167: aload_0
     168: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
     171: invokeinterface #140,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getDiscoveryGroupConfigurations:()Ljava/util/Map;
     176: aload_1
     177: invokevirtual #139                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
     180: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #141                // class org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration
     188: astore        6
     190: aload         6
     192: ifnonnull     208
     195: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     198: aload_1
     199: invokevirtual #139                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
     202: invokeinterface #142,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeNoDiscoveryGroup:(Ljava/lang/String;)V
     207: return
     208: aload_1
     209: invokevirtual #143                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.isHA:()Z
     212: ifeq          228
     215: aload         6
     217: invokestatic  #144                // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     220: checkcast     #103                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
     223: astore        5
     225: goto          238
     228: aload         6
     230: invokestatic  #145                // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithoutHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     233: checkcast     #103                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
     236: astore        5
     238: goto          302
     241: aload_1
     242: invokevirtual #146                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getStaticConnectors:()Ljava/util/List;
     245: aload_0
     246: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
     249: invokestatic  #147                // Method org/apache/activemq/artemis/core/server/cluster/ClusterConfigurationUtil.connectorNameListToArray:(Ljava/util/List;Lorg/apache/activemq/artemis/core/config/Configuration;)[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     252: astore        6
     254: aload         6
     256: ifnonnull     272
     259: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     262: aload_1
     263: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
     266: invokeinterface #148,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeCantFindConnectors:(Ljava/lang/String;)V
     271: return
     272: aload_1
     273: invokevirtual #143                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.isHA:()Z
     276: ifeq          292
     279: aload         6
     281: invokestatic  #149                // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:([Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     284: checkcast     #103                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
     287: astore        5
     289: goto          302
     292: aload         6
     294: invokestatic  #150                // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithoutHA:([Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     297: checkcast     #103                // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
     300: astore        5
     302: aload         5
     304: new           #33                 // class java/lang/StringBuilder
     307: dup
     308: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     311: ldc           #151                // String Bridge
     313: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: aload_1
     317: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
     320: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     323: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     326: invokeinterface #152,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setIdentity:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;
     331: pop
     332: aload         5
     334: aload_1
     335: invokevirtual #153                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getConfirmationWindowSize:()I
     338: invokeinterface #154,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setConfirmationWindowSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     343: pop
     344: aload         5
     346: iconst_0
     347: invokeinterface #155,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     352: pop
     353: aload         5
     355: iconst_0
     356: invokeinterface #156,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setInitialConnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     361: pop
     362: aload         5
     364: aload_1
     365: invokevirtual #157                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getRetryInterval:()J
     368: invokeinterface #158,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setRetryInterval:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     373: pop
     374: aload         5
     376: aload_1
     377: invokevirtual #159                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getMaxRetryInterval:()J
     380: invokeinterface #160,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setMaxRetryInterval:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     385: pop
     386: aload         5
     388: aload_1
     389: invokevirtual #161                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getRetryIntervalMultiplier:()D
     392: invokeinterface #162,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setRetryIntervalMultiplier:(D)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     397: pop
     398: aload         5
     400: aload_1
     401: invokevirtual #163                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getClientFailureCheckPeriod:()J
     404: invokeinterface #164,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     409: pop
     410: aload         5
     412: aload_1
     413: invokevirtual #165                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getConnectionTTL:()J
     416: invokeinterface #166,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setConnectionTTL:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     421: pop
     422: aload         5
     424: aload_1
     425: invokevirtual #167                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.isUseDuplicateDetection:()Z
     428: ifne          435
     431: iconst_1
     432: goto          436
     435: iconst_0
     436: invokeinterface #168,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setBlockOnDurableSend:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     441: pop
     442: aload         5
     444: aload_1
     445: invokevirtual #167                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.isUseDuplicateDetection:()Z
     448: ifne          455
     451: iconst_1
     452: goto          456
     455: iconst_0
     456: invokeinterface #169,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setBlockOnNonDurableSend:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     461: pop
     462: aload         5
     464: aload_1
     465: invokevirtual #170                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getMinLargeMessageSize:()I
     468: invokeinterface #171,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setMinLargeMessageSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     473: pop
     474: aload         5
     476: iconst_m1
     477: invokeinterface #172,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setProducerWindowSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     482: pop
     483: aload         5
     485: aload_1
     486: invokevirtual #173                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getCallTimeout:()J
     489: invokeinterface #174,  3          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setCallTimeout:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     494: pop
     495: aload         5
     497: new           #175                // class org/apache/activemq/artemis/core/server/cluster/ClusterManager$IncomingInterceptorLookingForExceptionMessage
     500: dup
     501: aload_0
     502: aload_0
     503: getfield      #18                 // Field executor:Ljava/util/concurrent/Executor;
     506: invokespecial #176                // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager$IncomingInterceptorLookingForExceptionMessage."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;Ljava/util/concurrent/Executor;)V
     509: invokeinterface #177,  2          // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.addIncomingInterceptor:(Lorg/apache/activemq/artemis/api/core/Interceptor;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     514: pop
     515: aload_1
     516: invokevirtual #167                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.isUseDuplicateDetection:()Z
     519: ifne          557
     522: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     525: new           #33                 // class java/lang/StringBuilder
     528: dup
     529: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     532: ldc           #151                // String Bridge
     534: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     537: aload_1
     538: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
     541: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     544: ldc           #178                // String  is configured to not use duplicate detecion, it will send messages synchronously
     546: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     552: invokeinterface #179,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     557: aload_0
     558: getfield      #15                 // Field clusterLocators:Ljava/util/Set;
     561: aload         5
     563: invokeinterface #180,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     568: pop
     569: new           #181                // class org/apache/activemq/artemis/core/server/cluster/impl/BridgeImpl
     572: dup
     573: aload         5
     575: aload_1
     576: invokevirtual #182                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getInitialConnectAttempts:()I
     579: aload_1
     580: invokevirtual #183                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getReconnectAttempts:()I
     583: aload_1
     584: invokevirtual #184                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getReconnectAttemptsOnSameNode:()I
     587: aload_1
     588: invokevirtual #157                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getRetryInterval:()J
     591: aload_1
     592: invokevirtual #161                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getRetryIntervalMultiplier:()D
     595: aload_1
     596: invokevirtual #159                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getMaxRetryInterval:()J
     599: aload_0
     600: getfield      #24                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
     603: invokevirtual #185                // Method org/apache/activemq/artemis/core/server/NodeManager.getUUID:()Lorg/apache/activemq/artemis/utils/UUID;
     606: new           #133                // class org/apache/activemq/artemis/api/core/SimpleString
     609: dup
     610: aload_1
     611: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
     614: invokespecial #134                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     617: aload         4
     619: aload_0
     620: getfield      #16                 // Field executorFactory:Lorg/apache/activemq/artemis/utils/ExecutorFactory;
     623: invokeinterface #17,  1           // InterfaceMethod org/apache/activemq/artemis/utils/ExecutorFactory.getExecutor:()Ljava/util/concurrent/Executor;
     628: aload_1
     629: invokevirtual #186                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getFilterString:()Ljava/lang/String;
     632: invokestatic  #187                // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
     635: aload_1
     636: invokevirtual #126                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getForwardingAddress:()Ljava/lang/String;
     639: invokestatic  #188                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
     642: aload_0
     643: getfield      #21                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
     646: aload_2
     647: aload_1
     648: invokevirtual #167                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.isUseDuplicateDetection:()Z
     651: aload_1
     652: invokevirtual #189                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getUser:()Ljava/lang/String;
     655: aload_1
     656: invokevirtual #190                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getPassword:()Ljava/lang/String;
     659: aload_0
     660: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     663: invokeinterface #191,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getStorageManager:()Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     668: invokespecial #192                // Method org/apache/activemq/artemis/core/server/cluster/impl/BridgeImpl."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;IIIJDJLorg/apache/activemq/artemis/utils/UUID;Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/server/Queue;Ljava/util/concurrent/Executor;Lorg/apache/activemq/artemis/core/filter/Filter;Lorg/apache/activemq/artemis/api/core/SimpleString;Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/activemq/artemis/core/server/cluster/Transformer;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/core/persistence/StorageManager;)V
     671: astore        6
     673: aload_0
     674: getfield      #9                  // Field bridges:Ljava/util/Map;
     677: aload_1
     678: invokevirtual #122                // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
     681: aload         6
     683: invokeinterface #193,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     688: pop
     689: aload_0
     690: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
     693: aload         6
     695: aload_1
     696: invokeinterface #194,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.registerBridge:(Lorg/apache/activemq/artemis/core/server/cluster/Bridge;Lorg/apache/activemq/artemis/core/config/BridgeConfiguration;)V
     701: aload         6
     703: invokeinterface #85,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.start:()V
     708: return

  public void destroyBridge(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field bridges:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #195,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #84                 // class org/apache/activemq/artemis/core/server/cluster/Bridge
      17: astore_2
      18: aload_2
      19: ifnull        38
      22: aload_2
      23: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.stop:()V
      28: aload_0
      29: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      32: aload_1
      33: invokeinterface #101,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.unregisterBridge:(Ljava/lang/String;)V
      38: aload_3
      39: monitorexit
      40: goto          50
      43: astore        4
      45: aload_3
      46: monitorexit
      47: aload         4
      49: athrow
      50: aload_2
      51: ifnull        60
      54: aload_2
      55: invokeinterface #196,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.flushExecutor:()V
      60: return
    Exception table:
       from    to  target type
           4    40    43   any
          43    47    43   any

  public void clear();
    Code:
       0: aload_0
       1: getfield      #9                  // Field bridges:Ljava/util/Map;
       4: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_1
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #84                 // class org/apache/activemq/artemis/core/server/cluster/Bridge
      33: astore_2
      34: aload_2
      35: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/Bridge.stop:()V
      40: goto          57
      43: astore_3
      44: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      47: aload_3
      48: invokevirtual #197                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      51: aload_3
      52: invokeinterface #198,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      57: goto          15
      60: aload_0
      61: getfield      #9                  // Field bridges:Ljava/util/Map;
      64: invokeinterface #97,  1           // InterfaceMethod java/util/Map.clear:()V
      69: aload_0
      70: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
      73: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      78: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      83: astore_1
      84: aload_1
      85: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          120
      93: aload_1
      94: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
     102: astore_2
     103: aload_2
     104: invokeinterface #98,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.stop:()V
     109: goto          117
     112: astore_3
     113: aload_3
     114: invokevirtual #199                // Method java/lang/Exception.printStackTrace:()V
     117: goto          84
     120: aload_0
     121: invokespecial #107                // Method clearClusterConnections:()V
     124: return
    Exception table:
       from    to  target type
          34    40    43   Class java/lang/Exception
         103   109   112   Class java/lang/Exception

  public void informClusterOfBackup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/apache/activemq/artemis/core/server/cluster/ClusterConnection
      13: astore_2
      14: aload_2
      15: ifnull        24
      18: aload_2
      19: invokeinterface #200,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.informClusterOfBackup:()V
      24: return

  private void clearClusterConnections();
    Code:
       0: aload_0
       1: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
       4: invokeinterface #97,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: aconst_null
      11: putfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
      14: return

  private void deployClusterConnection(org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
       5: invokestatic  #201                // Method org/apache/activemq/artemis/core/server/cluster/ClusterConfigurationUtil.getTransportConfiguration:(Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;Lorg/apache/activemq/artemis/core/config/Configuration;)Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       8: astore_2
       9: aload_2
      10: ifnonnull     14
      13: return
      14: aload_0
      15: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
      18: aload_1
      19: invokevirtual #202                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getName:()Ljava/lang/String;
      22: invokeinterface #128,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifeq          43
      30: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      33: aload_1
      34: invokevirtual #203                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectorName:()Ljava/lang/String;
      37: invokeinterface #204,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.clusterConnectionAlreadyExists:(Ljava/lang/String;)V
      42: return
      43: aload_1
      44: invokevirtual #205                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
      47: ifnull        292
      50: aload_1
      51: aload_0
      52: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
      55: invokestatic  #206                // Method org/apache/activemq/artemis/core/server/cluster/ClusterConfigurationUtil.getDiscoveryGroupConfiguration:(Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;Lorg/apache/activemq/artemis/core/config/Configuration;)Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      58: astore        4
      60: aload         4
      62: ifnonnull     66
      65: return
      66: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      69: invokeinterface #207,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isDebugEnabled:()Z
      74: ifeq          121
      77: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      80: new           #33                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      87: aload_0
      88: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #208                // String  Starting a Discovery Group Cluster Connection, name=
      93: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #205                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
     100: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #209                // String , dg=
     105: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload         4
     110: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     113: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokeinterface #179,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     121: new           #210                // class org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl
     124: dup
     125: aload_0
     126: aload         4
     128: aload_2
     129: new           #133                // class org/apache/activemq/artemis/api/core/SimpleString
     132: dup
     133: aload_1
     134: invokevirtual #202                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getName:()Ljava/lang/String;
     137: invokespecial #134                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     140: new           #133                // class org/apache/activemq/artemis/api/core/SimpleString
     143: dup
     144: aload_1
     145: invokevirtual #211                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getAddress:()Ljava/lang/String;
     148: invokespecial #134                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     151: aload_1
     152: invokevirtual #212                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMinLargeMessageSize:()I
     155: aload_1
     156: invokevirtual #213                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClientFailureCheckPeriod:()J
     159: aload_1
     160: invokevirtual #214                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectionTTL:()J
     163: aload_1
     164: invokevirtual #215                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getRetryInterval:()J
     167: aload_1
     168: invokevirtual #216                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getRetryIntervalMultiplier:()D
     171: aload_1
     172: invokevirtual #217                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMaxRetryInterval:()J
     175: aload_1
     176: invokevirtual #218                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getInitialConnectAttempts:()I
     179: aload_1
     180: invokevirtual #219                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getReconnectAttempts:()I
     183: aload_1
     184: invokevirtual #220                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getCallTimeout:()J
     187: aload_1
     188: invokevirtual #221                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getCallFailoverTimeout:()J
     191: aload_1
     192: invokevirtual #222                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.isDuplicateDetection:()Z
     195: aload_1
     196: invokevirtual #223                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMessageLoadBalancingType:()Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
     199: aload_1
     200: invokevirtual #224                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConfirmationWindowSize:()I
     203: aload_0
     204: getfield      #16                 // Field executorFactory:Lorg/apache/activemq/artemis/utils/ExecutorFactory;
     207: aload_0
     208: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     211: aload_0
     212: getfield      #20                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
     215: aload_0
     216: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
     219: aload_0
     220: getfield      #21                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
     223: aload_1
     224: invokevirtual #225                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMaxHops:()I
     227: aload_0
     228: getfield      #24                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
     231: aload_0
     232: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     235: invokeinterface #226,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     240: invokeinterface #227,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterUser:()Ljava/lang/String;
     245: aload_0
     246: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     249: invokeinterface #226,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     254: invokeinterface #228,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterPassword:()Ljava/lang/String;
     259: aload_1
     260: invokevirtual #229                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.isAllowDirectConnectionsOnly:()Z
     263: aload_1
     264: invokevirtual #230                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClusterNotificationInterval:()J
     267: aload_1
     268: invokevirtual #231                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClusterNotificationAttempts:()I
     271: invokespecial #232                // Method org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;IJJJDJIIJJZLorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;ILorg/apache/activemq/artemis/utils/ExecutorFactory;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/core/postoffice/PostOffice;Lorg/apache/activemq/artemis/core/server/management/ManagementService;Ljava/util/concurrent/ScheduledExecutorService;ILorg/apache/activemq/artemis/core/server/NodeManager;Ljava/lang/String;Ljava/lang/String;ZJI)V
     274: astore_3
     275: aload_0
     276: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
     279: aload_3
     280: invokevirtual #233                // Method org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     283: aload         4
     285: aload_1
     286: invokevirtual #234                // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.addClusterConnection:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)V
     289: goto          516
     292: aload_1
     293: aload_0
     294: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
     297: invokestatic  #235                // Method org/apache/activemq/artemis/core/server/cluster/ClusterConfigurationUtil.getTransportConfigurations:(Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;Lorg/apache/activemq/artemis/core/config/Configuration;)[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     300: astore        4
     302: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     305: invokeinterface #207,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isDebugEnabled:()Z
     310: ifeq          348
     313: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     316: new           #33                 // class java/lang/StringBuilder
     319: dup
     320: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     323: aload_0
     324: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     327: ldc           #236                // String  defining cluster connection towards
     329: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     332: aload         4
     334: invokestatic  #237                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     337: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     340: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     343: invokeinterface #179,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     348: new           #210                // class org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl
     351: dup
     352: aload_0
     353: aload         4
     355: aload_2
     356: new           #133                // class org/apache/activemq/artemis/api/core/SimpleString
     359: dup
     360: aload_1
     361: invokevirtual #202                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getName:()Ljava/lang/String;
     364: invokespecial #134                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     367: new           #133                // class org/apache/activemq/artemis/api/core/SimpleString
     370: dup
     371: aload_1
     372: invokevirtual #211                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getAddress:()Ljava/lang/String;
     375: invokespecial #134                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     378: aload_1
     379: invokevirtual #212                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMinLargeMessageSize:()I
     382: aload_1
     383: invokevirtual #213                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClientFailureCheckPeriod:()J
     386: aload_1
     387: invokevirtual #214                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectionTTL:()J
     390: aload_1
     391: invokevirtual #215                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getRetryInterval:()J
     394: aload_1
     395: invokevirtual #216                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getRetryIntervalMultiplier:()D
     398: aload_1
     399: invokevirtual #217                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMaxRetryInterval:()J
     402: aload_1
     403: invokevirtual #218                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getInitialConnectAttempts:()I
     406: aload_1
     407: invokevirtual #219                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getReconnectAttempts:()I
     410: aload_1
     411: invokevirtual #220                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getCallTimeout:()J
     414: aload_1
     415: invokevirtual #221                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getCallFailoverTimeout:()J
     418: aload_1
     419: invokevirtual #222                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.isDuplicateDetection:()Z
     422: aload_1
     423: invokevirtual #223                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMessageLoadBalancingType:()Lorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;
     426: aload_1
     427: invokevirtual #224                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConfirmationWindowSize:()I
     430: aload_0
     431: getfield      #16                 // Field executorFactory:Lorg/apache/activemq/artemis/utils/ExecutorFactory;
     434: aload_0
     435: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     438: aload_0
     439: getfield      #20                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
     442: aload_0
     443: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
     446: aload_0
     447: getfield      #21                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
     450: aload_1
     451: invokevirtual #225                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getMaxHops:()I
     454: aload_0
     455: getfield      #24                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
     458: aload_0
     459: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     462: invokeinterface #226,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     467: invokeinterface #227,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterUser:()Ljava/lang/String;
     472: aload_0
     473: getfield      #19                 // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     476: invokeinterface #226,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     481: invokeinterface #228,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterPassword:()Ljava/lang/String;
     486: aload_1
     487: invokevirtual #229                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.isAllowDirectConnectionsOnly:()Z
     490: aload_1
     491: invokevirtual #230                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClusterNotificationInterval:()J
     494: aload_1
     495: invokevirtual #231                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClusterNotificationAttempts:()I
     498: invokespecial #238                // Method org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;IJJJDJIIJJZLorg/apache/activemq/artemis/core/server/cluster/impl/MessageLoadBalancingType;ILorg/apache/activemq/artemis/utils/ExecutorFactory;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/core/postoffice/PostOffice;Lorg/apache/activemq/artemis/core/server/management/ManagementService;Ljava/util/concurrent/ScheduledExecutorService;ILorg/apache/activemq/artemis/core/server/NodeManager;Ljava/lang/String;Ljava/lang/String;ZJI)V
     501: astore_3
     502: aload_0
     503: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
     506: aload_3
     507: invokevirtual #233                // Method org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     510: aload         4
     512: aload_1
     513: invokevirtual #239                // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.addClusterConnection:(Lorg/apache/activemq/artemis/api/core/SimpleString;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)V
     516: aload_0
     517: getfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
     520: ifnonnull     544
     523: aload_0
     524: aload_3
     525: putfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
     528: aload_0
     529: getfield      #1                  // Field clusterController:Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
     532: aload_0
     533: getfield      #48                 // Field defaultClusterConnection:Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;
     536: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ClusterConnection.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     541: invokevirtual #240                // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.setDefaultClusterConnectionName:(Lorg/apache/activemq/artemis/api/core/SimpleString;)V
     544: aload_0
     545: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
     548: aload_3
     549: aload_1
     550: invokeinterface #241,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.registerCluster:(Lorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)V
     555: aload_0
     556: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
     559: aload_1
     560: invokevirtual #202                // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getName:()Ljava/lang/String;
     563: aload_3
     564: invokeinterface #193,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     569: pop
     570: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     573: invokeinterface #242,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isTraceEnabled:()Z
     578: ifeq          617
     581: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     584: new           #33                 // class java/lang/StringBuilder
     587: dup
     588: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     591: ldc           #243                // String ClusterConnection.start at
     593: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     596: aload_3
     597: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     600: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     603: new           #76                 // class java/lang/Exception
     606: dup
     607: ldc           #244                // String trace
     609: invokespecial #245                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     612: invokeinterface #246,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     617: return

  private synchronized void deployBroadcastGroup(org.apache.activemq.artemis.api.core.BroadcastGroupConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getName:()Ljava/lang/String;
       8: invokeinterface #128,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ifeq          29
      16: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      19: aload_1
      20: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getName:()Ljava/lang/String;
      23: invokeinterface #248,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.broadcastGroupAlreadyExists:(Ljava/lang/String;)V
      28: return
      29: aload_0
      30: aload_1
      31: invokespecial #249                // Method createBroadcastGroup:(Lorg/apache/activemq/artemis/api/core/BroadcastGroupConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/BroadcastGroup;
      34: astore_2
      35: aload_0
      36: getfield      #22                 // Field managementService:Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      39: aload_2
      40: aload_1
      41: invokeinterface #250,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.registerBroadcastGroup:(Lorg/apache/activemq/artemis/core/server/cluster/BroadcastGroup;Lorg/apache/activemq/artemis/api/core/BroadcastGroupConfiguration;)V
      46: return

  private org.apache.activemq.artemis.core.server.cluster.BroadcastGroup createBroadcastGroup(org.apache.activemq.artemis.api.core.BroadcastGroupConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getName:()Ljava/lang/String;
       8: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #74                 // class org/apache/activemq/artemis/core/server/cluster/BroadcastGroup
      16: astore_2
      17: aload_2
      18: ifnonnull     128
      21: new           #251                // class org/apache/activemq/artemis/core/server/cluster/impl/BroadcastGroupImpl
      24: dup
      25: aload_0
      26: getfield      #24                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
      29: aload_1
      30: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #252                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getBroadcastPeriod:()J
      37: aload_0
      38: getfield      #21                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      41: aload_1
      42: invokevirtual #253                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getEndpointFactory:()Lorg/apache/activemq/artemis/api/core/BroadcastEndpointFactory;
      45: invokespecial #254                // Method org/apache/activemq/artemis/core/server/cluster/impl/BroadcastGroupImpl."<init>":(Lorg/apache/activemq/artemis/core/server/NodeManager;Ljava/lang/String;JLjava/util/concurrent/ScheduledExecutorService;Lorg/apache/activemq/artemis/api/core/BroadcastEndpointFactory;)V
      48: astore_2
      49: aload_1
      50: invokevirtual #255                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getConnectorInfos:()Ljava/util/List;
      53: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      58: astore_3
      59: aload_3
      60: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          128
      68: aload_3
      69: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #256                // class java/lang/String
      77: astore        4
      79: aload_0
      80: getfield      #23                 // Field configuration:Lorg/apache/activemq/artemis/core/config/Configuration;
      83: invokeinterface #257,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectorConfigurations:()Ljava/util/Map;
      88: aload         4
      90: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #258                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      98: astore        5
     100: aload         5
     102: ifnonnull     117
     105: aload_0
     106: aload         4
     108: aload_1
     109: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getName:()Ljava/lang/String;
     112: invokespecial #259                // Method logWarnNoConnector:(Ljava/lang/String;Ljava/lang/String;)V
     115: aconst_null
     116: areturn
     117: aload_2
     118: aload         5
     120: invokeinterface #260,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.addConnector:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
     125: goto          59
     128: aload_2
     129: invokeinterface #261,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.size:()I
     134: ifne          156
     137: aload_0
     138: aload_1
     139: invokevirtual #255                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getConnectorInfos:()Ljava/util/List;
     142: invokevirtual #262                // Method java/lang/Object.toString:()Ljava/lang/String;
     145: aload_2
     146: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/BroadcastGroup.getName:()Ljava/lang/String;
     151: invokespecial #259                // Method logWarnNoConnector:(Ljava/lang/String;Ljava/lang/String;)V
     154: aconst_null
     155: areturn
     156: aload_0
     157: getfield      #8                  // Field broadcastGroups:Ljava/util/Map;
     160: aload_1
     161: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/BroadcastGroupConfiguration.getName:()Ljava/lang/String;
     164: aload_2
     165: invokeinterface #193,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: aload_2
     172: areturn

  private void logWarnNoConnector(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #77                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: aload_1
       4: aload_2
       5: invokeinterface #263,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.broadcastGroupNoConnector:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  private synchronized java.util.Collection<org.apache.activemq.artemis.core.server.cluster.ClusterConnection> cloneClusterConnections();
    Code:
       0: new           #264                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #12                 // Field clusterConnections:Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #265                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: areturn
}
