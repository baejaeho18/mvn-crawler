Compiled from "PipeliningClientExchangeHandler.java"
public class org.apache.http.nio.protocol.PipeliningClientExchangeHandler<T> implements org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler {
  private final java.util.Queue<org.apache.http.nio.protocol.HttpAsyncRequestProducer> requestProducerQueue;

  private final java.util.Queue<org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>> responseConsumerQueue;

  private final java.util.Queue<org.apache.http.HttpRequest> requestQueue;

  private final java.util.Queue<T> resultQueue;

  private final org.apache.http.concurrent.BasicFuture<java.util.List<T>> future;

  private final org.apache.http.protocol.HttpContext localContext;

  private final org.apache.http.nio.NHttpClientConnection conn;

  private final org.apache.http.protocol.HttpProcessor httppocessor;

  private final org.apache.http.ConnectionReuseStrategy connReuseStrategy;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.http.nio.protocol.HttpAsyncRequestProducer> requestProducerRef;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>> responseConsumerRef;

  private final java.util.concurrent.atomic.AtomicBoolean keepAlive;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  public org.apache.http.nio.protocol.PipeliningClientExchangeHandler(java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncRequestProducer>, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>>, org.apache.http.concurrent.FutureCallback<java.util.List<T>>, org.apache.http.protocol.HttpContext, org.apache.http.nio.NHttpClientConnection, org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Request producer list
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      10: pop
      11: aload_2
      12: ldc           #4                  // String Response consumer list
      14: invokestatic  #3                  // Method org/apache/http/util/Args.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      17: pop
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      24: aload_2
      25: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #6                  // String Number of request producers does not match that of response consumers
      40: invokestatic  #7                  // Method org/apache/http/util/Args.check:(ZLjava/lang/String;)V
      43: aload_0
      44: new           #8                  // class java/util/concurrent/ConcurrentLinkedQueue
      47: dup
      48: aload_1
      49: invokespecial #9                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":(Ljava/util/Collection;)V
      52: putfield      #10                 // Field requestProducerQueue:Ljava/util/Queue;
      55: aload_0
      56: new           #8                  // class java/util/concurrent/ConcurrentLinkedQueue
      59: dup
      60: aload_2
      61: invokespecial #9                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":(Ljava/util/Collection;)V
      64: putfield      #11                 // Field responseConsumerQueue:Ljava/util/Queue;
      67: aload_0
      68: new           #8                  // class java/util/concurrent/ConcurrentLinkedQueue
      71: dup
      72: invokespecial #12                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      75: putfield      #13                 // Field requestQueue:Ljava/util/Queue;
      78: aload_0
      79: new           #8                  // class java/util/concurrent/ConcurrentLinkedQueue
      82: dup
      83: invokespecial #12                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      86: putfield      #14                 // Field resultQueue:Ljava/util/Queue;
      89: aload_0
      90: new           #15                 // class org/apache/http/concurrent/BasicFuture
      93: dup
      94: aload_3
      95: invokespecial #16                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      98: putfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
     101: aload_0
     102: aload         4
     104: ldc           #18                 // String HTTP context
     106: invokestatic  #19                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     109: checkcast     #20                 // class org/apache/http/protocol/HttpContext
     112: putfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
     115: aload_0
     116: aload         5
     118: ldc           #22                 // String HTTP connection
     120: invokestatic  #19                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     123: checkcast     #23                 // class org/apache/http/nio/NHttpClientConnection
     126: putfield      #24                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
     129: aload_0
     130: aload         6
     132: ldc           #25                 // String HTTP processor
     134: invokestatic  #19                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     137: checkcast     #26                 // class org/apache/http/protocol/HttpProcessor
     140: putfield      #27                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
     143: aload_0
     144: aload         7
     146: ifnull        154
     149: aload         7
     151: goto          157
     154: getstatic     #28                 // Field org/apache/http/impl/DefaultConnectionReuseStrategy.INSTANCE:Lorg/apache/http/impl/DefaultConnectionReuseStrategy;
     157: putfield      #29                 // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
     160: aload_0
     161: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
     164: ldc           #30                 // String http.connection
     166: aload_0
     167: getfield      #24                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
     170: invokeinterface #31,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     175: aload_0
     176: new           #32                 // class java/util/concurrent/atomic/AtomicReference
     179: dup
     180: aconst_null
     181: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     184: putfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
     187: aload_0
     188: new           #32                 // class java/util/concurrent/atomic/AtomicReference
     191: dup
     192: aconst_null
     193: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     196: putfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
     199: aload_0
     200: new           #36                 // class java/util/concurrent/atomic/AtomicBoolean
     203: dup
     204: iconst_0
     205: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     208: putfield      #38                 // Field keepAlive:Ljava/util/concurrent/atomic/AtomicBoolean;
     211: aload_0
     212: new           #36                 // class java/util/concurrent/atomic/AtomicBoolean
     215: dup
     216: iconst_0
     217: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     220: putfield      #39                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
     223: return

  public org.apache.http.nio.protocol.PipeliningClientExchangeHandler(java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncRequestProducer>, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>>, org.apache.http.protocol.HttpContext, org.apache.http.nio.NHttpClientConnection, org.apache.http.protocol.HttpProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: aload         4
       7: aload         5
       9: aconst_null
      10: invokespecial #40                 // Method "<init>":(Ljava/util/List;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      13: return

  public java.util.concurrent.Future<java.util.List<T>> getFuture();
    Code:
       0: aload_0
       1: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
       4: areturn

  private static void closeQuietly(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #41,  1           // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  private void releaseResources();
    Code:
       0: aload_0
       1: getfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #44                 // class java/io/Closeable
      11: invokestatic  #45                 // Method closeQuietly:(Ljava/io/Closeable;)V
      14: aload_0
      15: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      18: aconst_null
      19: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #44                 // class java/io/Closeable
      25: invokestatic  #45                 // Method closeQuietly:(Ljava/io/Closeable;)V
      28: aload_0
      29: getfield      #10                 // Field requestProducerQueue:Ljava/util/Queue;
      32: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      37: ifne          58
      40: aload_0
      41: getfield      #10                 // Field requestProducerQueue:Ljava/util/Queue;
      44: invokeinterface #47,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      49: checkcast     #44                 // class java/io/Closeable
      52: invokestatic  #45                 // Method closeQuietly:(Ljava/io/Closeable;)V
      55: goto          28
      58: aload_0
      59: getfield      #11                 // Field responseConsumerQueue:Ljava/util/Queue;
      62: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      67: ifne          88
      70: aload_0
      71: getfield      #11                 // Field responseConsumerQueue:Ljava/util/Queue;
      74: invokeinterface #47,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      79: checkcast     #44                 // class java/io/Closeable
      82: invokestatic  #45                 // Method closeQuietly:(Ljava/io/Closeable;)V
      85: goto          58
      88: aload_0
      89: getfield      #13                 // Field requestQueue:Ljava/util/Queue;
      92: invokeinterface #48,  1           // InterfaceMethod java/util/Queue.clear:()V
      97: aload_0
      98: getfield      #14                 // Field resultQueue:Ljava/util/Queue;
     101: invokeinterface #48,  1           // InterfaceMethod java/util/Queue.clear:()V
     106: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          34
      12: aload_0
      13: invokespecial #50                 // Method releaseResources:()V
      16: aload_0
      17: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      20: invokevirtual #51                 // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
      23: ifne          34
      26: aload_0
      27: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      30: invokevirtual #52                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      33: pop
      34: return

  public org.apache.http.HttpRequest generateRequest() throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #54                 // String Inconsistent state: request producer is not null
      17: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      20: aload_0
      21: getfield      #10                 // Field requestProducerQueue:Ljava/util/Queue;
      24: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      29: checkcast     #57                 // class org/apache/http/nio/protocol/HttpAsyncRequestProducer
      32: astore_1
      33: aload_1
      34: ifnonnull     39
      37: aconst_null
      38: areturn
      39: aload_0
      40: getfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      43: aload_1
      44: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      47: aload_1
      48: invokeinterface #59,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.generateRequest:()Lorg/apache/http/HttpRequest;
      53: astore_2
      54: aload_0
      55: getfield      #27                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
      58: aload_2
      59: aload_0
      60: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      63: invokeinterface #60,  3           // InterfaceMethod org/apache/http/protocol/HttpProcessor.process:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V
      68: aload_0
      69: getfield      #13                 // Field requestQueue:Ljava/util/Queue;
      72: aload_2
      73: invokeinterface #61,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      78: pop
      79: aload_2
      80: areturn

  public void produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #57                 // class org/apache/http/nio/protocol/HttpAsyncRequestProducer
      10: astore_3
      11: aload_3
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #62                 // String Inconsistent state: request producer is null
      22: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      25: aload_3
      26: aload_1
      27: aload_2
      28: invokeinterface #63,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
      33: return

  public void requestCompleted();
    Code:
       0: aload_0
       1: getfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #57                 // class org/apache/http/nio/protocol/HttpAsyncRequestProducer
      11: astore_1
      12: aload_1
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #62                 // String Inconsistent state: request producer is null
      23: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      26: aload_1
      27: aload_0
      28: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      31: invokeinterface #64,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.requestCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      36: return

  public void responseReceived(org.apache.http.HttpResponse) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #65                 // String Inconsistent state: response consumer is not null
      17: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      20: aload_0
      21: getfield      #11                 // Field responseConsumerQueue:Ljava/util/Queue;
      24: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      29: checkcast     #66                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      32: astore_2
      33: aload_2
      34: ifnull        41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ldc           #67                 // String Inconsistent state: response consumer queue is empty
      44: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      47: aload_0
      48: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      51: aload_2
      52: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #13                 // Field requestQueue:Ljava/util/Queue;
      59: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      64: checkcast     #68                 // class org/apache/http/HttpRequest
      67: astore_3
      68: aload_3
      69: ifnull        76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ldc           #69                 // String Inconsistent state: request queue is empty
      79: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      82: aload_0
      83: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      86: ldc           #70                 // String http.request
      88: aload_3
      89: invokeinterface #31,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      94: aload_0
      95: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      98: ldc           #71                 // String http.response
     100: aload_1
     101: invokeinterface #31,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     106: aload_0
     107: getfield      #27                 // Field httppocessor:Lorg/apache/http/protocol/HttpProcessor;
     110: aload_1
     111: aload_0
     112: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
     115: invokeinterface #72,  3           // InterfaceMethod org/apache/http/protocol/HttpProcessor.process:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V
     120: aload_2
     121: aload_1
     122: invokeinterface #73,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.responseReceived:(Lorg/apache/http/HttpResponse;)V
     127: aload_0
     128: getfield      #38                 // Field keepAlive:Ljava/util/concurrent/atomic/AtomicBoolean;
     131: aload_0
     132: getfield      #29                 // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
     135: aload_1
     136: aload_0
     137: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
     140: invokeinterface #74,  3           // InterfaceMethod org/apache/http/ConnectionReuseStrategy.keepAlive:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z
     145: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     148: return

  public void consumeContent(org.apache.http.nio.ContentDecoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #66                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      10: astore_3
      11: aload_3
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #76                 // String Inconsistent state: response consumer is null
      22: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      25: aload_3
      26: aload_1
      27: aload_2
      28: invokeinterface #77,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.consumeContent:(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
      33: return

  public void responseCompleted() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #66                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      11: astore_1
      12: aload_1
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #76                 // String Inconsistent state: response consumer is null
      23: invokestatic  #55                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      26: aload_0
      27: getfield      #38                 // Field keepAlive:Ljava/util/concurrent/atomic/AtomicBoolean;
      30: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      33: ifne          45
      36: aload_0
      37: getfield      #24                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
      40: invokeinterface #79,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      45: aload_1
      46: aload_0
      47: getfield      #21                 // Field localContext:Lorg/apache/http/protocol/HttpContext;
      50: invokeinterface #80,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.responseCompleted:(Lorg/apache/http/protocol/HttpContext;)V
      55: aload_1
      56: invokeinterface #81,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getResult:()Ljava/lang/Object;
      61: astore_2
      62: aload_1
      63: invokeinterface #82,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.getException:()Ljava/lang/Exception;
      68: astore_3
      69: aload_2
      70: ifnull        87
      73: aload_0
      74: getfield      #14                 // Field resultQueue:Ljava/util/Queue;
      77: aload_2
      78: invokeinterface #61,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          105
      87: aload_0
      88: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      91: aload_3
      92: invokevirtual #83                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      95: pop
      96: aload_0
      97: getfield      #24                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
     100: invokeinterface #84,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.shutdown:()V
     105: aload_0
     106: getfield      #24                 // Field conn:Lorg/apache/http/nio/NHttpClientConnection;
     109: invokeinterface #85,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.isOpen:()Z
     114: ifne          133
     117: aload_0
     118: getfield      #39                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
     121: iconst_0
     122: iconst_1
     123: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     126: ifeq          133
     129: aload_0
     130: invokespecial #50                 // Method releaseResources:()V
     133: aload_0
     134: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
     137: invokevirtual #51                 // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
     140: ifne          183
     143: aload_0
     144: getfield      #11                 // Field responseConsumerQueue:Ljava/util/Queue;
     147: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     152: ifeq          183
     155: aload_0
     156: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
     159: new           #86                 // class java/util/ArrayList
     162: dup
     163: aload_0
     164: getfield      #14                 // Field resultQueue:Ljava/util/Queue;
     167: invokespecial #87                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     170: invokevirtual #88                 // Method org/apache/http/concurrent/BasicFuture.completed:(Ljava/lang/Object;)Z
     173: pop
     174: aload_0
     175: getfield      #14                 // Field resultQueue:Ljava/util/Queue;
     178: invokeinterface #48,  1           // InterfaceMethod java/util/Queue.clear:()V
     183: goto          194
     186: astore_2
     187: aload_0
     188: aload_2
     189: invokevirtual #90                 // Method failed:(Ljava/lang/Exception;)V
     192: aload_2
     193: athrow
     194: return
    Exception table:
       from    to  target type
          26   183   186   Class java/lang/RuntimeException

  public void inputTerminated();
    Code:
       0: aload_0
       1: new           #91                 // class org/apache/http/ConnectionClosedException
       4: dup
       5: ldc           #92                 // String Connection closed
       7: invokespecial #93                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      10: invokevirtual #90                 // Method failed:(Ljava/lang/Exception;)V
      13: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          114
      12: aload_0
      13: getfield      #34                 // Field requestProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: checkcast     #57                 // class org/apache/http/nio/protocol/HttpAsyncRequestProducer
      22: astore_2
      23: aload_2
      24: ifnull        34
      27: aload_2
      28: aload_1
      29: invokeinterface #94,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.failed:(Ljava/lang/Exception;)V
      34: aload_0
      35: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      38: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      41: checkcast     #66                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      44: astore_3
      45: aload_3
      46: ifnull        56
      49: aload_3
      50: aload_1
      51: invokeinterface #95,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.failed:(Ljava/lang/Exception;)V
      56: aload_0
      57: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      60: aload_1
      61: invokevirtual #83                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      64: pop
      65: aload_0
      66: invokespecial #50                 // Method releaseResources:()V
      69: goto          81
      72: astore        4
      74: aload_0
      75: invokespecial #50                 // Method releaseResources:()V
      78: aload         4
      80: athrow
      81: goto          114
      84: astore        5
      86: aload_0
      87: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      90: aload_1
      91: invokevirtual #83                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      94: pop
      95: aload_0
      96: invokespecial #50                 // Method releaseResources:()V
      99: goto          111
     102: astore        6
     104: aload_0
     105: invokespecial #50                 // Method releaseResources:()V
     108: aload         6
     110: athrow
     111: aload         5
     113: athrow
     114: return
    Exception table:
       from    to  target type
          56    65    72   any
          72    74    72   any
          12    56    84   any
          86    95   102   any
         102   104   102   any
          84    86    84   any

  public boolean cancel();
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          76
      12: aload_0
      13: getfield      #35                 // Field responseConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: checkcast     #66                 // class org/apache/http/nio/protocol/HttpAsyncResponseConsumer
      22: astore_1
      23: aload_1
      24: ifnull        40
      27: aload_1
      28: invokeinterface #96,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.cancel:()Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore_2
      42: aload_0
      43: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      46: invokevirtual #52                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      49: pop
      50: aload_0
      51: invokespecial #50                 // Method releaseResources:()V
      54: iload_2
      55: ireturn
      56: astore_3
      57: aload_0
      58: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
      61: invokevirtual #52                 // Method org/apache/http/concurrent/BasicFuture.cancel:()Z
      64: pop
      65: aload_3
      66: athrow
      67: astore        4
      69: aload_0
      70: invokespecial #50                 // Method releaseResources:()V
      73: aload         4
      75: athrow
      76: iconst_0
      77: ireturn
    Exception table:
       from    to  target type
          12    42    56   any
          56    57    56   any
          12    50    67   any
          56    69    67   any

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #17                 // Field future:Lorg/apache/http/concurrent/BasicFuture;
       4: invokevirtual #51                 // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
       7: ireturn
}
