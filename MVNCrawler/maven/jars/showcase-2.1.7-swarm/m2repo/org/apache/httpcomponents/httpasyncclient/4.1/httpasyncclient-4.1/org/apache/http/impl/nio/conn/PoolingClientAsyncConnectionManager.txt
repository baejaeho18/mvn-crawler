Compiled from "PoolingClientAsyncConnectionManager.java"
public class org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager implements org.apache.http.nio.conn.ClientAsyncConnectionManager, org.apache.http.pool.ConnPoolControl<org.apache.http.conn.routing.HttpRoute> {
  private final org.apache.commons.logging.Log log;

  private final org.apache.http.nio.reactor.ConnectingIOReactor ioreactor;

  private final org.apache.http.impl.nio.conn.HttpNIOConnPool pool;

  private final org.apache.http.nio.conn.scheme.AsyncSchemeRegistry schemeRegistry;

  private final org.apache.http.nio.conn.ClientAsyncConnectionFactory connFactory;

  public org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager(org.apache.http.nio.reactor.ConnectingIOReactor, org.apache.http.nio.conn.scheme.AsyncSchemeRegistry, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #8                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #9                  // String I/O reactor
      18: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_2
      23: ldc           #11                 // String Scheme registory
      25: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: aload         5
      31: ldc           #12                 // String Time unit
      33: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: aload_1
      39: putfield      #13                 // Field ioreactor:Lorg/apache/http/nio/reactor/ConnectingIOReactor;
      42: aload_0
      43: new           #14                 // class org/apache/http/impl/nio/conn/HttpNIOConnPool
      46: dup
      47: aload_0
      48: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      51: aload_1
      52: aload_2
      53: lload_3
      54: aload         5
      56: invokespecial #15                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool."<init>":(Lorg/apache/commons/logging/Log;Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;JLjava/util/concurrent/TimeUnit;)V
      59: putfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      62: aload_0
      63: aload_2
      64: putfield      #16                 // Field schemeRegistry:Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
      67: aload_0
      68: aload_0
      69: invokevirtual #17                 // Method createClientAsyncConnectionFactory:()Lorg/apache/http/nio/conn/ClientAsyncConnectionFactory;
      72: putfield      #2                  // Field connFactory:Lorg/apache/http/nio/conn/ClientAsyncConnectionFactory;
      75: return

  public org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager(org.apache.http.nio.reactor.ConnectingIOReactor, org.apache.http.nio.conn.scheme.AsyncSchemeRegistry) throws org.apache.http.nio.reactor.IOReactorException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #18                 // long -1l
       6: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       9: invokespecial #21                 // Method "<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;JLjava/util/concurrent/TimeUnit;)V
      12: return

  public org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager(org.apache.http.nio.reactor.ConnectingIOReactor) throws org.apache.http.nio.reactor.IOReactorException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method org/apache/http/impl/nio/conn/AsyncSchemeRegistryFactory.createDefault:()Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
       5: invokespecial #23                 // Method "<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;)V
       8: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method shutdown:()V
       4: aload_0
       5: invokespecial #25                 // Method java/lang/Object.finalize:()V
       8: goto          18
      11: astore_1
      12: aload_0
      13: invokespecial #25                 // Method java/lang/Object.finalize:()V
      16: aload_1
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     4    11   any
          11    12    11   any

  protected org.apache.http.nio.conn.ClientAsyncConnectionFactory createClientAsyncConnectionFactory();
    Code:
       0: new           #26                 // class org/apache/http/impl/nio/conn/DefaultClientAsyncConnectionFactory
       3: dup
       4: invokespecial #27                 // Method org/apache/http/impl/nio/conn/DefaultClientAsyncConnectionFactory."<init>":()V
       7: areturn

  public org.apache.http.nio.conn.scheme.AsyncSchemeRegistry getSchemeRegistry();
    Code:
       0: aload_0
       1: getfield      #16                 // Field schemeRegistry:Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
       4: areturn

  public void execute(org.apache.http.nio.reactor.IOEventDispatch) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field ioreactor:Lorg/apache/http/nio/reactor/ConnectingIOReactor;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod org/apache/http/nio/reactor/ConnectingIOReactor.execute:(Lorg/apache/http/nio/reactor/IOEventDispatch;)V
      10: return

  public org.apache.http.nio.reactor.IOReactorStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ioreactor:Lorg/apache/http/nio/reactor/ConnectingIOReactor;
       4: invokeinterface #29,  1           // InterfaceMethod org/apache/http/nio/reactor/ConnectingIOReactor.getStatus:()Lorg/apache/http/nio/reactor/IOReactorStatus;
       9: areturn

  public void shutdown(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
       4: ldc           #30                 // String Connection manager is shutting down
       6: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      15: lload_1
      16: invokevirtual #32                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.shutdown:(J)V
      19: aload_0
      20: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      23: ldc           #33                 // String Connection manager shut down
      25: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      30: return

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
       4: ldc           #30                 // String Connection manager is shutting down
       6: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      15: ldc2_w        #34                 // long 2000l
      18: invokevirtual #32                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.shutdown:(J)V
      21: aload_0
      22: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      25: ldc           #33                 // String Connection manager shut down
      27: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      32: return

  private java.lang.String format(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: ldc           #38                 // String [route:
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #41                 // String ]
      20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_2
      25: ifnull        44
      28: aload_3
      29: ldc           #42                 // String [state:
      31: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #41                 // String ]
      40: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_3
      45: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  private java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      12: invokevirtual #44                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getTotalStats:()Lorg/apache/http/pool/PoolStats;
      15: astore_3
      16: aload_0
      17: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      20: aload_1
      21: invokevirtual #45                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getStats:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolStats;
      24: astore        4
      26: aload_2
      27: ldc           #46                 // String [total kept alive:
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_3
      33: invokevirtual #47                 // Method org/apache/http/pool/PoolStats.getAvailable:()I
      36: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #49                 // String ;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_2
      46: ldc           #50                 // String route allocated:
      48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload         4
      53: invokevirtual #51                 // Method org/apache/http/pool/PoolStats.getLeased:()I
      56: aload         4
      58: invokevirtual #47                 // Method org/apache/http/pool/PoolStats.getAvailable:()I
      61: iadd
      62: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: pop
      66: aload_2
      67: ldc           #52                 // String  of
      69: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload         4
      74: invokevirtual #53                 // Method org/apache/http/pool/PoolStats.getMax:()I
      77: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #49                 // String ;
      82: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_2
      87: ldc           #54                 // String total allocated:
      89: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_3
      93: invokevirtual #51                 // Method org/apache/http/pool/PoolStats.getLeased:()I
      96: aload_3
      97: invokevirtual #47                 // Method org/apache/http/pool/PoolStats.getAvailable:()I
     100: iadd
     101: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: pop
     105: aload_2
     106: ldc           #52                 // String  of
     108: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_3
     112: invokevirtual #53                 // Method org/apache/http/pool/PoolStats.getMax:()I
     115: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     118: ldc           #41                 // String ]
     120: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: pop
     124: aload_2
     125: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: areturn

  private java.lang.String format(org.apache.http.impl.nio.conn.HttpPoolEntry);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #55                 // String [id:
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: invokevirtual #56                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getId:()Ljava/lang/String;
      18: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #41                 // String ]
      23: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_2
      28: ldc           #38                 // String [route:
      30: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #57                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getRoute:()Ljava/lang/Object;
      37: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #41                 // String ]
      42: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: invokevirtual #58                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getState:()Ljava/lang/Object;
      50: astore_3
      51: aload_3
      52: ifnull        71
      55: aload_2
      56: ldc           #42                 // String [state:
      58: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #41                 // String ]
      67: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_2
      72: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public java.util.concurrent.Future<org.apache.http.nio.conn.ManagedClientAsyncConnection> leaseConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.concurrent.FutureCallback<org.apache.http.nio.conn.ManagedClientAsyncConnection>);
    Code:
       0: aload_1
       1: ldc           #59                 // String HTTP route
       3: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload         5
       9: ldc           #12                 // String Time unit
      11: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      19: invokeinterface #60,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      24: ifeq          68
      27: aload_0
      28: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      31: new           #36                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #61                 // String Connection request:
      40: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: aload_1
      45: aload_2
      46: invokespecial #62                 // Method format:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Ljava/lang/String;
      49: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: aload_1
      54: invokespecial #3                  // Method formatStats:(Lorg/apache/http/conn/routing/HttpRoute;)Ljava/lang/String;
      57: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      68: new           #63                 // class org/apache/http/concurrent/BasicFuture
      71: dup
      72: aload         6
      74: invokespecial #64                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      77: astore        7
      79: aload_0
      80: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      83: aload_1
      84: aload_2
      85: lload_3
      86: aload         5
      88: new           #65                 // class org/apache/http/impl/nio/conn/PoolingClientAsyncConnectionManager$InternalPoolEntryCallback
      91: dup
      92: aload_0
      93: aload         7
      95: invokespecial #66                 // Method org/apache/http/impl/nio/conn/PoolingClientAsyncConnectionManager$InternalPoolEntryCallback."<init>":(Lorg/apache/http/impl/nio/conn/PoolingClientAsyncConnectionManager;Lorg/apache/http/concurrent/BasicFuture;)V
      98: invokevirtual #67                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.lease:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
     101: pop
     102: aload         7
     104: areturn

  public void releaseConnection(org.apache.http.nio.conn.ManagedClientAsyncConnection, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ldc           #68                 // String HTTP connection
       3: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: instanceof    #69                 // class org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl
      11: ifne          24
      14: new           #70                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #71                 // String Connection class mismatch, connection not obtained from this manager
      20: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload         4
      26: ldc           #12                 // String Time unit
      28: invokestatic  #10                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: pop
      32: aload_1
      33: checkcast     #69                 // class org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl
      36: astore        5
      38: aload         5
      40: invokevirtual #73                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.getManager:()Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
      43: astore        6
      45: aload         6
      47: ifnull        66
      50: aload         6
      52: aload_0
      53: if_acmpeq     66
      56: new           #70                 // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #74                 // String Connection not obtained from this manager
      62: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      70: invokevirtual #75                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.isShutdown:()Z
      73: ifeq          77
      76: return
      77: aload         5
      79: dup
      80: astore        7
      82: monitorenter
      83: aload         5
      85: invokevirtual #76                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.getPoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      88: astore        8
      90: aload         8
      92: ifnonnull     99
      95: aload         7
      97: monitorexit
      98: return
      99: aload         5
     101: invokevirtual #77                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.isOpen:()Z
     104: ifeq          150
     107: aload         5
     109: invokevirtual #78                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.isMarkedReusable:()Z
     112: ifne          150
     115: aload         5
     117: invokevirtual #79                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.shutdown:()V
     120: goto          150
     123: astore        9
     125: aload_0
     126: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     129: invokeinterface #60,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     134: ifeq          150
     137: aload_0
     138: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     141: ldc           #81                 // String I/O exception shutting down released connection
     143: aload         9
     145: invokeinterface #82,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     150: aload         5
     152: invokevirtual #77                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.isOpen:()Z
     155: ifeq          282
     158: aload         8
     160: lload_2
     161: aload         4
     163: ifnull        171
     166: aload         4
     168: goto          174
     171: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     174: invokevirtual #83                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.updateExpiry:(JLjava/util/concurrent/TimeUnit;)V
     177: aload_0
     178: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     181: invokeinterface #60,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     186: ifeq          276
     189: lload_2
     190: lconst_0
     191: lcmp
     192: ifle          229
     195: new           #36                 // class java/lang/StringBuilder
     198: dup
     199: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     202: ldc           #84                 // String for
     204: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: lload_2
     208: invokevirtual #85                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     211: ldc           #86                 // String
     213: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload         4
     218: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     221: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: astore        9
     226: goto          233
     229: ldc           #87                 // String indefinitely
     231: astore        9
     233: aload_0
     234: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     237: new           #36                 // class java/lang/StringBuilder
     240: dup
     241: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     244: ldc           #88                 // String Connection
     246: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: aload_0
     250: aload         8
     252: invokespecial #4                  // Method format:(Lorg/apache/http/impl/nio/conn/HttpPoolEntry;)Ljava/lang/String;
     255: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: ldc           #89                 // String  can be kept alive
     260: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: aload         9
     265: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     271: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     276: aload         5
     278: iconst_0
     279: invokevirtual #90                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.setSocketTimeout:(I)V
     282: aload_0
     283: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
     286: aload         5
     288: invokevirtual #91                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.detach:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
     291: aload         5
     293: invokevirtual #78                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.isMarkedReusable:()Z
     296: invokevirtual #92                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.release:(Lorg/apache/http/pool/PoolEntry;Z)V
     299: goto          324
     302: astore        10
     304: aload_0
     305: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
     308: aload         5
     310: invokevirtual #91                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.detach:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
     313: aload         5
     315: invokevirtual #78                 // Method org/apache/http/impl/nio/conn/ManagedClientAsyncConnectionImpl.isMarkedReusable:()Z
     318: invokevirtual #92                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.release:(Lorg/apache/http/pool/PoolEntry;Z)V
     321: aload         10
     323: athrow
     324: aload_0
     325: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     328: invokeinterface #60,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     333: ifeq          384
     336: aload_0
     337: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     340: new           #36                 // class java/lang/StringBuilder
     343: dup
     344: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     347: ldc           #93                 // String Connection released:
     349: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     352: aload_0
     353: aload         8
     355: invokespecial #4                  // Method format:(Lorg/apache/http/impl/nio/conn/HttpPoolEntry;)Ljava/lang/String;
     358: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     361: aload_0
     362: aload         8
     364: invokevirtual #57                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getRoute:()Ljava/lang/Object;
     367: checkcast     #94                 // class org/apache/http/conn/routing/HttpRoute
     370: invokespecial #3                  // Method formatStats:(Lorg/apache/http/conn/routing/HttpRoute;)Ljava/lang/String;
     373: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     376: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     379: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     384: aload         7
     386: monitorexit
     387: goto          398
     390: astore        11
     392: aload         7
     394: monitorexit
     395: aload         11
     397: athrow
     398: return
    Exception table:
       from    to  target type
         115   120   123   Class java/io/IOException
          99   282   302   any
         302   304   302   any
          83    98   390   any
          99   387   390   any
         390   395   390   any

  public org.apache.http.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: invokevirtual #44                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getTotalStats:()Lorg/apache/http/pool/PoolStats;
       7: areturn

  public org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: aload_1
       5: invokevirtual #45                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getStats:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolStats;
       8: areturn

  public void setMaxTotal(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: iload_1
       5: invokevirtual #95                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.setMaxTotal:(I)V
       8: return

  public void setDefaultMaxPerRoute(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: iload_1
       5: invokevirtual #96                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.setDefaultMaxPerRoute:(I)V
       8: return

  public void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute, int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: aload_1
       5: iload_2
       6: invokevirtual #97                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.setMaxPerRoute:(Ljava/lang/Object;I)V
       9: return

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: invokevirtual #98                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getMaxTotal:()I
       7: ireturn

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: invokevirtual #99                 // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getDefaultMaxPerRoute:()I
       7: ireturn

  public int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: aload_1
       5: invokevirtual #100                // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.getMaxPerRoute:(Ljava/lang/Object;)I
       8: ireturn

  public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
       4: invokeinterface #60,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          49
      12: aload_0
      13: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      16: new           #36                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #101                // String Closing connections idle longer than
      25: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: lload_1
      29: invokevirtual #85                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: ldc           #86                 // String
      34: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_3
      38: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      53: lload_1
      54: aload_3
      55: invokevirtual #102                // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.closeIdle:(JLjava/util/concurrent/TimeUnit;)V
      58: return

  public void closeExpiredConnections();
    Code:
       0: aload_0
       1: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
       4: ldc           #103                // String Closing expired connections
       6: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
      15: invokevirtual #104                // Method org/apache/http/impl/nio/conn/HttpNIOConnPool.closeExpired:()V
      18: return

  public org.apache.http.pool.PoolStats getStats(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/http/conn/routing/HttpRoute
       5: invokevirtual #105                // Method getStats:(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/pool/PoolStats;
       8: areturn

  public int getMaxPerRoute(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/http/conn/routing/HttpRoute
       5: invokevirtual #106                // Method getMaxPerRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I
       8: ireturn

  public void setMaxPerRoute(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/http/conn/routing/HttpRoute
       5: iload_2
       6: invokevirtual #107                // Method setMaxPerRoute:(Lorg/apache/http/conn/routing/HttpRoute;I)V
       9: return

  static org.apache.commons.logging.Log access$000(org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager);
    Code:
       0: aload_0
       1: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
       4: areturn

  static java.lang.String access$100(org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager, org.apache.http.impl.nio.conn.HttpPoolEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method format:(Lorg/apache/http/impl/nio/conn/HttpPoolEntry;)Ljava/lang/String;
       5: areturn

  static java.lang.String access$200(org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager, org.apache.http.conn.routing.HttpRoute);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method formatStats:(Lorg/apache/http/conn/routing/HttpRoute;)Ljava/lang/String;
       5: areturn

  static org.apache.http.nio.conn.ClientAsyncConnectionFactory access$300(org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connFactory:Lorg/apache/http/nio/conn/ClientAsyncConnectionFactory;
       4: areturn

  static org.apache.http.impl.nio.conn.HttpNIOConnPool access$400(org.apache.http.impl.nio.conn.PoolingClientAsyncConnectionManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lorg/apache/http/impl/nio/conn/HttpNIOConnPool;
       4: areturn
}
