Compiled from "SocketHttpClientConnection.java"
public class org.apache.http.impl.SocketHttpClientConnection extends org.apache.http.impl.AbstractHttpClientConnection implements org.apache.http.HttpInetConnection {
  private volatile boolean open;

  private volatile java.net.Socket socket;

  public org.apache.http.impl.SocketHttpClientConnection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/http/impl/AbstractHttpClientConnection."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field socket:Ljava/net/Socket;
       9: return

  protected void assertNotOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field open:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #4                  // String Connection is already open
      14: invokestatic  #5                  // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      17: return

  protected void assertOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field open:Z
       4: ldc           #6                  // String Connection is not open
       6: invokestatic  #5                  // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
       9: return

  protected org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket, int, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: new           #7                  // class org/apache/http/impl/io/SocketInputBuffer
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokespecial #8                  // Method org/apache/http/impl/io/SocketInputBuffer."<init>":(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V
      10: areturn

  protected org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket, int, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: new           #9                  // class org/apache/http/impl/io/SocketOutputBuffer
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokespecial #10                 // Method org/apache/http/impl/io/SocketOutputBuffer."<init>":(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V
      10: areturn

  protected void bind(java.net.Socket, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #11                 // String Socket
       3: invokestatic  #12                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #13                 // String HTTP parameters
      10: invokestatic  #12                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: putfield      #2                  // Field socket:Ljava/net/Socket;
      19: aload_2
      20: ldc           #14                 // String http.socket.buffer-size
      22: iconst_m1
      23: invokeinterface #15,  3           // InterfaceMethod org/apache/http/params/HttpParams.getIntParameter:(Ljava/lang/String;I)I
      28: istore_3
      29: aload_0
      30: aload_0
      31: aload_1
      32: iload_3
      33: aload_2
      34: invokevirtual #16                 // Method createSessionInputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;
      37: aload_0
      38: aload_1
      39: iload_3
      40: aload_2
      41: invokevirtual #17                 // Method createSessionOutputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;
      44: aload_2
      45: invokevirtual #18                 // Method init:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V
      48: aload_0
      49: iconst_1
      50: putfield      #3                  // Field open:Z
      53: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field open:Z
       4: ireturn

  protected java.net.Socket getSocket();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: areturn

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field socket:Ljava/net/Socket;
      11: invokevirtual #19                 // Method java/net/Socket.getLocalAddress:()Ljava/net/InetAddress;
      14: areturn
      15: aconst_null
      16: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field socket:Ljava/net/Socket;
      11: invokevirtual #20                 // Method java/net/Socket.getLocalPort:()I
      14: ireturn
      15: iconst_m1
      16: ireturn

  public java.net.InetAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field socket:Ljava/net/Socket;
      11: invokevirtual #21                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
      14: areturn
      15: aconst_null
      16: areturn

  public int getRemotePort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field socket:Ljava/net/Socket;
      11: invokevirtual #22                 // Method java/net/Socket.getPort:()I
      14: ireturn
      15: iconst_m1
      16: ireturn

  public void setSocketTimeout(int);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method assertOpen:()V
       4: aload_0
       5: getfield      #2                  // Field socket:Ljava/net/Socket;
       8: ifnull        23
      11: aload_0
      12: getfield      #2                  // Field socket:Ljava/net/Socket;
      15: iload_1
      16: invokevirtual #24                 // Method java/net/Socket.setSoTimeout:(I)V
      19: goto          23
      22: astore_2
      23: return
    Exception table:
       from    to  target type
          11    19    22   Class java/net/SocketException

  public int getSocketTimeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: ifnull        18
       7: aload_0
       8: getfield      #2                  // Field socket:Ljava/net/Socket;
      11: invokevirtual #26                 // Method java/net/Socket.getSoTimeout:()I
      14: ireturn
      15: astore_1
      16: iconst_m1
      17: ireturn
      18: iconst_m1
      19: ireturn
    Exception table:
       from    to  target type
           7    14    15   Class java/net/SocketException

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field open:Z
       5: aload_0
       6: getfield      #2                  // Field socket:Ljava/net/Socket;
       9: astore_1
      10: aload_1
      11: ifnull        18
      14: aload_1
      15: invokevirtual #27                 // Method java/net/Socket.close:()V
      18: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field open:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #3                  // Field open:Z
      13: aload_0
      14: getfield      #2                  // Field socket:Ljava/net/Socket;
      17: astore_1
      18: aload_0
      19: invokevirtual #28                 // Method doFlush:()V
      22: aload_1
      23: invokevirtual #29                 // Method java/net/Socket.shutdownOutput:()V
      26: goto          30
      29: astore_2
      30: aload_1
      31: invokevirtual #31                 // Method java/net/Socket.shutdownInput:()V
      34: goto          38
      37: astore_2
      38: goto          42
      41: astore_2
      42: aload_1
      43: invokevirtual #27                 // Method java/net/Socket.close:()V
      46: goto          56
      49: astore_3
      50: aload_1
      51: invokevirtual #27                 // Method java/net/Socket.close:()V
      54: aload_3
      55: athrow
      56: return
    Exception table:
       from    to  target type
          22    26    29   Class java/io/IOException
          30    34    37   Class java/io/IOException
          22    38    41   Class java/lang/UnsupportedOperationException
          18    42    49   any
          49    50    49   any

  private static void formatAddress(java.lang.StringBuilder, java.net.SocketAddress);
    Code:
       0: aload_1
       1: instanceof    #33                 // class java/net/InetSocketAddress
       4: ifeq          53
       7: aload_1
       8: checkcast     #33                 // class java/net/InetSocketAddress
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #34                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      17: ifnull        30
      20: aload_2
      21: invokevirtual #34                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      24: invokevirtual #35                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      27: goto          34
      30: aload_2
      31: invokevirtual #34                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: bipush        58
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #38                 // Method java/net/InetSocketAddress.getPort:()I
      46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: pop
      50: goto          59
      53: aload_0
      54: aload_1
      55: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: pop
      59: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field socket:Ljava/net/Socket;
       4: ifnull        61
       7: new           #40                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #2                  // Field socket:Ljava/net/Socket;
      19: invokevirtual #42                 // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      22: astore_2
      23: aload_0
      24: getfield      #2                  // Field socket:Ljava/net/Socket;
      27: invokevirtual #43                 // Method java/net/Socket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      30: astore_3
      31: aload_2
      32: ifnull        56
      35: aload_3
      36: ifnull        56
      39: aload_1
      40: aload_3
      41: invokestatic  #44                 // Method formatAddress:(Ljava/lang/StringBuilder;Ljava/net/SocketAddress;)V
      44: aload_1
      45: ldc           #45                 // String <->
      47: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: aload_2
      53: invokestatic  #44                 // Method formatAddress:(Ljava/lang/StringBuilder;Ljava/net/SocketAddress;)V
      56: aload_1
      57: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: areturn
      61: aload_0
      62: invokespecial #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      65: areturn
}
