Compiled from "RequestDefaultHeaders.java"
public class org.apache.http.client.protocol.RequestDefaultHeaders implements org.apache.http.HttpRequestInterceptor {
  private final java.util.Collection<? extends org.apache.http.Header> defaultHeaders;

  public org.apache.http.client.protocol.RequestDefaultHeaders(java.util.Collection<? extends org.apache.http.Header>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field defaultHeaders:Ljava/util/Collection;
       9: return

  public org.apache.http.client.protocol.RequestDefaultHeaders();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #3                  // Method "<init>":(Ljava/util/Collection;)V
       5: return

  public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #4                  // String HTTP request
       3: invokestatic  #5                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #6,  1            // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      13: invokeinterface #7,  1            // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      18: astore_3
      19: aload_3
      20: ldc           #8                  // String CONNECT
      22: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      25: ifeq          29
      28: return
      29: aload_1
      30: invokeinterface #10,  1           // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
      35: ldc           #11                 // String http.default-headers
      37: invokeinterface #12,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      42: checkcast     #13                 // class java/util/Collection
      45: astore        4
      47: aload         4
      49: ifnonnull     58
      52: aload_0
      53: getfield      #2                  // Field defaultHeaders:Ljava/util/Collection;
      56: astore        4
      58: aload         4
      60: ifnull        105
      63: aload         4
      65: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      70: astore        5
      72: aload         5
      74: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          105
      82: aload         5
      84: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #17                 // class org/apache/http/Header
      92: astore        6
      94: aload_1
      95: aload         6
      97: invokeinterface #18,  2           // InterfaceMethod org/apache/http/HttpRequest.addHeader:(Lorg/apache/http/Header;)V
     102: goto          72
     105: return
}
