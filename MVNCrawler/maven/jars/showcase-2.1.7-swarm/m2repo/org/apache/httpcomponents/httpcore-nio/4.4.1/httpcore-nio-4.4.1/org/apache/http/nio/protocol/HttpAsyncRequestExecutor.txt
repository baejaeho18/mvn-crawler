Compiled from "HttpAsyncRequestExecutor.java"
public class org.apache.http.nio.protocol.HttpAsyncRequestExecutor implements org.apache.http.nio.NHttpClientEventHandler {
  public static final int DEFAULT_WAIT_FOR_CONTINUE;

  public static final java.lang.String HTTP_HANDLER;

  private final int waitForContinue;

  private final org.apache.http.ExceptionLogger exceptionLogger;

  static final java.lang.String HTTP_EXCHANGE_STATE;

  public org.apache.http.nio.protocol.HttpAsyncRequestExecutor(int, org.apache.http.ExceptionLogger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: ldc           #2                  // String Wait for continue time
       8: invokestatic  #3                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      11: putfield      #4                  // Field waitForContinue:I
      14: aload_0
      15: aload_2
      16: ifnull        23
      19: aload_2
      20: goto          26
      23: getstatic     #5                  // Field org/apache/http/ExceptionLogger.NO_OP:Lorg/apache/http/ExceptionLogger;
      26: putfield      #6                  // Field exceptionLogger:Lorg/apache/http/ExceptionLogger;
      29: return

  public org.apache.http.nio.protocol.HttpAsyncRequestExecutor(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #7                  // Method "<init>":(ILorg/apache/http/ExceptionLogger;)V
       6: return

  public org.apache.http.nio.protocol.HttpAsyncRequestExecutor();
    Code:
       0: aload_0
       1: sipush        3000
       4: aconst_null
       5: invokespecial #7                  // Method "<init>":(ILorg/apache/http/ExceptionLogger;)V
       8: return

  public void connected(org.apache.http.nio.NHttpClientConnection, java.lang.Object) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: new           #8                  // class org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State
       3: dup
       4: invokespecial #9                  // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #10,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
      14: astore        4
      16: aload         4
      18: ldc           #11                 // String http.nio.http-exchange-state
      20: aload_3
      21: invokeinterface #12,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      26: aload_0
      27: aload_1
      28: invokevirtual #13                 // Method requestReady:(Lorg/apache/http/nio/NHttpClientConnection;)V
      31: return

  public void closed(org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_2
       6: aload_0
       7: aload_1
       8: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      11: astore_3
      12: aload_2
      13: ifnull        55
      16: aload_2
      17: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      20: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      23: if_acmpne     36
      26: aload_2
      27: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      30: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      33: if_acmpeq     55
      36: aload_3
      37: ifnull        55
      40: aload_3
      41: new           #19                 // class org/apache/http/ConnectionClosedException
      44: dup
      45: ldc           #20                 // String Connection closed unexpectedly
      47: invokespecial #21                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      50: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      55: aload_2
      56: ifnull        72
      59: aload_3
      60: ifnull        77
      63: aload_3
      64: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.isDone:()Z
      69: ifeq          77
      72: aload_0
      73: aload_3
      74: invokespecial #24                 // Method closeHandler:(Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;)V
      77: return

  public void exception(org.apache.http.nio.NHttpClientConnection, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method shutdownConnection:(Lorg/apache/http/nio/NHttpConnection;)V
       5: aload_0
       6: aload_1
       7: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      10: astore_3
      11: aload_3
      12: ifnull        25
      15: aload_3
      16: aload_2
      17: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      22: goto          30
      25: aload_0
      26: aload_2
      27: invokevirtual #26                 // Method log:(Ljava/lang/Exception;)V
      30: return

  public void requestReady(org.apache.http.nio.NHttpClientConnection) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_2
       6: aload_2
       7: ldc           #27                 // String Connection state
       9: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      16: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      19: if_acmpeq     32
      22: aload_2
      23: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      26: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
      29: if_acmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #30                 // String Unexpected request state %s
      39: aload_2
      40: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      43: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      46: aload_2
      47: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      50: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      53: if_acmpeq     57
      56: return
      57: aload_0
      58: aload_1
      59: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      62: astore_3
      63: aload_3
      64: ifnull        76
      67: aload_3
      68: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.isDone:()Z
      73: ifeq          77
      76: return
      77: aload_3
      78: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: ldc_w         #33                 // class org/apache/http/nio/protocol/Pipelined
      84: invokevirtual #34                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      87: ifnull        94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore        4
      97: aload_3
      98: invokeinterface #35,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.generateRequest:()Lorg/apache/http/HttpRequest;
     103: astore        5
     105: aload         5
     107: ifnonnull     111
     110: return
     111: aload         5
     113: invokeinterface #36,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
     118: invokeinterface #37,  1           // InterfaceMethod org/apache/http/RequestLine.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
     123: astore        6
     125: iload         4
     127: ifeq          169
     130: aload         6
     132: getstatic     #38                 // Field org/apache/http/HttpVersion.HTTP_1_0:Lorg/apache/http/HttpVersion;
     135: invokevirtual #39                 // Method org/apache/http/ProtocolVersion.lessEquals:(Lorg/apache/http/ProtocolVersion;)Z
     138: ifeq          169
     141: new           #40                 // class org/apache/http/ProtocolException
     144: dup
     145: new           #41                 // class java/lang/StringBuilder
     148: dup
     149: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     152: aload         6
     154: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: ldc           #44                 // String  cannot be used with request pipelining
     159: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokespecial #47                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: aload_2
     170: aload         5
     172: invokevirtual #48                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequest:(Lorg/apache/http/HttpRequest;)V
     175: aload         5
     177: instanceof    #49                 // class org/apache/http/HttpEntityEnclosingRequest
     180: ifeq          316
     183: aload         5
     185: checkcast     #49                 // class org/apache/http/HttpEntityEnclosingRequest
     188: invokeinterface #50,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.expectContinue:()Z
     193: istore        7
     195: iload         7
     197: ifeq          215
     200: iload         4
     202: ifeq          215
     205: new           #40                 // class org/apache/http/ProtocolException
     208: dup
     209: ldc           #51                 // String Expect-continue handshake cannot be used with request pipelining
     211: invokespecial #47                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;)V
     214: athrow
     215: aload_1
     216: aload         5
     218: invokeinterface #52,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.submitRequest:(Lorg/apache/http/HttpRequest;)V
     223: iload         7
     225: ifeq          262
     228: aload_1
     229: invokeinterface #53,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getSocketTimeout:()I
     234: istore        8
     236: aload_2
     237: iload         8
     239: invokevirtual #54                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setTimeout:(I)V
     242: aload_1
     243: aload_0
     244: getfield      #4                  // Field waitForContinue:I
     247: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     252: aload_2
     253: getstatic     #56                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
     256: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     259: goto          313
     262: aload         5
     264: checkcast     #49                 // class org/apache/http/HttpEntityEnclosingRequest
     267: invokeinterface #58,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.getEntity:()Lorg/apache/http/HttpEntity;
     272: astore        8
     274: aload         8
     276: ifnull        289
     279: aload_2
     280: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     283: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     286: goto          313
     289: aload_3
     290: invokeinterface #60,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.requestCompleted:()V
     295: aload_2
     296: iload         4
     298: ifeq          307
     301: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
     304: goto          310
     307: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     310: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     313: goto          348
     316: aload_1
     317: aload         5
     319: invokeinterface #52,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.submitRequest:(Lorg/apache/http/HttpRequest;)V
     324: aload_3
     325: invokeinterface #60,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.requestCompleted:()V
     330: aload_2
     331: iload         4
     333: ifeq          342
     336: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
     339: goto          345
     342: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     345: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     348: return

  public void outputReady(org.apache.http.nio.NHttpClientConnection, org.apache.http.nio.ContentEncoder) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_3
       6: aload_3
       7: ldc           #27                 // String Connection state
       9: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      16: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
      19: if_acmpeq     32
      22: aload_3
      23: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      26: getstatic     #56                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
      29: if_acmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #30                 // String Unexpected request state %s
      39: aload_3
      40: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      43: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: aload_1
      48: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      51: astore        4
      53: aload         4
      55: ldc           #61                 // String Client exchange handler
      57: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      60: aload_3
      61: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      64: getstatic     #56                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
      67: if_acmpne     77
      70: aload_1
      71: invokeinterface #62,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
      76: return
      77: aload         4
      79: aload_2
      80: aload_1
      81: invokeinterface #63,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)V
      86: aload_2
      87: invokeinterface #64,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.isCompleted:()Z
      92: ifeq          141
      95: aload         4
      97: invokeinterface #60,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.requestCompleted:()V
     102: aload         4
     104: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     107: ldc_w         #33                 // class org/apache/http/nio/protocol/Pipelined
     110: invokevirtual #34                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     113: ifnull        120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: istore        5
     123: aload_3
     124: iload         5
     126: ifeq          135
     129: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
     132: goto          138
     135: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     138: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     141: return

  public void responseReceived(org.apache.http.nio.NHttpClientConnection) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_2
       6: aload_2
       7: ldc           #27                 // String Connection state
       9: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      16: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #30                 // String Unexpected request state %s
      29: aload_2
      30: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      33: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      36: aload_2
      37: invokevirtual #65                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequest:()Lorg/apache/http/HttpRequest;
      40: astore_3
      41: aload_3
      42: ifnonnull     55
      45: new           #66                 // class org/apache/http/HttpException
      48: dup
      49: ldc           #67                 // String Out of sequence response
      51: invokespecial #68                 // Method org/apache/http/HttpException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_1
      57: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      60: astore        4
      62: aload         4
      64: ldc           #61                 // String Client exchange handler
      66: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      69: aload_1
      70: invokeinterface #69,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getHttpResponse:()Lorg/apache/http/HttpResponse;
      75: astore        5
      77: aload         5
      79: invokeinterface #70,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      84: invokeinterface #71,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      89: istore        6
      91: iload         6
      93: sipush        200
      96: if_icmpge     177
      99: iload         6
     101: bipush        100
     103: if_icmpeq     139
     106: new           #40                 // class org/apache/http/ProtocolException
     109: dup
     110: new           #41                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #72                 // String Unexpected response:
     119: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         5
     124: invokeinterface #70,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
     129: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #47                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: aload_2
     140: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
     143: getstatic     #56                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
     146: if_acmpne     176
     149: aload_2
     150: invokevirtual #73                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getTimeout:()I
     153: istore        7
     155: aload_1
     156: iload         7
     158: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     163: aload_1
     164: invokeinterface #74,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
     169: aload_2
     170: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     173: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     176: return
     177: aload_2
     178: aload         5
     180: invokevirtual #75                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponse:(Lorg/apache/http/HttpResponse;)V
     183: aload_2
     184: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
     187: getstatic     #56                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
     190: if_acmpne     223
     193: aload_2
     194: invokevirtual #73                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getTimeout:()I
     197: istore        7
     199: aload_1
     200: iload         7
     202: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     207: aload_1
     208: invokeinterface #76,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.resetOutput:()V
     213: aload_2
     214: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     217: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     220: goto          256
     223: aload_2
     224: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
     227: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     230: if_acmpne     256
     233: aload_1
     234: invokeinterface #76,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.resetOutput:()V
     239: aload_1
     240: invokeinterface #62,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.suspendOutput:()V
     245: aload_2
     246: getstatic     #29                 // Field org/apache/http/nio/protocol/MessageState.COMPLETED:Lorg/apache/http/nio/protocol/MessageState;
     249: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
     252: aload_2
     253: invokevirtual #77                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.invalidate:()V
     256: aload         4
     258: aload         5
     260: invokeinterface #78,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.responseReceived:(Lorg/apache/http/HttpResponse;)V
     265: aload_2
     266: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
     269: invokevirtual #79                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponseState:(Lorg/apache/http/nio/protocol/MessageState;)V
     272: aload_0
     273: aload_3
     274: aload         5
     276: invokespecial #80                 // Method canResponseHaveBody:(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;)Z
     279: ifne          304
     282: aload         5
     284: aconst_null
     285: invokeinterface #81,  2           // InterfaceMethod org/apache/http/HttpResponse.setEntity:(Lorg/apache/http/HttpEntity;)V
     290: aload_1
     291: invokeinterface #82,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.resetInput:()V
     296: aload_0
     297: aload_1
     298: aload_2
     299: aload         4
     301: invokespecial #83                 // Method processResponse:(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;)V
     304: return

  public void inputReady(org.apache.http.nio.NHttpClientConnection, org.apache.http.nio.ContentDecoder) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_3
       6: aload_3
       7: ldc           #27                 // String Connection state
       9: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      16: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #30                 // String Unexpected request state %s
      29: aload_3
      30: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getResponseState:()Lorg/apache/http/nio/protocol/MessageState;
      33: invokestatic  #31                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;Ljava/lang/Object;)V
      36: aload_0
      37: aload_1
      38: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      41: astore        4
      43: aload         4
      45: ldc           #61                 // String Client exchange handler
      47: invokestatic  #28                 // Method org/apache/http/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      50: aload         4
      52: aload_2
      53: aload_1
      54: invokeinterface #84,  3           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.consumeContent:(Lorg/apache/http/nio/ContentDecoder;Lorg/apache/http/nio/IOControl;)V
      59: aload_2
      60: invokeinterface #85,  1           // InterfaceMethod org/apache/http/nio/ContentDecoder.isCompleted:()Z
      65: ifeq          76
      68: aload_0
      69: aload_1
      70: aload_3
      71: aload         4
      73: invokespecial #83                 // Method processResponse:(Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;)V
      76: return

  public void endOfInput(org.apache.http.nio.NHttpClientConnection) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_2
       6: aload_2
       7: ifnull        68
      10: aload_2
      11: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      14: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      17: invokevirtual #86                 // Method org/apache/http/nio/protocol/MessageState.compareTo:(Ljava/lang/Enum;)I
      20: ifeq          27
      23: aload_2
      24: invokevirtual #77                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.invalidate:()V
      27: aload_0
      28: aload_1
      29: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      32: astore_3
      33: aload_3
      34: ifnull        68
      37: aload_2
      38: invokevirtual #87                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.isValid:()Z
      41: ifeq          53
      44: aload_3
      45: invokeinterface #88,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.inputTerminated:()V
      50: goto          68
      53: aload_3
      54: new           #19                 // class org/apache/http/ConnectionClosedException
      57: dup
      58: ldc           #89                 // String Connection closed
      60: invokespecial #21                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      63: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      68: aload_1
      69: invokeinterface #53,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getSocketTimeout:()I
      74: ifgt          86
      77: aload_1
      78: sipush        1000
      81: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
      86: aload_1
      87: invokeinterface #90,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      92: return

  public void timeout(org.apache.http.nio.NHttpClientConnection) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method getState:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor$State;
       5: astore_2
       6: aload_2
       7: ifnull        84
      10: aload_2
      11: invokevirtual #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getRequestState:()Lorg/apache/http/nio/protocol/MessageState;
      14: getstatic     #56                 // Field org/apache/http/nio/protocol/MessageState.ACK_EXPECTED:Lorg/apache/http/nio/protocol/MessageState;
      17: if_acmpne     51
      20: aload_2
      21: invokevirtual #73                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.getTimeout:()I
      24: istore_3
      25: aload_1
      26: iload_3
      27: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
      32: aload_1
      33: invokeinterface #74,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
      38: aload_2
      39: getstatic     #59                 // Field org/apache/http/nio/protocol/MessageState.BODY_STREAM:Lorg/apache/http/nio/protocol/MessageState;
      42: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
      45: aload_2
      46: iconst_0
      47: invokevirtual #54                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setTimeout:(I)V
      50: return
      51: aload_2
      52: invokevirtual #77                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.invalidate:()V
      55: aload_0
      56: aload_1
      57: invokespecial #15                 // Method getHandler:(Lorg/apache/http/nio/NHttpConnection;)Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;
      60: astore_3
      61: aload_3
      62: ifnull        84
      65: aload_3
      66: new           #91                 // class java/net/SocketTimeoutException
      69: dup
      70: invokespecial #92                 // Method java/net/SocketTimeoutException."<init>":()V
      73: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      78: aload_3
      79: invokeinterface #93,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.close:()V
      84: aload_1
      85: invokeinterface #94,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getStatus:()I
      90: ifne          121
      93: aload_1
      94: invokeinterface #90,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      99: aload_1
     100: invokeinterface #94,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getStatus:()I
     105: iconst_1
     106: if_icmpne     127
     109: aload_1
     110: sipush        250
     113: invokeinterface #55,  2           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.setSocketTimeout:(I)V
     118: goto          127
     121: aload_1
     122: invokeinterface #95,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.shutdown:()V
     127: return

  protected void log(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #6                  // Field exceptionLogger:Lorg/apache/http/ExceptionLogger;
       4: aload_1
       5: invokeinterface #96,  2           // InterfaceMethod org/apache/http/ExceptionLogger.log:(Ljava/lang/Exception;)V
      10: return

  private org.apache.http.nio.protocol.HttpAsyncRequestExecutor$State getState(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_1
       1: invokeinterface #97,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
       6: ldc           #11                 // String http.nio.http-exchange-state
       8: invokeinterface #98,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #8                  // class org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State
      16: areturn

  private org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler getHandler(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_1
       1: invokeinterface #97,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
       6: ldc           #99                 // String http.nio.exchange-handler
       8: invokeinterface #98,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #100                // class org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler
      16: areturn

  private void shutdownConnection(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_1
       1: invokeinterface #101,  1          // InterfaceMethod org/apache/http/nio/NHttpConnection.shutdown:()V
       6: goto          15
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #26                 // Method log:(Ljava/lang/Exception;)V
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  private void closeHandler(org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokeinterface #93,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.close:()V
      10: goto          19
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #26                 // Method log:(Ljava/lang/Exception;)V
      19: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  private void processResponse(org.apache.http.nio.NHttpClientConnection, org.apache.http.nio.protocol.HttpAsyncRequestExecutor$State, org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_2
       1: invokevirtual #87                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.isValid:()Z
       4: ifne          13
       7: aload_1
       8: invokeinterface #90,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.close:()V
      13: aload_3
      14: invokeinterface #103,  1          // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.responseCompleted:()V
      19: aload_3
      20: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: ldc_w         #33                 // class org/apache/http/nio/protocol/Pipelined
      26: invokevirtual #34                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      29: ifnull        36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore        4
      39: iload         4
      41: ifne          56
      44: aload_2
      45: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      48: invokevirtual #57                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequestState:(Lorg/apache/http/nio/protocol/MessageState;)V
      51: aload_2
      52: aconst_null
      53: invokevirtual #48                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setRequest:(Lorg/apache/http/HttpRequest;)V
      56: aload_2
      57: getstatic     #17                 // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      60: invokevirtual #79                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponseState:(Lorg/apache/http/nio/protocol/MessageState;)V
      63: aload_2
      64: aconst_null
      65: invokevirtual #75                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor$State.setResponse:(Lorg/apache/http/HttpResponse;)V
      68: aload_3
      69: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.isDone:()Z
      74: ifne          92
      77: aload_1
      78: invokeinterface #104,  1          // InterfaceMethod org/apache/http/nio/NHttpClientConnection.isOpen:()Z
      83: ifeq          92
      86: aload_1
      87: invokeinterface #74,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
      92: return

  private boolean canResponseHaveBody(org.apache.http.HttpRequest, org.apache.http.HttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
       6: invokeinterface #105,  1          // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      11: astore_3
      12: aload_2
      13: invokeinterface #70,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      18: invokeinterface #71,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      23: istore        4
      25: aload_3
      26: ldc           #106                // String HEAD
      28: invokevirtual #107                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      31: ifeq          36
      34: iconst_0
      35: ireturn
      36: aload_3
      37: ldc           #108                // String CONNECT
      39: invokevirtual #107                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      42: ifeq          55
      45: iload         4
      47: sipush        300
      50: if_icmpge     55
      53: iconst_0
      54: ireturn
      55: iload         4
      57: sipush        200
      60: if_icmplt     91
      63: iload         4
      65: sipush        204
      68: if_icmpeq     91
      71: iload         4
      73: sipush        304
      76: if_icmpeq     91
      79: iload         4
      81: sipush        205
      84: if_icmpeq     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ireturn
}
