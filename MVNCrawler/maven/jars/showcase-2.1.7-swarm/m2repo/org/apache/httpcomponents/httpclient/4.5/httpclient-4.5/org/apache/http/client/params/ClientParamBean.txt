Compiled from "ClientParamBean.java"
public class org.apache.http.client.params.ClientParamBean extends org.apache.http.params.HttpAbstractParamBean {
  public org.apache.http.client.params.ClientParamBean(org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/http/params/HttpAbstractParamBean."<init>":(Lorg/apache/http/params/HttpParams;)V
       5: return

  public void setConnectionManagerFactoryClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #3                  // String http.connection-manager.factory-class-name
       6: aload_1
       7: invokeinterface #4,  3            // InterfaceMethod org/apache/http/params/HttpParams.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setHandleRedirects(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #5                  // String http.protocol.handle-redirects
       6: iload_1
       7: invokeinterface #6,  3            // InterfaceMethod org/apache/http/params/HttpParams.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setRejectRelativeRedirect(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #7                  // String http.protocol.reject-relative-redirect
       6: iload_1
       7: invokeinterface #6,  3            // InterfaceMethod org/apache/http/params/HttpParams.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setMaxRedirects(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #8                  // String http.protocol.max-redirects
       6: iload_1
       7: invokeinterface #9,  3            // InterfaceMethod org/apache/http/params/HttpParams.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setAllowCircularRedirects(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #10                 // String http.protocol.allow-circular-redirects
       6: iload_1
       7: invokeinterface #6,  3            // InterfaceMethod org/apache/http/params/HttpParams.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setHandleAuthentication(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #11                 // String http.protocol.handle-authentication
       6: iload_1
       7: invokeinterface #6,  3            // InterfaceMethod org/apache/http/params/HttpParams.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setCookiePolicy(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #12                 // String http.protocol.cookie-policy
       6: aload_1
       7: invokeinterface #4,  3            // InterfaceMethod org/apache/http/params/HttpParams.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setVirtualHost(org.apache.http.HttpHost);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #13                 // String http.virtual-host
       6: aload_1
       7: invokeinterface #4,  3            // InterfaceMethod org/apache/http/params/HttpParams.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setDefaultHeaders(java.util.Collection<org.apache.http.Header>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #14                 // String http.default-headers
       6: aload_1
       7: invokeinterface #4,  3            // InterfaceMethod org/apache/http/params/HttpParams.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setDefaultHost(org.apache.http.HttpHost);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #15                 // String http.default-host
       6: aload_1
       7: invokeinterface #4,  3            // InterfaceMethod org/apache/http/params/HttpParams.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return

  public void setConnectionManagerTimeout(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field params:Lorg/apache/http/params/HttpParams;
       4: ldc           #16                 // String http.conn-manager.timeout
       6: lload_1
       7: invokeinterface #17,  4           // InterfaceMethod org/apache/http/params/HttpParams.setLongParameter:(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;
      12: pop
      13: return
}
