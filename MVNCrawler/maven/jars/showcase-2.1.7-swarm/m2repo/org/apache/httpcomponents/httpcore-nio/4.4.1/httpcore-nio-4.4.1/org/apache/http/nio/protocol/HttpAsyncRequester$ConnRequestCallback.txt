Compiled from "HttpAsyncRequester.java"
class org.apache.http.nio.protocol.HttpAsyncRequester$ConnRequestCallback<T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> implements org.apache.http.concurrent.FutureCallback<E> {
  private final org.apache.http.concurrent.BasicFuture<T> requestFuture;

  private final org.apache.http.nio.protocol.HttpAsyncRequestProducer requestProducer;

  private final org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T> responseConsumer;

  private final org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E> connPool;

  private final org.apache.http.protocol.HttpContext context;

  final org.apache.http.nio.protocol.HttpAsyncRequester this$0;

  org.apache.http.nio.protocol.HttpAsyncRequester$ConnRequestCallback(org.apache.http.concurrent.BasicFuture<T>, org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field connPool:Lorg/apache/http/pool/ConnPool;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field context:Lorg/apache/http/protocol/HttpContext;
      37: return

  public void completed(E);
    Code:
       0: aload_0
       1: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
       4: invokevirtual #8                  // Method org/apache/http/concurrent/BasicFuture.isDone:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #6                  // Field connPool:Lorg/apache/http/pool/ConnPool;
      14: aload_1
      15: iconst_1
      16: invokeinterface #9,  3            // InterfaceMethod org/apache/http/pool/ConnPool.release:(Ljava/lang/Object;Z)V
      21: return
      22: aload_1
      23: invokevirtual #10                 // Method org/apache/http/pool/PoolEntry.getConnection:()Ljava/lang/Object;
      26: checkcast     #11                 // class org/apache/http/nio/NHttpClientConnection
      29: astore_2
      30: new           #12                 // class org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler
      33: dup
      34: aload_0
      35: getfield      #4                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
      38: aload_0
      39: getfield      #5                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      42: new           #13                 // class org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback
      45: dup
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      50: aload_0
      51: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      54: aload_1
      55: aload_0
      56: getfield      #6                  // Field connPool:Lorg/apache/http/pool/ConnPool;
      59: invokespecial #14                 // Method org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/pool/PoolEntry;Lorg/apache/http/pool/ConnPool;)V
      62: aload_0
      63: getfield      #7                  // Field context:Lorg/apache/http/protocol/HttpContext;
      66: aload_2
      67: aload_0
      68: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      71: invokestatic  #15                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$000:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;)Lorg/apache/http/protocol/HttpProcessor;
      74: aload_0
      75: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      78: invokestatic  #16                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$100:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;)Lorg/apache/http/ConnectionReuseStrategy;
      81: invokespecial #17                 // Method org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      84: astore_3
      85: aload_0
      86: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      89: aload_3
      90: aload_2
      91: invokestatic  #18                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$200:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;Lorg/apache/http/nio/NHttpClientConnection;)V
      94: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.failed:(Ljava/lang/Exception;)V
      10: aload_0
      11: invokevirtual #20                 // Method releaseResources:()V
      14: goto          24
      17: astore_2
      18: aload_0
      19: invokevirtual #20                 // Method releaseResources:()V
      22: aload_2
      23: athrow
      24: aload_0
      25: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      28: aload_1
      29: invokevirtual #21                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      32: pop
      33: goto          48
      36: astore_3
      37: aload_0
      38: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      41: aload_1
      42: invokevirtual #21                 // Method org/apache/http/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      45: pop
      46: aload_3
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0    10    17   any
          17    18    17   any
           0    24    36   any
          36    37    36   any

  public void cancelled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseConsumer.cancel:()Z
       9: pop
      10: aload_0
      11: invokevirtual #20                 // Method releaseResources:()V
      14: goto          24
      17: astore_1
      18: aload_0
      19: invokevirtual #20                 // Method releaseResources:()V
      22: aload_1
      23: athrow
      24: aload_0
      25: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      28: iconst_1
      29: invokevirtual #23                 // Method org/apache/http/concurrent/BasicFuture.cancel:(Z)Z
      32: pop
      33: goto          48
      36: astore_2
      37: aload_0
      38: getfield      #3                  // Field requestFuture:Lorg/apache/http/concurrent/BasicFuture;
      41: iconst_1
      42: invokevirtual #23                 // Method org/apache/http/concurrent/BasicFuture.cancel:(Z)Z
      45: pop
      46: aload_2
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0    10    17   any
          17    18    17   any
           0    24    36   any
          36    37    36   any

  public void releaseResources();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
       4: aload_0
       5: getfield      #4                  // Field requestProducer:Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;
       8: invokestatic  #24                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$300:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Ljava/io/Closeable;)V
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncRequester;
      15: aload_0
      16: getfield      #5                  // Field responseConsumer:Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;
      19: invokestatic  #24                 // Method org/apache/http/nio/protocol/HttpAsyncRequester.access$300:(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Ljava/io/Closeable;)V
      22: return

  public void completed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/apache/http/pool/PoolEntry
       5: invokevirtual #26                 // Method completed:(Lorg/apache/http/pool/PoolEntry;)V
       8: return
}
