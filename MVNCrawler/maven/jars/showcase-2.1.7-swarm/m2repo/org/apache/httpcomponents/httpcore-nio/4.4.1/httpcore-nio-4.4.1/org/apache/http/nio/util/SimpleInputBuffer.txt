Compiled from "SimpleInputBuffer.java"
public class org.apache.http.nio.util.SimpleInputBuffer extends org.apache.http.nio.util.ExpandableBuffer implements org.apache.http.nio.util.ContentInputBuffer {
  private boolean endOfStream;

  public org.apache.http.nio.util.SimpleInputBuffer(int, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field endOfStream:Z
      11: return

  public org.apache.http.nio.util.SimpleInputBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #3                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       5: invokespecial #4                  // Method "<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       8: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field endOfStream:Z
       5: aload_0
       6: invokespecial #5                  // Method org/apache/http/nio/util/ExpandableBuffer.clear:()V
       9: return

  public int consumeContent(org.apache.http.nio.ContentDecoder) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method setInputMode:()V
       4: iconst_0
       5: istore_2
       6: aload_1
       7: aload_0
       8: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      11: invokeinterface #8,  2            // InterfaceMethod org/apache/http/nio/ContentDecoder.read:(Ljava/nio/ByteBuffer;)I
      16: dup
      17: istore_3
      18: iconst_m1
      19: if_icmpeq     50
      22: iload_3
      23: ifne          43
      26: aload_0
      27: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #9                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifne          50
      36: aload_0
      37: invokevirtual #10                 // Method expand:()V
      40: goto          6
      43: iload_2
      44: iload_3
      45: iadd
      46: istore_2
      47: goto          6
      50: iload_3
      51: iconst_m1
      52: if_icmpeq     64
      55: aload_1
      56: invokeinterface #11,  1           // InterfaceMethod org/apache/http/nio/ContentDecoder.isCompleted:()Z
      61: ifeq          69
      64: aload_0
      65: iconst_1
      66: putfield      #2                  // Field endOfStream:Z
      69: iload_2
      70: ireturn

  public boolean isEndOfStream();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method hasData:()Z
       4: ifne          18
       7: aload_0
       8: getfield      #2                  // Field endOfStream:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEndOfStream:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: invokevirtual #14                 // Method setOutputMode:()V
      13: aload_0
      14: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      17: invokevirtual #15                 // Method java/nio/ByteBuffer.get:()B
      20: sipush        255
      23: iand
      24: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEndOfStream:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: invokevirtual #14                 // Method setOutputMode:()V
      19: iload_3
      20: istore        4
      22: iload         4
      24: aload_0
      25: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      31: if_icmple     43
      34: aload_0
      35: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      38: invokevirtual #16                 // Method java/nio/ByteBuffer.remaining:()I
      41: istore        4
      43: aload_0
      44: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      47: aload_1
      48: iload_2
      49: iload         4
      51: invokevirtual #17                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      54: pop
      55: iload         4
      57: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isEndOfStream:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: aload_1
      17: iconst_0
      18: aload_1
      19: arraylength
      20: invokevirtual #18                 // Method read:([BII)I
      23: ireturn

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field endOfStream:Z
       5: return
}
