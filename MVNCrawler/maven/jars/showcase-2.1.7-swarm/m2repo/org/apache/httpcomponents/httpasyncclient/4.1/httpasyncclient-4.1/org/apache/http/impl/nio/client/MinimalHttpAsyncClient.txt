Compiled from "MinimalHttpAsyncClient.java"
class org.apache.http.impl.nio.client.MinimalHttpAsyncClient extends org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase {
  private final org.apache.commons.logging.Log log;

  private final org.apache.http.nio.conn.NHttpClientConnectionManager connmgr;

  private final org.apache.http.protocol.HttpProcessor httpProcessor;

  private final org.apache.http.ConnectionReuseStrategy connReuseStrategy;

  private final org.apache.http.conn.ConnectionKeepAliveStrategy keepaliveStrategy;

  public org.apache.http.impl.nio.client.MinimalHttpAsyncClient(org.apache.http.nio.conn.NHttpClientConnectionManager, java.util.concurrent.ThreadFactory, org.apache.http.nio.NHttpClientEventHandler, org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/http/impl/nio/client/CloseableHttpAsyncClientBase."<init>":(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Ljava/util/concurrent/ThreadFactory;Lorg/apache/http/nio/NHttpClientEventHandler;)V
       7: aload_0
       8: aload_0
       9: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      15: putfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field connmgr:Lorg/apache/http/nio/conn/NHttpClientConnectionManager;
      23: aload_0
      24: aload         4
      26: putfield      #6                  // Field httpProcessor:Lorg/apache/http/protocol/HttpProcessor;
      29: aload_0
      30: aload         5
      32: putfield      #7                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      35: aload_0
      36: aload         6
      38: putfield      #8                  // Field keepaliveStrategy:Lorg/apache/http/conn/ConnectionKeepAliveStrategy;
      41: return

  public org.apache.http.impl.nio.client.MinimalHttpAsyncClient(org.apache.http.nio.conn.NHttpClientConnectionManager, org.apache.http.protocol.HttpProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       5: new           #10                 // class org/apache/http/nio/protocol/HttpAsyncRequestExecutor
       8: dup
       9: invokespecial #11                 // Method org/apache/http/nio/protocol/HttpAsyncRequestExecutor."<init>":()V
      12: aload_2
      13: getstatic     #12                 // Field org/apache/http/impl/DefaultConnectionReuseStrategy.INSTANCE:Lorg/apache/http/impl/DefaultConnectionReuseStrategy;
      16: getstatic     #13                 // Field org/apache/http/impl/client/DefaultConnectionKeepAliveStrategy.INSTANCE:Lorg/apache/http/impl/client/DefaultConnectionKeepAliveStrategy;
      19: invokespecial #14                 // Method "<init>":(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Ljava/util/concurrent/ThreadFactory;Lorg/apache/http/nio/NHttpClientEventHandler;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V
      22: return

  public <T> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<T>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method ensureRunning:()V
       4: new           #16                 // class org/apache/http/concurrent/BasicFuture
       7: dup
       8: aload         4
      10: invokespecial #17                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      13: astore        5
      15: aload_3
      16: ifnull        23
      19: aload_3
      20: goto          30
      23: new           #18                 // class org/apache/http/protocol/BasicHttpContext
      26: dup
      27: invokespecial #19                 // Method org/apache/http/protocol/BasicHttpContext."<init>":()V
      30: invokestatic  #20                 // Method org/apache/http/client/protocol/HttpClientContext.adapt:(Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/client/protocol/HttpClientContext;
      33: astore        6
      35: new           #21                 // class org/apache/http/impl/nio/client/MinimalClientExchangeHandlerImpl
      38: dup
      39: aload_0
      40: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      43: aload_1
      44: aload_2
      45: aload         6
      47: aload         5
      49: aload_0
      50: getfield      #5                  // Field connmgr:Lorg/apache/http/nio/conn/NHttpClientConnectionManager;
      53: aload_0
      54: getfield      #6                  // Field httpProcessor:Lorg/apache/http/protocol/HttpProcessor;
      57: aload_0
      58: getfield      #7                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      61: aload_0
      62: getfield      #8                  // Field keepaliveStrategy:Lorg/apache/http/conn/ConnectionKeepAliveStrategy;
      65: invokespecial #22                 // Method org/apache/http/impl/nio/client/MinimalClientExchangeHandlerImpl."<init>":(Lorg/apache/commons/logging/Log;Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/client/protocol/HttpClientContext;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V
      68: astore        7
      70: aload         7
      72: invokevirtual #23                 // Method org/apache/http/impl/nio/client/MinimalClientExchangeHandlerImpl.start:()V
      75: goto          87
      78: astore        8
      80: aload         7
      82: aload         8
      84: invokevirtual #25                 // Method org/apache/http/impl/nio/client/MinimalClientExchangeHandlerImpl.failed:(Ljava/lang/Exception;)V
      87: aload         5
      89: areturn
    Exception table:
       from    to  target type
          70    75    78   Class java/lang/Exception

  public <T> java.util.concurrent.Future<java.util.List<T>> execute(org.apache.http.HttpHost, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncRequestProducer>, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>>, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method ensureRunning:()V
       4: new           #16                 // class org/apache/http/concurrent/BasicFuture
       7: dup
       8: aload         5
      10: invokespecial #17                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      13: astore        6
      15: aload         4
      17: ifnull        25
      20: aload         4
      22: goto          32
      25: new           #18                 // class org/apache/http/protocol/BasicHttpContext
      28: dup
      29: invokespecial #19                 // Method org/apache/http/protocol/BasicHttpContext."<init>":()V
      32: invokestatic  #20                 // Method org/apache/http/client/protocol/HttpClientContext.adapt:(Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/client/protocol/HttpClientContext;
      35: astore        7
      37: new           #26                 // class org/apache/http/impl/nio/client/PipeliningClientExchangeHandlerImpl
      40: dup
      41: aload_0
      42: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      45: aload_1
      46: aload_2
      47: aload_3
      48: aload         7
      50: aload         6
      52: aload_0
      53: getfield      #5                  // Field connmgr:Lorg/apache/http/nio/conn/NHttpClientConnectionManager;
      56: aload_0
      57: getfield      #6                  // Field httpProcessor:Lorg/apache/http/protocol/HttpProcessor;
      60: aload_0
      61: getfield      #7                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      64: aload_0
      65: getfield      #8                  // Field keepaliveStrategy:Lorg/apache/http/conn/ConnectionKeepAliveStrategy;
      68: invokespecial #27                 // Method org/apache/http/impl/nio/client/PipeliningClientExchangeHandlerImpl."<init>":(Lorg/apache/commons/logging/Log;Lorg/apache/http/HttpHost;Ljava/util/List;Ljava/util/List;Lorg/apache/http/client/protocol/HttpClientContext;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/nio/conn/NHttpClientConnectionManager;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V
      71: astore        8
      73: aload         8
      75: invokevirtual #28                 // Method org/apache/http/impl/nio/client/PipeliningClientExchangeHandlerImpl.start:()V
      78: goto          90
      81: astore        9
      83: aload         8
      85: aload         9
      87: invokevirtual #29                 // Method org/apache/http/impl/nio/client/PipeliningClientExchangeHandlerImpl.failed:(Ljava/lang/Exception;)V
      90: aload         6
      92: areturn
    Exception table:
       from    to  target type
          73    78    81   Class java/lang/Exception
}
