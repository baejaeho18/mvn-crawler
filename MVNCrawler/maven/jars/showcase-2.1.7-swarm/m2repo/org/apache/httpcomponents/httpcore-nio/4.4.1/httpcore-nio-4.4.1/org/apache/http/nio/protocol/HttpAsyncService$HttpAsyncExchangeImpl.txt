Compiled from "HttpAsyncService.java"
class org.apache.http.nio.protocol.HttpAsyncService$HttpAsyncExchangeImpl implements org.apache.http.nio.protocol.HttpAsyncExchange {
  private final java.util.concurrent.atomic.AtomicBoolean completed;

  private final org.apache.http.HttpRequest request;

  private final org.apache.http.HttpResponse response;

  private final org.apache.http.nio.protocol.HttpAsyncService$State state;

  private final org.apache.http.nio.NHttpServerConnection conn;

  private final org.apache.http.protocol.HttpContext context;

  final org.apache.http.nio.protocol.HttpAsyncService this$0;

  public org.apache.http.nio.protocol.HttpAsyncService$HttpAsyncExchangeImpl(org.apache.http.nio.protocol.HttpAsyncService, org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.nio.protocol.HttpAsyncService$State, org.apache.http.nio.NHttpServerConnection, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      17: putfield      #5                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field request:Lorg/apache/http/HttpRequest;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field response:Lorg/apache/http/HttpResponse;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      36: aload_0
      37: aload         5
      39: putfield      #9                  // Field conn:Lorg/apache/http/nio/NHttpServerConnection;
      42: aload_0
      43: aload         6
      45: putfield      #10                 // Field context:Lorg/apache/http/protocol/HttpContext;
      48: return

  public org.apache.http.HttpRequest getRequest();
    Code:
       0: aload_0
       1: getfield      #6                  // Field request:Lorg/apache/http/HttpRequest;
       4: areturn

  public org.apache.http.HttpResponse getResponse();
    Code:
       0: aload_0
       1: getfield      #7                  // Field response:Lorg/apache/http/HttpResponse;
       4: areturn

  public void setCallback(org.apache.http.concurrent.Cancellable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          25
      10: aload_0
      11: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncService;
      14: aload_1
      15: aload_0
      16: getfield      #10                 // Field context:Lorg/apache/http/protocol/HttpContext;
      19: invokevirtual #12                 // Method org/apache/http/nio/protocol/HttpAsyncService.handleAlreadySubmittedResponse:(Lorg/apache/http/concurrent/Cancellable;Lorg/apache/http/protocol/HttpContext;)V
      22: goto          57
      25: aload_0
      26: getfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      29: invokevirtual #13                 // Method org/apache/http/nio/protocol/HttpAsyncService$State.isTerminated:()Z
      32: ifeq          49
      35: aload_1
      36: ifnull        49
      39: aload_1
      40: invokeinterface #14,  1           // InterfaceMethod org/apache/http/concurrent/Cancellable.cancel:()Z
      45: pop
      46: goto          57
      49: aload_0
      50: getfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      53: aload_1
      54: invokevirtual #15                 // Method org/apache/http/nio/protocol/HttpAsyncService$State.setCancellable:(Lorg/apache/http/concurrent/Cancellable;)V
      57: return

  public void submitResponse(org.apache.http.nio.protocol.HttpAsyncResponseProducer);
    Code:
       0: aload_1
       1: ldc           #16                 // String Response producer
       3: invokestatic  #17                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_1
      12: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
      15: ifeq          33
      18: aload_0
      19: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncService;
      22: aload_1
      23: aload_0
      24: getfield      #10                 // Field context:Lorg/apache/http/protocol/HttpContext;
      27: invokevirtual #19                 // Method org/apache/http/nio/protocol/HttpAsyncService.handleAlreadySubmittedResponse:(Lorg/apache/http/nio/protocol/HttpAsyncResponseProducer;Lorg/apache/http/protocol/HttpContext;)V
      30: goto          136
      33: aload_0
      34: getfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      37: invokevirtual #13                 // Method org/apache/http/nio/protocol/HttpAsyncService$State.isTerminated:()Z
      40: ifne          118
      43: aload_1
      44: invokeinterface #20,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseProducer.generateResponse:()Lorg/apache/http/HttpResponse;
      49: astore_2
      50: new           #21                 // class org/apache/http/nio/protocol/HttpAsyncService$Outgoing
      53: dup
      54: aload_0
      55: getfield      #6                  // Field request:Lorg/apache/http/HttpRequest;
      58: aload_2
      59: aload_1
      60: aload_0
      61: getfield      #10                 // Field context:Lorg/apache/http/protocol/HttpContext;
      64: invokespecial #22                 // Method org/apache/http/nio/protocol/HttpAsyncService$Outgoing."<init>":(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/nio/protocol/HttpAsyncResponseProducer;Lorg/apache/http/protocol/HttpContext;)V
      67: astore_3
      68: aload_0
      69: getfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      72: dup
      73: astore        4
      75: monitorenter
      76: aload_0
      77: getfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      80: aload_3
      81: invokevirtual #23                 // Method org/apache/http/nio/protocol/HttpAsyncService$State.setOutgoing:(Lorg/apache/http/nio/protocol/HttpAsyncService$Outgoing;)V
      84: aload_0
      85: getfield      #8                  // Field state:Lorg/apache/http/nio/protocol/HttpAsyncService$State;
      88: aconst_null
      89: invokevirtual #15                 // Method org/apache/http/nio/protocol/HttpAsyncService$State.setCancellable:(Lorg/apache/http/concurrent/Cancellable;)V
      92: aload_0
      93: getfield      #9                  // Field conn:Lorg/apache/http/nio/NHttpServerConnection;
      96: invokeinterface #24,  1           // InterfaceMethod org/apache/http/nio/NHttpServerConnection.requestOutput:()V
     101: aload         4
     103: monitorexit
     104: goto          115
     107: astore        5
     109: aload         4
     111: monitorexit
     112: aload         5
     114: athrow
     115: goto          136
     118: aload_1
     119: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncResponseProducer.close:()V
     124: goto          136
     127: astore_2
     128: aload_0
     129: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/HttpAsyncService;
     132: aload_2
     133: invokevirtual #27                 // Method org/apache/http/nio/protocol/HttpAsyncService.log:(Ljava/lang/Exception;)V
     136: return
    Exception table:
       from    to  target type
          76   104   107   any
         107   112   107   any
         118   124   127   Class java/io/IOException

  public void submitResponse();
    Code:
       0: aload_0
       1: new           #28                 // class org/apache/http/nio/protocol/BasicAsyncResponseProducer
       4: dup
       5: aload_0
       6: getfield      #7                  // Field response:Lorg/apache/http/HttpResponse;
       9: invokespecial #29                 // Method org/apache/http/nio/protocol/BasicAsyncResponseProducer."<init>":(Lorg/apache/http/HttpResponse;)V
      12: invokevirtual #30                 // Method submitResponse:(Lorg/apache/http/nio/protocol/HttpAsyncResponseProducer;)V
      15: return

  public boolean isCompleted();
    Code:
       0: aload_0
       1: getfield      #5                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setTimeout(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field conn:Lorg/apache/http/nio/NHttpServerConnection;
       4: iload_1
       5: invokeinterface #31,  2           // InterfaceMethod org/apache/http/nio/NHttpServerConnection.setSocketTimeout:(I)V
      10: return

  public int getTimeout();
    Code:
       0: aload_0
       1: getfield      #9                  // Field conn:Lorg/apache/http/nio/NHttpServerConnection;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/NHttpServerConnection.getSocketTimeout:()I
       9: ireturn
}
