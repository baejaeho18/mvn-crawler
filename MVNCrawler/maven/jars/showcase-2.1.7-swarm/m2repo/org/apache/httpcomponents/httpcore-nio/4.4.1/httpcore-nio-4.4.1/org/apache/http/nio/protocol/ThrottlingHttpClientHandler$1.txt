Compiled from "ThrottlingHttpClientHandler.java"
class org.apache.http.nio.protocol.ThrottlingHttpClientHandler$1 implements java.lang.Runnable {
  final org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState val$connState;

  final org.apache.http.HttpEntityEnclosingRequest val$request;

  final org.apache.http.nio.NHttpClientConnection val$conn;

  final org.apache.http.nio.protocol.ThrottlingHttpClientHandler this$0;

  org.apache.http.nio.protocol.ThrottlingHttpClientHandler$1(org.apache.http.nio.protocol.ThrottlingHttpClientHandler, org.apache.http.nio.protocol.ThrottlingHttpClientHandler$ClientConnState, org.apache.http.HttpEntityEnclosingRequest, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$request:Lorg/apache/http/HttpEntityEnclosingRequest;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      11: invokevirtual #6                  // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.getOutputState:()I
      14: istore_2
      15: aload_0
      16: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      19: invokevirtual #7                  // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.isWorkerRunning:()Z
      22: ifne          28
      25: goto          46
      28: iload_2
      29: iconst_m1
      30: if_icmpne     36
      33: aload_1
      34: monitorexit
      35: return
      36: aload_0
      37: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      40: invokevirtual #8                  // Method java/lang/Object.wait:()V
      43: goto          7
      46: goto          60
      49: astore_2
      50: aload_0
      51: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      54: invokevirtual #10                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.shutdown:()V
      57: aload_1
      58: monitorexit
      59: return
      60: aload_0
      61: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      64: iconst_1
      65: invokevirtual #11                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.setWorkerRunning:(Z)V
      68: aload_1
      69: monitorexit
      70: goto          78
      73: astore_3
      74: aload_1
      75: monitorexit
      76: aload_3
      77: athrow
      78: new           #12                 // class org/apache/http/nio/entity/ContentOutputStream
      81: dup
      82: aload_0
      83: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
      86: invokevirtual #13                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.getOutbuffer:()Lorg/apache/http/nio/util/ContentOutputBuffer;
      89: invokespecial #14                 // Method org/apache/http/nio/entity/ContentOutputStream."<init>":(Lorg/apache/http/nio/util/ContentOutputBuffer;)V
      92: astore_1
      93: aload_0
      94: getfield      #3                  // Field val$request:Lorg/apache/http/HttpEntityEnclosingRequest;
      97: invokeinterface #15,  1           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.getEntity:()Lorg/apache/http/HttpEntity;
     102: aload_1
     103: invokeinterface #16,  2           // InterfaceMethod org/apache/http/HttpEntity.writeTo:(Ljava/io/OutputStream;)V
     108: aload_1
     109: invokevirtual #17                 // Method java/io/OutputStream.flush:()V
     112: aload_1
     113: invokevirtual #18                 // Method java/io/OutputStream.close:()V
     116: aload_0
     117: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     120: dup
     121: astore_2
     122: monitorenter
     123: aload_0
     124: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     127: iconst_0
     128: invokevirtual #11                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState.setWorkerRunning:(Z)V
     131: aload_0
     132: getfield      #2                  // Field val$connState:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler$ClientConnState;
     135: invokevirtual #19                 // Method java/lang/Object.notifyAll:()V
     138: aload_2
     139: monitorexit
     140: goto          150
     143: astore        4
     145: aload_2
     146: monitorexit
     147: aload         4
     149: athrow
     150: goto          193
     153: astore_1
     154: aload_0
     155: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
     158: aload_0
     159: getfield      #4                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
     162: aload_1
     163: invokevirtual #21                 // Method org/apache/http/nio/protocol/ThrottlingHttpClientHandler.shutdownConnection:(Lorg/apache/http/nio/NHttpConnection;Ljava/lang/Throwable;)V
     166: aload_0
     167: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
     170: getfield      #22                 // Field org/apache/http/nio/protocol/ThrottlingHttpClientHandler.eventListener:Lorg/apache/http/nio/protocol/EventListener;
     173: ifnull        193
     176: aload_0
     177: getfield      #1                  // Field this$0:Lorg/apache/http/nio/protocol/ThrottlingHttpClientHandler;
     180: getfield      #22                 // Field org/apache/http/nio/protocol/ThrottlingHttpClientHandler.eventListener:Lorg/apache/http/nio/protocol/EventListener;
     183: aload_1
     184: aload_0
     185: getfield      #4                  // Field val$conn:Lorg/apache/http/nio/NHttpClientConnection;
     188: invokeinterface #23,  3           // InterfaceMethod org/apache/http/nio/protocol/EventListener.fatalIOException:(Ljava/io/IOException;Lorg/apache/http/nio/NHttpConnection;)V
     193: return
    Exception table:
       from    to  target type
           7    33    49   Class java/lang/InterruptedException
          36    46    49   Class java/lang/InterruptedException
           7    35    73   any
          36    59    73   any
          60    70    73   any
          73    76    73   any
         123   140   143   any
         143   147   143   any
           0    35   153   Class java/io/IOException
          36    59   153   Class java/io/IOException
          60   150   153   Class java/io/IOException
}
