Compiled from "SSLContextBuilder.java"
class org.apache.http.ssl.SSLContextBuilder$KeyManagerDelegate extends javax.net.ssl.X509ExtendedKeyManager {
  private final javax.net.ssl.X509ExtendedKeyManager keyManager;

  private final org.apache.http.ssl.PrivateKeyStrategy aliasStrategy;

  org.apache.http.ssl.SSLContextBuilder$KeyManagerDelegate(javax.net.ssl.X509ExtendedKeyManager, org.apache.http.ssl.PrivateKeyStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/net/ssl/X509ExtendedKeyManager."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field aliasStrategy:Lorg/apache/http/ssl/PrivateKeyStrategy;
      14: return

  public java.lang.String[] getClientAliases(java.lang.String, java.security.Principal[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: invokevirtual #4                  // Method javax/net/ssl/X509ExtendedKeyManager.getClientAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;
       9: areturn

  public java.util.Map<java.lang.String, org.apache.http.ssl.PrivateKeyDetails> getClientAliasMap(java.lang.String[], java.security.Principal[]);
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: astore        4
      11: aload         4
      13: arraylength
      14: istore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: iload         5
      23: if_icmpge     115
      26: aload         4
      28: iload         6
      30: aaload
      31: astore        7
      33: aload_0
      34: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
      37: aload         7
      39: aload_2
      40: invokevirtual #4                  // Method javax/net/ssl/X509ExtendedKeyManager.getClientAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;
      43: astore        8
      45: aload         8
      47: ifnull        109
      50: aload         8
      52: astore        9
      54: aload         9
      56: arraylength
      57: istore        10
      59: iconst_0
      60: istore        11
      62: iload         11
      64: iload         10
      66: if_icmpge     109
      69: aload         9
      71: iload         11
      73: aaload
      74: astore        12
      76: aload_3
      77: aload         12
      79: new           #7                  // class org/apache/http/ssl/PrivateKeyDetails
      82: dup
      83: aload         7
      85: aload_0
      86: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
      89: aload         12
      91: invokevirtual #8                  // Method javax/net/ssl/X509ExtendedKeyManager.getCertificateChain:(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;
      94: invokespecial #9                  // Method org/apache/http/ssl/PrivateKeyDetails."<init>":(Ljava/lang/String;[Ljava/security/cert/X509Certificate;)V
      97: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: iinc          11, 1
     106: goto          62
     109: iinc          6, 1
     112: goto          19
     115: aload_3
     116: areturn

  public java.util.Map<java.lang.String, org.apache.http.ssl.PrivateKeyDetails> getServerAliasMap(java.lang.String, java.security.Principal[]);
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
      12: aload_1
      13: aload_2
      14: invokevirtual #11                 // Method javax/net/ssl/X509ExtendedKeyManager.getServerAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;
      17: astore        4
      19: aload         4
      21: ifnull        82
      24: aload         4
      26: astore        5
      28: aload         5
      30: arraylength
      31: istore        6
      33: iconst_0
      34: istore        7
      36: iload         7
      38: iload         6
      40: if_icmpge     82
      43: aload         5
      45: iload         7
      47: aaload
      48: astore        8
      50: aload_3
      51: aload         8
      53: new           #7                  // class org/apache/http/ssl/PrivateKeyDetails
      56: dup
      57: aload_1
      58: aload_0
      59: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
      62: aload         8
      64: invokevirtual #8                  // Method javax/net/ssl/X509ExtendedKeyManager.getCertificateChain:(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;
      67: invokespecial #9                  // Method org/apache/http/ssl/PrivateKeyDetails."<init>":(Ljava/lang/String;[Ljava/security/cert/X509Certificate;)V
      70: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: iinc          7, 1
      79: goto          36
      82: aload_3
      83: areturn

  public java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method getClientAliasMap:([Ljava/lang/String;[Ljava/security/Principal;)Ljava/util/Map;
       6: astore        4
       8: aload_0
       9: getfield      #3                  // Field aliasStrategy:Lorg/apache/http/ssl/PrivateKeyStrategy;
      12: aload         4
      14: aload_3
      15: invokeinterface #13,  3           // InterfaceMethod org/apache/http/ssl/PrivateKeyStrategy.chooseAlias:(Ljava/util/Map;Ljava/net/Socket;)Ljava/lang/String;
      20: areturn

  public java.lang.String[] getServerAliases(java.lang.String, java.security.Principal[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: invokevirtual #11                 // Method javax/net/ssl/X509ExtendedKeyManager.getServerAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;
       9: areturn

  public java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method getServerAliasMap:(Ljava/lang/String;[Ljava/security/Principal;)Ljava/util/Map;
       6: astore        4
       8: aload_0
       9: getfield      #3                  // Field aliasStrategy:Lorg/apache/http/ssl/PrivateKeyStrategy;
      12: aload         4
      14: aload_3
      15: invokeinterface #13,  3           // InterfaceMethod org/apache/http/ssl/PrivateKeyStrategy.chooseAlias:(Ljava/util/Map;Ljava/net/Socket;)Ljava/lang/String;
      20: areturn

  public java.security.cert.X509Certificate[] getCertificateChain(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: invokevirtual #8                  // Method javax/net/ssl/X509ExtendedKeyManager.getCertificateChain:(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;
       8: areturn

  public java.security.PrivateKey getPrivateKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyManager:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: invokevirtual #15                 // Method javax/net/ssl/X509ExtendedKeyManager.getPrivateKey:(Ljava/lang/String;)Ljava/security/PrivateKey;
       8: areturn

  public java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method getClientAliasMap:([Ljava/lang/String;[Ljava/security/Principal;)Ljava/util/Map;
       6: astore        4
       8: aload_0
       9: getfield      #3                  // Field aliasStrategy:Lorg/apache/http/ssl/PrivateKeyStrategy;
      12: aload         4
      14: aconst_null
      15: invokeinterface #13,  3           // InterfaceMethod org/apache/http/ssl/PrivateKeyStrategy.chooseAlias:(Ljava/util/Map;Ljava/net/Socket;)Ljava/lang/String;
      20: areturn

  public java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method getServerAliasMap:(Ljava/lang/String;[Ljava/security/Principal;)Ljava/util/Map;
       6: astore        4
       8: aload_0
       9: getfield      #3                  // Field aliasStrategy:Lorg/apache/http/ssl/PrivateKeyStrategy;
      12: aload         4
      14: aconst_null
      15: invokeinterface #13,  3           // InterfaceMethod org/apache/http/ssl/PrivateKeyStrategy.chooseAlias:(Ljava/util/Map;Ljava/net/Socket;)Ljava/lang/String;
      20: areturn
}
