Compiled from "AbstractSessionOutputBuffer.java"
public abstract class org.apache.http.impl.io.AbstractSessionOutputBuffer implements org.apache.http.io.SessionOutputBuffer,org.apache.http.io.BufferInfo {
  private static final byte[] CRLF;

  private java.io.OutputStream outstream;

  private org.apache.http.util.ByteArrayBuffer buffer;

  private java.nio.charset.Charset charset;

  private boolean ascii;

  private int minChunkLimit;

  private org.apache.http.impl.io.HttpTransportMetricsImpl metrics;

  private java.nio.charset.CodingErrorAction onMalformedCharAction;

  private java.nio.charset.CodingErrorAction onUnmappableCharAction;

  private java.nio.charset.CharsetEncoder encoder;

  private java.nio.ByteBuffer bbuf;

  protected org.apache.http.impl.io.AbstractSessionOutputBuffer(java.io.OutputStream, int, java.nio.charset.Charset, int, java.nio.charset.CodingErrorAction, java.nio.charset.CodingErrorAction);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Input stream
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: iload_2
      12: ldc           #4                  // String Buffer size
      14: invokestatic  #5                  // Method org/apache/http/util/Args.notNegative:(ILjava/lang/String;)I
      17: pop
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field outstream:Ljava/io/OutputStream;
      23: aload_0
      24: new           #7                  // class org/apache/http/util/ByteArrayBuffer
      27: dup
      28: iload_2
      29: invokespecial #8                  // Method org/apache/http/util/ByteArrayBuffer."<init>":(I)V
      32: putfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      35: aload_0
      36: aload_3
      37: ifnull        44
      40: aload_3
      41: goto          47
      44: getstatic     #10                 // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      47: putfield      #11                 // Field charset:Ljava/nio/charset/Charset;
      50: aload_0
      51: aload_0
      52: getfield      #11                 // Field charset:Ljava/nio/charset/Charset;
      55: getstatic     #10                 // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      58: invokevirtual #12                 // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
      61: putfield      #13                 // Field ascii:Z
      64: aload_0
      65: aconst_null
      66: putfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      69: aload_0
      70: iload         4
      72: iflt          80
      75: iload         4
      77: goto          83
      80: sipush        512
      83: putfield      #15                 // Field minChunkLimit:I
      86: aload_0
      87: aload_0
      88: invokevirtual #16                 // Method createTransportMetrics:()Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      91: putfield      #17                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      94: aload_0
      95: aload         5
      97: ifnull        105
     100: aload         5
     102: goto          108
     105: getstatic     #18                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
     108: putfield      #19                 // Field onMalformedCharAction:Ljava/nio/charset/CodingErrorAction;
     111: aload_0
     112: aload         6
     114: ifnull        122
     117: aload         6
     119: goto          125
     122: getstatic     #18                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
     125: putfield      #20                 // Field onUnmappableCharAction:Ljava/nio/charset/CodingErrorAction;
     128: return

  public org.apache.http.impl.io.AbstractSessionOutputBuffer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected void init(java.io.OutputStream, int, org.apache.http.params.HttpParams);
    Code:
       0: aload_1
       1: ldc           #2                  // String Input stream
       3: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_2
       8: ldc           #4                  // String Buffer size
      10: invokestatic  #5                  // Method org/apache/http/util/Args.notNegative:(ILjava/lang/String;)I
      13: pop
      14: aload_3
      15: ldc           #21                 // String HTTP parameters
      17: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field outstream:Ljava/io/OutputStream;
      26: aload_0
      27: new           #7                  // class org/apache/http/util/ByteArrayBuffer
      30: dup
      31: iload_2
      32: invokespecial #8                  // Method org/apache/http/util/ByteArrayBuffer."<init>":(I)V
      35: putfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      38: aload_3
      39: ldc           #22                 // String http.protocol.element-charset
      41: invokeinterface #23,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      46: checkcast     #24                 // class java/lang/String
      49: astore        4
      51: aload_0
      52: aload         4
      54: ifnull        65
      57: aload         4
      59: invokestatic  #25                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      62: goto          68
      65: getstatic     #10                 // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      68: putfield      #11                 // Field charset:Ljava/nio/charset/Charset;
      71: aload_0
      72: aload_0
      73: getfield      #11                 // Field charset:Ljava/nio/charset/Charset;
      76: getstatic     #10                 // Field org/apache/http/Consts.ASCII:Ljava/nio/charset/Charset;
      79: invokevirtual #12                 // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
      82: putfield      #13                 // Field ascii:Z
      85: aload_0
      86: aconst_null
      87: putfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      90: aload_0
      91: aload_3
      92: ldc           #26                 // String http.connection.min-chunk-limit
      94: sipush        512
      97: invokeinterface #27,  3           // InterfaceMethod org/apache/http/params/HttpParams.getIntParameter:(Ljava/lang/String;I)I
     102: putfield      #15                 // Field minChunkLimit:I
     105: aload_0
     106: aload_0
     107: invokevirtual #16                 // Method createTransportMetrics:()Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
     110: putfield      #17                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
     113: aload_3
     114: ldc           #28                 // String http.malformed.input.action
     116: invokeinterface #23,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
     121: checkcast     #29                 // class java/nio/charset/CodingErrorAction
     124: astore        5
     126: aload_0
     127: aload         5
     129: ifnull        137
     132: aload         5
     134: goto          140
     137: getstatic     #18                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
     140: putfield      #19                 // Field onMalformedCharAction:Ljava/nio/charset/CodingErrorAction;
     143: aload_3
     144: ldc           #30                 // String http.unmappable.input.action
     146: invokeinterface #23,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
     151: checkcast     #29                 // class java/nio/charset/CodingErrorAction
     154: astore        6
     156: aload_0
     157: aload         6
     159: ifnull        167
     162: aload         6
     164: goto          170
     167: getstatic     #18                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
     170: putfield      #20                 // Field onUnmappableCharAction:Ljava/nio/charset/CodingErrorAction;
     173: return

  protected org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics();
    Code:
       0: new           #31                 // class org/apache/http/impl/io/HttpTransportMetricsImpl
       3: dup
       4: invokespecial #32                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl."<init>":()V
       7: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #33                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
       7: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #34                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
       7: ireturn

  public int available();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method capacity:()I
       4: aload_0
       5: invokevirtual #36                 // Method length:()I
       8: isub
       9: ireturn

  protected void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #34                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
       7: istore_1
       8: iload_1
       9: ifle          44
      12: aload_0
      13: getfield      #6                  // Field outstream:Ljava/io/OutputStream;
      16: aload_0
      17: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      20: invokevirtual #37                 // Method org/apache/http/util/ByteArrayBuffer.buffer:()[B
      23: iconst_0
      24: iload_1
      25: invokevirtual #38                 // Method java/io/OutputStream.write:([BII)V
      28: aload_0
      29: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      32: invokevirtual #39                 // Method org/apache/http/util/ByteArrayBuffer.clear:()V
      35: aload_0
      36: getfield      #17                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      39: iload_1
      40: i2l
      41: invokevirtual #40                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl.incrementBytesTransferred:(J)V
      44: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method flushBuffer:()V
       4: aload_0
       5: getfield      #6                  // Field outstream:Ljava/io/OutputStream;
       8: invokevirtual #42                 // Method java/io/OutputStream.flush:()V
      11: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_3
       6: aload_0
       7: getfield      #15                 // Field minChunkLimit:I
      10: if_icmpgt     24
      13: iload_3
      14: aload_0
      15: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      18: invokevirtual #33                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
      21: if_icmple     50
      24: aload_0
      25: invokevirtual #41                 // Method flushBuffer:()V
      28: aload_0
      29: getfield      #6                  // Field outstream:Ljava/io/OutputStream;
      32: aload_1
      33: iload_2
      34: iload_3
      35: invokevirtual #38                 // Method java/io/OutputStream.write:([BII)V
      38: aload_0
      39: getfield      #17                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      42: iload_3
      43: i2l
      44: invokevirtual #40                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl.incrementBytesTransferred:(J)V
      47: goto          87
      50: aload_0
      51: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      54: invokevirtual #33                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
      57: aload_0
      58: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      61: invokevirtual #34                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
      64: isub
      65: istore        4
      67: iload_3
      68: iload         4
      70: if_icmple     77
      73: aload_0
      74: invokevirtual #41                 // Method flushBuffer:()V
      77: aload_0
      78: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      81: aload_1
      82: iload_2
      83: iload_3
      84: invokevirtual #43                 // Method org/apache/http/util/ByteArrayBuffer.append:([BII)V
      87: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: iconst_0
       8: aload_1
       9: arraylength
      10: invokevirtual #44                 // Method write:([BII)V
      13: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #45                 // Method org/apache/http/util/ByteArrayBuffer.isFull:()Z
       7: ifeq          14
      10: aload_0
      11: invokevirtual #41                 // Method flushBuffer:()V
      14: aload_0
      15: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      18: iload_1
      19: invokevirtual #46                 // Method org/apache/http/util/ByteArrayBuffer.append:(I)V
      22: return

  public void writeLine(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #47                 // Method java/lang/String.length:()I
       9: ifle          57
      12: aload_0
      13: getfield      #13                 // Field ascii:Z
      16: ifeq          47
      19: iconst_0
      20: istore_2
      21: iload_2
      22: aload_1
      23: invokevirtual #47                 // Method java/lang/String.length:()I
      26: if_icmpge     44
      29: aload_0
      30: aload_1
      31: iload_2
      32: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
      35: invokevirtual #49                 // Method write:(I)V
      38: iinc          2, 1
      41: goto          21
      44: goto          57
      47: aload_1
      48: invokestatic  #50                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      51: astore_2
      52: aload_0
      53: aload_2
      54: invokespecial #51                 // Method writeEncoded:(Ljava/nio/CharBuffer;)V
      57: aload_0
      58: getstatic     #52                 // Field CRLF:[B
      61: invokevirtual #53                 // Method write:([B)V
      64: return

  public void writeLine(org.apache.http.util.CharArrayBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #13                 // Field ascii:Z
       9: ifeq          94
      12: iconst_0
      13: istore_2
      14: aload_1
      15: invokevirtual #54                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      18: istore_3
      19: iload_3
      20: ifle          91
      23: aload_0
      24: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      27: invokevirtual #33                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
      30: aload_0
      31: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      34: invokevirtual #34                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
      37: isub
      38: istore        4
      40: iload         4
      42: iload_3
      43: invokestatic  #55                 // Method java/lang/Math.min:(II)I
      46: istore        4
      48: iload         4
      50: ifle          64
      53: aload_0
      54: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      57: aload_1
      58: iload_2
      59: iload         4
      61: invokevirtual #56                 // Method org/apache/http/util/ByteArrayBuffer.append:(Lorg/apache/http/util/CharArrayBuffer;II)V
      64: aload_0
      65: getfield      #9                  // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      68: invokevirtual #45                 // Method org/apache/http/util/ByteArrayBuffer.isFull:()Z
      71: ifeq          78
      74: aload_0
      75: invokevirtual #41                 // Method flushBuffer:()V
      78: iload_2
      79: iload         4
      81: iadd
      82: istore_2
      83: iload_3
      84: iload         4
      86: isub
      87: istore_3
      88: goto          19
      91: goto          112
      94: aload_1
      95: invokevirtual #57                 // Method org/apache/http/util/CharArrayBuffer.buffer:()[C
      98: iconst_0
      99: aload_1
     100: invokevirtual #54                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     103: invokestatic  #58                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
     106: astore_2
     107: aload_0
     108: aload_2
     109: invokespecial #51                 // Method writeEncoded:(Ljava/nio/CharBuffer;)V
     112: aload_0
     113: getstatic     #52                 // Field CRLF:[B
     116: invokevirtual #53                 // Method write:([B)V
     119: return

  private void writeEncoded(java.nio.CharBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method java/nio/CharBuffer.hasRemaining:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      12: ifnonnull     50
      15: aload_0
      16: aload_0
      17: getfield      #11                 // Field charset:Ljava/nio/charset/Charset;
      20: invokevirtual #60                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      23: putfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      26: aload_0
      27: getfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      30: aload_0
      31: getfield      #19                 // Field onMalformedCharAction:Ljava/nio/charset/CodingErrorAction;
      34: invokevirtual #61                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      37: pop
      38: aload_0
      39: getfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      42: aload_0
      43: getfield      #20                 // Field onUnmappableCharAction:Ljava/nio/charset/CodingErrorAction;
      46: invokevirtual #62                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      49: pop
      50: aload_0
      51: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      54: ifnonnull     67
      57: aload_0
      58: sipush        1024
      61: invokestatic  #64                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      64: putfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      67: aload_0
      68: getfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      71: invokevirtual #65                 // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
      74: pop
      75: aload_1
      76: invokevirtual #59                 // Method java/nio/CharBuffer.hasRemaining:()Z
      79: ifeq          104
      82: aload_0
      83: getfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      86: aload_1
      87: aload_0
      88: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      91: iconst_1
      92: invokevirtual #66                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      95: astore_2
      96: aload_0
      97: aload_2
      98: invokespecial #67                 // Method handleEncodingResult:(Ljava/nio/charset/CoderResult;)V
     101: goto          75
     104: aload_0
     105: getfield      #14                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
     108: aload_0
     109: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
     112: invokevirtual #68                 // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
     115: astore_2
     116: aload_0
     117: aload_2
     118: invokespecial #67                 // Method handleEncodingResult:(Ljava/nio/charset/CoderResult;)V
     121: aload_0
     122: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
     125: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     128: pop
     129: return

  private void handleEncodingResult(java.nio.charset.CoderResult) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #70                 // Method java/nio/charset/CoderResult.isError:()Z
       4: ifeq          11
       7: aload_1
       8: invokevirtual #71                 // Method java/nio/charset/CoderResult.throwException:()V
      11: aload_0
      12: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      15: invokevirtual #72                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      23: invokevirtual #73                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      26: ifeq          43
      29: aload_0
      30: aload_0
      31: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      34: invokevirtual #74                 // Method java/nio/ByteBuffer.get:()B
      37: invokevirtual #49                 // Method write:(I)V
      40: goto          19
      43: aload_0
      44: getfield      #63                 // Field bbuf:Ljava/nio/ByteBuffer;
      47: invokevirtual #75                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      50: pop
      51: return

  public org.apache.http.io.HttpTransportMetrics getMetrics();
    Code:
       0: aload_0
       1: getfield      #17                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
       4: areturn

  static {};
    Code:
       0: iconst_2
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        13
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        10
      12: bastore
      13: putstatic     #52                 // Field CRLF:[B
      16: return
}
