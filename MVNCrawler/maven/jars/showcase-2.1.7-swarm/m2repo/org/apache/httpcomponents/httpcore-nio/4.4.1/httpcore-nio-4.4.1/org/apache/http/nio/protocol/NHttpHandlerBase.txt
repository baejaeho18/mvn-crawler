Compiled from "NHttpHandlerBase.java"
public abstract class org.apache.http.nio.protocol.NHttpHandlerBase {
  protected static final java.lang.String CONN_STATE;

  protected final org.apache.http.protocol.HttpProcessor httpProcessor;

  protected final org.apache.http.ConnectionReuseStrategy connStrategy;

  protected final org.apache.http.nio.util.ByteBufferAllocator allocator;

  protected final org.apache.http.params.HttpParams params;

  protected org.apache.http.nio.protocol.EventListener eventListener;

  public org.apache.http.nio.protocol.NHttpHandlerBase(org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.nio.util.ByteBufferAllocator, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String HTTP processor
       7: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_2
      12: ldc           #4                  // String Connection reuse strategy
      14: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: pop
      18: aload_3
      19: ldc           #5                  // String ByteBuffer allocator
      21: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: pop
      25: aload         4
      27: ldc           #6                  // String HTTP parameters
      29: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: aload_1
      35: putfield      #7                  // Field httpProcessor:Lorg/apache/http/protocol/HttpProcessor;
      38: aload_0
      39: aload_2
      40: putfield      #8                  // Field connStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      43: aload_0
      44: aload_3
      45: putfield      #9                  // Field allocator:Lorg/apache/http/nio/util/ByteBufferAllocator;
      48: aload_0
      49: aload         4
      51: putfield      #10                 // Field params:Lorg/apache/http/params/HttpParams;
      54: return

  public org.apache.http.params.HttpParams getParams();
    Code:
       0: aload_0
       1: getfield      #10                 // Field params:Lorg/apache/http/params/HttpParams;
       4: areturn

  public void setEventListener(org.apache.http.nio.protocol.EventListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field eventListener:Lorg/apache/http/nio/protocol/EventListener;
       5: return

  protected void closeConnection(org.apache.http.nio.NHttpConnection, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.close:()V
       6: goto          21
       9: astore_3
      10: aload_1
      11: invokeinterface #14,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.shutdown:()V
      16: goto          21
      19: astore        4
      21: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException
          10    16    19   Class java/io/IOException

  protected void shutdownConnection(org.apache.http.nio.NHttpConnection, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.shutdown:()V
       6: goto          10
       9: astore_3
      10: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  protected void handleTimeout(org.apache.http.nio.NHttpConnection);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.getStatus:()I
       6: ifne          54
       9: aload_1
      10: invokeinterface #12,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.close:()V
      15: aload_1
      16: invokeinterface #15,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.getStatus:()I
      21: iconst_1
      22: if_icmpne     34
      25: aload_1
      26: sipush        250
      29: invokeinterface #16,  2           // InterfaceMethod org/apache/http/nio/NHttpConnection.setSocketTimeout:(I)V
      34: aload_0
      35: getfield      #11                 // Field eventListener:Lorg/apache/http/nio/protocol/EventListener;
      38: ifnull        60
      41: aload_0
      42: getfield      #11                 // Field eventListener:Lorg/apache/http/nio/protocol/EventListener;
      45: aload_1
      46: invokeinterface #17,  2           // InterfaceMethod org/apache/http/nio/protocol/EventListener.connectionTimeout:(Lorg/apache/http/nio/NHttpConnection;)V
      51: goto          60
      54: aload_1
      55: invokeinterface #14,  1           // InterfaceMethod org/apache/http/nio/NHttpConnection.shutdown:()V
      60: goto          64
      63: astore_2
      64: return
    Exception table:
       from    to  target type
           0    60    63   Class java/io/IOException

  protected boolean canResponseHaveBody(org.apache.http.HttpRequest, org.apache.http.HttpResponse);
    Code:
       0: aload_1
       1: ifnull        25
       4: ldc           #18                 // String HEAD
       6: aload_1
       7: invokeinterface #19,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      12: invokeinterface #20,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      17: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          25
      23: iconst_0
      24: ireturn
      25: aload_2
      26: invokeinterface #22,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      31: invokeinterface #23,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      36: istore_3
      37: iload_3
      38: sipush        200
      41: if_icmplt     69
      44: iload_3
      45: sipush        204
      48: if_icmpeq     69
      51: iload_3
      52: sipush        304
      55: if_icmpeq     69
      58: iload_3
      59: sipush        205
      62: if_icmpeq     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn
}
