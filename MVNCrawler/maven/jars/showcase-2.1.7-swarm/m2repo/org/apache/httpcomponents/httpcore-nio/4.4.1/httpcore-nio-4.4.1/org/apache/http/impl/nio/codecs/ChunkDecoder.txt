Compiled from "ChunkDecoder.java"
public class org.apache.http.impl.nio.codecs.ChunkDecoder extends org.apache.http.impl.nio.codecs.AbstractContentDecoder {
  private static final int READ_CONTENT;

  private static final int READ_FOOTERS;

  private static final int COMPLETED;

  private int state;

  private boolean endOfChunk;

  private boolean endOfStream;

  private org.apache.http.util.CharArrayBuffer lineBuf;

  private int chunkSize;

  private int pos;

  private final org.apache.http.config.MessageConstraints constraints;

  private final java.util.List<org.apache.http.util.CharArrayBuffer> trailerBufs;

  private org.apache.http.Header[] footers;

  public org.apache.http.impl.nio.codecs.ChunkDecoder(java.nio.channels.ReadableByteChannel, org.apache.http.nio.reactor.SessionInputBuffer, org.apache.http.config.MessageConstraints, org.apache.http.impl.io.HttpTransportMetricsImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokespecial #1                  // Method org/apache/http/impl/nio/codecs/AbstractContentDecoder."<init>":(Ljava/nio/channels/ReadableByteChannel;Lorg/apache/http/nio/reactor/SessionInputBuffer;Lorg/apache/http/impl/io/HttpTransportMetricsImpl;)V
       8: aload_0
       9: iconst_0
      10: putfield      #2                  // Field state:I
      13: aload_0
      14: iconst_m1
      15: putfield      #3                  // Field chunkSize:I
      18: aload_0
      19: iconst_0
      20: putfield      #4                  // Field pos:I
      23: aload_0
      24: iconst_0
      25: putfield      #5                  // Field endOfChunk:Z
      28: aload_0
      29: iconst_0
      30: putfield      #6                  // Field endOfStream:Z
      33: aload_0
      34: aload_3
      35: ifnull        42
      38: aload_3
      39: goto          45
      42: getstatic     #7                  // Field org/apache/http/config/MessageConstraints.DEFAULT:Lorg/apache/http/config/MessageConstraints;
      45: putfield      #8                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
      48: aload_0
      49: new           #9                  // class java/util/ArrayList
      52: dup
      53: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #11                 // Field trailerBufs:Ljava/util/List;
      59: return

  public org.apache.http.impl.nio.codecs.ChunkDecoder(java.nio.channels.ReadableByteChannel, org.apache.http.nio.reactor.SessionInputBuffer, org.apache.http.impl.io.HttpTransportMetricsImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokespecial #12                 // Method "<init>":(Ljava/nio/channels/ReadableByteChannel;Lorg/apache/http/nio/reactor/SessionInputBuffer;Lorg/apache/http/config/MessageConstraints;Lorg/apache/http/impl/io/HttpTransportMetricsImpl;)V
       8: return

  private void readChunkHead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
       4: ifnonnull     23
       7: aload_0
       8: new           #14                 // class org/apache/http/util/CharArrayBuffer
      11: dup
      12: bipush        32
      14: invokespecial #15                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
      17: putfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      20: goto          30
      23: aload_0
      24: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      27: invokevirtual #16                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
      30: aload_0
      31: getfield      #5                  // Field endOfChunk:Z
      34: ifeq          113
      37: aload_0
      38: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
      41: aload_0
      42: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      45: aload_0
      46: getfield      #6                  // Field endOfStream:Z
      49: invokeinterface #18,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
      54: ifeq          77
      57: aload_0
      58: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      61: invokevirtual #19                 // Method org/apache/http/util/CharArrayBuffer.isEmpty:()Z
      64: ifne          108
      67: new           #20                 // class org/apache/http/MalformedChunkCodingException
      70: dup
      71: ldc           #21                 // String CRLF expected at end of chunk
      73: invokespecial #22                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
      81: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.length:()I
      86: iconst_2
      87: if_icmpgt     97
      90: aload_0
      91: getfield      #6                  // Field endOfStream:Z
      94: ifeq          107
      97: new           #20                 // class org/apache/http/MalformedChunkCodingException
     100: dup
     101: ldc           #21                 // String CRLF expected at end of chunk
     103: invokespecial #22                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: return
     108: aload_0
     109: iconst_0
     110: putfield      #5                  // Field endOfChunk:Z
     113: aload_0
     114: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     117: aload_0
     118: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     121: aload_0
     122: getfield      #6                  // Field endOfStream:Z
     125: invokeinterface #18,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
     130: istore_1
     131: aload_0
     132: getfield      #8                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
     135: invokevirtual #24                 // Method org/apache/http/config/MessageConstraints.getMaxLineLength:()I
     138: istore_2
     139: iload_2
     140: ifle          181
     143: aload_0
     144: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     147: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     150: iload_2
     151: if_icmpgt     171
     154: iload_1
     155: ifne          181
     158: aload_0
     159: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     162: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.length:()I
     167: iload_2
     168: if_icmple     181
     171: new           #26                 // class org/apache/http/MessageConstraintException
     174: dup
     175: ldc           #27                 // String Maximum line length limit exceeded
     177: invokespecial #28                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: iload_1
     182: ifeq          252
     185: aload_0
     186: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     189: bipush        59
     191: invokevirtual #29                 // Method org/apache/http/util/CharArrayBuffer.indexOf:(I)I
     194: istore_3
     195: iload_3
     196: ifge          207
     199: aload_0
     200: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     203: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     206: istore_3
     207: aload_0
     208: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     211: iconst_0
     212: iload_3
     213: invokevirtual #30                 // Method org/apache/http/util/CharArrayBuffer.substringTrimmed:(II)Ljava/lang/String;
     216: astore        4
     218: aload_0
     219: aload         4
     221: bipush        16
     223: invokestatic  #31                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
     226: putfield      #3                  // Field chunkSize:I
     229: goto          244
     232: astore        4
     234: new           #20                 // class org/apache/http/MalformedChunkCodingException
     237: dup
     238: ldc           #33                 // String Bad chunk header
     240: invokespecial #22                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
     243: athrow
     244: aload_0
     245: iconst_0
     246: putfield      #4                  // Field pos:I
     249: goto          269
     252: aload_0
     253: getfield      #6                  // Field endOfStream:Z
     256: ifeq          269
     259: new           #34                 // class org/apache/http/ConnectionClosedException
     262: dup
     263: ldc           #35                 // String Premature end of chunk coded message body: closing chunk expected
     265: invokespecial #36                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
     268: athrow
     269: return
    Exception table:
       from    to  target type
         207   229   232   Class java/lang/NumberFormatException

  private void parseHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
       4: astore_1
       5: aload_0
       6: getfield      #11                 // Field trailerBufs:Ljava/util/List;
       9: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
      14: istore_2
      15: aload_0
      16: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      19: iconst_0
      20: invokevirtual #38                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      23: bipush        32
      25: if_icmpeq     41
      28: aload_0
      29: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
      32: iconst_0
      33: invokevirtual #38                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      36: bipush        9
      38: if_icmpne     170
      41: iload_2
      42: ifle          170
      45: aload_0
      46: getfield      #11                 // Field trailerBufs:Ljava/util/List;
      49: iload_2
      50: iconst_1
      51: isub
      52: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      57: checkcast     #14                 // class org/apache/http/util/CharArrayBuffer
      60: astore_3
      61: iconst_0
      62: istore        4
      64: iload         4
      66: aload_1
      67: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      70: if_icmpge     104
      73: aload_1
      74: iload         4
      76: invokevirtual #38                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      79: istore        5
      81: iload         5
      83: bipush        32
      85: if_icmpeq     98
      88: iload         5
      90: bipush        9
      92: if_icmpeq     98
      95: goto          104
      98: iinc          4, 1
     101: goto          64
     104: aload_0
     105: getfield      #8                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
     108: invokevirtual #24                 // Method org/apache/http/config/MessageConstraints.getMaxLineLength:()I
     111: istore        5
     113: iload         5
     115: ifle          147
     118: aload_3
     119: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     122: iconst_1
     123: iadd
     124: aload_1
     125: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     128: iadd
     129: iload         4
     131: isub
     132: iload         5
     134: if_icmple     147
     137: new           #26                 // class org/apache/http/MessageConstraintException
     140: dup
     141: ldc           #27                 // String Maximum line length limit exceeded
     143: invokespecial #28                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: aload_3
     148: bipush        32
     150: invokevirtual #40                 // Method org/apache/http/util/CharArrayBuffer.append:(C)V
     153: aload_3
     154: aload_1
     155: iload         4
     157: aload_1
     158: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     161: iload         4
     163: isub
     164: invokevirtual #41                 // Method org/apache/http/util/CharArrayBuffer.append:(Lorg/apache/http/util/CharArrayBuffer;II)V
     167: goto          186
     170: aload_0
     171: getfield      #11                 // Field trailerBufs:Ljava/util/List;
     174: aload_1
     175: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     180: pop
     181: aload_0
     182: aconst_null
     183: putfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     186: return

  private void processFooters() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field trailerBufs:Ljava/util/List;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_1
      10: iload_1
      11: ifle          93
      14: aload_0
      15: aload_0
      16: getfield      #11                 // Field trailerBufs:Ljava/util/List;
      19: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
      24: anewarray     #43                 // class org/apache/http/Header
      27: putfield      #44                 // Field footers:[Lorg/apache/http/Header;
      30: iconst_0
      31: istore_2
      32: iload_2
      33: aload_0
      34: getfield      #11                 // Field trailerBufs:Ljava/util/List;
      37: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
      42: if_icmpge     93
      45: aload_0
      46: getfield      #44                 // Field footers:[Lorg/apache/http/Header;
      49: iload_2
      50: new           #45                 // class org/apache/http/message/BufferedHeader
      53: dup
      54: aload_0
      55: getfield      #11                 // Field trailerBufs:Ljava/util/List;
      58: iload_2
      59: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      64: checkcast     #14                 // class org/apache/http/util/CharArrayBuffer
      67: invokespecial #46                 // Method org/apache/http/message/BufferedHeader."<init>":(Lorg/apache/http/util/CharArrayBuffer;)V
      70: aastore
      71: goto          87
      74: astore_3
      75: new           #48                 // class java/io/IOException
      78: dup
      79: aload_3
      80: invokevirtual #49                 // Method org/apache/http/ParseException.getMessage:()Ljava/lang/String;
      83: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: iinc          2, 1
      90: goto          32
      93: aload_0
      94: getfield      #11                 // Field trailerBufs:Ljava/util/List;
      97: invokeinterface #51,  1           // InterfaceMethod java/util/List.clear:()V
     102: return
    Exception table:
       from    to  target type
          45    71    74   Class org/apache/http/ParseException

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #52                 // String Byte buffer
       3: invokestatic  #53                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #2                  // Field state:I
      11: iconst_2
      12: if_icmpne     17
      15: iconst_m1
      16: ireturn
      17: iconst_0
      18: istore_2
      19: aload_0
      20: getfield      #2                  // Field state:I
      23: iconst_2
      24: if_icmpeq     429
      27: aload_0
      28: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
      31: invokeinterface #54,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.hasData:()Z
      36: ifeq          47
      39: aload_0
      40: getfield      #3                  // Field chunkSize:I
      43: iconst_m1
      44: if_icmpne     62
      47: aload_0
      48: invokevirtual #55                 // Method fillBufferFromChannel:()I
      51: istore_3
      52: iload_3
      53: iconst_m1
      54: if_icmpne     62
      57: aload_0
      58: iconst_1
      59: putfield      #6                  // Field endOfStream:Z
      62: aload_0
      63: getfield      #2                  // Field state:I
      66: lookupswitch  { // 2
                     0: 92
                     1: 288
               default: 426
          }
      92: aload_0
      93: getfield      #3                  // Field chunkSize:I
      96: iconst_m1
      97: if_icmpne     134
     100: aload_0
     101: invokespecial #56                 // Method readChunkHead:()V
     104: aload_0
     105: getfield      #3                  // Field chunkSize:I
     108: iconst_m1
     109: if_icmpne     114
     112: iload_2
     113: ireturn
     114: aload_0
     115: getfield      #3                  // Field chunkSize:I
     118: ifne          134
     121: aload_0
     122: iconst_m1
     123: putfield      #3                  // Field chunkSize:I
     126: aload_0
     127: iconst_1
     128: putfield      #2                  // Field state:I
     131: goto          426
     134: aload_0
     135: getfield      #3                  // Field chunkSize:I
     138: aload_0
     139: getfield      #4                  // Field pos:I
     142: isub
     143: istore_3
     144: aload_0
     145: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     148: aload_1
     149: iload_3
     150: invokeinterface #57,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.read:(Ljava/nio/ByteBuffer;I)I
     155: istore        4
     157: iload         4
     159: ifle          181
     162: aload_0
     163: dup
     164: getfield      #4                  // Field pos:I
     167: iload         4
     169: iadd
     170: putfield      #4                  // Field pos:I
     173: iload_2
     174: iload         4
     176: iadd
     177: istore_2
     178: goto          257
     181: aload_0
     182: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     185: invokeinterface #54,  1           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.hasData:()Z
     190: ifne          257
     193: aload_0
     194: getfield      #6                  // Field endOfStream:Z
     197: ifeq          257
     200: aload_0
     201: iconst_2
     202: putfield      #2                  // Field state:I
     205: aload_0
     206: iconst_1
     207: putfield      #58                 // Field completed:Z
     210: new           #59                 // class org/apache/http/TruncatedChunkException
     213: dup
     214: new           #60                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #62                 // String Truncated chunk ( expected size:
     223: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_0
     227: getfield      #3                  // Field chunkSize:I
     230: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     233: ldc           #65                 // String ; actual size:
     235: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload_0
     239: getfield      #4                  // Field pos:I
     242: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     245: ldc           #66                 // String )
     247: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     253: invokespecial #68                 // Method org/apache/http/TruncatedChunkException."<init>":(Ljava/lang/String;)V
     256: athrow
     257: aload_0
     258: getfield      #4                  // Field pos:I
     261: aload_0
     262: getfield      #3                  // Field chunkSize:I
     265: if_icmpne     286
     268: aload_0
     269: iconst_m1
     270: putfield      #3                  // Field chunkSize:I
     273: aload_0
     274: iconst_0
     275: putfield      #4                  // Field pos:I
     278: aload_0
     279: iconst_1
     280: putfield      #5                  // Field endOfChunk:Z
     283: goto          426
     286: iload_2
     287: ireturn
     288: aload_0
     289: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     292: ifnonnull     311
     295: aload_0
     296: new           #14                 // class org/apache/http/util/CharArrayBuffer
     299: dup
     300: bipush        32
     302: invokespecial #15                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
     305: putfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     308: goto          318
     311: aload_0
     312: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     315: invokevirtual #16                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
     318: aload_0
     319: getfield      #17                 // Field buffer:Lorg/apache/http/nio/reactor/SessionInputBuffer;
     322: aload_0
     323: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     326: aload_0
     327: getfield      #6                  // Field endOfStream:Z
     330: invokeinterface #18,  3           // InterfaceMethod org/apache/http/nio/reactor/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;Z)Z
     335: ifne          357
     338: aload_0
     339: getfield      #6                  // Field endOfStream:Z
     342: ifeq          355
     345: aload_0
     346: iconst_2
     347: putfield      #2                  // Field state:I
     350: aload_0
     351: iconst_1
     352: putfield      #58                 // Field completed:Z
     355: iload_2
     356: ireturn
     357: aload_0
     358: getfield      #13                 // Field lineBuf:Lorg/apache/http/util/CharArrayBuffer;
     361: invokevirtual #25                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     364: ifle          412
     367: aload_0
     368: getfield      #8                  // Field constraints:Lorg/apache/http/config/MessageConstraints;
     371: invokevirtual #69                 // Method org/apache/http/config/MessageConstraints.getMaxHeaderCount:()I
     374: istore        5
     376: iload         5
     378: ifle          405
     381: aload_0
     382: getfield      #11                 // Field trailerBufs:Ljava/util/List;
     385: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
     390: iload         5
     392: if_icmplt     405
     395: new           #26                 // class org/apache/http/MessageConstraintException
     398: dup
     399: ldc           #70                 // String Maximum header count exceeded
     401: invokespecial #28                 // Method org/apache/http/MessageConstraintException."<init>":(Ljava/lang/String;)V
     404: athrow
     405: aload_0
     406: invokespecial #71                 // Method parseHeader:()V
     409: goto          426
     412: aload_0
     413: iconst_2
     414: putfield      #2                  // Field state:I
     417: aload_0
     418: iconst_1
     419: putfield      #58                 // Field completed:Z
     422: aload_0
     423: invokespecial #72                 // Method processFooters:()V
     426: goto          19
     429: iload_2
     430: ireturn

  public org.apache.http.Header[] getFooters();
    Code:
       0: aload_0
       1: getfield      #44                 // Field footers:[Lorg/apache/http/Header;
       4: ifnull        18
       7: aload_0
       8: getfield      #44                 // Field footers:[Lorg/apache/http/Header;
      11: invokevirtual #73                 // Method "[Lorg/apache/http/Header;".clone:()Ljava/lang/Object;
      14: checkcast     #74                 // class "[Lorg/apache/http/Header;"
      17: areturn
      18: iconst_0
      19: anewarray     #43                 // class org/apache/http/Header
      22: areturn

  public java.lang.String toString();
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #75                 // String [chunk-coded; completed:
      11: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #58                 // Field completed:Z
      20: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #77                 // String ]
      27: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn
}
