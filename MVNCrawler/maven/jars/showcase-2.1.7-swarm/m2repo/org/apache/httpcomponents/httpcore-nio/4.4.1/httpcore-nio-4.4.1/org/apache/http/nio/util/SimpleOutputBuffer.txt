Compiled from "SimpleOutputBuffer.java"
public class org.apache.http.nio.util.SimpleOutputBuffer extends org.apache.http.nio.util.ExpandableBuffer implements org.apache.http.nio.util.ContentOutputBuffer {
  private boolean endOfStream;

  public org.apache.http.nio.util.SimpleOutputBuffer(int, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field endOfStream:Z
      11: return

  public org.apache.http.nio.util.SimpleOutputBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #3                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       5: invokespecial #4                  // Method "<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       8: return

  public int produceContent(org.apache.http.nio.ContentEncoder) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method setOutputMode:()V
       4: aload_1
       5: aload_0
       6: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       9: invokeinterface #7,  2            // InterfaceMethod org/apache/http/nio/ContentEncoder.write:(Ljava/nio/ByteBuffer;)I
      14: istore_2
      15: aload_0
      16: invokevirtual #8                  // Method hasData:()Z
      19: ifne          35
      22: aload_0
      23: getfield      #2                  // Field endOfStream:Z
      26: ifeq          35
      29: aload_1
      30: invokeinterface #9,  1            // InterfaceMethod org/apache/http/nio/ContentEncoder.complete:()V
      35: iload_2
      36: ireturn

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #2                  // Field endOfStream:Z
       9: ifeq          13
      12: return
      13: aload_0
      14: invokevirtual #10                 // Method setInputMode:()V
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      22: invokevirtual #11                 // Method java/nio/ByteBuffer.position:()I
      25: iload_3
      26: iadd
      27: invokevirtual #12                 // Method ensureCapacity:(I)V
      30: aload_0
      31: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokevirtual #13                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      40: pop
      41: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #2                  // Field endOfStream:Z
       9: ifeq          13
      12: return
      13: aload_0
      14: aload_1
      15: iconst_0
      16: aload_1
      17: arraylength
      18: invokevirtual #14                 // Method write:([BII)V
      21: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field endOfStream:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #10                 // Method setInputMode:()V
      12: aload_0
      13: aload_0
      14: invokevirtual #15                 // Method capacity:()I
      17: iconst_1
      18: iadd
      19: invokevirtual #12                 // Method ensureCapacity:(I)V
      22: aload_0
      23: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      26: iload_1
      27: i2b
      28: invokevirtual #16                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      31: pop
      32: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/http/nio/util/ExpandableBuffer.clear:()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field endOfStream:Z
       9: return

  public void flush();
    Code:
       0: return

  public void writeCompleted();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field endOfStream:Z
       5: return

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field endOfStream:Z
       5: return
}
