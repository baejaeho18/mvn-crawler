Compiled from "HttpAsyncService.java"
class org.apache.http.nio.protocol.HttpAsyncService$State {
  private final java.util.Queue<org.apache.http.nio.protocol.HttpAsyncService$PipelineEntry> pipeline;

  private volatile boolean terminated;

  private volatile org.apache.http.nio.protocol.MessageState requestState;

  private volatile org.apache.http.nio.protocol.MessageState responseState;

  private volatile org.apache.http.nio.protocol.HttpAsyncService$Incoming incoming;

  private volatile org.apache.http.nio.protocol.HttpAsyncService$Outgoing outgoing;

  private volatile org.apache.http.concurrent.Cancellable cancellable;

  org.apache.http.nio.protocol.HttpAsyncService$State();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field pipeline:Ljava/util/Queue;
      15: aload_0
      16: getstatic     #5                  // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      19: putfield      #6                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
      22: aload_0
      23: getstatic     #5                  // Field org/apache/http/nio/protocol/MessageState.READY:Lorg/apache/http/nio/protocol/MessageState;
      26: putfield      #7                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
      29: return

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminated:Z
       4: ireturn

  public void setTerminated();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field terminated:Z
       5: return

  public org.apache.http.nio.protocol.MessageState getRequestState();
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
       4: areturn

  public void setRequestState(org.apache.http.nio.protocol.MessageState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
       5: return

  public org.apache.http.nio.protocol.MessageState getResponseState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
       4: areturn

  public void setResponseState(org.apache.http.nio.protocol.MessageState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
       5: return

  public org.apache.http.nio.protocol.HttpAsyncService$Incoming getIncoming();
    Code:
       0: aload_0
       1: getfield      #9                  // Field incoming:Lorg/apache/http/nio/protocol/HttpAsyncService$Incoming;
       4: areturn

  public void setIncoming(org.apache.http.nio.protocol.HttpAsyncService$Incoming);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field incoming:Lorg/apache/http/nio/protocol/HttpAsyncService$Incoming;
       5: return

  public org.apache.http.nio.protocol.HttpAsyncService$Outgoing getOutgoing();
    Code:
       0: aload_0
       1: getfield      #10                 // Field outgoing:Lorg/apache/http/nio/protocol/HttpAsyncService$Outgoing;
       4: areturn

  public void setOutgoing(org.apache.http.nio.protocol.HttpAsyncService$Outgoing);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field outgoing:Lorg/apache/http/nio/protocol/HttpAsyncService$Outgoing;
       5: return

  public org.apache.http.concurrent.Cancellable getCancellable();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cancellable:Lorg/apache/http/concurrent/Cancellable;
       4: areturn

  public void setCancellable(org.apache.http.concurrent.Cancellable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field cancellable:Lorg/apache/http/concurrent/Cancellable;
       5: return

  public java.util.Queue<org.apache.http.nio.protocol.HttpAsyncService$PipelineEntry> getPipeline();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/Queue;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #14                 // String [incoming
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #6                  // Field requestState:Lorg/apache/http/nio/protocol/MessageState;
      20: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #9                  // Field incoming:Lorg/apache/http/nio/protocol/HttpAsyncService$Incoming;
      28: ifnull        55
      31: aload_1
      32: ldc           #17                 // String
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #9                  // Field incoming:Lorg/apache/http/nio/protocol/HttpAsyncService$Incoming;
      43: invokevirtual #18                 // Method org/apache/http/nio/protocol/HttpAsyncService$Incoming.getRequest:()Lorg/apache/http/HttpRequest;
      46: invokeinterface #19,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      51: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: ldc           #20                 // String ; outgoing
      58: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: aload_0
      64: getfield      #7                  // Field responseState:Lorg/apache/http/nio/protocol/MessageState;
      67: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_0
      72: getfield      #10                 // Field outgoing:Lorg/apache/http/nio/protocol/HttpAsyncService$Outgoing;
      75: ifnull        102
      78: aload_1
      79: ldc           #17                 // String
      81: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: aload_1
      86: aload_0
      87: getfield      #10                 // Field outgoing:Lorg/apache/http/nio/protocol/HttpAsyncService$Outgoing;
      90: invokevirtual #21                 // Method org/apache/http/nio/protocol/HttpAsyncService$Outgoing.getResponse:()Lorg/apache/http/HttpResponse;
      93: invokeinterface #22,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      98: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_1
     103: ldc           #23                 // String ]
     105: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: pop
     109: aload_1
     110: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: areturn
}
