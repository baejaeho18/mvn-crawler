Compiled from "ManagedClientAsyncConnectionImpl.java"
class org.apache.http.impl.nio.conn.ManagedClientAsyncConnectionImpl implements org.apache.http.nio.conn.ManagedClientAsyncConnection {
  private final org.apache.http.nio.conn.ClientAsyncConnectionManager manager;

  private final org.apache.http.nio.conn.ClientAsyncConnectionFactory connFactory;

  private volatile org.apache.http.impl.nio.conn.HttpPoolEntry poolEntry;

  private volatile boolean reusable;

  private volatile long duration;

  org.apache.http.impl.nio.conn.ManagedClientAsyncConnectionImpl(org.apache.http.nio.conn.ClientAsyncConnectionManager, org.apache.http.nio.conn.ClientAsyncConnectionFactory, org.apache.http.impl.nio.conn.HttpPoolEntry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field manager:Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field connFactory:Lorg/apache/http/nio/conn/ClientAsyncConnectionFactory;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field reusable:Z
      24: aload_0
      25: ldc2_w        #6                  // long 9223372036854775807l
      28: putfield      #8                  // Field duration:J
      31: return

  org.apache.http.impl.nio.conn.HttpPoolEntry getPoolEntry();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: areturn

  org.apache.http.impl.nio.conn.HttpPoolEntry detach();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      10: aload_1
      11: areturn

  public org.apache.http.nio.conn.ClientAsyncConnectionManager getManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field manager:Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
       4: areturn

  private org.apache.http.nio.conn.ClientAsyncConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #9                  // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      15: checkcast     #10                 // class org/apache/http/nio/reactor/IOSession
      18: astore_2
      19: aload_2
      20: ldc           #11                 // String http.connection
      22: invokeinterface #12,  2           // InterfaceMethod org/apache/http/nio/reactor/IOSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      27: checkcast     #13                 // class org/apache/http/nio/conn/ClientAsyncConnection
      30: areturn

  private org.apache.http.nio.conn.ClientAsyncConnection ensureConnection();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #14                 // class org/apache/http/impl/conn/ConnectionShutdownException
      12: dup
      13: invokespecial #15                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      16: athrow
      17: aload_1
      18: invokevirtual #9                  // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      21: checkcast     #10                 // class org/apache/http/nio/reactor/IOSession
      24: astore_2
      25: aload_2
      26: ldc           #11                 // String http.connection
      28: invokeinterface #12,  2           // InterfaceMethod org/apache/http/nio/reactor/IOSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #13                 // class org/apache/http/nio/conn/ClientAsyncConnection
      36: areturn

  private org.apache.http.impl.nio.conn.HttpPoolEntry ensurePoolEntry();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #14                 // class org/apache/http/impl/conn/ConnectionShutdownException
      12: dup
      13: invokespecial #15                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      16: athrow
      17: aload_1
      18: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #17,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.close:()V
      15: return

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #18,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.shutdown:()V
      15: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #19,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.isOpen:()Z
      15: ireturn
      16: iconst_0
      17: ireturn

  public boolean isStale();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isOpen:()Z
       4: ireturn

  public void setSocketTimeout(int);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokeinterface #22,  2           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.setSocketTimeout:(I)V
      12: return

  public int getSocketTimeout();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getSocketTimeout:()I
      11: ireturn

  public org.apache.http.HttpConnectionMetrics getMetrics();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #24,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;
      11: areturn

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getLocalAddress:()Ljava/net/InetAddress;
      11: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #26,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getLocalPort:()I
      11: ireturn

  public java.net.InetAddress getRemoteAddress();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #27,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getRemoteAddress:()Ljava/net/InetAddress;
      11: areturn

  public int getRemotePort();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #28,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getRemotePort:()I
      11: ireturn

  public int getStatus();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #29,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getStatus:()I
      11: ireturn

  public org.apache.http.HttpRequest getHttpRequest();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #30,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getHttpRequest:()Lorg/apache/http/HttpRequest;
      11: areturn

  public org.apache.http.HttpResponse getHttpResponse();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #31,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getHttpResponse:()Lorg/apache/http/HttpResponse;
      11: areturn

  public org.apache.http.protocol.HttpContext getContext();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
      11: areturn

  public void requestInput();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #33,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.requestInput:()V
      11: return

  public void suspendInput();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #34,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.suspendInput:()V
      11: return

  public void requestOutput();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #35,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.requestOutput:()V
      11: return

  public void suspendOutput();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #36,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.suspendOutput:()V
      11: return

  public void submitRequest(org.apache.http.HttpRequest) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #37,  2           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.submitRequest:(Lorg/apache/http/HttpRequest;)V
      12: return

  public boolean isRequestSubmitted();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #38,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.isRequestSubmitted:()Z
      11: ireturn

  public void resetOutput();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.resetOutput:()V
      11: return

  public void resetInput();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #40,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.resetInput:()V
      11: return

  public boolean isSecure();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #41,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getIOSession:()Lorg/apache/http/nio/reactor/IOSession;
      11: instanceof    #42                 // class org/apache/http/nio/reactor/ssl/SSLIOSession
      14: ireturn

  public org.apache.http.conn.routing.HttpRoute getRoute();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: invokevirtual #44                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getEffectiveRoute:()Lorg/apache/http/conn/routing/HttpRoute;
       9: areturn

  public javax.net.ssl.SSLSession getSSLSession();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ensureConnection:()Lorg/apache/http/nio/conn/ClientAsyncConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #41,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getIOSession:()Lorg/apache/http/nio/reactor/IOSession;
      11: astore_2
      12: aload_2
      13: instanceof    #42                 // class org/apache/http/nio/reactor/ssl/SSLIOSession
      16: ifeq          27
      19: aload_2
      20: checkcast     #42                 // class org/apache/http/nio/reactor/ssl/SSLIOSession
      23: invokevirtual #45                 // Method org/apache/http/nio/reactor/ssl/SSLIOSession.getSSLSession:()Ljavax/net/ssl/SSLSession;
      26: areturn
      27: aconst_null
      28: areturn

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: invokevirtual #46                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getState:()Ljava/lang/Object;
       9: areturn

  public void setState(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #47                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.setState:(Ljava/lang/Object;)V
      10: return

  public void markReusable();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field reusable:Z
       5: return

  public void unmarkReusable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field reusable:Z
       5: return

  public boolean isMarkedReusable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field reusable:Z
       4: ireturn

  public void setIdleDuration(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          18
       6: aload_0
       7: aload_3
       8: lload_1
       9: invokevirtual #48                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: putfield      #8                  // Field duration:J
      15: goto          25
      18: aload_0
      19: ldc2_w        #49                 // long -1l
      22: putfield      #8                  // Field duration:J
      25: return

  private org.apache.http.nio.conn.scheme.AsyncSchemeRegistry getSchemeRegistry(org.apache.http.protocol.HttpContext);
    Code:
       0: aload_1
       1: ldc           #51                 // String http.scheme-registry
       3: invokeinterface #52,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #53                 // class org/apache/http/nio/conn/scheme/AsyncSchemeRegistry
      11: astore_2
      12: aload_2
      13: ifnonnull     26
      16: aload_0
      17: getfield      #2                  // Field manager:Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
      20: invokeinterface #54,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnectionManager.getSchemeRegistry:()Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
      25: astore_2
      26: aload_2
      27: areturn

  public synchronized void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore        4
       6: aload         4
       8: invokevirtual #55                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      11: astore        5
      13: aload         5
      15: invokevirtual #56                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      18: ifeq          31
      21: new           #57                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #58                 // String Connection already open
      27: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: invokevirtual #60                 // Method org/apache/http/conn/routing/HttpRoute.getTargetHost:()Lorg/apache/http/HttpHost;
      35: astore        6
      37: aload_1
      38: invokevirtual #61                 // Method org/apache/http/conn/routing/HttpRoute.getProxyHost:()Lorg/apache/http/HttpHost;
      41: astore        7
      43: aload         4
      45: invokevirtual #9                  // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      48: checkcast     #10                 // class org/apache/http/nio/reactor/IOSession
      51: astore        8
      53: aload         7
      55: ifnonnull     93
      58: aload_0
      59: aload_2
      60: invokespecial #62                 // Method getSchemeRegistry:(Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
      63: aload         6
      65: invokevirtual #63                 // Method org/apache/http/nio/conn/scheme/AsyncSchemeRegistry.getScheme:(Lorg/apache/http/HttpHost;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
      68: astore        9
      70: aload         9
      72: invokevirtual #64                 // Method org/apache/http/nio/conn/scheme/AsyncScheme.getLayeringStrategy:()Lorg/apache/http/nio/conn/scheme/LayeringStrategy;
      75: astore        10
      77: aload         10
      79: ifnull        93
      82: aload         10
      84: aload         8
      86: invokeinterface #65,  2           // InterfaceMethod org/apache/http/nio/conn/scheme/LayeringStrategy.layer:(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
      91: astore        8
      93: aload_0
      94: getfield      #3                  // Field connFactory:Lorg/apache/http/nio/conn/ClientAsyncConnectionFactory;
      97: new           #66                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #68                 // String http-outgoing-
     106: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload         4
     111: invokevirtual #70                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getId:()Ljava/lang/String;
     114: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: aload         8
     122: aload_3
     123: invokeinterface #72,  4           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnectionFactory.create:(Ljava/lang/String;Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/nio/conn/ClientAsyncConnection;
     128: astore        9
     130: aload         8
     132: ldc           #11                 // String http.connection
     134: aload         9
     136: invokeinterface #73,  3           // InterfaceMethod org/apache/http/nio/reactor/IOSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     141: aload         7
     143: ifnonnull     164
     146: aload         5
     148: aload         9
     150: invokeinterface #41,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.getIOSession:()Lorg/apache/http/nio/reactor/IOSession;
     155: instanceof    #42                 // class org/apache/http/nio/reactor/ssl/SSLIOSession
     158: invokevirtual #74                 // Method org/apache/http/conn/routing/RouteTracker.connectTarget:(Z)V
     161: goto          172
     164: aload         5
     166: aload         7
     168: iconst_0
     169: invokevirtual #75                 // Method org/apache/http/conn/routing/RouteTracker.connectProxy:(Lorg/apache/http/HttpHost;Z)V
     172: return

  public synchronized void tunnelProxy(org.apache.http.HttpHost, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_3
       5: aload_3
       6: invokevirtual #55                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
       9: astore        4
      11: aload         4
      13: invokevirtual #56                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      16: ifne          29
      19: new           #57                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #76                 // String Connection not open
      25: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload         4
      31: aload_1
      32: iconst_0
      33: invokevirtual #77                 // Method org/apache/http/conn/routing/RouteTracker.tunnelProxy:(Lorg/apache/http/HttpHost;Z)V
      36: return

  public synchronized void tunnelTarget(org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_2
       5: aload_2
       6: invokevirtual #55                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
       9: astore_3
      10: aload_3
      11: invokevirtual #56                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      14: ifne          27
      17: new           #57                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #76                 // String Connection not open
      23: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_3
      28: invokevirtual #78                 // Method org/apache/http/conn/routing/RouteTracker.isTunnelled:()Z
      31: ifeq          44
      34: new           #57                 // class java/lang/IllegalStateException
      37: dup
      38: ldc           #79                 // String Connection is already tunnelled
      40: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_3
      45: iconst_0
      46: invokevirtual #80                 // Method org/apache/http/conn/routing/RouteTracker.tunnelTarget:(Z)V
      49: return

  public synchronized void layerProtocol(org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method ensurePoolEntry:()Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: astore_3
       5: aload_3
       6: invokevirtual #55                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
       9: astore        4
      11: aload         4
      13: invokevirtual #56                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      16: ifne          29
      19: new           #57                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #76                 // String Connection not open
      25: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload         4
      31: invokevirtual #78                 // Method org/apache/http/conn/routing/RouteTracker.isTunnelled:()Z
      34: ifne          47
      37: new           #57                 // class java/lang/IllegalStateException
      40: dup
      41: ldc           #81                 // String Protocol layering without a tunnel not supported
      43: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload         4
      49: invokevirtual #82                 // Method org/apache/http/conn/routing/RouteTracker.isLayered:()Z
      52: ifeq          65
      55: new           #57                 // class java/lang/IllegalStateException
      58: dup
      59: ldc           #83                 // String Multiple protocol layering not supported
      61: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload         4
      67: invokevirtual #84                 // Method org/apache/http/conn/routing/RouteTracker.getTargetHost:()Lorg/apache/http/HttpHost;
      70: astore        5
      72: aload_0
      73: aload_1
      74: invokespecial #62                 // Method getSchemeRegistry:(Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
      77: aload         5
      79: invokevirtual #63                 // Method org/apache/http/nio/conn/scheme/AsyncSchemeRegistry.getScheme:(Lorg/apache/http/HttpHost;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
      82: astore        6
      84: aload         6
      86: invokevirtual #64                 // Method org/apache/http/nio/conn/scheme/AsyncScheme.getLayeringStrategy:()Lorg/apache/http/nio/conn/scheme/LayeringStrategy;
      89: astore        7
      91: aload         7
      93: ifnonnull     127
      96: new           #57                 // class java/lang/IllegalStateException
      99: dup
     100: new           #66                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
     107: aload         6
     109: invokevirtual #85                 // Method org/apache/http/nio/conn/scheme/AsyncScheme.getName:()Ljava/lang/String;
     112: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #86                 // String  scheme does not provider support for protocol layering
     117: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_3
     128: invokevirtual #9                  // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
     131: checkcast     #10                 // class org/apache/http/nio/reactor/IOSession
     134: astore        8
     136: aload         8
     138: ldc           #11                 // String http.connection
     140: invokeinterface #12,  2           // InterfaceMethod org/apache/http/nio/reactor/IOSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
     145: checkcast     #13                 // class org/apache/http/nio/conn/ClientAsyncConnection
     148: astore        9
     150: aload         9
     152: aload         7
     154: aload         8
     156: invokeinterface #65,  2           // InterfaceMethod org/apache/http/nio/conn/scheme/LayeringStrategy.layer:(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/IOSession;
     161: checkcast     #42                 // class org/apache/http/nio/reactor/ssl/SSLIOSession
     164: invokeinterface #87,  2           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.upgrade:(Lorg/apache/http/nio/reactor/IOSession;)V
     169: aload         4
     171: aload         7
     173: invokeinterface #88,  1           // InterfaceMethod org/apache/http/nio/conn/scheme/LayeringStrategy.isSecure:()Z
     178: invokevirtual #89                 // Method org/apache/http/conn/routing/RouteTracker.layerProtocol:(Z)V
     181: return

  public synchronized void releaseConnection();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #2                  // Field manager:Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
      12: aload_0
      13: aload_0
      14: getfield      #8                  // Field duration:J
      17: getstatic     #90                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      20: invokeinterface #91,  5           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnectionManager.releaseConnection:(Lorg/apache/http/nio/conn/ManagedClientAsyncConnection;JLjava/util/concurrent/TimeUnit;)V
      25: aload_0
      26: aconst_null
      27: putfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      30: return

  public synchronized void abortConnection();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #5                  // Field reusable:Z
      13: aload_0
      14: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      17: invokevirtual #9                  // Method org/apache/http/impl/nio/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      20: checkcast     #10                 // class org/apache/http/nio/reactor/IOSession
      23: astore_1
      24: aload_1
      25: ldc           #11                 // String http.connection
      27: invokeinterface #12,  2           // InterfaceMethod org/apache/http/nio/reactor/IOSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #13                 // class org/apache/http/nio/conn/ClientAsyncConnection
      35: astore_2
      36: aload_2
      37: invokeinterface #18,  1           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnection.shutdown:()V
      42: goto          46
      45: astore_3
      46: aload_0
      47: getfield      #2                  // Field manager:Lorg/apache/http/nio/conn/ClientAsyncConnectionManager;
      50: aload_0
      51: aload_0
      52: getfield      #8                  // Field duration:J
      55: getstatic     #90                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      58: invokeinterface #91,  5           // InterfaceMethod org/apache/http/nio/conn/ClientAsyncConnectionManager.releaseConnection:(Lorg/apache/http/nio/conn/ManagedClientAsyncConnection;JLjava/util/concurrent/TimeUnit;)V
      63: aload_0
      64: aconst_null
      65: putfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      68: return
    Exception table:
       from    to  target type
          36    42    45   Class java/io/IOException

  public synchronized java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
       4: ifnull        15
       7: aload_0
       8: getfield      #4                  // Field poolEntry:Lorg/apache/http/impl/nio/conn/HttpPoolEntry;
      11: invokevirtual #93                 // Method org/apache/http/impl/nio/conn/HttpPoolEntry.toString:()Ljava/lang/String;
      14: areturn
      15: ldc           #94                 // String released
      17: areturn
}
