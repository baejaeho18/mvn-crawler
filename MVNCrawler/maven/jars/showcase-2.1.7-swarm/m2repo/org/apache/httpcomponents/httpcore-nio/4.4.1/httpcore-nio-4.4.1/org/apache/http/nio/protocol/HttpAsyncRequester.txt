Compiled from "HttpAsyncRequester.java"
public class org.apache.http.nio.protocol.HttpAsyncRequester {
  private final org.apache.http.protocol.HttpProcessor httpprocessor;

  private final org.apache.http.ConnectionReuseStrategy connReuseStrategy;

  private final org.apache.http.ExceptionLogger exceptionLogger;

  public org.apache.http.nio.protocol.HttpAsyncRequester(org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method "<init>":(Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
       6: return

  public org.apache.http.nio.protocol.HttpAsyncRequester(org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy, org.apache.http.ExceptionLogger);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #7                  // String HTTP processor
       8: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #9                  // class org/apache/http/protocol/HttpProcessor
      14: putfield      #4                  // Field httpprocessor:Lorg/apache/http/protocol/HttpProcessor;
      17: aload_0
      18: aload_2
      19: ifnull        26
      22: aload_2
      23: goto          29
      26: getstatic     #10                 // Field org/apache/http/impl/DefaultConnectionReuseStrategy.INSTANCE:Lorg/apache/http/impl/DefaultConnectionReuseStrategy;
      29: putfield      #3                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      32: aload_0
      33: aload_3
      34: ifnull        41
      37: aload_3
      38: goto          44
      41: getstatic     #11                 // Field org/apache/http/ExceptionLogger.NO_OP:Lorg/apache/http/ExceptionLogger;
      44: putfield      #12                 // Field exceptionLogger:Lorg/apache/http/ExceptionLogger;
      47: return

  public org.apache.http.nio.protocol.HttpAsyncRequester(org.apache.http.protocol.HttpProcessor, org.apache.http.ConnectionReuseStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #13                 // class org/apache/http/ExceptionLogger
       7: invokespecial #14                 // Method "<init>":(Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/ExceptionLogger;)V
      10: return

  public org.apache.http.nio.protocol.HttpAsyncRequester(org.apache.http.protocol.HttpProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #5                  // Method "<init>":(Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
       6: return

  public <T> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.nio.NHttpClientConnection, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<T>);
    Code:
       0: aload_1
       1: ldc           #15                 // String HTTP request producer
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #16                 // String HTTP response consumer
      10: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: ldc           #17                 // String HTTP connection
      17: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload         4
      23: ldc           #18                 // String HTTP context
      25: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: new           #19                 // class org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler
      32: dup
      33: aload_1
      34: aload_2
      35: aload         5
      37: aload         4
      39: aload_3
      40: aload_0
      41: getfield      #4                  // Field httpprocessor:Lorg/apache/http/protocol/HttpProcessor;
      44: aload_0
      45: getfield      #3                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      48: invokespecial #20                 // Method org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      51: astore        6
      53: aload_0
      54: aload         6
      56: aload_3
      57: invokespecial #2                  // Method initExection:(Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;Lorg/apache/http/nio/NHttpClientConnection;)V
      60: aload         6
      62: invokevirtual #21                 // Method org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler.getFuture:()Ljava/util/concurrent/Future;
      65: areturn

  private void initExection(org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_2
       1: invokeinterface #22,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.getContext:()Lorg/apache/http/protocol/HttpContext;
       6: ldc           #23                 // String http.nio.exchange-handler
       8: aload_1
       9: invokeinterface #24,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_2
      15: invokeinterface #25,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.isOpen:()Z
      20: ifne          56
      23: aload_1
      24: new           #26                 // class org/apache/http/ConnectionClosedException
      27: dup
      28: ldc           #27                 // String Connection closed
      30: invokespecial #28                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
      33: invokeinterface #29,  2           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      38: aload_1
      39: invokeinterface #30,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncClientExchangeHandler.close:()V
      44: goto          62
      47: astore_3
      48: aload_0
      49: aload_3
      50: invokevirtual #32                 // Method log:(Ljava/lang/Exception;)V
      53: goto          62
      56: aload_2
      57: invokeinterface #33,  1           // InterfaceMethod org/apache/http/nio/NHttpClientConnection.requestOutput:()V
      62: return
    Exception table:
       from    to  target type
          38    44    47   Class java/io/IOException

  public <T> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.nio.NHttpClientConnection, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokevirtual #34                 // Method execute:(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      10: areturn

  public <T> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #35                 // class org/apache/http/protocol/BasicHttpContext
       7: dup
       8: invokespecial #36                 // Method org/apache/http/protocol/BasicHttpContext."<init>":()V
      11: invokevirtual #37                 // Method execute:(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Ljava/util/concurrent/Future;
      14: areturn

  public <T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<T>);
    Code:
       0: aload_1
       1: ldc           #15                 // String HTTP request producer
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #16                 // String HTTP response consumer
      10: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: ldc           #38                 // String HTTP connection pool
      17: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload         4
      23: ldc           #18                 // String HTTP context
      25: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: new           #39                 // class org/apache/http/concurrent/BasicFuture
      32: dup
      33: aload         5
      35: invokespecial #40                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      38: astore        6
      40: aload_1
      41: invokeinterface #41,  1           // InterfaceMethod org/apache/http/nio/protocol/HttpAsyncRequestProducer.getTarget:()Lorg/apache/http/HttpHost;
      46: astore        7
      48: aload_3
      49: aload         7
      51: aconst_null
      52: new           #42                 // class org/apache/http/nio/protocol/HttpAsyncRequester$ConnRequestCallback
      55: dup
      56: aload_0
      57: aload         6
      59: aload_1
      60: aload_2
      61: aload_3
      62: aload         4
      64: invokespecial #43                 // Method org/apache/http/nio/protocol/HttpAsyncRequester$ConnRequestCallback."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/pool/ConnPool;Lorg/apache/http/protocol/HttpContext;)V
      67: invokeinterface #44,  4           // InterfaceMethod org/apache/http/pool/ConnPool.lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      72: pop
      73: aload         6
      75: areturn

  public <T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> java.util.concurrent.Future<java.util.List<T>> executePipelined(org.apache.http.HttpHost, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncRequestProducer>, java.util.List<? extends org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>>, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<java.util.List<T>>);
    Code:
       0: aload_1
       1: ldc           #45                 // String HTTP target
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #46                 // String Request producer list
      10: invokestatic  #47                 // Method org/apache/http/util/Args.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      13: pop
      14: aload_3
      15: ldc           #48                 // String Response consumer list
      17: invokestatic  #47                 // Method org/apache/http/util/Args.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      20: pop
      21: aload         4
      23: ldc           #38                 // String HTTP connection pool
      25: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: aload         5
      31: ldc           #18                 // String HTTP context
      33: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      36: pop
      37: new           #39                 // class org/apache/http/concurrent/BasicFuture
      40: dup
      41: aload         6
      43: invokespecial #40                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      46: astore        7
      48: aload         4
      50: aload_1
      51: aconst_null
      52: new           #49                 // class org/apache/http/nio/protocol/HttpAsyncRequester$ConnPipelinedRequestCallback
      55: dup
      56: aload_0
      57: aload         7
      59: aload_2
      60: aload_3
      61: aload         4
      63: aload         5
      65: invokespecial #50                 // Method org/apache/http/nio/protocol/HttpAsyncRequester$ConnPipelinedRequestCallback."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/concurrent/BasicFuture;Ljava/util/List;Ljava/util/List;Lorg/apache/http/pool/ConnPool;Lorg/apache/http/protocol/HttpContext;)V
      68: invokeinterface #44,  4           // InterfaceMethod org/apache/http/pool/ConnPool.lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      73: pop
      74: aload         7
      76: areturn

  public <T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, E, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<T>);
    Code:
       0: aload_1
       1: ldc           #15                 // String HTTP request producer
       3: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #16                 // String HTTP response consumer
      10: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload         4
      16: ldc           #38                 // String HTTP connection pool
      18: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_3
      23: ldc           #51                 // String Pool entry
      25: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: aload         5
      31: ldc           #18                 // String HTTP context
      33: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      36: pop
      37: new           #39                 // class org/apache/http/concurrent/BasicFuture
      40: dup
      41: aload         6
      43: invokespecial #40                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      46: astore        7
      48: aload_3
      49: invokevirtual #52                 // Method org/apache/http/pool/PoolEntry.getConnection:()Ljava/lang/Object;
      52: checkcast     #53                 // class org/apache/http/nio/NHttpClientConnection
      55: astore        8
      57: new           #19                 // class org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler
      60: dup
      61: aload_1
      62: aload_2
      63: new           #54                 // class org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback
      66: dup
      67: aload_0
      68: aload         7
      70: aload_3
      71: aload         4
      73: invokespecial #55                 // Method org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/pool/PoolEntry;Lorg/apache/http/pool/ConnPool;)V
      76: aload         5
      78: aload         8
      80: aload_0
      81: getfield      #4                  // Field httpprocessor:Lorg/apache/http/protocol/HttpProcessor;
      84: aload_0
      85: getfield      #3                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      88: invokespecial #20                 // Method org/apache/http/nio/protocol/BasicAsyncClientExchangeHandler."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      91: astore        9
      93: aload_0
      94: aload         9
      96: aload         8
      98: invokespecial #2                  // Method initExection:(Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;Lorg/apache/http/nio/NHttpClientConnection;)V
     101: aload         7
     103: areturn

  public <T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> java.util.concurrent.Future<java.util.List<T>> executePipelined(java.util.List<org.apache.http.nio.protocol.HttpAsyncRequestProducer>, java.util.List<org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>>, E, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext, org.apache.http.concurrent.FutureCallback<java.util.List<T>>);
    Code:
       0: aload_1
       1: ldc           #46                 // String Request producer list
       3: invokestatic  #47                 // Method org/apache/http/util/Args.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
       6: pop
       7: aload_2
       8: ldc           #48                 // String Response consumer list
      10: invokestatic  #47                 // Method org/apache/http/util/Args.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      13: pop
      14: aload         4
      16: ldc           #38                 // String HTTP connection pool
      18: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_3
      23: ldc           #51                 // String Pool entry
      25: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: aload         5
      31: ldc           #18                 // String HTTP context
      33: invokestatic  #8                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      36: pop
      37: new           #39                 // class org/apache/http/concurrent/BasicFuture
      40: dup
      41: aload         6
      43: invokespecial #40                 // Method org/apache/http/concurrent/BasicFuture."<init>":(Lorg/apache/http/concurrent/FutureCallback;)V
      46: astore        7
      48: aload_3
      49: invokevirtual #52                 // Method org/apache/http/pool/PoolEntry.getConnection:()Ljava/lang/Object;
      52: checkcast     #53                 // class org/apache/http/nio/NHttpClientConnection
      55: astore        8
      57: new           #56                 // class org/apache/http/nio/protocol/PipeliningClientExchangeHandler
      60: dup
      61: aload_1
      62: aload_2
      63: new           #54                 // class org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback
      66: dup
      67: aload_0
      68: aload         7
      70: aload_3
      71: aload         4
      73: invokespecial #55                 // Method org/apache/http/nio/protocol/HttpAsyncRequester$RequestExecutionCallback."<init>":(Lorg/apache/http/nio/protocol/HttpAsyncRequester;Lorg/apache/http/concurrent/BasicFuture;Lorg/apache/http/pool/PoolEntry;Lorg/apache/http/pool/ConnPool;)V
      76: aload         5
      78: aload         8
      80: aload_0
      81: getfield      #4                  // Field httpprocessor:Lorg/apache/http/protocol/HttpProcessor;
      84: aload_0
      85: getfield      #3                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
      88: invokespecial #57                 // Method org/apache/http/nio/protocol/PipeliningClientExchangeHandler."<init>":(Ljava/util/List;Ljava/util/List;Lorg/apache/http/concurrent/FutureCallback;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/nio/NHttpClientConnection;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/ConnectionReuseStrategy;)V
      91: astore        9
      93: aload_0
      94: aload         9
      96: aload         8
      98: invokespecial #2                  // Method initExection:(Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;Lorg/apache/http/nio/NHttpClientConnection;)V
     101: aload         7
     103: areturn

  public <T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokevirtual #58                 // Method execute:(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/pool/ConnPool;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      10: areturn

  public <T, E extends org.apache.http.pool.PoolEntry<org.apache.http.HttpHost, org.apache.http.nio.NHttpClientConnection>> java.util.concurrent.Future<T> execute(org.apache.http.nio.protocol.HttpAsyncRequestProducer, org.apache.http.nio.protocol.HttpAsyncResponseConsumer<T>, org.apache.http.pool.ConnPool<org.apache.http.HttpHost, E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #35                 // class org/apache/http/protocol/BasicHttpContext
       7: dup
       8: invokespecial #36                 // Method org/apache/http/protocol/BasicHttpContext."<init>":()V
      11: invokevirtual #59                 // Method execute:(Lorg/apache/http/nio/protocol/HttpAsyncRequestProducer;Lorg/apache/http/nio/protocol/HttpAsyncResponseConsumer;Lorg/apache/http/pool/ConnPool;Lorg/apache/http/protocol/HttpContext;)Ljava/util/concurrent/Future;
      14: areturn

  protected void log(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #12                 // Field exceptionLogger:Lorg/apache/http/ExceptionLogger;
       4: aload_1
       5: invokeinterface #60,  2           // InterfaceMethod org/apache/http/ExceptionLogger.log:(Ljava/lang/Exception;)V
      10: return

  private void close(java.io.Closeable);
    Code:
       0: aload_1
       1: invokeinterface #61,  1           // InterfaceMethod java/io/Closeable.close:()V
       6: goto          15
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #32                 // Method log:(Ljava/lang/Exception;)V
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  static org.apache.http.protocol.HttpProcessor access$000(org.apache.http.nio.protocol.HttpAsyncRequester);
    Code:
       0: aload_0
       1: getfield      #4                  // Field httpprocessor:Lorg/apache/http/protocol/HttpProcessor;
       4: areturn

  static org.apache.http.ConnectionReuseStrategy access$100(org.apache.http.nio.protocol.HttpAsyncRequester);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connReuseStrategy:Lorg/apache/http/ConnectionReuseStrategy;
       4: areturn

  static void access$200(org.apache.http.nio.protocol.HttpAsyncRequester, org.apache.http.nio.protocol.HttpAsyncClientExchangeHandler, org.apache.http.nio.NHttpClientConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method initExection:(Lorg/apache/http/nio/protocol/HttpAsyncClientExchangeHandler;Lorg/apache/http/nio/NHttpClientConnection;)V
       6: return

  static void access$300(org.apache.http.nio.protocol.HttpAsyncRequester, java.io.Closeable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method close:(Ljava/io/Closeable;)V
       5: return
}
