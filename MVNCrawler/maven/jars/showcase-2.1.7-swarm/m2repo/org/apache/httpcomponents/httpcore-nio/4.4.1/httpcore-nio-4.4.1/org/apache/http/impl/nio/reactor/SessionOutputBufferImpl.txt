Compiled from "SessionOutputBufferImpl.java"
public class org.apache.http.impl.nio.reactor.SessionOutputBufferImpl extends org.apache.http.nio.util.ExpandableBuffer implements org.apache.http.nio.reactor.SessionOutputBuffer {
  private static final byte[] CRLF;

  private final java.nio.charset.CharsetEncoder charencoder;

  private final int lineBuffersize;

  private java.nio.CharBuffer charbuffer;

  public org.apache.http.impl.nio.reactor.SessionOutputBufferImpl(int, int, java.nio.charset.CharsetEncoder, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload         4
       4: ifnull        12
       7: aload         4
       9: goto          15
      12: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
      15: invokespecial #2                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
      18: aload_0
      19: iload_2
      20: ldc           #3                  // String Line buffer size
      22: invokestatic  #4                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      25: putfield      #5                  // Field lineBuffersize:I
      28: aload_0
      29: aload_3
      30: putfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
      33: return

  public org.apache.http.impl.nio.reactor.SessionOutputBufferImpl(int, int, org.apache.http.nio.util.ByteBufferAllocator, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: invokespecial #2                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: iload_2
       8: ldc           #3                  // String Line buffer size
      10: invokestatic  #4                  // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      13: putfield      #5                  // Field lineBuffersize:I
      16: aload         4
      18: ldc           #7                  // String http.protocol.element-charset
      20: invokeinterface #8,  2            // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #9                  // class java/lang/String
      28: astore        5
      30: aload         5
      32: invokestatic  #10                 // Method org/apache/http/util/CharsetUtils.lookup:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      35: astore        6
      37: aload         6
      39: ifnull        124
      42: aload_0
      43: aload         6
      45: invokevirtual #11                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      48: putfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
      51: aload         4
      53: ldc           #12                 // String http.malformed.input.action
      55: invokeinterface #8,  2            // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      60: checkcast     #13                 // class java/nio/charset/CodingErrorAction
      63: astore        7
      65: aload_0
      66: getfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
      69: aload         7
      71: ifnull        79
      74: aload         7
      76: goto          82
      79: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
      82: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      85: pop
      86: aload         4
      88: ldc           #16                 // String http.unmappable.input.action
      90: invokeinterface #8,  2            // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      95: checkcast     #13                 // class java/nio/charset/CodingErrorAction
      98: astore        8
     100: aload_0
     101: getfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
     104: aload         8
     106: ifnull        114
     109: aload         8
     111: goto          117
     114: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
     117: invokevirtual #17                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
     120: pop
     121: goto          129
     124: aload_0
     125: aconst_null
     126: putfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
     129: return

  public org.apache.http.impl.nio.reactor.SessionOutputBufferImpl(int, int, org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       6: aload_3
       7: invokespecial #18                 // Method "<init>":(IILorg/apache/http/nio/util/ByteBufferAllocator;Lorg/apache/http/params/HttpParams;)V
      10: return

  public org.apache.http.impl.nio.reactor.SessionOutputBufferImpl(int);
    Code:
       0: aload_0
       1: iload_1
       2: sipush        256
       5: aconst_null
       6: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       9: invokespecial #19                 // Method "<init>":(IILjava/nio/charset/CharsetEncoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      12: return

  public org.apache.http.impl.nio.reactor.SessionOutputBufferImpl(int, int, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: ifnull        14
       7: aload_3
       8: invokevirtual #11                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      11: goto          15
      14: aconst_null
      15: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
      18: invokespecial #19                 // Method "<init>":(IILjava/nio/charset/CharsetEncoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      21: return

  public org.apache.http.impl.nio.reactor.SessionOutputBufferImpl(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: getstatic     #1                  // Field org/apache/http/nio/util/HeapByteBufferAllocator.INSTANCE:Lorg/apache/http/nio/util/HeapByteBufferAllocator;
       7: invokespecial #19                 // Method "<init>":(IILjava/nio/charset/CharsetEncoder;Lorg/apache/http/nio/util/ByteBufferAllocator;)V
      10: return

  public void reset(org.apache.http.params.HttpParams);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method clear:()V
       4: return

  public int flush(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #21                 // String Channel
       3: invokestatic  #22                 // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #23                 // Method setOutputMode:()V
      11: aload_1
      12: aload_0
      13: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      16: invokeinterface #25,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      21: ireturn

  public void write(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #26                 // Method setInputMode:()V
       9: aload_0
      10: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      13: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      16: aload_1
      17: invokevirtual #28                 // Method java/nio/ByteBuffer.remaining:()I
      20: iadd
      21: istore_2
      22: aload_0
      23: iload_2
      24: invokevirtual #29                 // Method ensureCapacity:(I)V
      27: aload_0
      28: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      31: aload_1
      32: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      35: pop
      36: return

  public void write(java.nio.channels.ReadableByteChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #26                 // Method setInputMode:()V
       9: aload_1
      10: aload_0
      11: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokeinterface #31,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      19: pop
      20: return

  private void write(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #26                 // Method setInputMode:()V
       9: iconst_0
      10: istore_2
      11: aload_1
      12: arraylength
      13: istore_3
      14: aload_0
      15: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      21: iload_3
      22: iadd
      23: istore        4
      25: aload_0
      26: iload         4
      28: invokevirtual #29                 // Method ensureCapacity:(I)V
      31: aload_0
      32: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      35: aload_1
      36: iconst_0
      37: iload_3
      38: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      41: pop
      42: return

  private void writeCRLF();
    Code:
       0: aload_0
       1: getstatic     #33                 // Field CRLF:[B
       4: invokespecial #34                 // Method write:([B)V
       7: return

  public void writeLine(org.apache.http.util.CharArrayBuffer) throws java.nio.charset.CharacterCodingException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #26                 // Method setInputMode:()V
       9: aload_1
      10: invokevirtual #35                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      13: ifle          392
      16: aload_0
      17: getfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
      20: ifnonnull     153
      23: aload_0
      24: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      30: aload_1
      31: invokevirtual #35                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      34: iadd
      35: istore_2
      36: aload_0
      37: iload_2
      38: invokevirtual #29                 // Method ensureCapacity:(I)V
      41: aload_0
      42: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      45: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
      48: ifeq          120
      51: aload_0
      52: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      55: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
      58: astore_3
      59: aload_1
      60: invokevirtual #35                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      63: istore        4
      65: aload_0
      66: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
      69: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
      72: istore        5
      74: iconst_0
      75: istore        6
      77: iload         6
      79: iload         4
      81: if_icmpge     104
      84: aload_3
      85: iload         5
      87: iload         6
      89: iadd
      90: aload_1
      91: iload         6
      93: invokevirtual #38                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
      96: i2b
      97: bastore
      98: iinc          6, 1
     101: goto          77
     104: aload_0
     105: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
     108: iload         5
     110: iload         4
     112: iadd
     113: invokevirtual #39                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     116: pop
     117: goto          150
     120: iconst_0
     121: istore_3
     122: iload_3
     123: aload_1
     124: invokevirtual #35                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     127: if_icmpge     150
     130: aload_0
     131: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
     134: aload_1
     135: iload_3
     136: invokevirtual #38                 // Method org/apache/http/util/CharArrayBuffer.charAt:(I)C
     139: i2b
     140: invokevirtual #40                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     143: pop
     144: iinc          3, 1
     147: goto          122
     150: goto          392
     153: aload_0
     154: getfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     157: ifnonnull     171
     160: aload_0
     161: aload_0
     162: getfield      #5                  // Field lineBuffersize:I
     165: invokestatic  #42                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
     168: putfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     171: aload_0
     172: getfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
     175: invokevirtual #43                 // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
     178: pop
     179: aload_1
     180: invokevirtual #35                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     183: istore_2
     184: iconst_0
     185: istore_3
     186: iload_2
     187: ifle          328
     190: aload_0
     191: getfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     194: invokevirtual #44                 // Method java/nio/CharBuffer.remaining:()I
     197: istore        4
     199: iconst_0
     200: istore        5
     202: iload_2
     203: iload         4
     205: if_icmpgt     214
     208: iload_2
     209: istore        4
     211: iconst_1
     212: istore        5
     214: aload_0
     215: getfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     218: aload_1
     219: invokevirtual #45                 // Method org/apache/http/util/CharArrayBuffer.buffer:()[C
     222: iload_3
     223: iload         4
     225: invokevirtual #46                 // Method java/nio/CharBuffer.put:([CII)Ljava/nio/CharBuffer;
     228: pop
     229: aload_0
     230: getfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     233: invokevirtual #47                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     236: pop
     237: iconst_1
     238: istore        6
     240: iload         6
     242: ifeq          307
     245: aload_0
     246: getfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
     249: aload_0
     250: getfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     253: aload_0
     254: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
     257: iload         5
     259: invokevirtual #48                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     262: astore        7
     264: aload         7
     266: invokevirtual #49                 // Method java/nio/charset/CoderResult.isError:()Z
     269: ifeq          277
     272: aload         7
     274: invokevirtual #50                 // Method java/nio/charset/CoderResult.throwException:()V
     277: aload         7
     279: invokevirtual #51                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     282: ifeq          289
     285: aload_0
     286: invokevirtual #52                 // Method expand:()V
     289: aload         7
     291: invokevirtual #53                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
     294: ifne          301
     297: iconst_1
     298: goto          302
     301: iconst_0
     302: istore        6
     304: goto          240
     307: aload_0
     308: getfield      #41                 // Field charbuffer:Ljava/nio/CharBuffer;
     311: invokevirtual #54                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
     314: pop
     315: iload_3
     316: iload         4
     318: iadd
     319: istore_3
     320: iload_2
     321: iload         4
     323: isub
     324: istore_2
     325: goto          186
     328: iconst_1
     329: istore        4
     331: iload         4
     333: ifeq          392
     336: aload_0
     337: getfield      #6                  // Field charencoder:Ljava/nio/charset/CharsetEncoder;
     340: aload_0
     341: getfield      #24                 // Field buffer:Ljava/nio/ByteBuffer;
     344: invokevirtual #55                 // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
     347: astore        5
     349: aload         5
     351: invokevirtual #49                 // Method java/nio/charset/CoderResult.isError:()Z
     354: ifeq          362
     357: aload         5
     359: invokevirtual #50                 // Method java/nio/charset/CoderResult.throwException:()V
     362: aload         5
     364: invokevirtual #51                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     367: ifeq          374
     370: aload_0
     371: invokevirtual #52                 // Method expand:()V
     374: aload         5
     376: invokevirtual #53                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
     379: ifne          386
     382: iconst_1
     383: goto          387
     386: iconst_0
     387: istore        4
     389: goto          331
     392: aload_0
     393: invokespecial #56                 // Method writeCRLF:()V
     396: return

  public void writeLine(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #57                 // Method java/lang/String.length:()I
       9: ifle          37
      12: new           #58                 // class org/apache/http/util/CharArrayBuffer
      15: dup
      16: aload_1
      17: invokevirtual #57                 // Method java/lang/String.length:()I
      20: invokespecial #59                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
      23: astore_2
      24: aload_2
      25: aload_1
      26: invokevirtual #60                 // Method org/apache/http/util/CharArrayBuffer.append:(Ljava/lang/String;)V
      29: aload_0
      30: aload_2
      31: invokevirtual #61                 // Method writeLine:(Lorg/apache/http/util/CharArrayBuffer;)V
      34: goto          44
      37: aload_0
      38: getstatic     #33                 // Field CRLF:[B
      41: invokespecial #34                 // Method write:([B)V
      44: return

  static {};
    Code:
       0: iconst_2
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        13
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        10
      12: bastore
      13: putstatic     #33                 // Field CRLF:[B
      16: return
}
