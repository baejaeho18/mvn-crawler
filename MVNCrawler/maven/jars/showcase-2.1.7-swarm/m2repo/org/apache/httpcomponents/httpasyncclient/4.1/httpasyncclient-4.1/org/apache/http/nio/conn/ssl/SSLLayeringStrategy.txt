Compiled from "SSLLayeringStrategy.java"
public class org.apache.http.nio.conn.ssl.SSLLayeringStrategy implements org.apache.http.nio.conn.scheme.LayeringStrategy {
  public static final java.lang.String TLS;

  public static final java.lang.String SSL;

  public static final java.lang.String SSLV2;

  private final javax.net.ssl.SSLContext sslContext;

  private final org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier;

  public static org.apache.http.nio.conn.ssl.SSLLayeringStrategy getDefaultStrategy();
    Code:
       0: new           #1                  // class org/apache/http/nio/conn/ssl/SSLLayeringStrategy
       3: dup
       4: invokestatic  #2                  // Method org/apache/http/conn/ssl/SSLContexts.createDefault:()Ljavax/net/ssl/SSLContext;
       7: invokespecial #3                  // Method "<init>":(Ljavax/net/ssl/SSLContext;)V
      10: areturn

  public static org.apache.http.nio.conn.ssl.SSLLayeringStrategy getSystemDefaultStrategy();
    Code:
       0: new           #1                  // class org/apache/http/nio/conn/ssl/SSLLayeringStrategy
       3: dup
       4: invokestatic  #4                  // Method org/apache/http/conn/ssl/SSLContexts.createSystemDefault:()Ljavax/net/ssl/SSLContext;
       7: invokespecial #3                  // Method "<init>":(Ljavax/net/ssl/SSLContext;)V
      10: areturn

  private static javax.net.ssl.SSLContext createSSLContext(java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.ssl.TrustStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_0
       5: goto          10
       8: ldc           #5                  // String TLS
      10: astore        6
      12: invokestatic  #6                  // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      15: invokestatic  #7                  // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      18: astore        7
      20: aload         7
      22: aload_1
      23: aload_2
      24: ifnull        34
      27: aload_2
      28: invokevirtual #8                  // Method java/lang/String.toCharArray:()[C
      31: goto          35
      34: aconst_null
      35: invokevirtual #9                  // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      38: aload         7
      40: invokevirtual #10                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      43: astore        8
      45: invokestatic  #11                 // Method javax/net/ssl/TrustManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      48: invokestatic  #12                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
      51: astore        9
      53: aload         9
      55: aload_3
      56: invokevirtual #13                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
      59: aload         9
      61: invokevirtual #14                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      64: astore        10
      66: aload         10
      68: ifnull        127
      71: aload         5
      73: ifnull        127
      76: iconst_0
      77: istore        11
      79: iload         11
      81: aload         10
      83: arraylength
      84: if_icmpge     127
      87: aload         10
      89: iload         11
      91: aaload
      92: astore        12
      94: aload         12
      96: instanceof    #15                 // class javax/net/ssl/X509TrustManager
      99: ifeq          121
     102: aload         10
     104: iload         11
     106: new           #16                 // class org/apache/http/nio/conn/ssl/TrustManagerDecorator
     109: dup
     110: aload         12
     112: checkcast     #15                 // class javax/net/ssl/X509TrustManager
     115: aload         5
     117: invokespecial #17                 // Method org/apache/http/nio/conn/ssl/TrustManagerDecorator."<init>":(Ljavax/net/ssl/X509TrustManager;Lorg/apache/http/conn/ssl/TrustStrategy;)V
     120: aastore
     121: iinc          11, 1
     124: goto          79
     127: aload         6
     129: invokestatic  #18                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
     132: astore        11
     134: aload         11
     136: aload         8
     138: aload         10
     140: aload         4
     142: invokevirtual #19                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
     145: aload         11
     147: areturn

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.ssl.X509HostnameVerifier) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aconst_null
       9: invokestatic  #20                 // Method createSSLContext:(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;)Ljavax/net/ssl/SSLContext;
      12: aload         6
      14: invokespecial #21                 // Method "<init>":(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      17: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.ssl.TrustStrategy, org.apache.http.conn.ssl.X509HostnameVerifier) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #20                 // Method createSSLContext:(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;)Ljavax/net/ssl/SSLContext;
      13: aload         7
      15: invokespecial #21                 // Method "<init>":(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      18: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(java.security.KeyStore, java.lang.String, java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: ldc           #5                  // String TLS
       3: aload_1
       4: aload_2
       5: aload_3
       6: aconst_null
       7: aconst_null
       8: new           #22                 // class org/apache/http/conn/ssl/BrowserCompatHostnameVerifier
      11: dup
      12: invokespecial #23                 // Method org/apache/http/conn/ssl/BrowserCompatHostnameVerifier."<init>":()V
      15: invokespecial #24                 // Method "<init>":(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      18: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(java.security.KeyStore, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: ldc           #5                  // String TLS
       3: aload_1
       4: aload_2
       5: aconst_null
       6: aconst_null
       7: aconst_null
       8: new           #22                 // class org/apache/http/conn/ssl/BrowserCompatHostnameVerifier
      11: dup
      12: invokespecial #23                 // Method org/apache/http/conn/ssl/BrowserCompatHostnameVerifier."<init>":()V
      15: invokespecial #24                 // Method "<init>":(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      18: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: ldc           #5                  // String TLS
       3: aconst_null
       4: aconst_null
       5: aload_1
       6: aconst_null
       7: aconst_null
       8: new           #22                 // class org/apache/http/conn/ssl/BrowserCompatHostnameVerifier
      11: dup
      12: invokespecial #23                 // Method org/apache/http/conn/ssl/BrowserCompatHostnameVerifier."<init>":()V
      15: invokespecial #24                 // Method "<init>":(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      18: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(org.apache.http.conn.ssl.TrustStrategy, org.apache.http.conn.ssl.X509HostnameVerifier) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: ldc           #5                  // String TLS
       3: aconst_null
       4: aconst_null
       5: aconst_null
       6: aconst_null
       7: aload_1
       8: aload_2
       9: invokespecial #24                 // Method "<init>":(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      12: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(org.apache.http.conn.ssl.TrustStrategy) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: aload_0
       1: ldc           #5                  // String TLS
       3: aconst_null
       4: aconst_null
       5: aconst_null
       6: aconst_null
       7: aload_1
       8: new           #22                 // class org/apache/http/conn/ssl/BrowserCompatHostnameVerifier
      11: dup
      12: invokespecial #23                 // Method org/apache/http/conn/ssl/BrowserCompatHostnameVerifier."<init>":()V
      15: invokespecial #24                 // Method "<init>":(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/ssl/TrustStrategy;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      18: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(javax.net.ssl.SSLContext, org.apache.http.conn.ssl.X509HostnameVerifier);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #26                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       9: aload_0
      10: aload_2
      11: putfield      #27                 // Field hostnameVerifier:Lorg/apache/http/conn/ssl/X509HostnameVerifier;
      14: return

  public org.apache.http.nio.conn.ssl.SSLLayeringStrategy(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: new           #22                 // class org/apache/http/conn/ssl/BrowserCompatHostnameVerifier
       5: dup
       6: invokespecial #23                 // Method org/apache/http/conn/ssl/BrowserCompatHostnameVerifier."<init>":()V
       9: invokespecial #21                 // Method "<init>":(Ljavax/net/ssl/SSLContext;Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V
      12: return

  public boolean isSecure();
    Code:
       0: iconst_1
       1: ireturn

  public org.apache.http.nio.reactor.ssl.SSLIOSession layer(org.apache.http.nio.reactor.IOSession);
    Code:
       0: new           #28                 // class org/apache/http/nio/reactor/ssl/SSLIOSession
       3: dup
       4: aload_1
       5: getstatic     #29                 // Field org/apache/http/nio/reactor/ssl/SSLMode.CLIENT:Lorg/apache/http/nio/reactor/ssl/SSLMode;
       8: aload_0
       9: getfield      #26                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      12: new           #30                 // class org/apache/http/nio/conn/ssl/SSLLayeringStrategy$1
      15: dup
      16: aload_0
      17: invokespecial #31                 // Method org/apache/http/nio/conn/ssl/SSLLayeringStrategy$1."<init>":(Lorg/apache/http/nio/conn/ssl/SSLLayeringStrategy;)V
      20: invokespecial #32                 // Method org/apache/http/nio/reactor/ssl/SSLIOSession."<init>":(Lorg/apache/http/nio/reactor/IOSession;Lorg/apache/http/nio/reactor/ssl/SSLMode;Ljavax/net/ssl/SSLContext;Lorg/apache/http/nio/reactor/ssl/SSLSetupHandler;)V
      23: astore_2
      24: aload_1
      25: ldc           #33                 // String http.session.ssl
      27: aload_2
      28: invokeinterface #34,  3           // InterfaceMethod org/apache/http/nio/reactor/IOSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      33: aload_2
      34: areturn

  protected void initializeEngine(javax.net.ssl.SSLEngine);
    Code:
       0: return

  protected void verifySession(org.apache.http.nio.reactor.IOSession, javax.net.ssl.SSLSession) throws javax.net.ssl.SSLException;
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod org/apache/http/nio/reactor/IOSession.getRemoteAddress:()Ljava/net/SocketAddress;
       6: checkcast     #36                 // class java/net/InetSocketAddress
       9: astore_3
      10: aload_2
      11: invokeinterface #37,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPeerCertificates:()[Ljava/security/cert/Certificate;
      16: astore        4
      18: aload         4
      20: iconst_0
      21: aaload
      22: checkcast     #38                 // class java/security/cert/X509Certificate
      25: astore        5
      27: aload_0
      28: getfield      #27                 // Field hostnameVerifier:Lorg/apache/http/conn/ssl/X509HostnameVerifier;
      31: aload_3
      32: invokevirtual #39                 // Method java/net/InetSocketAddress.getHostName:()Ljava/lang/String;
      35: aload         5
      37: invokeinterface #40,  3           // InterfaceMethod org/apache/http/conn/ssl/X509HostnameVerifier.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V
      42: return

  public org.apache.http.nio.reactor.IOSession layer(org.apache.http.nio.reactor.IOSession);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method layer:(Lorg/apache/http/nio/reactor/IOSession;)Lorg/apache/http/nio/reactor/ssl/SSLIOSession;
       5: areturn
}
