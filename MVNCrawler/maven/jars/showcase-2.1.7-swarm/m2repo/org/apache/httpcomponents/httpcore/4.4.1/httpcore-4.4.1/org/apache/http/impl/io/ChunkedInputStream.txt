Compiled from "ChunkedInputStream.java"
public class org.apache.http.impl.io.ChunkedInputStream extends java.io.InputStream {
  private static final int CHUNK_LEN;

  private static final int CHUNK_DATA;

  private static final int CHUNK_CRLF;

  private static final int CHUNK_INVALID;

  private static final int BUFFER_SIZE;

  private final org.apache.http.io.SessionInputBuffer in;

  private final org.apache.http.util.CharArrayBuffer buffer;

  private final org.apache.http.config.MessageConstraints constraints;

  private int state;

  private int chunkSize;

  private int pos;

  private boolean eof;

  private boolean closed;

  private org.apache.http.Header[] footers;

  public org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer, org.apache.http.config.MessageConstraints);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field eof:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field closed:Z
      14: aload_0
      15: iconst_0
      16: anewarray     #4                  // class org/apache/http/Header
      19: putfield      #5                  // Field footers:[Lorg/apache/http/Header;
      22: aload_0
      23: aload_1
      24: ldc           #6                  // String Session input buffer
      26: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #8                  // class org/apache/http/io/SessionInputBuffer
      32: putfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      35: aload_0
      36: iconst_0
      37: putfield      #10                 // Field pos:I
      40: aload_0
      41: new           #11                 // class org/apache/http/util/CharArrayBuffer
      44: dup
      45: bipush        16
      47: invokespecial #12                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
      50: putfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      53: aload_0
      54: aload_2
      55: ifnull        62
      58: aload_2
      59: goto          65
      62: getstatic     #14                 // Field org/apache/http/config/MessageConstraints.DEFAULT:Lorg/apache/http/config/MessageConstraints;
      65: putfield      #15                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
      68: aload_0
      69: iconst_1
      70: putfield      #16                 // Field state:I
      73: return

  public org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #17                 // Method "<init>":(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/config/MessageConstraints;)V
       6: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
       4: instanceof    #18                 // class org/apache/http/io/BufferInfo
       7: ifeq          37
      10: aload_0
      11: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      14: checkcast     #18                 // class org/apache/http/io/BufferInfo
      17: invokeinterface #19,  1           // InterfaceMethod org/apache/http/io/BufferInfo.length:()I
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #20                 // Field chunkSize:I
      28: aload_0
      29: getfield      #10                 // Field pos:I
      32: isub
      33: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      36: ireturn
      37: iconst_0
      38: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          17
       7: new           #22                 // class java/io/IOException
      10: dup
      11: ldc           #23                 // String Attempted read from closed stream.
      13: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field eof:Z
      21: ifeq          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #16                 // Field state:I
      30: iconst_2
      31: if_icmpeq     47
      34: aload_0
      35: invokespecial #25                 // Method nextChunk:()V
      38: aload_0
      39: getfield      #2                  // Field eof:Z
      42: ifeq          47
      45: iconst_m1
      46: ireturn
      47: aload_0
      48: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      51: invokeinterface #26,  1           // InterfaceMethod org/apache/http/io/SessionInputBuffer.read:()I
      56: istore_1
      57: iload_1
      58: iconst_m1
      59: if_icmpeq     88
      62: aload_0
      63: dup
      64: getfield      #10                 // Field pos:I
      67: iconst_1
      68: iadd
      69: putfield      #10                 // Field pos:I
      72: aload_0
      73: getfield      #10                 // Field pos:I
      76: aload_0
      77: getfield      #20                 // Field chunkSize:I
      80: if_icmplt     88
      83: aload_0
      84: iconst_3
      85: putfield      #16                 // Field state:I
      88: iload_1
      89: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          17
       7: new           #22                 // class java/io/IOException
      10: dup
      11: ldc           #23                 // String Attempted read from closed stream.
      13: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field eof:Z
      21: ifeq          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #16                 // Field state:I
      30: iconst_2
      31: if_icmpeq     47
      34: aload_0
      35: invokespecial #25                 // Method nextChunk:()V
      38: aload_0
      39: getfield      #2                  // Field eof:Z
      42: ifeq          47
      45: iconst_m1
      46: ireturn
      47: aload_0
      48: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      51: aload_1
      52: iload_2
      53: iload_3
      54: aload_0
      55: getfield      #20                 // Field chunkSize:I
      58: aload_0
      59: getfield      #10                 // Field pos:I
      62: isub
      63: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      66: invokeinterface #27,  4           // InterfaceMethod org/apache/http/io/SessionInputBuffer.read:([BII)I
      71: istore        4
      73: iload         4
      75: iconst_m1
      76: if_icmpeq     109
      79: aload_0
      80: dup
      81: getfield      #10                 // Field pos:I
      84: iload         4
      86: iadd
      87: putfield      #10                 // Field pos:I
      90: aload_0
      91: getfield      #10                 // Field pos:I
      94: aload_0
      95: getfield      #20                 // Field chunkSize:I
      98: if_icmplt     106
     101: aload_0
     102: iconst_3
     103: putfield      #16                 // Field state:I
     106: iload         4
     108: ireturn
     109: aload_0
     110: iconst_1
     111: putfield      #2                  // Field eof:Z
     114: new           #28                 // class org/apache/http/TruncatedChunkException
     117: dup
     118: new           #29                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #31                 // String Truncated chunk ( expected size:
     127: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: getfield      #20                 // Field chunkSize:I
     134: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     137: ldc           #34                 // String ; actual size:
     139: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_0
     143: getfield      #10                 // Field pos:I
     146: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     149: ldc           #35                 // String )
     151: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokespecial #37                 // Method org/apache/http/TruncatedChunkException."<init>":(Ljava/lang/String;)V
     160: athrow

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #38                 // Method read:([BII)I
       8: ireturn

  private void nextChunk() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field state:I
       4: ldc           #39                 // int 2147483647
       6: if_icmpne     19
       9: new           #40                 // class org/apache/http/MalformedChunkCodingException
      12: dup
      13: ldc           #41                 // String Corrupt data stream
      15: invokespecial #42                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_0
      21: invokespecial #43                 // Method getChunkSize:()I
      24: putfield      #20                 // Field chunkSize:I
      27: aload_0
      28: getfield      #20                 // Field chunkSize:I
      31: ifge          44
      34: new           #40                 // class org/apache/http/MalformedChunkCodingException
      37: dup
      38: ldc           #44                 // String Negative chunk size
      40: invokespecial #42                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: iconst_2
      46: putfield      #16                 // Field state:I
      49: aload_0
      50: iconst_0
      51: putfield      #10                 // Field pos:I
      54: aload_0
      55: getfield      #20                 // Field chunkSize:I
      58: ifne          70
      61: aload_0
      62: iconst_1
      63: putfield      #2                  // Field eof:Z
      66: aload_0
      67: invokespecial #45                 // Method parseTrailerHeaders:()V
      70: goto          82
      73: astore_1
      74: aload_0
      75: ldc           #39                 // int 2147483647
      77: putfield      #16                 // Field state:I
      80: aload_1
      81: athrow
      82: return
    Exception table:
       from    to  target type
          19    70    73   Class org/apache/http/MalformedChunkCodingException

  private int getChunkSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field state:I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 2
                     1: 93
                     3: 32
               default: 182
          }
      32: aload_0
      33: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      36: invokevirtual #46                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
      39: aload_0
      40: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      43: aload_0
      44: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      47: invokeinterface #47,  2           // InterfaceMethod org/apache/http/io/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I
      52: istore_2
      53: iload_2
      54: iconst_m1
      55: if_icmpne     68
      58: new           #40                 // class org/apache/http/MalformedChunkCodingException
      61: dup
      62: ldc           #48                 // String CRLF expected at end of chunk
      64: invokespecial #42                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      72: invokevirtual #49                 // Method org/apache/http/util/CharArrayBuffer.isEmpty:()Z
      75: ifne          88
      78: new           #40                 // class org/apache/http/MalformedChunkCodingException
      81: dup
      82: ldc           #50                 // String Unexpected content at the end of chunk
      84: invokespecial #42                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: iconst_1
      90: putfield      #16                 // Field state:I
      93: aload_0
      94: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      97: invokevirtual #46                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
     100: aload_0
     101: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
     104: aload_0
     105: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     108: invokeinterface #47,  2           // InterfaceMethod org/apache/http/io/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I
     113: istore_3
     114: iload_3
     115: iconst_m1
     116: if_icmpne     129
     119: new           #51                 // class org/apache/http/ConnectionClosedException
     122: dup
     123: ldc           #52                 // String Premature end of chunk coded message body: closing chunk expected
     125: invokespecial #53                 // Method org/apache/http/ConnectionClosedException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: aload_0
     130: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     133: bipush        59
     135: invokevirtual #54                 // Method org/apache/http/util/CharArrayBuffer.indexOf:(I)I
     138: istore        4
     140: iload         4
     142: ifge          154
     145: aload_0
     146: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     149: invokevirtual #55                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     152: istore        4
     154: aload_0
     155: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     158: iconst_0
     159: iload         4
     161: invokevirtual #56                 // Method org/apache/http/util/CharArrayBuffer.substringTrimmed:(II)Ljava/lang/String;
     164: bipush        16
     166: invokestatic  #57                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
     169: ireturn
     170: astore        5
     172: new           #40                 // class org/apache/http/MalformedChunkCodingException
     175: dup
     176: ldc           #59                 // String Bad chunk header
     178: invokespecial #42                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
     181: athrow
     182: new           #60                 // class java/lang/IllegalStateException
     185: dup
     186: ldc           #61                 // String Inconsistent codec state
     188: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     191: athrow
    Exception table:
       from    to  target type
         154   169   170   Class java/lang/NumberFormatException

  private void parseTrailerHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
       5: aload_0
       6: getfield      #15                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
       9: invokevirtual #63                 // Method org/apache/http/config/MessageConstraints.getMaxHeaderCount:()I
      12: aload_0
      13: getfield      #15                 // Field constraints:Lorg/apache/http/config/MessageConstraints;
      16: invokevirtual #64                 // Method org/apache/http/config/MessageConstraints.getMaxLineLength:()I
      19: aconst_null
      20: invokestatic  #65                 // Method org/apache/http/impl/io/AbstractMessageParser.parseHeaders:(Lorg/apache/http/io/SessionInputBuffer;IILorg/apache/http/message/LineParser;)[Lorg/apache/http/Header;
      23: putfield      #5                  // Field footers:[Lorg/apache/http/Header;
      26: goto          68
      29: astore_1
      30: new           #40                 // class org/apache/http/MalformedChunkCodingException
      33: dup
      34: new           #29                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #67                 // String Invalid footer:
      43: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #68                 // Method org/apache/http/HttpException.getMessage:()Ljava/lang/String;
      50: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #42                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      59: astore_2
      60: aload_2
      61: aload_1
      62: invokevirtual #69                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      65: pop
      66: aload_2
      67: athrow
      68: return
    Exception table:
       from    to  target type
           0    26    29   Class org/apache/http/HttpException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifne          66
       7: aload_0
       8: getfield      #2                  // Field eof:Z
      11: ifne          40
      14: aload_0
      15: getfield      #16                 // Field state:I
      18: ldc           #39                 // int 2147483647
      20: if_icmpeq     40
      23: sipush        2048
      26: newarray       byte
      28: astore_1
      29: aload_0
      30: aload_1
      31: invokevirtual #70                 // Method read:([B)I
      34: iflt          40
      37: goto          29
      40: aload_0
      41: iconst_1
      42: putfield      #2                  // Field eof:Z
      45: aload_0
      46: iconst_1
      47: putfield      #3                  // Field closed:Z
      50: goto          66
      53: astore_2
      54: aload_0
      55: iconst_1
      56: putfield      #2                  // Field eof:Z
      59: aload_0
      60: iconst_1
      61: putfield      #3                  // Field closed:Z
      64: aload_2
      65: athrow
      66: return
    Exception table:
       from    to  target type
           7    40    53   any
          53    54    53   any

  public org.apache.http.Header[] getFooters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field footers:[Lorg/apache/http/Header;
       4: invokevirtual #71                 // Method "[Lorg/apache/http/Header;".clone:()Ljava/lang/Object;
       7: checkcast     #72                 // class "[Lorg/apache/http/Header;"
      10: areturn
}
