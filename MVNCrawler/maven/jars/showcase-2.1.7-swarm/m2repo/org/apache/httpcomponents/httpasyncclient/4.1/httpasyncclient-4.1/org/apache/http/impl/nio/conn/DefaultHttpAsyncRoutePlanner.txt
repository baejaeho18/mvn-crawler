Compiled from "DefaultHttpAsyncRoutePlanner.java"
public class org.apache.http.impl.nio.conn.DefaultHttpAsyncRoutePlanner implements org.apache.http.conn.routing.HttpRoutePlanner {
  private final org.apache.http.nio.conn.scheme.AsyncSchemeRegistry schemeRegistry;

  public org.apache.http.impl.nio.conn.DefaultHttpAsyncRoutePlanner(org.apache.http.nio.conn.scheme.AsyncSchemeRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field schemeRegistry:Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
       9: return

  private org.apache.http.nio.conn.scheme.AsyncSchemeRegistry getSchemeRegistry(org.apache.http.protocol.HttpContext);
    Code:
       0: aload_1
       1: ldc           #3                  // String http.scheme-registry
       3: invokeinterface #4,  2            // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #5                  // class org/apache/http/nio/conn/scheme/AsyncSchemeRegistry
      11: astore_2
      12: aload_2
      13: ifnonnull     21
      16: aload_0
      17: getfield      #2                  // Field schemeRegistry:Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
      20: astore_2
      21: aload_2
      22: areturn

  public org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalStateException
       7: dup
       8: ldc           #7                  // String Request may not be null
      10: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: invokeinterface #9,  1            // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
      20: invokestatic  #10                 // Method org/apache/http/conn/params/ConnRouteParams.getForcedRoute:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/routing/HttpRoute;
      23: astore        4
      25: aload         4
      27: ifnull        33
      30: aload         4
      32: areturn
      33: aload_1
      34: ifnonnull     47
      37: new           #6                  // class java/lang/IllegalStateException
      40: dup
      41: ldc           #11                 // String Target host may be null
      43: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_2
      48: invokeinterface #9,  1            // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
      53: invokestatic  #12                 // Method org/apache/http/conn/params/ConnRouteParams.getLocalAddress:(Lorg/apache/http/params/HttpParams;)Ljava/net/InetAddress;
      56: astore        5
      58: aload_2
      59: invokeinterface #9,  1            // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
      64: invokestatic  #13                 // Method org/apache/http/conn/params/ConnRouteParams.getDefaultProxy:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/HttpHost;
      67: astore        6
      69: aload_0
      70: aload_3
      71: invokespecial #14                 // Method getSchemeRegistry:(Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/nio/conn/scheme/AsyncSchemeRegistry;
      74: astore        8
      76: aload         8
      78: aload_1
      79: invokevirtual #15                 // Method org/apache/http/nio/conn/scheme/AsyncSchemeRegistry.getScheme:(Lorg/apache/http/HttpHost;)Lorg/apache/http/nio/conn/scheme/AsyncScheme;
      82: astore        7
      84: goto          102
      87: astore        8
      89: new           #16                 // class org/apache/http/HttpException
      92: dup
      93: aload         8
      95: invokevirtual #17                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
      98: invokespecial #18                 // Method org/apache/http/HttpException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload         7
     104: invokevirtual #19                 // Method org/apache/http/nio/conn/scheme/AsyncScheme.getLayeringStrategy:()Lorg/apache/http/nio/conn/scheme/LayeringStrategy;
     107: astore        8
     109: aload         8
     111: ifnull        128
     114: aload         8
     116: invokeinterface #20,  1           // InterfaceMethod org/apache/http/nio/conn/scheme/LayeringStrategy.isSecure:()Z
     121: ifeq          128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: istore        9
     131: aload         6
     133: ifnonnull     153
     136: new           #21                 // class org/apache/http/conn/routing/HttpRoute
     139: dup
     140: aload_1
     141: aload         5
     143: iload         9
     145: invokespecial #22                 // Method org/apache/http/conn/routing/HttpRoute."<init>":(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Z)V
     148: astore        4
     150: goto          169
     153: new           #21                 // class org/apache/http/conn/routing/HttpRoute
     156: dup
     157: aload_1
     158: aload         5
     160: aload         6
     162: iload         9
     164: invokespecial #23                 // Method org/apache/http/conn/routing/HttpRoute."<init>":(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;Z)V
     167: astore        4
     169: aload         4
     171: areturn
    Exception table:
       from    to  target type
          69    84    87   Class java/lang/IllegalStateException
}
