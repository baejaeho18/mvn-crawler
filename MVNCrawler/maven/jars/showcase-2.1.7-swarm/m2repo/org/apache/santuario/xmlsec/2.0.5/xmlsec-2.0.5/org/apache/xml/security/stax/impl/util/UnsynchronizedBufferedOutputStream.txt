Compiled from "UnsynchronizedBufferedOutputStream.java"
public class org.apache.xml.security.stax.impl.util.UnsynchronizedBufferedOutputStream extends java.io.FilterOutputStream {
  protected byte[] buffer;

  protected int count;

  public org.apache.xml.security.stax.impl.util.UnsynchronizedBufferedOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: sipush        8192
       9: newarray       byte
      11: putfield      #2                  // Field buffer:[B
      14: return

  public org.apache.xml.security.stax.impl.util.UnsynchronizedBufferedOutputStream(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: iload_2
       6: ifgt          19
       9: new           #3                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #4                  // String size must be > 0
      15: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iload_2
      21: newarray       byte
      23: putfield      #2                  // Field buffer:[B
      26: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method flushInternal:()V
       4: aload_0
       5: getfield      #7                  // Field out:Ljava/io/OutputStream;
       8: invokevirtual #8                  // Method java/io/OutputStream.flush:()V
      11: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #2                  // Field buffer:[B
       5: arraylength
       6: if_icmplt     24
       9: aload_0
      10: invokespecial #6                  // Method flushInternal:()V
      13: aload_0
      14: getfield      #7                  // Field out:Ljava/io/OutputStream;
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      23: return
      24: iload_3
      25: aload_0
      26: getfield      #2                  // Field buffer:[B
      29: arraylength
      30: aload_0
      31: getfield      #10                 // Field count:I
      34: isub
      35: if_icmplt     42
      38: aload_0
      39: invokespecial #6                  // Method flushInternal:()V
      42: aload_1
      43: iload_2
      44: aload_0
      45: getfield      #2                  // Field buffer:[B
      48: aload_0
      49: getfield      #10                 // Field count:I
      52: iload_3
      53: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_0
      57: dup
      58: getfield      #10                 // Field count:I
      61: iload_3
      62: iadd
      63: putfield      #10                 // Field count:I
      66: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field count:I
       4: aload_0
       5: getfield      #2                  // Field buffer:[B
       8: arraylength
       9: if_icmpne     33
      12: aload_0
      13: getfield      #7                  // Field out:Ljava/io/OutputStream;
      16: aload_0
      17: getfield      #2                  // Field buffer:[B
      20: iconst_0
      21: aload_0
      22: getfield      #10                 // Field count:I
      25: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      28: aload_0
      29: iconst_0
      30: putfield      #10                 // Field count:I
      33: aload_0
      34: getfield      #2                  // Field buffer:[B
      37: aload_0
      38: dup
      39: getfield      #10                 // Field count:I
      42: dup_x1
      43: iconst_1
      44: iadd
      45: putfield      #10                 // Field count:I
      48: iload_1
      49: i2b
      50: bastore
      51: return

  private void flushInternal() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field count:I
       4: ifle          28
       7: aload_0
       8: getfield      #7                  // Field out:Ljava/io/OutputStream;
      11: aload_0
      12: getfield      #2                  // Field buffer:[B
      15: iconst_0
      16: aload_0
      17: getfield      #10                 // Field count:I
      20: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      23: aload_0
      24: iconst_0
      25: putfield      #10                 // Field count:I
      28: return
}
