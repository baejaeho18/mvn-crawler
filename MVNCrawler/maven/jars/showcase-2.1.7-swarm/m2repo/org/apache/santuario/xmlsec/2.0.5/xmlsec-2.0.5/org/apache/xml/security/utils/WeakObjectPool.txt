Compiled from "WeakObjectPool.java"
public abstract class org.apache.xml.security.utils.WeakObjectPool<T, E extends java.lang.Throwable> {
  private static final java.lang.Integer MARKER_VALUE;

  private final java.util.concurrent.BlockingQueue<java.lang.ref.WeakReference<T>> available;

  private final java.util.Map<T, java.lang.Integer> onLoan;

  protected org.apache.xml.security.utils.WeakObjectPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/LinkedBlockingDeque
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      12: putfield      #4                  // Field available:Ljava/util/concurrent/BlockingQueue;
      15: aload_0
      16: new           #5                  // class java/util/WeakHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/WeakHashMap."<init>":()V
      23: invokestatic  #7                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #8                  // Field onLoan:Ljava/util/Map;
      29: return

  protected abstract T createObject() throws E;

  public T getObject() throws E;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #4                  // Field available:Ljava/util/concurrent/BlockingQueue;
       6: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      11: checkcast     #10                 // class java/lang/ref/WeakReference
      14: astore_1
      15: aload_1
      16: ifnull        28
      19: aload_1
      20: invokevirtual #11                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      23: dup
      24: astore_2
      25: ifnull        2
      28: aload_2
      29: ifnonnull     37
      32: aload_0
      33: invokevirtual #12                 // Method createObject:()Ljava/lang/Object;
      36: astore_2
      37: aload_0
      38: getfield      #8                  // Field onLoan:Ljava/util/Map;
      41: aload_2
      42: getstatic     #13                 // Field MARKER_VALUE:Ljava/lang/Integer;
      45: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_2
      52: areturn

  public boolean repool(T);
    Code:
       0: aload_1
       1: ifnull        64
       4: aload_0
       5: getfield      #8                  // Field onLoan:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #15,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          64
      17: aload_1
      18: dup
      19: astore_2
      20: monitorenter
      21: aload_0
      22: getfield      #8                  // Field onLoan:Ljava/util/Map;
      25: aload_1
      26: invokeinterface #16,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      31: ifnull        54
      34: aload_0
      35: getfield      #4                  // Field available:Ljava/util/concurrent/BlockingQueue;
      38: new           #10                 // class java/lang/ref/WeakReference
      41: dup
      42: aload_1
      43: invokespecial #17                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;)Z
      51: aload_2
      52: monitorexit
      53: ireturn
      54: aload_2
      55: monitorexit
      56: goto          64
      59: astore_3
      60: aload_2
      61: monitorexit
      62: aload_3
      63: athrow
      64: iconst_0
      65: ireturn
    Exception table:
       from    to  target type
          21    53    59   any
          54    56    59   any
          59    62    59   any

  static {};
    Code:
       0: ldc           #19                 // int 2147483647
       2: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putstatic     #13                 // Field MARKER_VALUE:Ljava/lang/Integer;
       8: return
}
