Compiled from "LogDisplayWrapper.java"
public class org.apache.velocity.runtime.log.LogDisplayWrapper extends org.apache.velocity.runtime.log.Log {
  private final java.lang.String prefix;

  private final boolean outputMessages;

  private final org.apache.velocity.runtime.log.Log log;

  public org.apache.velocity.runtime.log.LogDisplayWrapper(org.apache.velocity.runtime.log.Log, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/apache/velocity/runtime/log/Log.getLogChute:()Lorg/apache/velocity/runtime/log/LogChute;
       5: invokespecial #2                  // Method org/apache/velocity/runtime/log/Log."<init>":(Lorg/apache/velocity/runtime/log/LogChute;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field log:Lorg/apache/velocity/runtime/log/Log;
      13: aload_0
      14: aload_2
      15: putfield      #4                  // Field prefix:Ljava/lang/String;
      18: aload_0
      19: iload_3
      20: putfield      #5                  // Field outputMessages:Z
      23: return

  protected org.apache.velocity.runtime.log.LogChute getLogChute();
    Code:
       0: aload_0
       1: getfield      #3                  // Field log:Lorg/apache/velocity/runtime/log/Log;
       4: invokevirtual #1                  // Method org/apache/velocity/runtime/log/Log.getLogChute:()Lorg/apache/velocity/runtime/log/LogChute;
       7: areturn

  protected void log(int, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field outputMessages:Z
       5: iload_1
       6: aload_2
       7: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
      10: return

  protected void log(boolean, int, java.lang.Object);
    Code:
       0: iload_1
       1: ifeq          38
       4: aload_0
       5: invokevirtual #7                  // Method getLogChute:()Lorg/apache/velocity/runtime/log/LogChute;
       8: iload_2
       9: new           #8                  // class java/lang/StringBuffer
      12: dup
      13: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      16: aload_0
      17: getfield      #4                  // Field prefix:Ljava/lang/String;
      20: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: aload_3
      24: invokestatic  #11                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      27: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: invokevirtual #12                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: invokeinterface #13,  3           // InterfaceMethod org/apache/velocity/runtime/log/LogChute.log:(ILjava/lang/String;)V
      38: return

  protected void log(int, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field outputMessages:Z
       5: iload_1
       6: aload_2
       7: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
      10: return

  protected void log(boolean, int, java.lang.Object, java.lang.Throwable);
    Code:
       0: iload_1
       1: ifeq          40
       4: aload_0
       5: invokevirtual #7                  // Method getLogChute:()Lorg/apache/velocity/runtime/log/LogChute;
       8: iload_2
       9: new           #8                  // class java/lang/StringBuffer
      12: dup
      13: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
      16: aload_0
      17: getfield      #4                  // Field prefix:Ljava/lang/String;
      20: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: aload_3
      24: invokestatic  #11                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      27: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: invokevirtual #12                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: aload         4
      35: invokeinterface #14,  4           // InterfaceMethod org/apache/velocity/runtime/log/LogChute.log:(ILjava/lang/String;Ljava/lang/Throwable;)V
      40: return

  public void trace(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_m1
       3: aload_2
       4: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
       7: return

  public void trace(boolean, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_m1
       3: aload_2
       4: aload_3
       5: invokevirtual #15                 // Method log:(ZILjava/lang/Object;Ljava/lang/Throwable;)V
       8: return

  public void debug(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: aload_2
       4: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
       7: return

  public void debug(boolean, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: aload_2
       4: aload_3
       5: invokevirtual #15                 // Method log:(ZILjava/lang/Object;Ljava/lang/Throwable;)V
       8: return

  public void info(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: aload_2
       4: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
       7: return

  public void info(boolean, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: aload_2
       4: aload_3
       5: invokevirtual #15                 // Method log:(ZILjava/lang/Object;Ljava/lang/Throwable;)V
       8: return

  public void warn(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: aload_2
       4: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
       7: return

  public void warn(boolean, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: aload_2
       4: aload_3
       5: invokevirtual #15                 // Method log:(ZILjava/lang/Object;Ljava/lang/Throwable;)V
       8: return

  public void error(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: aload_2
       4: invokevirtual #6                  // Method log:(ZILjava/lang/Object;)V
       7: return

  public void error(boolean, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: aload_2
       4: aload_3
       5: invokevirtual #15                 // Method log:(ZILjava/lang/Object;Ljava/lang/Throwable;)V
       8: return
}
