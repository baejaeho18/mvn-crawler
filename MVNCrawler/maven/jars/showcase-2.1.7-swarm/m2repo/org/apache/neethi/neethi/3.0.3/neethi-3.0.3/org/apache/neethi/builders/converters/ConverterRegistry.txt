Compiled from "ConverterRegistry.java"
public class org.apache.neethi.builders.converters.ConverterRegistry {
  private static final boolean HAS_AXIOM;

  private java.util.List<org.apache.neethi.builders.converters.ConverterRegistry$ConverterKey> registeredConverters;

  public org.apache.neethi.builders.converters.ConverterRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field registeredConverters:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class org/apache/neethi/builders/converters/DOMToDOMConverter
      19: dup
      20: invokespecial #6                  // Method org/apache/neethi/builders/converters/DOMToDOMConverter."<init>":()V
      23: invokevirtual #7                  // Method registerConverter:(Lorg/apache/neethi/builders/converters/Converter;)V
      26: aload_0
      27: new           #8                  // class org/apache/neethi/builders/converters/StaxToStaxConverter
      30: dup
      31: invokespecial #9                  // Method org/apache/neethi/builders/converters/StaxToStaxConverter."<init>":()V
      34: invokevirtual #7                  // Method registerConverter:(Lorg/apache/neethi/builders/converters/Converter;)V
      37: getstatic     #10                 // Field HAS_AXIOM:Z
      40: ifeq          49
      43: aload_0
      44: ldc           #11                 // String org.apache.neethi.builders.converters.OMToOMConverter
      46: invokespecial #12                 // Method registerConverter:(Ljava/lang/String;)V
      49: aload_0
      50: new           #13                 // class org/apache/neethi/builders/converters/StaxToDOMConverter
      53: dup
      54: invokespecial #14                 // Method org/apache/neethi/builders/converters/StaxToDOMConverter."<init>":()V
      57: invokevirtual #7                  // Method registerConverter:(Lorg/apache/neethi/builders/converters/Converter;)V
      60: aload_0
      61: new           #15                 // class org/apache/neethi/builders/converters/DOMToStaxConverter
      64: dup
      65: invokespecial #16                 // Method org/apache/neethi/builders/converters/DOMToStaxConverter."<init>":()V
      68: invokevirtual #7                  // Method registerConverter:(Lorg/apache/neethi/builders/converters/Converter;)V
      71: getstatic     #10                 // Field HAS_AXIOM:Z
      74: ifeq          101
      77: aload_0
      78: ldc           #17                 // String org.apache.neethi.builders.converters.DOMToOMConverter
      80: invokespecial #12                 // Method registerConverter:(Ljava/lang/String;)V
      83: aload_0
      84: ldc           #18                 // String org.apache.neethi.builders.converters.OMToDOMConverter
      86: invokespecial #12                 // Method registerConverter:(Ljava/lang/String;)V
      89: aload_0
      90: ldc           #19                 // String org.apache.neethi.builders.converters.StaxToOMConverter
      92: invokespecial #12                 // Method registerConverter:(Ljava/lang/String;)V
      95: aload_0
      96: ldc           #20                 // String org.apache.neethi.builders.converters.OMToStaxConverter
      98: invokespecial #12                 // Method registerConverter:(Ljava/lang/String;)V
     101: return

  private void registerConverter(java.lang.String);
    Code:
       0: aload_1
       1: iconst_1
       2: ldc_w         #21                 // class org/apache/neethi/builders/converters/Converter
       5: invokevirtual #22                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #23                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      11: invokevirtual #24                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      14: checkcast     #21                 // class org/apache/neethi/builders/converters/Converter
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokevirtual #7                  // Method registerConverter:(Lorg/apache/neethi/builders/converters/Converter;)V
      23: goto          27
      26: astore_2
      27: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Throwable

  private static org.apache.neethi.builders.converters.ConverterRegistry$ConverterKey createConverterKey(org.apache.neethi.builders.converters.Converter<?, ?>, java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_2
       9: arraylength
      10: if_icmpge     92
      13: aload_2
      14: iload_3
      15: aaload
      16: ldc_w         #21                 // class org/apache/neethi/builders/converters/Converter
      19: if_acmpne     86
      22: aload_1
      23: invokevirtual #27                 // Method java/lang/Class.getGenericInterfaces:()[Ljava/lang/reflect/Type;
      26: iload_3
      27: aaload
      28: checkcast     #28                 // class java/lang/reflect/ParameterizedType
      31: astore        4
      33: new           #29                 // class org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey
      36: dup
      37: aconst_null
      38: invokespecial #30                 // Method org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey."<init>":(Lorg/apache/neethi/builders/converters/ConverterRegistry$1;)V
      41: astore        5
      43: aload         5
      45: aload         4
      47: invokeinterface #31,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      52: iconst_0
      53: aaload
      54: checkcast     #32                 // class java/lang/Class
      57: putfield      #33                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.src:Ljava/lang/Class;
      60: aload         5
      62: aload         4
      64: invokeinterface #31,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      69: iconst_1
      70: aaload
      71: checkcast     #32                 // class java/lang/Class
      74: putfield      #34                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.target:Ljava/lang/Class;
      77: aload         5
      79: aload_0
      80: putfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      83: aload         5
      85: areturn
      86: iinc          3, 1
      89: goto          7
      92: aload_1
      93: invokevirtual #36                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      96: ifnull        108
      99: aload_0
     100: aload_1
     101: invokevirtual #36                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     104: invokestatic  #37                 // Method createConverterKey:(Lorg/apache/neethi/builders/converters/Converter;Ljava/lang/Class;)Lorg/apache/neethi/builders/converters/ConverterRegistry$ConverterKey;
     107: areturn
     108: aconst_null
     109: areturn

  public final void registerConverter(org.apache.neethi.builders.converters.Converter<?, ?>);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokestatic  #37                 // Method createConverterKey:(Lorg/apache/neethi/builders/converters/Converter;Ljava/lang/Class;)Lorg/apache/neethi/builders/converters/ConverterRegistry$ConverterKey;
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field registeredConverters:Ljava/util/List;
      13: aload_2
      14: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  public javax.xml.namespace.QName findQName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method findCompatibleConverter:(Ljava/lang/Object;)Lorg/apache/neethi/builders/converters/ConverterRegistry$ConverterKey;
       5: astore_2
       6: aload_2
       7: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      10: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: ldc           #41                 // String getQName
      15: iconst_1
      16: anewarray     #32                 // class java/lang/Class
      19: dup
      20: iconst_0
      21: aload_2
      22: getfield      #33                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.src:Ljava/lang/Class;
      25: aastore
      26: invokevirtual #42                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      29: aload_2
      30: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      33: iconst_1
      34: anewarray     #43                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_1
      40: aastore
      41: invokevirtual #44                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #45                 // class javax/xml/namespace/QName
      47: areturn
      48: astore_3
      49: aload_3
      50: invokevirtual #47                 // Method java/lang/Exception.printStackTrace:()V
      53: aconst_null
      54: areturn
    Exception table:
       from    to  target type
           6    47    48   Class java/lang/Exception

  public java.util.Map<javax.xml.namespace.QName, java.lang.String> getAttributes(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method findCompatibleConverter:(Ljava/lang/Object;)Lorg/apache/neethi/builders/converters/ConverterRegistry$ConverterKey;
       5: astore_2
       6: aload_2
       7: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      10: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: ldc           #48                 // String getAttributes
      15: iconst_1
      16: anewarray     #32                 // class java/lang/Class
      19: dup
      20: iconst_0
      21: aload_2
      22: getfield      #33                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.src:Ljava/lang/Class;
      25: aastore
      26: invokevirtual #42                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      29: aload_2
      30: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      33: iconst_1
      34: anewarray     #43                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_1
      40: aastore
      41: invokevirtual #44                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #49                 // class java/util/Map
      47: areturn
      48: astore_3
      49: aload_3
      50: invokevirtual #47                 // Method java/lang/Exception.printStackTrace:()V
      53: aconst_null
      54: areturn
    Exception table:
       from    to  target type
           6    47    48   Class java/lang/Exception

  public java.util.Iterator<java.lang.Object> getChildElements(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method findCompatibleConverter:(Ljava/lang/Object;)Lorg/apache/neethi/builders/converters/ConverterRegistry$ConverterKey;
       5: astore_2
       6: aload_2
       7: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      10: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: ldc           #50                 // String getChildren
      15: iconst_1
      16: anewarray     #32                 // class java/lang/Class
      19: dup
      20: iconst_0
      21: aload_2
      22: getfield      #33                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.src:Ljava/lang/Class;
      25: aastore
      26: invokevirtual #42                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      29: aload_2
      30: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      33: iconst_1
      34: anewarray     #43                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_1
      40: aastore
      41: invokevirtual #44                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #51                 // class java/util/Iterator
      47: areturn
      48: astore_3
      49: aload_3
      50: invokevirtual #47                 // Method java/lang/Exception.printStackTrace:()V
      53: aconst_null
      54: areturn
    Exception table:
       from    to  target type
           6    47    48   Class java/lang/Exception

  public <S, T> T convert(S, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registeredConverters:Ljava/util/List;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          73
      19: aload_3
      20: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #29                 // class org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey
      28: astore        4
      30: aload         4
      32: getfield      #33                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.src:Ljava/lang/Class;
      35: aload_1
      36: invokevirtual #55                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      39: ifeq          70
      42: aload         4
      44: getfield      #34                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.target:Ljava/lang/Class;
      47: aload_2
      48: invokevirtual #56                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      51: ifeq          70
      54: aload         4
      56: getfield      #35                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.converter:Lorg/apache/neethi/builders/converters/Converter;
      59: astore        5
      61: aload         5
      63: aload_1
      64: invokeinterface #57,  2           // InterfaceMethod org/apache/neethi/builders/converters/Converter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn
      70: goto          10
      73: new           #58                 // class java/lang/RuntimeException
      76: dup
      77: new           #59                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #61                 // String Could not find a converter to convert from
      86: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      93: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: ldc           #64                 // String  to
      98: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_2
     102: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     111: athrow

  private org.apache.neethi.builders.converters.ConverterRegistry$ConverterKey findCompatibleConverter(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registeredConverters:Ljava/util/List;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #29                 // class org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey
      28: astore_3
      29: aload_3
      30: getfield      #33                 // Field org/apache/neethi/builders/converters/ConverterRegistry$ConverterKey.src:Ljava/lang/Class;
      33: aload_1
      34: invokevirtual #55                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: new           #58                 // class java/lang/RuntimeException
      48: dup
      49: new           #59                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #67                 // String Could not find a converter to handle
      58: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      74: athrow

  static {};
    Code:
       0: iconst_1
       1: istore_0
       2: ldc           #68                 // String org.apache.axiom.om.OMElement
       4: iconst_1
       5: ldc_w         #21                 // class org/apache/neethi/builders/converters/Converter
       8: invokevirtual #22                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      11: invokestatic  #23                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      14: pop
      15: goto          21
      18: astore_1
      19: iconst_0
      20: istore_0
      21: iload_0
      22: putstatic     #10                 // Field HAS_AXIOM:Z
      25: return
    Exception table:
       from    to  target type
           2    15    18   Class java/lang/Throwable
}
