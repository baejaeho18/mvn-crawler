Compiled from "PrimitiveAssertion.java"
public class org.apache.neethi.builders.PrimitiveAssertion implements org.apache.neethi.Assertion {
  protected javax.xml.namespace.QName name;

  protected boolean optional;

  protected boolean ignorable;

  protected java.lang.String textValue;

  protected java.util.Map<javax.xml.namespace.QName, java.lang.String> attributes;

  public org.apache.neethi.builders.PrimitiveAssertion();
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #1                  // class javax/xml/namespace/QName
       5: invokespecial #2                  // Method "<init>":(Ljavax/xml/namespace/QName;)V
       8: return

  public org.apache.neethi.builders.PrimitiveAssertion(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method "<init>":(Ljavax/xml/namespace/QName;Z)V
       6: return

  public org.apache.neethi.builders.PrimitiveAssertion(javax.xml.namespace.QName, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #4                  // Method "<init>":(Ljavax/xml/namespace/QName;ZZ)V
       7: return

  public org.apache.neethi.builders.PrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: aconst_null
       6: invokespecial #5                  // Method "<init>":(Ljavax/xml/namespace/QName;ZZLjava/util/Map;Ljava/lang/String;)V
       9: return

  public org.apache.neethi.builders.PrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean, java.util.Map<javax.xml.namespace.QName, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #5                  // Method "<init>":(Ljavax/xml/namespace/QName;ZZLjava/util/Map;Ljava/lang/String;)V
      10: return

  public org.apache.neethi.builders.PrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean, java.util.Map<javax.xml.namespace.QName, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field name:Ljavax/xml/namespace/QName;
       9: aload_0
      10: iload_2
      11: putfield      #8                  // Field optional:Z
      14: aload_0
      15: iload_3
      16: putfield      #9                  // Field ignorable:Z
      19: aload         4
      21: ifnull        37
      24: aload_0
      25: new           #10                 // class java/util/HashMap
      28: dup
      29: aload         4
      31: invokespecial #11                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      34: putfield      #12                 // Field attributes:Ljava/util/Map;
      37: aload_0
      38: aload         5
      40: putfield      #13                 // Field textValue:Ljava/lang/String;
      43: return

  public java.lang.String getAttribute(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #12                 // Field attributes:Ljava/util/Map;
       4: ifnull        21
       7: aload_0
       8: getfield      #12                 // Field attributes:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #15                 // class java/lang/String
      20: areturn
      21: aconst_null
      22: areturn

  public synchronized void addAttribute(javax.xml.namespace.QName, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field attributes:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      15: putfield      #12                 // Field attributes:Ljava/util/Map;
      18: aload_0
      19: getfield      #12                 // Field attributes:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public synchronized void addAttributes(java.util.Map<javax.xml.namespace.QName, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field attributes:Ljava/util/Map;
       4: ifnonnull     22
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: aload_1
      13: invokespecial #11                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      16: putfield      #12                 // Field attributes:Ljava/util/Map;
      19: goto          32
      22: aload_0
      23: getfield      #12                 // Field attributes:Ljava/util/Map;
      26: aload_1
      27: invokeinterface #18,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      32: return

  public java.lang.String getTextValue();
    Code:
       0: aload_0
       1: getfield      #13                 // Field textValue:Ljava/lang/String;
       4: areturn

  public void setTextValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field textValue:Ljava/lang/String;
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
       4: invokevirtual #19                 // Method javax/xml/namespace/QName.toString:()Ljava/lang/String;
       7: areturn

  public boolean equal(org.apache.neethi.PolicyComponent);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: invokeinterface #20,  1           // InterfaceMethod org/apache/neethi/PolicyComponent.getType:()S
      13: iconst_5
      14: if_icmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: invokevirtual #21                 // Method getName:()Ljavax/xml/namespace/QName;
      23: aload_1
      24: checkcast     #22                 // class org/apache/neethi/Assertion
      27: invokeinterface #23,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      32: invokevirtual #24                 // Method javax/xml/namespace/QName.equals:(Ljava/lang/Object;)Z
      35: ireturn

  public short getType();
    Code:
       0: iconst_5
       1: ireturn

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
       4: areturn

  public void setName(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field name:Ljavax/xml/namespace/QName;
       5: return

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #8                  // Field optional:Z
       4: ireturn

  public void setOptional(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field optional:Z
       5: return

  public boolean isIgnorable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ignorable:Z
       4: ireturn

  public void setIgnorable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field ignorable:Z
       5: return

  public org.apache.neethi.PolicyComponent normalize();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method isOptional:()Z
       4: ifeq          63
       7: new           #26                 // class org/apache/neethi/Policy
      10: dup
      11: invokespecial #27                 // Method org/apache/neethi/Policy."<init>":()V
      14: astore_1
      15: new           #28                 // class org/apache/neethi/ExactlyOne
      18: dup
      19: invokespecial #29                 // Method org/apache/neethi/ExactlyOne."<init>":()V
      22: astore_2
      23: new           #30                 // class org/apache/neethi/All
      26: dup
      27: invokespecial #31                 // Method org/apache/neethi/All."<init>":()V
      30: astore_3
      31: aload_3
      32: aload_0
      33: iconst_0
      34: invokevirtual #32                 // Method clone:(Z)Lorg/apache/neethi/Assertion;
      37: invokevirtual #33                 // Method org/apache/neethi/All.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      40: aload_2
      41: aload_3
      42: invokevirtual #34                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      45: aload_2
      46: new           #30                 // class org/apache/neethi/All
      49: dup
      50: invokespecial #31                 // Method org/apache/neethi/All."<init>":()V
      53: invokevirtual #34                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      56: aload_1
      57: aload_2
      58: invokevirtual #35                 // Method org/apache/neethi/Policy.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      61: aload_1
      62: areturn
      63: aload_0
      64: iconst_0
      65: invokevirtual #32                 // Method clone:(Z)Lorg/apache/neethi/Assertion;
      68: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method org/apache/neethi/Constants.findPolicyNamespace:(Ljavax/xml/stream/XMLStreamWriter;)Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: aload_0
       7: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
      10: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      13: invokeinterface #38,  2           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getPrefix:(Ljava/lang/String;)Ljava/lang/String;
      18: astore_3
      19: iconst_0
      20: istore        4
      22: aload_3
      23: ifnonnull     62
      26: aload_0
      27: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
      30: invokevirtual #39                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      33: ifnull        62
      36: ldc           #40                 // String
      38: aload_0
      39: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
      42: invokevirtual #39                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      45: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifne          62
      51: aload_0
      52: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
      55: invokevirtual #39                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      58: astore_3
      59: iconst_1
      60: istore        4
      62: ldc           #40                 // String
      64: aload_3
      65: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          75
      71: aload_3
      72: ifnonnull     81
      75: ldc           #40                 // String
      77: astore_3
      78: iconst_1
      79: istore        4
      81: aload_0
      82: invokevirtual #42                 // Method hasContents:()Z
      85: ifne          122
      88: aload_0
      89: getfield      #12                 // Field attributes:Ljava/util/Map;
      92: ifnonnull     122
      95: iload         4
      97: ifne          122
     100: aload_1
     101: aload_3
     102: aload_0
     103: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
     106: invokevirtual #43                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     109: aload_0
     110: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
     113: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     116: invokeinterface #44,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEmptyElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     121: return
     122: aload_1
     123: aload_3
     124: aload_0
     125: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
     128: invokevirtual #43                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     131: aload_0
     132: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
     135: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     138: invokeinterface #45,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeStartElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     143: iload         4
     145: ifeq          220
     148: ldc           #40                 // String
     150: aload_3
     151: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     154: ifne          161
     157: aload_3
     158: ifnonnull     177
     161: aload_1
     162: aload_0
     163: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
     166: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     169: invokeinterface #46,  2           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeDefaultNamespace:(Ljava/lang/String;)V
     174: goto          220
     177: aload_0
     178: getfield      #12                 // Field attributes:Ljava/util/Map;
     181: ifnull        206
     184: aload_0
     185: getfield      #12                 // Field attributes:Ljava/util/Map;
     188: new           #1                  // class javax/xml/namespace/QName
     191: dup
     192: ldc           #47                 // String http://www.w3.org/2000/xmlns/
     194: aload_3
     195: invokespecial #48                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     198: invokeinterface #49,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     203: ifne          220
     206: aload_1
     207: aload_3
     208: aload_0
     209: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
     212: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     215: invokeinterface #50,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V
     220: aload_0
     221: getfield      #8                  // Field optional:Z
     224: ifeq          238
     227: aload_1
     228: aload_2
     229: ldc           #51                 // String Optional
     231: ldc           #52                 // String true
     233: invokeinterface #53,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     238: aload_0
     239: getfield      #9                  // Field ignorable:Z
     242: ifeq          256
     245: aload_1
     246: aload_2
     247: ldc           #54                 // String Ignorable
     249: ldc           #52                 // String true
     251: invokeinterface #53,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     256: aload_0
     257: aload_1
     258: invokevirtual #55                 // Method writeAttributes:(Ljavax/xml/stream/XMLStreamWriter;)V
     261: aload_0
     262: aload_1
     263: invokevirtual #56                 // Method writeContents:(Ljavax/xml/stream/XMLStreamWriter;)V
     266: aload_1
     267: invokeinterface #57,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEndElement:()V
     272: return

  protected void writeContents(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field textValue:Ljava/lang/String;
       4: ifnull        17
       7: aload_1
       8: aload_0
       9: getfield      #13                 // Field textValue:Ljava/lang/String;
      12: invokeinterface #58,  2           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeCharacters:(Ljava/lang/String;)V
      17: return

  protected boolean hasContents();
    Code:
       0: aload_0
       1: getfield      #13                 // Field textValue:Ljava/lang/String;
       4: ifnull        23
       7: ldc           #40                 // String
       9: aload_0
      10: getfield      #13                 // Field textValue:Ljava/lang/String;
      13: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  protected void writeAttributes(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field attributes:Ljava/util/Map;
       4: ifnull        249
       7: aload_0
       8: getfield      #12                 // Field attributes:Ljava/util/Map;
      11: invokeinterface #59,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #60,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          249
      31: aload_2
      32: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #63                 // class java/util/Map$Entry
      40: astore_3
      41: aload_3
      42: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #1                  // class javax/xml/namespace/QName
      50: invokestatic  #65                 // Method org/apache/neethi/Constants.isIgnorableAttribute:(Ljavax/xml/namespace/QName;)Z
      53: ifeq          59
      56: goto          22
      59: aload_3
      60: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: checkcast     #1                  // class javax/xml/namespace/QName
      68: invokestatic  #66                 // Method org/apache/neethi/Constants.isOptionalAttribute:(Ljavax/xml/namespace/QName;)Z
      71: ifeq          77
      74: goto          22
      77: ldc           #47                 // String http://www.w3.org/2000/xmlns/
      79: aload_3
      80: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: checkcast     #1                  // class javax/xml/namespace/QName
      88: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      91: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          127
      97: aload_1
      98: aload_3
      99: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     104: checkcast     #1                  // class javax/xml/namespace/QName
     107: invokevirtual #43                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     110: aload_3
     111: invokeinterface #67,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     116: checkcast     #15                 // class java/lang/String
     119: invokeinterface #50,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V
     124: goto          22
     127: aload_3
     128: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     133: checkcast     #1                  // class javax/xml/namespace/QName
     136: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     139: astore        4
     141: aload         4
     143: ifnull        219
     146: ldc           #40                 // String
     148: aload         4
     150: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     153: ifne          219
     156: aload_0
     157: aload_3
     158: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     163: checkcast     #1                  // class javax/xml/namespace/QName
     166: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     169: aload_1
     170: invokevirtual #68                 // Method getOrCreatePrefix:(Ljava/lang/String;Ljavax/xml/stream/XMLStreamWriter;)Ljava/lang/String;
     173: astore        5
     175: aload_1
     176: aload         5
     178: aload_3
     179: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     184: checkcast     #1                  // class javax/xml/namespace/QName
     187: invokevirtual #37                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     190: aload_3
     191: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     196: checkcast     #1                  // class javax/xml/namespace/QName
     199: invokevirtual #43                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     202: aload_3
     203: invokeinterface #67,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     208: checkcast     #15                 // class java/lang/String
     211: invokeinterface #69,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     216: goto          246
     219: aload_1
     220: aload_3
     221: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     226: checkcast     #1                  // class javax/xml/namespace/QName
     229: invokevirtual #43                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     232: aload_3
     233: invokeinterface #67,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     238: checkcast     #15                 // class java/lang/String
     241: invokeinterface #70,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     246: goto          22
     249: return

  protected java.lang.String getOrCreatePrefix(java.lang.String, javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: ldc           #47                 // String http://www.w3.org/2000/xmlns/
       2: aload_1
       3: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          11
       9: aconst_null
      10: areturn
      11: aload_2
      12: aload_1
      13: invokeinterface #38,  2           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getPrefix:(Ljava/lang/String;)Ljava/lang/String;
      18: astore_3
      19: iconst_1
      20: istore        4
      22: aload_3
      23: ifnull        35
      26: ldc           #40                 // String
      28: aload_3
      29: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          104
      35: new           #71                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #73                 // String ns
      44: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload         4
      49: iinc          4, 1
      52: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: astore_3
      59: aload_2
      60: invokeinterface #77,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
      65: aload_3
      66: invokeinterface #78,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
      71: astore        5
      73: aload         5
      75: ifnull        88
      78: ldc           #40                 // String
      80: aload         5
      82: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          99
      88: aload_2
      89: aload_3
      90: aload_1
      91: invokeinterface #50,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V
      96: goto          101
      99: aconst_null
     100: astore_3
     101: goto          22
     104: aload_3
     105: areturn

  protected org.apache.neethi.Assertion clone(boolean);
    Code:
       0: new           #79                 // class org/apache/neethi/builders/PrimitiveAssertion
       3: dup
       4: aload_0
       5: getfield      #7                  // Field name:Ljavax/xml/namespace/QName;
       8: iload_1
       9: aload_0
      10: getfield      #9                  // Field ignorable:Z
      13: aload_0
      14: getfield      #12                 // Field attributes:Ljava/util/Map;
      17: aload_0
      18: getfield      #13                 // Field textValue:Ljava/lang/String;
      21: invokespecial #5                  // Method "<init>":(Ljavax/xml/namespace/QName;ZZLjava/util/Map;Ljava/lang/String;)V
      24: areturn
}
