Compiled from "JMSServerControl.java"
public interface org.hornetq.api.jms.management.JMSServerControl {
  public abstract boolean isStarted();

  public abstract java.lang.String getVersion();

  public abstract java.lang.String[] getTopicNames();

  public abstract java.lang.String[] getQueueNames();

  public abstract java.lang.String[] getConnectionFactoryNames();

  public abstract boolean createQueue(java.lang.String) throws java.lang.Exception;

  public abstract boolean createQueue(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract boolean createQueue(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract boolean createQueue(java.lang.String, java.lang.String, java.lang.String, boolean) throws java.lang.Exception;

  public abstract boolean destroyQueue(java.lang.String) throws java.lang.Exception;

  public abstract boolean destroyQueue(java.lang.String, boolean) throws java.lang.Exception;

  public abstract boolean createTopic(java.lang.String) throws java.lang.Exception;

  public abstract boolean createTopic(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract boolean destroyTopic(java.lang.String, boolean) throws java.lang.Exception;

  public abstract boolean destroyTopic(java.lang.String) throws java.lang.Exception;

  public abstract void createConnectionFactory(java.lang.String, boolean, boolean, int, java.lang.String[], java.lang.Object[]) throws java.lang.Exception;

  public abstract void createConnectionFactory(java.lang.String, boolean, boolean, int, java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract void createConnectionFactory(java.lang.String, boolean, boolean, int, java.lang.String[], java.lang.String[], java.lang.String, long, long, long, long, int, boolean, int, int, int, int, int, boolean, boolean, boolean, boolean, boolean, java.lang.String, int, int, boolean, int, int, long, double, long, int, boolean, java.lang.String) throws java.lang.Exception;

  public abstract void createConnectionFactory(java.lang.String, boolean, boolean, int, java.lang.String, java.lang.String, java.lang.String, long, long, long, long, int, boolean, int, int, int, int, int, boolean, boolean, boolean, boolean, boolean, java.lang.String, int, int, boolean, int, int, long, double, long, int, boolean, java.lang.String) throws java.lang.Exception;

  public abstract void destroyConnectionFactory(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String[] listRemoteAddresses() throws java.lang.Exception;

  public abstract java.lang.String[] listRemoteAddresses(java.lang.String) throws java.lang.Exception;

  public abstract boolean closeConnectionsForAddress(java.lang.String) throws java.lang.Exception;

  public abstract boolean closeConsumerConnectionsForAddress(java.lang.String) throws java.lang.Exception;

  public abstract boolean closeConnectionsForUser(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String[] listConnectionIDs() throws java.lang.Exception;

  public abstract java.lang.String listConnectionsAsJSON() throws java.lang.Exception;

  public abstract java.lang.String[] listSessions(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String listConsumersAsJSON(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String listAllConsumersAsJSON() throws java.lang.Exception;

  public abstract java.lang.String[] listTargetDestinations(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String getLastSentMessageID(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String getSessionCreationTime(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String listSessionsAsJSON(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String listPreparedTransactionDetailsAsJSON() throws java.lang.Exception;

  public abstract java.lang.String listPreparedTransactionDetailsAsHTML() throws java.lang.Exception;

  public abstract java.lang.String closeConnectionWithClientID(java.lang.String) throws java.lang.Exception;
}
