Compiled from "HornetQConnectionFactory.java"
public class org.hornetq.jms.client.HornetQConnectionFactory implements java.io.Serializable,javax.naming.Referenceable,javax.jms.ConnectionFactory,javax.jms.XAConnectionFactory {
  private static final long serialVersionUID;

  private final org.hornetq.api.core.client.ServerLocator serverLocator;

  private java.lang.String clientID;

  private int dupsOKBatchSize;

  private int transactionBatchSize;

  private boolean readOnly;

  public org.hornetq.jms.client.HornetQConnectionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 1048576
       7: putfield      #4                  // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #3                  // int 1048576
      13: putfield      #5                  // Field transactionBatchSize:I
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      21: return

  public org.hornetq.jms.client.HornetQConnectionFactory(org.hornetq.api.core.client.ServerLocator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 1048576
       7: putfield      #4                  // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #3                  // int 1048576
      13: putfield      #5                  // Field transactionBatchSize:I
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      21: aload_1
      22: invokeinterface #7,  1            // InterfaceMethod org/hornetq/api/core/client/ServerLocator.disableFinalizeCheck:()V
      27: return

  public org.hornetq.jms.client.HornetQConnectionFactory(boolean, org.hornetq.api.core.DiscoveryGroupConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 1048576
       7: putfield      #4                  // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #3                  // int 1048576
      13: putfield      #5                  // Field transactionBatchSize:I
      16: iload_1
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: invokestatic  #8                  // Method org/hornetq/api/core/client/HornetQClient.createServerLocatorWithHA:(Lorg/hornetq/api/core/DiscoveryGroupConfiguration;)Lorg/hornetq/api/core/client/ServerLocator;
      25: putfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      28: goto          39
      31: aload_0
      32: aload_2
      33: invokestatic  #9                  // Method org/hornetq/api/core/client/HornetQClient.createServerLocatorWithoutHA:(Lorg/hornetq/api/core/DiscoveryGroupConfiguration;)Lorg/hornetq/api/core/client/ServerLocator;
      36: putfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      39: aload_0
      40: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      43: invokeinterface #7,  1            // InterfaceMethod org/hornetq/api/core/client/ServerLocator.disableFinalizeCheck:()V
      48: return

  public org.hornetq.jms.client.HornetQConnectionFactory(boolean, org.hornetq.api.core.TransportConfiguration...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 1048576
       7: putfield      #4                  // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #3                  // int 1048576
      13: putfield      #5                  // Field transactionBatchSize:I
      16: iload_1
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: invokestatic  #10                 // Method org/hornetq/api/core/client/HornetQClient.createServerLocatorWithHA:([Lorg/hornetq/api/core/TransportConfiguration;)Lorg/hornetq/api/core/client/ServerLocator;
      25: putfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      28: goto          39
      31: aload_0
      32: aload_2
      33: invokestatic  #11                 // Method org/hornetq/api/core/client/HornetQClient.createServerLocatorWithoutHA:([Lorg/hornetq/api/core/TransportConfiguration;)Lorg/hornetq/api/core/client/ServerLocator;
      36: putfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      39: aload_0
      40: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      43: invokeinterface #7,  1            // InterfaceMethod org/hornetq/api/core/client/ServerLocator.disableFinalizeCheck:()V
      48: return

  public javax.jms.Connection createConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #12                 // Method createConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/Connection;
       6: areturn

  public javax.jms.Connection createConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_0
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: areturn

  public javax.jms.JMSContext createContext();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #15                 // Method createContext:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/JMSContext;
       6: areturn

  public javax.jms.JMSContext createContext(int);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: iload_1
       4: invokevirtual #16                 // Method createContext:(Ljava/lang/String;Ljava/lang/String;I)Ljavax/jms/JMSContext;
       7: areturn

  public javax.jms.JMSContext createContext(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #16                 // Method createContext:(Ljava/lang/String;Ljava/lang/String;I)Ljavax/jms/JMSContext;
       7: areturn

  public javax.jms.JMSContext createContext(java.lang.String, java.lang.String, int);
    Code:
       0: iload_3
       1: invokestatic  #18                 // Method validateSessionMode:(I)V
       4: aload_0
       5: aload_1
       6: aload_2
       7: iconst_0
       8: iconst_0
       9: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
      12: astore        4
      14: aload         4
      16: iload_3
      17: invokevirtual #19                 // Method org/hornetq/jms/client/HornetQConnection.createContext:(I)Ljavax/jms/JMSContext;
      20: areturn
      21: astore        4
      23: new           #21                 // class javax/jms/JMSSecurityRuntimeException
      26: dup
      27: aload         4
      29: invokevirtual #22                 // Method javax/jms/JMSSecurityException.getMessage:()Ljava/lang/String;
      32: aload         4
      34: invokevirtual #23                 // Method javax/jms/JMSSecurityException.getErrorCode:()Ljava/lang/String;
      37: aload         4
      39: invokespecial #24                 // Method javax/jms/JMSSecurityRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: astore        4
      45: aload         4
      47: invokestatic  #26                 // Method org/hornetq/jms/client/JmsExceptionUtils.convertToRuntimeException:(Ljavax/jms/JMSException;)Ljavax/jms/JMSRuntimeException;
      50: athrow
    Exception table:
       from    to  target type
           4    20    21   Class javax/jms/JMSSecurityException
           4    20    43   Class javax/jms/JMSException

  private static void validateSessionMode(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 32
                     2: 32
                     3: 32
               default: 33
          }
      32: return
      33: new           #27                 // class javax/jms/JMSRuntimeException
      36: dup
      37: new           #28                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #30                 // String Invalid Session Mode:
      46: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_0
      50: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #34                 // Method javax/jms/JMSRuntimeException."<init>":(Ljava/lang/String;)V
      59: athrow

  public javax.jms.QueueConnection createQueueConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #35                 // Method createQueueConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/QueueConnection;
       6: areturn

  public javax.jms.QueueConnection createQueueConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_1
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: areturn

  public javax.jms.TopicConnection createTopicConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #36                 // Method createTopicConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/TopicConnection;
       6: areturn

  public javax.jms.TopicConnection createTopicConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_2
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: areturn

  public javax.jms.XAConnection createXAConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #37                 // Method createXAConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAConnection;
       6: areturn

  public javax.jms.XAConnection createXAConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_0
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: checkcast     #38                 // class javax/jms/XAConnection
      11: areturn

  public javax.jms.XAJMSContext createXAContext();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #39                 // Method createXAContext:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAJMSContext;
       6: areturn

  public javax.jms.XAJMSContext createXAContext(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_0
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: astore_3
       9: aload_3
      10: invokevirtual #40                 // Method org/hornetq/jms/client/HornetQConnection.createXAContext:()Ljavax/jms/XAJMSContext;
      13: areturn
      14: astore_3
      15: new           #21                 // class javax/jms/JMSSecurityRuntimeException
      18: dup
      19: aload_3
      20: invokevirtual #22                 // Method javax/jms/JMSSecurityException.getMessage:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #23                 // Method javax/jms/JMSSecurityException.getErrorCode:()Ljava/lang/String;
      27: aload_3
      28: invokespecial #24                 // Method javax/jms/JMSSecurityRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      31: athrow
      32: astore_3
      33: aload_3
      34: invokestatic  #26                 // Method org/hornetq/jms/client/JmsExceptionUtils.convertToRuntimeException:(Ljavax/jms/JMSException;)Ljavax/jms/JMSRuntimeException;
      37: athrow
    Exception table:
       from    to  target type
           0    13    14   Class javax/jms/JMSSecurityException
           0    13    32   Class javax/jms/JMSException

  public javax.jms.XAQueueConnection createXAQueueConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #41                 // Method createXAQueueConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAQueueConnection;
       6: areturn

  public javax.jms.XAQueueConnection createXAQueueConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_1
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: checkcast     #42                 // class javax/jms/XAQueueConnection
      11: areturn

  public javax.jms.XATopicConnection createXATopicConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #43                 // Method createXATopicConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XATopicConnection;
       6: areturn

  public javax.jms.XATopicConnection createXATopicConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_2
       5: invokevirtual #14                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/hornetq/jms/client/HornetQConnection;
       8: checkcast     #44                 // class javax/jms/XATopicConnection
      11: areturn

  public javax.naming.Reference getReference() throws javax.naming.NamingException;
    Code:
       0: new           #45                 // class javax/naming/Reference
       3: dup
       4: aload_0
       5: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #47                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      11: new           #48                 // class org/hornetq/jms/referenceable/SerializableObjectRefAddr
      14: dup
      15: ldc           #49                 // String HornetQ-CF
      17: aload_0
      18: invokespecial #50                 // Method org/hornetq/jms/referenceable/SerializableObjectRefAddr."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      21: ldc           #51                 // class org/hornetq/jms/referenceable/ConnectionFactoryObjectFactory
      23: invokevirtual #47                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      26: aconst_null
      27: invokespecial #52                 // Method javax/naming/Reference."<init>":(Ljava/lang/String;Ljavax/naming/RefAddr;Ljava/lang/String;Ljava/lang/String;)V
      30: areturn

  public boolean isHA();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #53,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isHA:()Z
       9: ireturn

  public synchronized java.lang.String getConnectionLoadBalancingPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #54,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getConnectionLoadBalancingPolicyClassName:()Ljava/lang/String;
       9: areturn

  public synchronized void setConnectionLoadBalancingPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: aload_1
       9: invokeinterface #56,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setConnectionLoadBalancingPolicyClassName:(Ljava/lang/String;)V
      14: return

  public synchronized org.hornetq.api.core.TransportConfiguration[] getStaticConnectors();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #57,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getStaticTransportConfigurations:()[Lorg/hornetq/api/core/TransportConfiguration;
       9: areturn

  public synchronized org.hornetq.api.core.DiscoveryGroupConfiguration getDiscoveryGroupConfiguration();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #58,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getDiscoveryGroupConfiguration:()Lorg/hornetq/api/core/DiscoveryGroupConfiguration;
       9: areturn

  public synchronized java.lang.String getClientID();
    Code:
       0: aload_0
       1: getfield      #59                 // Field clientID:Ljava/lang/String;
       4: areturn

  public synchronized void setClientID(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: aload_1
       6: putfield      #59                 // Field clientID:Ljava/lang/String;
       9: return

  public synchronized int getDupsOKBatchSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dupsOKBatchSize:I
       4: ireturn

  public synchronized void setDupsOKBatchSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field dupsOKBatchSize:I
       9: return

  public synchronized int getTransactionBatchSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionBatchSize:I
       4: ireturn

  public synchronized void setTransactionBatchSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #5                  // Field transactionBatchSize:I
       9: return

  public synchronized long getClientFailureCheckPeriod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #60,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getClientFailureCheckPeriod:()J
       9: lreturn

  public synchronized void setClientFailureCheckPeriod(long);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #61,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setClientFailureCheckPeriod:(J)V
      14: return

  public synchronized long getConnectionTTL();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #62,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getConnectionTTL:()J
       9: lreturn

  public synchronized void setConnectionTTL(long);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #63,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setConnectionTTL:(J)V
      14: return

  public synchronized long getCallTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #64,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getCallTimeout:()J
       9: lreturn

  public synchronized void setCallTimeout(long);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #65,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setCallTimeout:(J)V
      14: return

  public synchronized long getCallFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #66,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getCallFailoverTimeout:()J
       9: lreturn

  public synchronized void setCallFailoverTimeout(long);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #67,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setCallFailoverTimeout:(J)V
      14: return

  public synchronized int getConsumerWindowSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #68,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getConsumerWindowSize:()I
       9: ireturn

  public synchronized void setConsumerWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #69,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setConsumerWindowSize:(I)V
      14: return

  public synchronized int getConsumerMaxRate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #70,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getConsumerMaxRate:()I
       9: ireturn

  public synchronized void setConsumerMaxRate(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #71,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setConsumerMaxRate:(I)V
      14: return

  public synchronized int getConfirmationWindowSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #72,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getConfirmationWindowSize:()I
       9: ireturn

  public synchronized void setConfirmationWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #73,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setConfirmationWindowSize:(I)V
      14: return

  public synchronized int getProducerMaxRate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #74,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getProducerMaxRate:()I
       9: ireturn

  public synchronized void setProducerMaxRate(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #75,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setProducerMaxRate:(I)V
      14: return

  public synchronized int getProducerWindowSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #76,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getProducerWindowSize:()I
       9: ireturn

  public synchronized void setProducerWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #77,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setProducerWindowSize:(I)V
      14: return

  public synchronized void setCacheLargeMessagesClient(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #78,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setCacheLargeMessagesClient:(Z)V
      14: return

  public synchronized boolean isCacheLargeMessagesClient();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #79,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isCacheLargeMessagesClient:()Z
       9: ireturn

  public synchronized int getMinLargeMessageSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #80,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getMinLargeMessageSize:()I
       9: ireturn

  public synchronized void setMinLargeMessageSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #81,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setMinLargeMessageSize:(I)V
      14: return

  public synchronized boolean isBlockOnAcknowledge();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #82,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isBlockOnAcknowledge:()Z
       9: ireturn

  public synchronized void setBlockOnAcknowledge(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #83,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setBlockOnAcknowledge:(Z)V
      14: return

  public synchronized boolean isBlockOnNonDurableSend();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #84,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isBlockOnNonDurableSend:()Z
       9: ireturn

  public synchronized void setBlockOnNonDurableSend(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #85,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setBlockOnNonDurableSend:(Z)V
      14: return

  public synchronized boolean isBlockOnDurableSend();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #86,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isBlockOnDurableSend:()Z
       9: ireturn

  public synchronized void setBlockOnDurableSend(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #87,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setBlockOnDurableSend:(Z)V
      14: return

  public synchronized boolean isAutoGroup();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #88,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isAutoGroup:()Z
       9: ireturn

  public synchronized void setAutoGroup(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #89,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setAutoGroup:(Z)V
      14: return

  public synchronized boolean isPreAcknowledge();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #90,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isPreAcknowledge:()Z
       9: ireturn

  public synchronized void setPreAcknowledge(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #91,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setPreAcknowledge:(Z)V
      14: return

  public synchronized long getRetryInterval();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #92,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getRetryInterval:()J
       9: lreturn

  public synchronized void setRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #93,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setRetryInterval:(J)V
      14: return

  public synchronized long getMaxRetryInterval();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #94,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getMaxRetryInterval:()J
       9: lreturn

  public synchronized void setMaxRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #95,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setMaxRetryInterval:(J)V
      14: return

  public synchronized double getRetryIntervalMultiplier();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #96,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getRetryIntervalMultiplier:()D
       9: dreturn

  public synchronized void setRetryIntervalMultiplier(double);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: dload_1
       9: invokeinterface #97,  3           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setRetryIntervalMultiplier:(D)V
      14: return

  public synchronized int getReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #98,  1           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getReconnectAttempts:()I
       9: ireturn

  public synchronized void setReconnectAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #99,  2           // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setReconnectAttempts:(I)V
      14: return

  public synchronized void setInitialConnectAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #100,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setInitialConnectAttempts:(I)V
      14: return

  public synchronized int getInitialConnectAttempts();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: invokeinterface #101,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getInitialConnectAttempts:()I
      13: ireturn

  public synchronized boolean isFailoverOnInitialConnection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #102,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isFailoverOnInitialConnection:()Z
       9: ireturn

  public synchronized void setFailoverOnInitialConnection(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #103,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setFailoverOnInitialConnection:(Z)V
      14: return

  public synchronized boolean isUseGlobalPools();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #104,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isUseGlobalPools:()Z
       9: ireturn

  public synchronized void setUseGlobalPools(boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #105,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setUseGlobalPools:(Z)V
      14: return

  public synchronized int getScheduledThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #106,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getScheduledThreadPoolMaxSize:()I
       9: ireturn

  public synchronized void setScheduledThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #107,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setScheduledThreadPoolMaxSize:(I)V
      14: return

  public synchronized int getThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #108,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getThreadPoolMaxSize:()I
       9: ireturn

  public synchronized void setThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #109,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setThreadPoolMaxSize:(I)V
      14: return

  public synchronized int getInitialMessagePacketSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #110,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getInitialMessagePacketSize:()I
       9: ireturn

  public synchronized void setInitialMessagePacketSize(int);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkWrite:()V
       4: aload_0
       5: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #111,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setInitialMessagePacketSize:(I)V
      14: return

  public void setGroupID(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: aload_1
       5: invokeinterface #112,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setGroupID:(Ljava/lang/String;)V
      10: return

  public java.lang.String getGroupID();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #113,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.getGroupID:()Ljava/lang/String;
       9: areturn

  public boolean isCompressLargeMessage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #114,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isCompressLargeMessage:()Z
       9: ireturn

  public void setCompressLargeMessage(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: iload_1
       5: invokeinterface #115,  2          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.setCompressLargeMessage:(Z)V
      10: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #116,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.close:()V
      15: return

  public org.hornetq.api.core.client.ServerLocator getServerLocator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: areturn

  public int getFactoryType();
    Code:
       0: getstatic     #117                // Field org/hornetq/api/jms/JMSFactoryType.CF:Lorg/hornetq/api/jms/JMSFactoryType;
       3: invokevirtual #118                // Method org/hornetq/api/jms/JMSFactoryType.intValue:()I
       6: ireturn

  protected synchronized org.hornetq.jms.client.HornetQConnection createConnectionInternal(java.lang.String, java.lang.String, boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #119                // Field readOnly:Z
       5: aload_0
       6: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       9: invokeinterface #120,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.createSessionFactory:()Lorg/hornetq/api/core/client/ClientSessionFactory;
      14: astore        5
      16: goto          50
      19: astore        6
      21: new           #25                 // class javax/jms/JMSException
      24: dup
      25: ldc           #122                // String Failed to create session factory
      27: invokespecial #123                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      30: astore        7
      32: aload         7
      34: aload         6
      36: invokevirtual #124                // Method javax/jms/JMSException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      39: pop
      40: aload         7
      42: aload         6
      44: invokevirtual #125                // Method javax/jms/JMSException.setLinkedException:(Ljava/lang/Exception;)V
      47: aload         7
      49: athrow
      50: aconst_null
      51: astore        6
      53: iload_3
      54: ifeq          164
      57: iload         4
      59: ifne          92
      62: new           #126                // class org/hornetq/jms/client/HornetQXAConnection
      65: dup
      66: aload_1
      67: aload_2
      68: iload         4
      70: aload_0
      71: getfield      #59                 // Field clientID:Ljava/lang/String;
      74: aload_0
      75: getfield      #4                  // Field dupsOKBatchSize:I
      78: aload_0
      79: getfield      #5                  // Field transactionBatchSize:I
      82: aload         5
      84: invokespecial #127                // Method org/hornetq/jms/client/HornetQXAConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/hornetq/api/core/client/ClientSessionFactory;)V
      87: astore        6
      89: goto          268
      92: iload         4
      94: iconst_1
      95: if_icmpne     128
      98: new           #126                // class org/hornetq/jms/client/HornetQXAConnection
     101: dup
     102: aload_1
     103: aload_2
     104: iload         4
     106: aload_0
     107: getfield      #59                 // Field clientID:Ljava/lang/String;
     110: aload_0
     111: getfield      #4                  // Field dupsOKBatchSize:I
     114: aload_0
     115: getfield      #5                  // Field transactionBatchSize:I
     118: aload         5
     120: invokespecial #127                // Method org/hornetq/jms/client/HornetQXAConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/hornetq/api/core/client/ClientSessionFactory;)V
     123: astore        6
     125: goto          268
     128: iload         4
     130: iconst_2
     131: if_icmpne     268
     134: new           #126                // class org/hornetq/jms/client/HornetQXAConnection
     137: dup
     138: aload_1
     139: aload_2
     140: iload         4
     142: aload_0
     143: getfield      #59                 // Field clientID:Ljava/lang/String;
     146: aload_0
     147: getfield      #4                  // Field dupsOKBatchSize:I
     150: aload_0
     151: getfield      #5                  // Field transactionBatchSize:I
     154: aload         5
     156: invokespecial #127                // Method org/hornetq/jms/client/HornetQXAConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/hornetq/api/core/client/ClientSessionFactory;)V
     159: astore        6
     161: goto          268
     164: iload         4
     166: ifne          199
     169: new           #13                 // class org/hornetq/jms/client/HornetQConnection
     172: dup
     173: aload_1
     174: aload_2
     175: iload         4
     177: aload_0
     178: getfield      #59                 // Field clientID:Ljava/lang/String;
     181: aload_0
     182: getfield      #4                  // Field dupsOKBatchSize:I
     185: aload_0
     186: getfield      #5                  // Field transactionBatchSize:I
     189: aload         5
     191: invokespecial #128                // Method org/hornetq/jms/client/HornetQConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/hornetq/api/core/client/ClientSessionFactory;)V
     194: astore        6
     196: goto          268
     199: iload         4
     201: iconst_1
     202: if_icmpne     235
     205: new           #13                 // class org/hornetq/jms/client/HornetQConnection
     208: dup
     209: aload_1
     210: aload_2
     211: iload         4
     213: aload_0
     214: getfield      #59                 // Field clientID:Ljava/lang/String;
     217: aload_0
     218: getfield      #4                  // Field dupsOKBatchSize:I
     221: aload_0
     222: getfield      #5                  // Field transactionBatchSize:I
     225: aload         5
     227: invokespecial #128                // Method org/hornetq/jms/client/HornetQConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/hornetq/api/core/client/ClientSessionFactory;)V
     230: astore        6
     232: goto          268
     235: iload         4
     237: iconst_2
     238: if_icmpne     268
     241: new           #13                 // class org/hornetq/jms/client/HornetQConnection
     244: dup
     245: aload_1
     246: aload_2
     247: iload         4
     249: aload_0
     250: getfield      #59                 // Field clientID:Ljava/lang/String;
     253: aload_0
     254: getfield      #4                  // Field dupsOKBatchSize:I
     257: aload_0
     258: getfield      #5                  // Field transactionBatchSize:I
     261: aload         5
     263: invokespecial #128                // Method org/hornetq/jms/client/HornetQConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/hornetq/api/core/client/ClientSessionFactory;)V
     266: astore        6
     268: aload         6
     270: ifnonnull     301
     273: new           #25                 // class javax/jms/JMSException
     276: dup
     277: new           #28                 // class java/lang/StringBuilder
     280: dup
     281: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     284: ldc           #129                // String Failed to create connection: invalid type
     286: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: iload         4
     291: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     294: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: invokespecial #123                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     300: athrow
     301: aload         6
     303: aload_0
     304: invokevirtual #130                // Method org/hornetq/jms/client/HornetQConnection.setReference:(Lorg/hornetq/jms/client/HornetQConnectionFactory;)V
     307: aload         6
     309: invokevirtual #131                // Method org/hornetq/jms/client/HornetQConnection.authorize:()V
     312: goto          330
     315: astore        7
     317: aload         6
     319: invokevirtual #132                // Method org/hornetq/jms/client/HornetQConnection.close:()V
     322: goto          327
     325: astore        8
     327: aload         7
     329: athrow
     330: aload         6
     332: areturn
    Exception table:
       from    to  target type
           5    16    19   Class java/lang/Exception
         307   312   315   Class javax/jms/JMSException
         317   322   325   Class javax/jms/JMSException

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #133                // String HornetQConnectionFactory [serverLocator=
       9: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
      16: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #135                // String , clientID=
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #59                 // Field clientID:Ljava/lang/String;
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #136                // String , consumerWindowSize =
      33: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #137                // Method getConsumerWindowSize:()I
      40: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #138                // String , dupsOKBatchSize=
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field dupsOKBatchSize:I
      52: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #139                // String , transactionBatchSize=
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #5                  // Field transactionBatchSize:I
      64: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #140                // String , readOnly=
      69: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #119                // Field readOnly:Z
      76: invokevirtual #141                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: ldc           #142                // String ]
      81: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  private void checkWrite();
    Code:
       0: aload_0
       1: getfield      #119                // Field readOnly:Z
       4: ifeq          17
       7: new           #143                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #144                // String Cannot set attribute on HornetQConnectionFactory after it has been used
      13: invokespecial #145                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverLocator:Lorg/hornetq/api/core/client/ServerLocator;
       4: invokeinterface #116,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.close:()V
       9: goto          17
      12: astore_1
      13: aload_1
      14: invokevirtual #146                // Method java/lang/Exception.printStackTrace:()V
      17: aload_0
      18: invokespecial #147                // Method java/lang/Object.finalize:()V
      21: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Exception
}
