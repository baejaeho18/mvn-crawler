Compiled from "HornetQConnection.java"
public class org.hornetq.jms.client.HornetQConnection extends org.hornetq.jms.client.HornetQConnectionForContextImpl implements javax.jms.TopicConnection,javax.jms.QueueConnection {
  public static final int TYPE_GENERIC_CONNECTION;

  public static final int TYPE_QUEUE_CONNECTION;

  public static final int TYPE_TOPIC_CONNECTION;

  public static final java.lang.String EXCEPTION_FAILOVER;

  public static final java.lang.String EXCEPTION_DISCONNECT;

  public static final org.hornetq.api.core.SimpleString CONNECTION_ID_PROPERTY_NAME;

  private final int connectionType;

  private final java.util.Set<org.hornetq.jms.client.HornetQSession> sessions;

  private final java.util.Set<org.hornetq.api.core.SimpleString> tempQueues;

  private final java.util.Set<org.hornetq.api.core.SimpleString> knownDestinations;

  private volatile boolean hasNoLocal;

  private volatile javax.jms.ExceptionListener exceptionListener;

  private volatile org.hornetq.api.core.client.FailoverEventListener failoverEventListener;

  private volatile boolean justCreated;

  private volatile javax.jms.ConnectionMetaData metaData;

  private volatile boolean closed;

  private volatile boolean started;

  private java.lang.String clientID;

  private final org.hornetq.api.core.client.ClientSessionFactory sessionFactory;

  private final org.hornetq.api.core.SimpleString uid;

  private final java.lang.String username;

  private final java.lang.String password;

  private final org.hornetq.api.core.client.SessionFailureListener listener;

  private final org.hornetq.api.core.client.FailoverEventListener failoverListener;

  private final org.hornetq.core.version.Version thisVersion;

  private final int dupsOKBatchSize;

  private final int transactionBatchSize;

  private org.hornetq.api.core.client.ClientSession initialSession;

  private final java.lang.Exception creationStack;

  private org.hornetq.jms.client.HornetQConnectionFactory factoryReference;

  public org.hornetq.jms.client.HornetQConnection(java.lang.String, java.lang.String, int, java.lang.String, int, int, org.hornetq.api.core.client.ClientSessionFactory);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/hornetq/jms/client/HornetQConnectionForContextImpl."<init>":()V
       4: aload_0
       5: new           #3                  // class org/hornetq/utils/ConcurrentHashSet
       8: dup
       9: invokespecial #4                  // Method org/hornetq/utils/ConcurrentHashSet."<init>":()V
      12: putfield      #5                  // Field sessions:Ljava/util/Set;
      15: aload_0
      16: new           #3                  // class org/hornetq/utils/ConcurrentHashSet
      19: dup
      20: invokespecial #4                  // Method org/hornetq/utils/ConcurrentHashSet."<init>":()V
      23: putfield      #6                  // Field tempQueues:Ljava/util/Set;
      26: aload_0
      27: new           #3                  // class org/hornetq/utils/ConcurrentHashSet
      30: dup
      31: invokespecial #4                  // Method org/hornetq/utils/ConcurrentHashSet."<init>":()V
      34: putfield      #7                  // Field knownDestinations:Ljava/util/Set;
      37: aload_0
      38: iconst_1
      39: putfield      #8                  // Field justCreated:Z
      42: aload_0
      43: new           #9                  // class org/hornetq/jms/client/HornetQConnection$JMSFailureListener
      46: dup
      47: aload_0
      48: invokespecial #10                 // Method org/hornetq/jms/client/HornetQConnection$JMSFailureListener."<init>":(Lorg/hornetq/jms/client/HornetQConnection;)V
      51: putfield      #11                 // Field listener:Lorg/hornetq/api/core/client/SessionFailureListener;
      54: aload_0
      55: new           #12                 // class org/hornetq/jms/client/HornetQConnection$FailoverEventListenerImpl
      58: dup
      59: aload_0
      60: invokespecial #13                 // Method org/hornetq/jms/client/HornetQConnection$FailoverEventListenerImpl."<init>":(Lorg/hornetq/jms/client/HornetQConnection;)V
      63: putfield      #14                 // Field failoverListener:Lorg/hornetq/api/core/client/FailoverEventListener;
      66: aload_0
      67: aload_1
      68: putfield      #15                 // Field username:Ljava/lang/String;
      71: aload_0
      72: aload_2
      73: putfield      #16                 // Field password:Ljava/lang/String;
      76: aload_0
      77: iload_3
      78: putfield      #17                 // Field connectionType:I
      81: aload_0
      82: aload         4
      84: putfield      #18                 // Field clientID:Ljava/lang/String;
      87: aload_0
      88: aload         7
      90: putfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
      93: aload_0
      94: invokestatic  #20                 // Method org/hornetq/utils/UUIDGenerator.getInstance:()Lorg/hornetq/utils/UUIDGenerator;
      97: invokevirtual #21                 // Method org/hornetq/utils/UUIDGenerator.generateSimpleStringUUID:()Lorg/hornetq/api/core/SimpleString;
     100: putfield      #22                 // Field uid:Lorg/hornetq/api/core/SimpleString;
     103: aload_0
     104: invokestatic  #23                 // Method org/hornetq/utils/VersionLoader.getVersion:()Lorg/hornetq/core/version/Version;
     107: putfield      #24                 // Field thisVersion:Lorg/hornetq/core/version/Version;
     110: aload_0
     111: iload         5
     113: putfield      #25                 // Field dupsOKBatchSize:I
     116: aload_0
     117: iload         6
     119: putfield      #26                 // Field transactionBatchSize:I
     122: aload_0
     123: new           #27                 // class java/lang/Exception
     126: dup
     127: invokespecial #28                 // Method java/lang/Exception."<init>":()V
     130: putfield      #29                 // Field creationStack:Ljava/lang/Exception;
     133: return

  public javax.jms.Session createNonXASession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iload_2
       8: iconst_0
       9: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      12: areturn

  public javax.jms.Session createNonXATopicSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iload_2
       8: iconst_2
       9: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      12: areturn

  public javax.jms.Session createNonXAQueueSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iload_2
       8: iconst_1
       9: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      12: areturn

  public synchronized javax.jms.Session createSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iload_1
       8: iload_2
       9: invokestatic  #33                 // Method checkAck:(ZI)I
      12: iconst_0
      13: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      16: areturn

  public java.lang.String getClientID() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #18                 // Field clientID:Ljava/lang/String;
       8: areturn

  public void setClientID(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #18                 // Field clientID:Ljava/lang/String;
       8: ifnull        21
      11: new           #34                 // class javax/jms/IllegalStateException
      14: dup
      15: ldc           #35                 // String Client id has already been set
      17: invokespecial #36                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #8                  // Field justCreated:Z
      25: ifne          38
      28: new           #34                 // class javax/jms/IllegalStateException
      31: dup
      32: ldc           #37                 // String setClientID can only be called directly after the connection is created
      34: invokespecial #36                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
      42: ldc           #39                 // String jms-client-id
      44: aload_1
      45: invokeinterface #40,  3           // InterfaceMethod org/hornetq/api/core/client/ClientSession.addUniqueMetaData:(Ljava/lang/String;Ljava/lang/String;)V
      50: goto          96
      53: astore_2
      54: aload_2
      55: invokevirtual #42                 // Method org/hornetq/api/core/HornetQException.getType:()Lorg/hornetq/api/core/HornetQExceptionType;
      58: getstatic     #43                 // Field org/hornetq/api/core/HornetQExceptionType.DUPLICATE_METADATA:Lorg/hornetq/api/core/HornetQExceptionType;
      61: if_acmpne     96
      64: new           #44                 // class javax/jms/InvalidClientIDException
      67: dup
      68: new           #45                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #47                 // String clientID=
      77: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #49                 // String  was already set into another connection
      86: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #51                 // Method javax/jms/InvalidClientIDException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: aload_1
      98: putfield      #18                 // Field clientID:Ljava/lang/String;
     101: aload_0
     102: aload_0
     103: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     106: invokespecial #52                 // Method addSessionMetaData:(Lorg/hornetq/api/core/client/ClientSession;)V
     109: goto          136
     112: astore_2
     113: new           #53                 // class javax/jms/JMSException
     116: dup
     117: ldc           #54                 // String Internal error setting metadata jms-client-id
     119: invokespecial #55                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     122: astore_3
     123: aload_3
     124: aload_2
     125: invokevirtual #56                 // Method javax/jms/JMSException.setLinkedException:(Ljava/lang/Exception;)V
     128: aload_3
     129: aload_2
     130: invokevirtual #57                 // Method javax/jms/JMSException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     133: pop
     134: aload_3
     135: athrow
     136: aload_0
     137: iconst_0
     138: putfield      #8                  // Field justCreated:Z
     141: return
    Exception table:
       from    to  target type
          38    50    53   Class org/hornetq/api/core/HornetQException
         101   109   112   Class org/hornetq/api/core/HornetQException

  public javax.jms.ConnectionMetaData getMetaData() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field justCreated:Z
       9: aload_0
      10: getfield      #58                 // Field metaData:Ljavax/jms/ConnectionMetaData;
      13: ifnonnull     31
      16: aload_0
      17: new           #59                 // class org/hornetq/jms/client/HornetQConnectionMetaData
      20: dup
      21: aload_0
      22: getfield      #24                 // Field thisVersion:Lorg/hornetq/core/version/Version;
      25: invokespecial #60                 // Method org/hornetq/jms/client/HornetQConnectionMetaData."<init>":(Lorg/hornetq/core/version/Version;)V
      28: putfield      #58                 // Field metaData:Ljavax/jms/ConnectionMetaData;
      31: aload_0
      32: getfield      #58                 // Field metaData:Ljavax/jms/ConnectionMetaData;
      35: areturn

  public javax.jms.ExceptionListener getExceptionListener() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field justCreated:Z
       9: aload_0
      10: getfield      #61                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
      13: areturn

  public void setExceptionListener(javax.jms.ExceptionListener) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: putfield      #61                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field justCreated:Z
      14: return

  public synchronized void start() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #5                  // Field sessions:Ljava/util/Set;
       8: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_1
      14: aload_1
      15: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          40
      23: aload_1
      24: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #65                 // class org/hornetq/jms/client/HornetQSession
      32: astore_2
      33: aload_2
      34: invokevirtual #66                 // Method org/hornetq/jms/client/HornetQSession.start:()V
      37: goto          14
      40: aload_0
      41: iconst_0
      42: putfield      #8                  // Field justCreated:Z
      45: aload_0
      46: iconst_1
      47: putfield      #67                 // Field started:Z
      50: return

  public synchronized void signalStopToAllSessions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/Set;
       4: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          57
      19: aload_1
      20: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #65                 // class org/hornetq/jms/client/HornetQSession
      28: astore_2
      29: aload_2
      30: invokevirtual #68                 // Method org/hornetq/jms/client/HornetQSession.getCoreSession:()Lorg/hornetq/api/core/client/ClientSession;
      33: astore_3
      34: aload_3
      35: instanceof    #69                 // class org/hornetq/core/client/impl/ClientSessionInternal
      38: ifeq          54
      41: aload_3
      42: checkcast     #69                 // class org/hornetq/core/client/impl/ClientSessionInternal
      45: astore        4
      47: aload         4
      49: invokeinterface #70,  1           // InterfaceMethod org/hornetq/core/client/impl/ClientSessionInternal.setStopSignal:()V
      54: goto          10
      57: return

  public synchronized void stop() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field threadAwareContext:Lorg/hornetq/jms/client/ThreadAwareContext;
       4: invokevirtual #72                 // Method org/hornetq/jms/client/ThreadAwareContext.assertNotMessageListenerThread:()V
       7: aload_0
       8: invokevirtual #30                 // Method checkClosed:()V
      11: aload_0
      12: getfield      #5                  // Field sessions:Ljava/util/Set;
      15: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_1
      21: aload_1
      22: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          47
      30: aload_1
      31: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #65                 // class org/hornetq/jms/client/HornetQSession
      39: astore_2
      40: aload_2
      41: invokevirtual #73                 // Method org/hornetq/jms/client/HornetQSession.stop:()V
      44: goto          21
      47: aload_0
      48: iconst_0
      49: putfield      #8                  // Field justCreated:Z
      52: aload_0
      53: iconst_0
      54: putfield      #67                 // Field started:Z
      57: return

  public final synchronized void close() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field threadAwareContext:Lorg/hornetq/jms/client/ThreadAwareContext;
       4: invokevirtual #74                 // Method org/hornetq/jms/client/ThreadAwareContext.assertNotCompletionListenerThread:()V
       7: aload_0
       8: getfield      #71                 // Field threadAwareContext:Lorg/hornetq/jms/client/ThreadAwareContext;
      11: invokevirtual #72                 // Method org/hornetq/jms/client/ThreadAwareContext.assertNotMessageListenerThread:()V
      14: aload_0
      15: getfield      #1                  // Field closed:Z
      18: ifeq          22
      21: return
      22: aload_0
      23: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
      26: invokeinterface #75,  1           // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.close:()V
      31: new           #76                 // class java/util/HashSet
      34: dup
      35: aload_0
      36: getfield      #5                  // Field sessions:Ljava/util/Set;
      39: invokespecial #77                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      42: invokevirtual #78                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      45: astore_1
      46: aload_1
      47: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          72
      55: aload_1
      56: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #65                 // class org/hornetq/jms/client/HornetQSession
      64: astore_2
      65: aload_2
      66: invokevirtual #79                 // Method org/hornetq/jms/client/HornetQSession.close:()V
      69: goto          46
      72: aload_0
      73: getfield      #6                  // Field tempQueues:Ljava/util/Set;
      76: invokeinterface #80,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      81: ifne          142
      84: aload_0
      85: getfield      #6                  // Field tempQueues:Ljava/util/Set;
      88: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore_1
      94: aload_1
      95: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          142
     103: aload_1
     104: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #81                 // class org/hornetq/api/core/SimpleString
     112: astore_2
     113: aload_0
     114: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     117: invokeinterface #82,  1           // InterfaceMethod org/hornetq/api/core/client/ClientSession.isClosed:()Z
     122: ifne          139
     125: aload_0
     126: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     129: aload_2
     130: invokeinterface #83,  2           // InterfaceMethod org/hornetq/api/core/client/ClientSession.deleteQueue:(Lorg/hornetq/api/core/SimpleString;)V
     135: goto          139
     138: astore_3
     139: goto          94
     142: aload_0
     143: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     146: ifnull        182
     149: aload_0
     150: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     153: invokeinterface #84,  1           // InterfaceMethod org/hornetq/api/core/client/ClientSession.close:()V
     158: goto          182
     161: astore        4
     163: aload_0
     164: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     167: ifnull        179
     170: aload_0
     171: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
     174: invokeinterface #84,  1           // InterfaceMethod org/hornetq/api/core/client/ClientSession.close:()V
     179: aload         4
     181: athrow
     182: aload_0
     183: iconst_1
     184: putfield      #1                  // Field closed:Z
     187: goto          196
     190: astore_1
     191: aload_1
     192: invokestatic  #85                 // Method org/hornetq/jms/client/JMSExceptionHelper.convertFromHornetQException:(Lorg/hornetq/api/core/HornetQException;)Ljavax/jms/JMSException;
     195: athrow
     196: return
    Exception table:
       from    to  target type
         125   135   138   Class org/hornetq/api/core/HornetQException
          72   142   161   any
         161   163   161   any
          31   187   190   Class org/hornetq/api/core/HornetQException

  public javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: invokespecial #86                 // Method checkTempQueues:(Ljavax/jms/Destination;)V
       9: aconst_null
      10: areturn

  private void checkTempQueues(javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: checkcast     #87                 // class org/hornetq/jms/client/HornetQDestination
       4: astore_2
       5: aload_2
       6: invokevirtual #88                 // Method org/hornetq/jms/client/HornetQDestination.isTemporary:()Z
       9: ifeq          55
      12: aload_0
      13: aload_2
      14: invokevirtual #89                 // Method org/hornetq/jms/client/HornetQDestination.getSimpleAddress:()Lorg/hornetq/api/core/SimpleString;
      17: invokevirtual #90                 // Method containsTemporaryQueue:(Lorg/hornetq/api/core/SimpleString;)Z
      20: ifne          55
      23: new           #53                 // class javax/jms/JMSException
      26: dup
      27: new           #45                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #91                 // String Can not create consumer for temporary destination
      36: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #93                 // String  from another JMS connection
      45: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #55                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return

  public javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic, java.lang.String, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #17                 // Field connectionType:I
       8: iconst_1
       9: if_icmpne     26
      12: ldc           #94                 // String Cannot create a durable connection consumer on a QueueConnection
      14: astore        6
      16: new           #34                 // class javax/jms/IllegalStateException
      19: dup
      20: aload         6
      22: invokespecial #36                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aload_1
      28: invokespecial #86                 // Method checkTempQueues:(Ljavax/jms/Destination;)V
      31: aconst_null
      32: areturn

  public javax.jms.Session createSession(int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: iload_1
      16: iconst_0
      17: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      20: areturn

  public javax.jms.Session createSession() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iconst_0
       7: iconst_1
       8: iconst_0
       9: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      12: areturn

  public javax.jms.QueueSession createQueueSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iload_1
       8: iload_2
       9: invokestatic  #33                 // Method checkAck:(ZI)I
      12: iconst_1
      13: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      16: areturn

  public static int checkAck(boolean, int);
    Code:
       0: iload_0
       1: ifne          10
       4: iload_1
       5: ifne          10
       8: iconst_1
       9: ireturn
      10: iload_1
      11: ireturn

  public javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: invokespecial #86                 // Method checkTempQueues:(Ljavax/jms/Destination;)V
       9: aconst_null
      10: areturn

  public javax.jms.TopicSession createTopicSession(boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iload_1
       8: iload_2
       9: invokestatic  #33                 // Method checkAck:(ZI)I
      12: iconst_2
      13: invokevirtual #32                 // Method createSessionInternal:(ZZII)Lorg/hornetq/jms/client/HornetQSession;
      16: areturn

  public javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: invokespecial #86                 // Method checkTempQueues:(Ljavax/jms/Destination;)V
       9: aconst_null
      10: areturn

  public javax.jms.ConnectionConsumer createSharedConnectionConsumer(javax.jms.Topic, java.lang.String, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: areturn

  public javax.jms.ConnectionConsumer createSharedDurableConnectionConsumer(javax.jms.Topic, java.lang.String, java.lang.String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: areturn

  public void setFailoverListener(org.hornetq.api.core.client.FailoverEventListener) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field justCreated:Z
       9: aload_0
      10: aload_1
      11: putfield      #96                 // Field failoverEventListener:Lorg/hornetq/api/core/client/FailoverEventListener;
      14: return

  public org.hornetq.api.core.client.FailoverEventListener getFailoverListener() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method checkClosed:()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field justCreated:Z
       9: aload_0
      10: getfield      #96                 // Field failoverEventListener:Lorg/hornetq/api/core/client/FailoverEventListener;
      13: areturn

  public void addTemporaryQueue(org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tempQueues:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #97,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #7                  // Field knownDestinations:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #97,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public void removeTemporaryQueue(org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tempQueues:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addKnownDestination(org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #7                  // Field knownDestinations:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #97,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean containsKnownDestination(org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #7                  // Field knownDestinations:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #99,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsTemporaryQueue(org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tempQueues:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #99,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean hasNoLocal();
    Code:
       0: aload_0
       1: getfield      #100                // Field hasNoLocal:Z
       4: ireturn

  public void setHasNoLocal();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #100                // Field hasNoLocal:Z
       5: return

  public org.hornetq.api.core.SimpleString getUID();
    Code:
       0: aload_0
       1: getfield      #22                 // Field uid:Lorg/hornetq/api/core/SimpleString;
       4: areturn

  public void removeSession(org.hornetq.jms.client.HornetQSession);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.hornetq.api.core.client.ClientSession getInitialSession();
    Code:
       0: aload_0
       1: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
       4: areturn

  protected final void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #1                  // Field closed:Z
       4: ifne          23
       7: getstatic     #101                // Field org/hornetq/jms/client/HornetQJMSClientLogger.LOGGER:Lorg/hornetq/jms/client/HornetQJMSClientLogger;
      10: aload_0
      11: getfield      #29                 // Field creationStack:Ljava/lang/Exception;
      14: invokeinterface #102,  2          // InterfaceMethod org/hornetq/jms/client/HornetQJMSClientLogger.connectionLeftOpen:(Ljava/lang/Exception;)V
      19: aload_0
      20: invokevirtual #103                // Method close:()V
      23: return

  protected boolean isXA();
    Code:
       0: iconst_0
       1: ireturn

  protected final org.hornetq.jms.client.HornetQSession createSessionInternal(boolean, boolean, int, int) throws javax.jms.JMSException;
    Code:
       0: iload_2
       1: ifeq          6
       4: iconst_0
       5: istore_3
       6: iload_3
       7: ifne          53
      10: aload_0
      11: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
      14: aload_0
      15: getfield      #15                 // Field username:Ljava/lang/String;
      18: aload_0
      19: getfield      #16                 // Field password:Ljava/lang/String;
      22: iload_1
      23: iconst_0
      24: iconst_0
      25: aload_0
      26: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
      29: invokeinterface #104,  1          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.getServerLocator:()Lorg/hornetq/api/core/client/ServerLocator;
      34: invokeinterface #105,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isPreAcknowledge:()Z
      39: aload_0
      40: getfield      #26                 // Field transactionBatchSize:I
      43: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
      48: astore        5
      50: goto          293
      53: iload_3
      54: iconst_1
      55: if_icmpne     98
      58: aload_0
      59: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
      62: aload_0
      63: getfield      #15                 // Field username:Ljava/lang/String;
      66: aload_0
      67: getfield      #16                 // Field password:Ljava/lang/String;
      70: iload_1
      71: iconst_1
      72: iconst_1
      73: aload_0
      74: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
      77: invokeinterface #104,  1          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.getServerLocator:()Lorg/hornetq/api/core/client/ServerLocator;
      82: invokeinterface #105,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isPreAcknowledge:()Z
      87: iconst_0
      88: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
      93: astore        5
      95: goto          293
      98: iload_3
      99: iconst_3
     100: if_icmpne     146
     103: aload_0
     104: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
     107: aload_0
     108: getfield      #15                 // Field username:Ljava/lang/String;
     111: aload_0
     112: getfield      #16                 // Field password:Ljava/lang/String;
     115: iload_1
     116: iconst_1
     117: iconst_1
     118: aload_0
     119: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
     122: invokeinterface #104,  1          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.getServerLocator:()Lorg/hornetq/api/core/client/ServerLocator;
     127: invokeinterface #105,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isPreAcknowledge:()Z
     132: aload_0
     133: getfield      #25                 // Field dupsOKBatchSize:I
     136: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
     141: astore        5
     143: goto          293
     146: iload_3
     147: iconst_2
     148: if_icmpne     194
     151: aload_0
     152: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
     155: aload_0
     156: getfield      #15                 // Field username:Ljava/lang/String;
     159: aload_0
     160: getfield      #16                 // Field password:Ljava/lang/String;
     163: iload_1
     164: iconst_1
     165: iconst_0
     166: aload_0
     167: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
     170: invokeinterface #104,  1          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.getServerLocator:()Lorg/hornetq/api/core/client/ServerLocator;
     175: invokeinterface #105,  1          // InterfaceMethod org/hornetq/api/core/client/ServerLocator.isPreAcknowledge:()Z
     180: aload_0
     181: getfield      #26                 // Field transactionBatchSize:I
     184: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
     189: astore        5
     191: goto          293
     194: iload_3
     195: bipush        101
     197: if_icmpne     230
     200: aload_0
     201: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
     204: aload_0
     205: getfield      #15                 // Field username:Ljava/lang/String;
     208: aload_0
     209: getfield      #16                 // Field password:Ljava/lang/String;
     212: iload_1
     213: iconst_1
     214: iconst_0
     215: iconst_0
     216: aload_0
     217: getfield      #26                 // Field transactionBatchSize:I
     220: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
     225: astore        5
     227: goto          293
     230: iload_3
     231: bipush        100
     233: if_icmpne     266
     236: aload_0
     237: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
     240: aload_0
     241: getfield      #15                 // Field username:Ljava/lang/String;
     244: aload_0
     245: getfield      #16                 // Field password:Ljava/lang/String;
     248: iload_1
     249: iconst_1
     250: iconst_0
     251: iconst_1
     252: aload_0
     253: getfield      #26                 // Field transactionBatchSize:I
     256: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
     261: astore        5
     263: goto          293
     266: new           #108                // class javax/jms/JMSRuntimeException
     269: dup
     270: new           #45                 // class java/lang/StringBuilder
     273: dup
     274: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     277: ldc           #109                // String Invalid ackmode:
     279: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: iload_3
     283: invokevirtual #110                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     286: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     289: invokespecial #111                // Method javax/jms/JMSRuntimeException."<init>":(Ljava/lang/String;)V
     292: athrow
     293: aload_0
     294: iconst_0
     295: putfield      #8                  // Field justCreated:Z
     298: aload         5
     300: aload_0
     301: getfield      #11                 // Field listener:Lorg/hornetq/api/core/client/SessionFailureListener;
     304: invokeinterface #112,  2          // InterfaceMethod org/hornetq/api/core/client/ClientSession.addFailureListener:(Lorg/hornetq/api/core/client/SessionFailureListener;)V
     309: aload         5
     311: aload_0
     312: getfield      #14                 // Field failoverListener:Lorg/hornetq/api/core/client/FailoverEventListener;
     315: invokeinterface #113,  2          // InterfaceMethod org/hornetq/api/core/client/ClientSession.addFailoverListener:(Lorg/hornetq/api/core/client/FailoverEventListener;)V
     320: aload_0
     321: iload_1
     322: iload_2
     323: iload_3
     324: aload         5
     326: iload         4
     328: invokevirtual #114                // Method createHQSession:(ZZILorg/hornetq/api/core/client/ClientSession;I)Lorg/hornetq/jms/client/HornetQSession;
     331: astore        6
     333: aload_0
     334: getfield      #5                  // Field sessions:Ljava/util/Set;
     337: aload         6
     339: invokeinterface #97,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     344: pop
     345: aload_0
     346: getfield      #67                 // Field started:Z
     349: ifeq          359
     352: aload         5
     354: invokeinterface #115,  1          // InterfaceMethod org/hornetq/api/core/client/ClientSession.start:()V
     359: aload_0
     360: aload         5
     362: invokespecial #52                 // Method addSessionMetaData:(Lorg/hornetq/api/core/client/ClientSession;)V
     365: aload         6
     367: areturn
     368: astore        5
     370: aload         5
     372: invokestatic  #85                 // Method org/hornetq/jms/client/JMSExceptionHelper.convertFromHornetQException:(Lorg/hornetq/api/core/HornetQException;)Ljavax/jms/JMSException;
     375: athrow
    Exception table:
       from    to  target type
           6   367   368   Class org/hornetq/api/core/HornetQException

  protected org.hornetq.jms.client.HornetQSession createHQSession(boolean, boolean, int, org.hornetq.api.core.client.ClientSession, int);
    Code:
       0: iload_1
       1: ifeq          20
       4: new           #116                // class org/hornetq/jms/client/HornetQXASession
       7: dup
       8: aload_0
       9: iload_2
      10: iconst_1
      11: iload_3
      12: aload         4
      14: iload         5
      16: invokespecial #117                // Method org/hornetq/jms/client/HornetQXASession."<init>":(Lorg/hornetq/jms/client/HornetQConnection;ZZILorg/hornetq/api/core/client/ClientSession;I)V
      19: areturn
      20: new           #65                 // class org/hornetq/jms/client/HornetQSession
      23: dup
      24: aload_0
      25: iload_2
      26: iconst_0
      27: iload_3
      28: aload         4
      30: iload         5
      32: invokespecial #118                // Method org/hornetq/jms/client/HornetQSession."<init>":(Lorg/hornetq/jms/client/HornetQConnection;ZZILorg/hornetq/api/core/client/ClientSession;I)V
      35: areturn

  protected final void checkClosed() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field closed:Z
       4: ifeq          17
       7: new           #34                 // class javax/jms/IllegalStateException
      10: dup
      11: ldc           #119                // String Connection is closed
      13: invokespecial #36                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void authorize() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field sessionFactory:Lorg/hornetq/api/core/client/ClientSessionFactory;
       5: aload_0
       6: getfield      #15                 // Field username:Ljava/lang/String;
       9: aload_0
      10: getfield      #16                 // Field password:Ljava/lang/String;
      13: iconst_0
      14: iconst_0
      15: iconst_0
      16: iconst_0
      17: iconst_0
      18: invokeinterface #106,  8          // InterfaceMethod org/hornetq/api/core/client/ClientSessionFactory.createSession:(Ljava/lang/String;Ljava/lang/String;ZZZZI)Lorg/hornetq/api/core/client/ClientSession;
      23: putfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
      26: aload_0
      27: aload_0
      28: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
      31: invokespecial #52                 // Method addSessionMetaData:(Lorg/hornetq/api/core/client/ClientSession;)V
      34: aload_0
      35: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
      38: aload_0
      39: getfield      #11                 // Field listener:Lorg/hornetq/api/core/client/SessionFailureListener;
      42: invokeinterface #112,  2          // InterfaceMethod org/hornetq/api/core/client/ClientSession.addFailureListener:(Lorg/hornetq/api/core/client/SessionFailureListener;)V
      47: aload_0
      48: getfield      #38                 // Field initialSession:Lorg/hornetq/api/core/client/ClientSession;
      51: aload_0
      52: getfield      #14                 // Field failoverListener:Lorg/hornetq/api/core/client/FailoverEventListener;
      55: invokeinterface #113,  2          // InterfaceMethod org/hornetq/api/core/client/ClientSession.addFailoverListener:(Lorg/hornetq/api/core/client/FailoverEventListener;)V
      60: goto          69
      63: astore_1
      64: aload_1
      65: invokestatic  #85                 // Method org/hornetq/jms/client/JMSExceptionHelper.convertFromHornetQException:(Lorg/hornetq/api/core/HornetQException;)Ljavax/jms/JMSException;
      68: athrow
      69: return
    Exception table:
       from    to  target type
           0    60    63   Class org/hornetq/api/core/HornetQException

  private void addSessionMetaData(org.hornetq.api.core.client.ClientSession) throws org.hornetq.api.core.HornetQException;
    Code:
       0: aload_1
       1: ldc           #120                // String jms-session
       3: ldc           #121                // String
       5: invokeinterface #122,  3          // InterfaceMethod org/hornetq/api/core/client/ClientSession.addMetaData:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: getfield      #18                 // Field clientID:Ljava/lang/String;
      14: ifnull        29
      17: aload_1
      18: ldc           #39                 // String jms-client-id
      20: aload_0
      21: getfield      #18                 // Field clientID:Ljava/lang/String;
      24: invokeinterface #122,  3          // InterfaceMethod org/hornetq/api/core/client/ClientSession.addMetaData:(Ljava/lang/String;Ljava/lang/String;)V
      29: return

  public void setReference(org.hornetq.jms.client.HornetQConnectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #123                // Field factoryReference:Lorg/hornetq/jms/client/HornetQConnectionFactory;
       5: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #67                 // Field started:Z
       4: ireturn

  static boolean access$000(org.hornetq.jms.client.HornetQConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field closed:Z
       4: ireturn

  static {};
    Code:
       0: new           #81                 // class org/hornetq/api/core/SimpleString
       3: dup
       4: ldc           #124                // String __HQ_CID
       6: invokespecial #125                // Method org/hornetq/api/core/SimpleString."<init>":(Ljava/lang/String;)V
       9: putstatic     #126                // Field CONNECTION_ID_PROPERTY_NAME:Lorg/hornetq/api/core/SimpleString;
      12: return
}
