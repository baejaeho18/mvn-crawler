Compiled from "ReferenceCounterUtil.java"
public class org.hornetq.utils.ReferenceCounterUtil implements org.hornetq.utils.ReferenceCounter {
  private final java.lang.Runnable runnable;

  private final java.util.concurrent.Executor executor;

  private final java.util.concurrent.atomic.AtomicInteger uses;

  public org.hornetq.utils.ReferenceCounterUtil(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
       6: return

  public org.hornetq.utils.ReferenceCounterUtil(java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #5                  // Field uses:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field runnable:Ljava/lang/Runnable;
      21: aload_0
      22: aload_2
      23: putfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      26: return

  public int increment();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uses:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: ireturn

  public int decrement();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uses:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: iload_1
       9: ifne          44
      12: aload_0
      13: getfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      16: ifnull        35
      19: aload_0
      20: getfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      23: aload_0
      24: getfield      #6                  // Field runnable:Ljava/lang/Runnable;
      27: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      32: goto          44
      35: aload_0
      36: getfield      #6                  // Field runnable:Ljava/lang/Runnable;
      39: invokeinterface #11,  1           // InterfaceMethod java/lang/Runnable.run:()V
      44: iload_1
      45: ireturn
}
