Compiled from "NettyConnection.java"
public class org.hornetq.core.remoting.impl.netty.NettyConnection implements org.hornetq.spi.core.remoting.Connection {
  private static final int BATCHING_BUFFER_SIZE;

  protected final io.netty.channel.Channel channel;

  private boolean closed;

  private final org.hornetq.spi.core.remoting.ConnectionLifeCycleListener listener;

  private final boolean batchingEnabled;

  private final boolean directDeliver;

  private volatile org.hornetq.api.core.HornetQBuffer batchBuffer;

  private final java.util.Map<java.lang.String, java.lang.Object> configuration;

  private final java.util.concurrent.Semaphore writeLock;

  private final java.util.Set<org.hornetq.spi.core.remoting.ReadyListener> readyListeners;

  public org.hornetq.core.remoting.impl.netty.NettyConnection(java.util.Map<java.lang.String, java.lang.Object>, io.netty.channel.Channel, org.hornetq.spi.core.remoting.ConnectionLifeCycleListener, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/Semaphore
       8: dup
       9: iconst_1
      10: invokespecial #4                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      13: putfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      16: aload_0
      17: new           #6                  // class org/hornetq/utils/ConcurrentHashSet
      20: dup
      21: invokespecial #7                  // Method org/hornetq/utils/ConcurrentHashSet."<init>":()V
      24: putfield      #8                  // Field readyListeners:Ljava/util/Set;
      27: aload_0
      28: aload_1
      29: putfield      #9                  // Field configuration:Ljava/util/Map;
      32: aload_0
      33: aload_2
      34: putfield      #10                 // Field channel:Lio/netty/channel/Channel;
      37: aload_0
      38: aload_3
      39: putfield      #11                 // Field listener:Lorg/hornetq/spi/core/remoting/ConnectionLifeCycleListener;
      42: aload_0
      43: iload         4
      45: putfield      #12                 // Field batchingEnabled:Z
      48: aload_0
      49: iload         5
      51: putfield      #13                 // Field directDeliver:Z
      54: return

  public io.netty.channel.Channel getNettyChannel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public void forceClose();
    Code:
       0: aload_0
       1: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
       4: ifnull        34
       7: aload_0
       8: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      11: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      16: pop
      17: goto          34
      20: astore_1
      21: getstatic     #16                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      24: aload_1
      25: invokevirtual #17                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      28: aload_1
      29: invokeinterface #18,  3           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      34: return
    Exception table:
       from    to  target type
           7    17    20   Class java/lang/Throwable

  public io.netty.channel.Channel getChannel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #19                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      12: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      17: ldc           #21                 // String ssl
      19: invokeinterface #22,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      24: checkcast     #23                 // class io/netty/handler/ssl/SslHandler
      27: astore_1
      28: aload_0
      29: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      32: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      37: astore_2
      38: aload_2
      39: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: istore_3
      45: iload_3
      46: ifne          61
      49: aload_0
      50: aload_1
      51: aload_0
      52: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      55: invokespecial #1                  // Method closeSSLAndChannel:(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/Channel;)V
      58: goto          76
      61: aload_2
      62: new           #26                 // class org/hornetq/core/remoting/impl/netty/NettyConnection$1
      65: dup
      66: aload_0
      67: aload_1
      68: invokespecial #27                 // Method org/hornetq/core/remoting/impl/netty/NettyConnection$1."<init>":(Lorg/hornetq/core/remoting/impl/netty/NettyConnection;Lio/netty/handler/ssl/SslHandler;)V
      71: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      76: aload_0
      77: iconst_1
      78: putfield      #19                 // Field closed:Z
      81: aload_0
      82: getfield      #11                 // Field listener:Lorg/hornetq/spi/core/remoting/ConnectionLifeCycleListener;
      85: aload_0
      86: invokevirtual #29                 // Method getID:()Ljava/lang/Object;
      89: invokeinterface #30,  2           // InterfaceMethod org/hornetq/spi/core/remoting/ConnectionLifeCycleListener.connectionDestroyed:(Ljava/lang/Object;)V
      94: return

  public org.hornetq.api.core.HornetQBuffer createTransportBuffer(int);
    Code:
       0: new           #31                 // class org/hornetq/core/buffers/impl/ChannelBufferWrapper
       3: dup
       4: getstatic     #32                 // Field org/hornetq/core/remoting/impl/netty/PartialPooledByteBufAllocator.INSTANCE:Lorg/hornetq/core/remoting/impl/netty/PartialPooledByteBufAllocator;
       7: iload_1
       8: invokevirtual #33                 // Method org/hornetq/core/remoting/impl/netty/PartialPooledByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      11: iconst_1
      12: invokespecial #34                 // Method org/hornetq/core/buffers/impl/ChannelBufferWrapper."<init>":(Lio/netty/buffer/ByteBuf;Z)V
      15: areturn

  public java.lang.Object getID();
    Code:
       0: aload_0
       1: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
       4: invokevirtual #35                 // Method java/lang/Object.hashCode:()I
       7: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: areturn

  public void checkFlushBatchBuffer();
    Code:
       0: aload_0
       1: getfield      #12                 // Field batchingEnabled:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      12: invokevirtual #37                 // Method java/util/concurrent/Semaphore.tryAcquire:()Z
      15: ifeq          87
      18: aload_0
      19: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      22: ifnull        67
      25: aload_0
      26: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      29: invokeinterface #39,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.readable:()Z
      34: ifeq          67
      37: aload_0
      38: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      41: aload_0
      42: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      45: invokeinterface #40,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.byteBuf:()Lio/netty/buffer/ByteBuf;
      50: invokeinterface #41,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      55: pop
      56: aload_0
      57: aload_0
      58: sipush        8192
      61: invokevirtual #43                 // Method createTransportBuffer:(I)Lorg/hornetq/api/core/HornetQBuffer;
      64: putfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      67: aload_0
      68: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      71: invokevirtual #44                 // Method java/util/concurrent/Semaphore.release:()V
      74: goto          87
      77: astore_1
      78: aload_0
      79: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      82: invokevirtual #44                 // Method java/util/concurrent/Semaphore.release:()V
      85: aload_1
      86: athrow
      87: return
    Exception table:
       from    to  target type
          18    67    77   any

  public void write(org.hornetq.api.core.HornetQBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #45                 // Method write:(Lorg/hornetq/api/core/HornetQBuffer;ZZ)V
       7: return

  public void write(org.hornetq.api.core.HornetQBuffer, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #46                 // Method java/util/concurrent/Semaphore.acquire:()V
       7: aload_0
       8: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      11: ifnonnull     39
      14: aload_0
      15: getfield      #12                 // Field batchingEnabled:Z
      18: ifeq          39
      21: iload_3
      22: ifeq          39
      25: iload_2
      26: ifne          39
      29: aload_0
      30: sipush        8192
      33: invokestatic  #47                 // Method org/hornetq/api/core/HornetQBuffers.dynamicBuffer:(I)Lorg/hornetq/api/core/HornetQBuffer;
      36: putfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      39: aload_0
      40: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      43: ifnull        128
      46: aload_0
      47: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      50: aload_1
      51: iconst_0
      52: aload_1
      53: invokeinterface #48,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      58: invokeinterface #49,  4           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writeBytes:(Lorg/hornetq/api/core/HornetQBuffer;II)V
      63: aload_0
      64: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      67: invokeinterface #48,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      72: sipush        8192
      75: if_icmpge     86
      78: iload_3
      79: ifeq          86
      82: iload_2
      83: ifeq          94
      86: aload_0
      87: getfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
      90: astore_1
      91: goto          102
      94: aload_0
      95: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      98: invokevirtual #44                 // Method java/util/concurrent/Semaphore.release:()V
     101: return
     102: iload_3
     103: ifeq          110
     106: iload_2
     107: ifeq          118
     110: aload_0
     111: aconst_null
     112: putfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
     115: goto          128
     118: aload_0
     119: sipush        8192
     122: invokestatic  #47                 // Method org/hornetq/api/core/HornetQBuffers.dynamicBuffer:(I)Lorg/hornetq/api/core/HornetQBuffer;
     125: putfield      #38                 // Field batchBuffer:Lorg/hornetq/api/core/HornetQBuffer;
     128: aload_1
     129: invokeinterface #40,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.byteBuf:()Lio/netty/buffer/ByteBuf;
     134: astore        4
     136: iload_2
     137: ifeq          154
     140: aload_0
     141: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
     144: invokeinterface #50,  1           // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
     149: astore        5
     151: goto          165
     154: aload_0
     155: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
     158: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
     163: astore        5
     165: aload_0
     166: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
     169: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
     174: astore        6
     176: aload         6
     178: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     183: istore        7
     185: iload         7
     187: ifne          207
     190: aload_0
     191: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
     194: aload         4
     196: aload         5
     198: invokeinterface #52,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     203: pop
     204: goto          230
     207: new           #53                 // class org/hornetq/core/remoting/impl/netty/NettyConnection$2
     210: dup
     211: aload_0
     212: aload         4
     214: aload         5
     216: invokespecial #54                 // Method org/hornetq/core/remoting/impl/netty/NettyConnection$2."<init>":(Lorg/hornetq/core/remoting/impl/netty/NettyConnection;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
     219: astore        8
     221: aload         6
     223: aload         8
     225: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     230: iload_2
     231: ifeq          279
     234: iload         7
     236: ifne          279
     239: aload         5
     241: ldc2_w        #55                 // long 10000l
     244: invokeinterface #57,  3           // InterfaceMethod io/netty/channel/ChannelPromise.await:(J)Z
     249: istore        8
     251: iload         8
     253: ifne          264
     256: getstatic     #16                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
     259: invokeinterface #58,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.timeoutFlushingPacket:()V
     264: goto          279
     267: astore        8
     269: new           #60                 // class org/hornetq/api/core/HornetQInterruptedException
     272: dup
     273: aload         8
     275: invokespecial #61                 // Method org/hornetq/api/core/HornetQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     278: athrow
     279: aload_0
     280: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
     283: invokevirtual #44                 // Method java/util/concurrent/Semaphore.release:()V
     286: goto          301
     289: astore        9
     291: aload_0
     292: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
     295: invokevirtual #44                 // Method java/util/concurrent/Semaphore.release:()V
     298: aload         9
     300: athrow
     301: goto          316
     304: astore        4
     306: new           #60                 // class org/hornetq/api/core/HornetQInterruptedException
     309: dup
     310: aload         4
     312: invokespecial #61                 // Method org/hornetq/api/core/HornetQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     315: athrow
     316: return
    Exception table:
       from    to  target type
         239   264   267   Class java/lang/InterruptedException
           7    94   289   any
         102   279   289   any
         289   291   289   any
           0   101   304   Class java/lang/InterruptedException
         102   301   304   Class java/lang/InterruptedException

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: invokevirtual #63                 // Method java/lang/Object.toString:()Ljava/lang/String;
      20: areturn

  public boolean isDirectDeliver();
    Code:
       0: aload_0
       1: getfield      #13                 // Field directDeliver:Z
       4: ireturn

  public void addReadyListener(org.hornetq.spi.core.remoting.ReadyListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readyListeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeReadyListener(org.hornetq.spi.core.remoting.ReadyListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readyListeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.hornetq.core.security.HornetQPrincipal getDefaultHornetQPrincipal();
    Code:
       0: aconst_null
       1: areturn

  void fireReady(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readyListeners:Ljava/util/Set;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #69                 // class org/hornetq/spi/core/remoting/ReadyListener
      28: astore_3
      29: aload_3
      30: iload_1
      31: invokeinterface #70,  2           // InterfaceMethod org/hornetq/spi/core/remoting/ReadyListener.readyForWriting:(Z)V
      36: goto          10
      39: return

  public org.hornetq.api.core.TransportConfiguration getConnectorConfig();
    Code:
       0: aload_0
       1: getfield      #9                  // Field configuration:Ljava/util/Map;
       4: ifnull        24
       7: new           #71                 // class org/hornetq/api/core/TransportConfiguration
      10: dup
      11: ldc           #72                 // class org/hornetq/core/remoting/impl/netty/NettyConnectorFactory
      13: invokevirtual #73                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aload_0
      17: getfield      #9                  // Field configuration:Ljava/util/Map;
      20: invokespecial #74                 // Method org/hornetq/api/core/TransportConfiguration."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      23: areturn
      24: aconst_null
      25: areturn

  public java.lang.String toString();
    Code:
       0: new           #75                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #63                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #78                 // String [local=
      16: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      23: invokeinterface #79,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
      28: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #81                 // String , remote=
      33: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #10                 // Field channel:Lio/netty/channel/Channel;
      40: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      45: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #82                 // String ]
      50: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #83                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  private void closeSSLAndChannel(io.netty.handler.ssl.SslHandler, io.netty.channel.Channel);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: invokevirtual #84                 // Method io/netty/handler/ssl/SslHandler.close:()Lio/netty/channel/ChannelFuture;
       8: astore_3
       9: aload_3
      10: ldc2_w        #55                 // long 10000l
      13: invokeinterface #85,  3           // InterfaceMethod io/netty/channel/ChannelFuture.awaitUninterruptibly:(J)Z
      18: ifne          29
      21: getstatic     #16                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      24: invokeinterface #86,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.timeoutClosingSSL:()V
      29: goto          33
      32: astore_3
      33: aload_2
      34: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      39: astore_3
      40: aload_3
      41: ldc2_w        #55                 // long 10000l
      44: invokeinterface #85,  3           // InterfaceMethod io/netty/channel/ChannelFuture.awaitUninterruptibly:(J)Z
      49: ifne          60
      52: getstatic     #16                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      55: invokeinterface #87,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.timeoutClosingNettyChannel:()V
      60: return
    Exception table:
       from    to  target type
           4    29    32   Class java/lang/Throwable

  static void access$000(org.hornetq.core.remoting.impl.netty.NettyConnection, io.netty.handler.ssl.SslHandler, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method closeSSLAndChannel:(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/Channel;)V
       6: return
}
