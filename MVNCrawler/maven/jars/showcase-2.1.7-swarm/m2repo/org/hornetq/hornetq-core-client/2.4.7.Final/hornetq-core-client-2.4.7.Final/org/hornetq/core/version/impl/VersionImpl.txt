Compiled from "VersionImpl.java"
public class org.hornetq.core.version.impl.VersionImpl implements org.hornetq.core.version.Version,java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.String versionName;

  private final int majorVersion;

  private final int minorVersion;

  private final int microVersion;

  private final int incrementingVersion;

  private final java.lang.String versionSuffix;

  private final int[] compatibleVersionList;

  public org.hornetq.core.version.impl.VersionImpl(java.lang.String, int, int, int, int, java.lang.String, int[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field versionName:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field majorVersion:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field minorVersion:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field microVersion:I
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field incrementingVersion:I
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field versionSuffix:Ljava/lang/String;
      37: aload_0
      38: aload         7
      40: aload         7
      42: arraylength
      43: invokestatic  #8                  // Method java/util/Arrays.copyOf:([II)[I
      46: putfield      #9                  // Field compatibleVersionList:[I
      49: return

  public java.lang.String getFullVersion();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #3                  // Field majorVersion:I
      11: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      14: ldc           #13                 // String .
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #4                  // Field minorVersion:I
      23: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #13                 // String .
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #5                  // Field microVersion:I
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #13                 // String .
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #15                 // String  (
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #2                  // Field versionName:Ljava/lang/String;
      59: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #16                 // String ,
      64: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: getfield      #6                  // Field incrementingVersion:I
      71: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: ldc           #17                 // String )
      76: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: areturn

  public java.lang.String getVersionName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field versionName:Ljava/lang/String;
       4: areturn

  public int getMajorVersion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field majorVersion:I
       4: ireturn

  public int getMinorVersion();
    Code:
       0: aload_0
       1: getfield      #4                  // Field minorVersion:I
       4: ireturn

  public int getMicroVersion();
    Code:
       0: aload_0
       1: getfield      #5                  // Field microVersion:I
       4: ireturn

  public java.lang.String getVersionSuffix();
    Code:
       0: aload_0
       1: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
       4: areturn

  public int getIncrementingVersion();
    Code:
       0: aload_0
       1: getfield      #6                  // Field incrementingVersion:I
       4: ireturn

  public boolean isCompatible(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field compatibleVersionList:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     37
      17: aload_2
      18: iload         4
      20: iaload
      21: istore        5
      23: iload         5
      25: iload_1
      26: if_icmpne     31
      29: iconst_1
      30: ireturn
      31: iinc          4, 1
      34: goto          11
      37: iconst_0
      38: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #9                  // Field compatibleVersionList:[I
      13: invokestatic  #19                 // Method java/util/Arrays.hashCode:([I)I
      16: iadd
      17: istore_2
      18: bipush        31
      20: iload_2
      21: imul
      22: aload_0
      23: getfield      #6                  // Field incrementingVersion:I
      26: iadd
      27: istore_2
      28: bipush        31
      30: iload_2
      31: imul
      32: aload_0
      33: getfield      #3                  // Field majorVersion:I
      36: iadd
      37: istore_2
      38: bipush        31
      40: iload_2
      41: imul
      42: aload_0
      43: getfield      #5                  // Field microVersion:I
      46: iadd
      47: istore_2
      48: bipush        31
      50: iload_2
      51: imul
      52: aload_0
      53: getfield      #4                  // Field minorVersion:I
      56: iadd
      57: istore_2
      58: bipush        31
      60: iload_2
      61: imul
      62: aload_0
      63: getfield      #2                  // Field versionName:Ljava/lang/String;
      66: ifnonnull     73
      69: iconst_0
      70: goto          80
      73: aload_0
      74: getfield      #2                  // Field versionName:Ljava/lang/String;
      77: invokevirtual #20                 // Method java/lang/String.hashCode:()I
      80: iadd
      81: istore_2
      82: bipush        31
      84: iload_2
      85: imul
      86: aload_0
      87: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
      90: ifnonnull     97
      93: iconst_0
      94: goto          104
      97: aload_0
      98: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
     101: invokevirtual #20                 // Method java/lang/String.hashCode:()I
     104: iadd
     105: istore_2
     106: iload_2
     107: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #21                 // class org/hornetq/core/version/impl/VersionImpl
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #21                 // class org/hornetq/core/version/impl/VersionImpl
      26: astore_2
      27: aload_0
      28: getfield      #9                  // Field compatibleVersionList:[I
      31: aload_2
      32: getfield      #9                  // Field compatibleVersionList:[I
      35: invokestatic  #22                 // Method java/util/Arrays.equals:([I[I)Z
      38: ifne          43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #6                  // Field incrementingVersion:I
      47: aload_2
      48: getfield      #6                  // Field incrementingVersion:I
      51: if_icmpeq     56
      54: iconst_0
      55: ireturn
      56: aload_0
      57: getfield      #3                  // Field majorVersion:I
      60: aload_2
      61: getfield      #3                  // Field majorVersion:I
      64: if_icmpeq     69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #5                  // Field microVersion:I
      73: aload_2
      74: getfield      #5                  // Field microVersion:I
      77: if_icmpeq     82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: getfield      #4                  // Field minorVersion:I
      86: aload_2
      87: getfield      #4                  // Field minorVersion:I
      90: if_icmpeq     95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #2                  // Field versionName:Ljava/lang/String;
      99: ifnonnull     111
     102: aload_2
     103: getfield      #2                  // Field versionName:Ljava/lang/String;
     106: ifnull        127
     109: iconst_0
     110: ireturn
     111: aload_0
     112: getfield      #2                  // Field versionName:Ljava/lang/String;
     115: aload_2
     116: getfield      #2                  // Field versionName:Ljava/lang/String;
     119: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     122: ifne          127
     125: iconst_0
     126: ireturn
     127: aload_0
     128: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
     131: ifnonnull     143
     134: aload_2
     135: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
     138: ifnull        159
     141: iconst_0
     142: ireturn
     143: aload_0
     144: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
     147: aload_2
     148: getfield      #7                  // Field versionSuffix:Ljava/lang/String;
     151: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     154: ifne          159
     157: iconst_0
     158: ireturn
     159: iconst_1
     160: ireturn
}
