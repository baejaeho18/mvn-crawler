Compiled from "ServerLocatorInternal.java"
public interface org.hornetq.core.client.impl.ServerLocatorInternal extends org.hornetq.api.core.client.ServerLocator {
  public abstract void start(java.util.concurrent.Executor) throws java.lang.Exception;

  public abstract void factoryClosed(org.hornetq.api.core.client.ClientSessionFactory);

  public abstract org.hornetq.core.client.impl.AfterConnectInternalListener getAfterConnectInternalListener();

  public abstract void setAfterConnectionInternalListener(org.hornetq.core.client.impl.AfterConnectInternalListener);

  public abstract void setIdentity(java.lang.String);

  public abstract void setNodeID(java.lang.String);

  public abstract java.lang.String getNodeID();

  public abstract void cleanup();

  public abstract void resetToInitialConnectors();

  public abstract org.hornetq.core.client.impl.ClientSessionFactoryInternal connect() throws org.hornetq.api.core.HornetQException;

  public abstract org.hornetq.core.client.impl.ClientSessionFactoryInternal connectNoWarnings() throws org.hornetq.api.core.HornetQException;

  public abstract void notifyNodeUp(long, java.lang.String, java.lang.String, org.hornetq.api.core.Pair<org.hornetq.api.core.TransportConfiguration, org.hornetq.api.core.TransportConfiguration>, boolean);

  public abstract void notifyNodeDown(long, java.lang.String);

  public abstract void setClusterConnection(boolean);

  public abstract boolean isClusterConnection();

  public abstract org.hornetq.api.core.TransportConfiguration getClusterTransportConfiguration();

  public abstract void setClusterTransportConfiguration(org.hornetq.api.core.TransportConfiguration);

  public abstract org.hornetq.core.client.impl.Topology getTopology();

  public abstract void setPacketDecoder(org.hornetq.core.protocol.core.impl.PacketDecoder);
}
