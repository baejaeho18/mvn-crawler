Compiled from "HornetQClient.java"
public final class org.hornetq.api.core.client.HornetQClient {
  public static final java.lang.String DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME;

  public static final long DEFAULT_CLIENT_FAILURE_CHECK_PERIOD;

  public static final long DEFAULT_CLIENT_FAILURE_CHECK_PERIOD_INVM;

  public static final long DEFAULT_CONNECTION_TTL;

  public static final long DEFAULT_CONNECTION_TTL_INVM;

  public static final int DEFAULT_MIN_LARGE_MESSAGE_SIZE;

  public static final boolean DEFAULT_COMPRESS_LARGE_MESSAGES;

  public static final int DEFAULT_CONSUMER_WINDOW_SIZE;

  public static final int DEFAULT_CONSUMER_MAX_RATE;

  public static final int DEFAULT_CONFIRMATION_WINDOW_SIZE;

  public static final int DEFAULT_PRODUCER_WINDOW_SIZE;

  public static final int DEFAULT_PRODUCER_MAX_RATE;

  public static final boolean DEFAULT_BLOCK_ON_ACKNOWLEDGE;

  public static final boolean DEFAULT_BLOCK_ON_DURABLE_SEND;

  public static final boolean DEFAULT_BLOCK_ON_NON_DURABLE_SEND;

  public static final boolean DEFAULT_AUTO_GROUP;

  public static final long DEFAULT_CALL_TIMEOUT;

  public static final long DEFAULT_CALL_FAILOVER_TIMEOUT;

  public static final int DEFAULT_ACK_BATCH_SIZE;

  public static final boolean DEFAULT_PRE_ACKNOWLEDGE;

  public static final long DEFAULT_DISCOVERY_INITIAL_WAIT_TIMEOUT;

  public static final long DEFAULT_DISCOVERY_REFRESH_TIMEOUT;

  public static final int DEFAULT_DISCOVERY_PORT;

  public static final long DEFAULT_RETRY_INTERVAL;

  public static final double DEFAULT_RETRY_INTERVAL_MULTIPLIER;

  public static final long DEFAULT_MAX_RETRY_INTERVAL;

  public static final int DEFAULT_RECONNECT_ATTEMPTS;

  public static final int INITIAL_CONNECT_ATTEMPTS;

  public static final boolean DEFAULT_FAILOVER_ON_INITIAL_CONNECTION;

  public static final boolean DEFAULT_IS_HA;

  public static final boolean DEFAULT_USE_GLOBAL_POOLS;

  public static final int DEFAULT_THREAD_POOL_MAX_SIZE;

  public static final int DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE;

  public static final boolean DEFAULT_CACHE_LARGE_MESSAGE_CLIENT;

  public static final int DEFAULT_INITIAL_MESSAGE_PACKET_SIZE;

  public static final boolean DEFAULT_XA;

  public static final boolean DEFAULT_HA;

  public static final java.lang.String DEFAULT_CORE_PROTOCOL;

  public static org.hornetq.api.core.client.ServerLocator createServerLocatorWithoutHA(org.hornetq.api.core.TransportConfiguration...);
    Code:
       0: new           #1                  // class org/hornetq/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_0
       5: aload_0
       6: invokespecial #2                  // Method org/hornetq/core/client/impl/ServerLocatorImpl."<init>":(Z[Lorg/hornetq/api/core/TransportConfiguration;)V
       9: areturn

  public static org.hornetq.api.core.client.ServerLocator createServerLocator(boolean, org.hornetq.api.core.TransportConfiguration...);
    Code:
       0: new           #1                  // class org/hornetq/core/client/impl/ServerLocatorImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #2                  // Method org/hornetq/core/client/impl/ServerLocatorImpl."<init>":(Z[Lorg/hornetq/api/core/TransportConfiguration;)V
       9: areturn

  public static org.hornetq.api.core.client.ServerLocator createServerLocatorWithoutHA(org.hornetq.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #1                  // class org/hornetq/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_0
       5: aload_0
       6: invokespecial #3                  // Method org/hornetq/core/client/impl/ServerLocatorImpl."<init>":(ZLorg/hornetq/api/core/DiscoveryGroupConfiguration;)V
       9: areturn

  public static org.hornetq.api.core.client.ServerLocator createServerLocator(boolean, org.hornetq.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #1                  // class org/hornetq/core/client/impl/ServerLocatorImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #3                  // Method org/hornetq/core/client/impl/ServerLocatorImpl."<init>":(ZLorg/hornetq/api/core/DiscoveryGroupConfiguration;)V
       9: areturn

  public static org.hornetq.api.core.client.ServerLocator createServerLocatorWithHA(org.hornetq.api.core.TransportConfiguration...);
    Code:
       0: new           #1                  // class org/hornetq/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #2                  // Method org/hornetq/core/client/impl/ServerLocatorImpl."<init>":(Z[Lorg/hornetq/api/core/TransportConfiguration;)V
       9: areturn

  public static org.hornetq.api.core.client.ServerLocator createServerLocatorWithHA(org.hornetq.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #1                  // class org/hornetq/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #3                  // Method org/hornetq/core/client/impl/ServerLocatorImpl."<init>":(ZLorg/hornetq/api/core/DiscoveryGroupConfiguration;)V
       9: areturn

  private org.hornetq.api.core.client.HornetQClient();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #5                  // class org/hornetq/api/core/client/loadbalance/RoundRobinConnectionLoadBalancingPolicy
       2: invokevirtual #6                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
       5: putstatic     #7                  // Field DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME:Ljava/lang/String;
       8: invokestatic  #8                  // Method org/hornetq/api/config/HornetQDefaultConfiguration.getDefaultClientFailureCheckPeriod:()J
      11: putstatic     #9                  // Field DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
      14: invokestatic  #10                 // Method org/hornetq/api/config/HornetQDefaultConfiguration.getDefaultConnectionTtl:()J
      17: putstatic     #11                 // Field DEFAULT_CONNECTION_TTL:J
      20: invokestatic  #12                 // Method org/hornetq/api/config/HornetQDefaultConfiguration.getDefaultRetryIntervalMultiplier:()D
      23: putstatic     #13                 // Field DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
      26: invokestatic  #14                 // Method org/hornetq/api/config/HornetQDefaultConfiguration.getDefaultMaxRetryInterval:()J
      29: putstatic     #15                 // Field DEFAULT_MAX_RETRY_INTERVAL:J
      32: return
}
