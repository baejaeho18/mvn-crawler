Compiled from "LargeMessageControllerImpl.java"
public class org.hornetq.core.client.impl.LargeMessageControllerImpl implements org.hornetq.core.client.impl.LargeMessageController {
  private static final java.lang.String READ_ONLY_ERROR_MESSAGE;

  private final org.hornetq.core.client.impl.ClientConsumerInternal consumerInternal;

  private final java.util.concurrent.LinkedBlockingQueue<org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage> packets;

  private volatile org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage currentPacket;

  private final long totalSize;

  private final int bufferSize;

  private boolean streamEnded;

  private boolean streamClosed;

  private final long readTimeout;

  private long readerIndex;

  private boolean packetAdded;

  private long packetPosition;

  private long lastIndex;

  private long packetLastPosition;

  private java.io.OutputStream outStream;

  private volatile java.lang.Exception handledException;

  private final org.hornetq.core.client.impl.LargeMessageControllerImpl$FileCache fileCache;

  private boolean local;

  public org.hornetq.core.client.impl.LargeMessageControllerImpl(org.hornetq.core.client.impl.ClientConsumerInternal, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: aconst_null
       6: invokespecial #2                  // Method "<init>":(Lorg/hornetq/core/client/impl/ClientConsumerInternal;JJLjava/io/File;)V
       9: return

  public org.hornetq.core.client.impl.LargeMessageControllerImpl(org.hornetq.core.client.impl.ClientConsumerInternal, long, long, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: aload         6
       7: sipush        10240
      10: invokespecial #3                  // Method "<init>":(Lorg/hornetq/core/client/impl/ClientConsumerInternal;JJLjava/io/File;I)V
      13: return

  public org.hornetq.core.client.impl.LargeMessageControllerImpl(org.hornetq.core.client.impl.ClientConsumerInternal, long, long, java.io.File, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/LinkedBlockingQueue
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      12: putfield      #7                  // Field packets:Ljava/util/concurrent/LinkedBlockingQueue;
      15: aload_0
      16: aconst_null
      17: putfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      20: aload_0
      21: iconst_0
      22: putfield      #9                  // Field streamEnded:Z
      25: aload_0
      26: iconst_0
      27: putfield      #10                 // Field streamClosed:Z
      30: aload_0
      31: lconst_0
      32: putfield      #11                 // Field readerIndex:J
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field packetAdded:Z
      40: aload_0
      41: ldc2_w        #13                 // long -1l
      44: putfield      #15                 // Field packetPosition:J
      47: aload_0
      48: lconst_0
      49: putfield      #16                 // Field lastIndex:J
      52: aload_0
      53: ldc2_w        #13                 // long -1l
      56: putfield      #17                 // Field packetLastPosition:J
      59: aload_0
      60: iconst_0
      61: putfield      #18                 // Field local:Z
      64: aload_0
      65: aload_1
      66: putfield      #19                 // Field consumerInternal:Lorg/hornetq/core/client/impl/ClientConsumerInternal;
      69: aload_0
      70: lload         4
      72: putfield      #20                 // Field readTimeout:J
      75: aload_0
      76: lload_2
      77: putfield      #21                 // Field totalSize:J
      80: aload         6
      82: ifnonnull     93
      85: aload_0
      86: aconst_null
      87: putfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
      90: goto          107
      93: aload_0
      94: new           #23                 // class org/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache
      97: dup
      98: aload_0
      99: aload         6
     101: invokespecial #24                 // Method org/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache."<init>":(Lorg/hornetq/core/client/impl/LargeMessageControllerImpl;Ljava/io/File;)V
     104: putfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
     107: aload_0
     108: iload         7
     110: putfield      #1                  // Field bufferSize:I
     113: return

  public void setLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field local:Z
       5: return

  public void discardUnusedPackets();
    Code:
       0: aload_0
       1: getfield      #25                 // Field outStream:Ljava/io/OutputStream;
       4: ifnonnull     29
       7: aload_0
       8: getfield      #18                 // Field local:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: aload_0
      17: getfield      #21                 // Field totalSize:J
      20: lconst_1
      21: lsub
      22: invokespecial #26                 // Method checkForPacket:(J)V
      25: goto          29
      28: astore_1
      29: return
    Exception table:
       from    to  target type
          15    25    28   Class java/lang/Throwable

  public void addPacket(org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: aload_0
      10: iconst_1
      11: putfield      #12                 // Field packetAdded:Z
      14: aload_0
      15: getfield      #25                 // Field outStream:Ljava/io/OutputStream;
      18: ifnull        114
      21: aload_1
      22: invokevirtual #28                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.isContinues:()Z
      25: ifne          33
      28: aload_0
      29: iconst_1
      30: putfield      #9                  // Field streamEnded:Z
      33: aload_0
      34: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
      37: ifnull        51
      40: aload_0
      41: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
      44: aload_1
      45: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
      48: invokevirtual #30                 // Method org/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache.cachePackage:([B)V
      51: aload_0
      52: getfield      #25                 // Field outStream:Ljava/io/OutputStream;
      55: aload_1
      56: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
      59: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
      62: aload_1
      63: invokevirtual #32                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getPacketSize:()I
      66: istore_2
      67: aload_1
      68: invokevirtual #28                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.isContinues:()Z
      71: istore_3
      72: aload_0
      73: invokevirtual #33                 // Method java/lang/Object.notifyAll:()V
      76: aload_0
      77: getfield      #9                  // Field streamEnded:Z
      80: ifeq          90
      83: aload_0
      84: getfield      #25                 // Field outStream:Ljava/io/OutputStream;
      87: invokevirtual #34                 // Method java/io/OutputStream.close:()V
      90: goto          162
      93: astore        5
      95: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      98: aload         5
     100: invokeinterface #37,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorAddingPacket:(Ljava/lang/Exception;)V
     105: aload_0
     106: aload         5
     108: putfield      #38                 // Field handledException:Ljava/lang/Exception;
     111: goto          162
     114: aload_0
     115: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
     118: ifnull        153
     121: aload_0
     122: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
     125: aload_1
     126: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
     129: invokevirtual #30                 // Method org/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache.cachePackage:([B)V
     132: goto          153
     135: astore        5
     137: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
     140: aload         5
     142: invokeinterface #37,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorAddingPacket:(Ljava/lang/Exception;)V
     147: aload_0
     148: aload         5
     150: putfield      #38                 // Field handledException:Ljava/lang/Exception;
     153: aload_0
     154: getfield      #7                  // Field packets:Ljava/util/concurrent/LinkedBlockingQueue;
     157: aload_1
     158: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;)Z
     161: pop
     162: aload         4
     164: monitorexit
     165: goto          176
     168: astore        6
     170: aload         4
     172: monitorexit
     173: aload         6
     175: athrow
     176: iload_2
     177: ifeq          220
     180: aload_0
     181: getfield      #19                 // Field consumerInternal:Lorg/hornetq/core/client/impl/ClientConsumerInternal;
     184: iload_2
     185: iload_3
     186: ifne          193
     189: iconst_1
     190: goto          194
     193: iconst_0
     194: invokeinterface #40,  3           // InterfaceMethod org/hornetq/core/client/impl/ClientConsumerInternal.flowControl:(IZ)V
     199: goto          220
     202: astore        4
     204: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
     207: aload         4
     209: invokeinterface #37,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorAddingPacket:(Ljava/lang/Exception;)V
     214: aload_0
     215: aload         4
     217: putfield      #38                 // Field handledException:Ljava/lang/Exception;
     220: return
    Exception table:
       from    to  target type
          21    90    93   Class java/lang/Exception
         121   132   135   Class java/lang/Exception
           9   165   168   any
         168   173   168   any
         180   199   202   Class java/lang/Exception

  public void cancel();
    Code:
       0: aload_0
       1: getstatic     #41                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
       4: invokeinterface #42,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.largeMessageInterrupted:()Lorg/hornetq/api/core/HornetQLargeMessageInterruptedException;
       9: putfield      #38                 // Field handledException:Ljava/lang/Exception;
      12: aload_0
      13: dup
      14: astore_1
      15: monitorenter
      16: iconst_0
      17: istore_2
      18: aconst_null
      19: astore_3
      20: aload_0
      21: getfield      #7                  // Field packets:Ljava/util/concurrent/LinkedBlockingQueue;
      24: invokevirtual #43                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      27: checkcast     #44                 // class org/hornetq/core/protocol/core/Packet
      30: dup
      31: astore_3
      32: ifnull        47
      35: iload_2
      36: aload_3
      37: invokeinterface #45,  1           // InterfaceMethod org/hornetq/core/protocol/core/Packet.getPacketSize:()I
      42: iadd
      43: istore_2
      44: goto          20
      47: aload_0
      48: getfield      #19                 // Field consumerInternal:Lorg/hornetq/core/client/impl/ClientConsumerInternal;
      51: iload_2
      52: iconst_0
      53: invokeinterface #40,  3           // InterfaceMethod org/hornetq/core/client/impl/ClientConsumerInternal.flowControl:(IZ)V
      58: goto          73
      61: astore        4
      63: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      66: aload         4
      68: invokeinterface #46,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorCallingCancel:(Ljava/lang/Exception;)V
      73: aload_0
      74: getfield      #7                  // Field packets:Ljava/util/concurrent/LinkedBlockingQueue;
      77: new           #47                 // class org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage
      80: dup
      81: invokespecial #48                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage."<init>":()V
      84: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;)Z
      87: pop
      88: aload_0
      89: iconst_1
      90: putfield      #9                  // Field streamEnded:Z
      93: aload_0
      94: iconst_1
      95: putfield      #10                 // Field streamClosed:Z
      98: aload_0
      99: invokevirtual #33                 // Method java/lang/Object.notifyAll:()V
     102: aload_1
     103: monitorexit
     104: goto          114
     107: astore        5
     109: aload_1
     110: monitorexit
     111: aload         5
     113: athrow
     114: return
    Exception table:
       from    to  target type
          47    58    61   Class java/lang/Exception
          16   104   107   any
         107   111   107   any

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
       4: ifnull        14
       7: aload_0
       8: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
      11: invokevirtual #49                 // Method org/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache.close:()V
      14: return

  public void setOutputStream(java.io.OutputStream) throws org.hornetq.api.core.HornetQException;
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: aload_0
      10: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      13: ifnull        30
      16: aload_0
      17: aload_1
      18: aload_0
      19: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      22: invokespecial #50                 // Method sendPacketToOutput:(Ljava/io/OutputStream;Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;)V
      25: aload_0
      26: aconst_null
      27: putfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      30: aload_0
      31: getfield      #38                 // Field handledException:Ljava/lang/Exception;
      34: ifnonnull     81
      37: aload_0
      38: getfield      #7                  // Field packets:Ljava/util/concurrent/LinkedBlockingQueue;
      41: invokevirtual #43                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      44: checkcast     #47                 // class org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage
      47: astore        5
      49: aload         5
      51: ifnonnull     57
      54: goto          81
      57: iload_2
      58: aload         5
      60: invokevirtual #32                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getPacketSize:()I
      63: iadd
      64: istore_2
      65: aload         5
      67: invokevirtual #28                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.isContinues:()Z
      70: istore_3
      71: aload_0
      72: aload_1
      73: aload         5
      75: invokespecial #50                 // Method sendPacketToOutput:(Ljava/io/OutputStream;Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;)V
      78: goto          30
      81: aload_0
      82: invokespecial #51                 // Method checkException:()V
      85: aload_0
      86: aload_1
      87: putfield      #25                 // Field outStream:Ljava/io/OutputStream;
      90: aload         4
      92: monitorexit
      93: goto          104
      96: astore        6
      98: aload         4
     100: monitorexit
     101: aload         6
     103: athrow
     104: iload_2
     105: ifle          127
     108: aload_0
     109: getfield      #19                 // Field consumerInternal:Lorg/hornetq/core/client/impl/ClientConsumerInternal;
     112: iload_2
     113: iload_3
     114: ifne          121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: invokeinterface #40,  3           // InterfaceMethod org/hornetq/core/client/impl/ClientConsumerInternal.flowControl:(IZ)V
     127: return
    Exception table:
       from    to  target type
           9    93    96   any
          96   101    96   any

  public synchronized void saveBuffer(java.io.OutputStream) throws org.hornetq.api.core.HornetQException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field streamClosed:Z
       4: ifeq          16
       7: getstatic     #41                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
      10: invokeinterface #52,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.largeMessageLostSession:()Lorg/hornetq/api/core/HornetQIllegalStateException;
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #53                 // Method setOutputStream:(Ljava/io/OutputStream;)V
      21: aload_0
      22: lconst_0
      23: invokevirtual #54                 // Method waitCompletion:(J)Z
      26: pop
      27: return

  public synchronized boolean waitCompletion(long) throws org.hornetq.api.core.HornetQException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field outStream:Ljava/io/OutputStream;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: lload_1
      10: lconst_0
      11: lcmp
      12: ifeq          24
      15: invokestatic  #55                 // Method java/lang/System.currentTimeMillis:()J
      18: lload_1
      19: ladd
      20: lstore_3
      21: goto          33
      24: invokestatic  #55                 // Method java/lang/System.currentTimeMillis:()J
      27: aload_0
      28: getfield      #20                 // Field readTimeout:J
      31: ladd
      32: lstore_3
      33: aload_0
      34: getfield      #9                  // Field streamEnded:Z
      37: ifne          141
      40: aload_0
      41: getfield      #38                 // Field handledException:Ljava/lang/Exception;
      44: ifnonnull     141
      47: aload_0
      48: lload_1
      49: lconst_0
      50: lcmp
      51: ifne          61
      54: aload_0
      55: getfield      #20                 // Field readTimeout:J
      58: goto          62
      61: lload_1
      62: invokevirtual #56                 // Method java/lang/Object.wait:(J)V
      65: goto          80
      68: astore        5
      70: new           #58                 // class org/hornetq/api/core/HornetQInterruptedException
      73: dup
      74: aload         5
      76: invokespecial #59                 // Method org/hornetq/api/core/HornetQInterruptedException."<init>":(Ljava/lang/Throwable;)V
      79: athrow
      80: aload_0
      81: getfield      #9                  // Field streamEnded:Z
      84: ifne          33
      87: aload_0
      88: getfield      #38                 // Field handledException:Ljava/lang/Exception;
      91: ifnonnull     33
      94: lload_1
      95: lconst_0
      96: lcmp
      97: ifeq          117
     100: invokestatic  #55                 // Method java/lang/System.currentTimeMillis:()J
     103: lload_3
     104: lcmp
     105: ifle          117
     108: getstatic     #41                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
     111: invokeinterface #60,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.timeoutOnLargeMessage:()Lorg/hornetq/api/core/HornetQLargeMessageException;
     116: athrow
     117: invokestatic  #55                 // Method java/lang/System.currentTimeMillis:()J
     120: lload_3
     121: lcmp
     122: ifle          33
     125: aload_0
     126: getfield      #12                 // Field packetAdded:Z
     129: ifne          33
     132: getstatic     #41                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
     135: invokeinterface #60,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.timeoutOnLargeMessage:()Lorg/hornetq/api/core/HornetQLargeMessageException;
     140: athrow
     141: aload_0
     142: invokespecial #51                 // Method checkException:()V
     145: aload_0
     146: getfield      #9                  // Field streamEnded:Z
     149: ireturn
    Exception table:
       from    to  target type
          47    65    68   Class java/lang/InterruptedException

  private void checkException() throws org.hornetq.api.core.HornetQException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field handledException:Ljava/lang/Exception;
       4: ifnull        42
       7: aload_0
       8: getfield      #38                 // Field handledException:Ljava/lang/Exception;
      11: instanceof    #61                 // class org/hornetq/api/core/HornetQException
      14: ifeq          25
      17: aload_0
      18: getfield      #38                 // Field handledException:Ljava/lang/Exception;
      21: checkcast     #61                 // class org/hornetq/api/core/HornetQException
      24: athrow
      25: new           #61                 // class org/hornetq/api/core/HornetQException
      28: dup
      29: getstatic     #62                 // Field org/hornetq/api/core/HornetQExceptionType.LARGE_MESSAGE_ERROR_BODY:Lorg/hornetq/api/core/HornetQExceptionType;
      32: ldc           #63                 // String Error on saving LargeMessageBufferImpl
      34: aload_0
      35: getfield      #38                 // Field handledException:Ljava/lang/Exception;
      38: invokespecial #64                 // Method org/hornetq/api/core/HornetQException."<init>":(Lorg/hornetq/api/core/HornetQExceptionType;Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: return

  public int capacity();
    Code:
       0: iconst_m1
       1: ireturn

  public byte readByte();
    Code:
       0: aload_0
       1: aload_0
       2: dup
       3: getfield      #11                 // Field readerIndex:J
       6: dup2_x1
       7: lconst_1
       8: ladd
       9: putfield      #11                 // Field readerIndex:J
      12: invokespecial #65                 // Method getByte:(J)B
      15: ireturn

  public byte getByte(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokespecial #65                 // Method getByte:(J)B
       6: ireturn

  private byte getByte(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #26                 // Method checkForPacket:(J)V
       5: aload_0
       6: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
       9: ifnull        30
      12: lload_1
      13: aload_0
      14: getfield      #15                 // Field packetPosition:J
      17: lcmp
      18: ifge          30
      21: aload_0
      22: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
      25: lload_1
      26: invokevirtual #66                 // Method org/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache.getByteFromCache:(J)B
      29: ireturn
      30: aload_0
      31: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      34: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
      37: lload_1
      38: aload_0
      39: getfield      #15                 // Field packetPosition:J
      42: lsub
      43: l2i
      44: baload
      45: ireturn

  public void getBytes(int, org.hornetq.api.core.HornetQBuffer, int, int);
    Code:
       0: iload         4
       2: newarray       byte
       4: astore        5
       6: aload_0
       7: iload_1
       8: aload         5
      10: invokevirtual #67                 // Method getBytes:(I[B)V
      13: aload_2
      14: iload_3
      15: aload         5
      17: invokeinterface #68,  3           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.setBytes:(I[B)V
      22: return

  private void getBytes(long, org.hornetq.api.core.HornetQBuffer, int, int);
    Code:
       0: iload         5
       2: newarray       byte
       4: astore        6
       6: aload_0
       7: lload_1
       8: aload         6
      10: invokevirtual #69                 // Method getBytes:(J[B)V
      13: aload_3
      14: iload         4
      16: aload         6
      18: invokeinterface #68,  3           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.setBytes:(I[B)V
      23: return

  public void getBytes(int, byte[], int, int);
    Code:
       0: iload         4
       2: newarray       byte
       4: astore        5
       6: aload_0
       7: iload_1
       8: aload         5
      10: invokevirtual #67                 // Method getBytes:(I[B)V
      13: aload         5
      15: iconst_0
      16: aload_2
      17: iload_3
      18: iload         4
      20: invokestatic  #70                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: return

  public void getBytes(long, byte[], int, int);
    Code:
       0: iload         5
       2: newarray       byte
       4: astore        6
       6: aload_0
       7: lload_1
       8: aload         6
      10: invokevirtual #69                 // Method getBytes:(J[B)V
      13: aload         6
      15: iconst_0
      16: aload_3
      17: iload         4
      19: iload         5
      21: invokestatic  #70                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: return

  public void getBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_2
       1: invokevirtual #71                 // Method java/nio/ByteBuffer.remaining:()I
       4: newarray       byte
       6: astore_3
       7: aload_0
       8: iload_1
       9: aload_3
      10: invokevirtual #67                 // Method getBytes:(I[B)V
      13: aload_2
      14: aload_3
      15: invokevirtual #72                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      18: pop
      19: return

  public void getBytes(long, java.nio.ByteBuffer);
    Code:
       0: aload_3
       1: invokevirtual #71                 // Method java/nio/ByteBuffer.remaining:()I
       4: newarray       byte
       6: astore        4
       8: aload_0
       9: lload_1
      10: aload         4
      12: invokevirtual #69                 // Method getBytes:(J[B)V
      15: aload_3
      16: aload         4
      18: invokevirtual #72                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      21: pop
      22: return

  public void getBytes(int, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        4
       5: aload_0
       6: iload_1
       7: aload         4
       9: invokevirtual #67                 // Method getBytes:(I[B)V
      12: aload_2
      13: aload         4
      15: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
      18: return

  public void getBytes(long, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: newarray       byte
       4: astore        5
       6: aload_0
       7: lload_1
       8: aload         5
      10: invokevirtual #69                 // Method getBytes:(J[B)V
      13: aload_3
      14: aload         5
      16: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
      19: return

  public int getBytes(int, java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        4
       5: aload_0
       6: iload_1
       7: aload         4
       9: invokevirtual #67                 // Method getBytes:(I[B)V
      12: aload_2
      13: aload         4
      15: invokestatic  #73                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      18: invokeinterface #74,  2           // InterfaceMethod java/nio/channels/GatheringByteChannel.write:(Ljava/nio/ByteBuffer;)I
      23: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: bipush        24
      11: ishl
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: invokevirtual #75                 // Method getByte:(I)B
      19: sipush        255
      22: iand
      23: bipush        16
      25: ishl
      26: ior
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: invokevirtual #75                 // Method getByte:(I)B
      34: sipush        255
      37: iand
      38: bipush        8
      40: ishl
      41: ior
      42: aload_0
      43: iload_1
      44: iconst_3
      45: iadd
      46: invokevirtual #75                 // Method getByte:(I)B
      49: sipush        255
      52: iand
      53: iconst_0
      54: ishl
      55: ior
      56: ireturn

  public int getInt(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #65                 // Method getByte:(J)B
       5: sipush        255
       8: iand
       9: bipush        24
      11: ishl
      12: aload_0
      13: lload_1
      14: lconst_1
      15: ladd
      16: invokespecial #65                 // Method getByte:(J)B
      19: sipush        255
      22: iand
      23: bipush        16
      25: ishl
      26: ior
      27: aload_0
      28: lload_1
      29: ldc2_w        #76                 // long 2l
      32: ladd
      33: invokespecial #65                 // Method getByte:(J)B
      36: sipush        255
      39: iand
      40: bipush        8
      42: ishl
      43: ior
      44: aload_0
      45: lload_1
      46: ldc2_w        #78                 // long 3l
      49: ladd
      50: invokespecial #65                 // Method getByte:(J)B
      53: sipush        255
      56: iand
      57: iconst_0
      58: ishl
      59: ior
      60: ireturn

  public long getLong(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method getByte:(I)B
       5: i2l
       6: ldc2_w        #80                 // long 255l
       9: land
      10: bipush        56
      12: lshl
      13: aload_0
      14: iload_1
      15: iconst_1
      16: iadd
      17: invokevirtual #75                 // Method getByte:(I)B
      20: i2l
      21: ldc2_w        #80                 // long 255l
      24: land
      25: bipush        48
      27: lshl
      28: lor
      29: aload_0
      30: iload_1
      31: iconst_2
      32: iadd
      33: invokevirtual #75                 // Method getByte:(I)B
      36: i2l
      37: ldc2_w        #80                 // long 255l
      40: land
      41: bipush        40
      43: lshl
      44: lor
      45: aload_0
      46: iload_1
      47: iconst_3
      48: iadd
      49: invokevirtual #75                 // Method getByte:(I)B
      52: i2l
      53: ldc2_w        #80                 // long 255l
      56: land
      57: bipush        32
      59: lshl
      60: lor
      61: aload_0
      62: iload_1
      63: iconst_4
      64: iadd
      65: invokevirtual #75                 // Method getByte:(I)B
      68: i2l
      69: ldc2_w        #80                 // long 255l
      72: land
      73: bipush        24
      75: lshl
      76: lor
      77: aload_0
      78: iload_1
      79: iconst_5
      80: iadd
      81: invokevirtual #75                 // Method getByte:(I)B
      84: i2l
      85: ldc2_w        #80                 // long 255l
      88: land
      89: bipush        16
      91: lshl
      92: lor
      93: aload_0
      94: iload_1
      95: bipush        6
      97: iadd
      98: invokevirtual #75                 // Method getByte:(I)B
     101: i2l
     102: ldc2_w        #80                 // long 255l
     105: land
     106: bipush        8
     108: lshl
     109: lor
     110: aload_0
     111: iload_1
     112: bipush        7
     114: iadd
     115: invokevirtual #75                 // Method getByte:(I)B
     118: i2l
     119: ldc2_w        #80                 // long 255l
     122: land
     123: iconst_0
     124: lshl
     125: lor
     126: lreturn

  public long getLong(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #65                 // Method getByte:(J)B
       5: i2l
       6: ldc2_w        #80                 // long 255l
       9: land
      10: bipush        56
      12: lshl
      13: aload_0
      14: lload_1
      15: lconst_1
      16: ladd
      17: invokespecial #65                 // Method getByte:(J)B
      20: i2l
      21: ldc2_w        #80                 // long 255l
      24: land
      25: bipush        48
      27: lshl
      28: lor
      29: aload_0
      30: lload_1
      31: ldc2_w        #76                 // long 2l
      34: ladd
      35: invokespecial #65                 // Method getByte:(J)B
      38: i2l
      39: ldc2_w        #80                 // long 255l
      42: land
      43: bipush        40
      45: lshl
      46: lor
      47: aload_0
      48: lload_1
      49: ldc2_w        #78                 // long 3l
      52: ladd
      53: invokespecial #65                 // Method getByte:(J)B
      56: i2l
      57: ldc2_w        #80                 // long 255l
      60: land
      61: bipush        32
      63: lshl
      64: lor
      65: aload_0
      66: lload_1
      67: ldc2_w        #82                 // long 4l
      70: ladd
      71: invokespecial #65                 // Method getByte:(J)B
      74: i2l
      75: ldc2_w        #80                 // long 255l
      78: land
      79: bipush        24
      81: lshl
      82: lor
      83: aload_0
      84: lload_1
      85: ldc2_w        #84                 // long 5l
      88: ladd
      89: invokespecial #65                 // Method getByte:(J)B
      92: i2l
      93: ldc2_w        #80                 // long 255l
      96: land
      97: bipush        16
      99: lshl
     100: lor
     101: aload_0
     102: lload_1
     103: ldc2_w        #86                 // long 6l
     106: ladd
     107: invokespecial #65                 // Method getByte:(J)B
     110: i2l
     111: ldc2_w        #80                 // long 255l
     114: land
     115: bipush        8
     117: lshl
     118: lor
     119: aload_0
     120: lload_1
     121: ldc2_w        #88                 // long 7l
     124: ladd
     125: invokespecial #65                 // Method getByte:(J)B
     128: i2l
     129: ldc2_w        #80                 // long 255l
     132: land
     133: iconst_0
     134: lshl
     135: lor
     136: lreturn

  public short getShort(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method getByte:(I)B
       5: bipush        8
       7: ishl
       8: aload_0
       9: iload_1
      10: iconst_1
      11: iadd
      12: invokevirtual #75                 // Method getByte:(I)B
      15: sipush        255
      18: iand
      19: ior
      20: i2s
      21: ireturn

  public short getShort(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #65                 // Method getByte:(J)B
       5: bipush        8
       7: ishl
       8: aload_0
       9: lload_1
      10: lconst_1
      11: ladd
      12: invokespecial #65                 // Method getByte:(J)B
      15: sipush        255
      18: iand
      19: ior
      20: i2s
      21: ireturn

  private int getUnsignedMedium(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: bipush        16
      11: ishl
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: invokevirtual #75                 // Method getByte:(I)B
      19: sipush        255
      22: iand
      23: bipush        8
      25: ishl
      26: ior
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: invokevirtual #75                 // Method getByte:(I)B
      34: sipush        255
      37: iand
      38: iconst_0
      39: ishl
      40: ior
      41: ireturn

  public int getUnsignedMedium(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #65                 // Method getByte:(J)B
       5: sipush        255
       8: iand
       9: bipush        16
      11: ishl
      12: aload_0
      13: lload_1
      14: lconst_1
      15: ladd
      16: invokespecial #65                 // Method getByte:(J)B
      19: sipush        255
      22: iand
      23: bipush        8
      25: ishl
      26: ior
      27: aload_0
      28: lload_1
      29: ldc2_w        #76                 // long 2l
      32: ladd
      33: invokespecial #65                 // Method getByte:(J)B
      36: sipush        255
      39: iand
      40: iconst_0
      41: ishl
      42: ior
      43: ireturn

  public void setByte(int, byte);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setBytes(int, org.hornetq.api.core.HornetQBuffer, int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setBytes(int, byte[], int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setBytes(int, java.nio.ByteBuffer);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setInt(int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setLong(int, long);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setShort(int, short);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.nio.ByteBuffer toByteBuffer(int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public int readerIndex();
    Code:
       0: aload_0
       1: getfield      #11                 // Field readerIndex:J
       4: l2i
       5: ireturn

  public void readerIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokespecial #26                 // Method checkForPacket:(J)V
       6: goto          32
       9: astore_2
      10: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      13: aload_2
      14: invokeinterface #94,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorReadingIndex:(Ljava/lang/Exception;)V
      19: new           #95                 // class java/lang/RuntimeException
      22: dup
      23: aload_2
      24: invokevirtual #96                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      27: aload_2
      28: invokespecial #97                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: athrow
      32: aload_0
      33: iload_1
      34: i2l
      35: putfield      #11                 // Field readerIndex:J
      38: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  public int writerIndex();
    Code:
       0: aload_0
       1: getfield      #21                 // Field totalSize:J
       4: l2i
       5: ireturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #21                 // Field totalSize:J
       4: lreturn

  public void writerIndex(int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setIndex(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokespecial #26                 // Method checkForPacket:(J)V
       6: goto          32
       9: astore_3
      10: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      13: aload_3
      14: invokeinterface #98,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorSettingIndex:(Ljava/lang/Exception;)V
      19: new           #95                 // class java/lang/RuntimeException
      22: dup
      23: aload_3
      24: invokevirtual #96                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      27: aload_3
      28: invokespecial #97                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: athrow
      32: aload_0
      33: iload_1
      34: i2l
      35: putfield      #11                 // Field readerIndex:J
      38: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  public void clear();
    Code:
       0: return

  public boolean readable();
    Code:
       0: iconst_1
       1: ireturn

  public boolean writable();
    Code:
       0: iconst_0
       1: ireturn

  public int readableBytes();
    Code:
       0: aload_0
       1: getfield      #21                 // Field totalSize:J
       4: aload_0
       5: getfield      #11                 // Field readerIndex:J
       8: lsub
       9: lstore_1
      10: lload_1
      11: ldc2_w        #100                // long 2147483647l
      14: lcmp
      15: ifle          21
      18: ldc           #102                // int 2147483647
      20: ireturn
      21: aload_0
      22: getfield      #21                 // Field totalSize:J
      25: aload_0
      26: getfield      #11                 // Field readerIndex:J
      29: lsub
      30: l2i
      31: ireturn

  public int writableBytes();
    Code:
       0: iconst_0
       1: ireturn

  public void markReaderIndex();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void resetReaderIndex();
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #26                 // Method checkForPacket:(J)V
       5: goto          31
       8: astore_1
       9: getstatic     #36                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      12: aload_1
      13: invokeinterface #103,  2          // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorReSettingIndex:(Ljava/lang/Exception;)V
      18: new           #95                 // class java/lang/RuntimeException
      21: dup
      22: aload_1
      23: invokevirtual #96                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      26: aload_1
      27: invokespecial #97                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: athrow
      31: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  public void markWriterIndex();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void resetWriterIndex();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void discardReadBytes();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public short getUnsignedByte(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: i2s
      10: ireturn

  public int getUnsignedShort(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method getShort:(I)S
       5: ldc           #105                // int 65535
       7: iand
       8: ireturn

  public int getMedium(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #106                // Method getUnsignedMedium:(I)I
       5: istore_2
       6: iload_2
       7: ldc           #107                // int 8388608
       9: iand
      10: ifeq          18
      13: iload_2
      14: ldc           #108                // int -16777216
      16: ior
      17: istore_2
      18: iload_2
      19: ireturn

  public long getUnsignedInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #109                // Method getInt:(I)I
       5: i2l
       6: ldc2_w        #110                // long 4294967295l
       9: land
      10: lreturn

  public void getBytes(int, byte[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_2
       4: arraylength
       5: if_icmpge     25
       8: aload_2
       9: iload_3
      10: aload_0
      11: iload_1
      12: iinc          1, 1
      15: invokevirtual #75                 // Method getByte:(I)B
      18: bastore
      19: iinc          3, 1
      22: goto          2
      25: return

  public void getBytes(long, byte[]);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: aload_3
       6: arraylength
       7: if_icmpge     29
      10: aload_3
      11: iload         4
      13: aload_0
      14: lload_1
      15: dup2
      16: lconst_1
      17: ladd
      18: lstore_1
      19: invokespecial #65                 // Method getByte:(J)B
      22: bastore
      23: iinc          4, 1
      26: goto          3
      29: return

  public void getBytes(int, org.hornetq.api.core.HornetQBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_2
       4: invokeinterface #112,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writableBytes:()I
       9: invokevirtual #113                // Method getBytes:(ILorg/hornetq/api/core/HornetQBuffer;I)V
      12: return

  public void getBytes(int, org.hornetq.api.core.HornetQBuffer, int);
    Code:
       0: iload_3
       1: aload_2
       2: invokeinterface #112,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writableBytes:()I
       7: if_icmple     18
      10: new           #114                // class java/lang/IndexOutOfBoundsException
      13: dup
      14: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      17: athrow
      18: aload_0
      19: iload_1
      20: aload_2
      21: aload_2
      22: invokeinterface #116,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      27: iload_3
      28: invokevirtual #117                // Method getBytes:(ILorg/hornetq/api/core/HornetQBuffer;II)V
      31: aload_2
      32: aload_2
      33: invokeinterface #116,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      38: iload_3
      39: iadd
      40: invokeinterface #118,  2          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:(I)V
      45: return

  public void setBytes(int, byte[]);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setBytes(int, org.hornetq.api.core.HornetQBuffer);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setBytes(int, org.hornetq.api.core.HornetQBuffer, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setZero(int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public short readUnsignedByte();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method readByte:()B
       4: sipush        255
       7: iand
       8: i2s
       9: ireturn

  public short readShort();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: invokevirtual #120                // Method getShort:(J)S
       8: istore_1
       9: aload_0
      10: dup
      11: getfield      #11                 // Field readerIndex:J
      14: ldc2_w        #76                 // long 2l
      17: ladd
      18: putfield      #11                 // Field readerIndex:J
      21: iload_1
      22: ireturn

  public int readUnsignedShort();
    Code:
       0: aload_0
       1: invokevirtual #121                // Method readShort:()S
       4: ldc           #105                // int 65535
       6: iand
       7: ireturn

  public int readMedium();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method readUnsignedMedium:()I
       4: istore_1
       5: iload_1
       6: ldc           #107                // int 8388608
       8: iand
       9: ifeq          17
      12: iload_1
      13: ldc           #108                // int -16777216
      15: ior
      16: istore_1
      17: iload_1
      18: ireturn

  public int readUnsignedMedium();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: invokevirtual #123                // Method getUnsignedMedium:(J)I
       8: istore_1
       9: aload_0
      10: dup
      11: getfield      #11                 // Field readerIndex:J
      14: ldc2_w        #78                 // long 3l
      17: ladd
      18: putfield      #11                 // Field readerIndex:J
      21: iload_1
      22: ireturn

  public int readInt();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: invokevirtual #124                // Method getInt:(J)I
       8: istore_1
       9: aload_0
      10: dup
      11: getfield      #11                 // Field readerIndex:J
      14: ldc2_w        #82                 // long 4l
      17: ladd
      18: putfield      #11                 // Field readerIndex:J
      21: iload_1
      22: ireturn

  public int readInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #109                // Method getInt:(I)I
       5: istore_2
       6: iload_2
       7: ireturn

  public long readUnsignedInt();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method readInt:()I
       4: i2l
       5: ldc2_w        #110                // long 4294967295l
       8: land
       9: lreturn

  public long readLong();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: invokevirtual #126                // Method getLong:(J)J
       8: lstore_1
       9: aload_0
      10: dup
      11: getfield      #11                 // Field readerIndex:J
      14: ldc2_w        #127                // long 8l
      17: ladd
      18: putfield      #11                 // Field readerIndex:J
      21: lload_1
      22: lreturn

  public void readBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #129                // Method getBytes:(J[BII)V
      11: aload_0
      12: dup
      13: getfield      #11                 // Field readerIndex:J
      16: iload_3
      17: i2l
      18: ladd
      19: putfield      #11                 // Field readerIndex:J
      22: return

  public void readBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #130                // Method readBytes:([BII)V
       8: return

  public void readBytes(org.hornetq.api.core.HornetQBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #112,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writableBytes:()I
       8: invokevirtual #131                // Method readBytes:(Lorg/hornetq/api/core/HornetQBuffer;I)V
      11: return

  public void readBytes(org.hornetq.api.core.HornetQBuffer, int);
    Code:
       0: iload_2
       1: aload_1
       2: invokeinterface #112,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writableBytes:()I
       7: if_icmple     18
      10: new           #114                // class java/lang/IndexOutOfBoundsException
      13: dup
      14: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: aload_1
      21: invokeinterface #116,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      26: iload_2
      27: invokevirtual #132                // Method readBytes:(Lorg/hornetq/api/core/HornetQBuffer;II)V
      30: aload_1
      31: aload_1
      32: invokeinterface #116,  1          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      37: iload_2
      38: iadd
      39: invokeinterface #118,  2          // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:(I)V
      44: return

  public void readBytes(org.hornetq.api.core.HornetQBuffer, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #133                // Method getBytes:(JLorg/hornetq/api/core/HornetQBuffer;II)V
      11: aload_0
      12: dup
      13: getfield      #11                 // Field readerIndex:J
      16: iload_3
      17: i2l
      18: ladd
      19: putfield      #11                 // Field readerIndex:J
      22: return

  public void readBytes(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #71                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field readerIndex:J
      10: aload_1
      11: invokevirtual #134                // Method getBytes:(JLjava/nio/ByteBuffer;)V
      14: aload_0
      15: dup
      16: getfield      #11                 // Field readerIndex:J
      19: iload_2
      20: i2l
      21: ladd
      22: putfield      #11                 // Field readerIndex:J
      25: return

  public int readBytes(java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: l2i
       6: aload_1
       7: iload_2
       8: invokevirtual #135                // Method getBytes:(ILjava/nio/channels/GatheringByteChannel;I)I
      11: istore_3
      12: aload_0
      13: dup
      14: getfield      #11                 // Field readerIndex:J
      17: iload_3
      18: i2l
      19: ladd
      20: putfield      #11                 // Field readerIndex:J
      23: iload_3
      24: ireturn

  public void readBytes(java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field readerIndex:J
       5: aload_1
       6: iload_2
       7: invokevirtual #136                // Method getBytes:(JLjava/io/OutputStream;I)V
      10: aload_0
      11: dup
      12: getfield      #11                 // Field readerIndex:J
      15: iload_2
      16: i2l
      17: ladd
      18: putfield      #11                 // Field readerIndex:J
      21: return

  public void skipBytes(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field readerIndex:J
       4: iload_1
       5: i2l
       6: ladd
       7: lstore_2
       8: aload_0
       9: lload_2
      10: invokespecial #26                 // Method checkForPacket:(J)V
      13: aload_0
      14: lload_2
      15: putfield      #11                 // Field readerIndex:J
      18: return

  public void writeByte(byte);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeShort(short);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeMedium(int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeInt(int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeLong(long);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeBytes(byte[], int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeBytes(byte[]);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeBytes(org.hornetq.api.core.HornetQBuffer);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeBytes(org.hornetq.api.core.HornetQBuffer, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeBytes(java.nio.ByteBuffer);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public int writeBytes(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public int writeBytes(java.nio.channels.ScatteringByteChannel, int) throws java.io.IOException;
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeZero(int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.nio.ByteBuffer toByteBuffer();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.nio.ByteBuffer[] toByteBuffers();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.nio.ByteBuffer[] toByteBuffers(int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString(java.lang.String);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object getUnderlyingBuffer();
    Code:
       0: aload_0
       1: areturn

  public boolean readBoolean();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method readByte:()B
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public char readChar();
    Code:
       0: aload_0
       1: invokevirtual #121                // Method readShort:()S
       4: i2c
       5: ireturn

  public char getChar(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method getShort:(I)S
       5: i2c
       6: ireturn

  public double getDouble(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #137                // Method getLong:(I)J
       5: invokestatic  #138                // Method java/lang/Double.longBitsToDouble:(J)D
       8: dreturn

  public float getFloat(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #109                // Method getInt:(I)I
       5: invokestatic  #139                // Method java/lang/Float.intBitsToFloat:(I)F
       8: freturn

  public org.hornetq.api.core.HornetQBuffer readBytes(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_0
       6: getfield      #11                 // Field readerIndex:J
       9: aload_2
      10: invokevirtual #69                 // Method getBytes:(J[B)V
      13: aload_0
      14: dup
      15: getfield      #11                 // Field readerIndex:J
      18: iload_1
      19: i2l
      20: ladd
      21: putfield      #11                 // Field readerIndex:J
      24: aload_2
      25: invokestatic  #140                // Method org/hornetq/api/core/HornetQBuffers.wrappedBuffer:([B)Lorg/hornetq/api/core/HornetQBuffer;
      28: areturn

  public double readDouble();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method readLong:()J
       4: invokestatic  #138                // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method readInt:()I
       4: invokestatic  #139                // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public org.hornetq.api.core.SimpleString readNullableSimpleString();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method readByte:()B
       4: istore_1
       5: iload_1
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: invokevirtual #142                // Method readSimpleString:()Lorg/hornetq/api/core/SimpleString;
      15: areturn

  public java.lang.String readNullableString();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method readByte:()B
       4: istore_1
       5: iload_1
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: invokevirtual #143                // Method readString:()Ljava/lang/String;
      15: areturn

  public org.hornetq.api.core.SimpleString readSimpleString();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method readInt:()I
       4: istore_1
       5: iload_1
       6: newarray       byte
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #144                // Method readBytes:([B)V
      14: new           #145                // class org/hornetq/api/core/SimpleString
      17: dup
      18: aload_2
      19: invokespecial #146                // Method org/hornetq/api/core/SimpleString."<init>":([B)V
      22: areturn

  public java.lang.String readString();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method readInt:()I
       4: istore_1
       5: iload_1
       6: bipush        9
       8: if_icmpge     45
      11: iload_1
      12: newarray       char
      14: astore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_1
      19: if_icmpge     36
      22: aload_2
      23: iload_3
      24: aload_0
      25: invokevirtual #121                // Method readShort:()S
      28: i2c
      29: castore
      30: iinc          3, 1
      33: goto          17
      36: new           #147                // class java/lang/String
      39: dup
      40: aload_2
      41: invokespecial #148                // Method java/lang/String."<init>":([C)V
      44: areturn
      45: iload_1
      46: sipush        4095
      49: if_icmpge     57
      52: aload_0
      53: invokevirtual #149                // Method readUTF:()Ljava/lang/String;
      56: areturn
      57: aload_0
      58: invokevirtual #142                // Method readSimpleString:()Lorg/hornetq/api/core/SimpleString;
      61: invokevirtual #150                // Method org/hornetq/api/core/SimpleString.toString:()Ljava/lang/String;
      64: areturn

  public java.lang.String readUTF();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method org/hornetq/utils/UTF8Util.readUTF:(Lorg/hornetq/api/core/HornetQBuffer;)Ljava/lang/String;
       4: areturn

  public void writeBoolean(boolean);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeChar(char);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeDouble(double);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeFloat(float);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeNullableSimpleString(org.hornetq.api.core.SimpleString);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeNullableString(java.lang.String);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeSimpleString(org.hornetq.api.core.SimpleString);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeString(java.lang.String);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeUTF(java.lang.String);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.hornetq.api.core.HornetQBuffer copy();
    Code:
       0: new           #152                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #153                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.hornetq.api.core.HornetQBuffer slice(int, int);
    Code:
       0: new           #152                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #153                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private void sendPacketToOutput(java.io.OutputStream, org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage) throws org.hornetq.api.core.HornetQException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
       5: invokevirtual #31                 // Method java/io/OutputStream.write:([B)V
       8: aload_2
       9: invokevirtual #28                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.isContinues:()Z
      12: ifne          24
      15: aload_0
      16: iconst_1
      17: putfield      #9                  // Field streamEnded:Z
      20: aload_1
      21: invokevirtual #34                 // Method java/io/OutputStream.close:()V
      24: goto          38
      27: astore_3
      28: getstatic     #41                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
      31: aload_3
      32: invokeinterface #155,  2          // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.errorWritingLargeMessage:(Ljava/lang/Exception;)Lorg/hornetq/api/core/HornetQLargeMessageException;
      37: athrow
      38: return
    Exception table:
       from    to  target type
           0    24    27   Class java/io/IOException

  private void popPacket();
    Code:
       0: aload_0
       1: getfield      #9                  // Field streamEnded:Z
       4: ifeq          15
       7: new           #114                // class java/lang/IndexOutOfBoundsException
      10: dup
      11: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      19: ifnull        33
      22: aload_0
      23: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      26: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
      29: arraylength
      30: goto          34
      33: iconst_1
      34: istore_1
      35: aload_0
      36: aload_0
      37: getfield      #7                  // Field packets:Ljava/util/concurrent/LinkedBlockingQueue;
      40: aload_0
      41: getfield      #20                 // Field readTimeout:J
      44: getstatic     #156                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      47: invokevirtual #157                // Method java/util/concurrent/LinkedBlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      50: checkcast     #47                 // class org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage
      53: putfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      56: aload_0
      57: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      60: ifnonnull     71
      63: new           #114                // class java/lang/IndexOutOfBoundsException
      66: dup
      67: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      70: athrow
      71: aload_0
      72: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      75: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
      78: ifnonnull     99
      81: aload_0
      82: aconst_null
      83: putfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
      86: aload_0
      87: iconst_1
      88: putfield      #9                  // Field streamEnded:Z
      91: new           #114                // class java/lang/IndexOutOfBoundsException
      94: dup
      95: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      98: athrow
      99: aload_0
     100: getfield      #19                 // Field consumerInternal:Lorg/hornetq/core/client/impl/ClientConsumerInternal;
     103: aload_0
     104: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
     107: invokevirtual #32                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getPacketSize:()I
     110: aload_0
     111: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
     114: invokevirtual #28                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.isContinues:()Z
     117: ifne          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: invokeinterface #40,  3           // InterfaceMethod org/hornetq/core/client/impl/ClientConsumerInternal.flowControl:(IZ)V
     130: aload_0
     131: dup
     132: getfield      #15                 // Field packetPosition:J
     135: iload_1
     136: i2l
     137: ladd
     138: putfield      #15                 // Field packetPosition:J
     141: aload_0
     142: aload_0
     143: getfield      #15                 // Field packetPosition:J
     146: aload_0
     147: getfield      #8                  // Field currentPacket:Lorg/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage;
     150: invokevirtual #29                 // Method org/hornetq/core/protocol/core/impl/wireformat/SessionReceiveContinuationMessage.getBody:()[B
     153: arraylength
     154: i2l
     155: ladd
     156: putfield      #17                 // Field packetLastPosition:J
     159: goto          175
     162: astore_1
     163: aload_1
     164: athrow
     165: astore_1
     166: new           #95                 // class java/lang/RuntimeException
     169: dup
     170: aload_1
     171: invokespecial #158                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     174: athrow
     175: return
    Exception table:
       from    to  target type
           0   159   162   Class java/lang/IndexOutOfBoundsException
           0   159   165   Class java/lang/Exception

  private void checkForPacket(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field outStream:Ljava/io/OutputStream;
       4: ifnull        17
       7: new           #90                 // class java/lang/IllegalAccessError
      10: dup
      11: ldc           #159                // String Can\'t read the messageBody after setting outputStream
      13: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      16: athrow
      17: lload_1
      18: aload_0
      19: getfield      #21                 // Field totalSize:J
      22: lcmp
      23: iflt          34
      26: new           #114                // class java/lang/IndexOutOfBoundsException
      29: dup
      30: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #10                 // Field streamClosed:Z
      38: ifeq          51
      41: new           #90                 // class java/lang/IllegalAccessError
      44: dup
      45: ldc           #160                // String The consumer associated with this large message was closed before the body was read
      47: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: getfield      #22                 // Field fileCache:Lorg/hornetq/core/client/impl/LargeMessageControllerImpl$FileCache;
      55: ifnonnull     82
      58: lload_1
      59: aload_0
      60: getfield      #16                 // Field lastIndex:J
      63: lcmp
      64: ifge          77
      67: new           #90                 // class java/lang/IllegalAccessError
      70: dup
      71: ldc           #161                // String LargeMessage have read-only and one-way buffers
      73: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: lload_1
      79: putfield      #16                 // Field lastIndex:J
      82: lload_1
      83: aload_0
      84: getfield      #17                 // Field packetLastPosition:J
      87: lcmp
      88: iflt          105
      91: aload_0
      92: getfield      #9                  // Field streamEnded:Z
      95: ifne          105
      98: aload_0
      99: invokespecial #162                // Method popPacket:()V
     102: goto          82
     105: return

  public io.netty.buffer.ByteBuf byteBuf();
    Code:
       0: aconst_null
       1: areturn

  public org.hornetq.api.core.HornetQBuffer copy(int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.hornetq.api.core.HornetQBuffer duplicate();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.hornetq.api.core.HornetQBuffer readSlice(int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setChar(int, char);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setDouble(int, double);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setFloat(int, float);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.hornetq.api.core.HornetQBuffer slice();
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeBytes(org.hornetq.api.core.HornetQBuffer, int, int);
    Code:
       0: new           #90                 // class java/lang/IllegalAccessError
       3: dup
       4: ldc           #92                 // String This is a read-only buffer, setOperations are not supported
       6: invokespecial #93                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
       9: athrow

  static int access$000(org.hornetq.core.client.impl.LargeMessageControllerImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bufferSize:I
       4: ireturn
}
