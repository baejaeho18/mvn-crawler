Compiled from "QueueControl.java"
public interface org.hornetq.api.core.management.QueueControl {
  public abstract java.lang.String getName();

  public abstract java.lang.String getAddress();

  public abstract long getID();

  public abstract boolean isTemporary();

  public abstract boolean isDurable();

  public abstract java.lang.String getFilter();

  public abstract long getMessageCount();

  public abstract long getScheduledCount();

  public abstract int getConsumerCount();

  public abstract int getDeliveringCount();

  public abstract long getMessagesAdded();

  public abstract java.lang.String getFirstMessageAsJSON() throws java.lang.Exception;

  public abstract java.lang.String getExpiryAddress();

  public abstract void setExpiryAddress(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String getDeadLetterAddress();

  public abstract void setDeadLetterAddress(java.lang.String) throws java.lang.Exception;

  public abstract java.util.Map<java.lang.String, java.lang.Object>[] listScheduledMessages() throws java.lang.Exception;

  public abstract java.lang.String listScheduledMessagesAsJSON() throws java.lang.Exception;

  public abstract java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>[]> listDeliveringMessages() throws java.lang.Exception;

  public abstract java.lang.String listDeliveringMessagesAsJSON() throws java.lang.Exception;

  public abstract java.util.Map<java.lang.String, java.lang.Object>[] listMessages(java.lang.String) throws java.lang.Exception;

  public abstract java.lang.String listMessagesAsJSON(java.lang.String) throws java.lang.Exception;

  public abstract long countMessages(java.lang.String) throws java.lang.Exception;

  public abstract boolean removeMessage(long) throws java.lang.Exception;

  public abstract int removeMessages(java.lang.String) throws java.lang.Exception;

  public abstract int removeMessages(int, java.lang.String) throws java.lang.Exception;

  public abstract int expireMessages(java.lang.String) throws java.lang.Exception;

  public abstract boolean expireMessage(long) throws java.lang.Exception;

  public abstract boolean moveMessage(long, java.lang.String) throws java.lang.Exception;

  public abstract boolean moveMessage(long, java.lang.String, boolean) throws java.lang.Exception;

  public abstract int moveMessages(java.lang.String, java.lang.String) throws java.lang.Exception;

  public abstract int moveMessages(java.lang.String, java.lang.String, boolean) throws java.lang.Exception;

  public abstract int moveMessages(int, java.lang.String, java.lang.String, boolean) throws java.lang.Exception;

  public abstract boolean sendMessageToDeadLetterAddress(long) throws java.lang.Exception;

  public abstract int sendMessagesToDeadLetterAddress(java.lang.String) throws java.lang.Exception;

  public abstract boolean changeMessagePriority(long, int) throws java.lang.Exception;

  public abstract int changeMessagesPriority(java.lang.String, int) throws java.lang.Exception;

  public abstract java.lang.String listMessageCounter() throws java.lang.Exception;

  public abstract void resetMessageCounter() throws java.lang.Exception;

  public abstract java.lang.String listMessageCounterAsHTML() throws java.lang.Exception;

  public abstract java.lang.String listMessageCounterHistory() throws java.lang.Exception;

  public abstract java.lang.String listMessageCounterHistoryAsHTML() throws java.lang.Exception;

  public abstract void pause() throws java.lang.Exception;

  public abstract void resume() throws java.lang.Exception;

  public abstract java.lang.String listConsumersAsJSON() throws java.lang.Exception;

  public abstract boolean isPaused() throws java.lang.Exception;

  public abstract void resetMessagesAdded() throws java.lang.Exception;
}
