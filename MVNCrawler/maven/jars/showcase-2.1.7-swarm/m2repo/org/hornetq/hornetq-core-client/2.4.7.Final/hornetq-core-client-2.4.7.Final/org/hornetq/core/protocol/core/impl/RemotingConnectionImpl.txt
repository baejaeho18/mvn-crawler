Compiled from "RemotingConnectionImpl.java"
public class org.hornetq.core.protocol.core.impl.RemotingConnectionImpl implements org.hornetq.core.protocol.core.CoreRemotingConnection {
  private static final boolean isTrace;

  private final org.hornetq.core.protocol.core.impl.PacketDecoder packetDecoder;

  private final org.hornetq.spi.core.remoting.Connection transportConnection;

  private final java.util.Map<java.lang.Long, org.hornetq.core.protocol.core.Channel> channels;

  private final java.util.List<org.hornetq.core.remoting.FailureListener> failureListeners;

  private final java.util.List<org.hornetq.core.remoting.CloseListener> closeListeners;

  private final long blockingCallTimeout;

  private final long blockingCallFailoverTimeout;

  private final java.util.List<org.hornetq.api.core.Interceptor> incomingInterceptors;

  private final java.util.List<org.hornetq.api.core.Interceptor> outgoingInterceptors;

  private volatile boolean destroyed;

  private final boolean client;

  private int clientVersion;

  private volatile org.hornetq.utils.SimpleIDGenerator idGenerator;

  private boolean idGeneratorSynced;

  private final java.lang.Object transferLock;

  private final java.lang.Object failLock;

  private volatile boolean dataReceived;

  private final java.util.concurrent.Executor executor;

  private final org.hornetq.api.core.SimpleString nodeID;

  private final long creationTime;

  private java.lang.String clientID;

  public org.hornetq.core.protocol.core.impl.RemotingConnectionImpl(org.hornetq.core.protocol.core.impl.PacketDecoder, org.hornetq.spi.core.remoting.Connection, long, long, java.util.List<org.hornetq.api.core.Interceptor>, java.util.List<org.hornetq.api.core.Interceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: lload         5
       6: aload         7
       8: aload         8
      10: iconst_1
      11: aconst_null
      12: aconst_null
      13: invokespecial #1                  // Method "<init>":(Lorg/hornetq/core/protocol/core/impl/PacketDecoder;Lorg/hornetq/spi/core/remoting/Connection;JJLjava/util/List;Ljava/util/List;ZLjava/util/concurrent/Executor;Lorg/hornetq/api/core/SimpleString;)V
      16: return

  org.hornetq.core.protocol.core.impl.RemotingConnectionImpl(org.hornetq.core.protocol.core.impl.PacketDecoder, org.hornetq.spi.core.remoting.Connection, java.util.List<org.hornetq.api.core.Interceptor>, java.util.List<org.hornetq.api.core.Interceptor>, java.util.concurrent.Executor, org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #2                  // long -1l
       6: ldc2_w        #2                  // long -1l
       9: aload_3
      10: aload         4
      12: iconst_0
      13: aload         5
      15: aload         6
      17: invokespecial #1                  // Method "<init>":(Lorg/hornetq/core/protocol/core/impl/PacketDecoder;Lorg/hornetq/spi/core/remoting/Connection;JJLjava/util/List;Ljava/util/List;ZLjava/util/concurrent/Executor;Lorg/hornetq/api/core/SimpleString;)V
      20: return

  private org.hornetq.core.protocol.core.impl.RemotingConnectionImpl(org.hornetq.core.protocol.core.impl.PacketDecoder, org.hornetq.spi.core.remoting.Connection, long, long, java.util.List<org.hornetq.api.core.Interceptor>, java.util.List<org.hornetq.api.core.Interceptor>, boolean, java.util.concurrent.Executor, org.hornetq.api.core.SimpleString);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #7                  // Field channels:Ljava/util/Map;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #9                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #10                 // Field failureListeners:Ljava/util/List;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/CopyOnWriteArrayList
      30: dup
      31: invokespecial #9                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      34: putfield      #11                 // Field closeListeners:Ljava/util/List;
      37: aload_0
      38: new           #12                 // class org/hornetq/utils/SimpleIDGenerator
      41: dup
      42: getstatic     #13                 // Field org/hornetq/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.USER:Lorg/hornetq/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
      45: getfield      #14                 // Field org/hornetq/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
      48: invokespecial #15                 // Method org/hornetq/utils/SimpleIDGenerator."<init>":(J)V
      51: putfield      #16                 // Field idGenerator:Lorg/hornetq/utils/SimpleIDGenerator;
      54: aload_0
      55: iconst_0
      56: putfield      #17                 // Field idGeneratorSynced:Z
      59: aload_0
      60: new           #18                 // class java/lang/Object
      63: dup
      64: invokespecial #4                  // Method java/lang/Object."<init>":()V
      67: putfield      #19                 // Field transferLock:Ljava/lang/Object;
      70: aload_0
      71: new           #18                 // class java/lang/Object
      74: dup
      75: invokespecial #4                  // Method java/lang/Object."<init>":()V
      78: putfield      #20                 // Field failLock:Ljava/lang/Object;
      81: aload_0
      82: aload_1
      83: putfield      #21                 // Field packetDecoder:Lorg/hornetq/core/protocol/core/impl/PacketDecoder;
      86: aload_0
      87: aload_2
      88: putfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
      91: aload_0
      92: lload_3
      93: putfield      #23                 // Field blockingCallTimeout:J
      96: aload_0
      97: lload         5
      99: putfield      #24                 // Field blockingCallFailoverTimeout:J
     102: aload_0
     103: aload         7
     105: putfield      #25                 // Field incomingInterceptors:Ljava/util/List;
     108: aload_0
     109: aload         8
     111: putfield      #26                 // Field outgoingInterceptors:Ljava/util/List;
     114: aload_0
     115: iload         9
     117: putfield      #27                 // Field client:Z
     120: aload_0
     121: aload         10
     123: putfield      #28                 // Field executor:Ljava/util/concurrent/Executor;
     126: aload_0
     127: aload         11
     129: putfield      #29                 // Field nodeID:Lorg/hornetq/api/core/SimpleString;
     132: aload_0
     133: invokestatic  #30                 // Method java/lang/System.currentTimeMillis:()J
     136: putfield      #31                 // Field creationTime:J
     139: return

  public java.lang.String toString();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #34                 // String RemotingConnectionImpl [clientID=
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #36                 // Field clientID:Ljava/lang/String;
      16: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #37                 // String , nodeID=
      21: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #29                 // Field nodeID:Lorg/hornetq/api/core/SimpleString;
      28: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #39                 // String , transportConnection=
      33: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
      40: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #40                 // String ]
      45: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public org.hornetq.spi.core.remoting.Connection getTransportConnection();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
       4: areturn

  public java.util.List<org.hornetq.core.remoting.FailureListener> getFailureListeners();
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #10                 // Field failureListeners:Ljava/util/List;
       8: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  public void setFailureListeners(java.util.List<org.hornetq.core.remoting.FailureListener>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field failureListeners:Ljava/util/List;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #10                 // Field failureListeners:Ljava/util/List;
      13: aload_1
      14: invokeinterface #45,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public int getClientVersion();
    Code:
       0: aload_0
       1: getfield      #46                 // Field clientVersion:I
       4: ireturn

  public void setClientVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field clientVersion:I
       5: return

  public java.lang.Object getID();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
       4: invokeinterface #47,  1           // InterfaceMethod org/hornetq/spi/core/remoting/Connection.getID:()Ljava/lang/Object;
       9: areturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
       4: invokeinterface #48,  1           // InterfaceMethod org/hornetq/spi/core/remoting/Connection.getRemoteAddress:()Ljava/lang/String;
       9: areturn

  public long getCreationTime();
    Code:
       0: aload_0
       1: getfield      #31                 // Field creationTime:J
       4: lreturn

  public synchronized org.hornetq.core.protocol.core.Channel getChannel(long, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field channels:Ljava/util/Map;
       4: lload_1
       5: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #50,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #51                 // class org/hornetq/core/protocol/core/Channel
      16: astore        4
      18: aload         4
      20: ifnonnull     55
      23: new           #52                 // class org/hornetq/core/protocol/core/impl/ChannelImpl
      26: dup
      27: aload_0
      28: lload_1
      29: iload_3
      30: aload_0
      31: getfield      #26                 // Field outgoingInterceptors:Ljava/util/List;
      34: invokespecial #53                 // Method org/hornetq/core/protocol/core/impl/ChannelImpl."<init>":(Lorg/hornetq/core/protocol/core/CoreRemotingConnection;JILjava/util/List;)V
      37: astore        4
      39: aload_0
      40: getfield      #7                  // Field channels:Ljava/util/Map;
      43: lload_1
      44: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      47: aload         4
      49: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload         4
      57: areturn

  public synchronized boolean removeChannel(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field channels:Ljava/util/Map;
       4: lload_1
       5: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #55,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public synchronized void putChannel(long, org.hornetq.core.protocol.core.Channel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field channels:Ljava/util/Map;
       4: lload_1
       5: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aload_3
       9: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void addFailureListener(org.hornetq.core.remoting.FailureListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #56                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
       7: invokeinterface #57,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.failListenerCannotBeNull:()Ljava/lang/IllegalArgumentException;
      12: athrow
      13: aload_0
      14: getfield      #10                 // Field failureListeners:Ljava/util/List;
      17: aload_1
      18: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public boolean removeFailureListener(org.hornetq.core.remoting.FailureListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #56                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
       7: invokeinterface #57,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.failListenerCannotBeNull:()Ljava/lang/IllegalArgumentException;
      12: athrow
      13: aload_0
      14: getfield      #10                 // Field failureListeners:Ljava/util/List;
      17: aload_1
      18: invokeinterface #59,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      23: ireturn

  public void addCloseListener(org.hornetq.core.remoting.CloseListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #56                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
       7: invokeinterface #60,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.closeListenerCannotBeNull:()Ljava/lang/IllegalArgumentException;
      12: athrow
      13: aload_0
      14: getfield      #11                 // Field closeListeners:Ljava/util/List;
      17: aload_1
      18: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public boolean removeCloseListener(org.hornetq.core.remoting.CloseListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #56                 // Field org/hornetq/core/client/HornetQClientMessageBundle.BUNDLE:Lorg/hornetq/core/client/HornetQClientMessageBundle;
       7: invokeinterface #60,  1           // InterfaceMethod org/hornetq/core/client/HornetQClientMessageBundle.closeListenerCannotBeNull:()Ljava/lang/IllegalArgumentException;
      12: athrow
      13: aload_0
      14: getfield      #11                 // Field closeListeners:Ljava/util/List;
      17: aload_1
      18: invokeinterface #59,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      23: ireturn

  public java.util.List<org.hornetq.core.remoting.CloseListener> removeCloseListeners();
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #11                 // Field closeListeners:Ljava/util/List;
       8: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_0
      13: getfield      #11                 // Field closeListeners:Ljava/util/List;
      16: invokeinterface #44,  1           // InterfaceMethod java/util/List.clear:()V
      21: aload_1
      22: areturn

  public java.util.List<org.hornetq.core.remoting.FailureListener> removeFailureListeners();
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #10                 // Field failureListeners:Ljava/util/List;
       8: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_0
      13: getfield      #10                 // Field failureListeners:Ljava/util/List;
      16: invokeinterface #44,  1           // InterfaceMethod java/util/List.clear:()V
      21: aload_1
      22: areturn

  public void setCloseListeners(java.util.List<org.hornetq.core.remoting.CloseListener>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field closeListeners:Ljava/util/List;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #11                 // Field closeListeners:Ljava/util/List;
      13: aload_1
      14: invokeinterface #45,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public org.hornetq.api.core.HornetQBuffer createTransportBuffer(int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
       4: iload_1
       5: invokeinterface #61,  2           // InterfaceMethod org/hornetq/spi/core/remoting/Connection.createTransportBuffer:(I)Lorg/hornetq/api/core/HornetQBuffer;
      10: areturn

  public void fail(org.hornetq.api.core.HornetQException);
    Code:
       0: aload_0
       1: getfield      #20                 // Field failLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #62                 // Field destroyed:Z
      11: ifeq          17
      14: aload_2
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #62                 // Field destroyed:Z
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      35: aload_1
      36: invokevirtual #64                 // Method org/hornetq/api/core/HornetQException.getMessage:()Ljava/lang/String;
      39: aload_1
      40: invokevirtual #65                 // Method org/hornetq/api/core/HornetQException.getType:()Lorg/hornetq/api/core/HornetQExceptionType;
      43: invokeinterface #66,  3           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.connectionFailureDetected:(Ljava/lang/String;Lorg/hornetq/api/core/HornetQExceptionType;)V
      48: aload_0
      49: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
      52: invokeinterface #67,  1           // InterfaceMethod org/hornetq/spi/core/remoting/Connection.forceClose:()V
      57: goto          74
      60: astore_2
      61: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      64: aload_2
      65: invokevirtual #69                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      68: aload_2
      69: invokeinterface #70,  3           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      74: aload_0
      75: aload_1
      76: invokespecial #71                 // Method callFailureListeners:(Lorg/hornetq/api/core/HornetQException;)V
      79: aload_0
      80: invokespecial #72                 // Method callClosingListeners:()V
      83: aload_0
      84: invokespecial #73                 // Method internalClose:()V
      87: aload_0
      88: getfield      #7                  // Field channels:Ljava/util/Map;
      91: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      96: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     101: astore_2
     102: aload_2
     103: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          131
     111: aload_2
     112: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     117: checkcast     #51                 // class org/hornetq/core/protocol/core/Channel
     120: astore_3
     121: aload_3
     122: aload_1
     123: invokeinterface #78,  2           // InterfaceMethod org/hornetq/core/protocol/core/Channel.returnBlocking:(Ljava/lang/Throwable;)V
     128: goto          102
     131: return
    Exception table:
       from    to  target type
           7    16    27   any
          17    24    27   any
          27    30    27   any
          48    57    60   Class java/lang/Throwable

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #20                 // Field failLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #62                 // Field destroyed:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #62                 // Field destroyed:Z
      22: aload_1
      23: monitorexit
      24: goto          32
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
      32: aload_0
      33: invokespecial #73                 // Method internalClose:()V
      36: aload_0
      37: invokespecial #72                 // Method callClosingListeners:()V
      40: return
    Exception table:
       from    to  target type
           7    16    27   any
          17    24    27   any
          27    30    27   any

  public void disconnect(boolean);
    Code:
       0: aload_0
       1: lconst_0
       2: iconst_m1
       3: invokevirtual #79                 // Method getChannel:(JI)Lorg/hornetq/core/protocol/core/Channel;
       6: astore_2
       7: new           #80                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: getfield      #7                  // Field channels:Ljava/util/Map;
      15: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      20: invokespecial #81                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      23: astore_3
      24: iload_1
      25: ifne          35
      28: aload_0
      29: invokespecial #82                 // Method removeAllChannels:()V
      32: goto          44
      35: aload_0
      36: getfield      #7                  // Field channels:Ljava/util/Map;
      39: invokeinterface #83,  1           // InterfaceMethod java/util/Map.clear:()V
      44: iload_1
      45: ifne          88
      48: aload_3
      49: invokeinterface #84,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      54: astore        4
      56: aload         4
      58: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          88
      66: aload         4
      68: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #51                 // class org/hornetq/core/protocol/core/Channel
      76: astore        5
      78: aload         5
      80: invokeinterface #85,  1           // InterfaceMethod org/hornetq/core/protocol/core/Channel.flushConfirmations:()V
      85: goto          56
      88: new           #86                 // class org/hornetq/core/protocol/core/impl/wireformat/DisconnectMessage
      91: dup
      92: aload_0
      93: getfield      #29                 // Field nodeID:Lorg/hornetq/api/core/SimpleString;
      96: invokespecial #87                 // Method org/hornetq/core/protocol/core/impl/wireformat/DisconnectMessage."<init>":(Lorg/hornetq/api/core/SimpleString;)V
      99: astore        4
     101: aload_2
     102: aload         4
     104: invokeinterface #88,  2           // InterfaceMethod org/hornetq/core/protocol/core/Channel.sendAndFlush:(Lorg/hornetq/core/protocol/core/Packet;)Z
     109: pop
     110: return

  public long generateChannelID();
    Code:
       0: aload_0
       1: getfield      #16                 // Field idGenerator:Lorg/hornetq/utils/SimpleIDGenerator;
       4: invokevirtual #89                 // Method org/hornetq/utils/SimpleIDGenerator.generateID:()J
       7: lreturn

  public synchronized void syncIDGeneratorSequence(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field idGeneratorSynced:Z
       4: ifne          24
       7: aload_0
       8: new           #12                 // class org/hornetq/utils/SimpleIDGenerator
      11: dup
      12: lload_1
      13: invokespecial #15                 // Method org/hornetq/utils/SimpleIDGenerator."<init>":(J)V
      16: putfield      #16                 // Field idGenerator:Lorg/hornetq/utils/SimpleIDGenerator;
      19: aload_0
      20: iconst_1
      21: putfield      #17                 // Field idGeneratorSynced:Z
      24: return

  public long getIDGeneratorSequence();
    Code:
       0: aload_0
       1: getfield      #16                 // Field idGenerator:Lorg/hornetq/utils/SimpleIDGenerator;
       4: invokevirtual #90                 // Method org/hornetq/utils/SimpleIDGenerator.getCurrentID:()J
       7: lreturn

  public java.lang.Object getTransferLock();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transferLock:Ljava/lang/Object;
       4: areturn

  public boolean isClient();
    Code:
       0: aload_0
       1: getfield      #27                 // Field client:Z
       4: ireturn

  public boolean isDestroyed();
    Code:
       0: aload_0
       1: getfield      #62                 // Field destroyed:Z
       4: ireturn

  public long getBlockingCallTimeout();
    Code:
       0: aload_0
       1: getfield      #23                 // Field blockingCallTimeout:J
       4: lreturn

  public long getBlockingCallFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #24                 // Field blockingCallFailoverTimeout:J
       4: lreturn

  public boolean checkDataReceived();
    Code:
       0: aload_0
       1: getfield      #91                 // Field dataReceived:Z
       4: istore_1
       5: aload_0
       6: iconst_0
       7: putfield      #91                 // Field dataReceived:Z
      10: iload_1
      11: ireturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transferLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field channels:Ljava/util/Map;
      11: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          50
      31: aload_2
      32: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #51                 // class org/hornetq/core/protocol/core/Channel
      40: astore_3
      41: aload_3
      42: invokeinterface #85,  1           // InterfaceMethod org/hornetq/core/protocol/core/Channel.flushConfirmations:()V
      47: goto          22
      50: aload_1
      51: monitorexit
      52: goto          62
      55: astore        4
      57: aload_1
      58: monitorexit
      59: aload         4
      61: athrow
      62: return
    Exception table:
       from    to  target type
           7    52    55   any
          55    59    55   any

  public org.hornetq.core.security.HornetQPrincipal getDefaultHornetQPrincipal();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
       4: invokeinterface #92,  1           // InterfaceMethod org/hornetq/spi/core/remoting/Connection.getDefaultHornetQPrincipal:()Lorg/hornetq/core/security/HornetQPrincipal;
       9: areturn

  public void bufferReceived(java.lang.Object, org.hornetq.api.core.HornetQBuffer);
    Code:
       0: aload_0
       1: getfield      #21                 // Field packetDecoder:Lorg/hornetq/core/protocol/core/impl/PacketDecoder;
       4: aload_2
       5: invokevirtual #93                 // Method org/hornetq/core/protocol/core/impl/PacketDecoder.decode:(Lorg/hornetq/api/core/HornetQBuffer;)Lorg/hornetq/core/protocol/core/Packet;
       8: astore_3
       9: getstatic     #94                 // Field isTrace:Z
      12: ifeq          42
      15: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      18: new           #32                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #95                 // String handling packet
      27: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_3
      31: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #96,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.trace:(Ljava/lang/Object;)V
      42: aload_0
      43: iconst_1
      44: putfield      #91                 // Field dataReceived:Z
      47: aload_0
      48: aload_3
      49: invokespecial #97                 // Method doBufferReceived:(Lorg/hornetq/core/protocol/core/Packet;)V
      52: goto          65
      55: astore_3
      56: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      59: aload_3
      60: invokeinterface #99,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorDecodingPacket:(Ljava/lang/Exception;)V
      65: return
    Exception table:
       from    to  target type
           0    52    55   Class java/lang/Exception

  private void doBufferReceived(org.hornetq.core.protocol.core.Packet);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #25                 // Field incomingInterceptors:Ljava/util/List;
       5: aload_0
       6: invokestatic  #100                // Method org/hornetq/core/protocol/core/impl/ChannelImpl.invokeInterceptors:(Lorg/hornetq/core/protocol/core/Packet;Ljava/util/List;Lorg/hornetq/spi/core/protocol/RemotingConnection;)Ljava/lang/String;
       9: ifnull        13
      12: return
      13: aload_0
      14: getfield      #19                 // Field transferLock:Ljava/lang/Object;
      17: dup
      18: astore_2
      19: monitorenter
      20: aload_0
      21: getfield      #7                  // Field channels:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #101,  1          // InterfaceMethod org/hornetq/core/protocol/core/Packet.getChannelID:()J
      30: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: invokeinterface #50,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #51                 // class org/hornetq/core/protocol/core/Channel
      41: astore_3
      42: aload_3
      43: ifnull        53
      46: aload_3
      47: aload_1
      48: invokeinterface #102,  2          // InterfaceMethod org/hornetq/core/protocol/core/Channel.handlePacket:(Lorg/hornetq/core/protocol/core/Packet;)V
      53: aload_2
      54: monitorexit
      55: goto          65
      58: astore        4
      60: aload_2
      61: monitorexit
      62: aload         4
      64: athrow
      65: return
    Exception table:
       from    to  target type
          20    55    58   any
          58    62    58   any

  private void removeAllChannels();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transferLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field channels:Ljava/util/Map;
      11: invokeinterface #83,  1           // InterfaceMethod java/util/Map.clear:()V
      16: aload_1
      17: monitorexit
      18: goto          26
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  private void callFailureListeners(org.hornetq.api.core.HornetQException);
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #10                 // Field failureListeners:Ljava/util/List;
       8: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_2
      13: invokeinterface #103,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          83
      28: aload_3
      29: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #104                // class org/hornetq/core/remoting/FailureListener
      37: astore        4
      39: aload         4
      41: aload_1
      42: iconst_0
      43: invokeinterface #105,  3          // InterfaceMethod org/hornetq/core/remoting/FailureListener.connectionFailed:(Lorg/hornetq/api/core/HornetQException;Z)V
      48: goto          80
      51: astore        5
      53: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      56: ldc           #107                // String thread interrupted
      58: aload         5
      60: invokeinterface #108,  3          // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      65: goto          80
      68: astore        5
      70: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      73: aload         5
      75: invokeinterface #109,  2          // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorCallingFailureListener:(Ljava/lang/Throwable;)V
      80: goto          19
      83: return
    Exception table:
       from    to  target type
          39    48    51   Class org/hornetq/api/core/HornetQInterruptedException
          39    48    68   Class java/lang/Throwable

  private void callClosingListeners();
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #11                 // Field closeListeners:Ljava/util/List;
       8: invokespecial #43                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_1
      13: invokeinterface #103,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          62
      28: aload_2
      29: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #110                // class org/hornetq/core/remoting/CloseListener
      37: astore_3
      38: aload_3
      39: invokeinterface #111,  1          // InterfaceMethod org/hornetq/core/remoting/CloseListener.connectionClosed:()V
      44: goto          59
      47: astore        4
      49: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
      52: aload         4
      54: invokeinterface #109,  2          // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.errorCallingFailureListener:(Ljava/lang/Throwable;)V
      59: goto          19
      62: return
    Exception table:
       from    to  target type
          38    44    47   Class java/lang/Throwable

  private void internalClose();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transportConnection:Lorg/hornetq/spi/core/remoting/Connection;
       4: invokeinterface #112,  1          // InterfaceMethod org/hornetq/spi/core/remoting/Connection.close:()V
       9: aload_0
      10: getfield      #7                  // Field channels:Ljava/util/Map;
      13: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore_1
      24: aload_1
      25: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          52
      33: aload_1
      34: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #51                 // class org/hornetq/core/protocol/core/Channel
      42: astore_2
      43: aload_2
      44: invokeinterface #113,  1          // InterfaceMethod org/hornetq/core/protocol/core/Channel.close:()V
      49: goto          24
      52: return

  public void setClientID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field clientID:Ljava/lang/String;
       5: return

  public java.lang.String getClientID();
    Code:
       0: aload_0
       1: getfield      #36                 // Field clientID:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: getstatic     #63                 // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
       3: invokeinterface #114,  1          // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.isTraceEnabled:()Z
       8: putstatic     #94                 // Field isTrace:Z
      11: return
}
