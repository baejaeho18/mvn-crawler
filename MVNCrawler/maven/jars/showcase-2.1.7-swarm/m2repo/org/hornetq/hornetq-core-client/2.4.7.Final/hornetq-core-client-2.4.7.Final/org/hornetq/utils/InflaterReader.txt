Compiled from "InflaterReader.java"
public class org.hornetq.utils.InflaterReader extends java.io.InputStream {
  private java.util.zip.Inflater inflater;

  private java.io.InputStream input;

  private byte[] readBuffer;

  private int pointer;

  private int length;

  public org.hornetq.utils.InflaterReader(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1024
       5: invokespecial #1                  // Method "<init>":(Ljava/io/InputStream;I)V
       8: return

  public org.hornetq.utils.InflaterReader(java.io.InputStream, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/zip/Inflater
       8: dup
       9: invokespecial #4                  // Method java/util/zip/Inflater."<init>":()V
      12: putfield      #5                  // Field inflater:Ljava/util/zip/Inflater;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field input:Ljava/io/InputStream;
      20: aload_0
      21: iload_2
      22: newarray       byte
      24: putfield      #7                  // Field readBuffer:[B
      27: aload_0
      28: iconst_m1
      29: putfield      #8                  // Field pointer:I
      32: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field pointer:I
       4: iconst_m1
       5: if_icmpne     64
       8: aload_0
       9: aload_0
      10: aload_0
      11: getfield      #7                  // Field readBuffer:[B
      14: iconst_0
      15: aload_0
      16: getfield      #7                  // Field readBuffer:[B
      19: arraylength
      20: invokespecial #9                  // Method doRead:([BII)I
      23: putfield      #10                 // Field length:I
      26: aload_0
      27: getfield      #10                 // Field length:I
      30: ifne          35
      33: iconst_m1
      34: ireturn
      35: aload_0
      36: iconst_0
      37: putfield      #8                  // Field pointer:I
      40: goto          64
      43: astore_1
      44: new           #12                 // class java/io/IOException
      47: dup
      48: aload_1
      49: invokevirtual #13                 // Method java/util/zip/DataFormatException.getMessage:()Ljava/lang/String;
      52: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      55: astore_2
      56: aload_2
      57: aload_1
      58: invokevirtual #15                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      61: pop
      62: aload_2
      63: athrow
      64: aload_0
      65: getfield      #7                  // Field readBuffer:[B
      68: aload_0
      69: getfield      #8                  // Field pointer:I
      72: baload
      73: sipush        255
      76: iand
      77: istore_1
      78: aload_0
      79: dup
      80: getfield      #8                  // Field pointer:I
      83: iconst_1
      84: iadd
      85: putfield      #8                  // Field pointer:I
      88: aload_0
      89: getfield      #8                  // Field pointer:I
      92: aload_0
      93: getfield      #10                 // Field length:I
      96: if_icmpne     104
      99: aload_0
     100: iconst_m1
     101: putfield      #8                  // Field pointer:I
     104: iload_1
     105: ireturn
    Exception table:
       from    to  target type
           8    34    43   Class java/util/zip/DataFormatException
          35    40    43   Class java/util/zip/DataFormatException

  private int doRead(byte[], int, int) throws java.util.zip.DataFormatException, java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iload_3
       7: newarray       byte
       9: astore        6
      11: iload_3
      12: ifle          161
      15: aload_0
      16: getfield      #5                  // Field inflater:Ljava/util/zip/Inflater;
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokevirtual #16                 // Method java/util/zip/Inflater.inflate:([BII)I
      25: istore        5
      27: iload         5
      29: ifne          141
      32: aload_0
      33: getfield      #5                  // Field inflater:Ljava/util/zip/Inflater;
      36: invokevirtual #17                 // Method java/util/zip/Inflater.finished:()Z
      39: ifeq          45
      42: goto          161
      45: aload_0
      46: getfield      #5                  // Field inflater:Ljava/util/zip/Inflater;
      49: invokevirtual #18                 // Method java/util/zip/Inflater.needsInput:()Z
      52: ifeq          131
      55: aload_0
      56: getfield      #6                  // Field input:Ljava/io/InputStream;
      59: aload         6
      61: invokevirtual #19                 // Method java/io/InputStream.read:([B)I
      64: istore        7
      66: iload         7
      68: iconst_m1
      69: if_icmpne     82
      72: new           #11                 // class java/util/zip/DataFormatException
      75: dup
      76: ldc           #20                 // String Input is over while inflater still expecting data
      78: invokespecial #21                 // Method java/util/zip/DataFormatException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: getfield      #5                  // Field inflater:Ljava/util/zip/Inflater;
      86: aload         6
      88: iconst_0
      89: iload         7
      91: invokevirtual #22                 // Method java/util/zip/Inflater.setInput:([BII)V
      94: aload_0
      95: getfield      #5                  // Field inflater:Ljava/util/zip/Inflater;
      98: aload_1
      99: iload_2
     100: iload_3
     101: invokevirtual #16                 // Method java/util/zip/Inflater.inflate:([BII)I
     104: istore        5
     106: iload         5
     108: ifle          128
     111: iload         4
     113: iload         5
     115: iadd
     116: istore        4
     118: iload_2
     119: iload         5
     121: iadd
     122: istore_2
     123: iload_3
     124: iload         5
     126: isub
     127: istore_3
     128: goto          11
     131: new           #11                 // class java/util/zip/DataFormatException
     134: dup
     135: ldc           #23                 // String Inflater is neither finished nor needing input.
     137: invokespecial #21                 // Method java/util/zip/DataFormatException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: iload         4
     143: iload         5
     145: iadd
     146: istore        4
     148: iload_2
     149: iload         5
     151: iadd
     152: istore_2
     153: iload_3
     154: iload         5
     156: isub
     157: istore_3
     158: goto          11
     161: iload         4
     163: ireturn
}
