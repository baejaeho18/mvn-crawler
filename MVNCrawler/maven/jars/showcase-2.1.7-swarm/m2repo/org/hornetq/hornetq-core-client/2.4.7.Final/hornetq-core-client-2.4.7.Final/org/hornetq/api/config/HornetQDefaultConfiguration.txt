Compiled from "HornetQDefaultConfiguration.java"
public final class org.hornetq.api.config.HornetQDefaultConfiguration {
  private static long DEFAULT_CLIENT_FAILURE_CHECK_PERIOD;

  private static long DEFAULT_FILE_DEPLOYER_SCAN_PERIOD;

  private static int DEFAULT_JOURNAL_MAX_IO_AIO;

  private static int DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO;

  private static int DEFAULT_JOURNAL_BUFFER_SIZE_AIO;

  private static int DEFAULT_JOURNAL_MAX_IO_NIO;

  private static int DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO;

  private static int DEFAULT_JOURNAL_BUFFER_SIZE_NIO;

  private static java.lang.String PROP_MASK_PASSWORD;

  private static java.lang.String PROP_PASSWORD_CODEC;

  private static boolean DEFAULT_RESOLVE_PROTOCOLS;

  private static boolean DEFAULT_CHECK_FOR_LIVE_SERVER;

  private static boolean DEFAULT_FILE_DEPLOYMENT_ENABLED;

  private static boolean DEFAULT_PERSISTENCE_ENABLED;

  private static int DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE;

  private static int DEFAULT_THREAD_POOL_MAX_SIZE;

  private static boolean DEFAULT_SECURITY_ENABLED;

  private static long DEFAULT_SECURITY_INVALIDATION_INTERVAL;

  private static boolean DEFAULT_WILDCARD_ROUTING_ENABLED;

  private static org.hornetq.api.core.SimpleString DEFAULT_MANAGEMENT_ADDRESS;

  private static org.hornetq.api.core.SimpleString DEFAULT_MANAGEMENT_NOTIFICATION_ADDRESS;

  private static java.lang.String DEFAULT_CLUSTER_USER;

  private static java.lang.String DEFAULT_CLUSTER_PASSWORD;

  private static int DEFAULT_MAX_SAVED_REPLICATED_JOURNALS_SIZE;

  private static boolean DEFAULT_MASK_PASSWORD;

  private static boolean DEFAULT_JMX_MANAGEMENT_ENABLED;

  private static java.lang.String DEFAULT_JMX_DOMAIN;

  private static boolean DEFAULT_MESSAGE_COUNTER_ENABLED;

  private static long DEFAULT_MESSAGE_COUNTER_SAMPLE_PERIOD;

  private static int DEFAULT_MESSAGE_COUNTER_MAX_DAY_HISTORY;

  private static long DEFAULT_CONNECTION_TTL_OVERRIDE;

  private static boolean DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED;

  private static long DEFAULT_TRANSACTION_TIMEOUT;

  private static long DEFAULT_TRANSACTION_TIMEOUT_SCAN_PERIOD;

  private static long DEFAULT_MESSAGE_EXPIRY_SCAN_PERIOD;

  private static int DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY;

  private static int DEFAULT_ID_CACHE_SIZE;

  private static boolean DEFAULT_PERSIST_ID_CACHE;

  private static boolean DEFAULT_BACKUP;

  private static boolean DEFAULT_ALLOW_AUTO_FAILBACK;

  private static long DEFAULT_FAILBACK_DELAY;

  private static boolean DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN;

  private static boolean DEFAULT_SHARED_STORE;

  private static boolean DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY;

  private static java.lang.String DEFAULT_PAGING_DIR;

  private static java.lang.String DEFAULT_BINDINGS_DIRECTORY;

  private static boolean DEFAULT_CREATE_BINDINGS_DIR;

  private static int DEFAULT_MAX_CONCURRENT_PAGE_IO;

  private static java.lang.String DEFAULT_JOURNAL_DIR;

  private static boolean DEFAULT_CREATE_JOURNAL_DIR;

  private static boolean DEFAULT_JOURNAL_SYNC_TRANSACTIONAL;

  private static boolean DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL;

  private static boolean DEFAULT_JOURNAL_LOG_WRITE_RATE;

  private static int DEFAULT_JOURNAL_FILE_SIZE;

  private static int DEFAULT_JOURNAL_MIN_FILES;

  private static int DEFAULT_JOURNAL_COMPACT_PERCENTAGE;

  private static int DEFAULT_JOURNAL_COMPACT_MIN_FILES;

  private static int DEFAULT_JOURNAL_PERF_BLAST_PAGES;

  private static boolean DEFAULT_RUN_SYNC_SPEED_TEST;

  private static long DEFAULT_SERVER_DUMP_INTERVAL;

  private static int DEFAULT_MEMORY_WARNING_THRESHOLD;

  private static long DEFAULT_MEMORY_MEASURE_INTERVAL;

  private static java.lang.String DEFAULT_LARGE_MESSAGES_DIR;

  private static long DEFAULT_BROADCAST_PERIOD;

  private static int DEFAULT_BROADCAST_REFRESH_TIMEOUT;

  private static long DEFAULT_CONNECTION_TTL;

  private static double DEFAULT_RETRY_INTERVAL_MULTIPLIER;

  private static long DEFAULT_MAX_RETRY_INTERVAL;

  private static int DEFAULT_BRIDGE_INITIAL_CONNECT_ATTEMPTS;

  private static int DEFAULT_BRIDGE_RECONNECT_ATTEMPTS;

  private static boolean DEFAULT_BRIDGE_DUPLICATE_DETECTION;

  private static int DEFAULT_BRIDGE_CONNECT_SAME_NODE;

  private static long DEFAULT_CLUSTER_FAILURE_CHECK_PERIOD;

  private static long DEFAULT_CLUSTER_CONNECTION_TTL;

  private static long DEFAULT_CLUSTER_RETRY_INTERVAL;

  private static double DEFAULT_CLUSTER_RETRY_INTERVAL_MULTIPLIER;

  private static long DEFAULT_CLUSTER_MAX_RETRY_INTERVAL;

  private static int DEFAULT_CLUSTER_INITIAL_CONNECT_ATTEMPTS;

  private static int DEFAULT_CLUSTER_RECONNECT_ATTEMPTS;

  private static boolean DEFAULT_CLUSTER_DUPLICATE_DETECTION;

  private static boolean DEFAULT_CLUSTER_FORWARD_WHEN_NO_CONSUMERS;

  private static int DEFAULT_CLUSTER_MAX_HOPS;

  private static long DEFAULT_CLUSTER_NOTIFICATION_INTERVAL;

  private static int DEFAULT_CLUSTER_NOTIFICATION_ATTEMPTS;

  private static boolean DEFAULT_DIVERT_EXCLUSIVE;

  private org.hornetq.api.config.HornetQDefaultConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long getDefaultClientFailureCheckPeriod();
    Code:
       0: getstatic     #2                  // Field DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
       3: lreturn

  public static long getDefaultFileDeployerScanPeriod();
    Code:
       0: getstatic     #3                  // Field DEFAULT_FILE_DEPLOYER_SCAN_PERIOD:J
       3: lreturn

  public static int getDefaultJournalMaxIoAio();
    Code:
       0: getstatic     #4                  // Field DEFAULT_JOURNAL_MAX_IO_AIO:I
       3: ireturn

  public static int getDefaultJournalBufferTimeoutAio();
    Code:
       0: getstatic     #5                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO:I
       3: ireturn

  public static int getDefaultJournalBufferSizeAio();
    Code:
       0: getstatic     #6                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_AIO:I
       3: ireturn

  public static int getDefaultJournalMaxIoNio();
    Code:
       0: getstatic     #7                  // Field DEFAULT_JOURNAL_MAX_IO_NIO:I
       3: ireturn

  public static int getDefaultJournalBufferTimeoutNio();
    Code:
       0: getstatic     #8                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO:I
       3: ireturn

  public static int getDefaultJournalBufferSizeNio();
    Code:
       0: getstatic     #9                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_NIO:I
       3: ireturn

  public static java.lang.String getPropMaskPassword();
    Code:
       0: getstatic     #10                 // Field PROP_MASK_PASSWORD:Ljava/lang/String;
       3: areturn

  public static java.lang.String getPropPasswordCodec();
    Code:
       0: getstatic     #11                 // Field PROP_PASSWORD_CODEC:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultResolveProtocols();
    Code:
       0: getstatic     #12                 // Field DEFAULT_RESOLVE_PROTOCOLS:Z
       3: ireturn

  public static boolean isDefaultCheckForLiveServer();
    Code:
       0: getstatic     #13                 // Field DEFAULT_CHECK_FOR_LIVE_SERVER:Z
       3: ireturn

  public static boolean isDefaultFileDeploymentEnabled();
    Code:
       0: getstatic     #14                 // Field DEFAULT_FILE_DEPLOYMENT_ENABLED:Z
       3: ireturn

  public static boolean isDefaultPersistenceEnabled();
    Code:
       0: getstatic     #15                 // Field DEFAULT_PERSISTENCE_ENABLED:Z
       3: ireturn

  public static int getDefaultScheduledThreadPoolMaxSize();
    Code:
       0: getstatic     #16                 // Field DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE:I
       3: ireturn

  public static int getDefaultThreadPoolMaxSize();
    Code:
       0: getstatic     #17                 // Field DEFAULT_THREAD_POOL_MAX_SIZE:I
       3: ireturn

  public static boolean isDefaultSecurityEnabled();
    Code:
       0: getstatic     #18                 // Field DEFAULT_SECURITY_ENABLED:Z
       3: ireturn

  public static long getDefaultSecurityInvalidationInterval();
    Code:
       0: getstatic     #19                 // Field DEFAULT_SECURITY_INVALIDATION_INTERVAL:J
       3: lreturn

  public static boolean isDefaultWildcardRoutingEnabled();
    Code:
       0: getstatic     #20                 // Field DEFAULT_WILDCARD_ROUTING_ENABLED:Z
       3: ireturn

  public static org.hornetq.api.core.SimpleString getDefaultManagementAddress();
    Code:
       0: getstatic     #21                 // Field DEFAULT_MANAGEMENT_ADDRESS:Lorg/hornetq/api/core/SimpleString;
       3: areturn

  public static org.hornetq.api.core.SimpleString getDefaultManagementNotificationAddress();
    Code:
       0: getstatic     #22                 // Field DEFAULT_MANAGEMENT_NOTIFICATION_ADDRESS:Lorg/hornetq/api/core/SimpleString;
       3: areturn

  public static java.lang.String getDefaultClusterUser();
    Code:
       0: getstatic     #23                 // Field DEFAULT_CLUSTER_USER:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDefaultClusterPassword();
    Code:
       0: getstatic     #24                 // Field DEFAULT_CLUSTER_PASSWORD:Ljava/lang/String;
       3: areturn

  public static int getDefaultMaxSavedReplicatedJournalsSize();
    Code:
       0: getstatic     #25                 // Field DEFAULT_MAX_SAVED_REPLICATED_JOURNALS_SIZE:I
       3: ireturn

  public static boolean isDefaultMaskPassword();
    Code:
       0: getstatic     #26                 // Field DEFAULT_MASK_PASSWORD:Z
       3: ireturn

  public static boolean isDefaultJmxManagementEnabled();
    Code:
       0: getstatic     #27                 // Field DEFAULT_JMX_MANAGEMENT_ENABLED:Z
       3: ireturn

  public static java.lang.String getDefaultJmxDomain();
    Code:
       0: getstatic     #28                 // Field DEFAULT_JMX_DOMAIN:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultMessageCounterEnabled();
    Code:
       0: getstatic     #29                 // Field DEFAULT_MESSAGE_COUNTER_ENABLED:Z
       3: ireturn

  public static long getDefaultMessageCounterSamplePeriod();
    Code:
       0: getstatic     #30                 // Field DEFAULT_MESSAGE_COUNTER_SAMPLE_PERIOD:J
       3: lreturn

  public static int getDefaultMessageCounterMaxDayHistory();
    Code:
       0: getstatic     #31                 // Field DEFAULT_MESSAGE_COUNTER_MAX_DAY_HISTORY:I
       3: ireturn

  public static long getDefaultConnectionTtlOverride();
    Code:
       0: getstatic     #32                 // Field DEFAULT_CONNECTION_TTL_OVERRIDE:J
       3: lreturn

  public static boolean isDefaultAsyncConnectionExecutionEnabled();
    Code:
       0: getstatic     #33                 // Field DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED:Z
       3: ireturn

  public static long getDefaultTransactionTimeout();
    Code:
       0: getstatic     #34                 // Field DEFAULT_TRANSACTION_TIMEOUT:J
       3: lreturn

  public static long getDefaultTransactionTimeoutScanPeriod();
    Code:
       0: getstatic     #35                 // Field DEFAULT_TRANSACTION_TIMEOUT_SCAN_PERIOD:J
       3: lreturn

  public static long getDefaultMessageExpiryScanPeriod();
    Code:
       0: getstatic     #36                 // Field DEFAULT_MESSAGE_EXPIRY_SCAN_PERIOD:J
       3: lreturn

  public static int getDefaultMessageExpiryThreadPriority();
    Code:
       0: getstatic     #37                 // Field DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY:I
       3: ireturn

  public static int getDefaultIdCacheSize();
    Code:
       0: getstatic     #38                 // Field DEFAULT_ID_CACHE_SIZE:I
       3: ireturn

  public static boolean isDefaultPersistIdCache();
    Code:
       0: getstatic     #39                 // Field DEFAULT_PERSIST_ID_CACHE:Z
       3: ireturn

  public static boolean isDefaultBackup();
    Code:
       0: getstatic     #40                 // Field DEFAULT_BACKUP:Z
       3: ireturn

  public static boolean isDefaultAllowAutoFailback();
    Code:
       0: getstatic     #41                 // Field DEFAULT_ALLOW_AUTO_FAILBACK:Z
       3: ireturn

  public static long getDefaultFailbackDelay();
    Code:
       0: getstatic     #42                 // Field DEFAULT_FAILBACK_DELAY:J
       3: lreturn

  public static boolean isDefaultFailoverOnServerShutdown();
    Code:
       0: getstatic     #43                 // Field DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN:Z
       3: ireturn

  public static boolean isDefaultSharedStore();
    Code:
       0: getstatic     #44                 // Field DEFAULT_SHARED_STORE:Z
       3: ireturn

  public static boolean isDefaultPersistDeliveryCountBeforeDelivery();
    Code:
       0: getstatic     #45                 // Field DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY:Z
       3: ireturn

  public static java.lang.String getDefaultPagingDir();
    Code:
       0: getstatic     #46                 // Field DEFAULT_PAGING_DIR:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDefaultBindingsDirectory();
    Code:
       0: getstatic     #47                 // Field DEFAULT_BINDINGS_DIRECTORY:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultCreateBindingsDir();
    Code:
       0: getstatic     #48                 // Field DEFAULT_CREATE_BINDINGS_DIR:Z
       3: ireturn

  public static int getDefaultMaxConcurrentPageIo();
    Code:
       0: getstatic     #49                 // Field DEFAULT_MAX_CONCURRENT_PAGE_IO:I
       3: ireturn

  public static java.lang.String getDefaultJournalDir();
    Code:
       0: getstatic     #50                 // Field DEFAULT_JOURNAL_DIR:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultCreateJournalDir();
    Code:
       0: getstatic     #51                 // Field DEFAULT_CREATE_JOURNAL_DIR:Z
       3: ireturn

  public static boolean isDefaultJournalSyncTransactional();
    Code:
       0: getstatic     #52                 // Field DEFAULT_JOURNAL_SYNC_TRANSACTIONAL:Z
       3: ireturn

  public static boolean isDefaultJournalSyncNonTransactional();
    Code:
       0: getstatic     #53                 // Field DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL:Z
       3: ireturn

  public static boolean isDefaultJournalLogWriteRate();
    Code:
       0: getstatic     #54                 // Field DEFAULT_JOURNAL_LOG_WRITE_RATE:Z
       3: ireturn

  public static int getDefaultJournalFileSize();
    Code:
       0: getstatic     #55                 // Field DEFAULT_JOURNAL_FILE_SIZE:I
       3: ireturn

  public static int getDefaultJournalMinFiles();
    Code:
       0: getstatic     #56                 // Field DEFAULT_JOURNAL_MIN_FILES:I
       3: ireturn

  public static int getDefaultJournalCompactPercentage();
    Code:
       0: getstatic     #57                 // Field DEFAULT_JOURNAL_COMPACT_PERCENTAGE:I
       3: ireturn

  public static int getDefaultJournalCompactMinFiles();
    Code:
       0: getstatic     #58                 // Field DEFAULT_JOURNAL_COMPACT_MIN_FILES:I
       3: ireturn

  public static int getDefaultJournalPerfBlastPages();
    Code:
       0: getstatic     #59                 // Field DEFAULT_JOURNAL_PERF_BLAST_PAGES:I
       3: ireturn

  public static boolean isDefaultRunSyncSpeedTest();
    Code:
       0: getstatic     #60                 // Field DEFAULT_RUN_SYNC_SPEED_TEST:Z
       3: ireturn

  public static long getDefaultServerDumpInterval();
    Code:
       0: getstatic     #61                 // Field DEFAULT_SERVER_DUMP_INTERVAL:J
       3: lreturn

  public static int getDefaultMemoryWarningThreshold();
    Code:
       0: getstatic     #62                 // Field DEFAULT_MEMORY_WARNING_THRESHOLD:I
       3: ireturn

  public static long getDefaultMemoryMeasureInterval();
    Code:
       0: getstatic     #63                 // Field DEFAULT_MEMORY_MEASURE_INTERVAL:J
       3: lreturn

  public static java.lang.String getDefaultLargeMessagesDir();
    Code:
       0: getstatic     #64                 // Field DEFAULT_LARGE_MESSAGES_DIR:Ljava/lang/String;
       3: areturn

  public static long getDefaultBroadcastPeriod();
    Code:
       0: getstatic     #65                 // Field DEFAULT_BROADCAST_PERIOD:J
       3: lreturn

  public static int getDefaultBroadcastRefreshTimeout();
    Code:
       0: getstatic     #66                 // Field DEFAULT_BROADCAST_REFRESH_TIMEOUT:I
       3: ireturn

  public static long getDefaultConnectionTtl();
    Code:
       0: getstatic     #67                 // Field DEFAULT_CONNECTION_TTL:J
       3: lreturn

  public static double getDefaultRetryIntervalMultiplier();
    Code:
       0: getstatic     #68                 // Field DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
       3: dreturn

  public static long getDefaultMaxRetryInterval();
    Code:
       0: getstatic     #69                 // Field DEFAULT_MAX_RETRY_INTERVAL:J
       3: lreturn

  public static int getDefaultBridgeInitialConnectAttempts();
    Code:
       0: getstatic     #70                 // Field DEFAULT_BRIDGE_INITIAL_CONNECT_ATTEMPTS:I
       3: ireturn

  public static int getDefaultBridgeReconnectAttempts();
    Code:
       0: getstatic     #71                 // Field DEFAULT_BRIDGE_RECONNECT_ATTEMPTS:I
       3: ireturn

  public static boolean isDefaultBridgeDuplicateDetection();
    Code:
       0: getstatic     #72                 // Field DEFAULT_BRIDGE_DUPLICATE_DETECTION:Z
       3: ireturn

  public static int getDefaultBridgeConnectSameNode();
    Code:
       0: getstatic     #73                 // Field DEFAULT_BRIDGE_CONNECT_SAME_NODE:I
       3: ireturn

  public static long getDefaultClusterFailureCheckPeriod();
    Code:
       0: getstatic     #74                 // Field DEFAULT_CLUSTER_FAILURE_CHECK_PERIOD:J
       3: lreturn

  public static long getDefaultClusterConnectionTtl();
    Code:
       0: getstatic     #75                 // Field DEFAULT_CLUSTER_CONNECTION_TTL:J
       3: lreturn

  public static long getDefaultClusterRetryInterval();
    Code:
       0: getstatic     #76                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL:J
       3: lreturn

  public static double getDefaultClusterRetryIntervalMultiplier();
    Code:
       0: getstatic     #77                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL_MULTIPLIER:D
       3: dreturn

  public static long getDefaultClusterMaxRetryInterval();
    Code:
       0: getstatic     #78                 // Field DEFAULT_CLUSTER_MAX_RETRY_INTERVAL:J
       3: lreturn

  public static int getDefaultClusterInitialConnectAttempts();
    Code:
       0: getstatic     #79                 // Field DEFAULT_CLUSTER_INITIAL_CONNECT_ATTEMPTS:I
       3: ireturn

  public static int getDefaultClusterReconnectAttempts();
    Code:
       0: getstatic     #80                 // Field DEFAULT_CLUSTER_RECONNECT_ATTEMPTS:I
       3: ireturn

  public static boolean isDefaultClusterDuplicateDetection();
    Code:
       0: getstatic     #81                 // Field DEFAULT_CLUSTER_DUPLICATE_DETECTION:Z
       3: ireturn

  public static boolean isDefaultClusterForwardWhenNoConsumers();
    Code:
       0: getstatic     #82                 // Field DEFAULT_CLUSTER_FORWARD_WHEN_NO_CONSUMERS:Z
       3: ireturn

  public static int getDefaultClusterMaxHops();
    Code:
       0: getstatic     #83                 // Field DEFAULT_CLUSTER_MAX_HOPS:I
       3: ireturn

  public static long getDefaultClusterNotificationInterval();
    Code:
       0: getstatic     #84                 // Field DEFAULT_CLUSTER_NOTIFICATION_INTERVAL:J
       3: lreturn

  public static int getDefaultClusterNotificationAttempts();
    Code:
       0: getstatic     #85                 // Field DEFAULT_CLUSTER_NOTIFICATION_ATTEMPTS:I
       3: ireturn

  public static boolean isDefaultDivertExclusive();
    Code:
       0: getstatic     #86                 // Field DEFAULT_DIVERT_EXCLUSIVE:Z
       3: ireturn

  static {};
    Code:
       0: ldc2_w        #87                 // long 30000l
       3: putstatic     #2                  // Field DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
       6: ldc2_w        #89                 // long 5000l
       9: putstatic     #3                  // Field DEFAULT_FILE_DEPLOYER_SCAN_PERIOD:J
      12: sipush        500
      15: putstatic     #4                  // Field DEFAULT_JOURNAL_MAX_IO_AIO:I
      18: ldc           #92                 // int 500000
      20: putstatic     #5                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO:I
      23: ldc           #93                 // int 501760
      25: putstatic     #6                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_AIO:I
      28: iconst_1
      29: putstatic     #7                  // Field DEFAULT_JOURNAL_MAX_IO_NIO:I
      32: ldc           #94                 // int 3333333
      34: putstatic     #8                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO:I
      37: ldc           #93                 // int 501760
      39: putstatic     #9                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_NIO:I
      42: ldc           #95                 // String hornetq.usemaskedpassword
      44: putstatic     #10                 // Field PROP_MASK_PASSWORD:Ljava/lang/String;
      47: ldc           #96                 // String hornetq.passwordcodec
      49: putstatic     #11                 // Field PROP_PASSWORD_CODEC:Ljava/lang/String;
      52: iconst_1
      53: putstatic     #12                 // Field DEFAULT_RESOLVE_PROTOCOLS:Z
      56: iconst_0
      57: putstatic     #13                 // Field DEFAULT_CHECK_FOR_LIVE_SERVER:Z
      60: iconst_0
      61: putstatic     #14                 // Field DEFAULT_FILE_DEPLOYMENT_ENABLED:Z
      64: iconst_1
      65: putstatic     #15                 // Field DEFAULT_PERSISTENCE_ENABLED:Z
      68: iconst_5
      69: putstatic     #16                 // Field DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE:I
      72: bipush        30
      74: putstatic     #17                 // Field DEFAULT_THREAD_POOL_MAX_SIZE:I
      77: iconst_1
      78: putstatic     #18                 // Field DEFAULT_SECURITY_ENABLED:Z
      81: ldc2_w        #97                 // long 10000l
      84: putstatic     #19                 // Field DEFAULT_SECURITY_INVALIDATION_INTERVAL:J
      87: iconst_1
      88: putstatic     #20                 // Field DEFAULT_WILDCARD_ROUTING_ENABLED:Z
      91: new           #99                 // class org/hornetq/api/core/SimpleString
      94: dup
      95: ldc           #100                // String jms.queue.hornetq.management
      97: invokespecial #101                // Method org/hornetq/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     100: putstatic     #21                 // Field DEFAULT_MANAGEMENT_ADDRESS:Lorg/hornetq/api/core/SimpleString;
     103: new           #99                 // class org/hornetq/api/core/SimpleString
     106: dup
     107: ldc           #102                // String hornetq.notifications
     109: invokespecial #101                // Method org/hornetq/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     112: putstatic     #22                 // Field DEFAULT_MANAGEMENT_NOTIFICATION_ADDRESS:Lorg/hornetq/api/core/SimpleString;
     115: ldc           #103                // String HORNETQ.CLUSTER.ADMIN.USER
     117: putstatic     #23                 // Field DEFAULT_CLUSTER_USER:Ljava/lang/String;
     120: ldc           #104                // String CHANGE ME!!
     122: putstatic     #24                 // Field DEFAULT_CLUSTER_PASSWORD:Ljava/lang/String;
     125: iconst_2
     126: putstatic     #25                 // Field DEFAULT_MAX_SAVED_REPLICATED_JOURNALS_SIZE:I
     129: iconst_0
     130: putstatic     #26                 // Field DEFAULT_MASK_PASSWORD:Z
     133: iconst_1
     134: putstatic     #27                 // Field DEFAULT_JMX_MANAGEMENT_ENABLED:Z
     137: ldc           #105                // String org.hornetq
     139: putstatic     #28                 // Field DEFAULT_JMX_DOMAIN:Ljava/lang/String;
     142: iconst_0
     143: putstatic     #29                 // Field DEFAULT_MESSAGE_COUNTER_ENABLED:Z
     146: ldc2_w        #97                 // long 10000l
     149: putstatic     #30                 // Field DEFAULT_MESSAGE_COUNTER_SAMPLE_PERIOD:J
     152: bipush        10
     154: putstatic     #31                 // Field DEFAULT_MESSAGE_COUNTER_MAX_DAY_HISTORY:I
     157: ldc2_w        #106                // long -1l
     160: putstatic     #32                 // Field DEFAULT_CONNECTION_TTL_OVERRIDE:J
     163: iconst_1
     164: putstatic     #33                 // Field DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED:Z
     167: ldc2_w        #108                // long 300000l
     170: putstatic     #34                 // Field DEFAULT_TRANSACTION_TIMEOUT:J
     173: ldc2_w        #110                // long 1000l
     176: putstatic     #35                 // Field DEFAULT_TRANSACTION_TIMEOUT_SCAN_PERIOD:J
     179: ldc2_w        #87                 // long 30000l
     182: putstatic     #36                 // Field DEFAULT_MESSAGE_EXPIRY_SCAN_PERIOD:J
     185: iconst_3
     186: putstatic     #37                 // Field DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY:I
     189: sipush        20000
     192: putstatic     #38                 // Field DEFAULT_ID_CACHE_SIZE:I
     195: iconst_1
     196: putstatic     #39                 // Field DEFAULT_PERSIST_ID_CACHE:Z
     199: iconst_0
     200: putstatic     #40                 // Field DEFAULT_BACKUP:Z
     203: iconst_1
     204: putstatic     #41                 // Field DEFAULT_ALLOW_AUTO_FAILBACK:Z
     207: ldc2_w        #89                 // long 5000l
     210: putstatic     #42                 // Field DEFAULT_FAILBACK_DELAY:J
     213: iconst_0
     214: putstatic     #43                 // Field DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN:Z
     217: iconst_1
     218: putstatic     #44                 // Field DEFAULT_SHARED_STORE:Z
     221: iconst_0
     222: putstatic     #45                 // Field DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY:Z
     225: ldc           #112                // String data/paging
     227: putstatic     #46                 // Field DEFAULT_PAGING_DIR:Ljava/lang/String;
     230: ldc           #113                // String data/bindings
     232: putstatic     #47                 // Field DEFAULT_BINDINGS_DIRECTORY:Ljava/lang/String;
     235: iconst_1
     236: putstatic     #48                 // Field DEFAULT_CREATE_BINDINGS_DIR:Z
     239: iconst_5
     240: putstatic     #49                 // Field DEFAULT_MAX_CONCURRENT_PAGE_IO:I
     243: ldc           #114                // String data/journal
     245: putstatic     #50                 // Field DEFAULT_JOURNAL_DIR:Ljava/lang/String;
     248: iconst_1
     249: putstatic     #51                 // Field DEFAULT_CREATE_JOURNAL_DIR:Z
     252: iconst_1
     253: putstatic     #52                 // Field DEFAULT_JOURNAL_SYNC_TRANSACTIONAL:Z
     256: iconst_1
     257: putstatic     #53                 // Field DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL:Z
     260: iconst_0
     261: putstatic     #54                 // Field DEFAULT_JOURNAL_LOG_WRITE_RATE:Z
     264: ldc           #115                // int 10485760
     266: putstatic     #55                 // Field DEFAULT_JOURNAL_FILE_SIZE:I
     269: iconst_2
     270: putstatic     #56                 // Field DEFAULT_JOURNAL_MIN_FILES:I
     273: bipush        30
     275: putstatic     #57                 // Field DEFAULT_JOURNAL_COMPACT_PERCENTAGE:I
     278: bipush        10
     280: putstatic     #58                 // Field DEFAULT_JOURNAL_COMPACT_MIN_FILES:I
     283: iconst_m1
     284: putstatic     #59                 // Field DEFAULT_JOURNAL_PERF_BLAST_PAGES:I
     287: iconst_0
     288: putstatic     #60                 // Field DEFAULT_RUN_SYNC_SPEED_TEST:Z
     291: ldc2_w        #106                // long -1l
     294: putstatic     #61                 // Field DEFAULT_SERVER_DUMP_INTERVAL:J
     297: bipush        25
     299: putstatic     #62                 // Field DEFAULT_MEMORY_WARNING_THRESHOLD:I
     302: ldc2_w        #106                // long -1l
     305: putstatic     #63                 // Field DEFAULT_MEMORY_MEASURE_INTERVAL:J
     308: ldc           #116                // String data/largemessages
     310: putstatic     #64                 // Field DEFAULT_LARGE_MESSAGES_DIR:Ljava/lang/String;
     313: ldc2_w        #117                // long 2000l
     316: putstatic     #65                 // Field DEFAULT_BROADCAST_PERIOD:J
     319: sipush        10000
     322: putstatic     #66                 // Field DEFAULT_BROADCAST_REFRESH_TIMEOUT:I
     325: ldc2_w        #119                // long 60000l
     328: putstatic     #67                 // Field DEFAULT_CONNECTION_TTL:J
     331: dconst_1
     332: putstatic     #68                 // Field DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
     335: ldc2_w        #117                // long 2000l
     338: putstatic     #69                 // Field DEFAULT_MAX_RETRY_INTERVAL:J
     341: iconst_m1
     342: putstatic     #70                 // Field DEFAULT_BRIDGE_INITIAL_CONNECT_ATTEMPTS:I
     345: iconst_m1
     346: putstatic     #71                 // Field DEFAULT_BRIDGE_RECONNECT_ATTEMPTS:I
     349: iconst_1
     350: putstatic     #72                 // Field DEFAULT_BRIDGE_DUPLICATE_DETECTION:Z
     353: bipush        10
     355: putstatic     #73                 // Field DEFAULT_BRIDGE_CONNECT_SAME_NODE:I
     358: ldc2_w        #87                 // long 30000l
     361: putstatic     #74                 // Field DEFAULT_CLUSTER_FAILURE_CHECK_PERIOD:J
     364: ldc2_w        #119                // long 60000l
     367: putstatic     #75                 // Field DEFAULT_CLUSTER_CONNECTION_TTL:J
     370: ldc2_w        #121                // long 500l
     373: putstatic     #76                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL:J
     376: dconst_1
     377: putstatic     #77                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL_MULTIPLIER:D
     380: ldc2_w        #117                // long 2000l
     383: putstatic     #78                 // Field DEFAULT_CLUSTER_MAX_RETRY_INTERVAL:J
     386: iconst_m1
     387: putstatic     #79                 // Field DEFAULT_CLUSTER_INITIAL_CONNECT_ATTEMPTS:I
     390: iconst_m1
     391: putstatic     #80                 // Field DEFAULT_CLUSTER_RECONNECT_ATTEMPTS:I
     394: iconst_1
     395: putstatic     #81                 // Field DEFAULT_CLUSTER_DUPLICATE_DETECTION:Z
     398: iconst_0
     399: putstatic     #82                 // Field DEFAULT_CLUSTER_FORWARD_WHEN_NO_CONSUMERS:Z
     402: iconst_1
     403: putstatic     #83                 // Field DEFAULT_CLUSTER_MAX_HOPS:I
     406: ldc2_w        #110                // long 1000l
     409: putstatic     #84                 // Field DEFAULT_CLUSTER_NOTIFICATION_INTERVAL:J
     412: iconst_2
     413: putstatic     #85                 // Field DEFAULT_CLUSTER_NOTIFICATION_ATTEMPTS:I
     416: iconst_0
     417: putstatic     #86                 // Field DEFAULT_DIVERT_EXCLUSIVE:Z
     420: return
}
