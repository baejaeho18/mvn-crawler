Compiled from "SoftValueHashMap.java"
public class org.hornetq.utils.SoftValueHashMap<K, V extends org.hornetq.utils.SoftValueHashMap$ValueCache> implements java.util.Map<K, V> {
  private final boolean isTrace;

  private final java.lang.ref.ReferenceQueue<V> refQueue;

  private final java.util.Map<K, org.hornetq.utils.SoftValueHashMap<K, V>.AggregatedSoftReference> mapDelegate;

  private final java.util.concurrent.atomic.AtomicLong usedCounter;

  private int maxElements;

  public org.hornetq.utils.SoftValueHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
       8: invokeinterface #5,  1            // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.isTraceEnabled:()Z
      13: putfield      #6                  // Field isTrace:Z
      16: aload_0
      17: new           #7                  // class java/lang/ref/ReferenceQueue
      20: dup
      21: invokespecial #8                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      24: putfield      #1                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      27: aload_0
      28: new           #9                  // class java/util/HashMap
      31: dup
      32: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      35: putfield      #11                 // Field mapDelegate:Ljava/util/Map;
      38: aload_0
      39: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      42: dup
      43: lconst_0
      44: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      47: putfield      #2                  // Field usedCounter:Ljava/util/concurrent/atomic/AtomicLong;
      50: aload_0
      51: iload_1
      52: putfield      #14                 // Field maxElements:I
      55: return

  public void setMaxElements(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field maxElements:I
       5: aload_0
       6: invokespecial #15                 // Method checkCacheSize:()V
       9: return

  public int getMaxEelements();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxElements:I
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #19,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          66
      28: aload_2
      29: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      37: astore_3
      38: aload_3
      39: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      42: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      45: astore        4
      47: aload         4
      49: ifnull        63
      52: aload_1
      53: aload         4
      55: invokevirtual #27                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: goto          19
      66: iconst_0
      67: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      17: astore_2
      18: aload_2
      19: ifnull        34
      22: aload_2
      23: invokevirtual #29                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.used:()V
      26: aload_2
      27: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      30: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      33: areturn
      34: aconst_null
      35: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #30                 // Method createReference:(Ljava/lang/Object;Lorg/hornetq/utils/SoftValueHashMap$ValueCache;)Lorg/hornetq/utils/SoftValueHashMap$AggregatedSoftReference;
      10: astore_3
      11: aload_0
      12: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
      15: aload_1
      16: aload_3
      17: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      25: astore        4
      27: aload_0
      28: invokespecial #15                 // Method checkCacheSize:()V
      31: aload_3
      32: invokevirtual #29                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.used:()V
      35: aload         4
      37: ifnull        49
      40: aload         4
      42: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      45: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      48: areturn
      49: aconst_null
      50: areturn

  private void checkCacheSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxElements:I
       4: ifle          228
       7: aload_0
       8: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
      11: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
      16: aload_0
      17: getfield      #14                 // Field maxElements:I
      20: if_icmple     228
      23: new           #32                 // class java/util/TreeSet
      26: dup
      27: new           #33                 // class org/hornetq/utils/SoftValueHashMap$ComparatorAgregated
      30: dup
      31: aload_0
      32: invokespecial #34                 // Method org/hornetq/utils/SoftValueHashMap$ComparatorAgregated."<init>":(Lorg/hornetq/utils/SoftValueHashMap;)V
      35: invokespecial #35                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      38: astore_1
      39: aload_0
      40: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
      43: invokeinterface #20,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      48: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      53: astore_2
      54: aload_2
      55: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          106
      63: aload_2
      64: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      72: astore_3
      73: aload_3
      74: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      77: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      80: astore        4
      82: aload         4
      84: ifnull        103
      87: aload         4
      89: invokeinterface #36,  1           // InterfaceMethod org/hornetq/utils/SoftValueHashMap$ValueCache.isLive:()Z
      94: ifne          103
      97: aload_1
      98: aload_3
      99: invokevirtual #37                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
     102: pop
     103: goto          54
     106: aload_1
     107: invokevirtual #38                 // Method java/util/TreeSet.iterator:()Ljava/util/Iterator;
     110: astore_2
     111: aload_2
     112: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     117: ifeq          228
     120: aload_2
     121: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     126: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
     129: astore_3
     130: aload_3
     131: getfield      #39                 // Field org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.used:J
     134: lconst_0
     135: lcmp
     136: ifle          225
     139: aload_0
     140: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
     143: aload_3
     144: getfield      #40                 // Field org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.key:Ljava/lang/Object;
     147: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     152: astore        4
     154: aload_0
     155: getfield      #6                  // Field isTrace:Z
     158: ifeq          206
     161: getstatic     #4                  // Field org/hornetq/core/client/HornetQClientLogger.LOGGER:Lorg/hornetq/core/client/HornetQClientLogger;
     164: new           #42                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #44                 // String Removing
     173: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: aload         4
     178: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     181: ldc           #47                 // String  with id =
     183: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_3
     187: getfield      #40                 // Field org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.key:Ljava/lang/Object;
     190: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     193: ldc           #48                 // String  from SoftValueHashMap
     195: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokeinterface #50,  2           // InterfaceMethod org/hornetq/core/client/HornetQClientLogger.trace:(Ljava/lang/Object;)V
     206: aload_0
     207: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
     210: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
     215: aload_0
     216: getfield      #14                 // Field maxElements:I
     219: if_icmpgt     225
     222: goto          228
     225: goto          111
     228: return

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      17: astore_2
      18: aload_2
      19: ifnull        30
      22: aload_2
      23: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      26: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      29: areturn
      30: aconst_null
      31: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_1
       5: invokeinterface #51,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          58
      25: aload_2
      26: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #53                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #54,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: aload_3
      43: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      51: invokevirtual #56                 // Method put:(Ljava/lang/Object;Lorg/hornetq/utils/SoftValueHashMap$ValueCache;)Lorg/hornetq/utils/SoftValueHashMap$ValueCache;
      54: pop
      55: goto          16
      58: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: invokeinterface #58,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: new           #59                 // class java/util/ArrayList
       7: dup
       8: invokespecial #60                 // Method java/util/ArrayList."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
      16: invokeinterface #20,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      21: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          70
      36: aload_2
      37: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      45: astore_3
      46: aload_3
      47: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      50: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      53: astore        4
      55: aload         4
      57: ifnull        67
      60: aload_1
      61: aload         4
      63: invokevirtual #61                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          27
      70: aload_1
      71: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: new           #62                 // class java/util/HashSet
       7: dup
       8: invokespecial #63                 // Method java/util/HashSet."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
      16: invokeinterface #51,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          91
      36: aload_2
      37: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #53                 // class java/util/Map$Entry
      45: astore_3
      46: aload_3
      47: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      55: invokevirtual #25                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.get:()Ljava/lang/Object;
      58: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
      61: astore        4
      63: aload         4
      65: ifnull        88
      68: aload_1
      69: new           #64                 // class org/hornetq/utils/SoftValueHashMap$EntryElement
      72: dup
      73: aload_3
      74: invokeinterface #54,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: aload         4
      81: invokespecial #65                 // Method org/hornetq/utils/SoftValueHashMap$EntryElement."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      84: invokevirtual #66                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          27
      91: aload_1
      92: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method processQueue:()V
       4: aload_0
       5: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #67,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      14: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
       4: invokeinterface #68,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  private void processQueue();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #1                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       6: invokevirtual #69                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       9: checkcast     #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
      12: dup
      13: astore_1
      14: ifnull        34
      17: aload_0
      18: getfield      #11                 // Field mapDelegate:Ljava/util/Map;
      21: aload_1
      22: getfield      #40                 // Field org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference.key:Ljava/lang/Object;
      25: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: goto          2
      34: return

  private org.hornetq.utils.SoftValueHashMap<K, V>.AggregatedSoftReference createReference(K, V);
    Code:
       0: new           #24                 // class org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #70                 // Method org/hornetq/utils/SoftValueHashMap$AggregatedSoftReference."<init>":(Lorg/hornetq/utils/SoftValueHashMap;Ljava/lang/Object;Lorg/hornetq/utils/SoftValueHashMap$ValueCache;)V
      10: astore_3
      11: aload_3
      12: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method remove:(Ljava/lang/Object;)Lorg/hornetq/utils/SoftValueHashMap$ValueCache;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #26                 // class org/hornetq/utils/SoftValueHashMap$ValueCache
       6: invokevirtual #56                 // Method put:(Ljava/lang/Object;Lorg/hornetq/utils/SoftValueHashMap$ValueCache;)Lorg/hornetq/utils/SoftValueHashMap$ValueCache;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method get:(Ljava/lang/Object;)Lorg/hornetq/utils/SoftValueHashMap$ValueCache;
       5: areturn

  static java.util.concurrent.atomic.AtomicLong access$000(org.hornetq.utils.SoftValueHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field usedCounter:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.lang.ref.ReferenceQueue access$100(org.hornetq.utils.SoftValueHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       4: areturn
}
