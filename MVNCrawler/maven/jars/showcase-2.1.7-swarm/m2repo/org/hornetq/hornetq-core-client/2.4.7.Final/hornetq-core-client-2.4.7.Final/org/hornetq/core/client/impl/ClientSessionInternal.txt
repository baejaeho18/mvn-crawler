Compiled from "ClientSessionInternal.java"
public interface org.hornetq.core.client.impl.ClientSessionInternal extends org.hornetq.api.core.client.ClientSession {
  public abstract java.lang.String getName();

  public abstract void acknowledge(long, long) throws org.hornetq.api.core.HornetQException;

  public abstract void individualAcknowledge(long, long) throws org.hornetq.api.core.HornetQException;

  public abstract boolean isCacheLargeMessageClient();

  public abstract int getMinLargeMessageSize();

  public abstract boolean isCompressLargeMessages();

  public abstract void expire(long, long) throws org.hornetq.api.core.HornetQException;

  public abstract void addConsumer(org.hornetq.core.client.impl.ClientConsumerInternal);

  public abstract void addProducer(org.hornetq.core.client.impl.ClientProducerInternal);

  public abstract void removeConsumer(org.hornetq.core.client.impl.ClientConsumerInternal) throws org.hornetq.api.core.HornetQException;

  public abstract void removeProducer(org.hornetq.core.client.impl.ClientProducerInternal);

  public abstract void handleReceiveMessage(long, org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage) throws java.lang.Exception;

  public abstract void handleReceiveLargeMessage(long, org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage) throws java.lang.Exception;

  public abstract void handleReceiveContinuation(long, org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage) throws java.lang.Exception;

  public abstract void handleConsumerDisconnect(long) throws org.hornetq.api.core.HornetQException;

  public abstract void preHandleFailover(org.hornetq.core.protocol.core.CoreRemotingConnection);

  public abstract void handleFailover(org.hornetq.core.protocol.core.CoreRemotingConnection, org.hornetq.api.core.HornetQException);

  public abstract org.hornetq.spi.core.protocol.RemotingConnection getConnection();

  public abstract org.hornetq.core.protocol.core.Channel getChannel();

  public abstract void cleanUp(boolean) throws org.hornetq.api.core.HornetQException;

  public abstract void returnBlocking();

  public abstract void setForceNotSameRM(boolean);

  public abstract org.hornetq.core.client.impl.ClientSessionFactoryInternal getSessionFactory();

  public abstract void workDone();

  public abstract void forceDelivery(long, long) throws org.hornetq.api.core.HornetQException;

  public abstract void sendProducerCreditsMessage(int, org.hornetq.api.core.SimpleString);

  public abstract org.hornetq.core.client.impl.ClientProducerCredits getCredits(org.hornetq.api.core.SimpleString, boolean);

  public abstract void returnCredits(org.hornetq.api.core.SimpleString);

  public abstract void handleReceiveProducerCredits(org.hornetq.api.core.SimpleString, int);

  public abstract void handleReceiveProducerFailCredits(org.hornetq.api.core.SimpleString, int);

  public abstract org.hornetq.core.client.impl.ClientProducerCreditManager getProducerCreditManager();

  public abstract void setAddress(org.hornetq.api.core.Message, org.hornetq.api.core.SimpleString);

  public abstract void setPacketSize(int);

  public abstract void resetIfNeeded() throws org.hornetq.api.core.HornetQException;

  public abstract void startCall();

  public abstract void endCall();

  public abstract void setStopSignal();

  public abstract boolean isConfirmationWindowEnabled();

  public abstract void scheduleConfirmation(org.hornetq.api.core.client.SendAcknowledgementHandler, org.hornetq.api.core.Message);
}
