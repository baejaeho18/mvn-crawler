Compiled from "PacketImpl.java"
public class org.hornetq.core.protocol.core.impl.PacketImpl implements org.hornetq.core.protocol.core.Packet {
  public static final int PACKET_HEADERS_SIZE;

  private static final int INITIAL_PACKET_SIZE;

  protected long channelID;

  private final byte type;

  protected int size;

  public static final byte PING;

  public static final byte DISCONNECT;

  public static final byte DISCONNECT_CONSUMER;

  public static final byte EXCEPTION;

  public static final byte NULL_RESPONSE;

  public static final byte PACKETS_CONFIRMED;

  public static final byte CREATESESSION;

  public static final byte CREATESESSION_RESP;

  public static final byte REATTACH_SESSION;

  public static final byte REATTACH_SESSION_RESP;

  public static final byte CREATE_QUEUE;

  public static final byte DELETE_QUEUE;

  public static final byte CREATE_SHARED_QUEUE;

  public static final byte SESS_XA_FAILED;

  public static final byte SESS_CREATECONSUMER;

  public static final byte SESS_ACKNOWLEDGE;

  public static final byte SESS_EXPIRED;

  public static final byte SESS_COMMIT;

  public static final byte SESS_ROLLBACK;

  public static final byte SESS_QUEUEQUERY;

  public static final byte SESS_QUEUEQUERY_RESP;

  public static final byte SESS_BINDINGQUERY;

  public static final byte SESS_BINDINGQUERY_RESP;

  public static final byte SESS_XA_START;

  public static final byte SESS_XA_END;

  public static final byte SESS_XA_COMMIT;

  public static final byte SESS_XA_PREPARE;

  public static final byte SESS_XA_RESP;

  public static final byte SESS_XA_ROLLBACK;

  public static final byte SESS_XA_JOIN;

  public static final byte SESS_XA_SUSPEND;

  public static final byte SESS_XA_RESUME;

  public static final byte SESS_XA_FORGET;

  public static final byte SESS_XA_INDOUBT_XIDS;

  public static final byte SESS_XA_INDOUBT_XIDS_RESP;

  public static final byte SESS_XA_SET_TIMEOUT;

  public static final byte SESS_XA_SET_TIMEOUT_RESP;

  public static final byte SESS_XA_GET_TIMEOUT;

  public static final byte SESS_XA_GET_TIMEOUT_RESP;

  public static final byte SESS_START;

  public static final byte SESS_STOP;

  public static final byte SESS_CLOSE;

  public static final byte SESS_FLOWTOKEN;

  public static final byte SESS_SEND;

  public static final byte SESS_SEND_LARGE;

  public static final byte SESS_SEND_CONTINUATION;

  public static final byte SESS_CONSUMER_CLOSE;

  public static final byte SESS_RECEIVE_MSG;

  public static final byte SESS_RECEIVE_LARGE_MSG;

  public static final byte SESS_RECEIVE_CONTINUATION;

  public static final byte SESS_FORCE_CONSUMER_DELIVERY;

  public static final byte SESS_PRODUCER_REQUEST_CREDITS;

  public static final byte SESS_PRODUCER_CREDITS;

  public static final byte SESS_INDIVIDUAL_ACKNOWLEDGE;

  public static final byte SESS_PRODUCER_FAIL_CREDITS;

  public static final byte REPLICATION_RESPONSE;

  public static final byte REPLICATION_APPEND;

  public static final byte REPLICATION_APPEND_TX;

  public static final byte REPLICATION_DELETE;

  public static final byte REPLICATION_DELETE_TX;

  public static final byte REPLICATION_PREPARE;

  public static final byte REPLICATION_COMMIT_ROLLBACK;

  public static final byte REPLICATION_PAGE_WRITE;

  public static final byte REPLICATION_PAGE_EVENT;

  public static final byte REPLICATION_LARGE_MESSAGE_BEGIN;

  public static final byte REPLICATION_LARGE_MESSAGE_END;

  public static final byte REPLICATION_LARGE_MESSAGE_WRITE;

  public static final byte REPLICATION_SYNC_FILE;

  public static final byte SESS_ADD_METADATA;

  public static final byte SESS_ADD_METADATA2;

  public static final byte SESS_UNIQUE_ADD_METADATA;

  public static final byte CLUSTER_TOPOLOGY;

  public static final byte NODE_ANNOUNCE;

  public static final byte SUBSCRIBE_TOPOLOGY;

  public static final byte SUBSCRIBE_TOPOLOGY_V2;

  public static final byte CLUSTER_TOPOLOGY_V2;

  public static final byte BACKUP_REGISTRATION;

  public static final byte BACKUP_REGISTRATION_FAILED;

  public static final byte REPLICATION_START_FINISH_SYNC;

  public static final byte REPLICATION_SCHEDULED_FAILOVER;

  public org.hornetq.core.protocol.core.impl.PacketImpl(byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field type:B
      14: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:B
       4: ireturn

  public long getChannelID();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channelID:J
       4: lreturn

  public void setChannelID(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field channelID:J
       5: return

  public org.hornetq.api.core.HornetQBuffer encode(org.hornetq.spi.core.protocol.RemotingConnection);
    Code:
       0: aload_1
       1: sipush        1500
       4: invokeinterface #6,  2            // InterfaceMethod org/hornetq/spi/core/protocol/RemotingConnection.createTransportBuffer:(I)Lorg/hornetq/api/core/HornetQBuffer;
       9: astore_2
      10: aload_2
      11: iconst_0
      12: invokeinterface #7,  2            // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writeInt:(I)V
      17: aload_2
      18: aload_0
      19: getfield      #3                  // Field type:B
      22: invokeinterface #8,  2            // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writeByte:(B)V
      27: aload_2
      28: aload_0
      29: getfield      #4                  // Field channelID:J
      32: invokeinterface #9,  3            // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writeLong:(J)V
      37: aload_0
      38: aload_2
      39: invokevirtual #10                 // Method encodeRest:(Lorg/hornetq/api/core/HornetQBuffer;)V
      42: aload_0
      43: aload_2
      44: invokeinterface #11,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.writerIndex:()I
      49: putfield      #2                  // Field size:I
      52: aload_0
      53: getfield      #2                  // Field size:I
      56: iconst_4
      57: isub
      58: istore_3
      59: aload_2
      60: iconst_0
      61: iload_3
      62: invokeinterface #13,  3           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.setInt:(II)V
      67: aload_2
      68: areturn

  public void decode(org.hornetq.api.core.HornetQBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.readLong:()J
       7: putfield      #4                  // Field channelID:J
      10: aload_0
      11: aload_1
      12: invokevirtual #15                 // Method decodeRest:(Lorg/hornetq/api/core/HornetQBuffer;)V
      15: aload_0
      16: aload_1
      17: invokeinterface #16,  1           // InterfaceMethod org/hornetq/api/core/HornetQBuffer.readerIndex:()I
      22: putfield      #2                  // Field size:I
      25: return

  public int getPacketSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: iconst_m1
       5: if_icmpne     18
       8: new           #17                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #18                 // String Packet hasn\'t been encoded/decoded yet
      14: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #2                  // Field size:I
      22: ireturn

  public boolean isResponse();
    Code:
       0: iconst_0
       1: ireturn

  public void encodeRest(org.hornetq.api.core.HornetQBuffer);
    Code:
       0: return

  public void decodeRest(org.hornetq.api.core.HornetQBuffer);
    Code:
       0: return

  public boolean isRequiresConfirmations();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #22                 // Method getParentString:()Ljava/lang/String;
      11: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #24                 // String ]
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #4                  // Field channelID:J
      13: aload_0
      14: getfield      #4                  // Field channelID:J
      17: bipush        32
      19: lushr
      20: lxor
      21: l2i
      22: iadd
      23: istore_2
      24: bipush        31
      26: iload_2
      27: imul
      28: aload_0
      29: getfield      #2                  // Field size:I
      32: iadd
      33: istore_2
      34: bipush        31
      36: iload_2
      37: imul
      38: aload_0
      39: getfield      #3                  // Field type:B
      42: iadd
      43: istore_2
      44: iload_2
      45: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class org/hornetq/core/protocol/core/impl/PacketImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #5                  // class org/hornetq/core/protocol/core/impl/PacketImpl
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field channelID:J
      25: aload_2
      26: getfield      #4                  // Field channelID:J
      29: lcmp
      30: ifne          59
      33: aload_0
      34: getfield      #2                  // Field size:I
      37: aload_2
      38: getfield      #2                  // Field size:I
      41: if_icmpne     59
      44: aload_0
      45: getfield      #3                  // Field type:B
      48: aload_2
      49: getfield      #3                  // Field type:B
      52: if_icmpeq     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  protected java.lang.String getParentString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String PACKET(
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #28                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #29                 // String )[type=
      24: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #3                  // Field type:B
      31: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #31                 // String , channelID=
      36: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #4                  // Field channelID:J
      43: invokevirtual #32                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      46: ldc           #33                 // String , packetObject=
      48: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: invokevirtual #28                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      58: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn

  private int stringEncodeSize(java.lang.String);
    Code:
       0: iconst_4
       1: aload_1
       2: invokevirtual #34                 // Method java/lang/String.length:()I
       5: iconst_2
       6: imul
       7: iadd
       8: ireturn

  protected int nullableStringEncodeSize(java.lang.String);
    Code:
       0: iconst_1
       1: aload_1
       2: ifnull        13
       5: aload_0
       6: aload_1
       7: invokespecial #35                 // Method stringEncodeSize:(Ljava/lang/String;)I
      10: goto          14
      13: iconst_0
      14: iadd
      15: ireturn
}
