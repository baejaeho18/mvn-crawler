Compiled from "ClientConsumerInternal.java"
public interface org.hornetq.core.client.impl.ClientConsumerInternal extends org.hornetq.api.core.client.ClientConsumer {
  public abstract long getID();

  public abstract org.hornetq.api.core.SimpleString getQueueName();

  public abstract org.hornetq.api.core.SimpleString getFilterString();

  public abstract boolean isBrowseOnly();

  public abstract void handleMessage(org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage) throws java.lang.Exception;

  public abstract void handleLargeMessage(org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage) throws java.lang.Exception;

  public abstract void handleLargeMessageContinuation(org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage) throws java.lang.Exception;

  public abstract void flowControl(int, boolean) throws org.hornetq.api.core.HornetQException;

  public abstract void clear(boolean) throws org.hornetq.api.core.HornetQException;

  public abstract java.lang.Thread prepareForClose(org.hornetq.utils.FutureLatch) throws org.hornetq.api.core.HornetQException;

  public abstract void clearAtFailover();

  public abstract int getClientWindowSize();

  public abstract int getBufferSize();

  public abstract void cleanUp() throws org.hornetq.api.core.HornetQException;

  public abstract void acknowledge(org.hornetq.api.core.client.ClientMessage) throws org.hornetq.api.core.HornetQException;

  public abstract void individualAcknowledge(org.hornetq.api.core.client.ClientMessage) throws org.hornetq.api.core.HornetQException;

  public abstract void flushAcks() throws org.hornetq.api.core.HornetQException;

  public abstract void stop(boolean) throws org.hornetq.api.core.HornetQException;

  public abstract void start();

  public abstract org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage getQueueInfo();
}
