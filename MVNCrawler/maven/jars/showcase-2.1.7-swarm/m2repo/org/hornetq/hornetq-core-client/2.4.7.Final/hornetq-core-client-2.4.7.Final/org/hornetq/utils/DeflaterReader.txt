Compiled from "DeflaterReader.java"
public class org.hornetq.utils.DeflaterReader extends java.io.InputStream {
  private final java.util.zip.Deflater deflater;

  private boolean isFinished;

  private boolean compressDone;

  private java.io.InputStream input;

  private final java.util.concurrent.atomic.AtomicLong bytesRead;

  public org.hornetq.utils.DeflaterReader(java.io.InputStream, java.util.concurrent.atomic.AtomicLong);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/zip/Deflater
       8: dup
       9: invokespecial #3                  // Method java/util/zip/Deflater."<init>":()V
      12: putfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field isFinished:Z
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field compressDone:Z
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field input:Ljava/io/InputStream;
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field bytesRead:Ljava/util/concurrent/atomic/AtomicLong;
      35: return

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: iconst_0
       7: iconst_1
       8: invokevirtual #9                  // Method read:([BII)I
      11: istore_2
      12: iload_2
      13: iconst_1
      14: if_icmpne     25
      17: aload_1
      18: iconst_0
      19: baload
      20: sipush        255
      23: iand
      24: ireturn
      25: iload_2
      26: iconst_m1
      27: if_icmpeq     34
      30: iload_2
      31: ifne          36
      34: iconst_m1
      35: ireturn
      36: new           #10                 // class java/io/IOException
      39: dup
      40: new           #11                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #13                 // String Error reading data, invalid n:
      49: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      62: athrow

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field compressDone:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: iconst_2
      10: iload_3
      11: imul
      12: newarray       byte
      14: astore        4
      16: iconst_0
      17: istore        5
      19: iconst_0
      20: istore        6
      22: iload_3
      23: ifle          175
      26: aload_0
      27: getfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
      30: aload_1
      31: iload_2
      32: iload_3
      33: invokevirtual #18                 // Method java/util/zip/Deflater.deflate:([BII)I
      36: istore        5
      38: iload         5
      40: ifne          155
      43: aload_0
      44: getfield      #5                  // Field isFinished:Z
      47: ifeq          65
      50: aload_0
      51: getfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
      54: invokevirtual #19                 // Method java/util/zip/Deflater.end:()V
      57: aload_0
      58: iconst_1
      59: putfield      #6                  // Field compressDone:Z
      62: goto          175
      65: aload_0
      66: getfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
      69: invokevirtual #20                 // Method java/util/zip/Deflater.needsInput:()Z
      72: ifeq          140
      75: aload_0
      76: getfield      #7                  // Field input:Ljava/io/InputStream;
      79: aload         4
      81: invokevirtual #21                 // Method java/io/InputStream.read:([B)I
      84: istore        7
      86: iload         7
      88: iconst_m1
      89: if_icmpne     107
      92: aload_0
      93: getfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
      96: invokevirtual #22                 // Method java/util/zip/Deflater.finish:()V
      99: aload_0
     100: iconst_1
     101: putfield      #5                  // Field isFinished:Z
     104: goto          137
     107: aload_0
     108: getfield      #8                  // Field bytesRead:Ljava/util/concurrent/atomic/AtomicLong;
     111: ifnull        125
     114: aload_0
     115: getfield      #8                  // Field bytesRead:Ljava/util/concurrent/atomic/AtomicLong;
     118: iload         7
     120: i2l
     121: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     124: pop2
     125: aload_0
     126: getfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
     129: aload         4
     131: iconst_0
     132: iload         7
     134: invokevirtual #24                 // Method java/util/zip/Deflater.setInput:([BII)V
     137: goto          22
     140: aload_0
     141: getfield      #4                  // Field deflater:Ljava/util/zip/Deflater;
     144: invokevirtual #22                 // Method java/util/zip/Deflater.finish:()V
     147: aload_0
     148: iconst_1
     149: putfield      #5                  // Field isFinished:Z
     152: goto          22
     155: iload         6
     157: iload         5
     159: iadd
     160: istore        6
     162: iload_2
     163: iload         5
     165: iadd
     166: istore_2
     167: iload_3
     168: iload         5
     170: isub
     171: istore_3
     172: goto          22
     175: iload         6
     177: ireturn

  public void closeStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/io/InputStream.close:()V
       4: aload_0
       5: getfield      #7                  // Field input:Ljava/io/InputStream;
       8: invokevirtual #25                 // Method java/io/InputStream.close:()V
      11: return

  public long getTotalSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytesRead:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn
}
