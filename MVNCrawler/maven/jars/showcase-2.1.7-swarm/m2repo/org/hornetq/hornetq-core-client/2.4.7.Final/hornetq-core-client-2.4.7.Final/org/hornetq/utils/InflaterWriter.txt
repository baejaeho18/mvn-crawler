Compiled from "InflaterWriter.java"
public class org.hornetq.utils.InflaterWriter extends java.io.OutputStream {
  private final java.util.zip.Inflater inflater;

  private final java.io.OutputStream output;

  private final byte[] writeBuffer;

  private int writePointer;

  private final byte[] outputBuffer;

  public org.hornetq.utils.InflaterWriter(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/zip/Inflater
       8: dup
       9: invokespecial #3                  // Method java/util/zip/Inflater."<init>":()V
      12: putfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      15: aload_0
      16: sipush        1024
      19: newarray       byte
      21: putfield      #5                  // Field writeBuffer:[B
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field writePointer:I
      29: aload_0
      30: aload_0
      31: getfield      #5                  // Field writeBuffer:[B
      34: arraylength
      35: iconst_2
      36: imul
      37: newarray       byte
      39: putfield      #7                  // Field outputBuffer:[B
      42: aload_0
      43: aload_1
      44: putfield      #8                  // Field output:Ljava/io/OutputStream;
      47: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeBuffer:[B
       4: aload_0
       5: getfield      #6                  // Field writePointer:I
       8: iload_1
       9: sipush        255
      12: iand
      13: i2b
      14: bastore
      15: aload_0
      16: dup
      17: getfield      #6                  // Field writePointer:I
      20: iconst_1
      21: iadd
      22: putfield      #6                  // Field writePointer:I
      25: aload_0
      26: getfield      #6                  // Field writePointer:I
      29: aload_0
      30: getfield      #5                  // Field writeBuffer:[B
      33: arraylength
      34: if_icmpne     68
      37: aload_0
      38: iconst_0
      39: putfield      #6                  // Field writePointer:I
      42: aload_0
      43: invokespecial #9                  // Method doWrite:()V
      46: goto          68
      49: astore_2
      50: new           #11                 // class java/io/IOException
      53: dup
      54: ldc           #12                 // String Error decompressing data
      56: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: astore_3
      60: aload_3
      61: aload_2
      62: invokevirtual #14                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      65: pop
      66: aload_3
      67: athrow
      68: return
    Exception table:
       from    to  target type
          42    46    49   Class java/util/zip/DataFormatException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field writePointer:I
       4: ifle          98
       7: aload_0
       8: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      11: aload_0
      12: getfield      #5                  // Field writeBuffer:[B
      15: iconst_0
      16: aload_0
      17: getfield      #6                  // Field writePointer:I
      20: invokevirtual #15                 // Method java/util/zip/Inflater.setInput:([BII)V
      23: aload_0
      24: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      27: aload_0
      28: getfield      #7                  // Field outputBuffer:[B
      31: invokevirtual #16                 // Method java/util/zip/Inflater.inflate:([B)I
      34: istore_1
      35: iload_1
      36: ifle          67
      39: aload_0
      40: getfield      #8                  // Field output:Ljava/io/OutputStream;
      43: aload_0
      44: getfield      #7                  // Field outputBuffer:[B
      47: iconst_0
      48: iload_1
      49: invokevirtual #17                 // Method java/io/OutputStream.write:([BII)V
      52: aload_0
      53: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      56: aload_0
      57: getfield      #7                  // Field outputBuffer:[B
      60: invokevirtual #16                 // Method java/util/zip/Inflater.inflate:([B)I
      63: istore_1
      64: goto          35
      67: aload_0
      68: getfield      #8                  // Field output:Ljava/io/OutputStream;
      71: invokevirtual #18                 // Method java/io/OutputStream.close:()V
      74: goto          98
      77: astore_1
      78: new           #11                 // class java/io/IOException
      81: dup
      82: aload_1
      83: invokevirtual #19                 // Method java/util/zip/DataFormatException.getMessage:()Ljava/lang/String;
      86: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: astore_2
      90: aload_2
      91: aload_1
      92: invokevirtual #14                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      95: pop
      96: aload_2
      97: athrow
      98: return
    Exception table:
       from    to  target type
          23    74    77   Class java/util/zip/DataFormatException

  private void doWrite() throws java.util.zip.DataFormatException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
       4: aload_0
       5: getfield      #5                  // Field writeBuffer:[B
       8: invokevirtual #20                 // Method java/util/zip/Inflater.setInput:([B)V
      11: aload_0
      12: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      15: aload_0
      16: getfield      #7                  // Field outputBuffer:[B
      19: invokevirtual #16                 // Method java/util/zip/Inflater.inflate:([B)I
      22: istore_1
      23: iload_1
      24: ifle          55
      27: aload_0
      28: getfield      #8                  // Field output:Ljava/io/OutputStream;
      31: aload_0
      32: getfield      #7                  // Field outputBuffer:[B
      35: iconst_0
      36: iload_1
      37: invokevirtual #17                 // Method java/io/OutputStream.write:([BII)V
      40: aload_0
      41: getfield      #4                  // Field inflater:Ljava/util/zip/Inflater;
      44: aload_0
      45: getfield      #7                  // Field outputBuffer:[B
      48: invokevirtual #16                 // Method java/util/zip/Inflater.inflate:([B)I
      51: istore_1
      52: goto          23
      55: return
}
