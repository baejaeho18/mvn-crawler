Compiled from "TimeAndCounterIDGenerator.java"
public class org.hornetq.utils.TimeAndCounterIDGenerator implements org.hornetq.utils.IDGenerator {
  private static final int BITS_TO_MOVE;

  public static final long MASK_TIME;

  public static final long ID_MASK;

  private static final long TIME_ID_MASK;

  private final java.util.concurrent.atomic.AtomicLong counter;

  private volatile boolean wrapped;

  private volatile long tmMark;

  public org.hornetq.utils.TimeAndCounterIDGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field wrapped:Z
      21: aload_0
      22: invokevirtual #6                  // Method refresh:()V
      25: return

  public long generateID();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lstore_1
       8: lload_1
       9: ldc2_w        #9                  // long 16777215l
      12: land
      13: lconst_0
      14: lcmp
      15: ifne          46
      18: lload_1
      19: ldc2_w        #11                 // long 9223372036837998592l
      22: land
      23: lstore_3
      24: lload_3
      25: aload_0
      26: invokespecial #13                 // Method newTM:()J
      29: lcmp
      30: iflt          41
      33: aload_0
      34: iconst_1
      35: putfield      #5                  // Field wrapped:Z
      38: goto          46
      41: aload_0
      42: lload_3
      43: putfield      #14                 // Field tmMark:J
      46: aload_0
      47: getfield      #5                  // Field wrapped:Z
      50: ifeq          63
      53: new           #15                 // class java/lang/IllegalStateException
      56: dup
      57: ldc           #16                 // String The IDGenerator is being overlaped, and it needs revision as the system generated more than 16777215 ids per 16 milliseconds which exceeded the IDgenerator limit
      59: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: lload_1
      64: lreturn

  public long getCurrentID();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getInternalTimeMark();
    Code:
       0: aload_0
       1: getfield      #14                 // Field tmMark:J
       4: lreturn

  public void setInternalID(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: aload_0
       5: getfield      #14                 // Field tmMark:J
       8: lload_1
       9: lor
      10: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      13: return

  public void setInternalDate(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #20                 // long 8796093022192l
       5: land
       6: bipush        20
       8: lshl
       9: putfield      #14                 // Field tmMark:J
      12: aload_0
      13: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: getfield      #14                 // Field tmMark:J
      20: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      23: return

  public synchronized void refresh();
    Code:
       0: aload_0
       1: getfield      #14                 // Field tmMark:J
       4: lstore_1
       5: aload_0
       6: invokespecial #13                 // Method newTM:()J
       9: lstore_3
      10: lload_3
      11: lload_1
      12: lcmp
      13: ifgt          24
      16: aload_0
      17: invokespecial #13                 // Method newTM:()J
      20: lstore_3
      21: goto          10
      24: aload_0
      25: lload_3
      26: putfield      #14                 // Field tmMark:J
      29: aload_0
      30: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      33: aload_0
      34: getfield      #14                 // Field tmMark:J
      37: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      40: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_1
       8: new           #22                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #24                 // String SequenceGenerator(tmMark=
      17: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: aload_0
      22: getfield      #14                 // Field tmMark:J
      25: invokespecial #26                 // Method hex:(J)Ljava/lang/String;
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #27                 // String , CurrentCounter =
      33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_1
      37: invokevirtual #28                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: ldc           #29                 // String , HexCurrentCounter =
      42: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: lload_1
      47: invokespecial #26                 // Method hex:(J)Ljava/lang/String;
      50: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #30                 // String )
      55: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  private long newTM();
    Code:
       0: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
       3: ldc2_w        #20                 // long 8796093022192l
       6: land
       7: bipush        20
       9: lshl
      10: lreturn

  private java.lang.String hex(long);
    Code:
       0: ldc           #33                 // String %1$X
       2: iconst_1
       3: anewarray     #34                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: lload_1
       9: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: aastore
      13: invokestatic  #36                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: areturn
}
