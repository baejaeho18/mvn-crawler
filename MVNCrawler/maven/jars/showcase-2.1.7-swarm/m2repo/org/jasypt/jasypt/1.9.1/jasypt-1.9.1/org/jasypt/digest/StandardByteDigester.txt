Compiled from "StandardByteDigester.java"
public final class org.jasypt.digest.StandardByteDigester implements org.jasypt.digest.ByteDigester {
  public static final java.lang.String DEFAULT_ALGORITHM;

  public static final int DEFAULT_SALT_SIZE_BYTES;

  public static final int DEFAULT_ITERATIONS;

  private java.lang.String algorithm;

  private int saltSizeBytes;

  private int iterations;

  private org.jasypt.salt.SaltGenerator saltGenerator;

  private java.lang.String providerName;

  private java.security.Provider provider;

  private boolean invertPositionOfSaltInMessageBeforeDigesting;

  private boolean invertPositionOfPlainSaltInEncryptionResults;

  private boolean useLenientSaltSizeCheck;

  private org.jasypt.digest.config.DigesterConfig config;

  private boolean algorithmSet;

  private boolean saltSizeBytesSet;

  private boolean iterationsSet;

  private boolean saltGeneratorSet;

  private boolean providerNameSet;

  private boolean providerSet;

  private boolean invertPositionOfSaltInMessageBeforeDigestingSet;

  private boolean invertPositionOfPlainSaltInEncryptionResultsSet;

  private boolean useLenientSaltSizeCheckSet;

  private boolean initialized;

  private boolean useSalt;

  private java.security.MessageDigest md;

  private int digestLengthBytes;

  public org.jasypt.digest.StandardByteDigester();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String MD5
       7: putfield      #3                  // Field algorithm:Ljava/lang/String;
      10: aload_0
      11: bipush        8
      13: putfield      #4                  // Field saltSizeBytes:I
      16: aload_0
      17: sipush        1000
      20: putfield      #5                  // Field iterations:I
      23: aload_0
      24: aconst_null
      25: putfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
      28: aload_0
      29: aconst_null
      30: putfield      #7                  // Field providerName:Ljava/lang/String;
      33: aload_0
      34: aconst_null
      35: putfield      #8                  // Field provider:Ljava/security/Provider;
      38: aload_0
      39: iconst_0
      40: putfield      #9                  // Field invertPositionOfSaltInMessageBeforeDigesting:Z
      43: aload_0
      44: iconst_0
      45: putfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
      48: aload_0
      49: iconst_0
      50: putfield      #11                 // Field useLenientSaltSizeCheck:Z
      53: aload_0
      54: aconst_null
      55: putfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
      58: aload_0
      59: iconst_0
      60: putfield      #13                 // Field algorithmSet:Z
      63: aload_0
      64: iconst_0
      65: putfield      #14                 // Field saltSizeBytesSet:Z
      68: aload_0
      69: iconst_0
      70: putfield      #15                 // Field iterationsSet:Z
      73: aload_0
      74: iconst_0
      75: putfield      #16                 // Field saltGeneratorSet:Z
      78: aload_0
      79: iconst_0
      80: putfield      #17                 // Field providerNameSet:Z
      83: aload_0
      84: iconst_0
      85: putfield      #18                 // Field providerSet:Z
      88: aload_0
      89: iconst_0
      90: putfield      #19                 // Field invertPositionOfSaltInMessageBeforeDigestingSet:Z
      93: aload_0
      94: iconst_0
      95: putfield      #20                 // Field invertPositionOfPlainSaltInEncryptionResultsSet:Z
      98: aload_0
      99: iconst_0
     100: putfield      #21                 // Field useLenientSaltSizeCheckSet:Z
     103: aload_0
     104: iconst_0
     105: putfield      #22                 // Field initialized:Z
     108: aload_0
     109: iconst_1
     110: putfield      #23                 // Field useSalt:Z
     113: aload_0
     114: aconst_null
     115: putfield      #24                 // Field md:Ljava/security/MessageDigest;
     118: aload_0
     119: iconst_0
     120: putfield      #25                 // Field digestLengthBytes:I
     123: return

  public synchronized void setConfig(org.jasypt.digest.config.DigesterConfig);
    Code:
       0: aload_1
       1: ldc           #26                 // String Config cannot be set null
       3: invokestatic  #27                 // Method org/jasypt/commons/CommonUtils.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #28                 // Method isInitialized:()Z
      10: ifeq          21
      13: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      16: dup
      17: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
      26: return

  public synchronized void setAlgorithm(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #31                 // String Algorithm cannot be empty
       3: invokestatic  #32                 // Method org/jasypt/commons/CommonUtils.validateNotEmpty:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #28                 // Method isInitialized:()Z
      10: ifeq          21
      13: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      16: dup
      17: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #3                  // Field algorithm:Ljava/lang/String;
      26: aload_0
      27: iconst_1
      28: putfield      #13                 // Field algorithmSet:Z
      31: return

  public synchronized void setSaltSizeBytes(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #33                 // String Salt size in bytes must be non-negative
      11: invokestatic  #34                 // Method org/jasypt/commons/CommonUtils.validateIsTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: invokevirtual #28                 // Method isInitialized:()Z
      18: ifeq          29
      21: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      24: dup
      25: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #4                  // Field saltSizeBytes:I
      34: aload_0
      35: iload_1
      36: ifle          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: putfield      #23                 // Field useSalt:Z
      47: aload_0
      48: iconst_1
      49: putfield      #14                 // Field saltSizeBytesSet:Z
      52: return

  public synchronized void setIterations(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #35                 // String Number of iterations must be greater than zero
      11: invokestatic  #34                 // Method org/jasypt/commons/CommonUtils.validateIsTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: invokevirtual #28                 // Method isInitialized:()Z
      18: ifeq          29
      21: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      24: dup
      25: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #5                  // Field iterations:I
      34: aload_0
      35: iconst_1
      36: putfield      #15                 // Field iterationsSet:Z
      39: return

  public synchronized void setSaltGenerator(org.jasypt.salt.SaltGenerator);
    Code:
       0: aload_1
       1: ldc           #36                 // String Salt generator cannot be set null
       3: invokestatic  #27                 // Method org/jasypt/commons/CommonUtils.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #28                 // Method isInitialized:()Z
      10: ifeq          21
      13: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      16: dup
      17: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
      26: aload_0
      27: iconst_1
      28: putfield      #16                 // Field saltGeneratorSet:Z
      31: return

  public synchronized void setProviderName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #37                 // String Provider name cannot be set null
       3: invokestatic  #27                 // Method org/jasypt/commons/CommonUtils.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #28                 // Method isInitialized:()Z
      10: ifeq          21
      13: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      16: dup
      17: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field providerName:Ljava/lang/String;
      26: aload_0
      27: iconst_1
      28: putfield      #17                 // Field providerNameSet:Z
      31: return

  public synchronized void setProvider(java.security.Provider);
    Code:
       0: aload_1
       1: ldc           #38                 // String Provider cannot be set null
       3: invokestatic  #27                 // Method org/jasypt/commons/CommonUtils.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #28                 // Method isInitialized:()Z
      10: ifeq          21
      13: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      16: dup
      17: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field provider:Ljava/security/Provider;
      26: aload_0
      27: iconst_1
      28: putfield      #18                 // Field providerSet:Z
      31: return

  public synchronized void setInvertPositionOfSaltInMessageBeforeDigesting(boolean);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isInitialized:()Z
       4: ifeq          15
       7: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      10: dup
      11: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      14: athrow
      15: aload_0
      16: iload_1
      17: putfield      #9                  // Field invertPositionOfSaltInMessageBeforeDigesting:Z
      20: aload_0
      21: iconst_1
      22: putfield      #19                 // Field invertPositionOfSaltInMessageBeforeDigestingSet:Z
      25: return

  public synchronized void setInvertPositionOfPlainSaltInEncryptionResults(boolean);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isInitialized:()Z
       4: ifeq          15
       7: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      10: dup
      11: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      14: athrow
      15: aload_0
      16: iload_1
      17: putfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
      20: aload_0
      21: iconst_1
      22: putfield      #20                 // Field invertPositionOfPlainSaltInEncryptionResultsSet:Z
      25: return

  public synchronized void setUseLenientSaltSizeCheck(boolean);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isInitialized:()Z
       4: ifeq          15
       7: new           #29                 // class org/jasypt/exceptions/AlreadyInitializedException
      10: dup
      11: invokespecial #30                 // Method org/jasypt/exceptions/AlreadyInitializedException."<init>":()V
      14: athrow
      15: aload_0
      16: iload_1
      17: putfield      #11                 // Field useLenientSaltSizeCheck:Z
      20: aload_0
      21: iconst_1
      22: putfield      #21                 // Field useLenientSaltSizeCheckSet:Z
      25: return

  org.jasypt.digest.StandardByteDigester cloneDigester();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isInitialized:()Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #39                 // Method initialize:()V
      11: new           #40                 // class org/jasypt/digest/StandardByteDigester
      14: dup
      15: invokespecial #41                 // Method "<init>":()V
      18: astore_1
      19: aload_0
      20: getfield      #3                  // Field algorithm:Ljava/lang/String;
      23: invokestatic  #42                 // Method org/jasypt/commons/CommonUtils.isNotEmpty:(Ljava/lang/String;)Z
      26: ifeq          37
      29: aload_1
      30: aload_0
      31: getfield      #3                  // Field algorithm:Ljava/lang/String;
      34: invokevirtual #43                 // Method setAlgorithm:(Ljava/lang/String;)V
      37: aload_1
      38: aload_0
      39: getfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
      42: invokevirtual #44                 // Method setInvertPositionOfPlainSaltInEncryptionResults:(Z)V
      45: aload_1
      46: aload_0
      47: getfield      #9                  // Field invertPositionOfSaltInMessageBeforeDigesting:Z
      50: invokevirtual #45                 // Method setInvertPositionOfSaltInMessageBeforeDigesting:(Z)V
      53: aload_1
      54: aload_0
      55: getfield      #5                  // Field iterations:I
      58: invokevirtual #46                 // Method setIterations:(I)V
      61: aload_0
      62: getfield      #8                  // Field provider:Ljava/security/Provider;
      65: ifnull        76
      68: aload_1
      69: aload_0
      70: getfield      #8                  // Field provider:Ljava/security/Provider;
      73: invokevirtual #47                 // Method setProvider:(Ljava/security/Provider;)V
      76: aload_0
      77: getfield      #7                  // Field providerName:Ljava/lang/String;
      80: ifnull        91
      83: aload_1
      84: aload_0
      85: getfield      #7                  // Field providerName:Ljava/lang/String;
      88: invokevirtual #48                 // Method setProviderName:(Ljava/lang/String;)V
      91: aload_0
      92: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
      95: ifnull        106
      98: aload_1
      99: aload_0
     100: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     103: invokevirtual #49                 // Method setSaltGenerator:(Lorg/jasypt/salt/SaltGenerator;)V
     106: aload_1
     107: aload_0
     108: getfield      #4                  // Field saltSizeBytes:I
     111: invokevirtual #50                 // Method setSaltSizeBytes:(I)V
     114: aload_1
     115: aload_0
     116: getfield      #11                 // Field useLenientSaltSizeCheck:Z
     119: invokevirtual #51                 // Method setUseLenientSaltSizeCheck:(Z)V
     122: aload_1
     123: areturn

  public boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #22                 // Field initialized:Z
       4: ireturn

  public synchronized void initialize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field initialized:Z
       4: ifne          653
       7: aload_0
       8: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
      11: ifnull        408
      14: aload_0
      15: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
      18: invokeinterface #52,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getAlgorithm:()Ljava/lang/String;
      23: astore_1
      24: aload_1
      25: ifnull        34
      28: aload_1
      29: ldc           #31                 // String Algorithm cannot be empty
      31: invokestatic  #32                 // Method org/jasypt/commons/CommonUtils.validateNotEmpty:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_0
      35: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
      38: invokeinterface #53,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getSaltSizeBytes:()Ljava/lang/Integer;
      43: astore_2
      44: aload_2
      45: ifnull        65
      48: aload_2
      49: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
      52: iflt          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ldc           #33                 // String Salt size in bytes must be non-negative
      62: invokestatic  #34                 // Method org/jasypt/commons/CommonUtils.validateIsTrue:(ZLjava/lang/String;)V
      65: aload_0
      66: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
      69: invokeinterface #55,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getIterations:()Ljava/lang/Integer;
      74: astore_3
      75: aload_3
      76: ifnull        96
      79: aload_3
      80: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
      83: ifle          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ldc           #35                 // String Number of iterations must be greater than zero
      93: invokestatic  #34                 // Method org/jasypt/commons/CommonUtils.validateIsTrue:(ZLjava/lang/String;)V
      96: aload_0
      97: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
     100: invokeinterface #56,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getSaltGenerator:()Lorg/jasypt/salt/SaltGenerator;
     105: astore        4
     107: aload_0
     108: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
     111: invokeinterface #57,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getProviderName:()Ljava/lang/String;
     116: astore        5
     118: aload         5
     120: ifnull        130
     123: aload         5
     125: ldc           #58                 // String Provider name cannot be empty
     127: invokestatic  #32                 // Method org/jasypt/commons/CommonUtils.validateNotEmpty:(Ljava/lang/String;Ljava/lang/String;)V
     130: aload_0
     131: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
     134: invokeinterface #59,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getProvider:()Ljava/security/Provider;
     139: astore        6
     141: aload_0
     142: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
     145: invokeinterface #60,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getInvertPositionOfSaltInMessageBeforeDigesting:()Ljava/lang/Boolean;
     150: astore        7
     152: aload_0
     153: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
     156: invokeinterface #61,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getInvertPositionOfPlainSaltInEncryptionResults:()Ljava/lang/Boolean;
     161: astore        8
     163: aload_0
     164: getfield      #12                 // Field config:Lorg/jasypt/digest/config/DigesterConfig;
     167: invokeinterface #62,  1           // InterfaceMethod org/jasypt/digest/config/DigesterConfig.getUseLenientSaltSizeCheck:()Ljava/lang/Boolean;
     172: astore        9
     174: aload_0
     175: aload_0
     176: getfield      #13                 // Field algorithmSet:Z
     179: ifne          186
     182: aload_1
     183: ifnonnull     193
     186: aload_0
     187: getfield      #3                  // Field algorithm:Ljava/lang/String;
     190: goto          194
     193: aload_1
     194: putfield      #3                  // Field algorithm:Ljava/lang/String;
     197: aload_0
     198: aload_0
     199: getfield      #14                 // Field saltSizeBytesSet:Z
     202: ifne          209
     205: aload_2
     206: ifnonnull     216
     209: aload_0
     210: getfield      #4                  // Field saltSizeBytes:I
     213: goto          220
     216: aload_2
     217: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
     220: putfield      #4                  // Field saltSizeBytes:I
     223: aload_0
     224: aload_0
     225: getfield      #15                 // Field iterationsSet:Z
     228: ifne          235
     231: aload_3
     232: ifnonnull     242
     235: aload_0
     236: getfield      #5                  // Field iterations:I
     239: goto          246
     242: aload_3
     243: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
     246: putfield      #5                  // Field iterations:I
     249: aload_0
     250: aload_0
     251: getfield      #16                 // Field saltGeneratorSet:Z
     254: ifne          262
     257: aload         4
     259: ifnonnull     269
     262: aload_0
     263: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     266: goto          271
     269: aload         4
     271: putfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     274: aload_0
     275: aload_0
     276: getfield      #17                 // Field providerNameSet:Z
     279: ifne          287
     282: aload         5
     284: ifnonnull     294
     287: aload_0
     288: getfield      #7                  // Field providerName:Ljava/lang/String;
     291: goto          296
     294: aload         5
     296: putfield      #7                  // Field providerName:Ljava/lang/String;
     299: aload_0
     300: aload_0
     301: getfield      #18                 // Field providerSet:Z
     304: ifne          312
     307: aload         6
     309: ifnonnull     319
     312: aload_0
     313: getfield      #8                  // Field provider:Ljava/security/Provider;
     316: goto          321
     319: aload         6
     321: putfield      #8                  // Field provider:Ljava/security/Provider;
     324: aload_0
     325: aload_0
     326: getfield      #19                 // Field invertPositionOfSaltInMessageBeforeDigestingSet:Z
     329: ifne          337
     332: aload         7
     334: ifnonnull     344
     337: aload_0
     338: getfield      #9                  // Field invertPositionOfSaltInMessageBeforeDigesting:Z
     341: goto          349
     344: aload         7
     346: invokevirtual #63                 // Method java/lang/Boolean.booleanValue:()Z
     349: putfield      #9                  // Field invertPositionOfSaltInMessageBeforeDigesting:Z
     352: aload_0
     353: aload_0
     354: getfield      #20                 // Field invertPositionOfPlainSaltInEncryptionResultsSet:Z
     357: ifne          365
     360: aload         8
     362: ifnonnull     372
     365: aload_0
     366: getfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
     369: goto          377
     372: aload         8
     374: invokevirtual #63                 // Method java/lang/Boolean.booleanValue:()Z
     377: putfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
     380: aload_0
     381: aload_0
     382: getfield      #21                 // Field useLenientSaltSizeCheckSet:Z
     385: ifne          393
     388: aload         9
     390: ifnonnull     400
     393: aload_0
     394: getfield      #11                 // Field useLenientSaltSizeCheck:Z
     397: goto          405
     400: aload         9
     402: invokevirtual #63                 // Method java/lang/Boolean.booleanValue:()Z
     405: putfield      #11                 // Field useLenientSaltSizeCheck:Z
     408: aload_0
     409: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     412: ifnonnull     426
     415: aload_0
     416: new           #64                 // class org/jasypt/salt/RandomSaltGenerator
     419: dup
     420: invokespecial #65                 // Method org/jasypt/salt/RandomSaltGenerator."<init>":()V
     423: putfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     426: aload_0
     427: getfield      #11                 // Field useLenientSaltSizeCheck:Z
     430: ifeq          496
     433: aload_0
     434: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     437: invokeinterface #66,  1           // InterfaceMethod org/jasypt/salt/SaltGenerator.includePlainSaltInEncryptionResults:()Z
     442: ifne          496
     445: new           #67                 // class org/jasypt/exceptions/EncryptionInitializationException
     448: dup
     449: new           #68                 // class java/lang/StringBuffer
     452: dup
     453: invokespecial #69                 // Method java/lang/StringBuffer."<init>":()V
     456: ldc           #70                 // String The configured Salt Generator (
     458: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     461: aload_0
     462: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     465: invokevirtual #72                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     468: invokevirtual #73                 // Method java/lang/Class.getName:()Ljava/lang/String;
     471: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     474: ldc           #74                 // String ) does not include plain salt
     476: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     479: ldc           #75                 // String in encryption results, which is not compatible
     481: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     484: ldc           #76                 // String with setting the salt size checking behaviour to \"lenient\".
     486: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     489: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     492: invokespecial #78                 // Method org/jasypt/exceptions/EncryptionInitializationException."<init>":(Ljava/lang/String;)V
     495: athrow
     496: aload_0
     497: getfield      #8                  // Field provider:Ljava/security/Provider;
     500: ifnull        521
     503: aload_0
     504: aload_0
     505: getfield      #3                  // Field algorithm:Ljava/lang/String;
     508: aload_0
     509: getfield      #8                  // Field provider:Ljava/security/Provider;
     512: invokestatic  #79                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;
     515: putfield      #24                 // Field md:Ljava/security/MessageDigest;
     518: goto          557
     521: aload_0
     522: getfield      #7                  // Field providerName:Ljava/lang/String;
     525: ifnull        546
     528: aload_0
     529: aload_0
     530: getfield      #3                  // Field algorithm:Ljava/lang/String;
     533: aload_0
     534: getfield      #7                  // Field providerName:Ljava/lang/String;
     537: invokestatic  #80                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;
     540: putfield      #24                 // Field md:Ljava/security/MessageDigest;
     543: goto          557
     546: aload_0
     547: aload_0
     548: getfield      #3                  // Field algorithm:Ljava/lang/String;
     551: invokestatic  #81                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
     554: putfield      #24                 // Field md:Ljava/security/MessageDigest;
     557: goto          580
     560: astore_1
     561: new           #67                 // class org/jasypt/exceptions/EncryptionInitializationException
     564: dup
     565: aload_1
     566: invokespecial #83                 // Method org/jasypt/exceptions/EncryptionInitializationException."<init>":(Ljava/lang/Throwable;)V
     569: athrow
     570: astore_1
     571: new           #67                 // class org/jasypt/exceptions/EncryptionInitializationException
     574: dup
     575: aload_1
     576: invokespecial #83                 // Method org/jasypt/exceptions/EncryptionInitializationException."<init>":(Ljava/lang/Throwable;)V
     579: athrow
     580: aload_0
     581: aload_0
     582: getfield      #24                 // Field md:Ljava/security/MessageDigest;
     585: invokevirtual #85                 // Method java/security/MessageDigest.getDigestLength:()I
     588: putfield      #25                 // Field digestLengthBytes:I
     591: aload_0
     592: getfield      #25                 // Field digestLengthBytes:I
     595: ifgt          648
     598: new           #67                 // class org/jasypt/exceptions/EncryptionInitializationException
     601: dup
     602: new           #68                 // class java/lang/StringBuffer
     605: dup
     606: invokespecial #69                 // Method java/lang/StringBuffer."<init>":()V
     609: ldc           #86                 // String The configured algorithm (
     611: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     614: aload_0
     615: getfield      #3                  // Field algorithm:Ljava/lang/String;
     618: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     621: ldc           #87                 // String ) or its provider do
     623: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     626: ldc           #88                 // String not allow knowing the digest length beforehand
     628: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     631: ldc           #89                 // String (getDigestLength() operation), which is not compatible
     633: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     636: ldc           #76                 // String with setting the salt size checking behaviour to \"lenient\".
     638: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     641: invokevirtual #77                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     644: invokespecial #78                 // Method org/jasypt/exceptions/EncryptionInitializationException."<init>":(Ljava/lang/String;)V
     647: athrow
     648: aload_0
     649: iconst_1
     650: putfield      #22                 // Field initialized:Z
     653: return
    Exception table:
       from    to  target type
         496   557   560   Class java/security/NoSuchAlgorithmException
         496   557   570   Class java/security/NoSuchProviderException

  public byte[] digest(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #28                 // Method isInitialized:()Z
      10: ifne          17
      13: aload_0
      14: invokevirtual #39                 // Method initialize:()V
      17: aconst_null
      18: astore_2
      19: aload_0
      20: getfield      #23                 // Field useSalt:Z
      23: ifeq          40
      26: aload_0
      27: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
      30: aload_0
      31: getfield      #4                  // Field saltSizeBytes:I
      34: invokeinterface #90,  2           // InterfaceMethod org/jasypt/salt/SaltGenerator.generateSalt:(I)[B
      39: astore_2
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokespecial #91                 // Method digest:([B[B)[B
      46: areturn

  private byte[] digest(byte[], byte[]);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #24                 // Field md:Ljava/security/MessageDigest;
       6: dup
       7: astore        4
       9: monitorenter
      10: aload_0
      11: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      14: invokevirtual #92                 // Method java/security/MessageDigest.reset:()V
      17: aload_2
      18: ifnull        66
      21: aload_0
      22: getfield      #9                  // Field invertPositionOfSaltInMessageBeforeDigesting:Z
      25: ifne          47
      28: aload_0
      29: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      32: aload_2
      33: invokevirtual #93                 // Method java/security/MessageDigest.update:([B)V
      36: aload_0
      37: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      40: aload_1
      41: invokevirtual #93                 // Method java/security/MessageDigest.update:([B)V
      44: goto          74
      47: aload_0
      48: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      51: aload_1
      52: invokevirtual #93                 // Method java/security/MessageDigest.update:([B)V
      55: aload_0
      56: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      59: aload_2
      60: invokevirtual #93                 // Method java/security/MessageDigest.update:([B)V
      63: goto          74
      66: aload_0
      67: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      70: aload_1
      71: invokevirtual #93                 // Method java/security/MessageDigest.update:([B)V
      74: aload_0
      75: getfield      #24                 // Field md:Ljava/security/MessageDigest;
      78: invokevirtual #94                 // Method java/security/MessageDigest.digest:()[B
      81: astore_3
      82: iconst_0
      83: istore        5
      85: iload         5
      87: aload_0
      88: getfield      #5                  // Field iterations:I
      91: iconst_1
      92: isub
      93: if_icmpge     118
      96: aload_0
      97: getfield      #24                 // Field md:Ljava/security/MessageDigest;
     100: invokevirtual #92                 // Method java/security/MessageDigest.reset:()V
     103: aload_0
     104: getfield      #24                 // Field md:Ljava/security/MessageDigest;
     107: aload_3
     108: invokevirtual #95                 // Method java/security/MessageDigest.digest:([B)[B
     111: astore_3
     112: iinc          5, 1
     115: goto          85
     118: aload         4
     120: monitorexit
     121: goto          132
     124: astore        6
     126: aload         4
     128: monitorexit
     129: aload         6
     131: athrow
     132: aload_0
     133: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     136: invokeinterface #66,  1           // InterfaceMethod org/jasypt/salt/SaltGenerator.includePlainSaltInEncryptionResults:()Z
     141: ifeq          167
     144: aload_2
     145: ifnull        167
     148: aload_0
     149: getfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
     152: ifne          161
     155: aload_2
     156: aload_3
     157: invokestatic  #96                 // Method org/jasypt/commons/CommonUtils.appendArrays:([B[B)[B
     160: areturn
     161: aload_3
     162: aload_2
     163: invokestatic  #96                 // Method org/jasypt/commons/CommonUtils.appendArrays:([B[B)[B
     166: areturn
     167: aload_3
     168: areturn
     169: astore_3
     170: new           #98                 // class org/jasypt/exceptions/EncryptionOperationNotPossibleException
     173: dup
     174: invokespecial #99                 // Method org/jasypt/exceptions/EncryptionOperationNotPossibleException."<init>":()V
     177: athrow
    Exception table:
       from    to  target type
          10   121   124   any
         124   129   124   any
           0   160   169   Class java/lang/Exception
         161   166   169   Class java/lang/Exception
         167   168   169   Class java/lang/Exception

  public boolean matches(byte[], byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_2
       5: ifnonnull     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
      14: aload_2
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokevirtual #28                 // Method isInitialized:()Z
      24: ifne          31
      27: aload_0
      28: invokevirtual #39                 // Method initialize:()V
      31: aconst_null
      32: astore_3
      33: aload_0
      34: getfield      #23                 // Field useSalt:Z
      37: ifeq          199
      40: aload_0
      41: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
      44: invokeinterface #66,  1           // InterfaceMethod org/jasypt/salt/SaltGenerator.includePlainSaltInEncryptionResults:()Z
      49: ifeq          185
      52: aload_0
      53: getfield      #4                  // Field saltSizeBytes:I
      56: istore        4
      58: aload_0
      59: getfield      #25                 // Field digestLengthBytes:I
      62: ifle          123
      65: aload_0
      66: getfield      #11                 // Field useLenientSaltSizeCheck:Z
      69: ifeq          101
      72: aload_2
      73: arraylength
      74: aload_0
      75: getfield      #25                 // Field digestLengthBytes:I
      78: if_icmpge     89
      81: new           #98                 // class org/jasypt/exceptions/EncryptionOperationNotPossibleException
      84: dup
      85: invokespecial #99                 // Method org/jasypt/exceptions/EncryptionOperationNotPossibleException."<init>":()V
      88: athrow
      89: aload_2
      90: arraylength
      91: aload_0
      92: getfield      #25                 // Field digestLengthBytes:I
      95: isub
      96: istore        4
      98: goto          140
     101: aload_2
     102: arraylength
     103: aload_0
     104: getfield      #25                 // Field digestLengthBytes:I
     107: aload_0
     108: getfield      #4                  // Field saltSizeBytes:I
     111: iadd
     112: if_icmpeq     140
     115: new           #98                 // class org/jasypt/exceptions/EncryptionOperationNotPossibleException
     118: dup
     119: invokespecial #99                 // Method org/jasypt/exceptions/EncryptionOperationNotPossibleException."<init>":()V
     122: athrow
     123: aload_2
     124: arraylength
     125: aload_0
     126: getfield      #4                  // Field saltSizeBytes:I
     129: if_icmpge     140
     132: new           #98                 // class org/jasypt/exceptions/EncryptionOperationNotPossibleException
     135: dup
     136: invokespecial #99                 // Method org/jasypt/exceptions/EncryptionOperationNotPossibleException."<init>":()V
     139: athrow
     140: aload_0
     141: getfield      #10                 // Field invertPositionOfPlainSaltInEncryptionResults:Z
     144: ifne          164
     147: iload         4
     149: newarray       byte
     151: astore_3
     152: aload_2
     153: iconst_0
     154: aload_3
     155: iconst_0
     156: iload         4
     158: invokestatic  #100                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     161: goto          182
     164: iload         4
     166: newarray       byte
     168: astore_3
     169: aload_2
     170: aload_2
     171: arraylength
     172: iload         4
     174: isub
     175: aload_3
     176: iconst_0
     177: iload         4
     179: invokestatic  #100                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     182: goto          199
     185: aload_0
     186: getfield      #6                  // Field saltGenerator:Lorg/jasypt/salt/SaltGenerator;
     189: aload_0
     190: getfield      #4                  // Field saltSizeBytes:I
     193: invokeinterface #90,  2           // InterfaceMethod org/jasypt/salt/SaltGenerator.generateSalt:(I)[B
     198: astore_3
     199: aload_0
     200: aload_1
     201: aload_3
     202: invokespecial #91                 // Method digest:([B[B)[B
     205: astore        4
     207: aload         4
     209: aload_2
     210: invokestatic  #101                // Method java/util/Arrays.equals:([B[B)Z
     213: ireturn
     214: astore_3
     215: new           #98                 // class org/jasypt/exceptions/EncryptionOperationNotPossibleException
     218: dup
     219: invokespecial #99                 // Method org/jasypt/exceptions/EncryptionOperationNotPossibleException."<init>":()V
     222: athrow
    Exception table:
       from    to  target type
          31   213   214   Class java/lang/Exception
}
