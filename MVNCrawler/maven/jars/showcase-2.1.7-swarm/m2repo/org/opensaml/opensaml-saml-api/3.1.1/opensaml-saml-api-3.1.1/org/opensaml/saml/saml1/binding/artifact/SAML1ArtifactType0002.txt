Compiled from "SAML1ArtifactType0002.java"
public class org.opensaml.saml.saml1.binding.artifact.SAML1ArtifactType0002 extends org.opensaml.saml.saml1.binding.artifact.AbstractSAML1Artifact {
  public static final byte[] TYPE_CODE;

  private byte[] assertionHandle;

  private java.lang.String sourceLocation;

  public org.opensaml.saml.saml1.binding.artifact.SAML1ArtifactType0002();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field TYPE_CODE:[B
       4: invokespecial #2                  // Method org/opensaml/saml/saml1/binding/artifact/AbstractSAML1Artifact."<init>":([B)V
       7: return

  public org.opensaml.saml.saml1.binding.artifact.SAML1ArtifactType0002(byte[], java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field TYPE_CODE:[B
       4: invokespecial #2                  // Method org/opensaml/saml/saml1/binding/artifact/AbstractSAML1Artifact."<init>":([B)V
       7: aload_0
       8: aload_1
       9: invokevirtual #3                  // Method setAssertionHandle:([B)V
      12: aload_0
      13: aload_2
      14: invokevirtual #4                  // Method setSourceLocation:(Ljava/lang/String;)V
      17: return

  public static org.opensaml.saml.saml1.binding.artifact.SAML1ArtifactType0002 parseArtifact(byte[]);
    Code:
       0: iconst_2
       1: newarray       byte
       3: dup
       4: iconst_0
       5: aload_0
       6: iconst_0
       7: baload
       8: bastore
       9: dup
      10: iconst_1
      11: aload_0
      12: iconst_1
      13: baload
      14: bastore
      15: astore_1
      16: aload_1
      17: getstatic     #1                  // Field TYPE_CODE:[B
      20: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z
      23: ifne          36
      26: new           #6                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #7                  // String Artifact is not of appropriate type.
      32: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: bipush        20
      38: newarray       byte
      40: astore_2
      41: aload_0
      42: iconst_2
      43: aload_2
      44: iconst_0
      45: bipush        20
      47: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: aload_0
      51: arraylength
      52: bipush        22
      54: isub
      55: istore_3
      56: iload_3
      57: newarray       byte
      59: astore        4
      61: aload_0
      62: bipush        22
      64: aload         4
      66: iconst_0
      67: iload_3
      68: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: new           #10                 // class org/opensaml/saml/saml1/binding/artifact/SAML1ArtifactType0002
      74: dup
      75: aload_2
      76: new           #11                 // class java/lang/String
      79: dup
      80: aload         4
      82: invokespecial #12                 // Method java/lang/String."<init>":([B)V
      85: invokespecial #13                 // Method "<init>":([BLjava/lang/String;)V
      88: areturn

  public byte[] getAssertionHandle();
    Code:
       0: aload_0
       1: getfield      #14                 // Field assertionHandle:[B
       4: areturn

  public void setAssertionHandle(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        20
       4: if_icmpeq     17
       7: new           #6                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #15                 // String Artifact assertion handle must be 20 bytes long
      13: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #14                 // Field assertionHandle:[B
      22: return

  public java.lang.String getSourceLocation();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sourceLocation:Ljava/lang/String;
       4: areturn

  protected void setSourceLocation(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #6                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #18                 // String Artifact source location may not be a null or empty string
      15: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_2
      21: putfield      #16                 // Field sourceLocation:Ljava/lang/String;
      24: return

  public byte[] getRemainingArtifact();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getSourceLocation:()Ljava/lang/String;
       4: invokevirtual #20                 // Method java/lang/String.getBytes:()[B
       7: astore_1
       8: bipush        20
      10: aload_1
      11: arraylength
      12: iadd
      13: newarray       byte
      15: astore_2
      16: aload_0
      17: invokevirtual #21                 // Method getAssertionHandle:()[B
      20: iconst_0
      21: aload_2
      22: iconst_0
      23: bipush        20
      25: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: aload_1
      29: iconst_0
      30: aload_2
      31: bipush        20
      33: aload_1
      34: arraylength
      35: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_2
      39: areturn

  static {};
    Code:
       0: iconst_2
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_2
      10: bastore
      11: putstatic     #1                  // Field TYPE_CODE:[B
      14: return
}
