Compiled from "MapBasedConfiguration.java"
public class org.opensaml.core.config.provider.MapBasedConfiguration implements org.opensaml.core.config.Configuration {
  private java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>> storage;

  public org.opensaml.core.config.provider.MapBasedConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field storage:Ljava/util/Map;
      15: return

  public <T> T get(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #5                  // Method getPartition:(Ljava/lang/String;)Ljava/util/Map;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public <T, I extends T> void register(java.lang.Class<T>, I, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #5                  // Method getPartition:(Ljava/lang/String;)Ljava/util/Map;
       5: astore        4
       7: aload         4
       9: aload_1
      10: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      13: aload_2
      14: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  public <T> T deregister(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #5                  // Method getPartition:(Ljava/lang/String;)Ljava/util/Map;
       5: astore_3
       6: aload_3
       7: dup
       8: astore        4
      10: monitorenter
      11: aload_3
      12: aload_1
      13: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      16: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore        5
      23: aload_3
      24: aload_1
      25: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokeinterface #9,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload         5
      36: aload         4
      38: monitorexit
      39: areturn
      40: astore        6
      42: aload         4
      44: monitorexit
      45: aload         6
      47: athrow
    Exception table:
       from    to  target type
          11    39    40   any
          40    45    40   any

  private synchronized java.util.Map<java.lang.String, java.lang.Object> getPartition(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field storage:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Map
      13: astore_2
      14: aload_2
      15: ifnonnull     38
      18: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field storage:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: areturn
}
