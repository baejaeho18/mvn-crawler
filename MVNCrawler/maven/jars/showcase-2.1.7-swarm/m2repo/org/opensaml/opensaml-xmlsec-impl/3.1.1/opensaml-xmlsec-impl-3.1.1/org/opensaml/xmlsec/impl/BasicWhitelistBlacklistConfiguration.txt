Compiled from "BasicWhitelistBlacklistConfiguration.java"
public class org.opensaml.xmlsec.impl.BasicWhitelistBlacklistConfiguration implements org.opensaml.xmlsec.WhitelistBlacklistConfiguration {
  public static final org.opensaml.xmlsec.WhitelistBlacklistConfiguration$Precedence DEFAULT_PRECEDENCE;

  private java.util.Collection<java.lang.String> whitelist;

  private boolean whitelistMerge;

  private java.util.Collection<java.lang.String> blacklist;

  private boolean blacklistMerge;

  private org.opensaml.xmlsec.WhitelistBlacklistConfiguration$Precedence precedence;

  public org.opensaml.xmlsec.impl.BasicWhitelistBlacklistConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: putfield      #3                  // Field whitelist:Ljava/util/Collection;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      15: putfield      #4                  // Field blacklist:Ljava/util/Collection;
      18: aload_0
      19: getstatic     #5                  // Field DEFAULT_PRECEDENCE:Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
      22: putfield      #6                  // Field precedence:Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
      25: aload_0
      26: iconst_1
      27: putfield      #7                  // Field blacklistMerge:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field whitelistMerge:Z
      35: return

  public java.util.Collection<java.lang.String> getWhitelistedAlgorithms();
    Code:
       0: aload_0
       1: getfield      #3                  // Field whitelist:Ljava/util/Collection;
       4: invokestatic  #9                  // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public void setWhitelistedAlgorithms(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: putfield      #3                  // Field whitelist:Ljava/util/Collection;
      11: return
      12: aload_0
      13: new           #10                 // class java/util/HashSet
      16: dup
      17: aload_1
      18: invokestatic  #11                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.normalizeStringCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      21: invokespecial #12                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: putfield      #3                  // Field whitelist:Ljava/util/Collection;
      27: return

  public boolean isWhitelistMerge();
    Code:
       0: aload_0
       1: getfield      #8                  // Field whitelistMerge:Z
       4: ireturn

  public void setWhitelistMerge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field whitelistMerge:Z
       5: return

  public java.util.Collection<java.lang.String> getBlacklistedAlgorithms();
    Code:
       0: aload_0
       1: getfield      #4                  // Field blacklist:Ljava/util/Collection;
       4: invokestatic  #9                  // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public void setBlacklistedAlgorithms(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: putfield      #4                  // Field blacklist:Ljava/util/Collection;
      11: return
      12: aload_0
      13: new           #10                 // class java/util/HashSet
      16: dup
      17: aload_1
      18: invokestatic  #11                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.normalizeStringCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      21: invokespecial #12                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: putfield      #4                  // Field blacklist:Ljava/util/Collection;
      27: return

  public boolean isBlacklistMerge();
    Code:
       0: aload_0
       1: getfield      #7                  // Field blacklistMerge:Z
       4: ireturn

  public void setBlacklistMerge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field blacklistMerge:Z
       5: return

  public org.opensaml.xmlsec.WhitelistBlacklistConfiguration$Precedence getWhitelistBlacklistPrecedence();
    Code:
       0: aload_0
       1: getfield      #6                  // Field precedence:Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
       4: areturn

  public void setWhitelistBlacklistPrecedence(org.opensaml.xmlsec.WhitelistBlacklistConfiguration$Precedence);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #13                 // String Precedence may not be null
       4: invokestatic  #14                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #15                 // class org/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence
      10: putfield      #6                  // Field precedence:Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
      13: return

  static {};
    Code:
       0: getstatic     #16                 // Field org/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence.WHITELIST:Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
       3: putstatic     #5                  // Field DEFAULT_PRECEDENCE:Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
       6: return
}
