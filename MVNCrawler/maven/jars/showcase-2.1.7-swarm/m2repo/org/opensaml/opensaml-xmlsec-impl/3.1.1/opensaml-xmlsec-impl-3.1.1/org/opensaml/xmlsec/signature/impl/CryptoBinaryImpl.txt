Compiled from "CryptoBinaryImpl.java"
public class org.opensaml.xmlsec.signature.impl.CryptoBinaryImpl extends org.opensaml.core.xml.schema.impl.XSBase64BinaryImpl implements org.opensaml.xmlsec.signature.CryptoBinary {
  private java.math.BigInteger bigIntValue;

  protected org.opensaml.xmlsec.signature.impl.CryptoBinaryImpl(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/opensaml/core/xml/schema/impl/XSBase64BinaryImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.math.BigInteger getValueBigInt();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bigIntValue:Ljava/math/BigInteger;
       4: ifnonnull     28
       7: aload_0
       8: invokevirtual #3                  // Method getValue:()Ljava/lang/String;
      11: invokestatic  #4                  // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      14: ifne          28
      17: aload_0
      18: aload_0
      19: invokevirtual #3                  // Method getValue:()Ljava/lang/String;
      22: invokestatic  #5                  // Method org/opensaml/xmlsec/keyinfo/KeyInfoSupport.decodeBigIntegerFromCryptoBinary:(Ljava/lang/String;)Ljava/math/BigInteger;
      25: putfield      #2                  // Field bigIntValue:Ljava/math/BigInteger;
      28: aload_0
      29: getfield      #2                  // Field bigIntValue:Ljava/math/BigInteger;
      32: areturn

  public void setValueBigInt(java.math.BigInteger);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: invokevirtual #6                  // Method setValue:(Ljava/lang/String;)V
       9: goto          20
      12: aload_0
      13: aload_1
      14: invokestatic  #7                  // Method org/opensaml/xmlsec/keyinfo/KeyInfoSupport.encodeCryptoBinaryFromBigInteger:(Ljava/math/BigInteger;)Ljava/lang/String;
      17: invokevirtual #6                  // Method setValue:(Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #2                  // Field bigIntValue:Ljava/math/BigInteger;
      25: return

  public void setValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bigIntValue:Ljava/math/BigInteger;
       4: ifnull        27
       7: aload_0
       8: invokevirtual #3                  // Method getValue:()Ljava/lang/String;
      11: aload_1
      12: invokestatic  #8                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifeq          22
      18: aload_1
      19: ifnonnull     27
      22: aload_0
      23: aconst_null
      24: putfield      #2                  // Field bigIntValue:Ljava/math/BigInteger;
      27: aload_0
      28: aload_1
      29: invokespecial #9                  // Method org/opensaml/core/xml/schema/impl/XSBase64BinaryImpl.setValue:(Ljava/lang/String;)V
      32: return
}
