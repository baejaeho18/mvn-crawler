Compiled from "AbstractSecurityParametersResolver.java"
public abstract class org.opensaml.xmlsec.impl.AbstractSecurityParametersResolver<ProductType> implements net.shibboleth.utilities.java.support.resolver.Resolver<ProductType, net.shibboleth.utilities.java.support.resolver.CriteriaSet> {
  private org.slf4j.Logger log;

  public org.opensaml.xmlsec.impl.AbstractSecurityParametersResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class org/opensaml/xmlsec/impl/AbstractSecurityParametersResolver
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: return

  protected org.opensaml.xmlsec.keyinfo.KeyInfoGenerator lookupKeyInfoGenerator(org.opensaml.security.credential.Credential, org.opensaml.xmlsec.keyinfo.NamedKeyInfoGeneratorManager, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #5                  // String Credential may not be null
       3: invokestatic  #6                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ifnonnull     24
      11: aload_0
      12: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      15: ldc           #7                  // String NamedKeyInfoGeneratorManger was null, can not resolve
      17: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      22: aconst_null
      23: areturn
      24: aload_0
      25: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      28: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      33: ifeq          88
      36: aload_1
      37: invokestatic  #10                 // Method org/opensaml/security/credential/CredentialSupport.extractSigningKey:(Lorg/opensaml/security/credential/Credential;)Ljava/security/Key;
      40: astore        4
      42: aload         4
      44: ifnonnull     53
      47: aload_1
      48: invokestatic  #11                 // Method org/opensaml/security/credential/CredentialSupport.extractEncryptionKey:(Lorg/opensaml/security/credential/Credential;)Ljava/security/Key;
      51: astore        4
      53: aload_0
      54: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      57: ldc           #12                 // String Attempting to resolve KeyInfoGenerator for credential with key algo \'{}\' of impl: {}
      59: aload         4
      61: ifnull        74
      64: aload         4
      66: invokeinterface #13,  1           // InterfaceMethod java/security/Key.getAlgorithm:()Ljava/lang/String;
      71: goto          76
      74: ldc           #14                 // String n/a
      76: aload_1
      77: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      80: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      83: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      88: aload_1
      89: aload_2
      90: aload_3
      91: invokestatic  #18                 // Method org/opensaml/xmlsec/keyinfo/KeyInfoSupport.getKeyInfoGenerator:(Lorg/opensaml/security/credential/Credential;Lorg/opensaml/xmlsec/keyinfo/NamedKeyInfoGeneratorManager;Ljava/lang/String;)Lorg/opensaml/xmlsec/keyinfo/KeyInfoGenerator;
      94: areturn

  protected void resolveAndPopulateWhiteAndBlacklists(org.opensaml.xmlsec.WhitelistBlacklistParameters, net.shibboleth.utilities.java.support.resolver.CriteriaSet, java.util.List<? extends org.opensaml.xmlsec.WhitelistBlacklistConfiguration>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokevirtual #19                 // Method resolveEffectiveWhitelist:(Lnet/shibboleth/utilities/java/support/resolver/CriteriaSet;Ljava/util/List;)Ljava/util/Collection;
       6: astore        4
       8: aload_0
       9: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      12: ldc           #20                 // String Resolved effective whitelist: {}
      14: aload         4
      16: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: aload_2
      23: aload_3
      24: invokevirtual #22                 // Method resolveEffectiveBlacklist:(Lnet/shibboleth/utilities/java/support/resolver/CriteriaSet;Ljava/util/List;)Ljava/util/Collection;
      27: astore        5
      29: aload_0
      30: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      33: ldc           #23                 // String Resolved effective blacklist: {}
      35: aload         5
      37: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      42: aload         4
      44: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      49: ifeq          74
      52: aload         5
      54: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      59: ifeq          74
      62: aload_0
      63: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      66: ldc           #25                 // String Both empty, nothing to populate
      68: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      73: return
      74: aload         4
      76: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      81: ifeq          102
      84: aload_0
      85: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      88: ldc           #26                 // String Whitelist empty, populating blacklist
      90: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      95: aload_1
      96: aload         5
      98: invokevirtual #27                 // Method org/opensaml/xmlsec/WhitelistBlacklistParameters.setBlacklistedAlgorithms:(Ljava/util/Collection;)V
     101: return
     102: aload         5
     104: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     109: ifeq          130
     112: aload_0
     113: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     116: ldc           #28                 // String Blacklist empty, populating whitelist
     118: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     123: aload_1
     124: aload         4
     126: invokevirtual #29                 // Method org/opensaml/xmlsec/WhitelistBlacklistParameters.setWhitelistedAlgorithms:(Ljava/util/Collection;)V
     129: return
     130: aload_0
     131: aload_2
     132: aload_3
     133: invokevirtual #30                 // Method resolveWhitelistBlacklistPrecedence:(Lnet/shibboleth/utilities/java/support/resolver/CriteriaSet;Ljava/util/List;)Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
     136: astore        6
     138: aload_0
     139: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     142: ldc           #31                 // String Resolved effective precedence: {}
     144: aload         6
     146: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     151: getstatic     #32                 // Field org/opensaml/xmlsec/impl/AbstractSecurityParametersResolver$1.$SwitchMap$org$opensaml$xmlsec$WhitelistBlacklistConfiguration$Precedence:[I
     154: aload         6
     156: invokevirtual #33                 // Method org/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence.ordinal:()I
     159: iaload
     160: lookupswitch  { // 2
                     1: 188
                     2: 208
               default: 228
          }
     188: aload_0
     189: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     192: ldc           #34                 // String Based on precedence, populating whitelist
     194: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     199: aload_1
     200: aload         4
     202: invokevirtual #29                 // Method org/opensaml/xmlsec/WhitelistBlacklistParameters.setWhitelistedAlgorithms:(Ljava/util/Collection;)V
     205: goto          256
     208: aload_0
     209: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     212: ldc           #35                 // String Based on precedence, populating blacklist
     214: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     219: aload_1
     220: aload         5
     222: invokevirtual #27                 // Method org/opensaml/xmlsec/WhitelistBlacklistParameters.setBlacklistedAlgorithms:(Ljava/util/Collection;)V
     225: goto          256
     228: new           #36                 // class java/lang/IllegalArgumentException
     231: dup
     232: new           #37                 // class java/lang/StringBuilder
     235: dup
     236: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     239: ldc           #39                 // String WhitelistBlacklistPrecedence value is unknown:
     241: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: aload         6
     246: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     249: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: return

  protected com.google.common.base.Predicate<java.lang.String> resolveWhitelistBlacklistPredicate(net.shibboleth.utilities.java.support.resolver.CriteriaSet, java.util.List<? extends org.opensaml.xmlsec.WhitelistBlacklistConfiguration>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #19                 // Method resolveEffectiveWhitelist:(Lnet/shibboleth/utilities/java/support/resolver/CriteriaSet;Ljava/util/List;)Ljava/util/Collection;
       6: astore_3
       7: aload_0
       8: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      11: ldc           #20                 // String Resolved effective whitelist: {}
      13: aload_3
      14: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #22                 // Method resolveEffectiveBlacklist:(Lnet/shibboleth/utilities/java/support/resolver/CriteriaSet;Ljava/util/List;)Ljava/util/Collection;
      25: astore        4
      27: aload_0
      28: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      31: ldc           #23                 // String Resolved effective blacklist: {}
      33: aload         4
      35: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      40: aload_3
      41: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      46: ifeq          74
      49: aload         4
      51: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      56: ifeq          74
      59: aload_0
      60: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      63: ldc           #44                 // String Both empty, returning alwaysTrue predicate
      65: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      70: invokestatic  #45                 // Method com/google/common/base/Predicates.alwaysTrue:()Lcom/google/common/base/Predicate;
      73: areturn
      74: aload_3
      75: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      80: ifeq          104
      83: aload_0
      84: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      87: ldc           #46                 // String Whitelist empty, returning BlacklistPredicate
      89: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      94: new           #47                 // class org/opensaml/xmlsec/impl/BlacklistPredicate
      97: dup
      98: aload         4
     100: invokespecial #48                 // Method org/opensaml/xmlsec/impl/BlacklistPredicate."<init>":(Ljava/util/Collection;)V
     103: areturn
     104: aload         4
     106: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     111: ifeq          134
     114: aload_0
     115: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     118: ldc           #49                 // String Blacklist empty, returning WhitelistPredicate
     120: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     125: new           #50                 // class org/opensaml/xmlsec/impl/WhitelistPredicate
     128: dup
     129: aload_3
     130: invokespecial #51                 // Method org/opensaml/xmlsec/impl/WhitelistPredicate."<init>":(Ljava/util/Collection;)V
     133: areturn
     134: aload_0
     135: aload_1
     136: aload_2
     137: invokevirtual #30                 // Method resolveWhitelistBlacklistPrecedence:(Lnet/shibboleth/utilities/java/support/resolver/CriteriaSet;Ljava/util/List;)Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
     140: astore        5
     142: aload_0
     143: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     146: ldc           #31                 // String Resolved effective precedence: {}
     148: aload         5
     150: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     155: getstatic     #32                 // Field org/opensaml/xmlsec/impl/AbstractSecurityParametersResolver$1.$SwitchMap$org$opensaml$xmlsec$WhitelistBlacklistConfiguration$Precedence:[I
     158: aload         5
     160: invokevirtual #33                 // Method org/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence.ordinal:()I
     163: iaload
     164: lookupswitch  { // 2
                     1: 192
                     2: 212
               default: 233
          }
     192: aload_0
     193: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     196: ldc           #52                 // String Based on precedence, returning WhitelistPredicate
     198: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     203: new           #50                 // class org/opensaml/xmlsec/impl/WhitelistPredicate
     206: dup
     207: aload_3
     208: invokespecial #51                 // Method org/opensaml/xmlsec/impl/WhitelistPredicate."<init>":(Ljava/util/Collection;)V
     211: areturn
     212: aload_0
     213: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     216: ldc           #53                 // String Based on precedence, returning BlacklistPredicate
     218: invokeinterface #8,  2            // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     223: new           #47                 // class org/opensaml/xmlsec/impl/BlacklistPredicate
     226: dup
     227: aload         4
     229: invokespecial #48                 // Method org/opensaml/xmlsec/impl/BlacklistPredicate."<init>":(Ljava/util/Collection;)V
     232: areturn
     233: new           #36                 // class java/lang/IllegalArgumentException
     236: dup
     237: new           #37                 // class java/lang/StringBuilder
     240: dup
     241: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     244: ldc           #39                 // String WhitelistBlacklistPrecedence value is unknown:
     246: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: aload         5
     251: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     254: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     257: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     260: athrow

  protected java.util.Collection<java.lang.String> resolveEffectiveBlacklist(net.shibboleth.utilities.java.support.resolver.CriteriaSet, java.util.List<? extends org.opensaml.xmlsec.WhitelistBlacklistConfiguration>);
    Code:
       0: new           #54                 // class net/shibboleth/utilities/java/support/collection/LazySet
       3: dup
       4: invokespecial #55                 // Method net/shibboleth/utilities/java/support/collection/LazySet."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          66
      26: aload         4
      28: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #59                 // class org/opensaml/xmlsec/WhitelistBlacklistConfiguration
      36: astore        5
      38: aload_3
      39: aload         5
      41: invokeinterface #60,  1           // InterfaceMethod org/opensaml/xmlsec/WhitelistBlacklistConfiguration.getBlacklistedAlgorithms:()Ljava/util/Collection;
      46: invokevirtual #61                 // Method net/shibboleth/utilities/java/support/collection/LazySet.addAll:(Ljava/util/Collection;)Z
      49: pop
      50: aload         5
      52: invokeinterface #62,  1           // InterfaceMethod org/opensaml/xmlsec/WhitelistBlacklistConfiguration.isBlacklistMerge:()Z
      57: ifne          63
      60: goto          66
      63: goto          16
      66: aload_3
      67: areturn

  protected java.util.Collection<java.lang.String> resolveEffectiveWhitelist(net.shibboleth.utilities.java.support.resolver.CriteriaSet, java.util.List<? extends org.opensaml.xmlsec.WhitelistBlacklistConfiguration>);
    Code:
       0: new           #54                 // class net/shibboleth/utilities/java/support/collection/LazySet
       3: dup
       4: invokespecial #55                 // Method net/shibboleth/utilities/java/support/collection/LazySet."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          66
      26: aload         4
      28: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #59                 // class org/opensaml/xmlsec/WhitelistBlacklistConfiguration
      36: astore        5
      38: aload_3
      39: aload         5
      41: invokeinterface #63,  1           // InterfaceMethod org/opensaml/xmlsec/WhitelistBlacklistConfiguration.getWhitelistedAlgorithms:()Ljava/util/Collection;
      46: invokevirtual #61                 // Method net/shibboleth/utilities/java/support/collection/LazySet.addAll:(Ljava/util/Collection;)Z
      49: pop
      50: aload         5
      52: invokeinterface #64,  1           // InterfaceMethod org/opensaml/xmlsec/WhitelistBlacklistConfiguration.isWhitelistMerge:()Z
      57: ifne          63
      60: goto          66
      63: goto          16
      66: aload_3
      67: areturn

  protected org.opensaml.xmlsec.WhitelistBlacklistConfiguration$Precedence resolveWhitelistBlacklistPrecedence(net.shibboleth.utilities.java.support.resolver.CriteriaSet, java.util.List<? extends org.opensaml.xmlsec.WhitelistBlacklistConfiguration>);
    Code:
       0: aload_2
       1: iconst_0
       2: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       7: checkcast     #59                 // class org/opensaml/xmlsec/WhitelistBlacklistConfiguration
      10: invokeinterface #66,  1           // InterfaceMethod org/opensaml/xmlsec/WhitelistBlacklistConfiguration.getWhitelistBlacklistPrecedence:()Lorg/opensaml/xmlsec/WhitelistBlacklistConfiguration$Precedence;
      15: areturn
}
