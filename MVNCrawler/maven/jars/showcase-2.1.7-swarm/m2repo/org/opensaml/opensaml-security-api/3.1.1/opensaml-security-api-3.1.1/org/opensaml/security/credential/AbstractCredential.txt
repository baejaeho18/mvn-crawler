Compiled from "AbstractCredential.java"
public abstract class org.opensaml.security.credential.AbstractCredential implements org.opensaml.security.credential.Credential {
  private java.lang.String entityId;

  private org.opensaml.security.credential.UsageType usageType;

  private java.util.Collection<java.lang.String> keyNames;

  private java.security.PublicKey publicKey;

  private javax.crypto.SecretKey secretKey;

  private java.security.PrivateKey privateKey;

  private final org.opensaml.security.credential.CredentialContextSet credentialContextSet;

  public org.opensaml.security.credential.AbstractCredential();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/opensaml/security/credential/CredentialContextSet
       8: dup
       9: invokespecial #3                  // Method org/opensaml/security/credential/CredentialContextSet."<init>":()V
      12: putfield      #4                  // Field credentialContextSet:Lorg/opensaml/security/credential/CredentialContextSet;
      15: aload_0
      16: new           #5                  // class net/shibboleth/utilities/java/support/collection/LazySet
      19: dup
      20: invokespecial #6                  // Method net/shibboleth/utilities/java/support/collection/LazySet."<init>":()V
      23: putfield      #7                  // Field keyNames:Ljava/util/Collection;
      26: aload_0
      27: getstatic     #8                  // Field org/opensaml/security/credential/UsageType.UNSPECIFIED:Lorg/opensaml/security/credential/UsageType;
      30: invokevirtual #9                  // Method setUsageType:(Lorg/opensaml/security/credential/UsageType;)V
      33: return

  public java.lang.String getEntityId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entityId:Ljava/lang/String;
       4: areturn

  public org.opensaml.security.credential.UsageType getUsageType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field usageType:Lorg/opensaml/security/credential/UsageType;
       4: areturn

  public java.util.Collection<java.lang.String> getKeyNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyNames:Ljava/util/Collection;
       4: areturn

  public java.security.PublicKey getPublicKey();
    Code:
       0: aload_0
       1: getfield      #12                 // Field publicKey:Ljava/security/PublicKey;
       4: areturn

  public javax.crypto.SecretKey getSecretKey();
    Code:
       0: aload_0
       1: getfield      #13                 // Field secretKey:Ljavax/crypto/SecretKey;
       4: areturn

  public java.security.PrivateKey getPrivateKey();
    Code:
       0: aload_0
       1: getfield      #14                 // Field privateKey:Ljava/security/PrivateKey;
       4: areturn

  public org.opensaml.security.credential.CredentialContextSet getCredentialContextSet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field credentialContextSet:Lorg/opensaml/security/credential/CredentialContextSet;
       4: areturn

  protected void setEntityId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #10                 // Field entityId:Ljava/lang/String;
       8: return

  protected void setUsageType(org.opensaml.security.credential.UsageType);
    Code:
       0: aload_1
       1: ldc           #16                 // String Credential usage type cannot be null
       3: invokestatic  #17                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #11                 // Field usageType:Lorg/opensaml/security/credential/UsageType;
      12: return

  protected void setPublicKey(java.security.PublicKey);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getSecretKey:()Ljavax/crypto/SecretKey;
       4: ldc           #19                 // String A credential with a secret key cannot contain a public key
       6: invokestatic  #20                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: ldc           #21                 // String Credential public key cannot be null
      13: invokestatic  #17                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_1
      19: putfield      #12                 // Field publicKey:Ljava/security/PublicKey;
      22: return

  protected void setPrivateKey(java.security.PrivateKey);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getSecretKey:()Ljavax/crypto/SecretKey;
       4: ldc           #22                 // String A credential with a secret key cannot contain a private key
       6: invokestatic  #20                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: ldc           #23                 // String Credential private key cannot be null
      13: invokestatic  #17                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_1
      19: putfield      #14                 // Field privateKey:Ljava/security/PrivateKey;
      22: return

  protected void setSecretKey(javax.crypto.SecretKey);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getPublicKey:()Ljava/security/PublicKey;
       4: ldc           #25                 // String A credential with a public key cannot contain a secret key
       6: invokestatic  #20                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #26                 // Method getPrivateKey:()Ljava/security/PrivateKey;
      14: ldc           #27                 // String A credential with a private key cannot contain a secret key
      16: invokestatic  #20                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: ldc           #28                 // String Credential secret key cannot be null
      23: invokestatic  #17                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: aload_1
      29: putfield      #13                 // Field secretKey:Ljavax/crypto/SecretKey;
      32: return
}
