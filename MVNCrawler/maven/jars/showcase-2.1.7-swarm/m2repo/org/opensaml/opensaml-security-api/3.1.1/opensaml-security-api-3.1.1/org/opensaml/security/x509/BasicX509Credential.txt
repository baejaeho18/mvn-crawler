Compiled from "BasicX509Credential.java"
public class org.opensaml.security.x509.BasicX509Credential extends org.opensaml.security.credential.BasicCredential implements org.opensaml.security.x509.X509Credential {
  private java.security.cert.X509Certificate entityCert;

  private java.util.Collection<java.security.cert.X509Certificate> entityCertChain;

  private java.util.Collection<java.security.cert.X509CRL> crls;

  public org.opensaml.security.x509.BasicX509Credential(java.security.cert.X509Certificate);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/opensaml/security/credential/BasicCredential."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setEntityCertificate:(Ljava/security/cert/X509Certificate;)V
       9: return

  public org.opensaml.security.x509.BasicX509Credential(java.security.cert.X509Certificate, java.security.PrivateKey);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/opensaml/security/credential/BasicCredential."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setEntityCertificate:(Ljava/security/cert/X509Certificate;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method setPrivateKey:(Ljava/security/PrivateKey;)V
      14: return

  public java.lang.Class<? extends org.opensaml.security.credential.Credential> getCredentialType();
    Code:
       0: ldc_w         #4                  // class org/opensaml/security/x509/X509Credential
       3: areturn

  public java.util.Collection<java.security.cert.X509CRL> getCRLs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field crls:Ljava/util/Collection;
       4: areturn

  public void setCRLs(java.util.Collection<java.security.cert.X509CRL>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field crls:Ljava/util/Collection;
       5: return

  public java.security.cert.X509Certificate getEntityCertificate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entityCert:Ljava/security/cert/X509Certificate;
       4: areturn

  public void setEntityCertificate(java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: ldc           #7                  // String Credential certificate cannot be null
       3: invokestatic  #8                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #6                  // Field entityCert:Ljava/security/cert/X509Certificate;
      12: return

  public java.security.PublicKey getPublicKey();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getEntityCertificate:()Ljava/security/cert/X509Certificate;
       4: invokevirtual #10                 // Method java/security/cert/X509Certificate.getPublicKey:()Ljava/security/PublicKey;
       7: areturn

  public void setPublicKey(java.security.PublicKey);
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #12                 // String Public key may not be set explicitly on an X509 credential
       6: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Collection<java.security.cert.X509Certificate> getEntityCertificateChain();
    Code:
       0: aload_0
       1: getfield      #14                 // Field entityCertChain:Ljava/util/Collection;
       4: ifnonnull     26
       7: new           #15                 // class net/shibboleth/utilities/java/support/collection/LazySet
      10: dup
      11: invokespecial #16                 // Method net/shibboleth/utilities/java/support/collection/LazySet."<init>":()V
      14: astore_1
      15: aload_1
      16: aload_0
      17: getfield      #6                  // Field entityCert:Ljava/security/cert/X509Certificate;
      20: invokevirtual #17                 // Method net/shibboleth/utilities/java/support/collection/LazySet.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_1
      25: areturn
      26: aload_0
      27: getfield      #14                 // Field entityCertChain:Ljava/util/Collection;
      30: areturn

  public void setEntityCertificateChain(java.util.Collection<java.security.cert.X509Certificate>);
    Code:
       0: aload_1
       1: ldc           #18                 // String Certificate chain collection cannot be null
       3: invokestatic  #8                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #19                 // String Certificate chain collection cannot be empty
      10: invokestatic  #20                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      13: pop
      14: aload_0
      15: new           #21                 // class java/util/ArrayList
      18: dup
      19: aload_1
      20: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      23: putfield      #14                 // Field entityCertChain:Ljava/util/Collection;
      26: return

  public javax.crypto.SecretKey getSecretKey();
    Code:
       0: aconst_null
       1: areturn

  public void setSecretKey(javax.crypto.SecretKey);
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #23                 // String An X509Credential may not contain a secret key
       6: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
