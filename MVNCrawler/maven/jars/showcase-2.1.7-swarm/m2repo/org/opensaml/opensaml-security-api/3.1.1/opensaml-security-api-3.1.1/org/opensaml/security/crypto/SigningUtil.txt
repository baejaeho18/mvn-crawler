Compiled from "SigningUtil.java"
public final class org.opensaml.security.crypto.SigningUtil {
  private org.opensaml.security.crypto.SigningUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] sign(org.opensaml.security.credential.Credential, java.lang.String, boolean, byte[]) throws org.opensaml.security.SecurityException;
    Code:
       0: invokestatic  #2                  // Method getLogger:()Lorg/slf4j/Logger;
       3: astore        4
       5: aload_0
       6: invokestatic  #3                  // Method org/opensaml/security/credential/CredentialSupport.extractSigningKey:(Lorg/opensaml/security/credential/Credential;)Ljava/security/Key;
       9: astore        5
      11: aload         5
      13: ifnonnull     35
      16: aload         4
      18: ldc           #4                  // String No signing key supplied in signing credential for signature computation
      20: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      25: new           #6                  // class org/opensaml/security/SecurityException
      28: dup
      29: ldc           #7                  // String No signing key supplied in signing credential
      31: invokespecial #8                  // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_2
      36: ifeq          47
      39: aload         5
      41: aload_1
      42: aload_3
      43: invokestatic  #9                  // Method signMAC:(Ljava/security/Key;Ljava/lang/String;[B)[B
      46: areturn
      47: aload         5
      49: instanceof    #10                 // class java/security/PrivateKey
      52: ifeq          66
      55: aload         5
      57: checkcast     #10                 // class java/security/PrivateKey
      60: aload_1
      61: aload_3
      62: invokestatic  #11                 // Method sign:(Ljava/security/PrivateKey;Ljava/lang/String;[B)[B
      65: areturn
      66: aload         4
      68: ldc           #12                 // String No PrivateKey present in signing credential for signature computation
      70: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      75: new           #6                  // class org/opensaml/security/SecurityException
      78: dup
      79: ldc           #13                 // String No PrivateKey supplied for signing
      81: invokespecial #8                  // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;)V
      84: athrow

  public static byte[] sign(java.security.PrivateKey, java.lang.String, byte[]) throws org.opensaml.security.SecurityException;
    Code:
       0: aload_0
       1: ldc           #14                 // String Private key cannot be null
       3: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #16                 // String JCA algorithm ID cannot be null
      10: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #17                 // String Input data to sign cannot be null
      17: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: invokestatic  #2                  // Method getLogger:()Lorg/slf4j/Logger;
      24: astore_3
      25: aload_3
      26: ldc           #18                 // String Computing signature over input using private key of type {} and JCA algorithm ID {}
      28: aload_0
      29: invokeinterface #19,  1           // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
      34: aload_1
      35: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_1
      41: invokestatic  #21                 // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
      44: astore        4
      46: aload         4
      48: aload_0
      49: invokevirtual #22                 // Method java/security/Signature.initSign:(Ljava/security/PrivateKey;)V
      52: aload         4
      54: aload_2
      55: invokevirtual #23                 // Method java/security/Signature.update:([B)V
      58: aload         4
      60: invokevirtual #24                 // Method java/security/Signature.sign:()[B
      63: astore        5
      65: aload_3
      66: ldc           #25                 // String Computed signature: {}
      68: aload         5
      70: invokestatic  #26                 // Method org/apache/commons/codec/binary/Hex.encodeHex:([B)[C
      73: invokeinterface #27,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      78: aload         5
      80: areturn
      81: astore        4
      83: aload_3
      84: ldc           #29                 // String Error during signature generation
      86: aload         4
      88: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: new           #6                  // class org/opensaml/security/SecurityException
      96: dup
      97: ldc           #29                 // String Error during signature generation
      99: aload         4
     101: invokespecial #31                 // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     104: athrow
    Exception table:
       from    to  target type
          40    80    81   Class java/security/GeneralSecurityException

  public static byte[] signMAC(java.security.Key, java.lang.String, byte[]) throws org.opensaml.security.SecurityException;
    Code:
       0: aload_0
       1: ldc           #32                 // String Secret key cannot be null
       3: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #16                 // String JCA algorithm ID cannot be null
      10: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #17                 // String Input data to sign cannot be null
      17: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: invokestatic  #2                  // Method getLogger:()Lorg/slf4j/Logger;
      24: astore_3
      25: aload_3
      26: ldc           #33                 // String Computing MAC over input using key of type {} and JCA algorithm ID {}
      28: aload_0
      29: invokeinterface #34,  1           // InterfaceMethod java/security/Key.getAlgorithm:()Ljava/lang/String;
      34: aload_1
      35: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_1
      41: invokestatic  #35                 // Method javax/crypto/Mac.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;
      44: astore        4
      46: aload         4
      48: aload_0
      49: invokevirtual #36                 // Method javax/crypto/Mac.init:(Ljava/security/Key;)V
      52: aload         4
      54: aload_2
      55: invokevirtual #37                 // Method javax/crypto/Mac.update:([B)V
      58: aload         4
      60: invokevirtual #38                 // Method javax/crypto/Mac.doFinal:()[B
      63: astore        5
      65: aload_3
      66: ldc           #39                 // String Computed MAC: {}
      68: aload         5
      70: invokestatic  #40                 // Method org/apache/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
      73: invokeinterface #27,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      78: aload         5
      80: areturn
      81: astore        4
      83: aload_3
      84: ldc           #41                 // String Error during MAC generation
      86: aload         4
      88: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: new           #6                  // class org/opensaml/security/SecurityException
      96: dup
      97: ldc           #41                 // String Error during MAC generation
      99: aload         4
     101: invokespecial #31                 // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     104: athrow
    Exception table:
       from    to  target type
          40    80    81   Class java/security/GeneralSecurityException

  public static boolean verify(org.opensaml.security.credential.Credential, java.lang.String, boolean, byte[], byte[]) throws org.opensaml.security.SecurityException;
    Code:
       0: invokestatic  #2                  // Method getLogger:()Lorg/slf4j/Logger;
       3: astore        5
       5: aload_0
       6: invokestatic  #42                 // Method org/opensaml/security/credential/CredentialSupport.extractVerificationKey:(Lorg/opensaml/security/credential/Credential;)Ljava/security/Key;
       9: astore        6
      11: aload         6
      13: ifnonnull     35
      16: aload         5
      18: ldc           #43                 // String No verification key supplied in verification credential for signature verification
      20: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      25: new           #6                  // class org/opensaml/security/SecurityException
      28: dup
      29: ldc           #44                 // String No verification key supplied in verification credential
      31: invokespecial #8                  // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_2
      36: ifeq          49
      39: aload         6
      41: aload_1
      42: aload_3
      43: aload         4
      45: invokestatic  #45                 // Method verifyMAC:(Ljava/security/Key;Ljava/lang/String;[B[B)Z
      48: ireturn
      49: aload         6
      51: instanceof    #46                 // class java/security/PublicKey
      54: ifeq          70
      57: aload         6
      59: checkcast     #46                 // class java/security/PublicKey
      62: aload_1
      63: aload_3
      64: aload         4
      66: invokestatic  #47                 // Method verify:(Ljava/security/PublicKey;Ljava/lang/String;[B[B)Z
      69: ireturn
      70: aload         5
      72: ldc           #48                 // String No PublicKey present in verification credential for signature verification
      74: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      79: new           #6                  // class org/opensaml/security/SecurityException
      82: dup
      83: ldc           #49                 // String No PublicKey supplied for signature verification
      85: invokespecial #8                  // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;)V
      88: athrow

  public static boolean verify(java.security.PublicKey, java.lang.String, byte[], byte[]) throws org.opensaml.security.SecurityException;
    Code:
       0: aload_0
       1: ldc           #50                 // String Public key cannot be null
       3: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #16                 // String JCA algorithm ID cannot be null
      10: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #51                 // String Signature data to verify cannot be null
      17: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_3
      22: ldc           #52                 // String Input data to verify cannot be null
      24: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: invokestatic  #2                  // Method getLogger:()Lorg/slf4j/Logger;
      31: astore        4
      33: aload         4
      35: ldc           #53                 // String Verifying signature over input using public key of type {} and JCA algorithm ID {}
      37: aload_0
      38: invokeinterface #54,  1           // InterfaceMethod java/security/PublicKey.getAlgorithm:()Ljava/lang/String;
      43: aload_1
      44: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      49: aload_1
      50: invokestatic  #21                 // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
      53: astore        5
      55: aload         5
      57: aload_0
      58: invokevirtual #55                 // Method java/security/Signature.initVerify:(Ljava/security/PublicKey;)V
      61: aload         5
      63: aload_3
      64: invokevirtual #23                 // Method java/security/Signature.update:([B)V
      67: aload         5
      69: aload_2
      70: invokevirtual #56                 // Method java/security/Signature.verify:([B)Z
      73: ireturn
      74: astore        5
      76: aload         4
      78: ldc           #57                 // String Error during signature verification
      80: aload         5
      82: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: new           #6                  // class org/opensaml/security/SecurityException
      90: dup
      91: ldc           #57                 // String Error during signature verification
      93: aload         5
      95: invokespecial #31                 // Method org/opensaml/security/SecurityException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      98: athrow
    Exception table:
       from    to  target type
          49    73    74   Class java/security/GeneralSecurityException

  public static boolean verifyMAC(java.security.Key, java.lang.String, byte[], byte[]) throws org.opensaml.security.SecurityException;
    Code:
       0: aload_0
       1: ldc           #32                 // String Secret key cannot be null
       3: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #16                 // String JCA algorithm ID cannot be null
      10: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #51                 // String Signature data to verify cannot be null
      17: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_3
      22: ldc           #52                 // String Input data to verify cannot be null
      24: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: invokestatic  #2                  // Method getLogger:()Lorg/slf4j/Logger;
      31: astore        4
      33: aload         4
      35: ldc           #58                 // String Verifying MAC over input using key of type {} and JCA algorithm ID {}
      37: aload_0
      38: invokeinterface #34,  1           // InterfaceMethod java/security/Key.getAlgorithm:()Ljava/lang/String;
      43: aload_1
      44: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      49: aload_0
      50: aload_1
      51: aload_3
      52: invokestatic  #9                  // Method signMAC:(Ljava/security/Key;Ljava/lang/String;[B)[B
      55: astore        5
      57: aload         5
      59: aload_2
      60: invokestatic  #59                 // Method java/util/Arrays.equals:([B[B)Z
      63: ireturn

  private static org.slf4j.Logger getLogger();
    Code:
       0: ldc_w         #60                 // class org/opensaml/security/crypto/SigningUtil
       3: invokestatic  #61                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: areturn
}
