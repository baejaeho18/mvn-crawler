Compiled from "BasicX509CredentialNameEvaluator.java"
public class org.opensaml.security.x509.impl.BasicX509CredentialNameEvaluator implements org.opensaml.security.x509.impl.X509CredentialNameEvaluator {
  private final org.slf4j.Logger log;

  private boolean checkSubjectAltNames;

  private boolean checkSubjectDNCommonName;

  private boolean checkSubjectDN;

  private java.util.Set<java.lang.Integer> subjectAltNameTypes;

  private org.opensaml.security.x509.X500DNHandler x500DNHandler;

  public org.opensaml.security.x509.impl.BasicX509CredentialNameEvaluator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class org/opensaml/security/x509/impl/BasicX509CredentialNameEvaluator
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: new           #5                  // class org/opensaml/security/x509/InternalX500DNHandler
      18: dup
      19: invokespecial #6                  // Method org/opensaml/security/x509/InternalX500DNHandler."<init>":()V
      22: putfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      25: aload_0
      26: iconst_1
      27: invokevirtual #8                  // Method setCheckSubjectAltNames:(Z)V
      30: aload_0
      31: iconst_1
      32: invokevirtual #9                  // Method setCheckSubjectDNCommonName:(Z)V
      35: aload_0
      36: iconst_1
      37: invokevirtual #10                 // Method setCheckSubjectDN:(Z)V
      40: aload_0
      41: new           #11                 // class java/util/HashSet
      44: dup
      45: iconst_2
      46: anewarray     #12                 // class java/lang/Integer
      49: dup
      50: iconst_0
      51: getstatic     #13                 // Field org/opensaml/security/x509/X509Support.DNS_ALT_NAME:Ljava/lang/Integer;
      54: aastore
      55: dup
      56: iconst_1
      57: getstatic     #14                 // Field org/opensaml/security/x509/X509Support.URI_ALT_NAME:Ljava/lang/Integer;
      60: aastore
      61: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      64: invokespecial #16                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      67: invokevirtual #17                 // Method setSubjectAltNameTypes:(Ljava/util/Set;)V
      70: return

  public boolean isNameCheckingActive();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method checkSubjectAltNames:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #19                 // Method checkSubjectDNCommonName:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #20                 // Method checkSubjectDN:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.Set<java.lang.Integer> getSubjectAltNameTypes();
    Code:
       0: aload_0
       1: getfield      #21                 // Field subjectAltNameTypes:Ljava/util/Set;
       4: invokestatic  #22                 // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public void setSubjectAltNameTypes(java.util.Set<java.lang.Integer>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: invokestatic  #23                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: putfield      #21                 // Field subjectAltNameTypes:Ljava/util/Set;
      11: goto          32
      14: aload_0
      15: new           #11                 // class java/util/HashSet
      18: dup
      19: aload_1
      20: invokestatic  #24                 // Method com/google/common/base/Predicates.notNull:()Lcom/google/common/base/Predicate;
      23: invokestatic  #25                 // Method com/google/common/collect/Collections2.filter:(Ljava/util/Collection;Lcom/google/common/base/Predicate;)Ljava/util/Collection;
      26: invokespecial #16                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      29: putfield      #21                 // Field subjectAltNameTypes:Ljava/util/Set;
      32: return

  public boolean checkSubjectAltNames();
    Code:
       0: aload_0
       1: getfield      #26                 // Field checkSubjectAltNames:Z
       4: ireturn

  public void setCheckSubjectAltNames(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field checkSubjectAltNames:Z
       5: return

  public boolean checkSubjectDNCommonName();
    Code:
       0: aload_0
       1: getfield      #27                 // Field checkSubjectDNCommonName:Z
       4: ireturn

  public void setCheckSubjectDNCommonName(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field checkSubjectDNCommonName:Z
       5: return

  public boolean checkSubjectDN();
    Code:
       0: aload_0
       1: getfield      #28                 // Field checkSubjectDN:Z
       4: ireturn

  public void setCheckSubjectDN(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field checkSubjectDN:Z
       5: return

  public org.opensaml.security.x509.X500DNHandler getX500DNHandler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
       4: areturn

  public void setX500DNHandler(org.opensaml.security.x509.X500DNHandler);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #29                 // String X500DNHandler cannot be null
       4: invokestatic  #30                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #31                 // class org/opensaml/security/x509/X500DNHandler
      10: putfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      13: return

  public boolean evaluate(org.opensaml.security.x509.X509Credential, java.util.Set<java.lang.String>) throws org.opensaml.security.SecurityException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isNameCheckingActive:()Z
       4: ifne          20
       7: aload_0
       8: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      11: ldc           #33                 // String No trusted name options are active, skipping name evaluation
      13: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      18: iconst_1
      19: ireturn
      20: aload_2
      21: ifnull        33
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      30: ifeq          46
      33: aload_0
      34: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      37: ldc           #36                 // String Supplied trusted names are null or empty, failing name evaluation
      39: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      44: iconst_0
      45: ireturn
      46: aload_0
      47: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      50: invokeinterface #37,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      55: ifeq          92
      58: aload_0
      59: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      62: ldc           #38                 // String Checking trusted names against credential: {}
      64: aload_1
      65: aload_0
      66: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      69: invokestatic  #39                 // Method org/opensaml/security/x509/X509Support.getIdentifiersToken:(Lorg/opensaml/security/x509/X509Credential;Lorg/opensaml/security/x509/X500DNHandler;)Ljava/lang/String;
      72: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      77: aload_0
      78: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      81: ldc           #41                 // String Trusted names being evaluated are: {}
      83: aload_2
      84: invokevirtual #42                 // Method java/lang/Object.toString:()Ljava/lang/String;
      87: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      92: aload_0
      93: aload_1
      94: aload_2
      95: invokevirtual #43                 // Method processNameChecks:(Lorg/opensaml/security/x509/X509Credential;Ljava/util/Set;)Z
      98: ireturn

  protected boolean processNameChecks(org.opensaml.security.x509.X509Credential, java.util.Set<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #44,  1           // InterfaceMethod org/opensaml/security/x509/X509Credential.getEntityCertificate:()Ljava/security/cert/X509Certificate;
       6: astore_3
       7: aload_0
       8: invokevirtual #18                 // Method checkSubjectAltNames:()Z
      11: ifeq          56
      14: aload_0
      15: aload_3
      16: aload_2
      17: invokevirtual #45                 // Method processSubjectAltNames:(Ljava/security/cert/X509Certificate;Ljava/util/Set;)Z
      20: ifeq          56
      23: aload_0
      24: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      27: invokeinterface #37,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      32: ifeq          54
      35: aload_0
      36: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      39: ldc           #46                 // String Credential {} passed name check based on subject alt names
      41: aload_1
      42: aload_0
      43: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      46: invokestatic  #39                 // Method org/opensaml/security/x509/X509Support.getIdentifiersToken:(Lorg/opensaml/security/x509/X509Credential;Lorg/opensaml/security/x509/X500DNHandler;)Ljava/lang/String;
      49: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      54: iconst_1
      55: ireturn
      56: aload_0
      57: invokevirtual #19                 // Method checkSubjectDNCommonName:()Z
      60: ifeq          105
      63: aload_0
      64: aload_3
      65: aload_2
      66: invokevirtual #47                 // Method processSubjectDNCommonName:(Ljava/security/cert/X509Certificate;Ljava/util/Set;)Z
      69: ifeq          105
      72: aload_0
      73: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      76: invokeinterface #37,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      81: ifeq          103
      84: aload_0
      85: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      88: ldc           #48                 // String Credential {} passed name check based on subject common name
      90: aload_1
      91: aload_0
      92: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      95: invokestatic  #39                 // Method org/opensaml/security/x509/X509Support.getIdentifiersToken:(Lorg/opensaml/security/x509/X509Credential;Lorg/opensaml/security/x509/X500DNHandler;)Ljava/lang/String;
      98: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     103: iconst_1
     104: ireturn
     105: aload_0
     106: invokevirtual #20                 // Method checkSubjectDN:()Z
     109: ifeq          154
     112: aload_0
     113: aload_3
     114: aload_2
     115: invokevirtual #49                 // Method processSubjectDN:(Ljava/security/cert/X509Certificate;Ljava/util/Set;)Z
     118: ifeq          154
     121: aload_0
     122: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     125: invokeinterface #37,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     130: ifeq          152
     133: aload_0
     134: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     137: ldc           #50                 // String Credential {} passed name check based on subject DN
     139: aload_1
     140: aload_0
     141: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
     144: invokestatic  #39                 // Method org/opensaml/security/x509/X509Support.getIdentifiersToken:(Lorg/opensaml/security/x509/X509Credential;Lorg/opensaml/security/x509/X500DNHandler;)Ljava/lang/String;
     147: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     152: iconst_1
     153: ireturn
     154: aload_0
     155: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     158: ldc           #51                 // String Credential failed name check: {}
     160: aload_1
     161: aload_0
     162: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
     165: invokestatic  #39                 // Method org/opensaml/security/x509/X509Support.getIdentifiersToken:(Lorg/opensaml/security/x509/X509Credential;Lorg/opensaml/security/x509/X500DNHandler;)Ljava/lang/String;
     168: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     173: iconst_0
     174: ireturn

  protected boolean processSubjectDNCommonName(java.security.cert.X509Certificate, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field log:Lorg/slf4j/Logger;
       4: ldc           #53                 // String Processing subject DN common name
       6: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      11: aload_1
      12: invokevirtual #54                 // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
      15: astore_3
      16: aload_3
      17: invokestatic  #55                 // Method org/opensaml/security/x509/X509Support.getCommonNames:(Ljavax/security/auth/x500/X500Principal;)Ljava/util/List;
      20: astore        4
      22: aload         4
      24: ifnull        37
      27: aload         4
      29: invokeinterface #56,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: aload         4
      41: iconst_0
      42: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #58                 // class java/lang/String
      50: astore        5
      52: aload_0
      53: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      56: ldc           #59                 // String Extracted common name from certificate: {}
      58: aload         5
      60: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      65: aload         5
      67: invokestatic  #60                 // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      70: ifne          99
      73: aload_2
      74: aload         5
      76: invokeinterface #61,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      81: ifeq          99
      84: aload_0
      85: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      88: ldc           #62                 // String Matched subject DN common name to trusted names: {}
      90: aload         5
      92: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      97: iconst_1
      98: ireturn
      99: iconst_0
     100: ireturn

  protected boolean processSubjectDN(java.security.cert.X509Certificate, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field log:Lorg/slf4j/Logger;
       4: ldc           #63                 // String Processing subject DN
       6: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      11: aload_1
      12: invokevirtual #54                 // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
      15: astore_3
      16: aload_0
      17: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      20: invokeinterface #37,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      25: ifeq          49
      28: aload_0
      29: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      32: ldc           #64                 // String Extracted X500Principal from certificate: {}
      34: aload_0
      35: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      38: aload_3
      39: invokeinterface #65,  2           // InterfaceMethod org/opensaml/security/x509/X500DNHandler.getName:(Ljavax/security/auth/x500/X500Principal;)Ljava/lang/String;
      44: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      49: aload_2
      50: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      55: astore        4
      57: aload         4
      59: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          176
      67: aload         4
      69: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #58                 // class java/lang/String
      77: astore        5
      79: aconst_null
      80: astore        6
      82: aload_0
      83: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
      86: aload         5
      88: invokeinterface #69,  2           // InterfaceMethod org/opensaml/security/x509/X500DNHandler.parse:(Ljava/lang/String;)Ljavax/security/auth/x500/X500Principal;
      93: astore        6
      95: aload_0
      96: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      99: ldc           #70                 // String Evaluating principal successfully parsed from trusted name: {}
     101: aload         5
     103: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     108: aload_3
     109: aload         6
     111: invokevirtual #71                 // Method javax/security/auth/x500/X500Principal.equals:(Ljava/lang/Object;)Z
     114: ifeq          152
     117: aload_0
     118: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     121: invokeinterface #37,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     126: ifeq          150
     129: aload_0
     130: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     133: ldc           #72                 // String Matched subject DN to trusted names: {}
     135: aload_0
     136: getfield      #7                  // Field x500DNHandler:Lorg/opensaml/security/x509/X500DNHandler;
     139: aload_3
     140: invokeinterface #65,  2           // InterfaceMethod org/opensaml/security/x509/X500DNHandler.getName:(Ljavax/security/auth/x500/X500Principal;)Ljava/lang/String;
     145: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     150: iconst_1
     151: ireturn
     152: goto          173
     155: astore        7
     157: aload_0
     158: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     161: ldc           #74                 // String Trusted name was not a DN or could not be parsed: {}
     163: aload         5
     165: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     170: goto          57
     173: goto          57
     176: iconst_0
     177: ireturn
    Exception table:
       from    to  target type
          82   151   155   Class java/lang/IllegalArgumentException

  protected boolean processSubjectAltNames(java.security.cert.X509Certificate, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field log:Lorg/slf4j/Logger;
       4: ldc           #75                 // String Processing subject alt names
       6: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      11: aload_0
      12: invokevirtual #76                 // Method getSubjectAltNameTypes:()Ljava/util/Set;
      15: invokeinterface #77,  1           // InterfaceMethod java/util/Set.size:()I
      20: anewarray     #12                 // class java/lang/Integer
      23: astore_3
      24: aload_0
      25: invokevirtual #76                 // Method getSubjectAltNameTypes:()Ljava/util/Set;
      28: aload_3
      29: invokeinterface #78,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      34: pop
      35: aload_1
      36: aload_3
      37: invokestatic  #79                 // Method org/opensaml/security/x509/X509Support.getAltNames:(Ljava/security/cert/X509Certificate;[Ljava/lang/Integer;)Ljava/util/List;
      40: astore        4
      42: aload         4
      44: ifnull        120
      47: aload_0
      48: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      51: ldc           #80                 // String Extracted subject alt names from certificate: {}
      53: aload         4
      55: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      60: aload         4
      62: invokeinterface #81,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: astore        5
      69: aload         5
      71: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          120
      79: aload         5
      81: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: astore        6
      88: aload_2
      89: aload         6
      91: invokeinterface #61,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      96: ifeq          117
      99: aload_0
     100: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     103: ldc           #82                 // String Matched subject alt name to trusted names: {}
     105: aload         6
     107: invokevirtual #42                 // Method java/lang/Object.toString:()Ljava/lang/String;
     110: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     115: iconst_1
     116: ireturn
     117: goto          69
     120: iconst_0
     121: ireturn
}
