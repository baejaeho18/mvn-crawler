Compiled from "AbstractDynamicMetadataResolver.java"
public class org.opensaml.saml.metadata.resolver.impl.AbstractDynamicMetadataResolver$EntityManagementData {
  private java.lang.String entityID;

  private org.joda.time.DateTime lastUpdateTime;

  private org.joda.time.DateTime expirationTime;

  private org.joda.time.DateTime refreshTriggerTime;

  private org.joda.time.DateTime lastAccessedTime;

  private java.util.concurrent.locks.ReadWriteLock readWriteLock;

  final org.opensaml.saml.metadata.resolver.impl.AbstractDynamicMetadataResolver this$0;

  protected org.opensaml.saml.metadata.resolver.impl.AbstractDynamicMetadataResolver$EntityManagementData(org.opensaml.saml.metadata.resolver.impl.AbstractDynamicMetadataResolver, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/opensaml/saml/metadata/resolver/impl/AbstractDynamicMetadataResolver;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: ldc           #3                  // String Entity ID was null
      13: invokestatic  #4                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #5                  // class java/lang/String
      19: putfield      #6                  // Field entityID:Ljava/lang/String;
      22: aload_0
      23: new           #7                  // class org/joda/time/DateTime
      26: dup
      27: invokestatic  #8                  // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
      30: invokespecial #9                  // Method org/joda/time/DateTime."<init>":(Lorg/joda/time/Chronology;)V
      33: aload_1
      34: invokevirtual #10                 // Method org/opensaml/saml/metadata/resolver/impl/AbstractDynamicMetadataResolver.getMaxCacheDuration:()Ljava/lang/Long;
      37: invokevirtual #11                 // Method java/lang/Long.longValue:()J
      40: invokevirtual #12                 // Method org/joda/time/DateTime.plus:(J)Lorg/joda/time/DateTime;
      43: putfield      #13                 // Field expirationTime:Lorg/joda/time/DateTime;
      46: aload_0
      47: new           #7                  // class org/joda/time/DateTime
      50: dup
      51: invokestatic  #8                  // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
      54: invokespecial #9                  // Method org/joda/time/DateTime."<init>":(Lorg/joda/time/Chronology;)V
      57: aload_1
      58: invokevirtual #10                 // Method org/opensaml/saml/metadata/resolver/impl/AbstractDynamicMetadataResolver.getMaxCacheDuration:()Ljava/lang/Long;
      61: invokevirtual #11                 // Method java/lang/Long.longValue:()J
      64: invokevirtual #12                 // Method org/joda/time/DateTime.plus:(J)Lorg/joda/time/DateTime;
      67: putfield      #14                 // Field refreshTriggerTime:Lorg/joda/time/DateTime;
      70: aload_0
      71: new           #7                  // class org/joda/time/DateTime
      74: dup
      75: invokestatic  #8                  // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
      78: invokespecial #9                  // Method org/joda/time/DateTime."<init>":(Lorg/joda/time/Chronology;)V
      81: putfield      #15                 // Field lastAccessedTime:Lorg/joda/time/DateTime;
      84: aload_0
      85: new           #16                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      88: dup
      89: iconst_1
      90: invokespecial #17                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":(Z)V
      93: putfield      #18                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
      96: return

  public java.lang.String getEntityID();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entityID:Ljava/lang/String;
       4: areturn

  public org.joda.time.DateTime getLastUpdateTime();
    Code:
       0: aload_0
       1: getfield      #19                 // Field lastUpdateTime:Lorg/joda/time/DateTime;
       4: areturn

  public void setLastUpdateTime(org.joda.time.DateTime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field lastUpdateTime:Lorg/joda/time/DateTime;
       5: return

  public org.joda.time.DateTime getExpirationTime();
    Code:
       0: aload_0
       1: getfield      #13                 // Field expirationTime:Lorg/joda/time/DateTime;
       4: areturn

  public void setExpirationTime(org.joda.time.DateTime);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String Expiration time may not be null
       4: invokestatic  #4                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #7                  // class org/joda/time/DateTime
      10: putfield      #13                 // Field expirationTime:Lorg/joda/time/DateTime;
      13: return

  public org.joda.time.DateTime getRefreshTriggerTime();
    Code:
       0: aload_0
       1: getfield      #14                 // Field refreshTriggerTime:Lorg/joda/time/DateTime;
       4: areturn

  public void setRefreshTriggerTime(org.joda.time.DateTime);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #21                 // String Refresh trigger time may not be null
       4: invokestatic  #4                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #7                  // class org/joda/time/DateTime
      10: putfield      #14                 // Field refreshTriggerTime:Lorg/joda/time/DateTime;
      13: return

  public org.joda.time.DateTime getLastAccessedTime();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lastAccessedTime:Lorg/joda/time/DateTime;
       4: areturn

  public void recordEntityAccess();
    Code:
       0: aload_0
       1: new           #7                  // class org/joda/time/DateTime
       4: dup
       5: invokestatic  #8                  // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
       8: invokespecial #9                  // Method org/joda/time/DateTime."<init>":(Lorg/joda/time/Chronology;)V
      11: putfield      #15                 // Field lastAccessedTime:Lorg/joda/time/DateTime;
      14: return

  public java.util.concurrent.locks.ReadWriteLock getReadWriteLock();
    Code:
       0: aload_0
       1: getfield      #18                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: areturn
}
