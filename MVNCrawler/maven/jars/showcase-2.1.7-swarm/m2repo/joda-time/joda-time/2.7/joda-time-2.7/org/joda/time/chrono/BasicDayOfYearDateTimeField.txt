Compiled from "BasicDayOfYearDateTimeField.java"
final class org.joda.time.chrono.BasicDayOfYearDateTimeField extends org.joda.time.field.PreciseDurationDateTimeField {
  private static final long serialVersionUID;

  private final org.joda.time.chrono.BasicChronology iChronology;

  org.joda.time.chrono.BasicDayOfYearDateTimeField(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/joda/time/DateTimeFieldType.dayOfYear:()Lorg/joda/time/DateTimeFieldType;
       4: aload_2
       5: invokespecial #2                  // Method org/joda/time/field/PreciseDurationDateTimeField."<init>":(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      13: return

  public int get(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: lload_1
       5: invokevirtual #4                  // Method org/joda/time/chrono/BasicChronology.getDayOfYear:(J)I
       8: ireturn

  public org.joda.time.DurationField getRangeDurationField();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #5                  // Method org/joda/time/chrono/BasicChronology.years:()Lorg/joda/time/DurationField;
       7: areturn

  public int getMinimumValue();
    Code:
       0: iconst_1
       1: ireturn

  public int getMaximumValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #6                  // Method org/joda/time/chrono/BasicChronology.getDaysInYearMax:()I
       7: ireturn

  public int getMaximumValue(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: lload_1
       5: invokevirtual #7                  // Method org/joda/time/chrono/BasicChronology.getYear:(J)I
       8: istore_3
       9: aload_0
      10: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      13: iload_3
      14: invokevirtual #8                  // Method org/joda/time/chrono/BasicChronology.getDaysInYear:(I)I
      17: ireturn

  public int getMaximumValue(org.joda.time.ReadablePartial);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/joda/time/DateTimeFieldType.year:()Lorg/joda/time/DateTimeFieldType;
       4: invokeinterface #10,  2           // InterfaceMethod org/joda/time/ReadablePartial.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z
       9: ifeq          31
      12: aload_1
      13: invokestatic  #9                  // Method org/joda/time/DateTimeFieldType.year:()Lorg/joda/time/DateTimeFieldType;
      16: invokeinterface #11,  2           // InterfaceMethod org/joda/time/ReadablePartial.get:(Lorg/joda/time/DateTimeFieldType;)I
      21: istore_2
      22: aload_0
      23: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      26: iload_2
      27: invokevirtual #8                  // Method org/joda/time/chrono/BasicChronology.getDaysInYear:(I)I
      30: ireturn
      31: aload_0
      32: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      35: invokevirtual #6                  // Method org/joda/time/chrono/BasicChronology.getDaysInYearMax:()I
      38: ireturn

  public int getMaximumValue(org.joda.time.ReadablePartial, int[]);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     52
      16: aload_1
      17: iload         4
      19: invokeinterface #13,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      24: invokestatic  #9                  // Method org/joda/time/DateTimeFieldType.year:()Lorg/joda/time/DateTimeFieldType;
      27: if_acmpne     46
      30: aload_2
      31: iload         4
      33: iaload
      34: istore        5
      36: aload_0
      37: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      40: iload         5
      42: invokevirtual #8                  // Method org/joda/time/chrono/BasicChronology.getDaysInYear:(I)I
      45: ireturn
      46: iinc          4, 1
      49: goto          10
      52: aload_0
      53: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      56: invokevirtual #6                  // Method org/joda/time/chrono/BasicChronology.getDaysInYearMax:()I
      59: ireturn

  protected int getMaximumValueForSet(long, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #6                  // Method org/joda/time/chrono/BasicChronology.getDaysInYearMax:()I
       7: iconst_1
       8: isub
       9: istore        4
      11: iload_3
      12: iload         4
      14: if_icmpgt     22
      17: iload_3
      18: iconst_1
      19: if_icmpge     30
      22: aload_0
      23: lload_1
      24: invokevirtual #14                 // Method getMaximumValue:(J)I
      27: goto          32
      30: iload         4
      32: ireturn

  public boolean isLeap(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: lload_1
       5: invokevirtual #15                 // Method org/joda/time/chrono/BasicChronology.isLeapDay:(J)Z
       8: ireturn

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #16                 // Method org/joda/time/chrono/BasicChronology.dayOfYear:()Lorg/joda/time/DateTimeField;
       7: areturn
}
