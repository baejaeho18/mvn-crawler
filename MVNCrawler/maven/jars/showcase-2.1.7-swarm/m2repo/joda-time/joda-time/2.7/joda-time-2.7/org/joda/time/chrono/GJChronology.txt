Compiled from "GJChronology.java"
public final class org.joda.time.chrono.GJChronology extends org.joda.time.chrono.AssembledChronology {
  private static final long serialVersionUID;

  static final org.joda.time.Instant DEFAULT_CUTOVER;

  private static final java.util.concurrent.ConcurrentHashMap<org.joda.time.chrono.GJCacheKey, org.joda.time.chrono.GJChronology> cCache;

  private org.joda.time.chrono.JulianChronology iJulianChronology;

  private org.joda.time.chrono.GregorianChronology iGregorianChronology;

  private org.joda.time.Instant iCutoverInstant;

  private long iCutoverMillis;

  private long iGapDuration;

  private static long convertByYear(long, org.joda.time.Chronology, org.joda.time.Chronology);
    Code:
       0: aload_3
       1: aload_2
       2: invokevirtual #3                  // Method org/joda/time/Chronology.year:()Lorg/joda/time/DateTimeField;
       5: lload_0
       6: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
       9: aload_2
      10: invokevirtual #5                  // Method org/joda/time/Chronology.monthOfYear:()Lorg/joda/time/DateTimeField;
      13: lload_0
      14: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      17: aload_2
      18: invokevirtual #6                  // Method org/joda/time/Chronology.dayOfMonth:()Lorg/joda/time/DateTimeField;
      21: lload_0
      22: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      25: aload_2
      26: invokevirtual #7                  // Method org/joda/time/Chronology.millisOfDay:()Lorg/joda/time/DateTimeField;
      29: lload_0
      30: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      33: invokevirtual #8                  // Method org/joda/time/Chronology.getDateTimeMillis:(IIII)J
      36: lreturn

  private static long convertByWeekyear(long, org.joda.time.Chronology, org.joda.time.Chronology);
    Code:
       0: aload_3
       1: invokevirtual #9                  // Method org/joda/time/Chronology.weekyear:()Lorg/joda/time/DateTimeField;
       4: lconst_0
       5: aload_2
       6: invokevirtual #9                  // Method org/joda/time/Chronology.weekyear:()Lorg/joda/time/DateTimeField;
       9: lload_0
      10: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      13: invokevirtual #10                 // Method org/joda/time/DateTimeField.set:(JI)J
      16: lstore        4
      18: aload_3
      19: invokevirtual #11                 // Method org/joda/time/Chronology.weekOfWeekyear:()Lorg/joda/time/DateTimeField;
      22: lload         4
      24: aload_2
      25: invokevirtual #11                 // Method org/joda/time/Chronology.weekOfWeekyear:()Lorg/joda/time/DateTimeField;
      28: lload_0
      29: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      32: invokevirtual #10                 // Method org/joda/time/DateTimeField.set:(JI)J
      35: lstore        4
      37: aload_3
      38: invokevirtual #12                 // Method org/joda/time/Chronology.dayOfWeek:()Lorg/joda/time/DateTimeField;
      41: lload         4
      43: aload_2
      44: invokevirtual #12                 // Method org/joda/time/Chronology.dayOfWeek:()Lorg/joda/time/DateTimeField;
      47: lload_0
      48: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      51: invokevirtual #10                 // Method org/joda/time/DateTimeField.set:(JI)J
      54: lstore        4
      56: aload_3
      57: invokevirtual #7                  // Method org/joda/time/Chronology.millisOfDay:()Lorg/joda/time/DateTimeField;
      60: lload         4
      62: aload_2
      63: invokevirtual #7                  // Method org/joda/time/Chronology.millisOfDay:()Lorg/joda/time/DateTimeField;
      66: lload_0
      67: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
      70: invokevirtual #10                 // Method org/joda/time/DateTimeField.set:(JI)J
      73: lstore        4
      75: lload         4
      77: lreturn

  public static org.joda.time.chrono.GJChronology getInstanceUTC();
    Code:
       0: getstatic     #13                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
       3: getstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
       6: iconst_4
       7: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
      10: areturn

  public static org.joda.time.chrono.GJChronology getInstance();
    Code:
       0: invokestatic  #16                 // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       3: getstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
       6: iconst_4
       7: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
      10: areturn

  public static org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
       4: iconst_4
       5: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
       8: areturn

  public static org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone, org.joda.time.ReadableInstant);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_4
       3: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
       6: areturn

  public static org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone, org.joda.time.ReadableInstant, int);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method org/joda/time/DateTimeUtils.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;
       4: astore_0
       5: aload_1
       6: ifnonnull     16
       9: getstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
      12: astore_3
      13: goto          58
      16: aload_1
      17: invokeinterface #18,  1           // InterfaceMethod org/joda/time/ReadableInstant.toInstant:()Lorg/joda/time/Instant;
      22: astore_3
      23: new           #19                 // class org/joda/time/LocalDate
      26: dup
      27: aload_3
      28: invokevirtual #20                 // Method org/joda/time/Instant.getMillis:()J
      31: aload_0
      32: invokestatic  #21                 // Method org/joda/time/chrono/GregorianChronology.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/GregorianChronology;
      35: invokespecial #22                 // Method org/joda/time/LocalDate."<init>":(JLorg/joda/time/Chronology;)V
      38: astore        4
      40: aload         4
      42: invokevirtual #23                 // Method org/joda/time/LocalDate.getYear:()I
      45: ifgt          58
      48: new           #24                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #25                 // String Cutover too early. Must be on or after 0001-01-01.
      54: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: new           #27                 // class org/joda/time/chrono/GJCacheKey
      61: dup
      62: aload_0
      63: aload_3
      64: iload_2
      65: invokespecial #28                 // Method org/joda/time/chrono/GJCacheKey."<init>":(Lorg/joda/time/DateTimeZone;Lorg/joda/time/Instant;I)V
      68: astore        4
      70: getstatic     #29                 // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      73: aload         4
      75: invokevirtual #30                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #31                 // class org/joda/time/chrono/GJChronology
      81: astore        5
      83: aload         5
      85: ifnonnull     182
      88: aload_0
      89: getstatic     #13                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
      92: if_acmpne     118
      95: new           #31                 // class org/joda/time/chrono/GJChronology
      98: dup
      99: aload_0
     100: iload_2
     101: invokestatic  #32                 // Method org/joda/time/chrono/JulianChronology.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/JulianChronology;
     104: aload_0
     105: iload_2
     106: invokestatic  #33                 // Method org/joda/time/chrono/GregorianChronology.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;
     109: aload_3
     110: invokespecial #34                 // Method "<init>":(Lorg/joda/time/chrono/JulianChronology;Lorg/joda/time/chrono/GregorianChronology;Lorg/joda/time/Instant;)V
     113: astore        5
     115: goto          158
     118: getstatic     #13                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
     121: aload_3
     122: iload_2
     123: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
     126: astore        5
     128: new           #31                 // class org/joda/time/chrono/GJChronology
     131: dup
     132: aload         5
     134: aload_0
     135: invokestatic  #35                 // Method org/joda/time/chrono/ZonedChronology.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ZonedChronology;
     138: aload         5
     140: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
     143: aload         5
     145: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
     148: aload         5
     150: getfield      #37                 // Field iCutoverInstant:Lorg/joda/time/Instant;
     153: invokespecial #38                 // Method "<init>":(Lorg/joda/time/Chronology;Lorg/joda/time/chrono/JulianChronology;Lorg/joda/time/chrono/GregorianChronology;Lorg/joda/time/Instant;)V
     156: astore        5
     158: getstatic     #29                 // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
     161: aload         4
     163: aload         5
     165: invokevirtual #39                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: checkcast     #31                 // class org/joda/time/chrono/GJChronology
     171: astore        6
     173: aload         6
     175: ifnull        182
     178: aload         6
     180: astore        5
     182: aload         5
     184: areturn

  public static org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone, long, int);
    Code:
       0: lload_1
       1: getstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
       4: invokevirtual #20                 // Method org/joda/time/Instant.getMillis:()J
       7: lcmp
       8: ifne          17
      11: aconst_null
      12: astore        4
      14: goto          27
      17: new           #40                 // class org/joda/time/Instant
      20: dup
      21: lload_1
      22: invokespecial #41                 // Method org/joda/time/Instant."<init>":(J)V
      25: astore        4
      27: aload_0
      28: aload         4
      30: iload_3
      31: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
      34: areturn

  private org.joda.time.chrono.GJChronology(org.joda.time.chrono.JulianChronology, org.joda.time.chrono.GregorianChronology, org.joda.time.Instant);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_3
       3: anewarray     #42                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: dup
      11: iconst_1
      12: aload_2
      13: aastore
      14: dup
      15: iconst_2
      16: aload_3
      17: aastore
      18: invokespecial #43                 // Method org/joda/time/chrono/AssembledChronology."<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
      21: return

  private org.joda.time.chrono.GJChronology(org.joda.time.Chronology, org.joda.time.chrono.JulianChronology, org.joda.time.chrono.GregorianChronology, org.joda.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_3
       3: anewarray     #42                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: dup
      11: iconst_1
      12: aload_3
      13: aastore
      14: dup
      15: iconst_2
      16: aload         4
      18: aastore
      19: invokespecial #43                 // Method org/joda/time/chrono/AssembledChronology."<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
      22: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getZone:()Lorg/joda/time/DateTimeZone;
       4: aload_0
       5: getfield      #37                 // Field iCutoverInstant:Lorg/joda/time/Instant;
       8: aload_0
       9: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
      12: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
      15: areturn

  public org.joda.time.DateTimeZone getZone();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getBase:()Lorg/joda/time/Chronology;
       4: dup
       5: astore_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #47                 // Method org/joda/time/Chronology.getZone:()Lorg/joda/time/DateTimeZone;
      13: areturn
      14: getstatic     #13                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
      17: areturn

  public org.joda.time.Chronology withUTC();
    Code:
       0: aload_0
       1: getstatic     #13                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
       4: invokevirtual #48                 // Method withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;
       7: areturn

  public org.joda.time.Chronology withZone(org.joda.time.DateTimeZone);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #16                 // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #44                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      13: if_acmpne     18
      16: aload_0
      17: areturn
      18: aload_1
      19: aload_0
      20: getfield      #37                 // Field iCutoverInstant:Lorg/joda/time/Instant;
      23: aload_0
      24: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
      27: invokestatic  #15                 // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;
      30: areturn

  public long getDateTimeMillis(int, int, int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getBase:()Lorg/joda/time/Chronology;
       4: dup
       5: astore        5
       7: ifnull        21
      10: aload         5
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: invokevirtual #8                  // Method org/joda/time/Chronology.getDateTimeMillis:(IIII)J
      20: lreturn
      21: aload_0
      22: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
      25: iload_1
      26: iload_2
      27: iload_3
      28: iload         4
      30: invokevirtual #49                 // Method org/joda/time/chrono/GregorianChronology.getDateTimeMillis:(IIII)J
      33: lstore        6
      35: lload         6
      37: aload_0
      38: getfield      #50                 // Field iCutoverMillis:J
      41: lcmp
      42: ifge          79
      45: aload_0
      46: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
      49: iload_1
      50: iload_2
      51: iload_3
      52: iload         4
      54: invokevirtual #51                 // Method org/joda/time/chrono/JulianChronology.getDateTimeMillis:(IIII)J
      57: lstore        6
      59: lload         6
      61: aload_0
      62: getfield      #50                 // Field iCutoverMillis:J
      65: lcmp
      66: iflt          79
      69: new           #24                 // class java/lang/IllegalArgumentException
      72: dup
      73: ldc           #52                 // String Specified date does not exist
      75: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: lload         6
      81: lreturn

  public long getDateTimeMillis(int, int, int, int, int, int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getBase:()Lorg/joda/time/Chronology;
       4: dup
       5: astore        8
       7: ifnull        27
      10: aload         8
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: iload         6
      21: iload         7
      23: invokevirtual #53                 // Method org/joda/time/Chronology.getDateTimeMillis:(IIIIIII)J
      26: lreturn
      27: aload_0
      28: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
      31: iload_1
      32: iload_2
      33: iload_3
      34: iload         4
      36: iload         5
      38: iload         6
      40: iload         7
      42: invokevirtual #54                 // Method org/joda/time/chrono/GregorianChronology.getDateTimeMillis:(IIIIIII)J
      45: lstore        9
      47: goto          100
      50: astore        11
      52: iload_2
      53: iconst_2
      54: if_icmpne     63
      57: iload_3
      58: bipush        29
      60: if_icmpeq     66
      63: aload         11
      65: athrow
      66: aload_0
      67: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
      70: iload_1
      71: iload_2
      72: bipush        28
      74: iload         4
      76: iload         5
      78: iload         6
      80: iload         7
      82: invokevirtual #54                 // Method org/joda/time/chrono/GregorianChronology.getDateTimeMillis:(IIIIIII)J
      85: lstore        9
      87: lload         9
      89: aload_0
      90: getfield      #50                 // Field iCutoverMillis:J
      93: lcmp
      94: iflt          100
      97: aload         11
      99: athrow
     100: lload         9
     102: aload_0
     103: getfield      #50                 // Field iCutoverMillis:J
     106: lcmp
     107: ifge          150
     110: aload_0
     111: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
     114: iload_1
     115: iload_2
     116: iload_3
     117: iload         4
     119: iload         5
     121: iload         6
     123: iload         7
     125: invokevirtual #56                 // Method org/joda/time/chrono/JulianChronology.getDateTimeMillis:(IIIIIII)J
     128: lstore        9
     130: lload         9
     132: aload_0
     133: getfield      #50                 // Field iCutoverMillis:J
     136: lcmp
     137: iflt          150
     140: new           #24                 // class java/lang/IllegalArgumentException
     143: dup
     144: ldc           #52                 // String Specified date does not exist
     146: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: lload         9
     152: lreturn
    Exception table:
       from    to  target type
          27    47    50   Class org/joda/time/IllegalFieldValueException

  public org.joda.time.Instant getGregorianCutover();
    Code:
       0: aload_0
       1: getfield      #37                 // Field iCutoverInstant:Lorg/joda/time/Instant;
       4: areturn

  public int getMinimumDaysInFirstWeek();
    Code:
       0: aload_0
       1: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
       4: invokevirtual #57                 // Method org/joda/time/chrono/GregorianChronology.getMinimumDaysInFirstWeek:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #31                 // class org/joda/time/chrono/GJChronology
      11: ifeq          62
      14: aload_1
      15: checkcast     #31                 // class org/joda/time/chrono/GJChronology
      18: astore_2
      19: aload_0
      20: getfield      #50                 // Field iCutoverMillis:J
      23: aload_2
      24: getfield      #50                 // Field iCutoverMillis:J
      27: lcmp
      28: ifne          60
      31: aload_0
      32: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
      35: aload_2
      36: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
      39: if_icmpne     60
      42: aload_0
      43: invokevirtual #44                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      46: aload_2
      47: invokevirtual #44                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      50: invokevirtual #58                 // Method org/joda/time/DateTimeZone.equals:(Ljava/lang/Object;)Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn
      62: iconst_0
      63: ireturn

  public int hashCode();
    Code:
       0: ldc           #59                 // String GJ
       2: invokevirtual #60                 // Method java/lang/String.hashCode:()I
       5: bipush        11
       7: imul
       8: aload_0
       9: invokevirtual #44                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      12: invokevirtual #61                 // Method org/joda/time/DateTimeZone.hashCode:()I
      15: iadd
      16: aload_0
      17: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
      20: iadd
      21: aload_0
      22: getfield      #37                 // Field iCutoverInstant:Lorg/joda/time/Instant;
      25: invokevirtual #62                 // Method org/joda/time/Instant.hashCode:()I
      28: iadd
      29: ireturn

  public java.lang.String toString();
    Code:
       0: new           #63                 // class java/lang/StringBuffer
       3: dup
       4: bipush        60
       6: invokespecial #64                 // Method java/lang/StringBuffer."<init>":(I)V
       9: astore_1
      10: aload_1
      11: ldc           #65                 // String GJChronology
      13: invokevirtual #66                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: bipush        91
      20: invokevirtual #67                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: invokevirtual #44                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      29: invokevirtual #68                 // Method org/joda/time/DateTimeZone.getID:()Ljava/lang/String;
      32: invokevirtual #66                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: pop
      36: aload_0
      37: getfield      #50                 // Field iCutoverMillis:J
      40: getstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
      43: invokevirtual #20                 // Method org/joda/time/Instant.getMillis:()J
      46: lcmp
      47: ifeq          103
      50: aload_1
      51: ldc           #69                 // String ,cutover=
      53: invokevirtual #66                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: pop
      57: aload_0
      58: invokevirtual #70                 // Method withUTC:()Lorg/joda/time/Chronology;
      61: invokevirtual #71                 // Method org/joda/time/Chronology.dayOfYear:()Lorg/joda/time/DateTimeField;
      64: aload_0
      65: getfield      #50                 // Field iCutoverMillis:J
      68: invokevirtual #72                 // Method org/joda/time/DateTimeField.remainder:(J)J
      71: lconst_0
      72: lcmp
      73: ifne          83
      76: invokestatic  #73                 // Method org/joda/time/format/ISODateTimeFormat.date:()Lorg/joda/time/format/DateTimeFormatter;
      79: astore_2
      80: goto          87
      83: invokestatic  #74                 // Method org/joda/time/format/ISODateTimeFormat.dateTime:()Lorg/joda/time/format/DateTimeFormatter;
      86: astore_2
      87: aload_2
      88: aload_0
      89: invokevirtual #70                 // Method withUTC:()Lorg/joda/time/Chronology;
      92: invokevirtual #75                 // Method org/joda/time/format/DateTimeFormatter.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;
      95: aload_1
      96: aload_0
      97: getfield      #50                 // Field iCutoverMillis:J
     100: invokevirtual #76                 // Method org/joda/time/format/DateTimeFormatter.printTo:(Ljava/lang/StringBuffer;J)V
     103: aload_0
     104: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
     107: iconst_4
     108: if_icmpeq     127
     111: aload_1
     112: ldc           #77                 // String ,mdfw=
     114: invokevirtual #66                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     117: pop
     118: aload_1
     119: aload_0
     120: invokevirtual #45                 // Method getMinimumDaysInFirstWeek:()I
     123: invokevirtual #78                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     126: pop
     127: aload_1
     128: bipush        93
     130: invokevirtual #67                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     133: pop
     134: aload_1
     135: invokevirtual #79                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     138: areturn

  protected void assemble(org.joda.time.chrono.AssembledChronology$Fields);
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getParam:()Ljava/lang/Object;
       4: checkcast     #81                 // class "[Ljava/lang/Object;"
       7: checkcast     #81                 // class "[Ljava/lang/Object;"
      10: astore_2
      11: aload_2
      12: iconst_0
      13: aaload
      14: checkcast     #82                 // class org/joda/time/chrono/JulianChronology
      17: astore_3
      18: aload_2
      19: iconst_1
      20: aaload
      21: checkcast     #83                 // class org/joda/time/chrono/GregorianChronology
      24: astore        4
      26: aload_2
      27: iconst_2
      28: aaload
      29: checkcast     #40                 // class org/joda/time/Instant
      32: astore        5
      34: aload_0
      35: aload         5
      37: invokevirtual #20                 // Method org/joda/time/Instant.getMillis:()J
      40: putfield      #50                 // Field iCutoverMillis:J
      43: aload_0
      44: aload_3
      45: putfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
      48: aload_0
      49: aload         4
      51: putfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
      54: aload_0
      55: aload         5
      57: putfield      #37                 // Field iCutoverInstant:Lorg/joda/time/Instant;
      60: aload_0
      61: invokevirtual #46                 // Method getBase:()Lorg/joda/time/Chronology;
      64: ifnull        68
      67: return
      68: aload_3
      69: invokevirtual #84                 // Method org/joda/time/chrono/JulianChronology.getMinimumDaysInFirstWeek:()I
      72: aload         4
      74: invokevirtual #57                 // Method org/joda/time/chrono/GregorianChronology.getMinimumDaysInFirstWeek:()I
      77: if_icmpeq     88
      80: new           #24                 // class java/lang/IllegalArgumentException
      83: dup
      84: invokespecial #85                 // Method java/lang/IllegalArgumentException."<init>":()V
      87: athrow
      88: aload_0
      89: aload_0
      90: getfield      #50                 // Field iCutoverMillis:J
      93: aload_0
      94: aload_0
      95: getfield      #50                 // Field iCutoverMillis:J
      98: invokevirtual #86                 // Method julianToGregorianByYear:(J)J
     101: lsub
     102: putfield      #2                  // Field iGapDuration:J
     105: aload_1
     106: aload         4
     108: invokevirtual #87                 // Method org/joda/time/chrono/AssembledChronology$Fields.copyFieldsFrom:(Lorg/joda/time/Chronology;)V
     111: aload         4
     113: invokevirtual #88                 // Method org/joda/time/chrono/GregorianChronology.millisOfDay:()Lorg/joda/time/DateTimeField;
     116: aload_0
     117: getfield      #50                 // Field iCutoverMillis:J
     120: invokevirtual #4                  // Method org/joda/time/DateTimeField.get:(J)I
     123: ifne          390
     126: aload_1
     127: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     130: dup
     131: aload_0
     132: aload_3
     133: invokevirtual #90                 // Method org/joda/time/chrono/JulianChronology.millisOfSecond:()Lorg/joda/time/DateTimeField;
     136: aload_1
     137: getfield      #91                 // Field org/joda/time/chrono/AssembledChronology$Fields.millisOfSecond:Lorg/joda/time/DateTimeField;
     140: aload_0
     141: getfield      #50                 // Field iCutoverMillis:J
     144: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     147: putfield      #91                 // Field org/joda/time/chrono/AssembledChronology$Fields.millisOfSecond:Lorg/joda/time/DateTimeField;
     150: aload_1
     151: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     154: dup
     155: aload_0
     156: aload_3
     157: invokevirtual #93                 // Method org/joda/time/chrono/JulianChronology.millisOfDay:()Lorg/joda/time/DateTimeField;
     160: aload_1
     161: getfield      #94                 // Field org/joda/time/chrono/AssembledChronology$Fields.millisOfDay:Lorg/joda/time/DateTimeField;
     164: aload_0
     165: getfield      #50                 // Field iCutoverMillis:J
     168: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     171: putfield      #94                 // Field org/joda/time/chrono/AssembledChronology$Fields.millisOfDay:Lorg/joda/time/DateTimeField;
     174: aload_1
     175: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     178: dup
     179: aload_0
     180: aload_3
     181: invokevirtual #95                 // Method org/joda/time/chrono/JulianChronology.secondOfMinute:()Lorg/joda/time/DateTimeField;
     184: aload_1
     185: getfield      #96                 // Field org/joda/time/chrono/AssembledChronology$Fields.secondOfMinute:Lorg/joda/time/DateTimeField;
     188: aload_0
     189: getfield      #50                 // Field iCutoverMillis:J
     192: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     195: putfield      #96                 // Field org/joda/time/chrono/AssembledChronology$Fields.secondOfMinute:Lorg/joda/time/DateTimeField;
     198: aload_1
     199: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     202: dup
     203: aload_0
     204: aload_3
     205: invokevirtual #97                 // Method org/joda/time/chrono/JulianChronology.secondOfDay:()Lorg/joda/time/DateTimeField;
     208: aload_1
     209: getfield      #98                 // Field org/joda/time/chrono/AssembledChronology$Fields.secondOfDay:Lorg/joda/time/DateTimeField;
     212: aload_0
     213: getfield      #50                 // Field iCutoverMillis:J
     216: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     219: putfield      #98                 // Field org/joda/time/chrono/AssembledChronology$Fields.secondOfDay:Lorg/joda/time/DateTimeField;
     222: aload_1
     223: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     226: dup
     227: aload_0
     228: aload_3
     229: invokevirtual #99                 // Method org/joda/time/chrono/JulianChronology.minuteOfHour:()Lorg/joda/time/DateTimeField;
     232: aload_1
     233: getfield      #100                // Field org/joda/time/chrono/AssembledChronology$Fields.minuteOfHour:Lorg/joda/time/DateTimeField;
     236: aload_0
     237: getfield      #50                 // Field iCutoverMillis:J
     240: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     243: putfield      #100                // Field org/joda/time/chrono/AssembledChronology$Fields.minuteOfHour:Lorg/joda/time/DateTimeField;
     246: aload_1
     247: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     250: dup
     251: aload_0
     252: aload_3
     253: invokevirtual #101                // Method org/joda/time/chrono/JulianChronology.minuteOfDay:()Lorg/joda/time/DateTimeField;
     256: aload_1
     257: getfield      #102                // Field org/joda/time/chrono/AssembledChronology$Fields.minuteOfDay:Lorg/joda/time/DateTimeField;
     260: aload_0
     261: getfield      #50                 // Field iCutoverMillis:J
     264: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     267: putfield      #102                // Field org/joda/time/chrono/AssembledChronology$Fields.minuteOfDay:Lorg/joda/time/DateTimeField;
     270: aload_1
     271: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     274: dup
     275: aload_0
     276: aload_3
     277: invokevirtual #103                // Method org/joda/time/chrono/JulianChronology.hourOfDay:()Lorg/joda/time/DateTimeField;
     280: aload_1
     281: getfield      #104                // Field org/joda/time/chrono/AssembledChronology$Fields.hourOfDay:Lorg/joda/time/DateTimeField;
     284: aload_0
     285: getfield      #50                 // Field iCutoverMillis:J
     288: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     291: putfield      #104                // Field org/joda/time/chrono/AssembledChronology$Fields.hourOfDay:Lorg/joda/time/DateTimeField;
     294: aload_1
     295: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     298: dup
     299: aload_0
     300: aload_3
     301: invokevirtual #105                // Method org/joda/time/chrono/JulianChronology.hourOfHalfday:()Lorg/joda/time/DateTimeField;
     304: aload_1
     305: getfield      #106                // Field org/joda/time/chrono/AssembledChronology$Fields.hourOfHalfday:Lorg/joda/time/DateTimeField;
     308: aload_0
     309: getfield      #50                 // Field iCutoverMillis:J
     312: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     315: putfield      #106                // Field org/joda/time/chrono/AssembledChronology$Fields.hourOfHalfday:Lorg/joda/time/DateTimeField;
     318: aload_1
     319: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     322: dup
     323: aload_0
     324: aload_3
     325: invokevirtual #107                // Method org/joda/time/chrono/JulianChronology.clockhourOfDay:()Lorg/joda/time/DateTimeField;
     328: aload_1
     329: getfield      #108                // Field org/joda/time/chrono/AssembledChronology$Fields.clockhourOfDay:Lorg/joda/time/DateTimeField;
     332: aload_0
     333: getfield      #50                 // Field iCutoverMillis:J
     336: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     339: putfield      #108                // Field org/joda/time/chrono/AssembledChronology$Fields.clockhourOfDay:Lorg/joda/time/DateTimeField;
     342: aload_1
     343: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     346: dup
     347: aload_0
     348: aload_3
     349: invokevirtual #109                // Method org/joda/time/chrono/JulianChronology.clockhourOfHalfday:()Lorg/joda/time/DateTimeField;
     352: aload_1
     353: getfield      #110                // Field org/joda/time/chrono/AssembledChronology$Fields.clockhourOfHalfday:Lorg/joda/time/DateTimeField;
     356: aload_0
     357: getfield      #50                 // Field iCutoverMillis:J
     360: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     363: putfield      #110                // Field org/joda/time/chrono/AssembledChronology$Fields.clockhourOfHalfday:Lorg/joda/time/DateTimeField;
     366: aload_1
     367: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     370: dup
     371: aload_0
     372: aload_3
     373: invokevirtual #111                // Method org/joda/time/chrono/JulianChronology.halfdayOfDay:()Lorg/joda/time/DateTimeField;
     376: aload_1
     377: getfield      #112                // Field org/joda/time/chrono/AssembledChronology$Fields.halfdayOfDay:Lorg/joda/time/DateTimeField;
     380: aload_0
     381: getfield      #50                 // Field iCutoverMillis:J
     384: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     387: putfield      #112                // Field org/joda/time/chrono/AssembledChronology$Fields.halfdayOfDay:Lorg/joda/time/DateTimeField;
     390: aload_1
     391: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     394: dup
     395: aload_0
     396: aload_3
     397: invokevirtual #113                // Method org/joda/time/chrono/JulianChronology.era:()Lorg/joda/time/DateTimeField;
     400: aload_1
     401: getfield      #114                // Field org/joda/time/chrono/AssembledChronology$Fields.era:Lorg/joda/time/DateTimeField;
     404: aload_0
     405: getfield      #50                 // Field iCutoverMillis:J
     408: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     411: putfield      #114                // Field org/joda/time/chrono/AssembledChronology$Fields.era:Lorg/joda/time/DateTimeField;
     414: aload_1
     415: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     418: dup
     419: aload_0
     420: aload_3
     421: invokevirtual #116                // Method org/joda/time/chrono/JulianChronology.year:()Lorg/joda/time/DateTimeField;
     424: aload_1
     425: getfield      #117                // Field org/joda/time/chrono/AssembledChronology$Fields.year:Lorg/joda/time/DateTimeField;
     428: aload_0
     429: getfield      #50                 // Field iCutoverMillis:J
     432: invokespecial #118                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     435: putfield      #117                // Field org/joda/time/chrono/AssembledChronology$Fields.year:Lorg/joda/time/DateTimeField;
     438: aload_1
     439: aload_1
     440: getfield      #117                // Field org/joda/time/chrono/AssembledChronology$Fields.year:Lorg/joda/time/DateTimeField;
     443: invokevirtual #119                // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
     446: putfield      #120                // Field org/joda/time/chrono/AssembledChronology$Fields.years:Lorg/joda/time/DurationField;
     449: aload_1
     450: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     453: dup
     454: aload_0
     455: aload_3
     456: invokevirtual #121                // Method org/joda/time/chrono/JulianChronology.yearOfEra:()Lorg/joda/time/DateTimeField;
     459: aload_1
     460: getfield      #122                // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfEra:Lorg/joda/time/DateTimeField;
     463: aload_1
     464: getfield      #120                // Field org/joda/time/chrono/AssembledChronology$Fields.years:Lorg/joda/time/DurationField;
     467: aload_0
     468: getfield      #50                 // Field iCutoverMillis:J
     471: invokespecial #123                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;J)V
     474: putfield      #122                // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfEra:Lorg/joda/time/DateTimeField;
     477: aload_1
     478: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     481: dup
     482: aload_0
     483: aload_3
     484: invokevirtual #124                // Method org/joda/time/chrono/JulianChronology.centuryOfEra:()Lorg/joda/time/DateTimeField;
     487: aload_1
     488: getfield      #125                // Field org/joda/time/chrono/AssembledChronology$Fields.centuryOfEra:Lorg/joda/time/DateTimeField;
     491: aload_0
     492: getfield      #50                 // Field iCutoverMillis:J
     495: invokespecial #118                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     498: putfield      #125                // Field org/joda/time/chrono/AssembledChronology$Fields.centuryOfEra:Lorg/joda/time/DateTimeField;
     501: aload_1
     502: aload_1
     503: getfield      #125                // Field org/joda/time/chrono/AssembledChronology$Fields.centuryOfEra:Lorg/joda/time/DateTimeField;
     506: invokevirtual #119                // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
     509: putfield      #126                // Field org/joda/time/chrono/AssembledChronology$Fields.centuries:Lorg/joda/time/DurationField;
     512: aload_1
     513: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     516: dup
     517: aload_0
     518: aload_3
     519: invokevirtual #127                // Method org/joda/time/chrono/JulianChronology.yearOfCentury:()Lorg/joda/time/DateTimeField;
     522: aload_1
     523: getfield      #128                // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfCentury:Lorg/joda/time/DateTimeField;
     526: aload_1
     527: getfield      #120                // Field org/joda/time/chrono/AssembledChronology$Fields.years:Lorg/joda/time/DurationField;
     530: aload_1
     531: getfield      #126                // Field org/joda/time/chrono/AssembledChronology$Fields.centuries:Lorg/joda/time/DurationField;
     534: aload_0
     535: getfield      #50                 // Field iCutoverMillis:J
     538: invokespecial #129                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;J)V
     541: putfield      #128                // Field org/joda/time/chrono/AssembledChronology$Fields.yearOfCentury:Lorg/joda/time/DateTimeField;
     544: aload_1
     545: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     548: dup
     549: aload_0
     550: aload_3
     551: invokevirtual #130                // Method org/joda/time/chrono/JulianChronology.monthOfYear:()Lorg/joda/time/DateTimeField;
     554: aload_1
     555: getfield      #131                // Field org/joda/time/chrono/AssembledChronology$Fields.monthOfYear:Lorg/joda/time/DateTimeField;
     558: aconst_null
     559: aload_1
     560: getfield      #120                // Field org/joda/time/chrono/AssembledChronology$Fields.years:Lorg/joda/time/DurationField;
     563: aload_0
     564: getfield      #50                 // Field iCutoverMillis:J
     567: invokespecial #129                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;J)V
     570: putfield      #131                // Field org/joda/time/chrono/AssembledChronology$Fields.monthOfYear:Lorg/joda/time/DateTimeField;
     573: aload_1
     574: aload_1
     575: getfield      #131                // Field org/joda/time/chrono/AssembledChronology$Fields.monthOfYear:Lorg/joda/time/DateTimeField;
     578: invokevirtual #119                // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
     581: putfield      #132                // Field org/joda/time/chrono/AssembledChronology$Fields.months:Lorg/joda/time/DurationField;
     584: aload_1
     585: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     588: dup
     589: aload_0
     590: aload_3
     591: invokevirtual #133                // Method org/joda/time/chrono/JulianChronology.weekyear:()Lorg/joda/time/DateTimeField;
     594: aload_1
     595: getfield      #134                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyear:Lorg/joda/time/DateTimeField;
     598: aconst_null
     599: aload_0
     600: getfield      #50                 // Field iCutoverMillis:J
     603: iconst_1
     604: invokespecial #135                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;JZ)V
     607: putfield      #134                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyear:Lorg/joda/time/DateTimeField;
     610: aload_1
     611: aload_1
     612: getfield      #134                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyear:Lorg/joda/time/DateTimeField;
     615: invokevirtual #119                // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
     618: putfield      #136                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyears:Lorg/joda/time/DurationField;
     621: aload_1
     622: new           #115                // class org/joda/time/chrono/GJChronology$ImpreciseCutoverField
     625: dup
     626: aload_0
     627: aload_3
     628: invokevirtual #137                // Method org/joda/time/chrono/JulianChronology.weekyearOfCentury:()Lorg/joda/time/DateTimeField;
     631: aload_1
     632: getfield      #138                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyearOfCentury:Lorg/joda/time/DateTimeField;
     635: aload_1
     636: getfield      #136                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyears:Lorg/joda/time/DurationField;
     639: aload_1
     640: getfield      #126                // Field org/joda/time/chrono/AssembledChronology$Fields.centuries:Lorg/joda/time/DurationField;
     643: aload_0
     644: getfield      #50                 // Field iCutoverMillis:J
     647: invokespecial #129                // Method org/joda/time/chrono/GJChronology$ImpreciseCutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;J)V
     650: putfield      #138                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyearOfCentury:Lorg/joda/time/DateTimeField;
     653: aload         4
     655: invokevirtual #139                // Method org/joda/time/chrono/GregorianChronology.year:()Lorg/joda/time/DateTimeField;
     658: aload_0
     659: getfield      #50                 // Field iCutoverMillis:J
     662: invokevirtual #140                // Method org/joda/time/DateTimeField.roundCeiling:(J)J
     665: lstore        6
     667: aload_1
     668: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     671: dup
     672: aload_0
     673: aload_3
     674: invokevirtual #141                // Method org/joda/time/chrono/JulianChronology.dayOfYear:()Lorg/joda/time/DateTimeField;
     677: aload_1
     678: getfield      #142                // Field org/joda/time/chrono/AssembledChronology$Fields.dayOfYear:Lorg/joda/time/DateTimeField;
     681: aload_1
     682: getfield      #120                // Field org/joda/time/chrono/AssembledChronology$Fields.years:Lorg/joda/time/DurationField;
     685: lload         6
     687: iconst_0
     688: invokespecial #143                // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;JZ)V
     691: putfield      #142                // Field org/joda/time/chrono/AssembledChronology$Fields.dayOfYear:Lorg/joda/time/DateTimeField;
     694: aload         4
     696: invokevirtual #144                // Method org/joda/time/chrono/GregorianChronology.weekyear:()Lorg/joda/time/DateTimeField;
     699: aload_0
     700: getfield      #50                 // Field iCutoverMillis:J
     703: invokevirtual #140                // Method org/joda/time/DateTimeField.roundCeiling:(J)J
     706: lstore        6
     708: aload_1
     709: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     712: dup
     713: aload_0
     714: aload_3
     715: invokevirtual #145                // Method org/joda/time/chrono/JulianChronology.weekOfWeekyear:()Lorg/joda/time/DateTimeField;
     718: aload_1
     719: getfield      #146                // Field org/joda/time/chrono/AssembledChronology$Fields.weekOfWeekyear:Lorg/joda/time/DateTimeField;
     722: aload_1
     723: getfield      #136                // Field org/joda/time/chrono/AssembledChronology$Fields.weekyears:Lorg/joda/time/DurationField;
     726: lload         6
     728: iconst_1
     729: invokespecial #143                // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;JZ)V
     732: putfield      #146                // Field org/joda/time/chrono/AssembledChronology$Fields.weekOfWeekyear:Lorg/joda/time/DateTimeField;
     735: new           #89                 // class org/joda/time/chrono/GJChronology$CutoverField
     738: dup
     739: aload_0
     740: aload_3
     741: invokevirtual #147                // Method org/joda/time/chrono/JulianChronology.dayOfMonth:()Lorg/joda/time/DateTimeField;
     744: aload_1
     745: getfield      #148                // Field org/joda/time/chrono/AssembledChronology$Fields.dayOfMonth:Lorg/joda/time/DateTimeField;
     748: aload_0
     749: getfield      #50                 // Field iCutoverMillis:J
     752: invokespecial #92                 // Method org/joda/time/chrono/GJChronology$CutoverField."<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V
     755: astore        6
     757: aload         6
     759: aload_1
     760: getfield      #132                // Field org/joda/time/chrono/AssembledChronology$Fields.months:Lorg/joda/time/DurationField;
     763: putfield      #149                // Field org/joda/time/chrono/GJChronology$CutoverField.iRangeDurationField:Lorg/joda/time/DurationField;
     766: aload_1
     767: aload         6
     769: putfield      #148                // Field org/joda/time/chrono/AssembledChronology$Fields.dayOfMonth:Lorg/joda/time/DateTimeField;
     772: return

  long julianToGregorianByYear(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
       5: aload_0
       6: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
       9: invokestatic  #150                // Method convertByYear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J
      12: lreturn

  long gregorianToJulianByYear(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
       5: aload_0
       6: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
       9: invokestatic  #150                // Method convertByYear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J
      12: lreturn

  long julianToGregorianByWeekyear(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
       5: aload_0
       6: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
       9: invokestatic  #151                // Method convertByWeekyear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J
      12: lreturn

  long gregorianToJulianByWeekyear(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
       5: aload_0
       6: getfield      #36                 // Field iJulianChronology:Lorg/joda/time/chrono/JulianChronology;
       9: invokestatic  #151                // Method convertByWeekyear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J
      12: lreturn

  static long access$000(org.joda.time.chrono.GJChronology);
    Code:
       0: aload_0
       1: getfield      #2                  // Field iGapDuration:J
       4: lreturn

  static org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology);
    Code:
       0: aload_0
       1: getfield      #1                  // Field iGregorianChronology:Lorg/joda/time/chrono/GregorianChronology;
       4: areturn

  static {};
    Code:
       0: new           #40                 // class org/joda/time/Instant
       3: dup
       4: ldc2_w        #152                // long -12219292800000l
       7: invokespecial #41                 // Method org/joda/time/Instant."<init>":(J)V
      10: putstatic     #14                 // Field DEFAULT_CUTOVER:Lorg/joda/time/Instant;
      13: new           #154                // class java/util/concurrent/ConcurrentHashMap
      16: dup
      17: invokespecial #155                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      20: putstatic     #29                 // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      23: return
}
