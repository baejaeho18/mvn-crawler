Compiled from "BasicWeekOfWeekyearDateTimeField.java"
final class org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField extends org.joda.time.field.PreciseDurationDateTimeField {
  private static final long serialVersionUID;

  private final org.joda.time.chrono.BasicChronology iChronology;

  org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/joda/time/DateTimeFieldType.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;
       4: aload_2
       5: invokespecial #2                  // Method org/joda/time/field/PreciseDurationDateTimeField."<init>":(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      13: return

  public int get(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: lload_1
       5: invokevirtual #4                  // Method org/joda/time/chrono/BasicChronology.getWeekOfWeekyear:(J)I
       8: ireturn

  public org.joda.time.DurationField getRangeDurationField();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #5                  // Method org/joda/time/chrono/BasicChronology.weekyears:()Lorg/joda/time/DurationField;
       7: areturn

  public long roundFloor(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #6                  // long 259200000l
       5: ladd
       6: invokespecial #8                  // Method org/joda/time/field/PreciseDurationDateTimeField.roundFloor:(J)J
       9: ldc2_w        #6                  // long 259200000l
      12: lsub
      13: lreturn

  public long roundCeiling(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #6                  // long 259200000l
       5: ladd
       6: invokespecial #9                  // Method org/joda/time/field/PreciseDurationDateTimeField.roundCeiling:(J)J
       9: ldc2_w        #6                  // long 259200000l
      12: lsub
      13: lreturn

  public long remainder(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #6                  // long 259200000l
       5: ladd
       6: invokespecial #10                 // Method org/joda/time/field/PreciseDurationDateTimeField.remainder:(J)J
       9: lreturn

  public int getMinimumValue();
    Code:
       0: iconst_1
       1: ireturn

  public int getMaximumValue();
    Code:
       0: bipush        53
       2: ireturn

  public int getMaximumValue(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: lload_1
       5: invokevirtual #11                 // Method org/joda/time/chrono/BasicChronology.getWeekyear:(J)I
       8: istore_3
       9: aload_0
      10: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      13: iload_3
      14: invokevirtual #12                 // Method org/joda/time/chrono/BasicChronology.getWeeksInYear:(I)I
      17: ireturn

  public int getMaximumValue(org.joda.time.ReadablePartial);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/joda/time/DateTimeFieldType.weekyear:()Lorg/joda/time/DateTimeFieldType;
       4: invokeinterface #14,  2           // InterfaceMethod org/joda/time/ReadablePartial.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z
       9: ifeq          31
      12: aload_1
      13: invokestatic  #13                 // Method org/joda/time/DateTimeFieldType.weekyear:()Lorg/joda/time/DateTimeFieldType;
      16: invokeinterface #15,  2           // InterfaceMethod org/joda/time/ReadablePartial.get:(Lorg/joda/time/DateTimeFieldType;)I
      21: istore_2
      22: aload_0
      23: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      26: iload_2
      27: invokevirtual #12                 // Method org/joda/time/chrono/BasicChronology.getWeeksInYear:(I)I
      30: ireturn
      31: bipush        53
      33: ireturn

  public int getMaximumValue(org.joda.time.ReadablePartial, int[]);
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     52
      16: aload_1
      17: iload         4
      19: invokeinterface #17,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      24: invokestatic  #13                 // Method org/joda/time/DateTimeFieldType.weekyear:()Lorg/joda/time/DateTimeFieldType;
      27: if_acmpne     46
      30: aload_2
      31: iload         4
      33: iaload
      34: istore        5
      36: aload_0
      37: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      40: iload         5
      42: invokevirtual #12                 // Method org/joda/time/chrono/BasicChronology.getWeeksInYear:(I)I
      45: ireturn
      46: iinc          4, 1
      49: goto          10
      52: bipush        53
      54: ireturn

  protected int getMaximumValueForSet(long, int);
    Code:
       0: iload_3
       1: bipush        52
       3: if_icmple     14
       6: aload_0
       7: lload_1
       8: invokevirtual #18                 // Method getMaximumValue:(J)I
      11: goto          16
      14: bipush        52
      16: ireturn

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #19                 // Method org/joda/time/chrono/BasicChronology.weekOfWeekyear:()Lorg/joda/time/DateTimeField;
       7: areturn
}
