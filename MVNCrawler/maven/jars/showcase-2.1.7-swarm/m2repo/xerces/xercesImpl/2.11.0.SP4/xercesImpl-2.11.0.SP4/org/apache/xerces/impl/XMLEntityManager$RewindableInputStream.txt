Compiled from "XMLEntityManager.java"
public final class org.apache.xerces.impl.XMLEntityManager$RewindableInputStream extends java.io.InputStream {
  private java.io.InputStream fInputStream;

  private byte[] fData;

  private int fStartOffset;

  private int fEndOffset;

  private int fOffset;

  private int fLength;

  private int fMark;

  private final org.apache.xerces.impl.XMLEntityManager this$0;

  public org.apache.xerces.impl.XMLEntityManager$RewindableInputStream(org.apache.xerces.impl.XMLEntityManager, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/xerces/impl/XMLEntityManager;
       5: aload_0
       6: invokespecial #3                  // Method java/io/InputStream."<init>":()V
       9: aload_0
      10: bipush        64
      12: newarray       byte
      14: putfield      #4                  // Field fData:[B
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      22: aload_0
      23: iconst_0
      24: putfield      #6                  // Field fStartOffset:I
      27: aload_0
      28: iconst_m1
      29: putfield      #7                  // Field fEndOffset:I
      32: aload_0
      33: iconst_0
      34: putfield      #8                  // Field fOffset:I
      37: aload_0
      38: iconst_0
      39: putfield      #9                  // Field fLength:I
      42: aload_0
      43: iconst_0
      44: putfield      #10                 // Field fMark:I
      47: return

  public void setStartOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field fStartOffset:I
       5: return

  public void rewind();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field fStartOffset:I
       5: putfield      #8                  // Field fOffset:I
       8: return

  public int readAndBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fOffset:I
       4: aload_0
       5: getfield      #4                  // Field fData:[B
       8: arraylength
       9: if_icmpne     40
      12: aload_0
      13: getfield      #8                  // Field fOffset:I
      16: iconst_1
      17: ishl
      18: newarray       byte
      20: astore_1
      21: aload_0
      22: getfield      #4                  // Field fData:[B
      25: iconst_0
      26: aload_1
      27: iconst_0
      28: aload_0
      29: getfield      #8                  // Field fOffset:I
      32: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: aload_0
      36: aload_1
      37: putfield      #4                  // Field fData:[B
      40: aload_0
      41: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      44: invokevirtual #12                 // Method java/io/InputStream.read:()I
      47: istore_1
      48: iload_1
      49: iconst_m1
      50: if_icmpne     63
      53: aload_0
      54: aload_0
      55: getfield      #8                  // Field fOffset:I
      58: putfield      #7                  // Field fEndOffset:I
      61: iconst_m1
      62: ireturn
      63: aload_0
      64: getfield      #4                  // Field fData:[B
      67: aload_0
      68: dup
      69: getfield      #9                  // Field fLength:I
      72: dup_x1
      73: iconst_1
      74: iadd
      75: putfield      #9                  // Field fLength:I
      78: iload_1
      79: i2b
      80: bastore
      81: aload_0
      82: dup
      83: getfield      #8                  // Field fOffset:I
      86: iconst_1
      87: iadd
      88: putfield      #8                  // Field fOffset:I
      91: iload_1
      92: sipush        255
      95: iand
      96: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fOffset:I
       4: aload_0
       5: getfield      #9                  // Field fLength:I
       8: if_icmpge     32
      11: aload_0
      12: getfield      #4                  // Field fData:[B
      15: aload_0
      16: dup
      17: getfield      #8                  // Field fOffset:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #8                  // Field fOffset:I
      26: baload
      27: sipush        255
      30: iand
      31: ireturn
      32: aload_0
      33: getfield      #8                  // Field fOffset:I
      36: aload_0
      37: getfield      #7                  // Field fEndOffset:I
      40: if_icmpne     45
      43: iconst_m1
      44: ireturn
      45: aload_0
      46: getfield      #2                  // Field this$0:Lorg/apache/xerces/impl/XMLEntityManager;
      49: getfield      #13                 // Field org/apache/xerces/impl/XMLEntityManager.fCurrentEntity:Lorg/apache/xerces/impl/XMLEntityManager$ScannedEntity;
      52: getfield      #14                 // Field org/apache/xerces/impl/XMLEntityManager$ScannedEntity.mayReadChunks:Z
      55: ifeq          66
      58: aload_0
      59: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      62: invokevirtual #12                 // Method java/io/InputStream.read:()I
      65: ireturn
      66: aload_0
      67: invokevirtual #15                 // Method readAndBuffer:()I
      70: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field fLength:I
       4: aload_0
       5: getfield      #8                  // Field fOffset:I
       8: isub
       9: istore        4
      11: iload         4
      13: ifne          83
      16: aload_0
      17: getfield      #8                  // Field fOffset:I
      20: aload_0
      21: getfield      #7                  // Field fEndOffset:I
      24: if_icmpne     29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: getfield      #2                  // Field this$0:Lorg/apache/xerces/impl/XMLEntityManager;
      33: getfield      #13                 // Field org/apache/xerces/impl/XMLEntityManager.fCurrentEntity:Lorg/apache/xerces/impl/XMLEntityManager$ScannedEntity;
      36: getfield      #14                 // Field org/apache/xerces/impl/XMLEntityManager$ScannedEntity.mayReadChunks:Z
      39: ifeq          53
      42: aload_0
      43: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      46: aload_1
      47: iload_2
      48: iload_3
      49: invokevirtual #16                 // Method java/io/InputStream.read:([BII)I
      52: ireturn
      53: aload_0
      54: invokevirtual #15                 // Method readAndBuffer:()I
      57: istore        5
      59: iload         5
      61: iconst_m1
      62: if_icmpne     75
      65: aload_0
      66: aload_0
      67: getfield      #8                  // Field fOffset:I
      70: putfield      #7                  // Field fEndOffset:I
      73: iconst_m1
      74: ireturn
      75: aload_1
      76: iload_2
      77: iload         5
      79: i2b
      80: bastore
      81: iconst_1
      82: ireturn
      83: iload_3
      84: iload         4
      86: if_icmpge     95
      89: iload_3
      90: ifgt          98
      93: iconst_0
      94: ireturn
      95: iload         4
      97: istore_3
      98: aload_1
      99: ifnull        116
     102: aload_0
     103: getfield      #4                  // Field fData:[B
     106: aload_0
     107: getfield      #8                  // Field fOffset:I
     110: aload_1
     111: iload_2
     112: iload_3
     113: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     116: aload_0
     117: dup
     118: getfield      #8                  // Field fOffset:I
     121: iload_3
     122: iadd
     123: putfield      #8                  // Field fOffset:I
     126: iload_3
     127: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          8
       6: lconst_0
       7: lreturn
       8: aload_0
       9: getfield      #9                  // Field fLength:I
      12: aload_0
      13: getfield      #8                  // Field fOffset:I
      16: isub
      17: istore_3
      18: iload_3
      19: ifne          44
      22: aload_0
      23: getfield      #8                  // Field fOffset:I
      26: aload_0
      27: getfield      #7                  // Field fEndOffset:I
      30: if_icmpne     35
      33: lconst_0
      34: lreturn
      35: aload_0
      36: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      39: lload_1
      40: invokevirtual #17                 // Method java/io/InputStream.skip:(J)J
      43: lreturn
      44: lload_1
      45: iload_3
      46: i2l
      47: lcmp
      48: ifgt          65
      51: aload_0
      52: dup
      53: getfield      #8                  // Field fOffset:I
      56: i2l
      57: lload_1
      58: ladd
      59: l2i
      60: putfield      #8                  // Field fOffset:I
      63: lload_1
      64: lreturn
      65: aload_0
      66: dup
      67: getfield      #8                  // Field fOffset:I
      70: iload_3
      71: iadd
      72: putfield      #8                  // Field fOffset:I
      75: aload_0
      76: getfield      #8                  // Field fOffset:I
      79: aload_0
      80: getfield      #7                  // Field fEndOffset:I
      83: if_icmpne     89
      86: iload_3
      87: i2l
      88: lreturn
      89: lload_1
      90: iload_3
      91: i2l
      92: lsub
      93: lstore_1
      94: aload_0
      95: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      98: lload_1
      99: invokevirtual #17                 // Method java/io/InputStream.skip:(J)J
     102: iload_3
     103: i2l
     104: ladd
     105: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field fLength:I
       4: aload_0
       5: getfield      #8                  // Field fOffset:I
       8: isub
       9: istore_1
      10: iload_1
      11: ifne          52
      14: aload_0
      15: getfield      #8                  // Field fOffset:I
      18: aload_0
      19: getfield      #7                  // Field fEndOffset:I
      22: if_icmpne     27
      25: iconst_m1
      26: ireturn
      27: aload_0
      28: getfield      #2                  // Field this$0:Lorg/apache/xerces/impl/XMLEntityManager;
      31: getfield      #13                 // Field org/apache/xerces/impl/XMLEntityManager.fCurrentEntity:Lorg/apache/xerces/impl/XMLEntityManager$ScannedEntity;
      34: getfield      #14                 // Field org/apache/xerces/impl/XMLEntityManager$ScannedEntity.mayReadChunks:Z
      37: ifeq          50
      40: aload_0
      41: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      44: invokevirtual #18                 // Method java/io/InputStream.available:()I
      47: goto          51
      50: iconst_0
      51: ireturn
      52: iload_1
      53: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field fOffset:I
       5: putfield      #10                 // Field fMark:I
       8: return

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field fMark:I
       5: putfield      #8                  // Field fOffset:I
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
       4: ifnull        19
       7: aload_0
       8: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      11: invokevirtual #19                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      19: return
}
