Compiled from "NodeImpl.java"
public class org.apache.xerces.impl.xs.opti.NodeImpl extends org.apache.xerces.impl.xs.opti.DefaultNode {
  java.lang.String prefix;

  java.lang.String localpart;

  java.lang.String rawname;

  java.lang.String uri;

  short nodeType;

  boolean hidden;

  public org.apache.xerces.impl.xs.opti.NodeImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xerces/impl/xs/opti/DefaultNode."<init>":()V
       4: return

  public org.apache.xerces.impl.xs.opti.NodeImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, short);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xerces/impl/xs/opti/DefaultNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field prefix:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field localpart:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field rawname:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field uri:Ljava/lang/String;
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field nodeType:S
      31: return

  public java.lang.String getNodeName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rawname:Ljava/lang/String;
       4: areturn

  public java.lang.String getNamespaceURI();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uri:Ljava/lang/String;
       4: areturn

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #2                  // Field prefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field localpart:Ljava/lang/String;
       4: areturn

  public short getNodeType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nodeType:S
       4: ireturn

  public void setReadOnly(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field hidden:Z
       5: return

  public boolean getReadOnly();
    Code:
       0: aload_0
       1: getfield      #7                  // Field hidden:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #10                 // String [
       9: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: invokevirtual #12                 // Method getNodeName:()Ljava/lang/String;
      16: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: ldc           #13                 // String :
      21: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: aload_0
      25: invokevirtual #14                 // Method getNodeValue:()Ljava/lang/String;
      28: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: ldc           #15                 // String ]
      33: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: invokevirtual #16                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      39: areturn
}
