Compiled from "EncodingInfo.java"
class org.apache.xml.serialize.EncodingInfo$CharToByteConverterMethods {
  private static java.lang.reflect.Method fgGetConverterMethod;

  private static java.lang.reflect.Method fgCanConvertMethod;

  private static boolean fgConvertersAvailable;

  private org.apache.xml.serialize.EncodingInfo$CharToByteConverterMethods();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  static boolean access$500();
    Code:
       0: getstatic     #3                  // Field fgConvertersAvailable:Z
       3: ireturn

  static java.lang.reflect.Method access$600();
    Code:
       0: getstatic     #2                  // Field fgGetConverterMethod:Ljava/lang/reflect/Method;
       3: areturn

  static java.lang.reflect.Method access$700();
    Code:
       0: getstatic     #1                  // Field fgCanConvertMethod:Ljava/lang/reflect/Method;
       3: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #2                  // Field fgGetConverterMethod:Ljava/lang/reflect/Method;
       4: aconst_null
       5: putstatic     #1                  // Field fgCanConvertMethod:Ljava/lang/reflect/Method;
       8: iconst_0
       9: putstatic     #3                  // Field fgConvertersAvailable:Z
      12: ldc           #5                  // String sun.io.CharToByteConverter
      14: invokestatic  #6                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: astore_0
      18: aload_0
      19: ldc           #7                  // String getConverter
      21: iconst_1
      22: anewarray     #8                  // class java/lang/Class
      25: dup
      26: iconst_0
      27: getstatic     #9                  // Field org/apache/xml/serialize/EncodingInfo.class$java$lang$String:Ljava/lang/Class;
      30: ifnonnull     45
      33: ldc           #10                 // String java.lang.String
      35: invokestatic  #11                 // Method org/apache/xml/serialize/EncodingInfo.class$:(Ljava/lang/String;)Ljava/lang/Class;
      38: dup
      39: putstatic     #9                  // Field org/apache/xml/serialize/EncodingInfo.class$java$lang$String:Ljava/lang/Class;
      42: goto          48
      45: getstatic     #9                  // Field org/apache/xml/serialize/EncodingInfo.class$java$lang$String:Ljava/lang/Class;
      48: aastore
      49: invokevirtual #12                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      52: putstatic     #2                  // Field fgGetConverterMethod:Ljava/lang/reflect/Method;
      55: aload_0
      56: ldc           #13                 // String canConvert
      58: iconst_1
      59: anewarray     #8                  // class java/lang/Class
      62: dup
      63: iconst_0
      64: getstatic     #14                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      67: aastore
      68: invokevirtual #12                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      71: putstatic     #1                  // Field fgCanConvertMethod:Ljava/lang/reflect/Method;
      74: iconst_1
      75: putstatic     #3                  // Field fgConvertersAvailable:Z
      78: goto          94
      81: astore_0
      82: aconst_null
      83: putstatic     #2                  // Field fgGetConverterMethod:Ljava/lang/reflect/Method;
      86: aconst_null
      87: putstatic     #1                  // Field fgCanConvertMethod:Ljava/lang/reflect/Method;
      90: iconst_0
      91: putstatic     #3                  // Field fgConvertersAvailable:Z
      94: return
    Exception table:
       from    to  target type
          12    78    81   Class java/lang/Exception
}
