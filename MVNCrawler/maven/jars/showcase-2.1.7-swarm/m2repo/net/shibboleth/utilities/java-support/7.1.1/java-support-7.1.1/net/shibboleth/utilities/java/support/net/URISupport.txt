Compiled from "URISupport.java"
public final class net.shibboleth.utilities.java.support.net.URISupport {
  private net.shibboleth.utilities.java.support.net.URISupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.net.URI setFragment(java.net.URI, java.lang.String);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #5                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #6                  // Method java/net/URI.getPort:()I
      20: aload_0
      21: invokevirtual #7                  // Method java/net/URI.getPath:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #8                  // Method java/net/URI.getQuery:()Ljava/lang/String;
      28: aload_1
      29: invokestatic  #9                  // Method trimOrNullFragment:(Ljava/lang/String;)Ljava/lang/String;
      32: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore_2
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #13                 // String Illegal fragment text
      43: aload_2
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/net/URISyntaxException

  public static java.net.URI setHost(java.net.URI, java.lang.String);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_1
      13: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
      16: aload_0
      17: invokevirtual #6                  // Method java/net/URI.getPort:()I
      20: aload_0
      21: invokevirtual #7                  // Method java/net/URI.getPath:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #8                  // Method java/net/URI.getQuery:()Ljava/lang/String;
      28: aload_0
      29: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      32: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore_2
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #17                 // String Illegal host
      43: aload_2
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/net/URISyntaxException

  public static java.net.URI setPath(java.net.URI, java.lang.String);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #5                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #6                  // Method java/net/URI.getPort:()I
      20: aload_1
      21: invokestatic  #18                 // Method trimOrNullPath:(Ljava/lang/String;)Ljava/lang/String;
      24: aload_0
      25: invokevirtual #8                  // Method java/net/URI.getQuery:()Ljava/lang/String;
      28: aload_0
      29: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      32: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore_2
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #19                 // String Illegal path
      43: aload_2
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/net/URISyntaxException

  public static java.net.URI setPort(java.net.URI, int);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #5                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: iload_1
      17: aload_0
      18: invokevirtual #7                  // Method java/net/URI.getPath:()Ljava/lang/String;
      21: aload_0
      22: invokevirtual #8                  // Method java/net/URI.getQuery:()Ljava/lang/String;
      25: aload_0
      26: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      29: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: areturn
      33: astore_2
      34: new           #12                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #20                 // String Illegal port
      40: aload_2
      41: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0    32    33   Class java/net/URISyntaxException

  public static java.net.URI setQuery(java.net.URI, java.lang.String);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #5                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #6                  // Method java/net/URI.getPort:()I
      20: aload_0
      21: invokevirtual #7                  // Method java/net/URI.getPath:()Ljava/lang/String;
      24: aload_1
      25: invokestatic  #21                 // Method trimOrNullQuery:(Ljava/lang/String;)Ljava/lang/String;
      28: aload_0
      29: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      32: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore_2
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #22                 // String Illegal query
      43: aload_2
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/net/URISyntaxException

  public static java.net.URI setQuery(java.net.URI, java.util.List<net.shibboleth.utilities.java.support.collection.Pair<java.lang.String, java.lang.String>>);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #5                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #6                  // Method java/net/URI.getPort:()I
      20: aload_0
      21: invokevirtual #7                  // Method java/net/URI.getPath:()Ljava/lang/String;
      24: aload_1
      25: invokestatic  #23                 // Method buildQuery:(Ljava/util/List;)Ljava/lang/String;
      28: aload_0
      29: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      32: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore_2
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #22                 // String Illegal query
      43: aload_2
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/net/URISyntaxException

  public static java.net.URI setScheme(java.net.URI, java.lang.String);
    Code:
       0: new           #2                  // class java/net/URI
       3: dup
       4: aload_1
       5: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       8: aload_0
       9: invokevirtual #4                  // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #5                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #6                  // Method java/net/URI.getPort:()I
      20: aload_0
      21: invokevirtual #7                  // Method java/net/URI.getPath:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #8                  // Method java/net/URI.getQuery:()Ljava/lang/String;
      28: aload_0
      29: invokevirtual #16                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      32: invokespecial #10                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore_2
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #24                 // String Illegal scheme
      43: aload_2
      44: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    35    36   Class java/net/URISyntaxException

  public static java.net.URI fileURIFromAbsolutePath(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method java/lang/String.length:()I
       8: bipush        8
      10: iadd
      11: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
      14: astore_1
      15: aload_1
      16: ldc           #28                 // String file://
      18: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: ldc           #30                 // String /
      25: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: ifne          38
      31: aload_1
      32: bipush        47
      34: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: new           #2                  // class java/net/URI
      47: dup
      48: aload_1
      49: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #34                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      55: areturn

  public static java.lang.String buildQuery(java.util.List<net.shibboleth.utilities.java.support.collection.Pair<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      10: ifne          15
      13: aconst_null
      14: areturn
      15: new           #25                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      22: astore_1
      23: iconst_1
      24: istore_2
      25: aload_0
      26: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          118
      41: aload_3
      42: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #40                 // class net/shibboleth/utilities/java/support/collection/Pair
      50: astore        4
      52: iload_2
      53: ifeq          61
      56: iconst_0
      57: istore_2
      58: goto          68
      61: aload_1
      62: ldc           #41                 // String &
      64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: aload         4
      71: invokevirtual #42                 // Method net/shibboleth/utilities/java/support/collection/Pair.getFirst:()Ljava/lang/Object;
      74: checkcast     #43                 // class java/lang/String
      77: invokestatic  #44                 // Method doURLEncode:(Ljava/lang/String;)Ljava/lang/String;
      80: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: ldc           #45                 // String =
      87: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload         4
      93: invokevirtual #46                 // Method net/shibboleth/utilities/java/support/collection/Pair.getSecond:()Ljava/lang/Object;
      96: ifnull        115
      99: aload_1
     100: aload         4
     102: invokevirtual #46                 // Method net/shibboleth/utilities/java/support/collection/Pair.getSecond:()Ljava/lang/Object;
     105: checkcast     #43                 // class java/lang/String
     108: invokestatic  #44                 // Method doURLEncode:(Ljava/lang/String;)Ljava/lang/String;
     111: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: goto          32
     118: aload_1
     119: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: areturn

  public static java.lang.String getRawQueryStringParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method trimOrNullQuery:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: ifnull        18
      14: aload_3
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_3
      21: invokestatic  #44                 // Method doURLEncode:(Ljava/lang/String;)Ljava/lang/String;
      24: astore        4
      26: aload_2
      27: ldc           #41                 // String &
      29: invokevirtual #47                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      32: astore        5
      34: aload         5
      36: astore        6
      38: aload         6
      40: arraylength
      41: istore        7
      43: iconst_0
      44: istore        8
      46: iload         8
      48: iload         7
      50: if_icmpge     107
      53: aload         6
      55: iload         8
      57: aaload
      58: astore        9
      60: aload         9
      62: new           #25                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      69: aload         4
      71: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #45                 // String =
      76: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      85: ifne          98
      88: aload         9
      90: aload         4
      92: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      95: ifeq          101
      98: aload         9
     100: areturn
     101: iinc          8, 1
     104: goto          46
     107: aconst_null
     108: areturn

  public static java.util.List<net.shibboleth.utilities.java.support.collection.Pair<java.lang.String, java.lang.String>> parseQueryString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method trimOrNullQuery:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #49                 // class net/shibboleth/utilities/java/support/collection/LazyList
      12: dup
      13: invokespecial #50                 // Method net/shibboleth/utilities/java/support/collection/LazyList."<init>":()V
      16: areturn
      17: new           #51                 // class java/util/ArrayList
      20: dup
      21: invokespecial #52                 // Method java/util/ArrayList."<init>":()V
      24: astore_2
      25: aload_1
      26: ldc           #41                 // String &
      28: invokevirtual #47                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      31: astore_3
      32: aload_3
      33: astore        5
      35: aload         5
      37: arraylength
      38: istore        6
      40: iconst_0
      41: istore        7
      43: iload         7
      45: iload         6
      47: if_icmpge     128
      50: aload         5
      52: iload         7
      54: aaload
      55: astore        8
      57: aload         8
      59: ldc           #45                 // String =
      61: invokevirtual #47                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      64: astore        4
      66: aload         4
      68: arraylength
      69: iconst_1
      70: if_icmpne     96
      73: aload_2
      74: new           #40                 // class net/shibboleth/utilities/java/support/collection/Pair
      77: dup
      78: aload         4
      80: iconst_0
      81: aaload
      82: invokestatic  #53                 // Method doURLDecode:(Ljava/lang/String;)Ljava/lang/String;
      85: aconst_null
      86: invokespecial #54                 // Method net/shibboleth/utilities/java/support/collection/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      89: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      92: pop
      93: goto          122
      96: aload_2
      97: new           #40                 // class net/shibboleth/utilities/java/support/collection/Pair
     100: dup
     101: aload         4
     103: iconst_0
     104: aaload
     105: invokestatic  #53                 // Method doURLDecode:(Ljava/lang/String;)Ljava/lang/String;
     108: aload         4
     110: iconst_1
     111: aaload
     112: invokestatic  #53                 // Method doURLDecode:(Ljava/lang/String;)Ljava/lang/String;
     115: invokespecial #54                 // Method net/shibboleth/utilities/java/support/collection/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     118: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     121: pop
     122: iinc          7, 1
     125: goto          43
     128: aload_2
     129: areturn

  public static java.lang.String trimOrNullPath(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: ldc           #56                 // String ?
      14: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifeq          26
      20: aload_1
      21: iconst_1
      22: invokevirtual #57                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      25: astore_1
      26: aload_1
      27: ldc           #56                 // String ?
      29: invokevirtual #58                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      32: ifne          44
      35: aload_1
      36: ldc           #59                 // String #
      38: invokevirtual #58                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      41: ifeq          56
      44: aload_1
      45: iconst_0
      46: aload_1
      47: invokevirtual #26                 // Method java/lang/String.length:()I
      50: iconst_1
      51: isub
      52: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      55: astore_1
      56: aload_1
      57: areturn

  public static java.lang.String trimOrNullQuery(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: ldc           #56                 // String ?
      14: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifeq          26
      20: aload_1
      21: iconst_1
      22: invokevirtual #57                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      25: astore_1
      26: aload_1
      27: ldc           #59                 // String #
      29: invokevirtual #58                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      32: ifeq          47
      35: aload_1
      36: iconst_0
      37: aload_1
      38: invokevirtual #26                 // Method java/lang/String.length:()I
      41: iconst_1
      42: isub
      43: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      46: astore_1
      47: aload_1
      48: areturn

  public static java.lang.String trimOrNullFragment(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: ldc           #59                 // String #
      14: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifeq          26
      20: aload_1
      21: iconst_1
      22: invokevirtual #57                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      25: astore_1
      26: aload_1
      27: areturn

  public static java.lang.String doURLDecode(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: ldc           #61                 // String UTF-8
       9: invokestatic  #62                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: areturn
      13: astore_1
      14: aconst_null
      15: areturn
    Exception table:
       from    to  target type
           6    12    13   Class java/io/UnsupportedEncodingException

  public static java.lang.String doURLEncode(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: ldc           #61                 // String UTF-8
       9: invokestatic  #64                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: areturn
      13: astore_1
      14: aconst_null
      15: areturn
    Exception table:
       from    to  target type
           6    12    13   Class java/io/UnsupportedEncodingException
}
