Compiled from "CaseInsensitiveStringMatchPredicate.java"
public class net.shibboleth.utilities.java.support.logic.CaseInsensitiveStringMatchPredicate implements com.google.common.base.Predicate<java.lang.CharSequence> {
  private final java.lang.String target;

  public net.shibboleth.utilities.java.support.logic.CaseInsensitiveStringMatchPredicate(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String Target string can not be null
       8: invokestatic  #3                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/lang/String
      14: putfield      #5                  // Field target:Ljava/lang/String;
      17: return

  public boolean apply(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #5                  // Field target:Ljava/lang/String;
      10: aload_1
      11: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      16: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      19: ireturn

  public boolean apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class java/lang/CharSequence
       5: invokevirtual #9                  // Method apply:(Ljava/lang/CharSequence;)Z
       8: ireturn
}
