Compiled from "BasicParserPool.java"
public class net.shibboleth.utilities.java.support.xml.BasicParserPool extends net.shibboleth.utilities.java.support.component.AbstractInitializableComponent implements net.shibboleth.utilities.java.support.xml.ParserPool {
  private final org.slf4j.Logger log;

  private javax.xml.parsers.DocumentBuilderFactory builderFactory;

  private final java.util.Stack<java.lang.ref.SoftReference<javax.xml.parsers.DocumentBuilder>> builderPool;

  private int maxPoolSize;

  private java.util.Map<java.lang.String, java.lang.Object> builderAttributes;

  private boolean coalescing;

  private boolean expandEntityReferences;

  private java.util.Map<java.lang.String, java.lang.Boolean> builderFeatures;

  private boolean ignoreComments;

  private boolean ignoreElementContentWhitespace;

  private boolean namespaceAware;

  private javax.xml.validation.Schema schema;

  private boolean dtdValidating;

  private boolean xincludeAware;

  private org.xml.sax.EntityResolver entityResolver;

  private final org.xml.sax.ErrorHandler errorHandler;

  public net.shibboleth.utilities.java.support.xml.BasicParserPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/shibboleth/utilities/java/support/component/AbstractInitializableComponent."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class net/shibboleth/utilities/java/support/xml/BasicParserPool
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: iconst_5
      16: putfield      #5                  // Field maxPoolSize:I
      19: aload_0
      20: new           #6                  // class java/util/Stack
      23: dup
      24: invokespecial #7                  // Method java/util/Stack."<init>":()V
      27: putfield      #8                  // Field builderPool:Ljava/util/Stack;
      30: aload_0
      31: invokestatic  #9                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      34: putfield      #10                 // Field builderAttributes:Ljava/util/Map;
      37: aload_0
      38: iconst_1
      39: putfield      #11                 // Field coalescing:Z
      42: aload_0
      43: iconst_0
      44: putfield      #12                 // Field expandEntityReferences:Z
      47: aload_0
      48: aload_0
      49: invokevirtual #13                 // Method buildDefaultFeatures:()Ljava/util/Map;
      52: putfield      #14                 // Field builderFeatures:Ljava/util/Map;
      55: aload_0
      56: iconst_1
      57: putfield      #15                 // Field ignoreComments:Z
      60: aload_0
      61: iconst_1
      62: putfield      #16                 // Field ignoreElementContentWhitespace:Z
      65: aload_0
      66: iconst_1
      67: putfield      #17                 // Field namespaceAware:Z
      70: aload_0
      71: aconst_null
      72: putfield      #18                 // Field schema:Ljavax/xml/validation/Schema;
      75: aload_0
      76: iconst_0
      77: putfield      #19                 // Field dtdValidating:Z
      80: aload_0
      81: iconst_0
      82: putfield      #20                 // Field xincludeAware:Z
      85: aload_0
      86: new           #21                 // class net/shibboleth/utilities/java/support/xml/LoggingErrorHandler
      89: dup
      90: aload_0
      91: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      94: invokespecial #22                 // Method net/shibboleth/utilities/java/support/xml/LoggingErrorHandler."<init>":(Lorg/slf4j/Logger;)V
      97: putfield      #23                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
     100: return

  public javax.xml.parsers.DocumentBuilder getBuilder() throws net.shibboleth.utilities.java.support.xml.XMLParserException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkInitializedNotDestroyed:()V
       4: aconst_null
       5: astore_1
       6: aload_0
       7: getfield      #8                  // Field builderPool:Ljava/util/Stack;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_1
      14: ifnonnull     47
      17: aload_0
      18: getfield      #8                  // Field builderPool:Ljava/util/Stack;
      21: invokevirtual #25                 // Method java/util/Stack.isEmpty:()Z
      24: ifne          47
      27: aload_0
      28: getfield      #8                  // Field builderPool:Ljava/util/Stack;
      31: invokevirtual #26                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      34: checkcast     #27                 // class java/lang/ref/SoftReference
      37: invokevirtual #28                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      40: checkcast     #29                 // class javax/xml/parsers/DocumentBuilder
      43: astore_1
      44: goto          13
      47: aload_2
      48: monitorexit
      49: goto          57
      52: astore_3
      53: aload_2
      54: monitorexit
      55: aload_3
      56: athrow
      57: aload_1
      58: ifnonnull     66
      61: aload_0
      62: invokevirtual #30                 // Method createBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      65: astore_1
      66: aload_1
      67: ifnull        86
      70: aload_0
      71: aload_1
      72: invokespecial #31                 // Method prepareBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      75: new           #32                 // class net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy
      78: dup
      79: aload_0
      80: aload_1
      81: aload_0
      82: invokespecial #33                 // Method net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy."<init>":(Lnet/shibboleth/utilities/java/support/xml/BasicParserPool;Ljavax/xml/parsers/DocumentBuilder;Lnet/shibboleth/utilities/java/support/xml/BasicParserPool;)V
      85: areturn
      86: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      89: dup
      90: ldc           #35                 // String Unable to obtain a DocumentBuilder
      92: invokespecial #36                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;)V
      95: athrow
    Exception table:
       from    to  target type
          13    49    52   any
          52    55    52   any

  public void returnBuilder(javax.xml.parsers.DocumentBuilder);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkInitializedNotDestroyed:()V
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: instanceof    #32                 // class net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy
      12: ifne          16
      15: return
      16: aload_1
      17: checkcast     #32                 // class net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy
      20: astore_2
      21: aload_2
      22: invokevirtual #37                 // Method net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy.getOwningPool:()Lnet/shibboleth/utilities/java/support/xml/ParserPool;
      25: aload_0
      26: if_acmpeq     30
      29: return
      30: aload_2
      31: dup
      32: astore_3
      33: monitorenter
      34: aload_2
      35: invokevirtual #38                 // Method net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy.isReturned:()Z
      38: ifeq          44
      41: aload_3
      42: monitorexit
      43: return
      44: aload_2
      45: iconst_1
      46: invokevirtual #39                 // Method net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy.setReturned:(Z)V
      49: aload_3
      50: monitorexit
      51: goto          61
      54: astore        4
      56: aload_3
      57: monitorexit
      58: aload         4
      60: athrow
      61: aload_2
      62: invokevirtual #40                 // Method net/shibboleth/utilities/java/support/xml/BasicParserPool$DocumentBuilderProxy.getProxiedBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      65: astore_3
      66: aload_3
      67: invokevirtual #41                 // Method javax/xml/parsers/DocumentBuilder.reset:()V
      70: new           #27                 // class java/lang/ref/SoftReference
      73: dup
      74: aload_3
      75: invokespecial #42                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      78: astore        4
      80: aload_0
      81: getfield      #8                  // Field builderPool:Ljava/util/Stack;
      84: dup
      85: astore        5
      87: monitorenter
      88: aload_0
      89: getfield      #8                  // Field builderPool:Ljava/util/Stack;
      92: invokevirtual #43                 // Method java/util/Stack.size:()I
      95: aload_0
      96: getfield      #5                  // Field maxPoolSize:I
      99: if_icmpge     112
     102: aload_0
     103: getfield      #8                  // Field builderPool:Ljava/util/Stack;
     106: aload         4
     108: invokevirtual #44                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload         5
     114: monitorexit
     115: goto          126
     118: astore        6
     120: aload         5
     122: monitorexit
     123: aload         6
     125: athrow
     126: return
    Exception table:
       from    to  target type
          34    43    54   any
          44    51    54   any
          54    58    54   any
          88   115   118   any
         118   123   118   any

  public org.w3c.dom.Document newDocument() throws net.shibboleth.utilities.java.support.xml.XMLParserException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkInitializedNotDestroyed:()V
       4: aconst_null
       5: astore_1
       6: aload_0
       7: invokevirtual #45                 // Method getBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      10: astore_1
      11: aload_1
      12: invokevirtual #46                 // Method javax/xml/parsers/DocumentBuilder.newDocument:()Lorg/w3c/dom/Document;
      15: astore_2
      16: aload_0
      17: aload_1
      18: invokevirtual #47                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      21: goto          32
      24: astore_3
      25: aload_0
      26: aload_1
      27: invokevirtual #47                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      30: aload_3
      31: athrow
      32: aload_2
      33: ifnonnull     46
      36: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      39: dup
      40: ldc           #48                 // String DocumentBuilder returned a null Document
      42: invokespecial #36                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_2
      47: areturn
    Exception table:
       from    to  target type
           6    16    24   any
          24    25    24   any

  public org.w3c.dom.Document parse(java.io.InputStream) throws net.shibboleth.utilities.java.support.xml.XMLParserException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkInitializedNotDestroyed:()V
       4: aload_1
       5: ldc           #49                 // String Input stream can not be null
       7: invokestatic  #50                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: invokevirtual #45                 // Method getBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      15: astore_2
      16: aload_2
      17: aload_1
      18: invokevirtual #51                 // Method javax/xml/parsers/DocumentBuilder.parse:(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
      21: astore_3
      22: aload_3
      23: ifnonnull     36
      26: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      29: dup
      30: ldc           #52                 // String DocumentBuilder parsed a null Document
      32: invokespecial #36                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_3
      37: astore        4
      39: aload_0
      40: aload_2
      41: invokevirtual #47                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      44: aload         4
      46: areturn
      47: astore_3
      48: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      51: dup
      52: ldc           #54                 // String Unable to parse inputstream, it contained invalid XML
      54: aload_3
      55: invokespecial #55                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      58: athrow
      59: astore_3
      60: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      63: dup
      64: ldc           #57                 // String Unable to read data from input stream
      66: aload_3
      67: invokespecial #55                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      70: athrow
      71: astore        5
      73: aload_0
      74: aload_2
      75: invokevirtual #47                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      78: aload         5
      80: athrow
    Exception table:
       from    to  target type
          16    39    47   Class org/xml/sax/SAXException
          16    39    59   Class java/io/IOException
          16    39    71   any
          47    73    71   any

  public org.w3c.dom.Document parse(java.io.Reader) throws net.shibboleth.utilities.java.support.xml.XMLParserException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkInitializedNotDestroyed:()V
       4: aload_1
       5: ldc           #58                 // String Input reader can not be null
       7: invokestatic  #50                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: invokevirtual #45                 // Method getBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      15: astore_2
      16: aload_2
      17: new           #59                 // class org/xml/sax/InputSource
      20: dup
      21: aload_1
      22: invokespecial #60                 // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
      25: invokevirtual #61                 // Method javax/xml/parsers/DocumentBuilder.parse:(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;
      28: astore_3
      29: aload_3
      30: ifnonnull     43
      33: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      36: dup
      37: ldc           #52                 // String DocumentBuilder parsed a null Document
      39: invokespecial #36                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_3
      44: astore        4
      46: aload_0
      47: aload_2
      48: invokevirtual #47                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      51: aload         4
      53: areturn
      54: astore_3
      55: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      58: dup
      59: ldc           #62                 // String Invalid XML
      61: aload_3
      62: invokespecial #55                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      65: athrow
      66: astore_3
      67: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      70: dup
      71: ldc           #63                 // String Unable to read XML from input stream
      73: aload_3
      74: invokespecial #55                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      77: athrow
      78: astore        5
      80: aload_0
      81: aload_2
      82: invokevirtual #47                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      85: aload         5
      87: athrow
    Exception table:
       from    to  target type
          16    46    54   Class org/xml/sax/SAXException
          16    46    66   Class java/io/IOException
          16    46    78   any
          54    80    78   any

  public int getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxPoolSize:I
       4: ireturn

  public void setMaxPoolSize(int);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: lconst_0
       6: iload_1
       7: i2l
       8: ldc           #65                 // String New maximum pool size must be greater than 0
      10: invokestatic  #66                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isGreaterThan:(JJLjava/lang/String;)J
      13: l2i
      14: putfield      #5                  // Field maxPoolSize:I
      17: return

  public java.util.Map<java.lang.String, java.lang.Object> getBuilderAttributes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field builderAttributes:Ljava/util/Map;
       4: invokestatic  #67                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setBuilderAttributes(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_1
       5: ifnonnull     18
       8: aload_0
       9: invokestatic  #9                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      12: putfield      #10                 // Field builderAttributes:Ljava/util/Map;
      15: goto          36
      18: aload_0
      19: new           #68                 // class java/util/HashMap
      22: dup
      23: aload_1
      24: invokestatic  #69                 // Method com/google/common/base/Predicates.notNull:()Lcom/google/common/base/Predicate;
      27: invokestatic  #70                 // Method com/google/common/collect/Maps.filterKeys:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      30: invokespecial #71                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      33: putfield      #10                 // Field builderAttributes:Ljava/util/Map;
      36: return

  public boolean isCoalescing();
    Code:
       0: aload_0
       1: getfield      #11                 // Field coalescing:Z
       4: ireturn

  public void setCoalescing(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #11                 // Field coalescing:Z
       9: return

  public boolean isExpandEntityReferences();
    Code:
       0: aload_0
       1: getfield      #12                 // Field expandEntityReferences:Z
       4: ireturn

  public void setExpandEntityReferences(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #12                 // Field expandEntityReferences:Z
       9: return

  public java.util.Map<java.lang.String, java.lang.Boolean> getBuilderFeatures();
    Code:
       0: aload_0
       1: getfield      #14                 // Field builderFeatures:Ljava/util/Map;
       4: areturn

  public void setBuilderFeatures(java.util.Map<java.lang.String, java.lang.Boolean>);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_1
       5: ifnonnull     18
       8: aload_0
       9: invokestatic  #9                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      12: putfield      #14                 // Field builderFeatures:Ljava/util/Map;
      15: goto          32
      18: aload_0
      19: aload_1
      20: invokestatic  #69                 // Method com/google/common/base/Predicates.notNull:()Lcom/google/common/base/Predicate;
      23: invokestatic  #70                 // Method com/google/common/collect/Maps.filterKeys:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      26: invokestatic  #72                 // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
      29: putfield      #14                 // Field builderFeatures:Ljava/util/Map;
      32: return

  public boolean isIgnoreComments();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ignoreComments:Z
       4: ireturn

  public void setIgnoreComments(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #15                 // Field ignoreComments:Z
       9: return

  public boolean isIgnoreElementContentWhitespace();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ignoreElementContentWhitespace:Z
       4: ireturn

  public void setIgnoreElementContentWhitespace(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #16                 // Field ignoreElementContentWhitespace:Z
       9: return

  public boolean isNamespaceAware();
    Code:
       0: aload_0
       1: getfield      #17                 // Field namespaceAware:Z
       4: ireturn

  public void setNamespaceAware(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #17                 // Field namespaceAware:Z
       9: return

  public javax.xml.validation.Schema getSchema();
    Code:
       0: aload_0
       1: getfield      #18                 // Field schema:Ljavax/xml/validation/Schema;
       4: areturn

  public void setSchema(javax.xml.validation.Schema);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: aload_1
       6: putfield      #18                 // Field schema:Ljavax/xml/validation/Schema;
       9: aload_0
      10: getfield      #18                 // Field schema:Ljavax/xml/validation/Schema;
      13: ifnull        45
      16: aload_0
      17: iconst_1
      18: invokevirtual #73                 // Method setNamespaceAware:(Z)V
      21: aload_0
      22: getfield      #10                 // Field builderAttributes:Ljava/util/Map;
      25: ldc           #74                 // String http://java.sun.com/xml/jaxp/properties/schemaSource
      27: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: getfield      #10                 // Field builderAttributes:Ljava/util/Map;
      37: ldc           #76                 // String http://java.sun.com/xml/jaxp/properties/schemaLanguage
      39: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: return

  public boolean isDTDValidating();
    Code:
       0: aload_0
       1: getfield      #19                 // Field dtdValidating:Z
       4: ireturn

  public void setDTDValidating(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #19                 // Field dtdValidating:Z
       9: return

  public boolean isXincludeAware();
    Code:
       0: aload_0
       1: getfield      #20                 // Field xincludeAware:Z
       4: ireturn

  public void setXincludeAware(boolean);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method checkNotInitializedNotDestroyed:()V
       4: aload_0
       5: iload_1
       6: putfield      #20                 // Field xincludeAware:Z
       9: return

  protected int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field builderPool:Ljava/util/Stack;
       4: invokevirtual #43                 // Method java/util/Stack.size:()I
       7: ireturn

  protected javax.xml.parsers.DocumentBuilder createBuilder() throws net.shibboleth.utilities.java.support.xml.XMLParserException;
    Code:
       0: aload_0
       1: invokespecial #24                 // Method checkInitializedNotDestroyed:()V
       4: aload_0
       5: getfield      #77                 // Field builderFactory:Ljavax/xml/parsers/DocumentBuilderFactory;
       8: invokevirtual #78                 // Method javax/xml/parsers/DocumentBuilderFactory.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      11: astore_1
      12: aload_1
      13: areturn
      14: astore_1
      15: aload_0
      16: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      19: ldc           #80                 // String Unable to create new document builder
      21: aload_1
      22: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: new           #34                 // class net/shibboleth/utilities/java/support/xml/XMLParserException
      30: dup
      31: ldc           #80                 // String Unable to create new document builder
      33: aload_1
      34: invokespecial #55                 // Method net/shibboleth/utilities/java/support/xml/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      37: athrow
    Exception table:
       from    to  target type
           4    13    14   Class javax/xml/parsers/ParserConfigurationException

  private void prepareBuilder(javax.xml.parsers.DocumentBuilder);
    Code:
       0: aload_0
       1: getfield      #82                 // Field entityResolver:Lorg/xml/sax/EntityResolver;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #82                 // Field entityResolver:Lorg/xml/sax/EntityResolver;
      12: invokevirtual #83                 // Method javax/xml/parsers/DocumentBuilder.setEntityResolver:(Lorg/xml/sax/EntityResolver;)V
      15: aload_0
      16: getfield      #23                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
      19: ifnull        30
      22: aload_1
      23: aload_0
      24: getfield      #23                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
      27: invokevirtual #84                 // Method javax/xml/parsers/DocumentBuilder.setErrorHandler:(Lorg/xml/sax/ErrorHandler;)V
      30: return

  protected void doInitialize() throws net.shibboleth.utilities.java.support.component.ComponentInitializationException;
    Code:
       0: aload_0
       1: invokespecial #85                 // Method net/shibboleth/utilities/java/support/component/AbstractInitializableComponent.doInitialize:()V
       4: invokestatic  #86                 // Method javax/xml/parsers/DocumentBuilderFactory.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;
       7: astore_1
       8: aload_0
       9: getfield      #10                 // Field builderAttributes:Ljava/util/Map;
      12: invokeinterface #87,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          64
      32: aload_2
      33: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #91                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #92,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: checkcast     #93                 // class java/lang/String
      52: aload_3
      53: invokeinterface #94,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: invokevirtual #95                 // Method javax/xml/parsers/DocumentBuilderFactory.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      61: goto          23
      64: aload_0
      65: getfield      #14                 // Field builderFeatures:Ljava/util/Map;
      68: invokeinterface #87,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      73: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      78: astore_2
      79: aload_2
      80: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          135
      88: aload_2
      89: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #91                 // class java/util/Map$Entry
      97: astore_3
      98: aload_3
      99: invokeinterface #92,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     104: ifnull        132
     107: aload_1
     108: aload_3
     109: invokeinterface #92,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     114: checkcast     #93                 // class java/lang/String
     117: aload_3
     118: invokeinterface #94,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     123: checkcast     #96                 // class java/lang/Boolean
     126: invokevirtual #97                 // Method java/lang/Boolean.booleanValue:()Z
     129: invokevirtual #98                 // Method javax/xml/parsers/DocumentBuilderFactory.setFeature:(Ljava/lang/String;Z)V
     132: goto          79
     135: aload_1
     136: aload_0
     137: getfield      #11                 // Field coalescing:Z
     140: invokevirtual #99                 // Method javax/xml/parsers/DocumentBuilderFactory.setCoalescing:(Z)V
     143: aload_1
     144: aload_0
     145: getfield      #12                 // Field expandEntityReferences:Z
     148: invokevirtual #100                // Method javax/xml/parsers/DocumentBuilderFactory.setExpandEntityReferences:(Z)V
     151: aload_1
     152: aload_0
     153: getfield      #15                 // Field ignoreComments:Z
     156: invokevirtual #101                // Method javax/xml/parsers/DocumentBuilderFactory.setIgnoringComments:(Z)V
     159: aload_1
     160: aload_0
     161: getfield      #16                 // Field ignoreElementContentWhitespace:Z
     164: invokevirtual #102                // Method javax/xml/parsers/DocumentBuilderFactory.setIgnoringElementContentWhitespace:(Z)V
     167: aload_1
     168: aload_0
     169: getfield      #17                 // Field namespaceAware:Z
     172: invokevirtual #103                // Method javax/xml/parsers/DocumentBuilderFactory.setNamespaceAware:(Z)V
     175: aload_1
     176: aload_0
     177: getfield      #18                 // Field schema:Ljavax/xml/validation/Schema;
     180: invokevirtual #104                // Method javax/xml/parsers/DocumentBuilderFactory.setSchema:(Ljavax/xml/validation/Schema;)V
     183: aload_1
     184: aload_0
     185: getfield      #19                 // Field dtdValidating:Z
     188: invokevirtual #105                // Method javax/xml/parsers/DocumentBuilderFactory.setValidating:(Z)V
     191: aload_1
     192: aload_0
     193: getfield      #20                 // Field xincludeAware:Z
     196: invokevirtual #106                // Method javax/xml/parsers/DocumentBuilderFactory.setXIncludeAware:(Z)V
     199: aload_0
     200: aload_1
     201: putfield      #77                 // Field builderFactory:Ljavax/xml/parsers/DocumentBuilderFactory;
     204: goto          219
     207: astore_1
     208: new           #107                // class net/shibboleth/utilities/java/support/component/ComponentInitializationException
     211: dup
     212: ldc           #108                // String Unable to configure builder factory
     214: aload_1
     215: invokespecial #109                // Method net/shibboleth/utilities/java/support/component/ComponentInitializationException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     218: athrow
     219: return
    Exception table:
       from    to  target type
           4   204   207   Class javax/xml/parsers/ParserConfigurationException

  protected void doDestroy();
    Code:
       0: aload_0
       1: getfield      #8                  // Field builderPool:Ljava/util/Stack;
       4: invokevirtual #110                // Method java/util/Stack.clear:()V
       7: aload_0
       8: invokespecial #111                // Method net/shibboleth/utilities/java/support/component/AbstractInitializableComponent.doDestroy:()V
      11: return

  private void checkInitializedNotDestroyed();
    Code:
       0: aload_0
       1: invokestatic  #112                // Method net/shibboleth/utilities/java/support/component/ComponentSupport.ifNotInitializedThrowUninitializedComponentException:(Lnet/shibboleth/utilities/java/support/component/InitializableComponent;)V
       4: aload_0
       5: invokestatic  #113                // Method net/shibboleth/utilities/java/support/component/ComponentSupport.ifDestroyedThrowDestroyedComponentException:(Lnet/shibboleth/utilities/java/support/component/DestructableComponent;)V
       8: return

  private void checkNotInitializedNotDestroyed();
    Code:
       0: aload_0
       1: invokestatic  #114                // Method net/shibboleth/utilities/java/support/component/ComponentSupport.ifInitializedThrowUnmodifiabledComponentException:(Lnet/shibboleth/utilities/java/support/component/InitializableComponent;)V
       4: aload_0
       5: invokestatic  #113                // Method net/shibboleth/utilities/java/support/component/ComponentSupport.ifDestroyedThrowDestroyedComponentException:(Lnet/shibboleth/utilities/java/support/component/DestructableComponent;)V
       8: return

  protected java.util.Map<java.lang.String, java.lang.Boolean> buildDefaultFeatures();
    Code:
       0: new           #68                 // class java/util/HashMap
       3: dup
       4: invokespecial #115                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #116                // String http://javax.xml.XMLConstants/feature/secure-processing
      11: iconst_1
      12: invokestatic  #117                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: invokevirtual #118                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #119                // String http://apache.org/xml/features/disallow-doctype-decl
      22: iconst_1
      23: invokestatic  #117                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: invokevirtual #118                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_1
      31: areturn
}
