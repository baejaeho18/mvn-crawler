Compiled from "IndexingObjectStore.java"
public class net.shibboleth.utilities.java.support.collection.IndexingObjectStore<T> {
  private java.util.concurrent.locks.ReadWriteLock rwLock;

  private java.util.Map<java.lang.String, net.shibboleth.utilities.java.support.collection.IndexingObjectStore<T>.StoredObjectWrapper> objectStore;

  private java.util.Map<T, java.lang.Integer> indexStore;

  private int lastIndex;

  public net.shibboleth.utilities.java.support.collection.IndexingObjectStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
      15: aload_0
      16: new           #5                  // class net/shibboleth/utilities/java/support/collection/LazyMap
      19: dup
      20: invokespecial #6                  // Method net/shibboleth/utilities/java/support/collection/LazyMap."<init>":()V
      23: putfield      #7                  // Field objectStore:Ljava/util/Map;
      26: aload_0
      27: new           #5                  // class net/shibboleth/utilities/java/support/collection/LazyMap
      30: dup
      31: invokespecial #6                  // Method net/shibboleth/utilities/java/support/collection/LazyMap."<init>":()V
      34: putfield      #8                  // Field indexStore:Ljava/util/Map;
      37: aload_0
      38: iconst_0
      39: putfield      #9                  // Field lastIndex:I
      42: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: astore_1
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: getfield      #7                  // Field objectStore:Ljava/util/Map;
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Map.clear:()V
      25: aload_0
      26: getfield      #8                  // Field indexStore:Ljava/util/Map;
      29: invokeinterface #12,  1           // InterfaceMethod java/util/Map.clear:()V
      34: aload_1
      35: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      40: goto          52
      43: astore_2
      44: aload_1
      45: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
          16    34    43   any
          43    44    43   any

  public boolean containsIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: astore_2
      10: aload_2
      11: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: getfield      #7                  // Field objectStore:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #15,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      26: istore_3
      27: aload_2
      28: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      33: iload_3
      34: ireturn
      35: astore        4
      37: aload_2
      38: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload         4
      45: athrow
    Exception table:
       from    to  target type
          16    27    35   any
          35    37    35   any

  public boolean containsInstance(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: astore_2
      10: aload_2
      11: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: getfield      #8                  // Field indexStore:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #17                 // class java/lang/Integer
      29: astore_3
      30: aload_3
      31: ifnonnull     46
      34: iconst_0
      35: istore        4
      37: aload_2
      38: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: iload         4
      45: ireturn
      46: aload_0
      47: getfield      #7                  // Field objectStore:Ljava/util/Map;
      50: aload_3
      51: invokevirtual #18                 // Method java/lang/Integer.toString:()Ljava/lang/String;
      54: invokeinterface #15,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      59: istore        4
      61: aload_2
      62: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      67: iload         4
      69: ireturn
      70: astore        5
      72: aload_2
      73: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      78: aload         5
      80: athrow
    Exception table:
       from    to  target type
          16    37    70   any
          46    61    70   any
          70    72    70   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: astore_1
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: getfield      #7                  // Field objectStore:Ljava/util/Map;
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      25: istore_2
      26: aload_1
      27: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      32: iload_2
      33: ireturn
      34: astore_3
      35: aload_1
      36: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      41: aload_3
      42: athrow
    Exception table:
       from    to  target type
          16    26    34   any
          34    35    34   any

  public java.lang.String put(T);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
      10: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      15: astore_2
      16: aload_2
      17: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: aload_1
      24: invokevirtual #20                 // Method getIndex:(Ljava/lang/Object;)Ljava/lang/String;
      27: astore_3
      28: aload_0
      29: getfield      #7                  // Field objectStore:Ljava/util/Map;
      32: aload_3
      33: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #21                 // class net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper
      41: astore        4
      43: aload         4
      45: ifnonnull     72
      48: new           #21                 // class net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper
      51: dup
      52: aload_0
      53: aload_1
      54: invokespecial #22                 // Method net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper."<init>":(Lnet/shibboleth/utilities/java/support/collection/IndexingObjectStore;Ljava/lang/Object;)V
      57: astore        4
      59: aload_0
      60: getfield      #7                  // Field objectStore:Ljava/util/Map;
      63: aload_3
      64: aload         4
      66: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload         4
      74: invokevirtual #24                 // Method net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper.incremementReferenceCount:()V
      77: aload_3
      78: astore        5
      80: aload_2
      81: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      86: aload         5
      88: areturn
      89: astore        6
      91: aload_2
      92: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      97: aload         6
      99: athrow
    Exception table:
       from    to  target type
          22    80    89   any
          89    91    89   any

  public T get(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
      10: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      15: astore_2
      16: aload_2
      17: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: getfield      #7                  // Field objectStore:Ljava/util/Map;
      26: aload_1
      27: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #21                 // class net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper
      35: astore_3
      36: aload_3
      37: ifnull        55
      40: aload_3
      41: invokevirtual #25                 // Method net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper.getObject:()Ljava/lang/Object;
      44: astore        4
      46: aload_2
      47: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: aload         4
      54: areturn
      55: aconst_null
      56: astore        4
      58: aload_2
      59: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      64: aload         4
      66: areturn
      67: astore        5
      69: aload_2
      70: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      75: aload         5
      77: athrow
    Exception table:
       from    to  target type
          22    46    67   any
          55    58    67   any
          67    69    67   any

  public void remove(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
       9: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      14: astore_2
      15: aload_2
      16: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      21: aload_0
      22: getfield      #7                  // Field objectStore:Ljava/util/Map;
      25: aload_1
      26: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #21                 // class net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper
      34: astore_3
      35: aload_3
      36: ifnull        69
      39: aload_3
      40: invokevirtual #26                 // Method net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper.decremementReferenceCount:()V
      43: aload_3
      44: invokevirtual #27                 // Method net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper.getReferenceCount:()I
      47: ifne          69
      50: aload_0
      51: getfield      #7                  // Field objectStore:Ljava/util/Map;
      54: aload_1
      55: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_0
      62: aload_3
      63: invokevirtual #25                 // Method net/shibboleth/utilities/java/support/collection/IndexingObjectStore$StoredObjectWrapper.getObject:()Ljava/lang/Object;
      66: invokevirtual #29                 // Method removeIndex:(Ljava/lang/Object;)V
      69: aload_2
      70: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      75: goto          89
      78: astore        4
      80: aload_2
      81: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      86: aload         4
      88: athrow
      89: return
    Exception table:
       from    to  target type
          21    69    78   any
          78    80    78   any

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: astore_1
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: getfield      #7                  // Field objectStore:Ljava/util/Map;
      20: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
      25: istore_2
      26: aload_1
      27: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      32: iload_2
      33: ireturn
      34: astore_3
      35: aload_1
      36: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      41: aload_3
      42: athrow
    Exception table:
       from    to  target type
          16    26    34   any
          34    35    34   any

  protected java.lang.String getIndex(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field indexStore:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnonnull     45
      18: aload_0
      19: dup
      20: getfield      #9                  // Field lastIndex:I
      23: iconst_1
      24: iadd
      25: dup_x1
      26: putfield      #9                  // Field lastIndex:I
      29: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: astore_2
      33: aload_0
      34: getfield      #8                  // Field indexStore:Ljava/util/Map;
      37: aload_1
      38: aload_2
      39: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload_2
      46: invokevirtual #18                 // Method java/lang/Integer.toString:()Ljava/lang/String;
      49: areturn

  protected void removeIndex(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field indexStore:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return
}
