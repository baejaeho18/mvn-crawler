Compiled from "IPRangeAccessControl.java"
public class net.shibboleth.utilities.java.support.security.IPRangeAccessControl extends net.shibboleth.utilities.java.support.component.AbstractIdentifiableInitializableComponent implements net.shibboleth.utilities.java.support.security.AccessControl {
  private final org.slf4j.Logger log;

  private java.util.Collection<net.shibboleth.utilities.java.support.net.IPRange> allowedRanges;

  public net.shibboleth.utilities.java.support.security.IPRangeAccessControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/shibboleth/utilities/java/support/component/AbstractIdentifiableInitializableComponent."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class net/shibboleth/utilities/java/support/security/IPRangeAccessControl
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: invokestatic  #5                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: putfield      #6                  // Field allowedRanges:Ljava/util/Collection;
      21: return

  public void setAllowedRanges(java.util.Collection<net.shibboleth.utilities.java.support.net.IPRange>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method net/shibboleth/utilities/java/support/component/ComponentSupport.ifInitializedThrowUnmodifiabledComponentException:(Lnet/shibboleth/utilities/java/support/component/InitializableComponent;)V
       4: aload_1
       5: ldc           #8                  // String IPRange collection cannot be null
       7: invokestatic  #9                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: new           #10                 // class java/util/ArrayList
      15: dup
      16: aload_1
      17: invokestatic  #11                 // Method com/google/common/base/Predicates.notNull:()Lcom/google/common/base/Predicate;
      20: invokestatic  #12                 // Method com/google/common/collect/Collections2.filter:(Ljava/util/Collection;Lcom/google/common/base/Predicate;)Ljava/util/Collection;
      23: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      26: putfield      #6                  // Field allowedRanges:Ljava/util/Collection;
      29: return

  public boolean checkAccess(javax.servlet.ServletRequest, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #14                 // String ServletRequest cannot be null
       3: invokestatic  #9                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #15,  1           // InterfaceMethod javax/servlet/ServletRequest.getRemoteAddr:()Ljava/lang/String;
      13: astore        4
      15: aload         4
      17: ifnull        153
      20: aload_0
      21: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      24: ldc           #16                 // String {} Evaluating client address \'{}\'
      26: aload_0
      27: invokespecial #17                 // Method getLogPrefix:()Ljava/lang/String;
      30: aload         4
      32: invokeinterface #18,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      37: aload         4
      39: invokestatic  #19                 // Method com/google/common/net/InetAddresses.forString:(Ljava/lang/String;)Ljava/net/InetAddress;
      42: invokevirtual #20                 // Method java/net/InetAddress.getAddress:()[B
      45: astore        5
      47: aload_0
      48: getfield      #6                  // Field allowedRanges:Ljava/util/Collection;
      51: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      56: astore        6
      58: aload         6
      60: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          95
      68: aload         6
      70: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #24                 // class net/shibboleth/utilities/java/support/net/IPRange
      78: astore        7
      80: aload         7
      82: aload         5
      84: invokevirtual #25                 // Method net/shibboleth/utilities/java/support/net/IPRange.contains:([B)Z
      87: ifeq          92
      90: iconst_1
      91: ireturn
      92: goto          58
      95: goto          133
      98: astore        5
     100: aload_0
     101: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     104: new           #27                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     111: aload_0
     112: invokespecial #17                 // Method getLogPrefix:()Ljava/lang/String;
     115: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #30                 // String  Error translating client address
     120: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: aload         5
     128: invokeinterface #32,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     133: aload_0
     134: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     137: ldc           #33                 // String {} Denied request from client address \'{}\'
     139: aload_0
     140: invokespecial #17                 // Method getLogPrefix:()Ljava/lang/String;
     143: aload         4
     145: invokeinterface #34,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     150: goto          168
     153: aload_0
     154: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     157: ldc           #35                 // String {} No client address, access denied
     159: aload_0
     160: invokespecial #17                 // Method getLogPrefix:()Ljava/lang/String;
     163: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     168: iconst_0
     169: ireturn
    Exception table:
       from    to  target type
          37    91    98   Class java/lang/IllegalArgumentException
          92    95    98   Class java/lang/IllegalArgumentException

  private java.lang.String getLogPrefix();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #37                 // String Policy
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #38                 // Method getId:()Ljava/lang/String;
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #39                 // String :
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
