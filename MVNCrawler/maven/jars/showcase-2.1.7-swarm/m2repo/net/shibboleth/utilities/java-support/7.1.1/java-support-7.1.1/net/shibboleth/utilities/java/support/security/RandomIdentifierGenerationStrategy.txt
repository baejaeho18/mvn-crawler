Compiled from "RandomIdentifierGenerationStrategy.java"
public class net.shibboleth.utilities.java.support.security.RandomIdentifierGenerationStrategy implements net.shibboleth.utilities.java.support.security.IdentifierGenerationStrategy {
  private final java.util.Random random;

  private final int sizeOfIdentifier;

  private final org.apache.commons.codec.BinaryEncoder encoder;

  public net.shibboleth.utilities.java.support.security.RandomIdentifierGenerationStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String SHA1PRNG
       7: invokestatic  #3                  // Method java/security/SecureRandom.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;
      10: putfield      #4                  // Field random:Ljava/util/Random;
      13: aload_0
      14: bipush        16
      16: putfield      #5                  // Field sizeOfIdentifier:I
      19: aload_0
      20: new           #6                  // class org/apache/commons/codec/binary/Hex
      23: dup
      24: invokespecial #7                  // Method org/apache/commons/codec/binary/Hex."<init>":()V
      27: putfield      #8                  // Field encoder:Lorg/apache/commons/codec/BinaryEncoder;
      30: goto          45
      33: astore_1
      34: new           #10                 // class java/lang/RuntimeException
      37: dup
      38: ldc           #11                 // String SHA1PRNG is required to be supported by the JVM but is not
      40: aload_1
      41: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: return
    Exception table:
       from    to  target type
           4    30    33   Class java/security/NoSuchAlgorithmException

  public net.shibboleth.utilities.java.support.security.RandomIdentifierGenerationStrategy(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String SHA1PRNG
       7: invokestatic  #3                  // Method java/security/SecureRandom.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;
      10: putfield      #4                  // Field random:Ljava/util/Random;
      13: aload_0
      14: lconst_0
      15: iload_1
      16: i2l
      17: ldc           #13                 // String Number of bytes in the identifier must be greater than 0
      19: invokestatic  #14                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isGreaterThan:(JJLjava/lang/String;)J
      22: l2i
      23: putfield      #5                  // Field sizeOfIdentifier:I
      26: aload_0
      27: new           #6                  // class org/apache/commons/codec/binary/Hex
      30: dup
      31: invokespecial #7                  // Method org/apache/commons/codec/binary/Hex."<init>":()V
      34: putfield      #8                  // Field encoder:Lorg/apache/commons/codec/BinaryEncoder;
      37: goto          52
      40: astore_2
      41: new           #10                 // class java/lang/RuntimeException
      44: dup
      45: ldc           #11                 // String SHA1PRNG is required to be supported by the JVM but is not
      47: aload_2
      48: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: athrow
      52: return
    Exception table:
       from    to  target type
           4    37    40   Class java/security/NoSuchAlgorithmException

  public net.shibboleth.utilities.java.support.security.RandomIdentifierGenerationStrategy(java.util.Random, int, org.apache.commons.codec.BinaryEncoder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #15                 // String Random number source can not be null
       8: invokestatic  #16                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #17                 // class java/util/Random
      14: putfield      #4                  // Field random:Ljava/util/Random;
      17: aload_0
      18: lconst_0
      19: iload_2
      20: i2l
      21: ldc           #13                 // String Number of bytes in the identifier must be greater than 0
      23: invokestatic  #14                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isGreaterThan:(JJLjava/lang/String;)J
      26: l2i
      27: putfield      #5                  // Field sizeOfIdentifier:I
      30: aload_0
      31: aload_3
      32: ldc           #18                 // String Identifier is encoder can not be null
      34: invokestatic  #16                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #19                 // class org/apache/commons/codec/BinaryEncoder
      40: putfield      #8                  // Field encoder:Lorg/apache/commons/codec/BinaryEncoder;
      43: return

  public java.lang.String generateIdentifier();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #20                 // Method generateIdentifier:(Z)Ljava/lang/String;
       5: areturn

  public java.lang.String generateIdentifier(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sizeOfIdentifier:I
       4: newarray       byte
       6: astore_2
       7: aload_0
       8: getfield      #4                  // Field random:Ljava/util/Random;
      11: aload_2
      12: invokevirtual #21                 // Method java/util/Random.nextBytes:([B)V
      15: iload_1
      16: ifeq          51
      19: new           #22                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #24                 // String _
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #8                  // Field encoder:Lorg/apache/commons/codec/BinaryEncoder;
      35: aload_2
      36: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/codec/BinaryEncoder.encode:([B)[B
      41: invokestatic  #27                 // Method org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;
      44: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn
      51: aload_0
      52: getfield      #8                  // Field encoder:Lorg/apache/commons/codec/BinaryEncoder;
      55: aload_2
      56: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/codec/BinaryEncoder.encode:([B)[B
      61: invokestatic  #27                 // Method org/apache/commons/codec/binary/StringUtils.newStringUsAscii:([B)Ljava/lang/String;
      64: areturn
      65: astore_3
      66: new           #10                 // class java/lang/RuntimeException
      69: dup
      70: aload_3
      71: invokespecial #30                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
          15    50    65   Class org/apache/commons/codec/EncoderException
          51    64    65   Class org/apache/commons/codec/EncoderException
}
