Compiled from "ClassToInstanceMultiMap.java"
public class net.shibboleth.utilities.java.support.collection.ClassToInstanceMultiMap<B> {
  private final boolean indexSupertypes;

  private final java.util.HashMap<java.lang.Class<?>, java.util.List<B>> backingMap;

  private final java.util.List<B> values;

  public net.shibboleth.utilities.java.support.collection.ClassToInstanceMultiMap();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public net.shibboleth.utilities.java.support.collection.ClassToInstanceMultiMap(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field backingMap:Ljava/util/HashMap;
      15: aload_0
      16: new           #6                  // class java/util/ArrayList
      19: dup
      20: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #8                  // Field values:Ljava/util/List;
      26: aload_0
      27: iload_1
      28: putfield      #9                  // Field indexSupertypes:Z
      31: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #8                  // Field values:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      13: invokevirtual #11                 // Method java/util/HashMap.clear:()V
      16: return

  public boolean containsKey(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      10: aload_1
      11: invokevirtual #12                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  public boolean containsValue(B);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #8                  // Field values:Ljava/util/List;
      10: aload_1
      11: invokeinterface #13,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      16: ireturn

  public <T> java.util.List<T> get(java.lang.Class<T>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #14                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: areturn
       8: aload_0
       9: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      12: aload_1
      13: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #16                 // class java/util/List
      19: astore_2
      20: aload_2
      21: ifnonnull     28
      24: invokestatic  #14                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      27: areturn
      28: aload_2
      29: invokestatic  #17                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      32: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field values:Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public java.util.Set<java.lang.Class<?>> keys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
       4: invokevirtual #19                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokestatic  #20                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      10: areturn

  public void put(B);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #8                  // Field values:Ljava/util/List;
       9: aload_1
      10: invokeinterface #13,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      15: ifne          29
      18: aload_0
      19: getfield      #8                  // Field values:Ljava/util/List;
      22: aload_1
      23: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: aload_1
      31: invokespecial #22                 // Method getIndexTypes:(Ljava/lang/Object;)Ljava/util/Set;
      34: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          117
      49: aload_3
      50: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #26                 // class java/lang/Class
      58: astore        4
      60: aload_0
      61: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      64: aload         4
      66: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #16                 // class java/util/List
      72: astore_2
      73: aload_2
      74: ifnonnull     96
      77: new           #6                  // class java/util/ArrayList
      80: dup
      81: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      84: astore_2
      85: aload_0
      86: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      89: aload         4
      91: aload_2
      92: invokevirtual #27                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aload_2
      97: aload_1
      98: invokeinterface #13,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     103: ifne          114
     106: aload_2
     107: aload_1
     108: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     113: pop
     114: goto          40
     117: return

  public void putAll(java.lang.Iterable<? extends B>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokeinterface #28,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          36
      21: aload_2
      22: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokevirtual #29                 // Method put:(Ljava/lang/Object;)V
      33: goto          12
      36: return

  public void putAll(net.shibboleth.utilities.java.support.collection.ClassToInstanceMultiMap<? extends B>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokevirtual #30                 // Method values:()Ljava/util/Collection;
      10: invokevirtual #31                 // Method putAll:(Ljava/lang/Iterable;)V
      13: return

  public void remove(B);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #8                  // Field values:Ljava/util/List;
       9: aload_1
      10: invokeinterface #32,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: aload_1
      18: invokespecial #22                 // Method getIndexTypes:(Ljava/lang/Object;)Ljava/util/Set;
      21: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          94
      36: aload_3
      37: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #26                 // class java/lang/Class
      45: astore        4
      47: aload_0
      48: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      51: aload         4
      53: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #16                 // class java/util/List
      59: astore_2
      60: aload_2
      61: ifnull        91
      64: aload_2
      65: aload_1
      66: invokeinterface #32,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      71: pop
      72: aload_2
      73: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      78: ifeq          91
      81: aload_0
      82: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      85: aload         4
      87: invokevirtual #33                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: goto          27
      94: return

  public void removeAll(java.lang.Iterable<? extends B>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokeinterface #28,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          36
      21: aload_2
      22: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokevirtual #34                 // Method remove:(Ljava/lang/Object;)V
      33: goto          12
      36: return

  public void removeAll(net.shibboleth.utilities.java.support.collection.ClassToInstanceMultiMap<? extends B>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokevirtual #30                 // Method values:()Ljava/util/Collection;
      10: invokevirtual #35                 // Method removeAll:(Ljava/lang/Iterable;)V
      13: return

  public void remove(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
       9: aload_1
      10: invokevirtual #33                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class java/util/List
      16: astore_2
      17: aload_2
      18: ifnull        54
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          54
      37: aload_3
      38: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: astore        4
      45: aload_0
      46: aload         4
      48: invokevirtual #34                 // Method remove:(Ljava/lang/Object;)V
      51: goto          28
      54: return

  public java.util.Collection<? extends B> values();
    Code:
       0: aload_0
       1: getfield      #8                  // Field values:Ljava/util/List;
       4: invokestatic  #17                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  private java.util.Set<java.lang.Class<?>> getIndexTypes(B);
    Code:
       0: new           #37                 // class java/util/HashSet
       3: dup
       4: invokespecial #38                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #40                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: getfield      #9                  // Field indexSupertypes:Z
      21: ifeq          33
      24: aload_0
      25: aload_1
      26: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: aload_2
      30: invokespecial #41                 // Method getSuperTypes:(Ljava/lang/Class;Ljava/util/Set;)V
      33: aload_2
      34: areturn

  private void getSuperTypes(java.lang.Class<?>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: ifnull        30
       9: aload_3
      10: ldc_w         #43                 // class java/lang/Object
      13: if_acmpeq     30
      16: aload_2
      17: aload_3
      18: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: aload_3
      26: aload_2
      27: invokespecial #41                 // Method getSuperTypes:(Ljava/lang/Class;Ljava/util/Set;)V
      30: aload_1
      31: invokevirtual #45                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      34: astore        4
      36: aload         4
      38: arraylength
      39: ifle          90
      42: aload         4
      44: astore        5
      46: aload         5
      48: arraylength
      49: istore        6
      51: iconst_0
      52: istore        7
      54: iload         7
      56: iload         6
      58: if_icmpge     90
      61: aload         5
      63: iload         7
      65: aaload
      66: astore        8
      68: aload_2
      69: aload         8
      71: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload_0
      78: aload         8
      80: aload_2
      81: invokespecial #41                 // Method getSuperTypes:(Ljava/lang/Class;Ljava/util/Set;)V
      84: iinc          7, 1
      87: goto          54
      90: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
       4: invokevirtual #46                 // Method java/util/HashMap.hashCode:()I
       7: aload_0
       8: getfield      #8                  // Field values:Ljava/util/List;
      11: invokeinterface #47,  1           // InterfaceMethod java/util/List.hashCode:()I
      16: iadd
      17: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: instanceof    #48                 // class net/shibboleth/utilities/java/support/collection/ClassToInstanceMultiMap
      11: ifeq          55
      14: aload_1
      15: checkcast     #48                 // class net/shibboleth/utilities/java/support/collection/ClassToInstanceMultiMap
      18: astore_2
      19: aload_0
      20: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      23: aload_2
      24: getfield      #5                  // Field backingMap:Ljava/util/HashMap;
      27: invokevirtual #49                 // Method java/util/HashMap.equals:(Ljava/lang/Object;)Z
      30: ifeq          53
      33: aload_0
      34: getfield      #8                  // Field values:Ljava/util/List;
      37: aload_2
      38: getfield      #8                  // Field values:Ljava/util/List;
      41: invokeinterface #50,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn
      55: iconst_0
      56: ireturn
}
