Compiled from "BasicAccessControlService.java"
public class net.shibboleth.utilities.java.support.security.BasicAccessControlService extends net.shibboleth.utilities.java.support.component.AbstractIdentifiableInitializableComponent implements net.shibboleth.utilities.java.support.security.AccessControlService {
  private final org.slf4j.Logger log;

  private java.util.Map<java.lang.String, net.shibboleth.utilities.java.support.security.AccessControl> policyMap;

  public net.shibboleth.utilities.java.support.security.BasicAccessControlService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/shibboleth/utilities/java/support/component/AbstractIdentifiableInitializableComponent."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class net/shibboleth/utilities/java/support/security/BasicAccessControlService
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: invokestatic  #5                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      18: putfield      #6                  // Field policyMap:Ljava/util/Map;
      21: return

  public void setPolicyMap(java.util.Map<java.lang.String, net.shibboleth.utilities.java.support.security.AccessControl>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method net/shibboleth/utilities/java/support/component/ComponentSupport.ifInitializedThrowUnmodifiabledComponentException:(Lnet/shibboleth/utilities/java/support/component/InitializableComponent;)V
       4: aload_1
       5: ldc           #8                  // String Policy map cannot be null
       7: invokestatic  #9                  // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: new           #10                 // class java/util/HashMap
      15: dup
      16: aload_1
      17: invokeinterface #11,  1           // InterfaceMethod java/util/Map.size:()I
      22: invokespecial #12                 // Method java/util/HashMap."<init>":(I)V
      25: putfield      #6                  // Field policyMap:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      34: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          108
      49: aload_2
      50: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #17                 // class java/util/Map$Entry
      58: astore_3
      59: aload_3
      60: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: checkcast     #19                 // class java/lang/String
      68: invokestatic  #20                 // Method net/shibboleth/utilities/java/support/primitive/StringSupport.trimOrNull:(Ljava/lang/String;)Ljava/lang/String;
      71: astore        4
      73: aload         4
      75: ifnull        105
      78: aload_3
      79: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      84: ifnull        105
      87: aload_0
      88: getfield      #6                  // Field policyMap:Ljava/util/Map;
      91: aload         4
      93: aload_3
      94: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      99: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     104: pop
     105: goto          40
     108: return

  public net.shibboleth.utilities.java.support.security.AccessControl getInstance(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field policyMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #24                 // class net/shibboleth/utilities/java/support/security/AccessControl
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      24: ldc           #25                 // String Access Control Service {}: No policy named \'{}\' found, returning default denial policy
      26: aload_0
      27: invokevirtual #26                 // Method getId:()Ljava/lang/String;
      30: aload_1
      31: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: new           #28                 // class net/shibboleth/utilities/java/support/security/BasicAccessControlService$1
      39: dup
      40: aload_0
      41: invokespecial #29                 // Method net/shibboleth/utilities/java/support/security/BasicAccessControlService$1."<init>":(Lnet/shibboleth/utilities/java/support/security/BasicAccessControlService;)V
      44: areturn
}
