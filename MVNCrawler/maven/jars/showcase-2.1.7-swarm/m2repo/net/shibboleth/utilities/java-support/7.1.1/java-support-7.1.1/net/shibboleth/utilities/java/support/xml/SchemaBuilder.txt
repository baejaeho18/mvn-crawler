Compiled from "SchemaBuilder.java"
public class net.shibboleth.utilities.java.support.xml.SchemaBuilder {
  private final org.slf4j.Logger log;

  private net.shibboleth.utilities.java.support.xml.SchemaBuilder$SchemaLanguage schemaLang;

  private java.util.List<javax.xml.transform.Source> sources;

  private org.w3c.dom.ls.LSResourceResolver resourceResolver;

  private org.xml.sax.ErrorHandler errorHandler;

  private java.util.Map<java.lang.String, java.lang.Boolean> features;

  private java.util.Map<java.lang.String, java.lang.Object> properties;

  private boolean alreadyBuilt;

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class net/shibboleth/utilities/java/support/xml/SchemaBuilder
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: getstatic     #5                  // Field net/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage.XML:Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage;
      18: putfield      #6                  // Field schemaLang:Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage;
      21: aload_0
      22: new           #7                  // class java/util/ArrayList
      25: dup
      26: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      29: putfield      #9                  // Field sources:Ljava/util/List;
      32: aload_0
      33: new           #10                 // class java/util/HashMap
      36: dup
      37: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      40: putfield      #12                 // Field features:Ljava/util/Map;
      43: aload_0
      44: new           #10                 // class java/util/HashMap
      47: dup
      48: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      51: putfield      #13                 // Field properties:Ljava/util/Map;
      54: aload_0
      55: new           #14                 // class net/shibboleth/utilities/java/support/xml/LoggingErrorHandler
      58: dup
      59: aload_0
      60: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      63: invokespecial #15                 // Method net/shibboleth/utilities/java/support/xml/LoggingErrorHandler."<init>":(Lorg/slf4j/Logger;)V
      66: putfield      #16                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
      69: aload_0
      70: iconst_0
      71: putfield      #17                 // Field alreadyBuilt:Z
      74: return

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder setSchemaLanguage(net.shibboleth.utilities.java.support.xml.SchemaBuilder$SchemaLanguage);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #18                 // String SchemaLanguage cannot be null
       4: invokestatic  #19                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #20                 // class net/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage
      10: putfield      #6                  // Field schemaLang:Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage;
      13: aload_0
      14: areturn

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder setResourceResolver(org.w3c.dom.ls.LSResourceResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field resourceResolver:Lorg/w3c/dom/ls/LSResourceResolver;
       5: aload_0
       6: areturn

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder setErrorHandler(org.xml.sax.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
       5: aload_0
       6: areturn

  public void setFeature(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field features:Ljava/util/Map;
       4: aload_1
       5: iload_2
       6: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void setProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder resetSchemas();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sources:Ljava/util/List;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: areturn

  public void setSchemas(java.util.Collection<javax.xml.transform.Source>);
    Code:
       0: aload_1
       1: ldc           #25                 // String Schema source file paths cannot be null
       3: invokestatic  #19                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #26                 // Method resetSchemas:()Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder;
      11: pop
      12: aload_1
      13: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          51
      28: aload_2
      29: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #30                 // class javax/xml/transform/Source
      37: astore_3
      38: aload_3
      39: ifnull        48
      42: aload_0
      43: aload_3
      44: invokevirtual #31                 // Method addSchema:(Ljavax/xml/transform/Source;)Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder;
      47: pop
      48: goto          19
      51: return

  public void setSchemaResources(java.util.Collection<net.shibboleth.utilities.java.support.resource.Resource>);
    Code:
       0: aload_1
       1: ldc           #32                 // String Schema resources cannot be null
       3: invokestatic  #19                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #26                 // Method resetSchemas:()Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder;
      11: pop
      12: aload_1
      13: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          51
      28: aload_2
      29: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #33                 // class net/shibboleth/utilities/java/support/resource/Resource
      37: astore_3
      38: aload_3
      39: ifnull        48
      42: aload_0
      43: aload_3
      44: invokevirtual #34                 // Method addSchema:(Lnet/shibboleth/utilities/java/support/resource/Resource;)Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder;
      47: pop
      48: goto          19
      51: return

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder addSchema(java.io.InputStream);
    Code:
       0: aload_1
       1: ldc           #35                 // String Schema source input stream cannot be null
       3: invokestatic  #19                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: new           #36                 // class javax/xml/transform/stream/StreamSource
      11: dup
      12: aload_1
      13: invokespecial #37                 // Method javax/xml/transform/stream/StreamSource."<init>":(Ljava/io/InputStream;)V
      16: invokevirtual #31                 // Method addSchema:(Ljavax/xml/transform/Source;)Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder;
      19: pop
      20: aload_0
      21: areturn

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder addSchema(javax.xml.transform.Source);
    Code:
       0: aload_1
       1: ldc           #38                 // String Schema source inputstreams can not be null
       3: invokestatic  #19                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #9                  // Field sources:Ljava/util/List;
      11: aload_1
      12: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: areturn

  public net.shibboleth.utilities.java.support.xml.SchemaBuilder addSchema(net.shibboleth.utilities.java.support.resource.Resource);
    Code:
       0: aload_1
       1: ldc           #40                 // String Schema resource cannot be null
       3: invokestatic  #19                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokeinterface #41,  1           // InterfaceMethod net/shibboleth/utilities/java/support/resource/Resource.getInputStream:()Ljava/io/InputStream;
      14: invokevirtual #42                 // Method addSchema:(Ljava/io/InputStream;)Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder;
      17: pop
      18: goto          40
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      26: ldc           #44                 // String IO error adding schema from resource: {}
      28: aload_1
      29: invokeinterface #45,  1           // InterfaceMethod net/shibboleth/utilities/java/support/resource/Resource.getDescription:()Ljava/lang/String;
      34: aload_2
      35: invokeinterface #46,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_0
      41: areturn
    Exception table:
       from    to  target type
           7    18    21   Class java/io/IOException

  public synchronized javax.xml.validation.Schema buildSchema() throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field alreadyBuilt:Z
       4: ifeq          17
       7: new           #47                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #48                 // String Schema already built, cannot build a second time
      13: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #9                  // Field sources:Ljava/util/List;
      21: ldc           #50                 // String No schema sources specified
      23: invokestatic  #51                 // Method net/shibboleth/utilities/java/support/logic/Constraint.isNotEmpty:(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
      26: pop
      27: aload_0
      28: getfield      #6                  // Field schemaLang:Lnet/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage;
      31: invokevirtual #52                 // Method net/shibboleth/utilities/java/support/xml/SchemaBuilder$SchemaLanguage.getSchemaFactory:()Ljavax/xml/validation/SchemaFactory;
      34: astore_1
      35: aload_0
      36: getfield      #12                 // Field features:Ljava/util/Map;
      39: invokeinterface #53,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      44: ifeq          154
      47: aload_0
      48: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      51: ldc           #54                 // String No SchemaFactory features set, setting FEATURE_SECURE_PROCESSING by default
      53: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      58: aload_1
      59: ldc           #56                 // String http://javax.xml.XMLConstants/feature/secure-processing
      61: iconst_1
      62: invokevirtual #57                 // Method javax/xml/validation/SchemaFactory.setFeature:(Ljava/lang/String;Z)V
      65: aload_0
      66: getfield      #21                 // Field resourceResolver:Lorg/w3c/dom/ls/LSResourceResolver;
      69: ifnull        96
      72: aload_0
      73: getfield      #21                 // Field resourceResolver:Lorg/w3c/dom/ls/LSResourceResolver;
      76: instanceof    #58                 // class net/shibboleth/utilities/java/support/xml/ClasspathResolver
      79: ifne          96
      82: aload_0
      83: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      86: ldc           #59                 // String Custom LSResourceResolver supplied, may interact badly with secure processing mode
      88: invokeinterface #60,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      93: goto          216
      96: aload_1
      97: ldc           #61                 // String http://javax.xml.XMLConstants/property/accessExternalSchema
      99: ldc           #62                 // String all
     101: invokevirtual #63                 // Method javax/xml/validation/SchemaFactory.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     104: aload_0
     105: getfield      #21                 // Field resourceResolver:Lorg/w3c/dom/ls/LSResourceResolver;
     108: ifnonnull     125
     111: aload_0
     112: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     115: ldc           #64                 // String Allowing schema and DTD access to non-remote resources (LSResourceResolver unset)
     117: invokeinterface #65,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     122: goto          136
     125: aload_0
     126: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     129: ldc           #66                 // String Allowing schema and DTD access to non-remote resources (ClasspathResolver set)
     131: invokeinterface #55,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     136: goto          216
     139: astore_2
     140: aload_0
     141: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     144: ldc           #68                 // String Unable to set ACCESS_EXTERNAL_SCHEMA property, classpath-based schema lookup might fail
     146: invokeinterface #65,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     151: goto          216
     154: aload_0
     155: getfield      #12                 // Field features:Ljava/util/Map;
     158: invokeinterface #69,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     163: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     168: astore_2
     169: aload_2
     170: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     175: ifeq          216
     178: aload_2
     179: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     184: checkcast     #71                 // class java/util/Map$Entry
     187: astore_3
     188: aload_1
     189: aload_3
     190: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     195: checkcast     #73                 // class java/lang/String
     198: aload_3
     199: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     204: checkcast     #75                 // class java/lang/Boolean
     207: invokevirtual #76                 // Method java/lang/Boolean.booleanValue:()Z
     210: invokevirtual #57                 // Method javax/xml/validation/SchemaFactory.setFeature:(Ljava/lang/String;Z)V
     213: goto          169
     216: aload_0
     217: getfield      #13                 // Field properties:Ljava/util/Map;
     220: invokeinterface #69,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     225: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     230: astore_2
     231: aload_2
     232: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     237: ifeq          272
     240: aload_2
     241: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     246: checkcast     #71                 // class java/util/Map$Entry
     249: astore_3
     250: aload_1
     251: aload_3
     252: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     257: checkcast     #73                 // class java/lang/String
     260: aload_3
     261: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     266: invokevirtual #63                 // Method javax/xml/validation/SchemaFactory.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     269: goto          231
     272: aload_1
     273: aload_0
     274: getfield      #16                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
     277: invokevirtual #77                 // Method javax/xml/validation/SchemaFactory.setErrorHandler:(Lorg/xml/sax/ErrorHandler;)V
     280: aload_0
     281: getfield      #21                 // Field resourceResolver:Lorg/w3c/dom/ls/LSResourceResolver;
     284: ifnull        295
     287: aload_1
     288: aload_0
     289: getfield      #21                 // Field resourceResolver:Lorg/w3c/dom/ls/LSResourceResolver;
     292: invokevirtual #78                 // Method javax/xml/validation/SchemaFactory.setResourceResolver:(Lorg/w3c/dom/ls/LSResourceResolver;)V
     295: aload_0
     296: iconst_1
     297: putfield      #17                 // Field alreadyBuilt:Z
     300: aload_1
     301: aload_0
     302: getfield      #9                  // Field sources:Ljava/util/List;
     305: aload_0
     306: getfield      #9                  // Field sources:Ljava/util/List;
     309: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
     314: anewarray     #30                 // class javax/xml/transform/Source
     317: invokeinterface #80,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     322: checkcast     #81                 // class "[Ljavax/xml/transform/Source;"
     325: invokevirtual #82                 // Method javax/xml/validation/SchemaFactory.newSchema:([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;
     328: areturn
    Exception table:
       from    to  target type
          96   136   139   Class org/xml/sax/SAXException
}
