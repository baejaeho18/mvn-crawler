Compiled from "ServiceManager.java"
public final class com.google.common.util.concurrent.ServiceManager {
  private static final java.util.logging.Logger logger;

  private static final com.google.common.util.concurrent.ListenerCallQueue$Callback<com.google.common.util.concurrent.ServiceManager$Listener> HEALTHY_CALLBACK;

  private static final com.google.common.util.concurrent.ListenerCallQueue$Callback<com.google.common.util.concurrent.ServiceManager$Listener> STOPPED_CALLBACK;

  private final com.google.common.util.concurrent.ServiceManager$ServiceManagerState state;

  private final com.google.common.collect.ImmutableList<com.google.common.util.concurrent.Service> services;

  public com.google.common.util.concurrent.ServiceManager(java.lang.Iterable<? extends com.google.common.util.concurrent.Service>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #5                  // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       8: astore_2
       9: aload_2
      10: invokevirtual #6                  // Method com/google/common/collect/ImmutableList.isEmpty:()Z
      13: ifeq          47
      16: getstatic     #3                  // Field logger:Ljava/util/logging/Logger;
      19: getstatic     #7                  // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      22: ldc           #8                  // String ServiceManager configured with no services.  Is your application configured properly?
      24: new           #9                  // class com/google/common/util/concurrent/ServiceManager$EmptyServiceManagerWarning
      27: dup
      28: aconst_null
      29: invokespecial #10                 // Method com/google/common/util/concurrent/ServiceManager$EmptyServiceManagerWarning."<init>":(Lcom/google/common/util/concurrent/ServiceManager$1;)V
      32: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      35: new           #12                 // class com/google/common/util/concurrent/ServiceManager$NoOpService
      38: dup
      39: aconst_null
      40: invokespecial #13                 // Method com/google/common/util/concurrent/ServiceManager$NoOpService."<init>":(Lcom/google/common/util/concurrent/ServiceManager$1;)V
      43: invokestatic  #14                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
      46: astore_2
      47: aload_0
      48: new           #15                 // class com/google/common/util/concurrent/ServiceManager$ServiceManagerState
      51: dup
      52: aload_2
      53: invokespecial #16                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState."<init>":(Lcom/google/common/collect/ImmutableCollection;)V
      56: putfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
      59: aload_0
      60: aload_2
      61: putfield      #18                 // Field services:Lcom/google/common/collect/ImmutableList;
      64: new           #19                 // class java/lang/ref/WeakReference
      67: dup
      68: aload_0
      69: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
      72: invokespecial #20                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      75: astore_3
      76: aload_2
      77: invokevirtual #21                 // Method com/google/common/collect/ImmutableList.iterator:()Ljava/util/Iterator;
      80: astore        4
      82: aload         4
      84: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          159
      92: aload         4
      94: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #24                 // class com/google/common/util/concurrent/Service
     102: astore        5
     104: aload         5
     106: new           #25                 // class com/google/common/util/concurrent/ServiceManager$ServiceListener
     109: dup
     110: aload         5
     112: aload_3
     113: invokespecial #26                 // Method com/google/common/util/concurrent/ServiceManager$ServiceListener."<init>":(Lcom/google/common/util/concurrent/Service;Ljava/lang/ref/WeakReference;)V
     116: invokestatic  #27                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
     119: invokeinterface #28,  3           // InterfaceMethod com/google/common/util/concurrent/Service.addListener:(Lcom/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V
     124: aload         5
     126: invokeinterface #29,  1           // InterfaceMethod com/google/common/util/concurrent/Service.state:()Lcom/google/common/util/concurrent/Service$State;
     131: getstatic     #30                 // Field com/google/common/util/concurrent/Service$State.NEW:Lcom/google/common/util/concurrent/Service$State;
     134: if_acmpne     141
     137: iconst_1
     138: goto          142
     141: iconst_0
     142: ldc           #31                 // String Can only manage NEW services, %s
     144: iconst_1
     145: anewarray     #32                 // class java/lang/Object
     148: dup
     149: iconst_0
     150: aload         5
     152: aastore
     153: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     156: goto          82
     159: aload_0
     160: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
     163: invokevirtual #34                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.markReady:()V
     166: return

  public void addListener(com.google.common.util.concurrent.ServiceManager$Listener, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: aload_1
       5: aload_2
       6: invokevirtual #35                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.addListener:(Lcom/google/common/util/concurrent/ServiceManager$Listener;Ljava/util/concurrent/Executor;)V
       9: return

  public void addListener(com.google.common.util.concurrent.ServiceManager$Listener);
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: aload_1
       5: invokestatic  #27                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
       8: invokevirtual #35                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.addListener:(Lcom/google/common/util/concurrent/ServiceManager$Listener;Ljava/util/concurrent/Executor;)V
      11: return

  public com.google.common.util.concurrent.ServiceManager startAsync();
    Code:
       0: aload_0
       1: getfield      #18                 // Field services:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #21                 // Method com/google/common/collect/ImmutableList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          66
      17: aload_1
      18: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #24                 // class com/google/common/util/concurrent/Service
      26: astore_2
      27: aload_2
      28: invokeinterface #29,  1           // InterfaceMethod com/google/common/util/concurrent/Service.state:()Lcom/google/common/util/concurrent/Service$State;
      33: astore_3
      34: aload_3
      35: getstatic     #30                 // Field com/google/common/util/concurrent/Service$State.NEW:Lcom/google/common/util/concurrent/Service$State;
      38: if_acmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ldc           #36                 // String Service %s is %s, cannot start it.
      48: iconst_2
      49: anewarray     #32                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_2
      55: aastore
      56: dup
      57: iconst_1
      58: aload_3
      59: aastore
      60: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      63: goto          8
      66: aload_0
      67: getfield      #18                 // Field services:Lcom/google/common/collect/ImmutableList;
      70: invokevirtual #21                 // Method com/google/common/collect/ImmutableList.iterator:()Ljava/util/Iterator;
      73: astore_1
      74: aload_1
      75: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          162
      83: aload_1
      84: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #24                 // class com/google/common/util/concurrent/Service
      92: astore_2
      93: aload_0
      94: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
      97: aload_2
      98: invokevirtual #38                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.tryStartTiming:(Lcom/google/common/util/concurrent/Service;)V
     101: aload_2
     102: invokeinterface #39,  1           // InterfaceMethod com/google/common/util/concurrent/Service.startAsync:()Lcom/google/common/util/concurrent/Service;
     107: pop
     108: goto          159
     111: astore_3
     112: getstatic     #3                  // Field logger:Ljava/util/logging/Logger;
     115: getstatic     #7                  // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     118: aload_2
     119: invokestatic  #41                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     122: invokestatic  #41                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     125: astore        4
     127: new           #42                 // class java/lang/StringBuilder
     130: dup
     131: bipush        24
     133: aload         4
     135: invokevirtual #43                 // Method java/lang/String.length:()I
     138: iadd
     139: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
     142: ldc           #45                 // String Unable to start Service
     144: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload         4
     149: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: aload_3
     156: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     159: goto          74
     162: aload_0
     163: areturn
    Exception table:
       from    to  target type
          93   108   111   Class java/lang/IllegalStateException

  public void awaitHealthy();
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: invokevirtual #48                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.awaitHealthy:()V
       7: return

  public void awaitHealthy(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: lload_1
       5: aload_3
       6: invokevirtual #49                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.awaitHealthy:(JLjava/util/concurrent/TimeUnit;)V
       9: return

  public com.google.common.util.concurrent.ServiceManager stopAsync();
    Code:
       0: aload_0
       1: getfield      #18                 // Field services:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #21                 // Method com/google/common/collect/ImmutableList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          37
      17: aload_1
      18: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #24                 // class com/google/common/util/concurrent/Service
      26: astore_2
      27: aload_2
      28: invokeinterface #50,  1           // InterfaceMethod com/google/common/util/concurrent/Service.stopAsync:()Lcom/google/common/util/concurrent/Service;
      33: pop
      34: goto          8
      37: aload_0
      38: areturn

  public void awaitStopped();
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: invokevirtual #51                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.awaitStopped:()V
       7: return

  public void awaitStopped(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: lload_1
       5: aload_3
       6: invokevirtual #52                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.awaitStopped:(JLjava/util/concurrent/TimeUnit;)V
       9: return

  public boolean isHealthy();
    Code:
       0: aload_0
       1: getfield      #18                 // Field services:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #21                 // Method com/google/common/collect/ImmutableList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          41
      17: aload_1
      18: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #24                 // class com/google/common/util/concurrent/Service
      26: astore_2
      27: aload_2
      28: invokeinterface #53,  1           // InterfaceMethod com/google/common/util/concurrent/Service.isRunning:()Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: goto          8
      41: iconst_1
      42: ireturn

  public com.google.common.collect.ImmutableMultimap<com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service> servicesByState();
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: invokevirtual #54                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.servicesByState:()Lcom/google/common/collect/ImmutableMultimap;
       7: areturn

  public com.google.common.collect.ImmutableMap<com.google.common.util.concurrent.Service, java.lang.Long> startupTimes();
    Code:
       0: aload_0
       1: getfield      #17                 // Field state:Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;
       4: invokevirtual #55                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState.startupTimes:()Lcom/google/common/collect/ImmutableMap;
       7: areturn

  public java.lang.String toString();
    Code:
       0: ldc_w         #56                 // class com/google/common/util/concurrent/ServiceManager
       3: invokestatic  #57                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Class;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       6: ldc           #58                 // String services
       8: aload_0
       9: getfield      #18                 // Field services:Lcom/google/common/collect/ImmutableList;
      12: ldc_w         #12                 // class com/google/common/util/concurrent/ServiceManager$NoOpService
      15: invokestatic  #59                 // Method com/google/common/base/Predicates.instanceOf:(Ljava/lang/Class;)Lcom/google/common/base/Predicate;
      18: invokestatic  #60                 // Method com/google/common/base/Predicates.not:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      21: invokestatic  #61                 // Method com/google/common/collect/Collections2.filter:(Ljava/util/Collection;Lcom/google/common/base/Predicate;)Ljava/util/Collection;
      24: invokevirtual #62                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      27: invokevirtual #63                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      30: areturn

  static java.util.logging.Logger access$200();
    Code:
       0: getstatic     #3                  // Field logger:Ljava/util/logging/Logger;
       3: areturn

  static com.google.common.util.concurrent.ListenerCallQueue$Callback access$300();
    Code:
       0: getstatic     #2                  // Field STOPPED_CALLBACK:Lcom/google/common/util/concurrent/ListenerCallQueue$Callback;
       3: areturn

  static com.google.common.util.concurrent.ListenerCallQueue$Callback access$400();
    Code:
       0: getstatic     #1                  // Field HEALTHY_CALLBACK:Lcom/google/common/util/concurrent/ListenerCallQueue$Callback;
       3: areturn

  static {};
    Code:
       0: ldc_w         #56                 // class com/google/common/util/concurrent/ServiceManager
       3: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #65                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: putstatic     #3                  // Field logger:Ljava/util/logging/Logger;
      12: new           #66                 // class com/google/common/util/concurrent/ServiceManager$1
      15: dup
      16: ldc           #67                 // String healthy()
      18: invokespecial #68                 // Method com/google/common/util/concurrent/ServiceManager$1."<init>":(Ljava/lang/String;)V
      21: putstatic     #1                  // Field HEALTHY_CALLBACK:Lcom/google/common/util/concurrent/ListenerCallQueue$Callback;
      24: new           #69                 // class com/google/common/util/concurrent/ServiceManager$2
      27: dup
      28: ldc           #70                 // String stopped()
      30: invokespecial #71                 // Method com/google/common/util/concurrent/ServiceManager$2."<init>":(Ljava/lang/String;)V
      33: putstatic     #2                  // Field STOPPED_CALLBACK:Lcom/google/common/util/concurrent/ListenerCallQueue$Callback;
      36: return
}
