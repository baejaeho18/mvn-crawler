Compiled from "Tables.java"
public final class com.google.common.collect.Tables {
  private static final com.google.common.base.Function<? extends java.util.Map<?, ?>, ? extends java.util.Map<?, ?>> UNMODIFIABLE_WRAPPER;

  private com.google.common.collect.Tables();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static <R, C, V> com.google.common.collect.Table$Cell<R, C, V> immutableCell(R, C, V);
    Code:
       0: new           #3                  // class com/google/common/collect/Tables$ImmutableCell
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #4                  // Method com/google/common/collect/Tables$ImmutableCell."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      10: areturn

  public static <R, C, V> com.google.common.collect.Table<C, R, V> transpose(com.google.common.collect.Table<R, C, V>);
    Code:
       0: aload_0
       1: instanceof    #5                  // class com/google/common/collect/Tables$TransposeTable
       4: ifeq          17
       7: aload_0
       8: checkcast     #5                  // class com/google/common/collect/Tables$TransposeTable
      11: getfield      #6                  // Field com/google/common/collect/Tables$TransposeTable.original:Lcom/google/common/collect/Table;
      14: goto          25
      17: new           #5                  // class com/google/common/collect/Tables$TransposeTable
      20: dup
      21: aload_0
      22: invokespecial #7                  // Method com/google/common/collect/Tables$TransposeTable."<init>":(Lcom/google/common/collect/Table;)V
      25: areturn

  public static <R, C, V> com.google.common.collect.Table<R, C, V> newCustomTable(java.util.Map<R, java.util.Map<C, V>>, com.google.common.base.Supplier<? extends java.util.Map<C, V>>);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       9: aload_1
      10: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #11                 // class com/google/common/collect/StandardTable
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #12                 // Method com/google/common/collect/StandardTable."<init>":(Ljava/util/Map;Lcom/google/common/base/Supplier;)V
      23: areturn

  public static <R, C, V1, V2> com.google.common.collect.Table<R, C, V2> transformValues(com.google.common.collect.Table<R, C, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: new           #13                 // class com/google/common/collect/Tables$TransformedTable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method com/google/common/collect/Tables$TransformedTable."<init>":(Lcom/google/common/collect/Table;Lcom/google/common/base/Function;)V
       9: areturn

  public static <R, C, V> com.google.common.collect.Table<R, C, V> unmodifiableTable(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>);
    Code:
       0: new           #15                 // class com/google/common/collect/Tables$UnmodifiableTable
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method com/google/common/collect/Tables$UnmodifiableTable."<init>":(Lcom/google/common/collect/Table;)V
       8: areturn

  public static <R, C, V> com.google.common.collect.RowSortedTable<R, C, V> unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable<R, ? extends C, ? extends V>);
    Code:
       0: new           #17                 // class com/google/common/collect/Tables$UnmodifiableRowSortedMap
       3: dup
       4: aload_0
       5: invokespecial #18                 // Method com/google/common/collect/Tables$UnmodifiableRowSortedMap."<init>":(Lcom/google/common/collect/RowSortedTable;)V
       8: areturn

  private static <K, V> com.google.common.base.Function<java.util.Map<K, V>, java.util.Map<K, V>> unmodifiableWrapper();
    Code:
       0: getstatic     #19                 // Field UNMODIFIABLE_WRAPPER:Lcom/google/common/base/Function;
       3: areturn

  static boolean equalsImpl(com.google.common.collect.Table<?, ?, ?>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #20                 // class com/google/common/collect/Table
      11: ifeq          37
      14: aload_1
      15: checkcast     #20                 // class com/google/common/collect/Table
      18: astore_2
      19: aload_0
      20: invokeinterface #21,  1           // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
      25: aload_2
      26: invokeinterface #21,  1           // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
      31: invokeinterface #22,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  static com.google.common.base.Function access$000();
    Code:
       0: invokestatic  #1                  // Method unmodifiableWrapper:()Lcom/google/common/base/Function;
       3: areturn

  static {};
    Code:
       0: new           #23                 // class com/google/common/collect/Tables$1
       3: dup
       4: invokespecial #24                 // Method com/google/common/collect/Tables$1."<init>":()V
       7: putstatic     #19                 // Field UNMODIFIABLE_WRAPPER:Lcom/google/common/base/Function;
      10: return
}
