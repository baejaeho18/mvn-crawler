Compiled from "MathPreconditions.java"
final class com.google.common.math.MathPreconditions {
  static int checkPositive(java.lang.String, int);
    Code:
       0: iload_1
       1: ifgt          57
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: aload_0
       9: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: astore_2
      16: iload_1
      17: istore_3
      18: new           #3                  // class java/lang/StringBuilder
      21: dup
      22: bipush        26
      24: aload_2
      25: invokevirtual #4                  // Method java/lang/String.length:()I
      28: iadd
      29: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      32: aload_2
      33: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #7                  // String  (
      38: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: iload_3
      42: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #9                  // String ) must be > 0
      47: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iload_1
      58: ireturn

  static long checkPositive(java.lang.String, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          61
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: aload_0
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      17: astore_3
      18: lload_1
      19: lstore        4
      21: new           #3                  // class java/lang/StringBuilder
      24: dup
      25: bipush        35
      27: aload_3
      28: invokevirtual #4                  // Method java/lang/String.length:()I
      31: iadd
      32: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      35: aload_3
      36: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #7                  // String  (
      41: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: lload         4
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: ldc           #9                  // String ) must be > 0
      51: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: lload_1
      62: lreturn

  static java.math.BigInteger checkPositive(java.lang.String, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/math/BigInteger.signum:()I
       4: ifgt          71
       7: new           #1                  // class java/lang/IllegalArgumentException
      10: dup
      11: aload_0
      12: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: astore_2
      19: aload_1
      20: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      23: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      26: astore_3
      27: new           #3                  // class java/lang/StringBuilder
      30: dup
      31: bipush        15
      33: aload_2
      34: invokevirtual #4                  // Method java/lang/String.length:()I
      37: iadd
      38: aload_3
      39: invokevirtual #4                  // Method java/lang/String.length:()I
      42: iadd
      43: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      46: aload_2
      47: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #7                  // String  (
      52: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #9                  // String ) must be > 0
      61: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_1
      72: areturn

  static int checkNonNegative(java.lang.String, int);
    Code:
       0: iload_1
       1: ifge          57
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: aload_0
       9: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: astore_2
      16: iload_1
      17: istore_3
      18: new           #3                  // class java/lang/StringBuilder
      21: dup
      22: bipush        27
      24: aload_2
      25: invokevirtual #4                  // Method java/lang/String.length:()I
      28: iadd
      29: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      32: aload_2
      33: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #7                  // String  (
      38: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: iload_3
      42: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #14                 // String ) must be >= 0
      47: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iload_1
      58: ireturn

  static long checkNonNegative(java.lang.String, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          61
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: aload_0
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      17: astore_3
      18: lload_1
      19: lstore        4
      21: new           #3                  // class java/lang/StringBuilder
      24: dup
      25: bipush        36
      27: aload_3
      28: invokevirtual #4                  // Method java/lang/String.length:()I
      31: iadd
      32: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      35: aload_3
      36: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #7                  // String  (
      41: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: lload         4
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      49: ldc           #14                 // String ) must be >= 0
      51: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: lload_1
      62: lreturn

  static java.math.BigInteger checkNonNegative(java.lang.String, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/math/BigInteger.signum:()I
       4: ifge          71
       7: new           #1                  // class java/lang/IllegalArgumentException
      10: dup
      11: aload_0
      12: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: astore_2
      19: aload_1
      20: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      23: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      26: astore_3
      27: new           #3                  // class java/lang/StringBuilder
      30: dup
      31: bipush        16
      33: aload_2
      34: invokevirtual #4                  // Method java/lang/String.length:()I
      37: iadd
      38: aload_3
      39: invokevirtual #4                  // Method java/lang/String.length:()I
      42: iadd
      43: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      46: aload_2
      47: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #7                  // String  (
      52: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #14                 // String ) must be >= 0
      61: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_1
      72: areturn

  static double checkNonNegative(java.lang.String, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: ifge          61
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: aload_0
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      17: astore_3
      18: dload_1
      19: dstore        4
      21: new           #3                  // class java/lang/StringBuilder
      24: dup
      25: bipush        40
      27: aload_3
      28: invokevirtual #4                  // Method java/lang/String.length:()I
      31: iadd
      32: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      35: aload_3
      36: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #7                  // String  (
      41: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: dload         4
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      49: ldc           #14                 // String ) must be >= 0
      51: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: dload_1
      62: dreturn

  static void checkRoundingUnnecessary(boolean);
    Code:
       0: iload_0
       1: ifne          14
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: ldc           #17                 // String mode was UNNECESSARY, but rounding was necessary
      10: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  static void checkInRange(boolean);
    Code:
       0: iload_0
       1: ifne          14
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: ldc           #19                 // String not in range
      10: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  static void checkNoOverflow(boolean);
    Code:
       0: iload_0
       1: ifne          14
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: ldc           #20                 // String overflow
      10: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  private com.google.common.math.MathPreconditions();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: return
}
