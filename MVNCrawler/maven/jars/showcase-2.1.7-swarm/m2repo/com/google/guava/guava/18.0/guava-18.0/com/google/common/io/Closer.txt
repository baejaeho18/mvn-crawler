Compiled from "Closer.java"
public final class com.google.common.io.Closer implements java.io.Closeable {
  private static final com.google.common.io.Closer$Suppressor SUPPRESSOR;

  final com.google.common.io.Closer$Suppressor suppressor;

  private final java.util.Deque<java.io.Closeable> stack;

  private java.lang.Throwable thrown;

  public static com.google.common.io.Closer create();
    Code:
       0: new           #1                  // class com/google/common/io/Closer
       3: dup
       4: getstatic     #2                  // Field SUPPRESSOR:Lcom/google/common/io/Closer$Suppressor;
       7: invokespecial #3                  // Method "<init>":(Lcom/google/common/io/Closer$Suppressor;)V
      10: areturn

  com.google.common.io.Closer(com.google.common.io.Closer$Suppressor);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/ArrayDeque
       8: dup
       9: iconst_4
      10: invokespecial #6                  // Method java/util/ArrayDeque."<init>":(I)V
      13: putfield      #7                  // Field stack:Ljava/util/Deque;
      16: aload_0
      17: aload_1
      18: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #9                  // class com/google/common/io/Closer$Suppressor
      24: putfield      #10                 // Field suppressor:Lcom/google/common/io/Closer$Suppressor;
      27: return

  public <C extends java.io.Closeable> C register(C);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_0
       5: getfield      #7                  // Field stack:Ljava/util/Deque;
       8: aload_1
       9: invokeinterface #11,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
      14: aload_1
      15: areturn

  public java.lang.RuntimeException rethrow(java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #12                 // Field thrown:Ljava/lang/Throwable;
      10: aload_1
      11: ldc_w         #13                 // class java/io/IOException
      14: invokestatic  #14                 // Method com/google/common/base/Throwables.propagateIfPossible:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      17: new           #15                 // class java/lang/RuntimeException
      20: dup
      21: aload_1
      22: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      25: athrow

  public <X extends java.lang.Exception> java.lang.RuntimeException rethrow(java.lang.Throwable, java.lang.Class<X>) throws java/io/IOException, X;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #12                 // Field thrown:Ljava/lang/Throwable;
      10: aload_1
      11: ldc_w         #13                 // class java/io/IOException
      14: invokestatic  #14                 // Method com/google/common/base/Throwables.propagateIfPossible:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      17: aload_1
      18: aload_2
      19: invokestatic  #14                 // Method com/google/common/base/Throwables.propagateIfPossible:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      22: new           #15                 // class java/lang/RuntimeException
      25: dup
      26: aload_1
      27: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      30: athrow

  public <X1 extends java.lang.Exception, X2 extends java.lang.Exception> java.lang.RuntimeException rethrow(java.lang.Throwable, java.lang.Class<X1>, java.lang.Class<X2>) throws java/io/IOException, X1, X2;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #12                 // Field thrown:Ljava/lang/Throwable;
      10: aload_1
      11: ldc_w         #13                 // class java/io/IOException
      14: invokestatic  #14                 // Method com/google/common/base/Throwables.propagateIfPossible:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokestatic  #17                 // Method com/google/common/base/Throwables.propagateIfPossible:(Ljava/lang/Throwable;Ljava/lang/Class;Ljava/lang/Class;)V
      23: new           #15                 // class java/lang/RuntimeException
      26: dup
      27: aload_1
      28: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      31: athrow

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field thrown:Ljava/lang/Throwable;
       4: astore_1
       5: aload_0
       6: getfield      #7                  // Field stack:Ljava/util/Deque;
       9: invokeinterface #18,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      14: ifne          64
      17: aload_0
      18: getfield      #7                  // Field stack:Ljava/util/Deque;
      21: invokeinterface #19,  1           // InterfaceMethod java/util/Deque.removeFirst:()Ljava/lang/Object;
      26: checkcast     #20                 // class java/io/Closeable
      29: astore_2
      30: aload_2
      31: invokeinterface #21,  1           // InterfaceMethod java/io/Closeable.close:()V
      36: goto          61
      39: astore_3
      40: aload_1
      41: ifnonnull     49
      44: aload_3
      45: astore_1
      46: goto          61
      49: aload_0
      50: getfield      #10                 // Field suppressor:Lcom/google/common/io/Closer$Suppressor;
      53: aload_2
      54: aload_1
      55: aload_3
      56: invokeinterface #23,  4           // InterfaceMethod com/google/common/io/Closer$Suppressor.suppress:(Ljava/io/Closeable;Ljava/lang/Throwable;Ljava/lang/Throwable;)V
      61: goto          5
      64: aload_0
      65: getfield      #12                 // Field thrown:Ljava/lang/Throwable;
      68: ifnonnull     91
      71: aload_1
      72: ifnull        91
      75: aload_1
      76: ldc_w         #13                 // class java/io/IOException
      79: invokestatic  #14                 // Method com/google/common/base/Throwables.propagateIfPossible:(Ljava/lang/Throwable;Ljava/lang/Class;)V
      82: new           #24                 // class java/lang/AssertionError
      85: dup
      86: aload_1
      87: invokespecial #25                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: return
    Exception table:
       from    to  target type
          30    36    39   Class java/lang/Throwable

  static {};
    Code:
       0: invokestatic  #26                 // Method com/google/common/io/Closer$SuppressingSuppressor.isAvailable:()Z
       3: ifeq          12
       6: getstatic     #27                 // Field com/google/common/io/Closer$SuppressingSuppressor.INSTANCE:Lcom/google/common/io/Closer$SuppressingSuppressor;
       9: goto          15
      12: getstatic     #28                 // Field com/google/common/io/Closer$LoggingSuppressor.INSTANCE:Lcom/google/common/io/Closer$LoggingSuppressor;
      15: putstatic     #2                  // Field SUPPRESSOR:Lcom/google/common/io/Closer$Suppressor;
      18: return
}
