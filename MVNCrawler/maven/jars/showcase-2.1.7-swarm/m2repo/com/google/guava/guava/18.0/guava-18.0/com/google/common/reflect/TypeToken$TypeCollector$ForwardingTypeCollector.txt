Compiled from "TypeToken.java"
class com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector<K> extends com.google.common.reflect.TypeToken$TypeCollector<K> {
  private final com.google.common.reflect.TypeToken$TypeCollector<K> delegate;

  com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector(com.google.common.reflect.TypeToken$TypeCollector<K>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method com/google/common/reflect/TypeToken$TypeCollector."<init>":(Lcom/google/common/reflect/TypeToken$1;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field delegate:Lcom/google/common/reflect/TypeToken$TypeCollector;
      10: return

  java.lang.Class<?> getRawType(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/google/common/reflect/TypeToken$TypeCollector;
       4: aload_1
       5: invokevirtual #3                  // Method com/google/common/reflect/TypeToken$TypeCollector.getRawType:(Ljava/lang/Object;)Ljava/lang/Class;
       8: areturn

  java.lang.Iterable<? extends K> getInterfaces(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/google/common/reflect/TypeToken$TypeCollector;
       4: aload_1
       5: invokevirtual #4                  // Method com/google/common/reflect/TypeToken$TypeCollector.getInterfaces:(Ljava/lang/Object;)Ljava/lang/Iterable;
       8: areturn

  K getSuperclass(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/google/common/reflect/TypeToken$TypeCollector;
       4: aload_1
       5: invokevirtual #5                  // Method com/google/common/reflect/TypeToken$TypeCollector.getSuperclass:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn
}
