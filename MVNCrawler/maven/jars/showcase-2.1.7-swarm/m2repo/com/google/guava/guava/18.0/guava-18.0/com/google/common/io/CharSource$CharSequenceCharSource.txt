Compiled from "CharSource.java"
class com.google.common.io.CharSource$CharSequenceCharSource extends com.google.common.io.CharSource {
  private static final com.google.common.base.Splitter LINE_SPLITTER;

  private final java.lang.CharSequence seq;

  protected com.google.common.io.CharSource$CharSequenceCharSource(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/google/common/io/CharSource."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #5                  // class java/lang/CharSequence
      12: putfield      #2                  // Field seq:Ljava/lang/CharSequence;
      15: return

  public java.io.Reader openStream();
    Code:
       0: new           #6                  // class com/google/common/io/CharSequenceReader
       3: dup
       4: aload_0
       5: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       8: invokespecial #7                  // Method com/google/common/io/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
      11: areturn

  public java.lang.String read();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: invokeinterface #8,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private java.lang.Iterable<java.lang.String> lines();
    Code:
       0: new           #10                 // class com/google/common/io/CharSource$CharSequenceCharSource$1
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method com/google/common/io/CharSource$CharSequenceCharSource$1."<init>":(Lcom/google/common/io/CharSource$CharSequenceCharSource;)V
       8: areturn

  public java.lang.String readFirstLine();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method lines:()Ljava/lang/Iterable;
       4: invokeinterface #13,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          31
      19: aload_1
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class java/lang/String
      28: goto          32
      31: aconst_null
      32: areturn

  public com.google.common.collect.ImmutableList<java.lang.String> readLines();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method lines:()Ljava/lang/Iterable;
       4: invokestatic  #17                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       7: areturn

  public <T> T readLines(com.google.common.io.LineProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method lines:()Ljava/lang/Iterable;
       4: invokeinterface #13,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #18,  2           // InterfaceMethod com/google/common/io/LineProcessor.processLine:(Ljava/lang/String;)Z
      36: ifne          42
      39: goto          45
      42: goto          10
      45: aload_1
      46: invokeinterface #19,  1           // InterfaceMethod com/google/common/io/LineProcessor.getResult:()Ljava/lang/Object;
      51: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: bipush        30
       6: ldc           #20                 // String ...
       8: invokestatic  #21                 // Method com/google/common/base/Ascii.truncate:(Ljava/lang/CharSequence;ILjava/lang/String;)Ljava/lang/String;
      11: invokestatic  #22                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokestatic  #22                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      17: astore_1
      18: new           #23                 // class java/lang/StringBuilder
      21: dup
      22: bipush        17
      24: aload_1
      25: invokevirtual #24                 // Method java/lang/String.length:()I
      28: iadd
      29: invokespecial #25                 // Method java/lang/StringBuilder."<init>":(I)V
      32: ldc           #26                 // String CharSource.wrap(
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #28                 // String )
      43: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  static java.lang.CharSequence access$100(com.google.common.io.CharSource$CharSequenceCharSource);
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: areturn

  static com.google.common.base.Splitter access$200();
    Code:
       0: getstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
       3: areturn

  static {};
    Code:
       0: ldc           #30                 // String \r\n|\n|\r
       2: invokestatic  #31                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: invokestatic  #32                 // Method com/google/common/base/Splitter.on:(Ljava/util/regex/Pattern;)Lcom/google/common/base/Splitter;
       8: putstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
      11: return
}
