Compiled from "MapConstraints.java"
class com.google.common.collect.MapConstraints$ConstrainedEntries<K, V> extends com.google.common.collect.ForwardingCollection<java.util.Map$Entry<K, V>> {
  final com.google.common.collect.MapConstraint<? super K, ? super V> constraint;

  final java.util.Collection<java.util.Map$Entry<K, V>> entries;

  com.google.common.collect.MapConstraints$ConstrainedEntries(java.util.Collection<java.util.Map$Entry<K, V>>, com.google.common.collect.MapConstraint<? super K, ? super V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/ForwardingCollection."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field entries:Ljava/util/Collection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field constraint:Lcom/google/common/collect/MapConstraint;
      14: return

  protected java.util.Collection<java.util.Map$Entry<K, V>> delegate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field entries:Ljava/util/Collection;
       4: areturn

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field entries:Ljava/util/Collection;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: new           #5                  // class com/google/common/collect/MapConstraints$ConstrainedEntries$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #6                  // Method com/google/common/collect/MapConstraints$ConstrainedEntries$1."<init>":(Lcom/google/common/collect/MapConstraints$ConstrainedEntries;Ljava/util/Iterator;)V
      19: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method standardToArray:()[Ljava/lang/Object;
       4: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method standardToArray:([Ljava/lang/Object;)[Ljava/lang/Object;
       5: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method delegate:()Ljava/util/Collection;
       4: aload_1
       5: invokestatic  #10                 // Method com/google/common/collect/Maps.containsEntryImpl:(Ljava/util/Collection;Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method standardContainsAll:(Ljava/util/Collection;)Z
       5: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method delegate:()Ljava/util/Collection;
       4: aload_1
       5: invokestatic  #12                 // Method com/google/common/collect/Maps.removeEntryImpl:(Ljava/util/Collection;Ljava/lang/Object;)Z
       8: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method standardRemoveAll:(Ljava/util/Collection;)Z
       5: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method standardRetainAll:(Ljava/util/Collection;)Z
       5: ireturn

  protected java.lang.Object delegate();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method delegate:()Ljava/util/Collection;
       4: areturn
}
