Compiled from "TreeRangeSet.java"
final class com.google.common.collect.TreeRangeSet$RangesByUpperBound<C extends java.lang.Comparable<?>> extends com.google.common.collect.AbstractNavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> {
  private final java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> rangesByLowerBound;

  private final com.google.common.collect.Range<com.google.common.collect.Cut<C>> upperBoundWindow;

  com.google.common.collect.TreeRangeSet$RangesByUpperBound(java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/collect/AbstractNavigableMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
       9: aload_0
      10: invokestatic  #4                  // Method com/google/common/collect/Range.all:()Lcom/google/common/collect/Range;
      13: putfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      16: return

  private com.google.common.collect.TreeRangeSet$RangesByUpperBound(java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>, com.google.common.collect.Range<com.google.common.collect.Cut<C>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/collect/AbstractNavigableMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      14: return

  private java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> subMap(com.google.common.collect.Range<com.google.common.collect.Cut<C>>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
       5: invokevirtual #5                  // Method com/google/common/collect/Range.isConnected:(Lcom/google/common/collect/Range;)Z
       8: ifeq          31
      11: new           #6                  // class com/google/common/collect/TreeRangeSet$RangesByUpperBound
      14: dup
      15: aload_0
      16: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      19: aload_1
      20: aload_0
      21: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      24: invokevirtual #7                  // Method com/google/common/collect/Range.intersection:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;
      27: invokespecial #8                  // Method "<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Range;)V
      30: areturn
      31: invokestatic  #9                  // Method com/google/common/collect/ImmutableSortedMap.of:()Lcom/google/common/collect/ImmutableSortedMap;
      34: areturn

  public java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> subMap(com.google.common.collect.Cut<C>, boolean, com.google.common.collect.Cut<C>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #10                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
       6: aload_3
       7: iload         4
       9: invokestatic  #10                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
      12: invokestatic  #11                 // Method com/google/common/collect/Range.range:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;
      15: invokespecial #12                 // Method subMap:(Lcom/google/common/collect/Range;)Ljava/util/NavigableMap;
      18: areturn

  public java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> headMap(com.google.common.collect.Cut<C>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #10                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
       6: invokestatic  #13                 // Method com/google/common/collect/Range.upTo:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;
       9: invokespecial #12                 // Method subMap:(Lcom/google/common/collect/Range;)Ljava/util/NavigableMap;
      12: areturn

  public java.util.NavigableMap<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>> tailMap(com.google.common.collect.Cut<C>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #10                 // Method com/google/common/collect/BoundType.forBoolean:(Z)Lcom/google/common/collect/BoundType;
       6: invokestatic  #14                 // Method com/google/common/collect/Range.downTo:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;
       9: invokespecial #12                 // Method subMap:(Lcom/google/common/collect/Range;)Ljava/util/NavigableMap;
      12: areturn

  public java.util.Comparator<? super com.google.common.collect.Cut<C>> comparator();
    Code:
       0: invokestatic  #15                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       3: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Lcom/google/common/collect/Range;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.google.common.collect.Range<C> get(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #17                 // class com/google/common/collect/Cut
       4: ifeq          75
       7: aload_1
       8: checkcast     #17                 // class com/google/common/collect/Cut
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      16: aload_2
      17: invokevirtual #18                 // Method com/google/common/collect/Range.contains:(Ljava/lang/Comparable;)Z
      20: ifne          25
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      29: aload_2
      30: invokeinterface #19,  2           // InterfaceMethod java/util/NavigableMap.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      35: astore_3
      36: aload_3
      37: ifnull        69
      40: aload_3
      41: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #21                 // class com/google/common/collect/Range
      49: getfield      #22                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
      52: aload_2
      53: invokevirtual #23                 // Method com/google/common/collect/Cut.equals:(Ljava/lang/Object;)Z
      56: ifeq          69
      59: aload_3
      60: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: checkcast     #21                 // class com/google/common/collect/Range
      68: areturn
      69: goto          75
      72: astore_2
      73: aconst_null
      74: areturn
      75: aconst_null
      76: areturn
    Exception table:
       from    to  target type
           7    24    72   Class java/lang/ClassCastException
          25    68    72   Class java/lang/ClassCastException

  java.util.Iterator<java.util.Map$Entry<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>> entryIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
       4: invokevirtual #25                 // Method com/google/common/collect/Range.hasLowerBound:()Z
       7: ifne          28
      10: aload_0
      11: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      14: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      19: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_1
      25: goto          150
      28: aload_0
      29: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      32: aload_0
      33: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      36: invokevirtual #28                 // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      39: invokeinterface #19,  2           // InterfaceMethod java/util/NavigableMap.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      44: astore_2
      45: aload_2
      46: ifnonnull     67
      49: aload_0
      50: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      53: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      58: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      63: astore_1
      64: goto          150
      67: aload_0
      68: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      71: getfield      #29                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
      74: aload_2
      75: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: checkcast     #21                 // class com/google/common/collect/Range
      83: getfield      #22                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
      86: invokevirtual #30                 // Method com/google/common/collect/Cut.isLessThan:(Ljava/lang/Comparable;)Z
      89: ifeq          122
      92: aload_0
      93: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      96: aload_2
      97: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     102: iconst_1
     103: invokeinterface #32,  3           // InterfaceMethod java/util/NavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
     108: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
     113: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     118: astore_1
     119: goto          150
     122: aload_0
     123: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
     126: aload_0
     127: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
     130: invokevirtual #28                 // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
     133: iconst_1
     134: invokeinterface #32,  3           // InterfaceMethod java/util/NavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
     139: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
     144: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     149: astore_1
     150: new           #33                 // class com/google/common/collect/TreeRangeSet$RangesByUpperBound$1
     153: dup
     154: aload_0
     155: aload_1
     156: invokespecial #34                 // Method com/google/common/collect/TreeRangeSet$RangesByUpperBound$1."<init>":(Lcom/google/common/collect/TreeRangeSet$RangesByUpperBound;Ljava/util/Iterator;)V
     159: areturn

  java.util.Iterator<java.util.Map$Entry<com.google.common.collect.Cut<C>, com.google.common.collect.Range<C>>> descendingEntryIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
       4: invokevirtual #35                 // Method com/google/common/collect/Range.hasUpperBound:()Z
       7: ifeq          41
      10: aload_0
      11: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      14: aload_0
      15: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      18: invokevirtual #36                 // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
      21: iconst_0
      22: invokeinterface #37,  3           // InterfaceMethod java/util/NavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
      27: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableMap.descendingMap:()Ljava/util/NavigableMap;
      32: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      37: astore_1
      38: goto          56
      41: aload_0
      42: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      45: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableMap.descendingMap:()Ljava/util/NavigableMap;
      50: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      55: astore_1
      56: aload_1
      57: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      62: invokestatic  #39                 // Method com/google/common/collect/Iterators.peekingIterator:(Ljava/util/Iterator;)Lcom/google/common/collect/PeekingIterator;
      65: astore_2
      66: aload_2
      67: invokeinterface #40,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.hasNext:()Z
      72: ifeq          107
      75: aload_0
      76: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
      79: getfield      #22                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
      82: aload_2
      83: invokeinterface #41,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.peek:()Ljava/lang/Object;
      88: checkcast     #21                 // class com/google/common/collect/Range
      91: getfield      #22                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
      94: invokevirtual #30                 // Method com/google/common/collect/Cut.isLessThan:(Ljava/lang/Comparable;)Z
      97: ifeq          107
     100: aload_2
     101: invokeinterface #42,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.next:()Ljava/lang/Object;
     106: pop
     107: new           #43                 // class com/google/common/collect/TreeRangeSet$RangesByUpperBound$2
     110: dup
     111: aload_0
     112: aload_2
     113: invokespecial #44                 // Method com/google/common/collect/TreeRangeSet$RangesByUpperBound$2."<init>":(Lcom/google/common/collect/TreeRangeSet$RangesByUpperBound;Lcom/google/common/collect/PeekingIterator;)V
     116: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
       4: invokestatic  #4                  // Method com/google/common/collect/Range.all:()Lcom/google/common/collect/Range;
       7: invokevirtual #45                 // Method com/google/common/collect/Range.equals:(Ljava/lang/Object;)Z
      10: ifeq          23
      13: aload_0
      14: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      17: invokeinterface #46,  1           // InterfaceMethod java/util/NavigableMap.size:()I
      22: ireturn
      23: aload_0
      24: invokevirtual #47                 // Method entryIterator:()Ljava/util/Iterator;
      27: invokestatic  #48                 // Method com/google/common/collect/Iterators.size:(Ljava/util/Iterator;)I
      30: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
       4: invokestatic  #4                  // Method com/google/common/collect/Range.all:()Lcom/google/common/collect/Range;
       7: invokevirtual #45                 // Method com/google/common/collect/Range.equals:(Ljava/lang/Object;)Z
      10: ifeq          25
      13: aload_0
      14: getfield      #3                  // Field rangesByLowerBound:Ljava/util/NavigableMap;
      17: invokeinterface #49,  1           // InterfaceMethod java/util/NavigableMap.isEmpty:()Z
      22: goto          42
      25: aload_0
      26: invokevirtual #47                 // Method entryIterator:()Ljava/util/Iterator;
      29: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Lcom/google/common/collect/Range;
       5: areturn

  public java.util.NavigableMap tailMap(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class com/google/common/collect/Cut
       5: iload_2
       6: invokevirtual #51                 // Method tailMap:(Lcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
       9: areturn

  public java.util.NavigableMap headMap(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class com/google/common/collect/Cut
       5: iload_2
       6: invokevirtual #52                 // Method headMap:(Lcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
       9: areturn

  public java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class com/google/common/collect/Cut
       5: iload_2
       6: aload_3
       7: checkcast     #17                 // class com/google/common/collect/Cut
      10: iload         4
      12: invokevirtual #53                 // Method subMap:(Lcom/google/common/collect/Cut;ZLcom/google/common/collect/Cut;Z)Ljava/util/NavigableMap;
      15: areturn

  static com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound);
    Code:
       0: aload_0
       1: getfield      #1                  // Field upperBoundWindow:Lcom/google/common/collect/Range;
       4: areturn
}
