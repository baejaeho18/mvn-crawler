class nu.xom.Namespaces {
  private java.util.HashMap namespaces;

  private java.util.ArrayList prefixes;

  nu.xom.Namespaces();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #14                 // class java/util/HashMap
       8: dup
       9: iconst_1
      10: invokespecial #17                 // Method java/util/HashMap."<init>":(I)V
      13: putfield      #19                 // Field namespaces:Ljava/util/HashMap;
      16: aload_0
      17: new           #21                 // class java/util/ArrayList
      20: dup
      21: iconst_1
      22: invokespecial #22                 // Method java/util/ArrayList."<init>":(I)V
      25: putfield      #24                 // Field prefixes:Ljava/util/ArrayList;
      28: return

  void put(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field namespaces:Ljava/util/HashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #29                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
      14: aload_1
      15: invokevirtual #33                 // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
      23: aload_1
      24: invokevirtual #36                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  void remove(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #39                 // String
       6: astore_1
       7: aload_0
       8: getfield      #19                 // Field namespaces:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #42                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
      20: aload_1
      21: invokevirtual #33                 // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
      24: pop
      25: return

  java.lang.String getURI(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field namespaces:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #47                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #49                 // class java/lang/String
      11: checkcast     #49                 // class java/lang/String
      14: areturn

  java.util.ArrayList getPrefixes();
    Code:
       0: aload_0
       1: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
       4: areturn

  nu.xom.Namespaces copy();
    Code:
       0: new           #2                  // class nu/xom/Namespaces
       3: dup
       4: invokespecial #54                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #19                 // Field namespaces:Ljava/util/HashMap;
      13: invokevirtual #58                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
      16: checkcast     #14                 // class java/util/HashMap
      19: putfield      #19                 // Field namespaces:Ljava/util/HashMap;
      22: aload_1
      23: aload_0
      24: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
      27: invokevirtual #59                 // Method java/util/ArrayList.clone:()Ljava/lang/Object;
      30: checkcast     #21                 // class java/util/ArrayList
      33: putfield      #24                 // Field prefixes:Ljava/util/ArrayList;
      36: aload_1
      37: areturn

  int size();
    Code:
       0: aload_0
       1: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
       4: invokevirtual #63                 // Method java/util/ArrayList.size:()I
       7: ireturn

  java.lang.String getPrefix(int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field prefixes:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #68                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #49                 // class java/lang/String
      11: areturn
}
