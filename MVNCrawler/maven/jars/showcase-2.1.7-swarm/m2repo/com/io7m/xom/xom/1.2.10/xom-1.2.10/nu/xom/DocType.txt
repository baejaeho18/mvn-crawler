public class nu.xom.DocType extends nu.xom.Node {
  private java.lang.String rootName;

  private java.lang.String systemID;

  private java.lang.String publicID;

  private java.lang.String internalDTDSubset;

  public nu.xom.DocType(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: ldc           #16                 // String
       7: putfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
      10: aload_0
      11: aload_1
      12: invokespecial #22                 // Method _setRootElementName:(Ljava/lang/String;)V
      15: aload_0
      16: aload_3
      17: invokespecial #25                 // Method _setSystemID:(Ljava/lang/String;)V
      20: aload_0
      21: aload_2
      22: invokespecial #28                 // Method _setPublicID:(Ljava/lang/String;)V
      25: return

  public nu.xom.DocType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #31                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public nu.xom.DocType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #31                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public nu.xom.DocType(nu.xom.DocType);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: ldc           #16                 // String
       7: putfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
      10: aload_0
      11: aload_1
      12: getfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
      15: putfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
      18: aload_0
      19: aload_1
      20: getfield      #34                 // Field publicID:Ljava/lang/String;
      23: putfield      #34                 // Field publicID:Ljava/lang/String;
      26: aload_0
      27: aload_1
      28: getfield      #36                 // Field systemID:Ljava/lang/String;
      31: putfield      #36                 // Field systemID:Ljava/lang/String;
      34: aload_0
      35: aload_1
      36: getfield      #38                 // Field rootName:Ljava/lang/String;
      39: putfield      #38                 // Field rootName:Ljava/lang/String;
      42: return

  private nu.xom.DocType();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: ldc           #16                 // String
       7: putfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
      10: return

  static nu.xom.DocType build(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #2                  // class nu/xom/DocType
       3: dup
       4: invokespecial #41                 // Method "<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: putfield      #34                 // Field publicID:Ljava/lang/String;
      13: aload_3
      14: aload_2
      15: putfield      #36                 // Field systemID:Ljava/lang/String;
      18: aload_3
      19: aload_0
      20: putfield      #38                 // Field rootName:Ljava/lang/String;
      23: aload_3
      24: areturn

  public final java.lang.String getRootElementName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field rootName:Ljava/lang/String;
       4: areturn

  public void setRootElementName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method _setRootElementName:(Ljava/lang/String;)V
       5: return

  private void _setRootElementName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #49                 // Method nu/xom/Verifier.checkXMLName:(Ljava/lang/String;)V
       4: aload_0
       5: aload_1
       6: putfield      #38                 // Field rootName:Ljava/lang/String;
       9: return

  public final java.lang.String getInternalDTDSubset();
    Code:
       0: aload_0
       1: getfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
       4: areturn

  public final void setInternalDTDSubset(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        23
       4: aload_1
       5: invokevirtual #57                 // Method java/lang/String.length:()I
       8: ifle          23
      11: aload_1
      12: invokestatic  #60                 // Method nu/xom/Verifier.checkInternalDTDSubset:(Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #63                 // Method fastSetInternalDTDSubset:(Ljava/lang/String;)V
      20: goto          29
      23: aload_0
      24: ldc           #16                 // String
      26: putfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
      29: return

  final void fastSetInternalDTDSubset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
       5: return

  public final java.lang.String getPublicID();
    Code:
       0: aload_0
       1: getfield      #34                 // Field publicID:Ljava/lang/String;
       4: areturn

  public void setPublicID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method _setPublicID:(Ljava/lang/String;)V
       5: return

  private void _setPublicID(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #36                 // Field systemID:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_1
       8: ifnull        21
      11: new           #67                 // class nu/xom/WellformednessException
      14: dup
      15: ldc           #69                 // String Cannot have a public ID without a system ID
      17: invokespecial #71                 // Method nu/xom/WellformednessException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: ifnull        171
      25: aload_1
      26: invokevirtual #57                 // Method java/lang/String.length:()I
      29: istore_2
      30: iload_2
      31: ifeq          171
      34: aload_1
      35: iconst_0
      36: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      39: invokestatic  #79                 // Method nu/xom/Verifier.isXMLSpaceCharacter:(C)Z
      42: ifeq          55
      45: new           #81                 // class nu/xom/IllegalDataException
      48: dup
      49: ldc           #83                 // String Initial white space in public IDs is not round trippable.
      51: invokespecial #84                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: iload_2
      57: iconst_1
      58: isub
      59: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      62: invokestatic  #79                 // Method nu/xom/Verifier.isXMLSpaceCharacter:(C)Z
      65: ifeq          78
      68: new           #81                 // class nu/xom/IllegalDataException
      71: dup
      72: ldc           #86                 // String Trailing white space in public IDs is not round trippable.
      74: invokespecial #84                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iconst_0
      79: istore_3
      80: iload_3
      81: iload_2
      82: if_icmpge     171
      85: aload_1
      86: iload_3
      87: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
      90: istore        4
      92: iload         4
      94: invokestatic  #89                 // Method isXMLPublicIDCharacter:(C)Z
      97: ifne          136
     100: new           #81                 // class nu/xom/IllegalDataException
     103: dup
     104: new           #91                 // class java/lang/StringBuffer
     107: dup
     108: invokespecial #92                 // Method java/lang/StringBuffer."<init>":()V
     111: ldc           #94                 // String The character 0x
     113: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     116: iload         4
     118: invokestatic  #104                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     121: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     124: ldc           #106                // String  is not allowed in public IDs
     126: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     129: invokevirtual #109                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     132: invokespecial #84                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: iload         4
     138: bipush        32
     140: if_icmpne     165
     143: aload_1
     144: iload_3
     145: iconst_1
     146: isub
     147: invokevirtual #75                 // Method java/lang/String.charAt:(I)C
     150: bipush        32
     152: if_icmpne     165
     155: new           #81                 // class nu/xom/IllegalDataException
     158: dup
     159: ldc           #111                // String Multiple consecutive spaces in public IDs are not round trippable.
     161: invokespecial #84                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
     164: athrow
     165: iinc          3, 1
     168: goto          80
     171: aload_0
     172: aload_1
     173: putfield      #34                 // Field publicID:Ljava/lang/String;
     176: return

  public final java.lang.String getSystemID();
    Code:
       0: aload_0
       1: getfield      #36                 // Field systemID:Ljava/lang/String;
       4: areturn

  public void setSystemID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method _setSystemID:(Ljava/lang/String;)V
       5: return

  private void _setSystemID(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     21
       4: aload_0
       5: getfield      #34                 // Field publicID:Ljava/lang/String;
       8: ifnull        21
      11: new           #67                 // class nu/xom/WellformednessException
      14: dup
      15: ldc           #115                // String Cannot remove system ID without removing public ID first
      17: invokespecial #71                 // Method nu/xom/WellformednessException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: ifnull        56
      25: aload_1
      26: invokestatic  #118                // Method nu/xom/Verifier.checkURIReference:(Ljava/lang/String;)V
      29: aload_1
      30: bipush        35
      32: invokevirtual #122                // Method java/lang/String.indexOf:(I)I
      35: iconst_m1
      36: if_icmpeq     56
      39: new           #124                // class nu/xom/MalformedURIException
      42: dup
      43: ldc           #126                // String System literals cannot contain fragment identifiers
      45: invokespecial #127                // Method nu/xom/MalformedURIException."<init>":(Ljava/lang/String;)V
      48: astore_2
      49: aload_2
      50: aload_1
      51: invokevirtual #130                // Method nu/xom/MalformedURIException.setData:(Ljava/lang/String;)V
      54: aload_2
      55: athrow
      56: aload_0
      57: aload_1
      58: putfield      #36                 // Field systemID:Ljava/lang/String;
      61: return

  public final java.lang.String getValue();
    Code:
       0: ldc           #16                 // String
       2: areturn

  public final nu.xom.Node getChild(int);
    Code:
       0: new           #135                // class java/lang/IndexOutOfBoundsException
       3: dup
       4: ldc           #137                // String Document type declarations do not have children
       6: invokespecial #138                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       9: athrow

  public final int getChildCount();
    Code:
       0: iconst_0
       1: ireturn

  public final java.lang.String toString();
    Code:
       0: new           #91                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #92                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #141                // String [
       9: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: invokevirtual #147                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #152                // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: ldc           #154                // String :
      24: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: aload_0
      28: getfield      #38                 // Field rootName:Ljava/lang/String;
      31: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: ldc           #156                // String ]
      36: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: invokevirtual #109                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      42: areturn

  public nu.xom.Node copy();
    Code:
       0: new           #2                  // class nu/xom/DocType
       3: dup
       4: aload_0
       5: invokespecial #160                // Method "<init>":(Lnu/xom/DocType;)V
       8: areturn

  public final java.lang.String toXML();
    Code:
       0: new           #91                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #92                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #163                // String <!DOCTYPE
      11: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #38                 // Field rootName:Ljava/lang/String;
      20: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_0
      25: getfield      #34                 // Field publicID:Ljava/lang/String;
      28: ifnull        73
      31: aload_1
      32: ldc           #165                // String  PUBLIC \"
      34: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #34                 // Field publicID:Ljava/lang/String;
      43: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload_1
      48: ldc           #167                // String \" \"
      50: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: pop
      54: aload_1
      55: aload_0
      56: getfield      #36                 // Field systemID:Ljava/lang/String;
      59: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: aload_1
      64: bipush        34
      66: invokevirtual #170                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      69: pop
      70: goto          103
      73: aload_0
      74: getfield      #36                 // Field systemID:Ljava/lang/String;
      77: ifnull        103
      80: aload_1
      81: ldc           #172                // String  SYSTEM \"
      83: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      86: pop
      87: aload_1
      88: aload_0
      89: getfield      #36                 // Field systemID:Ljava/lang/String;
      92: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      95: pop
      96: aload_1
      97: bipush        34
      99: invokevirtual #170                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     102: pop
     103: aload_0
     104: getfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
     107: invokevirtual #57                 // Method java/lang/String.length:()I
     110: ifeq          136
     113: aload_1
     114: ldc           #174                // String  [\n
     116: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     119: pop
     120: aload_1
     121: aload_0
     122: getfield      #18                 // Field internalDTDSubset:Ljava/lang/String;
     125: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     128: pop
     129: aload_1
     130: bipush        93
     132: invokevirtual #170                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     135: pop
     136: aload_1
     137: ldc           #176                // String >
     139: invokevirtual #98                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     142: pop
     143: aload_1
     144: invokevirtual #109                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     147: areturn

  boolean isDocType();
    Code:
       0: iconst_1
       1: ireturn

  private static boolean isXMLPublicIDCharacter(char);
    Code:
       0: iload_0
       1: tableswitch   { // 32 to 122
                    32: 380
                    33: 382
                    34: 384
                    35: 386
                    36: 388
                    37: 390
                    38: 392
                    39: 394
                    40: 396
                    41: 398
                    42: 400
                    43: 402
                    44: 404
                    45: 406
                    46: 408
                    47: 410
                    48: 412
                    49: 414
                    50: 416
                    51: 418
                    52: 420
                    53: 422
                    54: 424
                    55: 426
                    56: 428
                    57: 430
                    58: 432
                    59: 434
                    60: 436
                    61: 438
                    62: 440
                    63: 442
                    64: 444
                    65: 446
                    66: 448
                    67: 450
                    68: 452
                    69: 454
                    70: 456
                    71: 458
                    72: 460
                    73: 462
                    74: 464
                    75: 466
                    76: 468
                    77: 470
                    78: 472
                    79: 474
                    80: 476
                    81: 478
                    82: 480
                    83: 482
                    84: 484
                    85: 486
                    86: 488
                    87: 490
                    88: 492
                    89: 494
                    90: 496
                    91: 498
                    92: 500
                    93: 502
                    94: 504
                    95: 506
                    96: 508
                    97: 510
                    98: 512
                    99: 514
                   100: 516
                   101: 518
                   102: 520
                   103: 522
                   104: 524
                   105: 526
                   106: 528
                   107: 530
                   108: 532
                   109: 534
                   110: 536
                   111: 538
                   112: 540
                   113: 542
                   114: 544
                   115: 546
                   116: 548
                   117: 550
                   118: 552
                   119: 554
                   120: 556
                   121: 558
                   122: 560
               default: 562
          }
     380: iconst_1
     381: ireturn
     382: iconst_1
     383: ireturn
     384: iconst_0
     385: ireturn
     386: iconst_1
     387: ireturn
     388: iconst_1
     389: ireturn
     390: iconst_1
     391: ireturn
     392: iconst_0
     393: ireturn
     394: iconst_1
     395: ireturn
     396: iconst_1
     397: ireturn
     398: iconst_1
     399: ireturn
     400: iconst_1
     401: ireturn
     402: iconst_1
     403: ireturn
     404: iconst_1
     405: ireturn
     406: iconst_1
     407: ireturn
     408: iconst_1
     409: ireturn
     410: iconst_1
     411: ireturn
     412: iconst_1
     413: ireturn
     414: iconst_1
     415: ireturn
     416: iconst_1
     417: ireturn
     418: iconst_1
     419: ireturn
     420: iconst_1
     421: ireturn
     422: iconst_1
     423: ireturn
     424: iconst_1
     425: ireturn
     426: iconst_1
     427: ireturn
     428: iconst_1
     429: ireturn
     430: iconst_1
     431: ireturn
     432: iconst_1
     433: ireturn
     434: iconst_1
     435: ireturn
     436: iconst_0
     437: ireturn
     438: iconst_1
     439: ireturn
     440: iconst_0
     441: ireturn
     442: iconst_1
     443: ireturn
     444: iconst_1
     445: ireturn
     446: iconst_1
     447: ireturn
     448: iconst_1
     449: ireturn
     450: iconst_1
     451: ireturn
     452: iconst_1
     453: ireturn
     454: iconst_1
     455: ireturn
     456: iconst_1
     457: ireturn
     458: iconst_1
     459: ireturn
     460: iconst_1
     461: ireturn
     462: iconst_1
     463: ireturn
     464: iconst_1
     465: ireturn
     466: iconst_1
     467: ireturn
     468: iconst_1
     469: ireturn
     470: iconst_1
     471: ireturn
     472: iconst_1
     473: ireturn
     474: iconst_1
     475: ireturn
     476: iconst_1
     477: ireturn
     478: iconst_1
     479: ireturn
     480: iconst_1
     481: ireturn
     482: iconst_1
     483: ireturn
     484: iconst_1
     485: ireturn
     486: iconst_1
     487: ireturn
     488: iconst_1
     489: ireturn
     490: iconst_1
     491: ireturn
     492: iconst_1
     493: ireturn
     494: iconst_1
     495: ireturn
     496: iconst_1
     497: ireturn
     498: iconst_0
     499: ireturn
     500: iconst_0
     501: ireturn
     502: iconst_0
     503: ireturn
     504: iconst_0
     505: ireturn
     506: iconst_1
     507: ireturn
     508: iconst_0
     509: ireturn
     510: iconst_1
     511: ireturn
     512: iconst_1
     513: ireturn
     514: iconst_1
     515: ireturn
     516: iconst_1
     517: ireturn
     518: iconst_1
     519: ireturn
     520: iconst_1
     521: ireturn
     522: iconst_1
     523: ireturn
     524: iconst_1
     525: ireturn
     526: iconst_1
     527: ireturn
     528: iconst_1
     529: ireturn
     530: iconst_1
     531: ireturn
     532: iconst_1
     533: ireturn
     534: iconst_1
     535: ireturn
     536: iconst_1
     537: ireturn
     538: iconst_1
     539: ireturn
     540: iconst_1
     541: ireturn
     542: iconst_1
     543: ireturn
     544: iconst_1
     545: ireturn
     546: iconst_1
     547: ireturn
     548: iconst_1
     549: ireturn
     550: iconst_1
     551: ireturn
     552: iconst_1
     553: ireturn
     554: iconst_1
     555: ireturn
     556: iconst_1
     557: ireturn
     558: iconst_1
     559: ireturn
     560: iconst_1
     561: ireturn
     562: iconst_0
     563: ireturn
}
