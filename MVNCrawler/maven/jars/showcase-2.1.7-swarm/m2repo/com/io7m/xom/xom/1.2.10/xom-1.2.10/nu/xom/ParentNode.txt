public abstract class nu.xom.ParentNode extends nu.xom.Node {
  nu.xom.Node[] children;

  int childCount;

  java.lang.String actualBaseURI;

  nu.xom.ParentNode();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #16                 // Field childCount:I
       9: return

  public int getChildCount();
    Code:
       0: aload_0
       1: getfield      #16                 // Field childCount:I
       4: ireturn

  public void insertChild(nu.xom.Node, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #23                 // Method _insertChild:(Lnu/xom/Node;I)V
       6: return

  final void _insertChild(nu.xom.Node, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #26                 // Method insertionAllowed:(Lnu/xom/Node;I)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: invokevirtual #29                 // Method fastInsertChild:(Lnu/xom/Node;I)V
      12: return

  void fastInsertChild(nu.xom.Node, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #16                 // Field childCount:I
       5: if_icmple     40
       8: new           #31                 // class java/lang/IndexOutOfBoundsException
      11: dup
      12: new           #33                 // class java/lang/StringBuffer
      15: dup
      16: invokespecial #34                 // Method java/lang/StringBuffer."<init>":()V
      19: ldc           #36                 // String Inserted node at position
      21: invokevirtual #40                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: iload_2
      25: invokevirtual #43                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      28: ldc           #45                 // String  after children
      30: invokevirtual #40                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: invokevirtual #49                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      36: invokespecial #52                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_0
      42: getfield      #16                 // Field childCount:I
      45: iconst_1
      46: iadd
      47: invokespecial #56                 // Method checkCapacity:(I)V
      50: iload_2
      51: aload_0
      52: getfield      #16                 // Field childCount:I
      55: if_icmpge     79
      58: aload_0
      59: getfield      #58                 // Field children:[Lnu/xom/Node;
      62: iload_2
      63: aload_0
      64: getfield      #58                 // Field children:[Lnu/xom/Node;
      67: iload_2
      68: iconst_1
      69: iadd
      70: aload_0
      71: getfield      #16                 // Field childCount:I
      74: iload_2
      75: isub
      76: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_0
      80: getfield      #58                 // Field children:[Lnu/xom/Node;
      83: iload_2
      84: aload_1
      85: aastore
      86: aload_0
      87: dup
      88: getfield      #16                 // Field childCount:I
      91: iconst_1
      92: iadd
      93: putfield      #16                 // Field childCount:I
      96: aload_1
      97: aload_0
      98: invokevirtual #68                 // Method nu/xom/Node.setParent:(Lnu/xom/ParentNode;)V
     101: return

  private void checkCapacity(int);
    Code:
       0: aload_0
       1: getfield      #58                 // Field children:[Lnu/xom/Node;
       4: ifnonnull     18
       7: aload_0
       8: iconst_1
       9: anewarray     #4                  // class nu/xom/Node
      12: putfield      #58                 // Field children:[Lnu/xom/Node;
      15: goto          58
      18: iload_1
      19: aload_0
      20: getfield      #58                 // Field children:[Lnu/xom/Node;
      23: arraylength
      24: if_icmplt     58
      27: aload_0
      28: getfield      #58                 // Field children:[Lnu/xom/Node;
      31: arraylength
      32: iconst_2
      33: imul
      34: anewarray     #4                  // class nu/xom/Node
      37: astore_2
      38: aload_0
      39: getfield      #58                 // Field children:[Lnu/xom/Node;
      42: iconst_0
      43: aload_2
      44: iconst_0
      45: aload_0
      46: getfield      #58                 // Field children:[Lnu/xom/Node;
      49: arraylength
      50: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      53: aload_0
      54: aload_2
      55: putfield      #58                 // Field children:[Lnu/xom/Node;
      58: return

  abstract void insertionAllowed(nu.xom.Node, int);

  public void appendChild(nu.xom.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #16                 // Field childCount:I
       6: invokevirtual #72                 // Method insertChild:(Lnu/xom/Node;I)V
       9: return

  public nu.xom.Node getChild(int);
    Code:
       0: aload_0
       1: getfield      #58                 // Field children:[Lnu/xom/Node;
       4: ifnonnull     17
       7: new           #31                 // class java/lang/IndexOutOfBoundsException
      10: dup
      11: ldc           #76                 // String This node has no children
      13: invokespecial #52                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #58                 // Field children:[Lnu/xom/Node;
      21: iload_1
      22: aaload
      23: areturn

  public int indexOf(nu.xom.Node);
    Code:
       0: aload_0
       1: getfield      #58                 // Field children:[Lnu/xom/Node;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_0
      13: getfield      #16                 // Field childCount:I
      16: if_icmpge     37
      19: aload_1
      20: aload_0
      21: getfield      #58                 // Field children:[Lnu/xom/Node;
      24: iload_2
      25: aaload
      26: if_acmpne     31
      29: iload_2
      30: ireturn
      31: iinc          2, 1
      34: goto          11
      37: iconst_m1
      38: ireturn

  public nu.xom.Node removeChild(int);
    Code:
       0: aload_0
       1: getfield      #58                 // Field children:[Lnu/xom/Node;
       4: ifnonnull     17
       7: new           #31                 // class java/lang/IndexOutOfBoundsException
      10: dup
      11: ldc           #76                 // String This node has no children
      13: invokespecial #52                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #58                 // Field children:[Lnu/xom/Node;
      21: iload_1
      22: aaload
      23: astore_2
      24: aload_2
      25: invokevirtual #83                 // Method nu/xom/Node.isElement:()Z
      28: ifeq          39
      31: aload_0
      32: aload_2
      33: checkcast     #85                 // class nu/xom/Element
      36: invokevirtual #89                 // Method fillInBaseURI:(Lnu/xom/Element;)V
      39: aload_0
      40: getfield      #16                 // Field childCount:I
      43: iload_1
      44: isub
      45: iconst_1
      46: isub
      47: istore_3
      48: iload_3
      49: ifle          68
      52: aload_0
      53: getfield      #58                 // Field children:[Lnu/xom/Node;
      56: iload_1
      57: iconst_1
      58: iadd
      59: aload_0
      60: getfield      #58                 // Field children:[Lnu/xom/Node;
      63: iload_1
      64: iload_3
      65: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: aload_0
      69: dup
      70: getfield      #16                 // Field childCount:I
      73: iconst_1
      74: isub
      75: putfield      #16                 // Field childCount:I
      78: aload_0
      79: getfield      #58                 // Field children:[Lnu/xom/Node;
      82: aload_0
      83: getfield      #16                 // Field childCount:I
      86: aconst_null
      87: aastore
      88: aload_2
      89: aconst_null
      90: invokevirtual #68                 // Method nu/xom/Node.setParent:(Lnu/xom/ParentNode;)V
      93: aload_2
      94: areturn

  void fillInBaseURI(nu.xom.Element);
    Code:
       0: aload_1
       1: astore_2
       2: ldc           #91                 // String
       4: astore_3
       5: aload_2
       6: ifnull        31
       9: aload_3
      10: ldc           #91                 // String
      12: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          31
      18: aload_2
      19: invokevirtual #100                // Method getActualBaseURI:()Ljava/lang/String;
      22: astore_3
      23: aload_2
      24: invokevirtual #104                // Method getParent:()Lnu/xom/ParentNode;
      27: astore_2
      28: goto          5
      31: aload_1
      32: aload_3
      33: invokevirtual #107                // Method nu/xom/Element.setActualBaseURI:(Ljava/lang/String;)V
      36: return

  public nu.xom.Node removeChild(nu.xom.Node);
    Code:
       0: aload_0
       1: getfield      #58                 // Field children:[Lnu/xom/Node;
       4: ifnonnull     17
       7: new           #110                // class nu/xom/NoSuchChildException
      10: dup
      11: ldc           #112                // String Child does not belong to this node
      13: invokespecial #113                // Method nu/xom/NoSuchChildException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokevirtual #115                // Method indexOf:(Lnu/xom/Node;)I
      22: istore_2
      23: iload_2
      24: iconst_m1
      25: if_icmpne     38
      28: new           #110                // class nu/xom/NoSuchChildException
      31: dup
      32: ldc           #112                // String Child does not belong to this node
      34: invokespecial #113                // Method nu/xom/NoSuchChildException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: invokevirtual #83                 // Method nu/xom/Node.isElement:()Z
      42: ifeq          53
      45: aload_0
      46: aload_1
      47: checkcast     #85                 // class nu/xom/Element
      50: invokevirtual #89                 // Method fillInBaseURI:(Lnu/xom/Element;)V
      53: aload_0
      54: iload_2
      55: invokevirtual #117                // Method removeChild:(I)Lnu/xom/Node;
      58: pop
      59: aload_1
      60: aconst_null
      61: invokevirtual #68                 // Method nu/xom/Node.setParent:(Lnu/xom/ParentNode;)V
      64: aload_1
      65: areturn

  public void replaceChild(nu.xom.Node, nu.xom.Node);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #121                // class java/lang/NullPointerException
       7: dup
       8: ldc           #123                // String Tried to replace null child
      10: invokespecial #124                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #121                // class java/lang/NullPointerException
      21: dup
      22: ldc           #126                // String Tried to replace child with null
      24: invokespecial #124                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #58                 // Field children:[Lnu/xom/Node;
      32: ifnonnull     45
      35: new           #110                // class nu/xom/NoSuchChildException
      38: dup
      39: ldc           #128                // String Reference node is not a child of this node.
      41: invokespecial #113                // Method nu/xom/NoSuchChildException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: invokevirtual #115                // Method indexOf:(Lnu/xom/Node;)I
      50: istore_3
      51: iload_3
      52: iconst_m1
      53: if_icmpne     66
      56: new           #110                // class nu/xom/NoSuchChildException
      59: dup
      60: ldc           #128                // String Reference node is not a child of this node.
      62: invokespecial #113                // Method nu/xom/NoSuchChildException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_1
      67: aload_2
      68: if_acmpne     72
      71: return
      72: aload_0
      73: aload_2
      74: iload_3
      75: invokevirtual #26                 // Method insertionAllowed:(Lnu/xom/Node;I)V
      78: aload_0
      79: iload_3
      80: invokevirtual #117                // Method removeChild:(I)Lnu/xom/Node;
      83: pop
      84: aload_0
      85: aload_2
      86: iload_3
      87: invokevirtual #72                 // Method insertChild:(Lnu/xom/Node;I)V
      90: return

  public abstract void setBaseURI(java.lang.String);

  java.lang.String getActualBaseURI();
    Code:
       0: aload_0
       1: getfield      #131                // Field actualBaseURI:Ljava/lang/String;
       4: ifnonnull     10
       7: ldc           #91                 // String
       9: areturn
      10: aload_0
      11: getfield      #131                // Field actualBaseURI:Ljava/lang/String;
      14: areturn

  void setActualBaseURI(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #91                 // String
       6: astore_1
       7: ldc           #91                 // String
       9: aload_1
      10: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifne          20
      16: aload_1
      17: invokestatic  #136                // Method nu/xom/Verifier.checkAbsoluteURI:(Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #131                // Field actualBaseURI:Ljava/lang/String;
      25: return

  final java.lang.String findActualBaseURI();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #100                // Method getActualBaseURI:()Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: invokevirtual #104                // Method getParent:()Lnu/xom/ParentNode;
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: aload_2
      17: areturn
      18: ldc           #91                 // String
      20: aload_2
      21: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          32
      27: aload_3
      28: astore_1
      29: goto          2
      32: aload_2
      33: areturn
}
