class nu.xom.GenericWriter extends nu.xom.TextWriter {
  private final java.io.ByteArrayOutputStream bout;

  private final java.io.OutputStreamWriter wout;

  private final boolean isJapanese;

  nu.xom.GenericWriter(java.io.Writer, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #16                 // Method nu/xom/TextWriter."<init>":(Ljava/io/Writer;Ljava/lang/String;)V
       6: aload_0
       7: new           #18                 // class java/io/ByteArrayOutputStream
      10: dup
      11: bipush        32
      13: invokespecial #21                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      16: putfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
      19: aload_0
      20: new           #25                 // class java/io/OutputStreamWriter
      23: dup
      24: aload_0
      25: getfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
      28: aload_2
      29: invokespecial #28                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      32: putfield      #30                 // Field wout:Ljava/io/OutputStreamWriter;
      35: aload_2
      36: getstatic     #36                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      39: invokevirtual #42                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      42: astore_2
      43: aload_2
      44: ldc           #44                 // String EUC-JP
      46: invokevirtual #48                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      49: iconst_m1
      50: if_icmpgt     89
      53: aload_2
      54: ldc           #50                 // String EUC_JP
      56: invokevirtual #54                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      59: ifne          89
      62: aload_2
      63: ldc           #56                 // String SHIFT_JIS
      65: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          89
      71: aload_2
      72: ldc           #62                 // String SJIS
      74: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifne          89
      80: aload_2
      81: ldc           #64                 // String ISO-2022-JP
      83: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          97
      89: aload_0
      90: iconst_1
      91: putfield      #66                 // Field isJapanese:Z
      94: goto          102
      97: aload_0
      98: iconst_0
      99: putfield      #66                 // Field isJapanese:Z
     102: return

  boolean needsEscaping(char);
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpgt     8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #66                 // Field isJapanese:Z
      12: ifeq          33
      15: iload_1
      16: sipush        165
      19: if_icmpne     24
      22: iconst_1
      23: ireturn
      24: iload_1
      25: sipush        8254
      28: if_icmpne     33
      31: iconst_1
      32: ireturn
      33: iconst_0
      34: istore_2
      35: aload_0
      36: getfield      #30                 // Field wout:Ljava/io/OutputStreamWriter;
      39: iload_1
      40: invokevirtual #75                 // Method java/io/OutputStreamWriter.write:(I)V
      43: aload_0
      44: getfield      #30                 // Field wout:Ljava/io/OutputStreamWriter;
      47: invokevirtual #79                 // Method java/io/OutputStreamWriter.flush:()V
      50: aload_0
      51: getfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
      54: invokevirtual #83                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      57: astore_3
      58: aload_3
      59: arraylength
      60: ifne          68
      63: iconst_1
      64: istore_2
      65: goto          98
      68: aload_3
      69: iconst_0
      70: baload
      71: bipush        63
      73: if_icmpne     81
      76: iconst_1
      77: istore_2
      78: goto          98
      81: aload_0
      82: getfield      #66                 // Field isJapanese:Z
      85: ifeq          98
      88: aload_3
      89: iconst_0
      90: baload
      91: bipush        33
      93: if_icmpne     98
      96: iconst_1
      97: istore_2
      98: aload_0
      99: getfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
     102: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.reset:()V
     105: goto          148
     108: astore_3
     109: iconst_1
     110: istore        4
     112: aload_0
     113: getfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
     116: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.reset:()V
     119: iload         4
     121: ireturn
     122: astore_3
     123: iconst_1
     124: istore        4
     126: aload_0
     127: getfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
     130: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.reset:()V
     133: iload         4
     135: ireturn
     136: astore        5
     138: aload_0
     139: getfield      #23                 // Field bout:Ljava/io/ByteArrayOutputStream;
     142: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.reset:()V
     145: aload         5
     147: athrow
     148: iload_2
     149: ireturn
    Exception table:
       from    to  target type
          35    98   108   Class java/io/IOException
          35    98   122   Class java/lang/Error
          35    98   136   any
         108   112   136   any
         122   126   136   any
         136   138   136   any
}
