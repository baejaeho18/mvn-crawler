public class nu.xom.Serializer {
  private nu.xom.TextWriter escaper;

  private boolean preserveBaseURI;

  private org.xml.sax.helpers.NamespaceSupport namespaces;

  public nu.xom.Serializer(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #19                 // Field preserveBaseURI:Z
       9: aload_0
      10: new           #21                 // class org/xml/sax/helpers/NamespaceSupport
      13: dup
      14: invokespecial #22                 // Method org/xml/sax/helpers/NamespaceSupport."<init>":()V
      17: putfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
      20: aload_0
      21: aload_1
      22: ldc           #26                 // String UTF-8
      24: invokespecial #30                 // Method setOutputStream:(Ljava/io/OutputStream;Ljava/lang/String;)V
      27: goto          41
      30: astore_2
      31: new           #32                 // class java/lang/RuntimeException
      34: dup
      35: ldc           #34                 // String The VM is broken. It does not understand UTF-8.
      37: invokespecial #37                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return
    Exception table:
       from    to  target type
          20    27    30   Class java/io/UnsupportedEncodingException

  public nu.xom.Serializer(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #19                 // Field preserveBaseURI:Z
       9: aload_0
      10: new           #21                 // class org/xml/sax/helpers/NamespaceSupport
      13: dup
      14: invokespecial #22                 // Method org/xml/sax/helpers/NamespaceSupport."<init>":()V
      17: putfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
      20: aload_2
      21: ifnonnull     34
      24: new           #39                 // class java/lang/NullPointerException
      27: dup
      28: ldc           #41                 // String Null encoding
      30: invokespecial #42                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokespecial #30                 // Method setOutputStream:(Ljava/io/OutputStream;Ljava/lang/String;)V
      40: return

  public void setOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method flush:()V
       4: aload_0
       5: invokevirtual #51                 // Method getMaxLength:()I
       8: istore_2
       9: aload_0
      10: invokevirtual #54                 // Method getIndent:()I
      13: istore_3
      14: aload_0
      15: invokevirtual #58                 // Method getLineSeparator:()Ljava/lang/String;
      18: astore        4
      20: aload_0
      21: invokevirtual #62                 // Method getUnicodeNormalizationFormC:()Z
      24: istore        5
      26: aload_0
      27: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      30: invokevirtual #69                 // Method nu/xom/TextWriter.getEncoding:()Ljava/lang/String;
      33: astore        6
      35: aload_0
      36: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      39: getfield      #72                 // Field nu/xom/TextWriter.lineSeparatorSet:Z
      42: istore        7
      44: aload_0
      45: aload_1
      46: aload         6
      48: invokespecial #30                 // Method setOutputStream:(Ljava/io/OutputStream;Ljava/lang/String;)V
      51: aload_0
      52: iload_3
      53: invokevirtual #76                 // Method setIndent:(I)V
      56: aload_0
      57: iload_2
      58: invokevirtual #79                 // Method setMaxLength:(I)V
      61: aload_0
      62: iload         5
      64: invokevirtual #83                 // Method setUnicodeNormalizationFormC:(Z)V
      67: iload         7
      69: ifeq          78
      72: aload_0
      73: aload         4
      75: invokevirtual #86                 // Method setLineSeparator:(Ljava/lang/String;)V
      78: return

  private void setOutputStream(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #39                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #88                 // String Null OutputStream
      10: invokespecial #42                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: getstatic     #94                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      18: invokevirtual #100                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      21: astore_3
      22: aload_3
      23: ldc           #26                 // String UTF-8
      25: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          46
      31: new           #106                // class java/io/OutputStreamWriter
      34: dup
      35: aload_1
      36: ldc           #26                 // String UTF-8
      38: invokespecial #108                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      41: astore        4
      43: goto          199
      46: aload_3
      47: ldc           #110                // String UTF-16
      49: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          64
      55: aload_3
      56: ldc           #112                // String ISO-10646-UCS-2
      58: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          79
      64: new           #106                // class java/io/OutputStreamWriter
      67: dup
      68: aload_1
      69: ldc           #114                // String UnicodeBig
      71: invokespecial #108                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      74: astore        4
      76: goto          199
      79: aload_3
      80: ldc           #116                // String IBM037
      82: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifne          142
      88: aload_3
      89: ldc           #118                // String CP037
      91: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifne          142
      97: aload_3
      98: ldc           #120                // String EBCDIC-CP-US
     100: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     103: ifne          142
     106: aload_3
     107: ldc           #122                // String EBCDIC-CP-CA
     109: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifne          142
     115: aload_3
     116: ldc           #124                // String EBCDIC-CP-WA
     118: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     121: ifne          142
     124: aload_3
     125: ldc           #126                // String EBCDIC-CP-NL
     127: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     130: ifne          142
     133: aload_3
     134: ldc           #128                // String CSIBM037
     136: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     139: ifeq          155
     142: new           #130                // class nu/xom/EBCDICWriter
     145: dup
     146: aload_1
     147: invokespecial #132                // Method nu/xom/EBCDICWriter."<init>":(Ljava/io/OutputStream;)V
     150: astore        4
     152: goto          199
     155: aload_3
     156: ldc           #134                // String ISO-8859-11
     158: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     161: ifne          173
     164: aload_3
     165: ldc           #136                // String TIS-620
     167: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     170: ifeq          188
     173: new           #106                // class java/io/OutputStreamWriter
     176: dup
     177: aload_1
     178: ldc           #138                // String TIS620
     180: invokespecial #108                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
     183: astore        4
     185: goto          199
     188: new           #106                // class java/io/OutputStreamWriter
     191: dup
     192: aload_1
     193: aload_2
     194: invokespecial #108                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
     197: astore        4
     199: new           #140                // class nu/xom/UnsynchronizedBufferedWriter
     202: dup
     203: aload         4
     205: invokespecial #143                // Method nu/xom/UnsynchronizedBufferedWriter."<init>":(Ljava/io/Writer;)V
     208: astore        4
     210: aload_0
     211: aload         4
     213: aload_2
     214: invokestatic  #149                // Method nu/xom/TextWriterFactory.getTextWriter:(Ljava/io/Writer;Ljava/lang/String;)Lnu/xom/TextWriter;
     217: putfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     220: return

  public void write(nu.xom.Document) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #154                // Method nu/xom/TextWriter.reset:()V
       7: aload_0
       8: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
      11: invokevirtual #155                // Method org/xml/sax/helpers/NamespaceSupport.reset:()V
      14: aload_0
      15: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
      18: ldc           #157                // String
      20: ldc           #157                // String
      22: invokevirtual #161                // Method org/xml/sax/helpers/NamespaceSupport.declarePrefix:(Ljava/lang/String;Ljava/lang/String;)Z
      25: pop
      26: aload_0
      27: invokevirtual #164                // Method writeXMLDeclaration:()V
      30: aload_1
      31: invokevirtual #169                // Method nu/xom/Document.getChildCount:()I
      34: istore_2
      35: iconst_0
      36: istore_3
      37: iload_3
      38: iload_2
      39: if_icmpge     64
      42: aload_0
      43: aload_1
      44: iload_3
      45: invokevirtual #173                // Method nu/xom/Document.getChild:(I)Lnu/xom/Node;
      48: invokevirtual #177                // Method writeChild:(Lnu/xom/Node;)V
      51: aload_0
      52: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      55: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
      58: iinc          3, 1
      61: goto          37
      64: aload_0
      65: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      68: invokevirtual #181                // Method nu/xom/TextWriter.flush:()V
      71: return

  protected void writeXMLDeclaration() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: ldc           #183                // String <?xml version=\"1.0\" encoding=\"
       6: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      13: aload_0
      14: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      17: invokevirtual #69                 // Method nu/xom/TextWriter.getEncoding:()Ljava/lang/String;
      20: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      23: aload_0
      24: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      27: ldc           #188                // String \"?>
      29: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      32: aload_0
      33: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      36: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
      39: return

  protected void write(nu.xom.Element) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #192                // Method nu/xom/Element.getChildCount:()I
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     61
      16: aload_1
      17: iload         4
      19: invokevirtual #193                // Method nu/xom/Element.getChild:(I)Lnu/xom/Node;
      22: astore        5
      24: aload         5
      26: invokevirtual #198                // Method nu/xom/Node.isText:()Z
      29: ifeq          50
      32: aload         5
      34: checkcast     #200                // class nu/xom/Text
      37: astore        6
      39: aload         6
      41: invokevirtual #203                // Method nu/xom/Text.isEmpty:()Z
      44: ifeq          50
      47: goto          55
      50: iconst_1
      51: istore_2
      52: goto          61
      55: iinc          4, 1
      58: goto          10
      61: iload_2
      62: ifeq          226
      65: aload_0
      66: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      69: invokevirtual #206                // Method nu/xom/TextWriter.isPreserveSpace:()Z
      72: istore        4
      74: aload_0
      75: aload_1
      76: invokevirtual #209                // Method writeStartTag:(Lnu/xom/Element;)V
      79: iconst_0
      80: istore        5
      82: iload         5
      84: iload_3
      85: if_icmpge     209
      88: aload_1
      89: iload         5
      91: invokevirtual #193                // Method nu/xom/Element.getChild:(I)Lnu/xom/Node;
      94: astore        6
      96: aload_0
      97: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     100: invokevirtual #212                // Method nu/xom/TextWriter.getNFC:()Z
     103: ifeq          197
     106: aload         6
     108: invokevirtual #198                // Method nu/xom/Node.isText:()Z
     111: ifeq          197
     114: aload         6
     116: checkcast     #200                // class nu/xom/Text
     119: astore        7
     121: iload         5
     123: iload_3
     124: iconst_1
     125: isub
     126: if_icmpge     188
     129: aload_1
     130: iload         5
     132: iconst_1
     133: iadd
     134: invokevirtual #193                // Method nu/xom/Element.getChild:(I)Lnu/xom/Node;
     137: astore        8
     139: aload         8
     141: invokevirtual #198                // Method nu/xom/Node.isText:()Z
     144: ifeq          188
     147: new           #200                // class nu/xom/Text
     150: dup
     151: new           #214                // class java/lang/StringBuffer
     154: dup
     155: invokespecial #215                // Method java/lang/StringBuffer."<init>":()V
     158: aload         7
     160: invokevirtual #218                // Method nu/xom/Text.getValue:()Ljava/lang/String;
     163: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     166: aload         8
     168: invokevirtual #223                // Method nu/xom/Node.getValue:()Ljava/lang/String;
     171: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     174: invokevirtual #226                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     177: invokespecial #227                // Method nu/xom/Text."<init>":(Ljava/lang/String;)V
     180: astore        7
     182: iinc          5, 1
     185: goto          121
     188: aload_0
     189: aload         7
     191: invokevirtual #177                // Method writeChild:(Lnu/xom/Node;)V
     194: goto          203
     197: aload_0
     198: aload         6
     200: invokevirtual #177                // Method writeChild:(Lnu/xom/Node;)V
     203: iinc          5, 1
     206: goto          82
     209: aload_0
     210: aload_1
     211: invokevirtual #230                // Method writeEndTag:(Lnu/xom/Element;)V
     214: aload_0
     215: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     218: iload         4
     220: invokevirtual #233                // Method nu/xom/TextWriter.setPreserveSpace:(Z)V
     223: goto          231
     226: aload_0
     227: aload_1
     228: invokevirtual #236                // Method writeEmptyElementTag:(Lnu/xom/Element;)V
     231: return

  private boolean hasNonTextChildren(nu.xom.Element);
    Code:
       0: aload_1
       1: invokevirtual #192                // Method nu/xom/Element.getChildCount:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     31
      12: aload_1
      13: iload_3
      14: invokevirtual #193                // Method nu/xom/Element.getChild:(I)Lnu/xom/Node;
      17: invokevirtual #198                // Method nu/xom/Node.isText:()Z
      20: ifne          25
      23: iconst_1
      24: ireturn
      25: iinc          3, 1
      28: goto          7
      31: iconst_0
      32: ireturn

  protected void writeEndTag(nu.xom.Element) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #241                // Method nu/xom/TextWriter.decrementIndent:()V
       7: aload_0
       8: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      11: invokevirtual #242                // Method nu/xom/TextWriter.getIndent:()I
      14: ifle          42
      17: aload_0
      18: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      21: invokevirtual #206                // Method nu/xom/TextWriter.isPreserveSpace:()Z
      24: ifne          42
      27: aload_0
      28: aload_1
      29: invokespecial #244                // Method hasNonTextChildren:(Lnu/xom/Element;)Z
      32: ifeq          42
      35: aload_0
      36: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      39: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
      42: aload_0
      43: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      46: bipush        60
      48: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      51: aload_0
      52: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      55: bipush        47
      57: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      60: aload_0
      61: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      64: aload_1
      65: invokevirtual #250                // Method nu/xom/Element.getQualifiedName:()Ljava/lang/String;
      68: invokevirtual #253                // Method nu/xom/TextWriter.writeName:(Ljava/lang/String;)V
      71: aload_0
      72: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      75: bipush        62
      77: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      80: aload_0
      81: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
      84: invokevirtual #256                // Method org/xml/sax/helpers/NamespaceSupport.popContext:()V
      87: return

  protected void writeStartTag(nu.xom.Element) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #259                // Method writeTagBeginning:(Lnu/xom/Element;)V
       5: aload_0
       6: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       9: bipush        62
      11: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      14: aload_0
      15: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      18: invokevirtual #262                // Method nu/xom/TextWriter.incrementIndent:()V
      21: aload_1
      22: ldc_w         #264                // String space
      25: ldc_w         #266                // String http://www.w3.org/XML/1998/namespace
      28: invokevirtual #270                // Method nu/xom/Element.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      31: astore_2
      32: aload_2
      33: ifnull        75
      36: ldc_w         #272                // String preserve
      39: aload_2
      40: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          57
      46: aload_0
      47: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      50: iconst_1
      51: invokevirtual #233                // Method nu/xom/TextWriter.setPreserveSpace:(Z)V
      54: goto          75
      57: ldc_w         #274                // String default
      60: aload_2
      61: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifeq          75
      67: aload_0
      68: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      71: iconst_0
      72: invokevirtual #233                // Method nu/xom/TextWriter.setPreserveSpace:(Z)V
      75: return

  protected void writeEmptyElementTag(nu.xom.Element) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #259                // Method writeTagBeginning:(Lnu/xom/Element;)V
       5: aload_0
       6: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       9: bipush        47
      11: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      14: aload_0
      15: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      18: bipush        62
      20: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      23: aload_0
      24: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
      27: invokevirtual #256                // Method org/xml/sax/helpers/NamespaceSupport.popContext:()V
      30: return

  private void writeTagBeginning(nu.xom.Element) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
       4: invokevirtual #277                // Method org/xml/sax/helpers/NamespaceSupport.pushContext:()V
       7: aload_0
       8: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      11: invokevirtual #280                // Method nu/xom/TextWriter.isIndenting:()Z
      14: ifeq          44
      17: aload_0
      18: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      21: invokevirtual #206                // Method nu/xom/TextWriter.isPreserveSpace:()Z
      24: ifne          44
      27: aload_0
      28: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      31: invokevirtual #283                // Method nu/xom/TextWriter.justBroke:()Z
      34: ifne          44
      37: aload_0
      38: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      41: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
      44: aload_0
      45: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      48: bipush        60
      50: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      53: aload_0
      54: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      57: aload_1
      58: invokevirtual #250                // Method nu/xom/Element.getQualifiedName:()Ljava/lang/String;
      61: invokevirtual #253                // Method nu/xom/TextWriter.writeName:(Ljava/lang/String;)V
      64: aload_0
      65: aload_1
      66: invokevirtual #286                // Method writeAttributes:(Lnu/xom/Element;)V
      69: aload_0
      70: aload_1
      71: invokevirtual #289                // Method writeNamespaceDeclarations:(Lnu/xom/Element;)V
      74: return

  protected void writeAttributes(nu.xom.Element) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field preserveBaseURI:Z
       4: ifeq          86
       7: aload_1
       8: invokevirtual #293                // Method nu/xom/Element.getParent:()Lnu/xom/ParentNode;
      11: astore_2
      12: aload_1
      13: ldc_w         #295                // String base
      16: ldc_w         #266                // String http://www.w3.org/XML/1998/namespace
      19: invokevirtual #299                // Method nu/xom/Element.getAttribute:(Ljava/lang/String;Ljava/lang/String;)Lnu/xom/Attribute;
      22: ifnonnull     86
      25: aload_1
      26: invokevirtual #302                // Method nu/xom/Element.getBaseURI:()Ljava/lang/String;
      29: astore_3
      30: aload_2
      31: ifnull        55
      34: aload_2
      35: invokevirtual #307                // Method nu/xom/ParentNode.isDocument:()Z
      38: ifne          55
      41: aload_1
      42: invokevirtual #302                // Method nu/xom/Element.getBaseURI:()Ljava/lang/String;
      45: aload_2
      46: invokevirtual #308                // Method nu/xom/ParentNode.getBaseURI:()Ljava/lang/String;
      49: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          86
      55: aload_0
      56: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      59: bipush        32
      61: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      64: new           #310                // class nu/xom/Attribute
      67: dup
      68: ldc_w         #312                // String xml:base
      71: ldc_w         #266                // String http://www.w3.org/XML/1998/namespace
      74: aload_3
      75: invokespecial #315                // Method nu/xom/Attribute."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      78: astore        4
      80: aload_0
      81: aload         4
      83: invokevirtual #318                // Method write:(Lnu/xom/Attribute;)V
      86: aload_1
      87: invokevirtual #321                // Method nu/xom/Element.getAttributeCount:()I
      90: istore_2
      91: iconst_0
      92: istore_3
      93: iload_3
      94: iload_2
      95: if_icmpge     126
      98: aload_1
      99: iload_3
     100: invokevirtual #324                // Method nu/xom/Element.getAttribute:(I)Lnu/xom/Attribute;
     103: astore        4
     105: aload_0
     106: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     109: bipush        32
     111: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
     114: aload_0
     115: aload         4
     117: invokevirtual #318                // Method write:(Lnu/xom/Attribute;)V
     120: iinc          3, 1
     123: goto          93
     126: return

  protected void writeNamespaceDeclarations(nu.xom.Element) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #327                // Method nu/xom/Element.getNamespacePrefix:()Ljava/lang/String;
       4: astore_2
       5: ldc_w         #329                // String xml
       8: aload_2
       9: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifne          24
      15: aload_0
      16: aload_2
      17: aload_1
      18: invokevirtual #332                // Method nu/xom/Element.getNamespaceURI:()Ljava/lang/String;
      21: invokespecial #336                // Method writeNamespaceDeclarationIfNecessary:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_1
      25: invokevirtual #321                // Method nu/xom/Element.getAttributeCount:()I
      28: istore_3
      29: iconst_0
      30: istore        4
      32: iload         4
      34: iload_3
      35: if_icmpge     89
      38: aload_1
      39: iload         4
      41: invokevirtual #324                // Method nu/xom/Element.getAttribute:(I)Lnu/xom/Attribute;
      44: astore        5
      46: aload         5
      48: invokevirtual #337                // Method nu/xom/Attribute.getNamespacePrefix:()Ljava/lang/String;
      51: astore        6
      53: aload         6
      55: invokevirtual #340                // Method java/lang/String.length:()I
      58: ifeq          83
      61: ldc_w         #329                // String xml
      64: aload         6
      66: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      69: ifne          83
      72: aload_0
      73: aload         6
      75: aload         5
      77: invokevirtual #341                // Method nu/xom/Attribute.getNamespaceURI:()Ljava/lang/String;
      80: invokespecial #336                // Method writeNamespaceDeclarationIfNecessary:(Ljava/lang/String;Ljava/lang/String;)V
      83: iinc          4, 1
      86: goto          32
      89: aload_1
      90: getfield      #344                // Field nu/xom/Element.namespaces:Lnu/xom/Namespaces;
      93: astore        4
      95: aload         4
      97: ifnonnull     101
     100: return
     101: aload         4
     103: invokevirtual #349                // Method nu/xom/Namespaces.size:()I
     106: istore        5
     108: iconst_0
     109: istore        6
     111: iload         6
     113: iload         5
     115: if_icmpge     150
     118: aload         4
     120: iload         6
     122: invokevirtual #353                // Method nu/xom/Namespaces.getPrefix:(I)Ljava/lang/String;
     125: astore        7
     127: aload         4
     129: aload         7
     131: invokevirtual #357                // Method nu/xom/Namespaces.getURI:(Ljava/lang/String;)Ljava/lang/String;
     134: astore        8
     136: aload_0
     137: aload         7
     139: aload         8
     141: invokespecial #336                // Method writeNamespaceDeclarationIfNecessary:(Ljava/lang/String;Ljava/lang/String;)V
     144: iinc          6, 1
     147: goto          111
     150: return

  private void writeNamespaceDeclarationIfNecessary(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
       4: aload_1
       5: invokevirtual #358                // Method org/xml/sax/helpers/NamespaceSupport.getURI:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_3
       9: aload_3
      10: ifnonnull     23
      13: ldc           #157                // String
      15: aload_2
      16: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          23
      22: return
      23: aload_2
      24: aload_3
      25: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          32
      31: return
      32: aload_0
      33: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      36: bipush        32
      38: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #361                // Method writeNamespaceDeclaration:(Ljava/lang/String;Ljava/lang/String;)V
      47: return

  protected void writeNamespaceDeclaration(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field namespaces:Lorg/xml/sax/helpers/NamespaceSupport;
       4: aload_1
       5: aload_2
       6: invokevirtual #161                // Method org/xml/sax/helpers/NamespaceSupport.declarePrefix:(Ljava/lang/String;Ljava/lang/String;)Z
       9: pop
      10: ldc           #157                // String
      12: aload_1
      13: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          32
      19: aload_0
      20: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      23: ldc_w         #363                // String xmlns
      26: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      29: goto          50
      32: aload_0
      33: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      36: ldc_w         #365                // String xmlns:
      39: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      42: aload_0
      43: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      46: aload_1
      47: invokevirtual #253                // Method nu/xom/TextWriter.writeName:(Ljava/lang/String;)V
      50: aload_0
      51: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      54: bipush        61
      56: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      59: aload_0
      60: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      63: bipush        34
      65: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      68: aload_0
      69: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      72: aload_2
      73: invokevirtual #368                // Method nu/xom/TextWriter.writePCDATA:(Ljava/lang/String;)V
      76: aload_0
      77: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      80: bipush        34
      82: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      85: return

  protected void write(nu.xom.Attribute) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: aload_1
       5: invokevirtual #369                // Method nu/xom/Attribute.getQualifiedName:()Ljava/lang/String;
       8: invokevirtual #253                // Method nu/xom/TextWriter.writeName:(Ljava/lang/String;)V
      11: aload_0
      12: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      15: bipush        61
      17: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      20: aload_0
      21: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      24: bipush        34
      26: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      29: aload_0
      30: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      33: aload_1
      34: invokevirtual #370                // Method nu/xom/Attribute.getValue:()Ljava/lang/String;
      37: invokevirtual #373                // Method nu/xom/TextWriter.writeAttributeValue:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      44: bipush        34
      46: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      49: return

  protected void write(nu.xom.Comment) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #280                // Method nu/xom/TextWriter.isIndenting:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      14: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
      17: aload_0
      18: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      21: ldc_w         #376                // String <!--
      24: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      31: aload_1
      32: invokevirtual #379                // Method nu/xom/Comment.getValue:()Ljava/lang/String;
      35: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
      38: aload_0
      39: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      42: ldc_w         #384                // String -->
      45: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      48: return

  protected void write(nu.xom.ProcessingInstruction) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #280                // Method nu/xom/TextWriter.isIndenting:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      14: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
      17: aload_0
      18: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      21: ldc_w         #387                // String <?
      24: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      31: aload_1
      32: invokevirtual #392                // Method nu/xom/ProcessingInstruction.getTarget:()Ljava/lang/String;
      35: invokevirtual #253                // Method nu/xom/TextWriter.writeName:(Ljava/lang/String;)V
      38: aload_1
      39: invokevirtual #393                // Method nu/xom/ProcessingInstruction.getValue:()Ljava/lang/String;
      42: astore_2
      43: ldc           #157                // String
      45: aload_2
      46: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifne          69
      52: aload_0
      53: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      56: bipush        32
      58: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
      61: aload_0
      62: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      65: aload_2
      66: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
      69: aload_0
      70: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      73: ldc_w         #395                // String ?>
      76: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      79: return

  protected void write(nu.xom.Text) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #218                // Method nu/xom/Text.getValue:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #399                // Method nu/xom/Text.isCDATASection:()Z
       9: ifeq          109
      12: aload_2
      13: ldc_w         #401                // String ]]>
      16: invokevirtual #405                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      19: iconst_m1
      20: if_icmpne     109
      23: aload_0
      24: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      27: instanceof    #407                // class nu/xom/UnicodeWriter
      30: ifne          78
      33: aload_2
      34: invokevirtual #340                // Method java/lang/String.length:()I
      37: istore_3
      38: iconst_0
      39: istore        4
      41: iload         4
      43: iload_3
      44: if_icmpge     78
      47: aload_0
      48: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      51: aload_2
      52: iload         4
      54: invokevirtual #411                // Method java/lang/String.charAt:(I)C
      57: invokevirtual #415                // Method nu/xom/TextWriter.needsEscaping:(C)Z
      60: ifeq          72
      63: aload_0
      64: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      67: aload_2
      68: invokevirtual #368                // Method nu/xom/TextWriter.writePCDATA:(Ljava/lang/String;)V
      71: return
      72: iinc          4, 1
      75: goto          41
      78: aload_0
      79: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      82: ldc_w         #417                // String <![CDATA[
      85: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      88: aload_0
      89: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      92: aload_2
      93: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
      96: aload_0
      97: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     100: ldc_w         #401                // String ]]>
     103: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
     106: goto          127
     109: aload_0
     110: aload_1
     111: aload_2
     112: invokespecial #421                // Method isBoundaryWhitespace:(Lnu/xom/Text;Ljava/lang/String;)Z
     115: ifeq          119
     118: return
     119: aload_0
     120: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     123: aload_2
     124: invokevirtual #368                // Method nu/xom/TextWriter.writePCDATA:(Ljava/lang/String;)V
     127: return

  private boolean isBoundaryWhitespace(nu.xom.Text, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getIndent:()I
       4: ifgt          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #422                // Method nu/xom/Text.getParent:()Lnu/xom/ParentNode;
      13: astore_3
      14: aload_3
      15: ifnonnull     28
      18: ldc           #157                // String
      20: aload_2
      21: invokevirtual #425                // Method java/lang/String.trim:()Ljava/lang/String;
      24: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ireturn
      28: aload_3
      29: invokevirtual #426                // Method nu/xom/ParentNode.getChildCount:()I
      32: istore        4
      34: iload         4
      36: iconst_1
      37: if_icmpne     42
      40: iconst_0
      41: ireturn
      42: ldc           #157                // String
      44: aload_2
      45: invokevirtual #425                // Method java/lang/String.trim:()Ljava/lang/String;
      48: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          56
      54: iconst_0
      55: ireturn
      56: aload_3
      57: aload_1
      58: invokevirtual #429                // Method nu/xom/ParentNode.indexOf:(Lnu/xom/Node;)I
      61: istore        5
      63: aconst_null
      64: astore        6
      66: aconst_null
      67: astore        7
      69: iload         5
      71: ifeq          84
      74: aload_3
      75: iload         5
      77: iconst_1
      78: isub
      79: invokevirtual #430                // Method nu/xom/ParentNode.getChild:(I)Lnu/xom/Node;
      82: astore        6
      84: iload         5
      86: iload         4
      88: iconst_1
      89: isub
      90: if_icmpeq     103
      93: aload_3
      94: iload         5
      96: iconst_1
      97: iadd
      98: invokevirtual #430                // Method nu/xom/ParentNode.getChild:(I)Lnu/xom/Node;
     101: astore        7
     103: aload         6
     105: ifnull        116
     108: aload         6
     110: invokevirtual #198                // Method nu/xom/Node.isText:()Z
     113: ifne          131
     116: aload         7
     118: ifnull        129
     121: aload         7
     123: invokevirtual #198                // Method nu/xom/Node.isText:()Z
     126: ifne          131
     129: iconst_1
     130: ireturn
     131: iconst_0
     132: ireturn

  protected void write(nu.xom.DocType) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: ldc_w         #433                // String <!DOCTYPE
       7: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      14: aload_1
      15: invokevirtual #438                // Method nu/xom/DocType.getRootElementName:()Ljava/lang/String;
      18: invokevirtual #253                // Method nu/xom/TextWriter.writeName:(Ljava/lang/String;)V
      21: aload_1
      22: invokevirtual #441                // Method nu/xom/DocType.getPublicID:()Ljava/lang/String;
      25: ifnull        80
      28: aload_0
      29: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      32: new           #214                // class java/lang/StringBuffer
      35: dup
      36: invokespecial #215                // Method java/lang/StringBuffer."<init>":()V
      39: ldc_w         #443                // String  PUBLIC \"
      42: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: aload_1
      46: invokevirtual #441                // Method nu/xom/DocType.getPublicID:()Ljava/lang/String;
      49: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: ldc_w         #445                // String \" \"
      55: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: aload_1
      59: invokevirtual #448                // Method nu/xom/DocType.getSystemID:()Ljava/lang/String;
      62: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      65: ldc_w         #450                // String \"
      68: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      71: invokevirtual #226                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      74: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
      77: goto          123
      80: aload_1
      81: invokevirtual #448                // Method nu/xom/DocType.getSystemID:()Ljava/lang/String;
      84: ifnull        123
      87: aload_0
      88: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      91: new           #214                // class java/lang/StringBuffer
      94: dup
      95: invokespecial #215                // Method java/lang/StringBuffer."<init>":()V
      98: ldc_w         #452                // String  SYSTEM \"
     101: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     104: aload_1
     105: invokevirtual #448                // Method nu/xom/DocType.getSystemID:()Ljava/lang/String;
     108: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     111: ldc_w         #450                // String \"
     114: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     117: invokevirtual #226                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     120: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
     123: aload_1
     124: invokevirtual #455                // Method nu/xom/DocType.getInternalDTDSubset:()Ljava/lang/String;
     127: astore_2
     128: aload_2
     129: ldc           #157                // String
     131: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     134: ifne          187
     137: aload_0
     138: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     141: ldc_w         #457                // String  [
     144: invokevirtual #186                // Method nu/xom/TextWriter.writeUncheckedMarkup:(Ljava/lang/String;)V
     147: aload_0
     148: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     151: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
     154: aload_0
     155: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     158: iconst_1
     159: invokevirtual #460                // Method nu/xom/TextWriter.setInDocType:(Z)V
     162: aload_0
     163: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     166: aload_2
     167: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
     170: aload_0
     171: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     174: iconst_0
     175: invokevirtual #460                // Method nu/xom/TextWriter.setInDocType:(Z)V
     178: aload_0
     179: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     182: bipush        93
     184: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
     187: aload_0
     188: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
     191: bipush        62
     193: invokevirtual #247                // Method nu/xom/TextWriter.write:(C)V
     196: return

  protected void writeChild(nu.xom.Node) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #463                // Method nu/xom/Node.isElement:()Z
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #191                // class nu/xom/Element
      12: invokevirtual #465                // Method write:(Lnu/xom/Element;)V
      15: goto          130
      18: aload_1
      19: invokevirtual #198                // Method nu/xom/Node.isText:()Z
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #200                // class nu/xom/Text
      30: invokevirtual #467                // Method write:(Lnu/xom/Text;)V
      33: goto          130
      36: aload_1
      37: invokevirtual #470                // Method nu/xom/Node.isComment:()Z
      40: ifeq          54
      43: aload_0
      44: aload_1
      45: checkcast     #378                // class nu/xom/Comment
      48: invokevirtual #472                // Method write:(Lnu/xom/Comment;)V
      51: goto          130
      54: aload_1
      55: invokevirtual #475                // Method nu/xom/Node.isProcessingInstruction:()Z
      58: ifeq          72
      61: aload_0
      62: aload_1
      63: checkcast     #389                // class nu/xom/ProcessingInstruction
      66: invokevirtual #477                // Method write:(Lnu/xom/ProcessingInstruction;)V
      69: goto          130
      72: aload_1
      73: invokevirtual #480                // Method nu/xom/Node.isDocType:()Z
      76: ifeq          90
      79: aload_0
      80: aload_1
      81: checkcast     #435                // class nu/xom/DocType
      84: invokevirtual #482                // Method write:(Lnu/xom/DocType;)V
      87: goto          130
      90: new           #484                // class nu/xom/XMLException
      93: dup
      94: new           #214                // class java/lang/StringBuffer
      97: dup
      98: invokespecial #215                // Method java/lang/StringBuffer."<init>":()V
     101: ldc_w         #486                // String Cannot write a
     104: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: aload_1
     108: invokevirtual #490                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     111: invokevirtual #495                // Method java/lang/Class.getName:()Ljava/lang/String;
     114: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     117: ldc_w         #497                // String  from the writeChild() method
     120: invokevirtual #222                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     123: invokevirtual #226                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     126: invokespecial #498                // Method nu/xom/XMLException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: return

  protected final void writeEscaped(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: aload_1
       5: invokevirtual #368                // Method nu/xom/TextWriter.writePCDATA:(Ljava/lang/String;)V
       8: return

  protected final void writeAttributeValue(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: aload_1
       5: invokevirtual #373                // Method nu/xom/TextWriter.writeAttributeValue:(Ljava/lang/String;)V
       8: return

  protected final void writeRaw(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: aload_1
       5: invokevirtual #382                // Method nu/xom/TextWriter.writeMarkup:(Ljava/lang/String;)V
       8: return

  protected final void breakLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #180                // Method nu/xom/TextWriter.breakLine:()V
       7: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #181                // Method nu/xom/TextWriter.flush:()V
       7: return

  public int getIndent();
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #242                // Method nu/xom/TextWriter.getIndent:()I
       7: ireturn

  public void setIndent(int);
    Code:
       0: iload_1
       1: ifge          15
       4: new           #502                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc_w         #504                // String Indent cannot be negative
      11: invokespecial #505                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
      19: iload_1
      20: invokevirtual #506                // Method nu/xom/TextWriter.setIndent:(I)V
      23: return

  public java.lang.String getLineSeparator();
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #507                // Method nu/xom/TextWriter.getLineSeparator:()Ljava/lang/String;
       7: areturn

  public void setLineSeparator(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: aload_1
       5: invokevirtual #508                // Method nu/xom/TextWriter.setLineSeparator:(Ljava/lang/String;)V
       8: return

  public int getMaxLength();
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #509                // Method nu/xom/TextWriter.getMaxLength:()I
       7: ireturn

  public void setMaxLength(int);
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: iload_1
       5: invokevirtual #510                // Method nu/xom/TextWriter.setMaxLength:(I)V
       8: return

  public boolean getPreserveBaseURI();
    Code:
       0: aload_0
       1: getfield      #19                 // Field preserveBaseURI:Z
       4: ireturn

  public void setPreserveBaseURI(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field preserveBaseURI:Z
       5: return

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #69                 // Method nu/xom/TextWriter.getEncoding:()Ljava/lang/String;
       7: areturn

  public void setUnicodeNormalizationFormC(boolean);
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: iload_1
       5: invokevirtual #515                // Method nu/xom/TextWriter.setNFC:(Z)V
       8: return

  public boolean getUnicodeNormalizationFormC();
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #212                // Method nu/xom/TextWriter.getNFC:()Z
       7: ireturn

  protected final int getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #64                 // Field escaper:Lnu/xom/TextWriter;
       4: invokevirtual #518                // Method nu/xom/TextWriter.getColumnNumber:()I
       7: ireturn
}
