class nu.xom.JaxenNavigator$ChildIterator implements java.util.Iterator {
  private final nu.xom.ParentNode parent;

  private int xomIndex;

  private final int xomCount;

  nu.xom.JaxenNavigator$ChildIterator(nu.xom.ParentNode);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #21                 // Field xomIndex:I
       9: aload_0
      10: aload_1
      11: putfield      #23                 // Field parent:Lnu/xom/ParentNode;
      14: aload_0
      15: aload_1
      16: invokevirtual #29                 // Method nu/xom/ParentNode.getChildCount:()I
      19: putfield      #31                 // Field xomCount:I
      22: return

  nu.xom.JaxenNavigator$ChildIterator(nu.xom.ParentNode, int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #21                 // Field xomIndex:I
       9: aload_0
      10: aload_1
      11: putfield      #23                 // Field parent:Lnu/xom/ParentNode;
      14: aload_0
      15: iload_2
      16: putfield      #21                 // Field xomIndex:I
      19: aload_0
      20: aload_1
      21: invokevirtual #29                 // Method nu/xom/ParentNode.getChildCount:()I
      24: putfield      #31                 // Field xomCount:I
      27: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #21                 // Field xomIndex:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #31                 // Field xomCount:I
      10: if_icmpge     49
      13: aload_0
      14: getfield      #23                 // Field parent:Lnu/xom/ParentNode;
      17: iload_1
      18: invokevirtual #38                 // Method nu/xom/ParentNode.getChild:(I)Lnu/xom/Node;
      21: astore_2
      22: aload_2
      23: invokevirtual #43                 // Method nu/xom/Node.isText:()Z
      26: ifeq          41
      29: aload_2
      30: checkcast     #45                 // class nu/xom/Text
      33: invokevirtual #48                 // Method nu/xom/Text.isEmpty:()Z
      36: ifne          43
      39: iconst_1
      40: ireturn
      41: iconst_1
      42: ireturn
      43: iinc          1, 1
      46: goto          5
      49: iconst_0
      50: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: getfield      #23                 // Field parent:Lnu/xom/ParentNode;
       4: aload_0
       5: dup
       6: getfield      #21                 // Field xomIndex:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #21                 // Field xomIndex:I
      15: invokevirtual #38                 // Method nu/xom/ParentNode.getChild:(I)Lnu/xom/Node;
      18: astore_1
      19: aload_1
      20: invokevirtual #43                 // Method nu/xom/Node.isText:()Z
      23: ifeq          146
      26: aload_1
      27: checkcast     #45                 // class nu/xom/Text
      30: astore_2
      31: aload_2
      32: invokevirtual #48                 // Method nu/xom/Text.isEmpty:()Z
      35: istore_3
      36: new           #52                 // class java/util/ArrayList
      39: dup
      40: iconst_1
      41: invokespecial #55                 // Method java/util/ArrayList."<init>":(I)V
      44: astore        4
      46: aload         4
      48: aload_2
      49: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_0
      56: getfield      #21                 // Field xomIndex:I
      59: aload_0
      60: getfield      #31                 // Field xomCount:I
      63: if_icmpge     130
      66: aload_0
      67: getfield      #23                 // Field parent:Lnu/xom/ParentNode;
      70: aload_0
      71: getfield      #21                 // Field xomIndex:I
      74: invokevirtual #38                 // Method nu/xom/ParentNode.getChild:(I)Lnu/xom/Node;
      77: astore        5
      79: aload         5
      81: invokevirtual #43                 // Method nu/xom/Node.isText:()Z
      84: ifne          90
      87: goto          130
      90: aload_0
      91: dup
      92: getfield      #21                 // Field xomIndex:I
      95: iconst_1
      96: iadd
      97: putfield      #21                 // Field xomIndex:I
     100: aload         4
     102: aload         5
     104: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: iload_3
     111: ifeq          127
     114: aload         5
     116: checkcast     #45                 // class nu/xom/Text
     119: invokevirtual #48                 // Method nu/xom/Text.isEmpty:()Z
     122: ifne          127
     125: iconst_0
     126: istore_3
     127: goto          55
     130: iload_3
     131: ifeq          139
     134: aload_0
     135: invokevirtual #63                 // Method next:()Ljava/lang/Object;
     138: areturn
     139: aload         4
     141: astore        6
     143: goto          161
     146: aload_1
     147: invokevirtual #66                 // Method nu/xom/Node.isDocType:()Z
     150: ifeq          158
     153: aload_0
     154: invokevirtual #63                 // Method next:()Ljava/lang/Object;
     157: areturn
     158: aload_1
     159: astore        6
     161: aload         6
     163: areturn

  public void remove();
    Code:
       0: new           #69                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #70                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
