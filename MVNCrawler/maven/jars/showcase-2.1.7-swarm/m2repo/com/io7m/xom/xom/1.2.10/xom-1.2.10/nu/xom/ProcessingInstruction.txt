public class nu.xom.ProcessingInstruction extends nu.xom.Node {
  private java.lang.String target;

  private java.lang.String data;

  public nu.xom.ProcessingInstruction(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #16                 // Method _setTarget:(Ljava/lang/String;)V
       9: aload_0
      10: aload_2
      11: invokespecial #19                 // Method _setValue:(Ljava/lang/String;)V
      14: return

  public nu.xom.ProcessingInstruction(nu.xom.ProcessingInstruction);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #22                 // Field target:Ljava/lang/String;
       9: putfield      #22                 // Field target:Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: getfield      #24                 // Field data:Ljava/lang/String;
      17: putfield      #24                 // Field data:Ljava/lang/String;
      20: return

  private nu.xom.ProcessingInstruction();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method nu/xom/Node."<init>":()V
       4: return

  static nu.xom.ProcessingInstruction build(java.lang.String, java.lang.String);
    Code:
       0: new           #2                  // class nu/xom/ProcessingInstruction
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: putfield      #22                 // Field target:Ljava/lang/String;
      13: aload_2
      14: aload_1
      15: putfield      #24                 // Field data:Ljava/lang/String;
      18: aload_2
      19: areturn

  public final java.lang.String getTarget();
    Code:
       0: aload_0
       1: getfield      #22                 // Field target:Ljava/lang/String;
       4: areturn

  public void setTarget(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method _setTarget:(Ljava/lang/String;)V
       5: return

  private void _setTarget(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method nu/xom/Verifier.checkNCName:(Ljava/lang/String;)V
       4: goto          27
       7: astore_2
       8: new           #39                 // class nu/xom/IllegalTargetException
      11: dup
      12: aload_2
      13: invokevirtual #42                 // Method nu/xom/IllegalNameException.getMessage:()Ljava/lang/String;
      16: invokespecial #44                 // Method nu/xom/IllegalTargetException."<init>":(Ljava/lang/String;)V
      19: astore_3
      20: aload_3
      21: aload_1
      22: invokevirtual #47                 // Method nu/xom/IllegalTargetException.setData:(Ljava/lang/String;)V
      25: aload_3
      26: athrow
      27: aload_1
      28: ldc           #49                 // String xml
      30: invokevirtual #55                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      33: ifeq          70
      36: new           #39                 // class nu/xom/IllegalTargetException
      39: dup
      40: new           #57                 // class java/lang/StringBuffer
      43: dup
      44: invokespecial #58                 // Method java/lang/StringBuffer."<init>":()V
      47: aload_1
      48: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      51: ldc           #64                 // String  is not a legal processing instruction target.
      53: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: invokevirtual #67                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      59: invokespecial #44                 // Method nu/xom/IllegalTargetException."<init>":(Ljava/lang/String;)V
      62: astore_2
      63: aload_2
      64: aload_1
      65: invokevirtual #47                 // Method nu/xom/IllegalTargetException.setData:(Ljava/lang/String;)V
      68: aload_2
      69: athrow
      70: aload_0
      71: aload_1
      72: putfield      #22                 // Field target:Ljava/lang/String;
      75: return
    Exception table:
       from    to  target type
           0     4     7   Class nu/xom/IllegalNameException

  public void setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method _setValue:(Ljava/lang/String;)V
       5: return

  private void _setValue(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #71                 // Method nu/xom/Verifier.checkPCDATA:(Ljava/lang/String;)V
       4: aload_1
       5: invokevirtual #75                 // Method java/lang/String.length:()I
       8: ifeq          104
      11: aload_1
      12: ldc           #77                 // String ?>
      14: invokevirtual #81                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      17: iflt          37
      20: new           #83                 // class nu/xom/IllegalDataException
      23: dup
      24: ldc           #85                 // String Processing instruction data must not contain \"?>\"
      26: invokespecial #86                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      29: astore_2
      30: aload_2
      31: aload_1
      32: invokevirtual #87                 // Method nu/xom/IllegalDataException.setData:(Ljava/lang/String;)V
      35: aload_2
      36: athrow
      37: aload_1
      38: bipush        13
      40: invokevirtual #90                 // Method java/lang/String.indexOf:(I)I
      43: iflt          63
      46: new           #83                 // class nu/xom/IllegalDataException
      49: dup
      50: ldc           #92                 // String Processing instruction data cannot contain carriage returns
      52: invokespecial #86                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      55: astore_2
      56: aload_2
      57: aload_1
      58: invokevirtual #87                 // Method nu/xom/IllegalDataException.setData:(Ljava/lang/String;)V
      61: aload_2
      62: athrow
      63: aload_1
      64: iconst_0
      65: invokevirtual #96                 // Method java/lang/String.charAt:(I)C
      68: istore_2
      69: iload_2
      70: bipush        32
      72: if_icmpeq     87
      75: iload_2
      76: bipush        10
      78: if_icmpeq     87
      81: iload_2
      82: bipush        9
      84: if_icmpne     104
      87: new           #83                 // class nu/xom/IllegalDataException
      90: dup
      91: ldc           #98                 // String Processing instruction data cannot contain leading white space
      93: invokespecial #86                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      96: astore_3
      97: aload_3
      98: aload_1
      99: invokevirtual #87                 // Method nu/xom/IllegalDataException.setData:(Ljava/lang/String;)V
     102: aload_3
     103: athrow
     104: aload_0
     105: aload_1
     106: putfield      #24                 // Field data:Ljava/lang/String;
     109: return

  public final java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #24                 // Field data:Ljava/lang/String;
       4: areturn

  public final nu.xom.Node getChild(int);
    Code:
       0: new           #103                // class java/lang/IndexOutOfBoundsException
       3: dup
       4: ldc           #105                // String LeafNodes do not have children
       6: invokespecial #106                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       9: athrow

  public final int getChildCount();
    Code:
       0: iconst_0
       1: ireturn

  public final java.lang.String toXML();
    Code:
       0: new           #57                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #110                // String <?
       6: invokespecial #111                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #22                 // Field target:Ljava/lang/String;
      15: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: aload_0
      20: getfield      #24                 // Field data:Ljava/lang/String;
      23: invokevirtual #75                 // Method java/lang/String.length:()I
      26: ifle          45
      29: aload_1
      30: bipush        32
      32: invokevirtual #114                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #24                 // Field data:Ljava/lang/String;
      41: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: pop
      45: aload_1
      46: ldc           #77                 // String ?>
      48: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      51: pop
      52: aload_1
      53: invokevirtual #67                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      56: areturn

  public nu.xom.Node copy();
    Code:
       0: new           #2                  // class nu/xom/ProcessingInstruction
       3: dup
       4: aload_0
       5: getfield      #22                 // Field target:Ljava/lang/String;
       8: aload_0
       9: getfield      #24                 // Field data:Ljava/lang/String;
      12: invokespecial #118                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: areturn

  boolean isProcessingInstruction();
    Code:
       0: iconst_1
       1: ireturn

  public final java.lang.String toString();
    Code:
       0: new           #57                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #58                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #122                // String [
       9: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: invokevirtual #128                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #133                // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: ldc           #135                // String : target=\"
      24: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: aload_0
      28: getfield      #22                 // Field target:Ljava/lang/String;
      31: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: ldc           #137                // String \"; data=\"
      36: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: aload_0
      40: getfield      #24                 // Field data:Ljava/lang/String;
      43: invokestatic  #143                // Method nu/xom/Text.escapeLineBreaksAndTruncate:(Ljava/lang/String;)Ljava/lang/String;
      46: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: ldc           #145                // String \"]
      51: invokevirtual #62                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: invokevirtual #67                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      57: areturn
}
