public class nu.xom.canonical.Canonicalizer {
  private boolean withComments;

  private boolean exclusive;

  private boolean v11;

  private nu.xom.canonical.Canonicalizer$CanonicalXMLSerializer serializer;

  private java.util.List inclusiveNamespacePrefixes;

  private static java.util.Comparator comparator;

  public static final java.lang.String CANONICAL_XML;

  public static final java.lang.String CANONICAL_XML_WITH_COMMENTS;

  public static final java.lang.String EXCLUSIVE_XML_CANONICALIZATION;

  public static final java.lang.String EXCLUSIVE_XML_CANONICALIZATION_WITH_COMMENTS;

  public static final java.lang.String CANONICAL_XML_11;

  public static final java.lang.String CANONICAL_XML_11_WITH_COMMENTS;

  public nu.xom.canonical.Canonicalizer(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_0
       4: invokespecial #46                 // Method "<init>":(Ljava/io/OutputStream;ZZ)V
       7: return

  public nu.xom.canonical.Canonicalizer(java.io.OutputStream, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #46                 // Method "<init>":(Ljava/io/OutputStream;ZZ)V
       7: return

  private nu.xom.canonical.Canonicalizer(java.io.OutputStream, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #52                 // Field exclusive:Z
       9: aload_0
      10: iconst_0
      11: putfield      #54                 // Field v11:Z
      14: aload_0
      15: new           #56                 // class java/util/ArrayList
      18: dup
      19: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      22: putfield      #59                 // Field inclusiveNamespacePrefixes:Ljava/util/List;
      25: aload_0
      26: new           #8                  // class nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer
      29: dup
      30: aload_0
      31: aload_1
      32: invokespecial #62                 // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer."<init>":(Lnu/xom/canonical/Canonicalizer;Ljava/io/OutputStream;)V
      35: putfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      38: aload_0
      39: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      42: ldc           #66                 // String \n
      44: invokevirtual #70                 // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.setLineSeparator:(Ljava/lang/String;)V
      47: aload_0
      48: iload_2
      49: putfield      #72                 // Field withComments:Z
      52: aload_0
      53: iload_3
      54: putfield      #52                 // Field exclusive:Z
      57: return

  public nu.xom.canonical.Canonicalizer(java.io.OutputStream, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #52                 // Field exclusive:Z
       9: aload_0
      10: iconst_0
      11: putfield      #54                 // Field v11:Z
      14: aload_0
      15: new           #56                 // class java/util/ArrayList
      18: dup
      19: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      22: putfield      #59                 // Field inclusiveNamespacePrefixes:Ljava/util/List;
      25: aload_2
      26: ifnonnull     39
      29: new           #75                 // class java/lang/NullPointerException
      32: dup
      33: ldc           #77                 // String Null algorithm
      35: invokespecial #79                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: new           #8                  // class nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer
      43: dup
      44: aload_0
      45: aload_1
      46: invokespecial #62                 // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer."<init>":(Lnu/xom/canonical/Canonicalizer;Ljava/io/OutputStream;)V
      49: putfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      52: aload_0
      53: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      56: ldc           #66                 // String \n
      58: invokevirtual #70                 // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.setLineSeparator:(Ljava/lang/String;)V
      61: aload_2
      62: ldc           #26                 // String http://www.w3.org/TR/2001/REC-xml-c14n-20010315
      64: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          83
      70: aload_0
      71: iconst_0
      72: putfield      #72                 // Field withComments:Z
      75: aload_0
      76: iconst_0
      77: putfield      #52                 // Field exclusive:Z
      80: goto          230
      83: aload_2
      84: ldc           #29                 // String http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments
      86: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifeq          105
      92: aload_0
      93: iconst_1
      94: putfield      #72                 // Field withComments:Z
      97: aload_0
      98: iconst_0
      99: putfield      #52                 // Field exclusive:Z
     102: goto          230
     105: aload_2
     106: ldc           #32                 // String http://www.w3.org/2001/10/xml-exc-c14n#
     108: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     111: ifeq          127
     114: aload_0
     115: iconst_0
     116: putfield      #72                 // Field withComments:Z
     119: aload_0
     120: iconst_1
     121: putfield      #52                 // Field exclusive:Z
     124: goto          230
     127: aload_2
     128: ldc           #35                 // String http://www.w3.org/2001/10/xml-exc-c14n#WithComments
     130: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     133: ifeq          149
     136: aload_0
     137: iconst_1
     138: putfield      #72                 // Field withComments:Z
     141: aload_0
     142: iconst_1
     143: putfield      #52                 // Field exclusive:Z
     146: goto          230
     149: aload_2
     150: ldc           #38                 // String http://www.w3.org/2006/12/xml-c14n11
     152: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     155: ifeq          176
     158: aload_0
     159: iconst_0
     160: putfield      #72                 // Field withComments:Z
     163: aload_0
     164: iconst_0
     165: putfield      #52                 // Field exclusive:Z
     168: aload_0
     169: iconst_1
     170: putfield      #54                 // Field v11:Z
     173: goto          230
     176: aload_2
     177: ldc           #41                 // String http://www.w3.org/2006/12/xml-c14n11#WithComments
     179: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     182: ifeq          203
     185: aload_0
     186: iconst_1
     187: putfield      #72                 // Field withComments:Z
     190: aload_0
     191: iconst_0
     192: putfield      #52                 // Field exclusive:Z
     195: aload_0
     196: iconst_1
     197: putfield      #54                 // Field v11:Z
     200: goto          230
     203: new           #87                 // class nu/xom/canonical/CanonicalizationException
     206: dup
     207: new           #89                 // class java/lang/StringBuffer
     210: dup
     211: invokespecial #90                 // Method java/lang/StringBuffer."<init>":()V
     214: ldc           #92                 // String Unsupported canonicalization algorithm:
     216: invokevirtual #96                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     219: aload_2
     220: invokevirtual #96                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     223: invokevirtual #100                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     226: invokespecial #101                // Method nu/xom/canonical/CanonicalizationException."<init>":(Ljava/lang/String;)V
     229: athrow
     230: return

  public final void write(nu.xom.Node) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #107                // class nu/xom/Element
       4: ifeq          299
       7: aload_1
       8: invokevirtual #113                // Method nu/xom/Node.getDocument:()Lnu/xom/Document;
      11: astore_2
      12: aconst_null
      13: astore_3
      14: aload_2
      15: ifnonnull     67
      18: new           #107                // class nu/xom/Element
      21: dup
      22: ldc           #115                // String pseudo
      24: invokespecial #116                // Method nu/xom/Element."<init>":(Ljava/lang/String;)V
      27: astore_3
      28: new           #118                // class nu/xom/Document
      31: dup
      32: aload_3
      33: invokespecial #121                // Method nu/xom/Document."<init>":(Lnu/xom/Element;)V
      36: pop
      37: aload_1
      38: checkcast     #123                // class nu/xom/ParentNode
      41: astore        4
      43: aload         4
      45: invokevirtual #127                // Method nu/xom/ParentNode.getParent:()Lnu/xom/ParentNode;
      48: ifnull        61
      51: aload         4
      53: invokevirtual #127                // Method nu/xom/ParentNode.getParent:()Lnu/xom/ParentNode;
      56: astore        4
      58: goto          43
      61: aload_3
      62: aload         4
      64: invokevirtual #130                // Method nu/xom/Element.appendChild:(Lnu/xom/Node;)V
      67: aload_1
      68: ldc           #132                // String .//. | .//@* | .//namespace::*
      70: invokevirtual #136                // Method nu/xom/Node.query:(Ljava/lang/String;)Lnu/xom/Nodes;
      73: astore        4
      75: aload_0
      76: getfield      #52                 // Field exclusive:Z
      79: ifeq          262
      82: new           #138                // class java/util/HashSet
      85: dup
      86: aload         4
      88: invokevirtual #144                // Method nu/xom/Nodes.size:()I
      91: invokespecial #147                // Method java/util/HashSet."<init>":(I)V
      94: astore        5
      96: iconst_0
      97: istore        6
      99: iload         6
     101: aload         4
     103: invokevirtual #144                // Method nu/xom/Nodes.size:()I
     106: if_icmpge     193
     109: aload         4
     111: iload         6
     113: invokevirtual #151                // Method nu/xom/Nodes.get:(I)Lnu/xom/Node;
     116: astore        7
     118: aload         7
     120: instanceof    #107                // class nu/xom/Element
     123: ifeq          149
     126: aload         7
     128: checkcast     #107                // class nu/xom/Element
     131: invokevirtual #154                // Method nu/xom/Element.getNamespacePrefix:()Ljava/lang/String;
     134: astore        8
     136: aload         5
     138: aload         8
     140: invokeinterface #159,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     145: pop
     146: goto          187
     149: aload         7
     151: instanceof    #161                // class nu/xom/Attribute
     154: ifeq          187
     157: aload         7
     159: checkcast     #161                // class nu/xom/Attribute
     162: invokevirtual #162                // Method nu/xom/Attribute.getNamespacePrefix:()Ljava/lang/String;
     165: astore        8
     167: ldc           #164                // String
     169: aload         8
     171: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     174: ifne          187
     177: aload         5
     179: aload         8
     181: invokeinterface #159,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     186: pop
     187: iinc          6, 1
     190: goto          99
     193: iconst_0
     194: istore        6
     196: iload         6
     198: aload         4
     200: invokevirtual #144                // Method nu/xom/Nodes.size:()I
     203: if_icmpge     262
     206: aload         4
     208: iload         6
     210: invokevirtual #151                // Method nu/xom/Nodes.get:(I)Lnu/xom/Node;
     213: astore        7
     215: aload         7
     217: instanceof    #166                // class nu/xom/Namespace
     220: ifeq          256
     223: aload         7
     225: checkcast     #166                // class nu/xom/Namespace
     228: invokevirtual #169                // Method nu/xom/Namespace.getPrefix:()Ljava/lang/String;
     231: astore        8
     233: aload         5
     235: aload         8
     237: invokeinterface #172,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     242: ifne          256
     245: aload         4
     247: iload         6
     249: invokevirtual #175                // Method nu/xom/Nodes.remove:(I)Lnu/xom/Node;
     252: pop
     253: iinc          6, -1
     256: iinc          6, 1
     259: goto          196
     262: aload_0
     263: aload         4
     265: invokevirtual #178                // Method write:(Lnu/xom/Nodes;)V
     268: aload_3
     269: ifnull        296
     272: aload_3
     273: iconst_0
     274: invokevirtual #181                // Method nu/xom/Element.removeChild:(I)Lnu/xom/Node;
     277: pop
     278: goto          296
     281: astore        9
     283: aload_3
     284: ifnull        293
     287: aload_3
     288: iconst_0
     289: invokevirtual #181                // Method nu/xom/Element.removeChild:(I)Lnu/xom/Node;
     292: pop
     293: aload         9
     295: athrow
     296: goto          316
     299: aload_0
     300: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
     303: aconst_null
     304: invokestatic  #185                // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.access$702:(Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;Lnu/xom/Nodes;)Lnu/xom/Nodes;
     307: pop
     308: aload_0
     309: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
     312: aload_1
     313: invokevirtual #187                // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.write:(Lnu/xom/Node;)V
     316: aload_0
     317: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
     320: invokevirtual #190                // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.flush:()V
     323: return
    Exception table:
       from    to  target type
          67   268   281   any
         281   283   281   any

  public final void write(nu.xom.Nodes) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #144                // Method nu/xom/Nodes.size:()I
       4: ifle          60
       7: aload_1
       8: iconst_0
       9: invokevirtual #151                // Method nu/xom/Nodes.get:(I)Lnu/xom/Node;
      12: invokevirtual #113                // Method nu/xom/Node.getDocument:()Lnu/xom/Document;
      15: astore_2
      16: aload_2
      17: ifnonnull     30
      20: new           #87                 // class nu/xom/canonical/CanonicalizationException
      23: dup
      24: ldc           #192                // String Canonicalization is not defined for detached nodes
      26: invokespecial #101                // Method nu/xom/canonical/CanonicalizationException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_1
      32: invokespecial #196                // Method sort:(Lnu/xom/Nodes;)Lnu/xom/Nodes;
      35: astore_3
      36: aload_0
      37: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      40: aload_3
      41: invokestatic  #185                // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.access$702:(Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;Lnu/xom/Nodes;)Lnu/xom/Nodes;
      44: pop
      45: aload_0
      46: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      49: aload_2
      50: invokevirtual #199                // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.write:(Lnu/xom/Document;)V
      53: aload_0
      54: getfield      #64                 // Field serializer:Lnu/xom/canonical/Canonicalizer$CanonicalXMLSerializer;
      57: invokevirtual #190                // Method nu/xom/canonical/Canonicalizer$CanonicalXMLSerializer.flush:()V
      60: return

  public final void setInclusiveNamespacePrefixList(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field inclusiveNamespacePrefixes:Ljava/util/List;
       4: invokeinterface #205,  1          // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #52                 // Field exclusive:Z
      13: ifeq          56
      16: aload_1
      17: ifnull        56
      20: new           #207                // class java/util/StringTokenizer
      23: dup
      24: aload_1
      25: ldc           #209                // String  \t\r\n
      27: iconst_0
      28: invokespecial #212                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      31: astore_2
      32: aload_2
      33: invokevirtual #216                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      36: ifeq          56
      39: aload_0
      40: getfield      #59                 // Field inclusiveNamespacePrefixes:Ljava/util/List;
      43: aload_2
      44: invokevirtual #219                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      47: invokeinterface #220,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          32
      56: return

  private nu.xom.Nodes sort(nu.xom.Nodes);
    Code:
       0: aload_1
       1: iconst_0
       2: invokevirtual #151                // Method nu/xom/Nodes.get:(I)Lnu/xom/Node;
       5: invokevirtual #113                // Method nu/xom/Node.getDocument:()Lnu/xom/Document;
       8: astore_2
       9: aload_1
      10: invokevirtual #144                // Method nu/xom/Nodes.size:()I
      13: iconst_1
      14: if_icmple     178
      17: new           #140                // class nu/xom/Nodes
      20: dup
      21: invokespecial #221                // Method nu/xom/Nodes."<init>":()V
      24: astore_3
      25: new           #56                 // class java/util/ArrayList
      28: dup
      29: aload_1
      30: invokevirtual #144                // Method nu/xom/Nodes.size:()I
      33: invokespecial #222                // Method java/util/ArrayList."<init>":(I)V
      36: astore        4
      38: new           #56                 // class java/util/ArrayList
      41: dup
      42: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      45: astore        5
      47: iconst_0
      48: istore        6
      50: iload         6
      52: aload_1
      53: invokevirtual #144                // Method nu/xom/Nodes.size:()I
      56: if_icmpge     101
      59: aload_1
      60: iload         6
      62: invokevirtual #151                // Method nu/xom/Nodes.get:(I)Lnu/xom/Node;
      65: astore        7
      67: aload         4
      69: aload         7
      71: invokeinterface #220,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload         7
      79: instanceof    #166                // class nu/xom/Namespace
      82: ifeq          95
      85: aload         5
      87: aload         7
      89: invokeinterface #220,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: iinc          6, 1
      98: goto          50
     101: aload         4
     103: aload         5
     105: aload_3
     106: aload_2
     107: checkcast     #123                // class nu/xom/ParentNode
     110: invokestatic  #225                // Method sort:(Ljava/util/List;Ljava/util/List;Lnu/xom/Nodes;Lnu/xom/ParentNode;)V
     113: aload         4
     115: invokeinterface #228,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     120: ifne          176
     123: aload         4
     125: invokeinterface #232,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     130: astore        6
     132: aload         6
     134: invokeinterface #237,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          176
     142: aload         6
     144: invokeinterface #241,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     149: checkcast     #109                // class nu/xom/Node
     152: astore        7
     154: aload_2
     155: aload         7
     157: invokevirtual #113                // Method nu/xom/Node.getDocument:()Lnu/xom/Document;
     160: if_acmpeq     173
     163: new           #87                 // class nu/xom/canonical/CanonicalizationException
     166: dup
     167: ldc           #243                // String Cannot canonicalize subsets that contain nodes from more than one document
     169: invokespecial #101                // Method nu/xom/canonical/CanonicalizationException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: goto          132
     176: aload_3
     177: areturn
     178: new           #140                // class nu/xom/Nodes
     181: dup
     182: aload_1
     183: iconst_0
     184: invokevirtual #151                // Method nu/xom/Nodes.get:(I)Lnu/xom/Node;
     187: invokespecial #245                // Method nu/xom/Nodes."<init>":(Lnu/xom/Node;)V
     190: areturn

  private static java.lang.String joinURIReferences(java.lang.String, java.lang.String);
    Code:
       0: ldc           #249                // String ..
       2: aload_0
       3: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          12
       9: ldc           #251                // String ../
      11: astore_0
      12: ldc           #249                // String ..
      14: aload_1
      15: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          24
      21: ldc           #251                // String ../
      23: astore_1
      24: aload_1
      25: ifnonnull     30
      28: aload_0
      29: areturn
      30: aload_0
      31: aload_1
      32: invokestatic  #256                // Method nu/xom/canonical/URIJoiner.absolutize:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      35: areturn

  private static void sort(java.util.List, java.util.List, nu.xom.Nodes, nu.xom.ParentNode);
    Code:
       0: aload_0
       1: invokeinterface #228,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          10
       9: return
      10: aload_0
      11: aload_3
      12: invokeinterface #257,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      17: ifeq          33
      20: aload_2
      21: aload_3
      22: invokevirtual #259                // Method nu/xom/Nodes.append:(Lnu/xom/Node;)V
      25: aload_0
      26: aload_3
      27: invokeinterface #261,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      32: pop
      33: aload_3
      34: invokevirtual #264                // Method nu/xom/ParentNode.getChildCount:()I
      37: istore        4
      39: iconst_0
      40: istore        5
      42: iload         5
      44: iload         4
      46: if_icmpge     292
      49: aload_3
      50: iload         5
      52: invokevirtual #267                // Method nu/xom/ParentNode.getChild:(I)Lnu/xom/Node;
      55: astore        6
      57: aload         6
      59: instanceof    #107                // class nu/xom/Element
      62: ifeq          250
      65: aload         6
      67: checkcast     #107                // class nu/xom/Element
      70: astore        7
      72: aload_0
      73: aload         7
      75: invokeinterface #257,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      80: ifeq          98
      83: aload_2
      84: aload         7
      86: invokevirtual #259                // Method nu/xom/Nodes.append:(Lnu/xom/Node;)V
      89: aload_0
      90: aload         7
      92: invokeinterface #261,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      97: pop
      98: aload_1
      99: invokeinterface #228,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     104: ifne          175
     107: aload_0
     108: invokeinterface #232,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore        8
     115: aload         8
     117: invokeinterface #237,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          175
     125: aload         8
     127: invokeinterface #241,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: astore        9
     134: aload         9
     136: instanceof    #166                // class nu/xom/Namespace
     139: ifeq          172
     142: aload         9
     144: checkcast     #166                // class nu/xom/Namespace
     147: astore        10
     149: aload         7
     151: aload         10
     153: invokevirtual #268                // Method nu/xom/Namespace.getParent:()Lnu/xom/ParentNode;
     156: if_acmpne     172
     159: aload_2
     160: aload         10
     162: invokevirtual #259                // Method nu/xom/Nodes.append:(Lnu/xom/Node;)V
     165: aload         8
     167: invokeinterface #270,  1          // InterfaceMethod java/util/Iterator.remove:()V
     172: goto          115
     175: iconst_0
     176: istore        8
     178: iload         8
     180: aload         7
     182: invokevirtual #273                // Method nu/xom/Element.getAttributeCount:()I
     185: if_icmpge     239
     188: aload         7
     190: iload         8
     192: invokevirtual #277                // Method nu/xom/Element.getAttribute:(I)Lnu/xom/Attribute;
     195: astore        9
     197: aload_0
     198: aload         9
     200: invokeinterface #257,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     205: ifeq          233
     208: aload_2
     209: aload         9
     211: invokevirtual #259                // Method nu/xom/Nodes.append:(Lnu/xom/Node;)V
     214: aload_0
     215: aload         9
     217: invokeinterface #261,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     222: pop
     223: aload_0
     224: invokeinterface #228,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     229: ifeq          233
     232: return
     233: iinc          8, 1
     236: goto          178
     239: aload_0
     240: aload_1
     241: aload_2
     242: aload         7
     244: invokestatic  #225                // Method sort:(Ljava/util/List;Ljava/util/List;Lnu/xom/Nodes;Lnu/xom/ParentNode;)V
     247: goto          286
     250: aload_0
     251: aload         6
     253: invokeinterface #257,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     258: ifeq          286
     261: aload_2
     262: aload         6
     264: invokevirtual #259                // Method nu/xom/Nodes.append:(Lnu/xom/Node;)V
     267: aload_0
     268: aload         6
     270: invokeinterface #261,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     275: pop
     276: aload_0
     277: invokeinterface #228,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     282: ifeq          286
     285: return
     286: iinc          5, 1
     289: goto          42
     292: return

  static boolean access$100(nu.xom.canonical.Canonicalizer);
    Code:
       0: aload_0
       1: getfield      #72                 // Field withComments:Z
       4: ireturn

  static boolean access$200(nu.xom.canonical.Canonicalizer);
    Code:
       0: aload_0
       1: getfield      #52                 // Field exclusive:Z
       4: ireturn

  static java.util.List access$300(nu.xom.canonical.Canonicalizer);
    Code:
       0: aload_0
       1: getfield      #59                 // Field inclusiveNamespacePrefixes:Ljava/util/List;
       4: areturn

  static boolean access$400(nu.xom.canonical.Canonicalizer);
    Code:
       0: aload_0
       1: getfield      #54                 // Field v11:Z
       4: ireturn

  static java.lang.String access$500(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #286                // Method joinURIReferences:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static java.util.Comparator access$600();
    Code:
       0: getstatic     #290                // Field comparator:Ljava/util/Comparator;
       3: areturn

  static {};
    Code:
       0: new           #11                 // class nu/xom/canonical/Canonicalizer$AttributeComparator
       3: dup
       4: aconst_null
       5: invokespecial #294                // Method nu/xom/canonical/Canonicalizer$AttributeComparator."<init>":(Lnu/xom/canonical/Canonicalizer$1;)V
       8: putstatic     #290                // Field comparator:Ljava/util/Comparator;
      11: return
}
