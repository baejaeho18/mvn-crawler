abstract class nu.xom.jaxen.expr.DefaultBinaryExpr extends nu.xom.jaxen.expr.DefaultExpr implements nu.xom.jaxen.expr.BinaryExpr {
  private nu.xom.jaxen.expr.Expr lhs;

  private nu.xom.jaxen.expr.Expr rhs;

  nu.xom.jaxen.expr.DefaultBinaryExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method nu/xom/jaxen/expr/DefaultExpr."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #16                 // Field lhs:Lnu/xom/jaxen/expr/Expr;
       9: aload_0
      10: aload_2
      11: putfield      #18                 // Field rhs:Lnu/xom/jaxen/expr/Expr;
      14: return

  public nu.xom.jaxen.expr.Expr getLHS();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lhs:Lnu/xom/jaxen/expr/Expr;
       4: areturn

  public nu.xom.jaxen.expr.Expr getRHS();
    Code:
       0: aload_0
       1: getfield      #18                 // Field rhs:Lnu/xom/jaxen/expr/Expr;
       4: areturn

  public void setLHS(nu.xom.jaxen.expr.Expr);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field lhs:Lnu/xom/jaxen/expr/Expr;
       5: return

  public void setRHS(nu.xom.jaxen.expr.Expr);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field rhs:Lnu/xom/jaxen/expr/Expr;
       5: return

  public abstract java.lang.String getOperator();

  public java.lang.String getText();
    Code:
       0: new           #29                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #32                 // String (
       9: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: invokevirtual #38                 // Method getLHS:()Lnu/xom/jaxen/expr/Expr;
      16: invokeinterface #42,  1           // InterfaceMethod nu/xom/jaxen/expr/Expr.getText:()Ljava/lang/String;
      21: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: ldc           #44                 // String
      26: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_0
      30: invokevirtual #46                 // Method getOperator:()Ljava/lang/String;
      33: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: ldc           #44                 // String
      38: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: aload_0
      42: invokevirtual #48                 // Method getRHS:()Lnu/xom/jaxen/expr/Expr;
      45: invokeinterface #42,  1           // InterfaceMethod nu/xom/jaxen/expr/Expr.getText:()Ljava/lang/String;
      50: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: ldc           #50                 // String )
      55: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: invokevirtual #53                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      61: areturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #55                 // String [
       9: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #66                 // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: ldc           #68                 // String :
      24: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: aload_0
      28: invokevirtual #38                 // Method getLHS:()Lnu/xom/jaxen/expr/Expr;
      31: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      34: ldc           #73                 // String ,
      36: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: aload_0
      40: invokevirtual #48                 // Method getRHS:()Lnu/xom/jaxen/expr/Expr;
      43: invokevirtual #71                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      46: ldc           #75                 // String ]
      48: invokevirtual #36                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      51: invokevirtual #53                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      54: areturn

  public nu.xom.jaxen.expr.Expr simplify();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #38                 // Method getLHS:()Lnu/xom/jaxen/expr/Expr;
       5: invokeinterface #78,  1           // InterfaceMethod nu/xom/jaxen/expr/Expr.simplify:()Lnu/xom/jaxen/expr/Expr;
      10: invokevirtual #80                 // Method setLHS:(Lnu/xom/jaxen/expr/Expr;)V
      13: aload_0
      14: aload_0
      15: invokevirtual #48                 // Method getRHS:()Lnu/xom/jaxen/expr/Expr;
      18: invokeinterface #78,  1           // InterfaceMethod nu/xom/jaxen/expr/Expr.simplify:()Lnu/xom/jaxen/expr/Expr;
      23: invokevirtual #82                 // Method setRHS:(Lnu/xom/jaxen/expr/Expr;)V
      26: aload_0
      27: areturn
}
