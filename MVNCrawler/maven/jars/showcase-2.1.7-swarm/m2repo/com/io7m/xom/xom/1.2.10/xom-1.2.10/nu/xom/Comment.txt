public class nu.xom.Comment extends nu.xom.Node {
  private java.lang.String data;

  public nu.xom.Comment(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method _setValue:(Ljava/lang/String;)V
       9: return

  public nu.xom.Comment(nu.xom.Comment);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method nu/xom/Node."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #17                 // Field data:Ljava/lang/String;
       9: putfield      #17                 // Field data:Ljava/lang/String;
      12: return

  private nu.xom.Comment();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method nu/xom/Node."<init>":()V
       4: return

  static nu.xom.Comment build(java.lang.String);
    Code:
       0: new           #2                  // class nu/xom/Comment
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: putfield      #17                 // Field data:Ljava/lang/String;
      13: aload_1
      14: areturn

  public final java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Ljava/lang/String;
       4: areturn

  public void setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method _setValue:(Ljava/lang/String;)V
       5: return

  private void _setValue(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: ldc           #25                 // String
       6: astore_1
       7: goto          94
      10: aload_1
      11: invokestatic  #30                 // Method nu/xom/Verifier.checkPCDATA:(Ljava/lang/String;)V
      14: aload_1
      15: ldc           #32                 // String --
      17: invokevirtual #38                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      20: iconst_m1
      21: if_icmpeq     41
      24: new           #40                 // class nu/xom/IllegalDataException
      27: dup
      28: ldc           #42                 // String Comment data contains a double hyphen (--).
      30: invokespecial #44                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      33: astore_2
      34: aload_2
      35: aload_1
      36: invokevirtual #47                 // Method nu/xom/IllegalDataException.setData:(Ljava/lang/String;)V
      39: aload_2
      40: athrow
      41: aload_1
      42: bipush        13
      44: invokevirtual #50                 // Method java/lang/String.indexOf:(I)I
      47: iconst_m1
      48: if_icmpeq     68
      51: new           #40                 // class nu/xom/IllegalDataException
      54: dup
      55: ldc           #52                 // String Comment data cannot contain carriage returns.
      57: invokespecial #44                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      60: astore_2
      61: aload_2
      62: aload_1
      63: invokevirtual #47                 // Method nu/xom/IllegalDataException.setData:(Ljava/lang/String;)V
      66: aload_2
      67: athrow
      68: aload_1
      69: ldc           #54                 // String -
      71: invokevirtual #58                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      74: ifeq          94
      77: new           #40                 // class nu/xom/IllegalDataException
      80: dup
      81: ldc           #60                 // String Comment data ends with a hyphen.
      83: invokespecial #44                 // Method nu/xom/IllegalDataException."<init>":(Ljava/lang/String;)V
      86: astore_2
      87: aload_2
      88: aload_1
      89: invokevirtual #47                 // Method nu/xom/IllegalDataException.setData:(Ljava/lang/String;)V
      92: aload_2
      93: athrow
      94: aload_0
      95: aload_1
      96: putfield      #17                 // Field data:Ljava/lang/String;
      99: return

  public final nu.xom.Node getChild(int);
    Code:
       0: new           #64                 // class java/lang/IndexOutOfBoundsException
       3: dup
       4: ldc           #66                 // String LeafNodes do not have children
       6: invokespecial #67                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       9: athrow

  public final int getChildCount();
    Code:
       0: iconst_0
       1: ireturn

  public nu.xom.Node copy();
    Code:
       0: new           #2                  // class nu/xom/Comment
       3: dup
       4: aload_0
       5: getfield      #17                 // Field data:Ljava/lang/String;
       8: invokespecial #72                 // Method "<init>":(Ljava/lang/String;)V
      11: areturn

  public final java.lang.String toXML();
    Code:
       0: new           #75                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #77                 // String <!--
       6: invokespecial #78                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #17                 // Field data:Ljava/lang/String;
      15: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: aload_1
      20: ldc           #84                 // String -->
      22: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: pop
      26: aload_1
      27: invokevirtual #87                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      30: areturn

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method getValue:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: invokevirtual #92                 // Method java/lang/String.length:()I
       9: bipush        40
      11: if_icmpgt     57
      14: new           #75                 // class java/lang/StringBuffer
      17: dup
      18: invokespecial #93                 // Method java/lang/StringBuffer."<init>":()V
      21: ldc           #95                 // String [
      23: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: aload_0
      27: invokevirtual #101                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #106                // Method java/lang/Class.getName:()Ljava/lang/String;
      33: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: ldc           #108                // String :
      38: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: aload_1
      42: invokestatic  #114                // Method nu/xom/Text.escapeLineBreaksAndTruncate:(Ljava/lang/String;)Ljava/lang/String;
      45: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: ldc           #116                // String ]
      50: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: invokevirtual #87                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      56: areturn
      57: new           #75                 // class java/lang/StringBuffer
      60: dup
      61: invokespecial #93                 // Method java/lang/StringBuffer."<init>":()V
      64: ldc           #95                 // String [
      66: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      69: aload_0
      70: invokevirtual #101                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      73: invokevirtual #106                // Method java/lang/Class.getName:()Ljava/lang/String;
      76: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      79: ldc           #108                // String :
      81: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: aload_1
      85: iconst_0
      86: bipush        35
      88: invokevirtual #120                // Method java/lang/String.substring:(II)Ljava/lang/String;
      91: invokestatic  #114                // Method nu/xom/Text.escapeLineBreaksAndTruncate:(Ljava/lang/String;)Ljava/lang/String;
      94: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      97: ldc           #122                // String ...]
      99: invokevirtual #82                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     102: invokevirtual #87                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     105: areturn

  boolean isComment();
    Code:
       0: iconst_1
       1: ireturn
}
