Compiled from "IMAPMessage.java"
public class com.sun.mail.imap.IMAPMessage extends javax.mail.internet.MimeMessage implements com.sun.mail.util.ReadableMime {
  protected com.sun.mail.imap.protocol.BODYSTRUCTURE bs;

  protected com.sun.mail.imap.protocol.ENVELOPE envelope;

  protected java.util.Map items;

  private java.util.Date receivedDate;

  private int size;

  private boolean peek;

  private long uid;

  protected java.lang.String sectionId;

  private java.lang.String type;

  private java.lang.String subject;

  private java.lang.String description;

  private volatile boolean headersLoaded;

  private java.util.Hashtable loadedHeaders;

  static final java.lang.String EnvelopeCmd;

  protected com.sun.mail.imap.IMAPMessage(com.sun.mail.imap.IMAPFolder, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method javax/mail/internet/MimeMessage."<init>":(Ljavax/mail/Folder;I)V
       6: aload_0
       7: iconst_m1
       8: putfield      #2                  // Field size:I
      11: aload_0
      12: ldc2_w        #8                  // long -1l
      15: putfield      #10                 // Field uid:J
      18: aload_0
      19: iconst_0
      20: putfield      #11                 // Field headersLoaded:Z
      23: aload_0
      24: new           #12                 // class java/util/Hashtable
      27: dup
      28: iconst_1
      29: invokespecial #13                 // Method java/util/Hashtable."<init>":(I)V
      32: putfield      #14                 // Field loadedHeaders:Ljava/util/Hashtable;
      35: aload_0
      36: aconst_null
      37: putfield      #15                 // Field flags:Ljavax/mail/Flags;
      40: return

  protected com.sun.mail.imap.IMAPMessage(javax.mail.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method javax/mail/internet/MimeMessage."<init>":(Ljavax/mail/Session;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field size:I
      10: aload_0
      11: ldc2_w        #8                  // long -1l
      14: putfield      #10                 // Field uid:J
      17: aload_0
      18: iconst_0
      19: putfield      #11                 // Field headersLoaded:Z
      22: aload_0
      23: new           #12                 // class java/util/Hashtable
      26: dup
      27: iconst_1
      28: invokespecial #13                 // Method java/util/Hashtable."<init>":(I)V
      31: putfield      #14                 // Field loadedHeaders:Ljava/util/Hashtable;
      34: return

  protected com.sun.mail.imap.protocol.IMAPProtocol getProtocol() throws com.sun.mail.iap.ProtocolException, javax.mail.FolderClosedException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field folder:Ljavax/mail/Folder;
       4: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
       7: invokevirtual #19                 // Method com/sun/mail/imap/IMAPFolder.waitIfIdle:()V
      10: aload_0
      11: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      14: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
      17: getfield      #20                 // Field com/sun/mail/imap/IMAPFolder.protocol:Lcom/sun/mail/imap/protocol/IMAPProtocol;
      20: astore_1
      21: aload_1
      22: ifnonnull     37
      25: new           #21                 // class javax/mail/FolderClosedException
      28: dup
      29: aload_0
      30: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      33: invokespecial #22                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;)V
      36: athrow
      37: aload_1
      38: areturn

  protected boolean isREV1() throws javax.mail.FolderClosedException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field folder:Ljavax/mail/Folder;
       4: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
       7: getfield      #20                 // Field com/sun/mail/imap/IMAPFolder.protocol:Lcom/sun/mail/imap/protocol/IMAPProtocol;
      10: astore_1
      11: aload_1
      12: ifnonnull     27
      15: new           #21                 // class javax/mail/FolderClosedException
      18: dup
      19: aload_0
      20: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      23: invokespecial #22                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;)V
      26: athrow
      27: aload_1
      28: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      31: ireturn

  protected java.lang.Object getMessageCacheLock();
    Code:
       0: aload_0
       1: getfield      #17                 // Field folder:Ljavax/mail/Folder;
       4: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
       7: getfield      #24                 // Field com/sun/mail/imap/IMAPFolder.messageCacheLock:Ljava/lang/Object;
      10: areturn

  protected int getSequenceNumber();
    Code:
       0: aload_0
       1: getfield      #17                 // Field folder:Ljavax/mail/Folder;
       4: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
       7: getfield      #25                 // Field com/sun/mail/imap/IMAPFolder.messageCache:Lcom/sun/mail/imap/MessageCache;
      10: aload_0
      11: invokevirtual #26                 // Method getMessageNumber:()I
      14: invokevirtual #27                 // Method com/sun/mail/imap/MessageCache.seqnumOf:(I)I
      17: ireturn

  protected void setMessageNumber(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #28                 // Method javax/mail/internet/MimeMessage.setMessageNumber:(I)V
       5: return

  protected long getUID();
    Code:
       0: aload_0
       1: getfield      #10                 // Field uid:J
       4: lreturn

  protected void setUID(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field uid:J
       5: return

  protected void setExpunged(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #29                 // Method javax/mail/internet/MimeMessage.setExpunged:(Z)V
       5: return

  protected void checkExpunged() throws javax.mail.MessageRemovedException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field expunged:Z
       4: ifeq          15
       7: new           #31                 // class javax/mail/MessageRemovedException
      10: dup
      11: invokespecial #32                 // Method javax/mail/MessageRemovedException."<init>":()V
      14: athrow
      15: return

  protected void forceCheckExpunged() throws javax.mail.MessageRemovedException, javax.mail.FolderClosedException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      11: invokevirtual #35                 // Method com/sun/mail/imap/protocol/IMAPProtocol.noop:()V
      14: goto          35
      17: astore_2
      18: new           #21                 // class javax/mail/FolderClosedException
      21: dup
      22: aload_0
      23: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      26: aload_2
      27: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
      30: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
      33: athrow
      34: astore_2
      35: aload_1
      36: monitorexit
      37: goto          45
      40: astore_3
      41: aload_1
      42: monitorexit
      43: aload_3
      44: athrow
      45: aload_0
      46: getfield      #30                 // Field expunged:Z
      49: ifeq          60
      52: new           #31                 // class javax/mail/MessageRemovedException
      55: dup
      56: invokespecial #32                 // Method javax/mail/MessageRemovedException."<init>":()V
      59: athrow
      60: return
    Exception table:
       from    to  target type
           7    14    17   Class com/sun/mail/iap/ConnectionException
           7    14    34   Class com/sun/mail/iap/ProtocolException
           7    37    40   any
          40    43    40   any

  protected int getFetchBlockSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field folder:Ljavax/mail/Folder;
       4: invokevirtual #40                 // Method javax/mail/Folder.getStore:()Ljavax/mail/Store;
       7: checkcast     #41                 // class com/sun/mail/imap/IMAPStore
      10: invokevirtual #42                 // Method com/sun/mail/imap/IMAPStore.getFetchBlockSize:()I
      13: ireturn

  protected boolean ignoreBodyStructureSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field folder:Ljavax/mail/Folder;
       4: invokevirtual #40                 // Method javax/mail/Folder.getStore:()Ljavax/mail/Store;
       7: checkcast     #41                 // class com/sun/mail/imap/IMAPStore
      10: invokevirtual #43                 // Method com/sun/mail/imap/IMAPStore.ignoreBodyStructureSize:()Z
      13: ireturn

  public javax.mail.Address[] getFrom() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      12: getfield      #47                 // Field com/sun/mail/imap/protocol/ENVELOPE.from:[Ljavax/mail/internet/InternetAddress;
      15: astore_1
      16: aload_1
      17: ifnull        25
      20: aload_1
      21: arraylength
      22: ifne          33
      25: aload_0
      26: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      29: getfield      #48                 // Field com/sun/mail/imap/protocol/ENVELOPE.sender:[Ljavax/mail/internet/InternetAddress;
      32: astore_1
      33: aload_0
      34: aload_1
      35: invokespecial #49                 // Method aaclone:([Ljavax/mail/internet/InternetAddress;)[Ljavax/mail/internet/InternetAddress;
      38: areturn

  public void setFrom(javax.mail.Address) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void addFrom(javax.mail.Address[]) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.mail.Address getSender() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      12: getfield      #48                 // Field com/sun/mail/imap/protocol/ENVELOPE.sender:[Ljavax/mail/internet/InternetAddress;
      15: ifnull        28
      18: aload_0
      19: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      22: getfield      #48                 // Field com/sun/mail/imap/protocol/ENVELOPE.sender:[Ljavax/mail/internet/InternetAddress;
      25: iconst_0
      26: aaload
      27: areturn
      28: aconst_null
      29: areturn

  public void setSender(javax.mail.Address) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_1
       9: getstatic     #53                 // Field javax/mail/Message$RecipientType.TO:Ljavax/mail/Message$RecipientType;
      12: if_acmpne     27
      15: aload_0
      16: aload_0
      17: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      20: getfield      #54                 // Field com/sun/mail/imap/protocol/ENVELOPE.to:[Ljavax/mail/internet/InternetAddress;
      23: invokespecial #49                 // Method aaclone:([Ljavax/mail/internet/InternetAddress;)[Ljavax/mail/internet/InternetAddress;
      26: areturn
      27: aload_1
      28: getstatic     #55                 // Field javax/mail/Message$RecipientType.CC:Ljavax/mail/Message$RecipientType;
      31: if_acmpne     46
      34: aload_0
      35: aload_0
      36: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      39: getfield      #56                 // Field com/sun/mail/imap/protocol/ENVELOPE.cc:[Ljavax/mail/internet/InternetAddress;
      42: invokespecial #49                 // Method aaclone:([Ljavax/mail/internet/InternetAddress;)[Ljavax/mail/internet/InternetAddress;
      45: areturn
      46: aload_1
      47: getstatic     #57                 // Field javax/mail/Message$RecipientType.BCC:Ljavax/mail/Message$RecipientType;
      50: if_acmpne     65
      53: aload_0
      54: aload_0
      55: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      58: getfield      #58                 // Field com/sun/mail/imap/protocol/ENVELOPE.bcc:[Ljavax/mail/internet/InternetAddress;
      61: invokespecial #49                 // Method aaclone:([Ljavax/mail/internet/InternetAddress;)[Ljavax/mail/internet/InternetAddress;
      64: areturn
      65: aload_0
      66: aload_1
      67: invokespecial #59                 // Method javax/mail/internet/MimeMessage.getRecipients:(Ljavax/mail/Message$RecipientType;)[Ljavax/mail/Address;
      70: areturn

  public void setRecipients(javax.mail.Message$RecipientType, javax.mail.Address[]) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void addRecipients(javax.mail.Message$RecipientType, javax.mail.Address[]) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.mail.Address[] getReplyTo() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      12: getfield      #60                 // Field com/sun/mail/imap/protocol/ENVELOPE.replyTo:[Ljavax/mail/internet/InternetAddress;
      15: ifnull        29
      18: aload_0
      19: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      22: getfield      #60                 // Field com/sun/mail/imap/protocol/ENVELOPE.replyTo:[Ljavax/mail/internet/InternetAddress;
      25: arraylength
      26: ifne          34
      29: aload_0
      30: invokevirtual #61                 // Method getFrom:()[Ljavax/mail/Address;
      33: areturn
      34: aload_0
      35: aload_0
      36: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      39: getfield      #60                 // Field com/sun/mail/imap/protocol/ENVELOPE.replyTo:[Ljavax/mail/internet/InternetAddress;
      42: invokespecial #49                 // Method aaclone:([Ljavax/mail/internet/InternetAddress;)[Ljavax/mail/internet/InternetAddress;
      45: areturn

  public void setReplyTo(javax.mail.Address[]) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getSubject() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: getfield      #62                 // Field subject:Ljava/lang/String;
       8: ifnull        16
      11: aload_0
      12: getfield      #62                 // Field subject:Ljava/lang/String;
      15: areturn
      16: aload_0
      17: invokespecial #45                 // Method loadEnvelope:()V
      20: aload_0
      21: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      24: getfield      #63                 // Field com/sun/mail/imap/protocol/ENVELOPE.subject:Ljava/lang/String;
      27: ifnonnull     32
      30: aconst_null
      31: areturn
      32: aload_0
      33: aload_0
      34: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      37: getfield      #63                 // Field com/sun/mail/imap/protocol/ENVELOPE.subject:Ljava/lang/String;
      40: invokestatic  #64                 // Method javax/mail/internet/MimeUtility.unfold:(Ljava/lang/String;)Ljava/lang/String;
      43: invokestatic  #65                 // Method javax/mail/internet/MimeUtility.decodeText:(Ljava/lang/String;)Ljava/lang/String;
      46: putfield      #62                 // Field subject:Ljava/lang/String;
      49: goto          64
      52: astore_1
      53: aload_0
      54: aload_0
      55: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      58: getfield      #63                 // Field com/sun/mail/imap/protocol/ENVELOPE.subject:Ljava/lang/String;
      61: putfield      #62                 // Field subject:Ljava/lang/String;
      64: aload_0
      65: getfield      #62                 // Field subject:Ljava/lang/String;
      68: areturn
    Exception table:
       from    to  target type
          32    49    52   Class java/io/UnsupportedEncodingException

  public void setSubject(java.lang.String, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Date getSentDate() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      12: getfield      #67                 // Field com/sun/mail/imap/protocol/ENVELOPE.date:Ljava/util/Date;
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: new           #68                 // class java/util/Date
      23: dup
      24: aload_0
      25: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      28: getfield      #67                 // Field com/sun/mail/imap/protocol/ENVELOPE.date:Ljava/util/Date;
      31: invokevirtual #69                 // Method java/util/Date.getTime:()J
      34: invokespecial #70                 // Method java/util/Date."<init>":(J)V
      37: areturn

  public void setSentDate(java.util.Date) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Date getReceivedDate() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #71                 // Field receivedDate:Ljava/util/Date;
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: new           #68                 // class java/util/Date
      20: dup
      21: aload_0
      22: getfield      #71                 // Field receivedDate:Ljava/util/Date;
      25: invokevirtual #69                 // Method java/util/Date.getTime:()J
      28: invokespecial #70                 // Method java/util/Date."<init>":(J)V
      31: areturn

  public int getSize() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: getfield      #2                  // Field size:I
       8: iconst_m1
       9: if_icmpne     16
      12: aload_0
      13: invokespecial #45                 // Method loadEnvelope:()V
      16: aload_0
      17: getfield      #2                  // Field size:I
      20: ireturn

  public int getLineCount() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
       8: aload_0
       9: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      12: getfield      #74                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.lines:I
      15: ireturn

  public java.lang.String[] getContentLanguage() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
       8: aload_0
       9: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      12: getfield      #75                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.language:[Ljava/lang/String;
      15: ifnull        35
      18: aload_0
      19: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      22: getfield      #75                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.language:[Ljava/lang/String;
      25: invokevirtual #76                 // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
      28: checkcast     #77                 // class "[Ljava/lang/String;"
      31: checkcast     #77                 // class "[Ljava/lang/String;"
      34: areturn
      35: aconst_null
      36: areturn

  public void setContentLanguage(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getInReplyTo() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      12: getfield      #78                 // Field com/sun/mail/imap/protocol/ENVELOPE.inReplyTo:Ljava/lang/String;
      15: areturn

  public synchronized java.lang.String getContentType() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: getfield      #79                 // Field type:Ljava/lang/String;
       8: ifnonnull     52
      11: aload_0
      12: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
      15: new           #80                 // class javax/mail/internet/ContentType
      18: dup
      19: aload_0
      20: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      23: getfield      #81                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.type:Ljava/lang/String;
      26: aload_0
      27: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      30: getfield      #82                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.subtype:Ljava/lang/String;
      33: aload_0
      34: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      37: getfield      #83                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.cParams:Ljavax/mail/internet/ParameterList;
      40: invokespecial #84                 // Method javax/mail/internet/ContentType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljavax/mail/internet/ParameterList;)V
      43: astore_1
      44: aload_0
      45: aload_1
      46: invokevirtual #85                 // Method javax/mail/internet/ContentType.toString:()Ljava/lang/String;
      49: putfield      #79                 // Field type:Ljava/lang/String;
      52: aload_0
      53: getfield      #79                 // Field type:Ljava/lang/String;
      56: areturn

  public java.lang.String getDisposition() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
       8: aload_0
       9: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      12: getfield      #86                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.disposition:Ljava/lang/String;
      15: areturn

  public void setDisposition(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getEncoding() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
       8: aload_0
       9: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      12: getfield      #87                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.encoding:Ljava/lang/String;
      15: areturn

  public java.lang.String getContentID() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
       8: aload_0
       9: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      12: getfield      #88                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.id:Ljava/lang/String;
      15: areturn

  public void setContentID(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getContentMD5() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
       8: aload_0
       9: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      12: getfield      #89                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.md5:Ljava/lang/String;
      15: areturn

  public void setContentMD5(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getDescription() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: getfield      #90                 // Field description:Ljava/lang/String;
       8: ifnull        16
      11: aload_0
      12: getfield      #90                 // Field description:Ljava/lang/String;
      15: areturn
      16: aload_0
      17: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
      20: aload_0
      21: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      24: getfield      #91                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.description:Ljava/lang/String;
      27: ifnonnull     32
      30: aconst_null
      31: areturn
      32: aload_0
      33: aload_0
      34: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      37: getfield      #91                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.description:Ljava/lang/String;
      40: invokestatic  #65                 // Method javax/mail/internet/MimeUtility.decodeText:(Ljava/lang/String;)Ljava/lang/String;
      43: putfield      #90                 // Field description:Ljava/lang/String;
      46: goto          61
      49: astore_1
      50: aload_0
      51: aload_0
      52: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      55: getfield      #91                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.description:Ljava/lang/String;
      58: putfield      #90                 // Field description:Ljava/lang/String;
      61: aload_0
      62: getfield      #90                 // Field description:Ljava/lang/String;
      65: areturn
    Exception table:
       from    to  target type
          32    46    49   Class java/io/UnsupportedEncodingException

  public void setDescription(java.lang.String, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getMessageID() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #45                 // Method loadEnvelope:()V
       8: aload_0
       9: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      12: getfield      #92                 // Field com/sun/mail/imap/protocol/ENVELOPE.messageId:Ljava/lang/String;
      15: areturn

  public java.lang.String getFileName() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aconst_null
       5: astore_1
       6: aload_0
       7: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
      10: aload_0
      11: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      14: getfield      #93                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.dParams:Ljavax/mail/internet/ParameterList;
      17: ifnull        33
      20: aload_0
      21: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      24: getfield      #93                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.dParams:Ljavax/mail/internet/ParameterList;
      27: ldc           #94                 // String filename
      29: invokevirtual #95                 // Method javax/mail/internet/ParameterList.get:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_1
      33: aload_1
      34: ifnonnull     60
      37: aload_0
      38: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      41: getfield      #83                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.cParams:Ljavax/mail/internet/ParameterList;
      44: ifnull        60
      47: aload_0
      48: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      51: getfield      #83                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.cParams:Ljavax/mail/internet/ParameterList;
      54: ldc           #96                 // String name
      56: invokevirtual #95                 // Method javax/mail/internet/ParameterList.get:(Ljava/lang/String;)Ljava/lang/String;
      59: astore_1
      60: aload_1
      61: areturn

  public void setFileName(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected java.io.InputStream getContentStream() throws javax.mail.MessagingException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #97                 // Method getPeek:()Z
       6: istore_2
       7: aload_0
       8: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_0
      15: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      18: astore        4
      20: aload_0
      21: invokevirtual #44                 // Method checkExpunged:()V
      24: aload         4
      26: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      29: ifeq          83
      32: aload_0
      33: invokevirtual #98                 // Method getFetchBlockSize:()I
      36: iconst_m1
      37: if_icmpeq     83
      40: new           #99                 // class com/sun/mail/imap/IMAPInputStream
      43: dup
      44: aload_0
      45: aload_0
      46: ldc           #100                // String TEXT
      48: invokespecial #101                // Method toSection:(Ljava/lang/String;)Ljava/lang/String;
      51: aload_0
      52: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      55: ifnull        75
      58: aload_0
      59: invokevirtual #102                // Method ignoreBodyStructureSize:()Z
      62: ifne          75
      65: aload_0
      66: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      69: getfield      #103                // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.size:I
      72: goto          76
      75: iconst_m1
      76: iload_2
      77: invokespecial #104                // Method com/sun/mail/imap/IMAPInputStream."<init>":(Lcom/sun/mail/imap/IMAPMessage;Ljava/lang/String;IZ)V
      80: aload_3
      81: monitorexit
      82: areturn
      83: aload         4
      85: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      88: ifeq          146
      91: iload_2
      92: ifeq          115
      95: aload         4
      97: aload_0
      98: invokevirtual #105                // Method getSequenceNumber:()I
     101: aload_0
     102: ldc           #100                // String TEXT
     104: invokespecial #101                // Method toSection:(Ljava/lang/String;)Ljava/lang/String;
     107: invokevirtual #106                // Method com/sun/mail/imap/protocol/IMAPProtocol.peekBody:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/BODY;
     110: astore        5
     112: goto          132
     115: aload         4
     117: aload_0
     118: invokevirtual #105                // Method getSequenceNumber:()I
     121: aload_0
     122: ldc           #100                // String TEXT
     124: invokespecial #101                // Method toSection:(Ljava/lang/String;)Ljava/lang/String;
     127: invokevirtual #107                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchBody:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/BODY;
     130: astore        5
     132: aload         5
     134: ifnull        143
     137: aload         5
     139: invokevirtual #108                // Method com/sun/mail/imap/protocol/BODY.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     142: astore_1
     143: goto          170
     146: aload         4
     148: aload_0
     149: invokevirtual #105                // Method getSequenceNumber:()I
     152: ldc           #100                // String TEXT
     154: invokevirtual #109                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchRFC822:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/RFC822DATA;
     157: astore        5
     159: aload         5
     161: ifnull        170
     164: aload         5
     166: invokevirtual #110                // Method com/sun/mail/imap/protocol/RFC822DATA.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     169: astore_1
     170: goto          213
     173: astore        4
     175: new           #21                 // class javax/mail/FolderClosedException
     178: dup
     179: aload_0
     180: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     183: aload         4
     185: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
     188: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
     191: athrow
     192: astore        4
     194: aload_0
     195: invokevirtual #111                // Method forceCheckExpunged:()V
     198: new           #112                // class javax/mail/MessagingException
     201: dup
     202: aload         4
     204: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     207: aload         4
     209: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     212: athrow
     213: aload_3
     214: monitorexit
     215: goto          225
     218: astore        6
     220: aload_3
     221: monitorexit
     222: aload         6
     224: athrow
     225: aload_1
     226: ifnonnull     239
     229: new           #112                // class javax/mail/MessagingException
     232: dup
     233: ldc           #115                // String No content
     235: invokespecial #116                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;)V
     238: athrow
     239: aload_1
     240: areturn
    Exception table:
       from    to  target type
          14    80   173   Class com/sun/mail/iap/ConnectionException
          83   170   173   Class com/sun/mail/iap/ConnectionException
          14    80   192   Class com/sun/mail/iap/ProtocolException
          83   170   192   Class com/sun/mail/iap/ProtocolException
          14    82   218   any
          83   215   218   any
         218   222   218   any

  public synchronized javax.activation.DataHandler getDataHandler() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: getfield      #117                // Field dh:Ljavax/activation/DataHandler;
       8: ifnonnull     203
      11: aload_0
      12: invokespecial #72                 // Method loadBODYSTRUCTURE:()V
      15: aload_0
      16: getfield      #79                 // Field type:Ljava/lang/String;
      19: ifnonnull     59
      22: new           #80                 // class javax/mail/internet/ContentType
      25: dup
      26: aload_0
      27: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      30: getfield      #81                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.type:Ljava/lang/String;
      33: aload_0
      34: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      37: getfield      #82                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.subtype:Ljava/lang/String;
      40: aload_0
      41: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      44: getfield      #83                 // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.cParams:Ljavax/mail/internet/ParameterList;
      47: invokespecial #84                 // Method javax/mail/internet/ContentType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljavax/mail/internet/ParameterList;)V
      50: astore_1
      51: aload_0
      52: aload_1
      53: invokevirtual #85                 // Method javax/mail/internet/ContentType.toString:()Ljava/lang/String;
      56: putfield      #79                 // Field type:Ljava/lang/String;
      59: aload_0
      60: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      63: invokevirtual #118                // Method com/sun/mail/imap/protocol/BODYSTRUCTURE.isMulti:()Z
      66: ifeq          103
      69: aload_0
      70: new           #119                // class javax/activation/DataHandler
      73: dup
      74: new           #120                // class com/sun/mail/imap/IMAPMultipartDataSource
      77: dup
      78: aload_0
      79: aload_0
      80: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      83: getfield      #121                // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.bodies:[Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      86: aload_0
      87: getfield      #122                // Field sectionId:Ljava/lang/String;
      90: aload_0
      91: invokespecial #123                // Method com/sun/mail/imap/IMAPMultipartDataSource."<init>":(Ljavax/mail/internet/MimePart;[Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;Ljava/lang/String;Lcom/sun/mail/imap/IMAPMessage;)V
      94: invokespecial #124                // Method javax/activation/DataHandler."<init>":(Ljavax/activation/DataSource;)V
      97: putfield      #117                // Field dh:Ljavax/activation/DataHandler;
     100: goto          203
     103: aload_0
     104: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
     107: invokevirtual #125                // Method com/sun/mail/imap/protocol/BODYSTRUCTURE.isNested:()Z
     110: ifeq          203
     113: aload_0
     114: invokevirtual #126                // Method isREV1:()Z
     117: ifeq          203
     120: aload_0
     121: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
     124: getfield      #127                // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
     127: ifnull        203
     130: aload_0
     131: new           #119                // class javax/activation/DataHandler
     134: dup
     135: new           #128                // class com/sun/mail/imap/IMAPNestedMessage
     138: dup
     139: aload_0
     140: aload_0
     141: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
     144: getfield      #121                // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.bodies:[Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
     147: iconst_0
     148: aaload
     149: aload_0
     150: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
     153: getfield      #127                // Field com/sun/mail/imap/protocol/BODYSTRUCTURE.envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
     156: aload_0
     157: getfield      #122                // Field sectionId:Ljava/lang/String;
     160: ifnonnull     168
     163: ldc           #129                // String 1
     165: goto          190
     168: new           #130                // class java/lang/StringBuilder
     171: dup
     172: invokespecial #131                // Method java/lang/StringBuilder."<init>":()V
     175: aload_0
     176: getfield      #122                // Field sectionId:Ljava/lang/String;
     179: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: ldc           #133                // String .1
     184: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokespecial #135                // Method com/sun/mail/imap/IMAPNestedMessage."<init>":(Lcom/sun/mail/imap/IMAPMessage;Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;Lcom/sun/mail/imap/protocol/ENVELOPE;Ljava/lang/String;)V
     193: aload_0
     194: getfield      #79                 // Field type:Ljava/lang/String;
     197: invokespecial #136                // Method javax/activation/DataHandler."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
     200: putfield      #117                // Field dh:Ljavax/activation/DataHandler;
     203: aload_0
     204: invokespecial #137                // Method javax/mail/internet/MimeMessage.getDataHandler:()Ljavax/activation/DataHandler;
     207: areturn

  public void setDataHandler(javax.activation.DataHandler) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.io.InputStream getMimeStream() throws javax.mail.MessagingException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #97                 // Method getPeek:()Z
       6: istore_2
       7: aload_0
       8: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_0
      15: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      18: astore        4
      20: aload_0
      21: invokevirtual #44                 // Method checkExpunged:()V
      24: aload         4
      26: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      29: ifeq          57
      32: aload_0
      33: invokevirtual #98                 // Method getFetchBlockSize:()I
      36: iconst_m1
      37: if_icmpeq     57
      40: new           #99                 // class com/sun/mail/imap/IMAPInputStream
      43: dup
      44: aload_0
      45: aload_0
      46: getfield      #122                // Field sectionId:Ljava/lang/String;
      49: iconst_m1
      50: iload_2
      51: invokespecial #104                // Method com/sun/mail/imap/IMAPInputStream."<init>":(Lcom/sun/mail/imap/IMAPMessage;Ljava/lang/String;IZ)V
      54: aload_3
      55: monitorexit
      56: areturn
      57: aload         4
      59: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      62: ifeq          116
      65: iload_2
      66: ifeq          87
      69: aload         4
      71: aload_0
      72: invokevirtual #105                // Method getSequenceNumber:()I
      75: aload_0
      76: getfield      #122                // Field sectionId:Ljava/lang/String;
      79: invokevirtual #106                // Method com/sun/mail/imap/protocol/IMAPProtocol.peekBody:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/BODY;
      82: astore        5
      84: goto          102
      87: aload         4
      89: aload_0
      90: invokevirtual #105                // Method getSequenceNumber:()I
      93: aload_0
      94: getfield      #122                // Field sectionId:Ljava/lang/String;
      97: invokevirtual #107                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchBody:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/BODY;
     100: astore        5
     102: aload         5
     104: ifnull        113
     107: aload         5
     109: invokevirtual #108                // Method com/sun/mail/imap/protocol/BODY.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     112: astore_1
     113: goto          139
     116: aload         4
     118: aload_0
     119: invokevirtual #105                // Method getSequenceNumber:()I
     122: aconst_null
     123: invokevirtual #109                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchRFC822:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/RFC822DATA;
     126: astore        5
     128: aload         5
     130: ifnull        139
     133: aload         5
     135: invokevirtual #110                // Method com/sun/mail/imap/protocol/RFC822DATA.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     138: astore_1
     139: goto          182
     142: astore        4
     144: new           #21                 // class javax/mail/FolderClosedException
     147: dup
     148: aload_0
     149: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     152: aload         4
     154: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
     157: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
     160: athrow
     161: astore        4
     163: aload_0
     164: invokevirtual #111                // Method forceCheckExpunged:()V
     167: new           #112                // class javax/mail/MessagingException
     170: dup
     171: aload         4
     173: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     176: aload         4
     178: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     181: athrow
     182: aload_3
     183: monitorexit
     184: goto          194
     187: astore        6
     189: aload_3
     190: monitorexit
     191: aload         6
     193: athrow
     194: aload_1
     195: ifnonnull     212
     198: aload_0
     199: invokevirtual #111                // Method forceCheckExpunged:()V
     202: new           #112                // class javax/mail/MessagingException
     205: dup
     206: ldc           #115                // String No content
     208: invokespecial #116                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;)V
     211: athrow
     212: aload_1
     213: areturn
    Exception table:
       from    to  target type
          14    54   142   Class com/sun/mail/iap/ConnectionException
          57   139   142   Class com/sun/mail/iap/ConnectionException
          14    54   161   Class com/sun/mail/iap/ProtocolException
          57   139   161   Class com/sun/mail/iap/ProtocolException
          14    56   187   any
          57   184   187   any
         187   191   187   any

  public void writeTo(java.io.OutputStream) throws java.io.IOException, javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #138                // Method getMimeStream:()Ljava/io/InputStream;
       4: astore_2
       5: sipush        16384
       8: newarray       byte
      10: astore_3
      11: aload_2
      12: aload_3
      13: invokevirtual #139                // Method java/io/InputStream.read:([B)I
      16: dup
      17: istore        4
      19: iconst_m1
      20: if_icmpeq     34
      23: aload_1
      24: aload_3
      25: iconst_0
      26: iload         4
      28: invokevirtual #140                // Method java/io/OutputStream.write:([BII)V
      31: goto          11
      34: aload_2
      35: invokevirtual #141                // Method java/io/InputStream.close:()V
      38: goto          50
      41: astore        5
      43: aload_2
      44: invokevirtual #141                // Method java/io/InputStream.close:()V
      47: aload         5
      49: athrow
      50: return
    Exception table:
       from    to  target type
           5    34    41   any
          41    43    41   any

  public java.lang.String[] getHeader(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: aload_1
       6: invokespecial #1                  // Method isHeaderLoaded:(Ljava/lang/String;)Z
       9: ifeq          21
      12: aload_0
      13: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
      16: aload_1
      17: invokevirtual #143                // Method javax/mail/internet/InternetHeaders.getHeader:(Ljava/lang/String;)[Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: astore_2
      23: aload_0
      24: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      27: dup
      28: astore_3
      29: monitorenter
      30: aload_0
      31: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      34: astore        4
      36: aload_0
      37: invokevirtual #44                 // Method checkExpunged:()V
      40: aload         4
      42: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      45: ifeq          101
      48: aload         4
      50: aload_0
      51: invokevirtual #105                // Method getSequenceNumber:()I
      54: aload_0
      55: new           #130                // class java/lang/StringBuilder
      58: dup
      59: invokespecial #131                // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #144                // String HEADER.FIELDS (
      64: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_1
      68: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #145                // String )
      73: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #101                // Method toSection:(Ljava/lang/String;)Ljava/lang/String;
      82: invokevirtual #106                // Method com/sun/mail/imap/protocol/IMAPProtocol.peekBody:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/BODY;
      85: astore        5
      87: aload         5
      89: ifnull        98
      92: aload         5
      94: invokevirtual #108                // Method com/sun/mail/imap/protocol/BODY.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
      97: astore_2
      98: goto          147
     101: aload         4
     103: aload_0
     104: invokevirtual #105                // Method getSequenceNumber:()I
     107: new           #130                // class java/lang/StringBuilder
     110: dup
     111: invokespecial #131                // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #146                // String HEADER.LINES (
     116: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_1
     120: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: ldc           #145                // String )
     125: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokevirtual #109                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchRFC822:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/RFC822DATA;
     134: astore        5
     136: aload         5
     138: ifnull        147
     141: aload         5
     143: invokevirtual #110                // Method com/sun/mail/imap/protocol/RFC822DATA.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     146: astore_2
     147: goto          190
     150: astore        4
     152: new           #21                 // class javax/mail/FolderClosedException
     155: dup
     156: aload_0
     157: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     160: aload         4
     162: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
     165: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
     168: athrow
     169: astore        4
     171: aload_0
     172: invokevirtual #111                // Method forceCheckExpunged:()V
     175: new           #112                // class javax/mail/MessagingException
     178: dup
     179: aload         4
     181: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     184: aload         4
     186: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     189: athrow
     190: aload_3
     191: monitorexit
     192: goto          202
     195: astore        6
     197: aload_3
     198: monitorexit
     199: aload         6
     201: athrow
     202: aload_2
     203: ifnonnull     208
     206: aconst_null
     207: areturn
     208: aload_0
     209: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     212: ifnonnull     226
     215: aload_0
     216: new           #147                // class javax/mail/internet/InternetHeaders
     219: dup
     220: invokespecial #148                // Method javax/mail/internet/InternetHeaders."<init>":()V
     223: putfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     226: aload_0
     227: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     230: aload_2
     231: invokevirtual #149                // Method javax/mail/internet/InternetHeaders.load:(Ljava/io/InputStream;)V
     234: aload_0
     235: aload_1
     236: invokespecial #150                // Method setHeaderLoaded:(Ljava/lang/String;)V
     239: aload_0
     240: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     243: aload_1
     244: invokevirtual #143                // Method javax/mail/internet/InternetHeaders.getHeader:(Ljava/lang/String;)[Ljava/lang/String;
     247: areturn
    Exception table:
       from    to  target type
          30   147   150   Class com/sun/mail/iap/ConnectionException
          30   147   169   Class com/sun/mail/iap/ProtocolException
          30   192   195   any
         195   199   195   any

  public java.lang.String getHeader(java.lang.String, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #151                // Method getHeader:(Ljava/lang/String;)[Ljava/lang/String;
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
      18: aload_1
      19: aload_2
      20: invokevirtual #152                // Method javax/mail/internet/InternetHeaders.getHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      23: areturn

  public void setHeader(java.lang.String, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void addHeader(java.lang.String, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void removeHeader(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Enumeration getAllHeaders() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #153                // Method loadHeaders:()V
       8: aload_0
       9: invokespecial #154                // Method javax/mail/internet/MimeMessage.getAllHeaders:()Ljava/util/Enumeration;
      12: areturn

  public java.util.Enumeration getMatchingHeaders(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #153                // Method loadHeaders:()V
       8: aload_0
       9: aload_1
      10: invokespecial #155                // Method javax/mail/internet/MimeMessage.getMatchingHeaders:([Ljava/lang/String;)Ljava/util/Enumeration;
      13: areturn

  public java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #153                // Method loadHeaders:()V
       8: aload_0
       9: aload_1
      10: invokespecial #156                // Method javax/mail/internet/MimeMessage.getNonMatchingHeaders:([Ljava/lang/String;)Ljava/util/Enumeration;
      13: areturn

  public void addHeaderLine(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: new           #50                 // class javax/mail/IllegalWriteException
       3: dup
       4: ldc           #51                 // String IMAPMessage is read-only
       6: invokespecial #52                 // Method javax/mail/IllegalWriteException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Enumeration getAllHeaderLines() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #153                // Method loadHeaders:()V
       8: aload_0
       9: invokespecial #157                // Method javax/mail/internet/MimeMessage.getAllHeaderLines:()Ljava/util/Enumeration;
      12: areturn

  public java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #153                // Method loadHeaders:()V
       8: aload_0
       9: aload_1
      10: invokespecial #158                // Method javax/mail/internet/MimeMessage.getMatchingHeaderLines:([Ljava/lang/String;)Ljava/util/Enumeration;
      13: areturn

  public java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #153                // Method loadHeaders:()V
       8: aload_0
       9: aload_1
      10: invokespecial #159                // Method javax/mail/internet/MimeMessage.getNonMatchingHeaderLines:([Ljava/lang/String;)Ljava/util/Enumeration;
      13: areturn

  public synchronized javax.mail.Flags getFlags() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #160                // Method loadFlags:()V
       8: aload_0
       9: invokespecial #161                // Method javax/mail/internet/MimeMessage.getFlags:()Ljavax/mail/Flags;
      12: areturn

  public synchronized boolean isSet(javax.mail.Flags$Flag) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method checkExpunged:()V
       4: aload_0
       5: invokespecial #160                // Method loadFlags:()V
       8: aload_0
       9: aload_1
      10: invokespecial #162                // Method javax/mail/internet/MimeMessage.isSet:(Ljavax/mail/Flags$Flag;)Z
      13: ireturn

  public synchronized void setFlags(javax.mail.Flags, boolean) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      11: astore        4
      13: aload_0
      14: invokevirtual #44                 // Method checkExpunged:()V
      17: aload         4
      19: aload_0
      20: invokevirtual #105                // Method getSequenceNumber:()I
      23: aload_1
      24: iload_2
      25: invokevirtual #163                // Method com/sun/mail/imap/protocol/IMAPProtocol.storeFlags:(ILjavax/mail/Flags;Z)V
      28: goto          67
      31: astore        4
      33: new           #21                 // class javax/mail/FolderClosedException
      36: dup
      37: aload_0
      38: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      41: aload         4
      43: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
      46: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
      49: athrow
      50: astore        4
      52: new           #112                // class javax/mail/MessagingException
      55: dup
      56: aload         4
      58: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
      61: aload         4
      63: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      66: athrow
      67: aload_3
      68: monitorexit
      69: goto          79
      72: astore        5
      74: aload_3
      75: monitorexit
      76: aload         5
      78: athrow
      79: return
    Exception table:
       from    to  target type
           7    28    31   Class com/sun/mail/iap/ConnectionException
           7    28    50   Class com/sun/mail/iap/ProtocolException
           7    69    72   any
          72    76    72   any

  public synchronized void setPeek(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #164                // Field peek:Z
       5: return

  public synchronized boolean getPeek();
    Code:
       0: aload_0
       1: getfield      #164                // Field peek:Z
       4: ireturn

  public synchronized void invalidateHeaders();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #11                 // Field headersLoaded:Z
       5: aload_0
       6: getfield      #14                 // Field loadedHeaders:Ljava/util/Hashtable;
       9: invokevirtual #165                // Method java/util/Hashtable.clear:()V
      12: aload_0
      13: aconst_null
      14: putfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
      17: aload_0
      18: aconst_null
      19: putfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      22: aload_0
      23: aconst_null
      24: putfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      27: aload_0
      28: aconst_null
      29: putfield      #71                 // Field receivedDate:Ljava/util/Date;
      32: aload_0
      33: iconst_m1
      34: putfield      #2                  // Field size:I
      37: aload_0
      38: aconst_null
      39: putfield      #79                 // Field type:Ljava/lang/String;
      42: aload_0
      43: aconst_null
      44: putfield      #62                 // Field subject:Ljava/lang/String;
      47: aload_0
      48: aconst_null
      49: putfield      #90                 // Field description:Ljava/lang/String;
      52: aload_0
      53: aconst_null
      54: putfield      #15                 // Field flags:Ljavax/mail/Flags;
      57: return

  protected boolean handleFetchItem(com.sun.mail.imap.protocol.Item, java.lang.String[], boolean) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: instanceof    #166                // class javax/mail/Flags
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #166                // class javax/mail/Flags
      12: putfield      #15                 // Field flags:Ljavax/mail/Flags;
      15: goto          363
      18: aload_1
      19: instanceof    #167                // class com/sun/mail/imap/protocol/ENVELOPE
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #167                // class com/sun/mail/imap/protocol/ENVELOPE
      30: putfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
      33: goto          363
      36: aload_1
      37: instanceof    #168                // class com/sun/mail/imap/protocol/INTERNALDATE
      40: ifeq          57
      43: aload_0
      44: aload_1
      45: checkcast     #168                // class com/sun/mail/imap/protocol/INTERNALDATE
      48: invokevirtual #169                // Method com/sun/mail/imap/protocol/INTERNALDATE.getDate:()Ljava/util/Date;
      51: putfield      #71                 // Field receivedDate:Ljava/util/Date;
      54: goto          363
      57: aload_1
      58: instanceof    #170                // class com/sun/mail/imap/protocol/RFC822SIZE
      61: ifeq          78
      64: aload_0
      65: aload_1
      66: checkcast     #170                // class com/sun/mail/imap/protocol/RFC822SIZE
      69: getfield      #171                // Field com/sun/mail/imap/protocol/RFC822SIZE.size:I
      72: putfield      #2                  // Field size:I
      75: goto          363
      78: aload_1
      79: instanceof    #172                // class com/sun/mail/imap/protocol/BODYSTRUCTURE
      82: ifeq          96
      85: aload_0
      86: aload_1
      87: checkcast     #172                // class com/sun/mail/imap/protocol/BODYSTRUCTURE
      90: putfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      93: goto          363
      96: aload_1
      97: instanceof    #173                // class com/sun/mail/imap/protocol/UID
     100: ifeq          178
     103: aload_1
     104: checkcast     #173                // class com/sun/mail/imap/protocol/UID
     107: astore        4
     109: aload_0
     110: aload         4
     112: getfield      #174                // Field com/sun/mail/imap/protocol/UID.uid:J
     115: putfield      #10                 // Field uid:J
     118: aload_0
     119: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     122: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
     125: getfield      #175                // Field com/sun/mail/imap/IMAPFolder.uidTable:Ljava/util/Hashtable;
     128: ifnonnull     148
     131: aload_0
     132: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     135: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
     138: new           #12                 // class java/util/Hashtable
     141: dup
     142: invokespecial #176                // Method java/util/Hashtable."<init>":()V
     145: putfield      #175                // Field com/sun/mail/imap/IMAPFolder.uidTable:Ljava/util/Hashtable;
     148: aload_0
     149: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     152: checkcast     #18                 // class com/sun/mail/imap/IMAPFolder
     155: getfield      #175                // Field com/sun/mail/imap/IMAPFolder.uidTable:Ljava/util/Hashtable;
     158: new           #177                // class java/lang/Long
     161: dup
     162: aload         4
     164: getfield      #174                // Field com/sun/mail/imap/protocol/UID.uid:J
     167: invokespecial #178                // Method java/lang/Long."<init>":(J)V
     170: aload_0
     171: invokevirtual #179                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     174: pop
     175: goto          363
     178: aload_1
     179: instanceof    #180                // class com/sun/mail/imap/protocol/RFC822DATA
     182: ifne          192
     185: aload_1
     186: instanceof    #181                // class com/sun/mail/imap/protocol/BODY
     189: ifeq          361
     192: aload_1
     193: instanceof    #180                // class com/sun/mail/imap/protocol/RFC822DATA
     196: ifeq          211
     199: aload_1
     200: checkcast     #180                // class com/sun/mail/imap/protocol/RFC822DATA
     203: invokevirtual #110                // Method com/sun/mail/imap/protocol/RFC822DATA.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     206: astore        4
     208: goto          220
     211: aload_1
     212: checkcast     #181                // class com/sun/mail/imap/protocol/BODY
     215: invokevirtual #108                // Method com/sun/mail/imap/protocol/BODY.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
     218: astore        4
     220: new           #147                // class javax/mail/internet/InternetHeaders
     223: dup
     224: invokespecial #148                // Method javax/mail/internet/InternetHeaders."<init>":()V
     227: astore        5
     229: aload         4
     231: ifnull        241
     234: aload         5
     236: aload         4
     238: invokevirtual #149                // Method javax/mail/internet/InternetHeaders.load:(Ljava/io/InputStream;)V
     241: aload_0
     242: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     245: ifnull        252
     248: iload_3
     249: ifeq          261
     252: aload_0
     253: aload         5
     255: putfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     258: goto          322
     261: aload         5
     263: invokevirtual #182                // Method javax/mail/internet/InternetHeaders.getAllHeaders:()Ljava/util/Enumeration;
     266: astore        6
     268: aload         6
     270: invokeinterface #183,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     275: ifeq          322
     278: aload         6
     280: invokeinterface #184,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     285: checkcast     #185                // class javax/mail/Header
     288: astore        7
     290: aload_0
     291: aload         7
     293: invokevirtual #186                // Method javax/mail/Header.getName:()Ljava/lang/String;
     296: invokespecial #1                  // Method isHeaderLoaded:(Ljava/lang/String;)Z
     299: ifne          319
     302: aload_0
     303: getfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     306: aload         7
     308: invokevirtual #186                // Method javax/mail/Header.getName:()Ljava/lang/String;
     311: aload         7
     313: invokevirtual #187                // Method javax/mail/Header.getValue:()Ljava/lang/String;
     316: invokevirtual #188                // Method javax/mail/internet/InternetHeaders.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     319: goto          268
     322: iload_3
     323: ifeq          334
     326: aload_0
     327: iconst_1
     328: invokespecial #189                // Method setHeadersLoaded:(Z)V
     331: goto          358
     334: iconst_0
     335: istore        6
     337: iload         6
     339: aload_2
     340: arraylength
     341: if_icmpge     358
     344: aload_0
     345: aload_2
     346: iload         6
     348: aaload
     349: invokespecial #150                // Method setHeaderLoaded:(Ljava/lang/String;)V
     352: iinc          6, 1
     355: goto          337
     358: goto          363
     361: iconst_0
     362: ireturn
     363: iconst_1
     364: ireturn

  protected void handleExtensionFetchItems(java.util.Map) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #190                // Field items:Ljava/util/Map;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #190                // Field items:Ljava/util/Map;
      12: goto          25
      15: aload_0
      16: getfield      #190                // Field items:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #191,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      25: return

  protected java.lang.Object fetchItem(com.sun.mail.imap.protocol.FetchItem) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aconst_null
       8: astore_3
       9: aload_0
      10: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      13: astore        4
      15: aload_0
      16: invokevirtual #44                 // Method checkExpunged:()V
      19: aload_0
      20: invokevirtual #105                // Method getSequenceNumber:()I
      23: istore        5
      25: aload         4
      27: iload         5
      29: aload_1
      30: invokevirtual #192                // Method com/sun/mail/imap/protocol/FetchItem.getName:()Ljava/lang/String;
      33: invokevirtual #193                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetch:(ILjava/lang/String;)[Lcom/sun/mail/iap/Response;
      36: astore        6
      38: iconst_0
      39: istore        7
      41: iload         7
      43: aload         6
      45: arraylength
      46: if_icmpge     127
      49: aload         6
      51: iload         7
      53: aaload
      54: ifnull        121
      57: aload         6
      59: iload         7
      61: aaload
      62: instanceof    #194                // class com/sun/mail/imap/protocol/FetchResponse
      65: ifeq          121
      68: aload         6
      70: iload         7
      72: aaload
      73: checkcast     #194                // class com/sun/mail/imap/protocol/FetchResponse
      76: invokevirtual #195                // Method com/sun/mail/imap/protocol/FetchResponse.getNumber:()I
      79: iload         5
      81: if_icmpeq     87
      84: goto          121
      87: aload         6
      89: iload         7
      91: aaload
      92: checkcast     #194                // class com/sun/mail/imap/protocol/FetchResponse
      95: astore        8
      97: aload         8
      99: invokevirtual #196                // Method com/sun/mail/imap/protocol/FetchResponse.getExtensionItems:()Ljava/util/Map;
     102: aload_1
     103: invokevirtual #192                // Method com/sun/mail/imap/protocol/FetchItem.getName:()Ljava/lang/String;
     106: invokeinterface #197,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: astore        9
     113: aload         9
     115: ifnull        121
     118: aload         9
     120: astore_3
     121: iinc          7, 1
     124: goto          41
     127: aload         4
     129: aload         6
     131: invokevirtual #198                // Method com/sun/mail/imap/protocol/IMAPProtocol.notifyResponseHandlers:([Lcom/sun/mail/iap/Response;)V
     134: aload         4
     136: aload         6
     138: aload         6
     140: arraylength
     141: iconst_1
     142: isub
     143: aaload
     144: invokevirtual #199                // Method com/sun/mail/imap/protocol/IMAPProtocol.handleResult:(Lcom/sun/mail/iap/Response;)V
     147: goto          190
     150: astore        4
     152: new           #21                 // class javax/mail/FolderClosedException
     155: dup
     156: aload_0
     157: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     160: aload         4
     162: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
     165: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
     168: athrow
     169: astore        4
     171: aload_0
     172: invokevirtual #111                // Method forceCheckExpunged:()V
     175: new           #112                // class javax/mail/MessagingException
     178: dup
     179: aload         4
     181: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     184: aload         4
     186: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     189: athrow
     190: aload_3
     191: aload_2
     192: monitorexit
     193: areturn
     194: astore        10
     196: aload_2
     197: monitorexit
     198: aload         10
     200: athrow
    Exception table:
       from    to  target type
           9   147   150   Class com/sun/mail/iap/ConnectionException
           9   147   169   Class com/sun/mail/iap/ProtocolException
           7   193   194   any
         194   198   194   any

  public synchronized java.lang.Object getItem(com.sun.mail.imap.protocol.FetchItem) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #190                // Field items:Ljava/util/Map;
       4: ifnonnull     11
       7: aconst_null
       8: goto          24
      11: aload_0
      12: getfield      #190                // Field items:Ljava/util/Map;
      15: aload_1
      16: invokevirtual #192                // Method com/sun/mail/imap/protocol/FetchItem.getName:()Ljava/lang/String;
      19: invokeinterface #197,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: astore_2
      25: aload_2
      26: ifnonnull     35
      29: aload_0
      30: aload_1
      31: invokevirtual #200                // Method fetchItem:(Lcom/sun/mail/imap/protocol/FetchItem;)Ljava/lang/Object;
      34: astore_2
      35: aload_2
      36: areturn

  private synchronized void loadEnvelope() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
       4: ifnull        8
       7: return
       8: aconst_null
       9: astore_1
      10: aload_0
      11: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      14: dup
      15: astore_2
      16: monitorenter
      17: aload_0
      18: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      21: astore_3
      22: aload_0
      23: invokevirtual #44                 // Method checkExpunged:()V
      26: aload_0
      27: invokevirtual #105                // Method getSequenceNumber:()I
      30: istore        4
      32: aload_3
      33: iload         4
      35: ldc           #201                // String ENVELOPE INTERNALDATE RFC822.SIZE
      37: invokevirtual #193                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetch:(ILjava/lang/String;)[Lcom/sun/mail/iap/Response;
      40: astore_1
      41: iconst_0
      42: istore        5
      44: iload         5
      46: aload_1
      47: arraylength
      48: if_icmpge     196
      51: aload_1
      52: iload         5
      54: aaload
      55: ifnull        190
      58: aload_1
      59: iload         5
      61: aaload
      62: instanceof    #194                // class com/sun/mail/imap/protocol/FetchResponse
      65: ifeq          190
      68: aload_1
      69: iload         5
      71: aaload
      72: checkcast     #194                // class com/sun/mail/imap/protocol/FetchResponse
      75: invokevirtual #195                // Method com/sun/mail/imap/protocol/FetchResponse.getNumber:()I
      78: iload         4
      80: if_icmpeq     86
      83: goto          190
      86: aload_1
      87: iload         5
      89: aaload
      90: checkcast     #194                // class com/sun/mail/imap/protocol/FetchResponse
      93: astore        6
      95: aload         6
      97: invokevirtual #202                // Method com/sun/mail/imap/protocol/FetchResponse.getItemCount:()I
     100: istore        7
     102: iconst_0
     103: istore        8
     105: iload         8
     107: iload         7
     109: if_icmpge     190
     112: aload         6
     114: iload         8
     116: invokevirtual #203                // Method com/sun/mail/imap/protocol/FetchResponse.getItem:(I)Lcom/sun/mail/imap/protocol/Item;
     119: astore        9
     121: aload         9
     123: instanceof    #167                // class com/sun/mail/imap/protocol/ENVELOPE
     126: ifeq          141
     129: aload_0
     130: aload         9
     132: checkcast     #167                // class com/sun/mail/imap/protocol/ENVELOPE
     135: putfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
     138: goto          184
     141: aload         9
     143: instanceof    #168                // class com/sun/mail/imap/protocol/INTERNALDATE
     146: ifeq          164
     149: aload_0
     150: aload         9
     152: checkcast     #168                // class com/sun/mail/imap/protocol/INTERNALDATE
     155: invokevirtual #169                // Method com/sun/mail/imap/protocol/INTERNALDATE.getDate:()Ljava/util/Date;
     158: putfield      #71                 // Field receivedDate:Ljava/util/Date;
     161: goto          184
     164: aload         9
     166: instanceof    #170                // class com/sun/mail/imap/protocol/RFC822SIZE
     169: ifeq          184
     172: aload_0
     173: aload         9
     175: checkcast     #170                // class com/sun/mail/imap/protocol/RFC822SIZE
     178: getfield      #171                // Field com/sun/mail/imap/protocol/RFC822SIZE.size:I
     181: putfield      #2                  // Field size:I
     184: iinc          8, 1
     187: goto          105
     190: iinc          5, 1
     193: goto          44
     196: aload_3
     197: aload_1
     198: invokevirtual #198                // Method com/sun/mail/imap/protocol/IMAPProtocol.notifyResponseHandlers:([Lcom/sun/mail/iap/Response;)V
     201: aload_3
     202: aload_1
     203: aload_1
     204: arraylength
     205: iconst_1
     206: isub
     207: aaload
     208: invokevirtual #199                // Method com/sun/mail/imap/protocol/IMAPProtocol.handleResult:(Lcom/sun/mail/iap/Response;)V
     211: goto          249
     214: astore_3
     215: new           #21                 // class javax/mail/FolderClosedException
     218: dup
     219: aload_0
     220: getfield      #17                 // Field folder:Ljavax/mail/Folder;
     223: aload_3
     224: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
     227: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
     230: athrow
     231: astore_3
     232: aload_0
     233: invokevirtual #111                // Method forceCheckExpunged:()V
     236: new           #112                // class javax/mail/MessagingException
     239: dup
     240: aload_3
     241: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     244: aload_3
     245: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     248: athrow
     249: aload_2
     250: monitorexit
     251: goto          261
     254: astore        10
     256: aload_2
     257: monitorexit
     258: aload         10
     260: athrow
     261: aload_0
     262: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
     265: ifnonnull     278
     268: new           #112                // class javax/mail/MessagingException
     271: dup
     272: ldc           #204                // String Failed to load IMAP envelope
     274: invokespecial #116                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: return
    Exception table:
       from    to  target type
          17   211   214   Class com/sun/mail/iap/ConnectionException
          17   211   231   Class com/sun/mail/iap/ProtocolException
          17   251   254   any
         254   258   254   any

  private synchronized void loadBODYSTRUCTURE() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
       4: ifnull        8
       7: return
       8: aload_0
       9: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      12: dup
      13: astore_1
      14: monitorenter
      15: aload_0
      16: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      19: astore_2
      20: aload_0
      21: invokevirtual #44                 // Method checkExpunged:()V
      24: aload_0
      25: aload_2
      26: aload_0
      27: invokevirtual #105                // Method getSequenceNumber:()I
      30: invokevirtual #205                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchBodyStructure:(I)Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      33: putfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      36: goto          74
      39: astore_2
      40: new           #21                 // class javax/mail/FolderClosedException
      43: dup
      44: aload_0
      45: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      48: aload_2
      49: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
      52: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
      55: athrow
      56: astore_2
      57: aload_0
      58: invokevirtual #111                // Method forceCheckExpunged:()V
      61: new           #112                // class javax/mail/MessagingException
      64: dup
      65: aload_2
      66: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
      69: aload_2
      70: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      73: athrow
      74: aload_0
      75: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
      78: ifnonnull     95
      81: aload_0
      82: invokevirtual #111                // Method forceCheckExpunged:()V
      85: new           #112                // class javax/mail/MessagingException
      88: dup
      89: ldc           #206                // String Unable to load BODYSTRUCTURE
      91: invokespecial #116                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_1
      96: monitorexit
      97: goto          105
     100: astore_3
     101: aload_1
     102: monitorexit
     103: aload_3
     104: athrow
     105: return
    Exception table:
       from    to  target type
          15    36    39   Class com/sun/mail/iap/ConnectionException
          15    36    56   Class com/sun/mail/iap/ProtocolException
          15    97   100   any
         100   103   100   any

  private synchronized void loadHeaders() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field headersLoaded:Z
       4: ifeq          8
       7: return
       8: aconst_null
       9: astore_1
      10: aload_0
      11: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      14: dup
      15: astore_2
      16: monitorenter
      17: aload_0
      18: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      21: astore_3
      22: aload_0
      23: invokevirtual #44                 // Method checkExpunged:()V
      26: aload_3
      27: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPProtocol.isREV1:()Z
      30: ifeq          63
      33: aload_3
      34: aload_0
      35: invokevirtual #105                // Method getSequenceNumber:()I
      38: aload_0
      39: ldc           #207                // String HEADER
      41: invokespecial #101                // Method toSection:(Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #106                // Method com/sun/mail/imap/protocol/IMAPProtocol.peekBody:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/BODY;
      47: astore        4
      49: aload         4
      51: ifnull        60
      54: aload         4
      56: invokevirtual #108                // Method com/sun/mail/imap/protocol/BODY.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
      59: astore_1
      60: goto          86
      63: aload_3
      64: aload_0
      65: invokevirtual #105                // Method getSequenceNumber:()I
      68: ldc           #207                // String HEADER
      70: invokevirtual #109                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchRFC822:(ILjava/lang/String;)Lcom/sun/mail/imap/protocol/RFC822DATA;
      73: astore        4
      75: aload         4
      77: ifnull        86
      80: aload         4
      82: invokevirtual #110                // Method com/sun/mail/imap/protocol/RFC822DATA.getByteArrayInputStream:()Ljava/io/ByteArrayInputStream;
      85: astore_1
      86: goto          124
      89: astore_3
      90: new           #21                 // class javax/mail/FolderClosedException
      93: dup
      94: aload_0
      95: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      98: aload_3
      99: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
     102: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
     105: athrow
     106: astore_3
     107: aload_0
     108: invokevirtual #111                // Method forceCheckExpunged:()V
     111: new           #112                // class javax/mail/MessagingException
     114: dup
     115: aload_3
     116: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     119: aload_3
     120: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     123: athrow
     124: aload_2
     125: monitorexit
     126: goto          136
     129: astore        5
     131: aload_2
     132: monitorexit
     133: aload         5
     135: athrow
     136: aload_1
     137: ifnonnull     150
     140: new           #112                // class javax/mail/MessagingException
     143: dup
     144: ldc           #208                // String Cannot load header
     146: invokespecial #116                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: aload_0
     151: new           #147                // class javax/mail/internet/InternetHeaders
     154: dup
     155: aload_1
     156: invokespecial #209                // Method javax/mail/internet/InternetHeaders."<init>":(Ljava/io/InputStream;)V
     159: putfield      #142                // Field headers:Ljavax/mail/internet/InternetHeaders;
     162: aload_0
     163: iconst_1
     164: putfield      #11                 // Field headersLoaded:Z
     167: return
    Exception table:
       from    to  target type
          17    86    89   Class com/sun/mail/iap/ConnectionException
          17    86   106   Class com/sun/mail/iap/ProtocolException
          17   126   129   any
         129   133   129   any

  private synchronized void loadFlags() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field flags:Ljavax/mail/Flags;
       4: ifnull        8
       7: return
       8: aload_0
       9: invokevirtual #33                 // Method getMessageCacheLock:()Ljava/lang/Object;
      12: dup
      13: astore_1
      14: monitorenter
      15: aload_0
      16: invokevirtual #34                 // Method getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
      19: astore_2
      20: aload_0
      21: invokevirtual #44                 // Method checkExpunged:()V
      24: aload_0
      25: aload_2
      26: aload_0
      27: invokevirtual #105                // Method getSequenceNumber:()I
      30: invokevirtual #210                // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchFlags:(I)Ljavax/mail/Flags;
      33: putfield      #15                 // Field flags:Ljavax/mail/Flags;
      36: aload_0
      37: getfield      #15                 // Field flags:Ljavax/mail/Flags;
      40: ifnonnull     54
      43: aload_0
      44: new           #166                // class javax/mail/Flags
      47: dup
      48: invokespecial #211                // Method javax/mail/Flags."<init>":()V
      51: putfield      #15                 // Field flags:Ljavax/mail/Flags;
      54: goto          92
      57: astore_2
      58: new           #21                 // class javax/mail/FolderClosedException
      61: dup
      62: aload_0
      63: getfield      #17                 // Field folder:Ljavax/mail/Folder;
      66: aload_2
      67: invokevirtual #37                 // Method com/sun/mail/iap/ConnectionException.getMessage:()Ljava/lang/String;
      70: invokespecial #38                 // Method javax/mail/FolderClosedException."<init>":(Ljavax/mail/Folder;Ljava/lang/String;)V
      73: athrow
      74: astore_2
      75: aload_0
      76: invokevirtual #111                // Method forceCheckExpunged:()V
      79: new           #112                // class javax/mail/MessagingException
      82: dup
      83: aload_2
      84: invokevirtual #113                // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
      87: aload_2
      88: invokespecial #114                // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      91: athrow
      92: aload_1
      93: monitorexit
      94: goto          102
      97: astore_3
      98: aload_1
      99: monitorexit
     100: aload_3
     101: athrow
     102: return
    Exception table:
       from    to  target type
          15    54    57   Class com/sun/mail/iap/ConnectionException
          15    54    74   Class com/sun/mail/iap/ProtocolException
          15    94    97   any
          97   100    97   any

  private boolean areHeadersLoaded();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headersLoaded:Z
       4: ireturn

  private void setHeadersLoaded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field headersLoaded:Z
       5: return

  private boolean isHeaderLoaded(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headersLoaded:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #14                 // Field loadedHeaders:Ljava/util/Hashtable;
      13: aload_1
      14: getstatic     #212                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #213                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #214                // Method java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
      23: ireturn

  private void setHeaderLoaded(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field loadedHeaders:Ljava/util/Hashtable;
       4: aload_1
       5: getstatic     #212                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       8: invokevirtual #213                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      11: aload_1
      12: invokevirtual #179                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  private java.lang.String toSection(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #122                // Field sectionId:Ljava/lang/String;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: new           #130                // class java/lang/StringBuilder
      12: dup
      13: invokespecial #131                // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: getfield      #122                // Field sectionId:Ljava/lang/String;
      20: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #215                // String .
      25: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  private javax.mail.internet.InternetAddress[] aaclone(javax.mail.internet.InternetAddress[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokevirtual #216                // Method "[Ljavax/mail/internet/InternetAddress;".clone:()Ljava/lang/Object;
      10: checkcast     #217                // class "[Ljavax/mail/internet/InternetAddress;"
      13: checkcast     #217                // class "[Ljavax/mail/internet/InternetAddress;"
      16: areturn

  private javax.mail.Flags _getFlags();
    Code:
       0: aload_0
       1: getfield      #15                 // Field flags:Ljavax/mail/Flags;
       4: areturn

  private com.sun.mail.imap.protocol.ENVELOPE _getEnvelope();
    Code:
       0: aload_0
       1: getfield      #46                 // Field envelope:Lcom/sun/mail/imap/protocol/ENVELOPE;
       4: areturn

  private com.sun.mail.imap.protocol.BODYSTRUCTURE _getBodyStructure();
    Code:
       0: aload_0
       1: getfield      #73                 // Field bs:Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
       4: areturn

  void _setFlags(javax.mail.Flags);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field flags:Ljavax/mail/Flags;
       5: return

  javax.mail.Session _getSession();
    Code:
       0: aload_0
       1: getfield      #218                // Field session:Ljavax/mail/Session;
       4: areturn

  static com.sun.mail.imap.protocol.ENVELOPE access$000(com.sun.mail.imap.IMAPMessage);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method _getEnvelope:()Lcom/sun/mail/imap/protocol/ENVELOPE;
       4: areturn

  static javax.mail.Flags access$100(com.sun.mail.imap.IMAPMessage);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method _getFlags:()Ljavax/mail/Flags;
       4: areturn

  static com.sun.mail.imap.protocol.BODYSTRUCTURE access$200(com.sun.mail.imap.IMAPMessage);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method _getBodyStructure:()Lcom/sun/mail/imap/protocol/BODYSTRUCTURE;
       4: areturn

  static boolean access$300(com.sun.mail.imap.IMAPMessage);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method areHeadersLoaded:()Z
       4: ireturn

  static int access$400(com.sun.mail.imap.IMAPMessage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ireturn

  static boolean access$500(com.sun.mail.imap.IMAPMessage, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method isHeaderLoaded:(Ljava/lang/String;)Z
       5: ireturn
}
