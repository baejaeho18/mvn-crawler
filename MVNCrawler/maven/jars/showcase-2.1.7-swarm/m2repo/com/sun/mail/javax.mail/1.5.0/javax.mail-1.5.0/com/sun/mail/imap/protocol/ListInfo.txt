Compiled from "ListInfo.java"
public class com.sun.mail.imap.protocol.ListInfo {
  public java.lang.String name;

  public char separator;

  public boolean hasInferiors;

  public boolean canOpen;

  public int changeState;

  public java.lang.String[] attrs;

  public static final int CHANGED;

  public static final int UNCHANGED;

  public static final int INDETERMINATE;

  public com.sun.mail.imap.protocol.ListInfo(com.sun.mail.imap.protocol.IMAPResponse) throws com.sun.mail.iap.ParsingException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: bipush        47
      12: putfield      #3                  // Field separator:C
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field hasInferiors:Z
      20: aload_0
      21: iconst_1
      22: putfield      #5                  // Field canOpen:Z
      25: aload_0
      26: iconst_3
      27: putfield      #6                  // Field changeState:I
      30: aload_1
      31: invokevirtual #7                  // Method com/sun/mail/imap/protocol/IMAPResponse.readSimpleList:()[Ljava/lang/String;
      34: astore_2
      35: new           #8                  // class java/util/Vector
      38: dup
      39: invokespecial #9                  // Method java/util/Vector."<init>":()V
      42: astore_3
      43: aload_2
      44: ifnull        148
      47: iconst_0
      48: istore        4
      50: iload         4
      52: aload_2
      53: arraylength
      54: if_icmpge     148
      57: aload_2
      58: iload         4
      60: aaload
      61: ldc           #10                 // String \\Marked
      63: invokevirtual #11                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      66: ifeq          77
      69: aload_0
      70: iconst_1
      71: putfield      #6                  // Field changeState:I
      74: goto          134
      77: aload_2
      78: iload         4
      80: aaload
      81: ldc           #12                 // String \\Unmarked
      83: invokevirtual #11                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          97
      89: aload_0
      90: iconst_2
      91: putfield      #6                  // Field changeState:I
      94: goto          134
      97: aload_2
      98: iload         4
     100: aaload
     101: ldc           #13                 // String \\Noselect
     103: invokevirtual #11                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     106: ifeq          117
     109: aload_0
     110: iconst_0
     111: putfield      #5                  // Field canOpen:Z
     114: goto          134
     117: aload_2
     118: iload         4
     120: aaload
     121: ldc           #14                 // String \\Noinferiors
     123: invokevirtual #11                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     126: ifeq          134
     129: aload_0
     130: iconst_0
     131: putfield      #4                  // Field hasInferiors:Z
     134: aload_3
     135: aload_2
     136: iload         4
     138: aaload
     139: invokevirtual #15                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     142: iinc          4, 1
     145: goto          50
     148: aload_0
     149: aload_3
     150: invokevirtual #16                 // Method java/util/Vector.size:()I
     153: anewarray     #17                 // class java/lang/String
     156: putfield      #18                 // Field attrs:[Ljava/lang/String;
     159: aload_3
     160: aload_0
     161: getfield      #18                 // Field attrs:[Ljava/lang/String;
     164: invokevirtual #19                 // Method java/util/Vector.copyInto:([Ljava/lang/Object;)V
     167: aload_1
     168: invokevirtual #20                 // Method com/sun/mail/imap/protocol/IMAPResponse.skipSpaces:()V
     171: aload_1
     172: invokevirtual #21                 // Method com/sun/mail/imap/protocol/IMAPResponse.readByte:()B
     175: bipush        34
     177: if_icmpne     212
     180: aload_0
     181: aload_1
     182: invokevirtual #21                 // Method com/sun/mail/imap/protocol/IMAPResponse.readByte:()B
     185: i2c
     186: dup_x1
     187: putfield      #3                  // Field separator:C
     190: bipush        92
     192: if_icmpne     204
     195: aload_0
     196: aload_1
     197: invokevirtual #21                 // Method com/sun/mail/imap/protocol/IMAPResponse.readByte:()B
     200: i2c
     201: putfield      #3                  // Field separator:C
     204: aload_1
     205: iconst_1
     206: invokevirtual #22                 // Method com/sun/mail/imap/protocol/IMAPResponse.skip:(I)V
     209: goto          217
     212: aload_1
     213: iconst_2
     214: invokevirtual #22                 // Method com/sun/mail/imap/protocol/IMAPResponse.skip:(I)V
     217: aload_1
     218: invokevirtual #20                 // Method com/sun/mail/imap/protocol/IMAPResponse.skipSpaces:()V
     221: aload_0
     222: aload_1
     223: invokevirtual #23                 // Method com/sun/mail/imap/protocol/IMAPResponse.readAtomString:()Ljava/lang/String;
     226: putfield      #2                  // Field name:Ljava/lang/String;
     229: aload_0
     230: aload_0
     231: getfield      #2                  // Field name:Ljava/lang/String;
     234: invokestatic  #24                 // Method com/sun/mail/imap/protocol/BASE64MailboxDecoder.decode:(Ljava/lang/String;)Ljava/lang/String;
     237: putfield      #2                  // Field name:Ljava/lang/String;
     240: return
}
