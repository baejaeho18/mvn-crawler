Compiled from "Header1_2Impl.java"
public class com.sun.xml.messaging.saaj.soap.ver1_2.Header1_2Impl extends com.sun.xml.messaging.saaj.soap.impl.HeaderImpl {
  protected static final java.util.logging.Logger log;

  public com.sun.xml.messaging.saaj.soap.ver1_2.Header1_2Impl(com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method com/sun/xml/messaging/saaj/soap/name/NameImpl.createHeader1_2Name:(Ljava/lang/String;)Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;
       6: invokespecial #2                  // Method com/sun/xml/messaging/saaj/soap/impl/HeaderImpl."<init>":(Lcom/sun/xml/messaging/saaj/soap/SOAPDocumentImpl;Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;)V
       9: return

  protected com.sun.xml.messaging.saaj.soap.name.NameImpl getNotUnderstoodName();
    Code:
       0: aconst_null
       1: invokestatic  #3                  // Method com/sun/xml/messaging/saaj/soap/name/NameImpl.createNotUnderstood1_2Name:(Ljava/lang/String;)Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;
       4: areturn

  protected com.sun.xml.messaging.saaj.soap.name.NameImpl getUpgradeName();
    Code:
       0: aconst_null
       1: invokestatic  #4                  // Method com/sun/xml/messaging/saaj/soap/name/NameImpl.createUpgrade1_2Name:(Ljava/lang/String;)Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;
       4: areturn

  protected com.sun.xml.messaging.saaj.soap.name.NameImpl getSupportedEnvelopeName();
    Code:
       0: aconst_null
       1: invokestatic  #5                  // Method com/sun/xml/messaging/saaj/soap/name/NameImpl.createSupportedEnvelope1_2Name:(Ljava/lang/String;)Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;
       4: areturn

  public javax.xml.soap.SOAPHeaderElement addNotUnderstoodHeaderElement(javax.xml.namespace.QName) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: ifnonnull     22
       4: getstatic     #6                  // Field log:Ljava/util/logging/Logger;
       7: ldc           #7                  // String SAAJ0410.ver1_2.no.null.to.addNotUnderstoodHeader
       9: invokevirtual #8                  // Method java/util/logging/Logger.severe:(Ljava/lang/String;)V
      12: new           #9                  // class javax/xml/soap/SOAPException
      15: dup
      16: ldc           #10                 // String Cannot pass NULL to addNotUnderstoodHeaderElement
      18: invokespecial #11                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: ldc           #12                 // String
      24: aload_1
      25: invokevirtual #13                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      28: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          52
      34: getstatic     #6                  // Field log:Ljava/util/logging/Logger;
      37: ldc           #15                 // String SAAJ0417.ver1_2.qname.not.ns.qualified
      39: invokevirtual #8                  // Method java/util/logging/Logger.severe:(Ljava/lang/String;)V
      42: new           #9                  // class javax/xml/soap/SOAPException
      45: dup
      46: ldc           #16                 // String The qname passed to addNotUnderstoodHeaderElement must be namespace-qualified
      48: invokespecial #11                 // Method javax/xml/soap/SOAPException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: invokevirtual #17                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      56: astore_2
      57: ldc           #12                 // String
      59: aload_2
      60: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          69
      66: ldc           #18                 // String ns1
      68: astore_2
      69: aload_0
      70: invokevirtual #19                 // Method getNotUnderstoodName:()Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;
      73: astore_3
      74: aload_0
      75: aload_3
      76: invokevirtual #20                 // Method addChildElement:(Ljavax/xml/soap/Name;)Ljavax/xml/soap/SOAPElement;
      79: checkcast     #21                 // class javax/xml/soap/SOAPHeaderElement
      82: astore        4
      84: aload         4
      86: ldc           #22                 // String qname
      88: invokestatic  #23                 // Method com/sun/xml/messaging/saaj/soap/name/NameImpl.createFromUnqualifiedName:(Ljava/lang/String;)Lcom/sun/xml/messaging/saaj/soap/name/NameImpl;
      91: new           #24                 // class javax/xml/namespace/QName
      94: dup
      95: aload_1
      96: invokevirtual #13                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      99: aload_1
     100: invokevirtual #25                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     103: aload_2
     104: invokespecial #26                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     107: invokestatic  #27                 // Method getQualifiedName:(Ljavax/xml/namespace/QName;)Ljava/lang/String;
     110: invokeinterface #28,  3           // InterfaceMethod javax/xml/soap/SOAPHeaderElement.addAttribute:(Ljavax/xml/soap/Name;Ljava/lang/String;)Ljavax/xml/soap/SOAPElement;
     115: pop
     116: aload         4
     118: aload_2
     119: aload_1
     120: invokevirtual #13                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     123: invokeinterface #29,  3           // InterfaceMethod javax/xml/soap/SOAPHeaderElement.addNamespaceDeclaration:(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/soap/SOAPElement;
     128: pop
     129: aload         4
     131: areturn

  public javax.xml.soap.SOAPElement addTextNode(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: getstatic     #6                  // Field log:Ljava/util/logging/Logger;
       3: getstatic     #30                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       6: ldc           #31                 // String SAAJ0416.ver1_2.adding.text.not.legal
       8: aload_0
       9: invokevirtual #32                 // Method getElementQName:()Ljavax/xml/namespace/QName;
      12: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      15: new           #34                 // class com/sun/xml/messaging/saaj/SOAPExceptionImpl
      18: dup
      19: ldc           #35                 // String Adding text to SOAP 1.2 Header is not legal
      21: invokespecial #36                 // Method com/sun/xml/messaging/saaj/SOAPExceptionImpl."<init>":(Ljava/lang/String;)V
      24: athrow

  protected javax.xml.soap.SOAPHeaderElement createHeaderElement(javax.xml.soap.Name) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokeinterface #37,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnull        20
      11: aload_2
      12: ldc           #12                 // String
      14: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          38
      20: getstatic     #6                  // Field log:Ljava/util/logging/Logger;
      23: ldc           #38                 // String SAAJ0413.ver1_2.header.elems.must.be.ns.qualified
      25: invokevirtual #8                  // Method java/util/logging/Logger.severe:(Ljava/lang/String;)V
      28: new           #34                 // class com/sun/xml/messaging/saaj/SOAPExceptionImpl
      31: dup
      32: ldc           #39                 // String SOAP 1.2 header elements must be namespace qualified
      34: invokespecial #36                 // Method com/sun/xml/messaging/saaj/SOAPExceptionImpl."<init>":(Ljava/lang/String;)V
      37: athrow
      38: new           #40                 // class com/sun/xml/messaging/saaj/soap/ver1_2/HeaderElement1_2Impl
      41: dup
      42: aload_0
      43: invokevirtual #41                 // Method getOwnerDocument:()Lorg/w3c/dom/Document;
      46: checkcast     #42                 // class com/sun/xml/messaging/saaj/soap/SOAPDocument
      49: invokeinterface #43,  1           // InterfaceMethod com/sun/xml/messaging/saaj/soap/SOAPDocument.getDocument:()Lcom/sun/xml/messaging/saaj/soap/SOAPDocumentImpl;
      54: aload_1
      55: invokespecial #44                 // Method com/sun/xml/messaging/saaj/soap/ver1_2/HeaderElement1_2Impl."<init>":(Lcom/sun/xml/messaging/saaj/soap/SOAPDocumentImpl;Ljavax/xml/soap/Name;)V
      58: areturn

  protected javax.xml.soap.SOAPHeaderElement createHeaderElement(javax.xml.namespace.QName) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_2
      10: ldc           #12                 // String
      12: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          36
      18: getstatic     #6                  // Field log:Ljava/util/logging/Logger;
      21: ldc           #38                 // String SAAJ0413.ver1_2.header.elems.must.be.ns.qualified
      23: invokevirtual #8                  // Method java/util/logging/Logger.severe:(Ljava/lang/String;)V
      26: new           #34                 // class com/sun/xml/messaging/saaj/SOAPExceptionImpl
      29: dup
      30: ldc           #39                 // String SOAP 1.2 header elements must be namespace qualified
      32: invokespecial #36                 // Method com/sun/xml/messaging/saaj/SOAPExceptionImpl."<init>":(Ljava/lang/String;)V
      35: athrow
      36: new           #40                 // class com/sun/xml/messaging/saaj/soap/ver1_2/HeaderElement1_2Impl
      39: dup
      40: aload_0
      41: invokevirtual #41                 // Method getOwnerDocument:()Lorg/w3c/dom/Document;
      44: checkcast     #42                 // class com/sun/xml/messaging/saaj/soap/SOAPDocument
      47: invokeinterface #43,  1           // InterfaceMethod com/sun/xml/messaging/saaj/soap/SOAPDocument.getDocument:()Lcom/sun/xml/messaging/saaj/soap/SOAPDocumentImpl;
      52: aload_1
      53: invokespecial #45                 // Method com/sun/xml/messaging/saaj/soap/ver1_2/HeaderElement1_2Impl."<init>":(Lcom/sun/xml/messaging/saaj/soap/SOAPDocumentImpl;Ljavax/xml/namespace/QName;)V
      56: areturn

  public void setEncodingStyle(java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: getstatic     #6                  // Field log:Ljava/util/logging/Logger;
       3: ldc           #46                 // String SAAJ0409.ver1_2.no.encodingstyle.in.header
       5: invokevirtual #8                  // Method java/util/logging/Logger.severe:(Ljava/lang/String;)V
       8: new           #34                 // class com/sun/xml/messaging/saaj/SOAPExceptionImpl
      11: dup
      12: ldc           #47                 // String encodingStyle attribute cannot appear on Header
      14: invokespecial #36                 // Method com/sun/xml/messaging/saaj/SOAPExceptionImpl."<init>":(Ljava/lang/String;)V
      17: athrow

  public javax.xml.soap.SOAPElement addAttribute(javax.xml.soap.Name, java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod javax/xml/soap/Name.getLocalName:()Ljava/lang/String;
       6: ldc           #49                 // String encodingStyle
       8: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifeq          33
      14: aload_1
      15: invokeinterface #37,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
      20: ldc           #50                 // String http://www.w3.org/2003/05/soap-envelope
      22: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          33
      28: aload_0
      29: aload_2
      30: invokevirtual #51                 // Method setEncodingStyle:(Ljava/lang/String;)V
      33: aload_0
      34: aload_1
      35: aload_2
      36: invokespecial #52                 // Method com/sun/xml/messaging/saaj/soap/impl/HeaderImpl.addAttribute:(Ljavax/xml/soap/Name;Ljava/lang/String;)Ljavax/xml/soap/SOAPElement;
      39: areturn

  public javax.xml.soap.SOAPElement addAttribute(javax.xml.namespace.QName, java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
       4: ldc           #49                 // String encodingStyle
       6: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          29
      12: aload_1
      13: invokevirtual #13                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      16: ldc           #50                 // String http://www.w3.org/2003/05/soap-envelope
      18: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          29
      24: aload_0
      25: aload_2
      26: invokevirtual #51                 // Method setEncodingStyle:(Ljava/lang/String;)V
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #53                 // Method com/sun/xml/messaging/saaj/soap/impl/HeaderImpl.addAttribute:(Ljavax/xml/namespace/QName;Ljava/lang/String;)Ljavax/xml/soap/SOAPElement;
      35: areturn

  static {};
    Code:
       0: ldc           #54                 // String com.sun.xml.messaging.saaj.soap.ver1_2
       2: ldc           #55                 // String com.sun.xml.messaging.saaj.soap.ver1_2.LocalStrings
       4: invokestatic  #56                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;
       7: putstatic     #6                  // Field log:Ljava/util/logging/Logger;
      10: return
}
