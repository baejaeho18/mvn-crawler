Compiled from "QPDecoderStream.java"
public class com.sun.xml.messaging.saaj.packaging.mime.util.QPDecoderStream extends java.io.FilterInputStream {
  protected byte[] ba;

  protected int spaces;

  public com.sun.xml.messaging.saaj.packaging.mime.util.QPDecoderStream(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #1                  // class java/io/PushbackInputStream
       4: dup
       5: aload_1
       6: iconst_2
       7: invokespecial #2                  // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      10: invokespecial #3                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
      13: aload_0
      14: iconst_2
      15: newarray       byte
      17: putfield      #4                  // Field ba:[B
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field spaces:I
      25: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field spaces:I
       4: ifle          20
       7: aload_0
       8: dup
       9: getfield      #5                  // Field spaces:I
      12: iconst_1
      13: isub
      14: putfield      #5                  // Field spaces:I
      17: bipush        32
      19: ireturn
      20: aload_0
      21: getfield      #6                  // Field in:Ljava/io/InputStream;
      24: invokevirtual #7                  // Method java/io/InputStream.read:()I
      27: istore_1
      28: iload_1
      29: bipush        32
      31: if_icmpne     102
      34: aload_0
      35: getfield      #6                  // Field in:Ljava/io/InputStream;
      38: invokevirtual #7                  // Method java/io/InputStream.read:()I
      41: dup
      42: istore_1
      43: bipush        32
      45: if_icmpne     61
      48: aload_0
      49: dup
      50: getfield      #5                  // Field spaces:I
      53: iconst_1
      54: iadd
      55: putfield      #5                  // Field spaces:I
      58: goto          34
      61: iload_1
      62: bipush        13
      64: if_icmpeq     78
      67: iload_1
      68: bipush        10
      70: if_icmpeq     78
      73: iload_1
      74: iconst_m1
      75: if_icmpne     86
      78: aload_0
      79: iconst_0
      80: putfield      #5                  // Field spaces:I
      83: goto          100
      86: aload_0
      87: getfield      #6                  // Field in:Ljava/io/InputStream;
      90: checkcast     #1                  // class java/io/PushbackInputStream
      93: iload_1
      94: invokevirtual #8                  // Method java/io/PushbackInputStream.unread:(I)V
      97: bipush        32
      99: istore_1
     100: iload_1
     101: ireturn
     102: iload_1
     103: bipush        61
     105: if_icmpne     221
     108: aload_0
     109: getfield      #6                  // Field in:Ljava/io/InputStream;
     112: invokevirtual #7                  // Method java/io/InputStream.read:()I
     115: istore_2
     116: iload_2
     117: bipush        10
     119: if_icmpne     127
     122: aload_0
     123: invokevirtual #9                  // Method read:()I
     126: ireturn
     127: iload_2
     128: bipush        13
     130: if_icmpne     163
     133: aload_0
     134: getfield      #6                  // Field in:Ljava/io/InputStream;
     137: invokevirtual #7                  // Method java/io/InputStream.read:()I
     140: istore_3
     141: iload_3
     142: bipush        10
     144: if_icmpeq     158
     147: aload_0
     148: getfield      #6                  // Field in:Ljava/io/InputStream;
     151: checkcast     #1                  // class java/io/PushbackInputStream
     154: iload_3
     155: invokevirtual #8                  // Method java/io/PushbackInputStream.unread:(I)V
     158: aload_0
     159: invokevirtual #9                  // Method read:()I
     162: ireturn
     163: iload_2
     164: iconst_m1
     165: if_icmpne     170
     168: iconst_m1
     169: ireturn
     170: aload_0
     171: getfield      #4                  // Field ba:[B
     174: iconst_0
     175: iload_2
     176: i2b
     177: bastore
     178: aload_0
     179: getfield      #4                  // Field ba:[B
     182: iconst_1
     183: aload_0
     184: getfield      #6                  // Field in:Ljava/io/InputStream;
     187: invokevirtual #7                  // Method java/io/InputStream.read:()I
     190: i2b
     191: bastore
     192: aload_0
     193: getfield      #4                  // Field ba:[B
     196: iconst_0
     197: iconst_2
     198: bipush        16
     200: invokestatic  #10                 // Method com/sun/xml/messaging/saaj/packaging/mime/util/ASCIIUtility.parseInt:([BIII)I
     203: ireturn
     204: astore_3
     205: aload_0
     206: getfield      #6                  // Field in:Ljava/io/InputStream;
     209: checkcast     #1                  // class java/io/PushbackInputStream
     212: aload_0
     213: getfield      #4                  // Field ba:[B
     216: invokevirtual #12                 // Method java/io/PushbackInputStream.unread:([B)V
     219: iload_1
     220: ireturn
     221: iload_1
     222: ireturn
    Exception table:
       from    to  target type
         192   203   204   Class java/lang/NumberFormatException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     46
       9: aload_0
      10: invokevirtual #9                  // Method read:()I
      13: dup
      14: istore        5
      16: iconst_m1
      17: if_icmpne     31
      20: iload         4
      22: ifne          46
      25: iconst_m1
      26: istore        4
      28: goto          46
      31: aload_1
      32: iload_2
      33: iload         4
      35: iadd
      36: iload         5
      38: i2b
      39: bastore
      40: iinc          4, 1
      43: goto          3
      46: iload         4
      48: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #13                 // Method java/io/InputStream.available:()I
       7: ireturn
}
