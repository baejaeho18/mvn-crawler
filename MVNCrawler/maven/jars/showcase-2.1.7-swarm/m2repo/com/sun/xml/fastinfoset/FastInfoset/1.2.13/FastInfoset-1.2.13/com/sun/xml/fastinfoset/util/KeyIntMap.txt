Compiled from "KeyIntMap.java"
public abstract class com.sun.xml.fastinfoset.util.KeyIntMap {
  public static final int NOT_PRESENT;

  static final int DEFAULT_INITIAL_CAPACITY;

  static final int MAXIMUM_CAPACITY;

  static final float DEFAULT_LOAD_FACTOR;

  int _readOnlyMapSize;

  int _size;

  int _capacity;

  int _threshold;

  final float _loadFactor;

  public com.sun.xml.fastinfoset.util.KeyIntMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifge          35
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: invokestatic  #3                  // Method com/sun/xml/fastinfoset/CommonResourceBundle.getInstance:()Lcom/sun/xml/fastinfoset/CommonResourceBundle;
      15: ldc           #4                  // String message.illegalInitialCapacity
      17: iconst_1
      18: anewarray     #5                  // class java/lang/Object
      21: dup
      22: iconst_0
      23: iload_1
      24: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokevirtual #7                  // Method com/sun/xml/fastinfoset/CommonResourceBundle.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_1
      36: ldc           #9                  // int 1048576
      38: if_icmple     44
      41: ldc           #9                  // int 1048576
      43: istore_1
      44: fload_2
      45: fconst_0
      46: fcmpg
      47: ifle          57
      50: fload_2
      51: invokestatic  #10                 // Method java/lang/Float.isNaN:(F)Z
      54: ifeq          84
      57: new           #2                  // class java/lang/IllegalArgumentException
      60: dup
      61: invokestatic  #3                  // Method com/sun/xml/fastinfoset/CommonResourceBundle.getInstance:()Lcom/sun/xml/fastinfoset/CommonResourceBundle;
      64: ldc           #11                 // String message.illegalLoadFactor
      66: iconst_1
      67: anewarray     #5                  // class java/lang/Object
      70: dup
      71: iconst_0
      72: fload_2
      73: invokestatic  #12                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      76: aastore
      77: invokevirtual #7                  // Method com/sun/xml/fastinfoset/CommonResourceBundle.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      80: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: iload_1
      85: bipush        16
      87: if_icmpeq     139
      90: aload_0
      91: iconst_1
      92: putfield      #13                 // Field _capacity:I
      95: aload_0
      96: getfield      #13                 // Field _capacity:I
      99: iload_1
     100: if_icmpge     116
     103: aload_0
     104: dup
     105: getfield      #13                 // Field _capacity:I
     108: iconst_1
     109: ishl
     110: putfield      #13                 // Field _capacity:I
     113: goto          95
     116: aload_0
     117: fload_2
     118: putfield      #14                 // Field _loadFactor:F
     121: aload_0
     122: aload_0
     123: getfield      #13                 // Field _capacity:I
     126: i2f
     127: aload_0
     128: getfield      #14                 // Field _loadFactor:F
     131: fmul
     132: f2i
     133: putfield      #15                 // Field _threshold:I
     136: goto          157
     139: aload_0
     140: bipush        16
     142: putfield      #13                 // Field _capacity:I
     145: aload_0
     146: ldc           #16                 // float 0.75f
     148: putfield      #14                 // Field _loadFactor:F
     151: aload_0
     152: bipush        12
     154: putfield      #15                 // Field _threshold:I
     157: return

  public com.sun.xml.fastinfoset.util.KeyIntMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #16                 // float 0.75f
       4: invokespecial #17                 // Method "<init>":(IF)V
       7: return

  public com.sun.xml.fastinfoset.util.KeyIntMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #13                 // Field _capacity:I
      10: aload_0
      11: ldc           #16                 // float 0.75f
      13: putfield      #14                 // Field _loadFactor:F
      16: aload_0
      17: bipush        12
      19: putfield      #15                 // Field _threshold:I
      22: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #18                 // Field _size:I
       4: aload_0
       5: getfield      #19                 // Field _readOnlyMapSize:I
       8: iadd
       9: ireturn

  public abstract void clear();

  public abstract void setReadOnlyMap(com.sun.xml.fastinfoset.util.KeyIntMap, boolean);

  public static final int hashHash(int);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        9
       4: ishl
       5: iconst_m1
       6: ixor
       7: iadd
       8: istore_0
       9: iload_0
      10: iload_0
      11: bipush        14
      13: iushr
      14: ixor
      15: istore_0
      16: iload_0
      17: iload_0
      18: iconst_4
      19: ishl
      20: iadd
      21: istore_0
      22: iload_0
      23: iload_0
      24: bipush        10
      26: iushr
      27: ixor
      28: istore_0
      29: iload_0
      30: ireturn

  public static final int indexFor(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_1
       3: isub
       4: iand
       5: ireturn
}
