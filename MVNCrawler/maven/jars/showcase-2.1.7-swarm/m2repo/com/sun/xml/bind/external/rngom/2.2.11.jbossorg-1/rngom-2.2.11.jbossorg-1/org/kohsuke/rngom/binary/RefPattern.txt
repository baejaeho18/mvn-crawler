Compiled from "RefPattern.java"
public class org.kohsuke.rngom.binary.RefPattern extends org.kohsuke.rngom.binary.Pattern {
  private org.kohsuke.rngom.binary.Pattern p;

  private org.xml.sax.Locator refLoc;

  private java.lang.String name;

  private int checkRecursionDepth;

  private boolean combineImplicit;

  private byte combineType;

  private byte replacementStatus;

  private boolean expanded;

  static final byte REPLACEMENT_KEEP;

  static final byte REPLACEMENT_REQUIRE;

  static final byte REPLACEMENT_IGNORE;

  static final byte COMBINE_NONE;

  static final byte COMBINE_CHOICE;

  static final byte COMBINE_INTERLEAVE;

  org.kohsuke.rngom.binary.RefPattern(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/kohsuke/rngom/binary/Pattern."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field checkRecursionDepth:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field combineImplicit:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field combineType:B
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field replacementStatus:B
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field expanded:Z
      29: aload_0
      30: aload_1
      31: putfield      #7                  // Field name:Ljava/lang/String;
      34: return

  org.kohsuke.rngom.binary.Pattern getPattern();
    Code:
       0: aload_0
       1: getfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
       4: areturn

  void setPattern(org.kohsuke.rngom.binary.Pattern);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
       5: return

  org.xml.sax.Locator getRefLocator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field refLoc:Lorg/xml/sax/Locator;
       4: areturn

  void setRefLocator(org.xml.sax.Locator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field refLoc:Lorg/xml/sax/Locator;
       5: return

  void checkRecursion(int) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field checkRecursionDepth:I
       4: iconst_m1
       5: if_icmpne     30
       8: aload_0
       9: iload_1
      10: putfield      #2                  // Field checkRecursionDepth:I
      13: aload_0
      14: getfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
      17: iload_1
      18: invokevirtual #10                 // Method org/kohsuke/rngom/binary/Pattern.checkRecursion:(I)V
      21: aload_0
      22: bipush        -2
      24: putfield      #2                  // Field checkRecursionDepth:I
      27: goto          62
      30: iload_1
      31: aload_0
      32: getfield      #2                  // Field checkRecursionDepth:I
      35: if_icmpne     62
      38: new           #11                 // class org/xml/sax/SAXParseException
      41: dup
      42: getstatic     #12                 // Field org/kohsuke/rngom/binary/SchemaBuilderImpl.localizer:Lorg/kohsuke/rngom/util/Localizer;
      45: ldc           #13                 // String recursive_reference
      47: aload_0
      48: getfield      #7                  // Field name:Ljava/lang/String;
      51: invokevirtual #14                 // Method org/kohsuke/rngom/util/Localizer.message:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      54: aload_0
      55: getfield      #9                  // Field refLoc:Lorg/xml/sax/Locator;
      58: invokespecial #15                 // Method org/xml/sax/SAXParseException."<init>":(Ljava/lang/String;Lorg/xml/sax/Locator;)V
      61: athrow
      62: return

  org.kohsuke.rngom.binary.Pattern expand(org.kohsuke.rngom.binary.SchemaPatternBuilder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field expanded:Z
       4: ifne          24
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
      12: aload_1
      13: invokevirtual #16                 // Method org/kohsuke/rngom/binary/Pattern.expand:(Lorg/kohsuke/rngom/binary/SchemaPatternBuilder;)Lorg/kohsuke/rngom/binary/Pattern;
      16: putfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
      19: aload_0
      20: iconst_1
      21: putfield      #6                  // Field expanded:Z
      24: aload_0
      25: getfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
      28: areturn

  boolean samePattern(org.kohsuke.rngom.binary.Pattern);
    Code:
       0: iconst_0
       1: ireturn

  public void accept(org.kohsuke.rngom.binary.visitor.PatternVisitor);
    Code:
       0: aload_0
       1: getfield      #8                  // Field p:Lorg/kohsuke/rngom/binary/Pattern;
       4: aload_1
       5: invokevirtual #17                 // Method org/kohsuke/rngom/binary/Pattern.accept:(Lorg/kohsuke/rngom/binary/visitor/PatternVisitor;)V
       8: return

  public java.lang.Object apply(org.kohsuke.rngom.binary.visitor.PatternFunction);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #18,  2           // InterfaceMethod org/kohsuke/rngom/binary/visitor/PatternFunction.caseRef:(Lorg/kohsuke/rngom/binary/RefPattern;)Ljava/lang/Object;
       7: areturn

  byte getReplacementStatus();
    Code:
       0: aload_0
       1: getfield      #5                  // Field replacementStatus:B
       4: ireturn

  void setReplacementStatus(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field replacementStatus:B
       5: return

  boolean isCombineImplicit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field combineImplicit:Z
       4: ireturn

  void setCombineImplicit();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field combineImplicit:Z
       5: return

  byte getCombineType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field combineType:B
       4: ireturn

  void setCombineType(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field combineType:B
       5: return

  java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn
}
