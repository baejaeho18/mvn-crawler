Compiled from "ViewScopeManager.java"
public class com.sun.faces.application.view.ViewScopeManager implements javax.servlet.http.HttpSessionListener,javax.faces.event.ViewMapListener {
  private static final java.util.logging.Logger LOGGER;

  public static final java.lang.String ACTIVE_VIEW_MAPS;

  public static final java.lang.String ACTIVE_VIEW_MAPS_SIZE;

  public static final java.lang.String VIEW_MAP;

  public static final java.lang.String VIEW_MAP_ID;

  public static final java.lang.String VIEW_SCOPE_MANAGER;

  private com.sun.faces.application.view.ViewScopeContextManager contextManager;

  private boolean distributable;

  public com.sun.faces.application.view.ViewScopeManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       7: astore_1
       8: aload_0
       9: new           #3                  // class com/sun/faces/application/view/ViewScopeContextManager
      12: dup
      13: invokespecial #4                  // Method com/sun/faces/application/view/ViewScopeContextManager."<init>":()V
      16: putfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      19: goto          70
      22: astore_2
      23: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      26: getstatic     #8                  // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      29: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      32: ifeq          46
      35: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      38: getstatic     #8                  // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      41: ldc           #10                 // String CDI @ViewScoped bean functionality unavailable
      43: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      46: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      49: getstatic     #12                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      52: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      55: ifeq          70
      58: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      61: getstatic     #12                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      64: ldc           #13                 // String CDI @ViewScoped manager unavailable
      66: aload_2
      67: invokevirtual #14                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      70: aload_1
      71: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
      74: invokestatic  #16                 // Method com/sun/faces/config/WebConfiguration.getInstance:(Ljavax/faces/context/ExternalContext;)Lcom/sun/faces/config/WebConfiguration;
      77: astore_2
      78: aload_0
      79: aload_2
      80: getstatic     #17                 // Field com/sun/faces/config/WebConfiguration$BooleanWebContextInitParameter.EnableDistributable:Lcom/sun/faces/config/WebConfiguration$BooleanWebContextInitParameter;
      83: invokevirtual #18                 // Method com/sun/faces/config/WebConfiguration.isOptionEnabled:(Lcom/sun/faces/config/WebConfiguration$BooleanWebContextInitParameter;)Z
      86: putfield      #19                 // Field distributable:Z
      89: return
    Exception table:
       from    to  target type
           8    19    22   Class java/lang/Throwable

  public void clear(javax.faces.context.FacesContext);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          23
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #21                 // String Clearing @ViewScoped beans from current view map
      20: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      23: aload_0
      24: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      27: ifnull        38
      30: aload_0
      31: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      34: aload_1
      35: invokevirtual #22                 // Method com/sun/faces/application/view/ViewScopeContextManager.clear:(Ljavax/faces/context/FacesContext;)V
      38: aload_0
      39: aload_1
      40: aload_1
      41: invokevirtual #23                 // Method javax/faces/context/FacesContext.getViewRoot:()Ljavax/faces/component/UIViewRoot;
      44: iconst_0
      45: invokevirtual #24                 // Method javax/faces/component/UIViewRoot.getViewMap:(Z)Ljava/util/Map;
      48: invokevirtual #25                 // Method destroyBeans:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      51: return

  public void clear(javax.faces.context.FacesContext, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          24
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #26                 // String Clearing @ViewScoped beans from view map: {0}
      20: aload_2
      21: invokevirtual #27                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      24: aload_0
      25: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      28: ifnull        40
      31: aload_0
      32: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      35: aload_1
      36: aload_2
      37: invokevirtual #28                 // Method com/sun/faces/application/view/ViewScopeContextManager.clear:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokevirtual #25                 // Method destroyBeans:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      46: return

  private void destroyBeans(com.sun.faces.application.ApplicationAssociate, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: invokeinterface #29,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          138
      21: aload_3
      22: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #33                 // class java/util/Map$Entry
      30: astore        4
      32: aload         4
      34: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: checkcast     #35                 // class java/lang/String
      42: astore        5
      44: aload         4
      46: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: astore        6
      53: aload_1
      54: ifnull        87
      57: aload_1
      58: invokevirtual #37                 // Method com/sun/faces/application/ApplicationAssociate.getBeanManager:()Lcom/sun/faces/mgbean/BeanManager;
      61: astore        7
      63: aload         7
      65: ifnull        87
      68: aload         7
      70: aload         5
      72: invokevirtual #38                 // Method com/sun/faces/mgbean/BeanManager.isManaged:(Ljava/lang/String;)Z
      75: ifeq          87
      78: aload         7
      80: aload         5
      82: aload         6
      84: invokevirtual #39                 // Method com/sun/faces/mgbean/BeanManager.destroy:(Ljava/lang/String;Ljava/lang/Object;)V
      87: goto          135
      90: astore        7
      92: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      95: getstatic     #41                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      98: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     101: ifeq          135
     104: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
     107: getstatic     #41                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     110: new           #42                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #44                 // String Error calling @PreDestroy on bean with name:
     119: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         5
     124: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: aload         7
     132: invokevirtual #14                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     135: goto          12
     138: return
    Exception table:
       from    to  target type
          53    87    90   Class java/lang/Exception

  public void destroyBeans(javax.faces.context.FacesContext, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          24
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #47                 // String Destroying @ViewScoped beans from view map: {0}
      20: aload_2
      21: invokevirtual #27                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      24: aload_1
      25: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
      28: invokestatic  #48                 // Method com/sun/faces/application/ApplicationAssociate.getInstance:(Ljavax/faces/context/ExternalContext;)Lcom/sun/faces/application/ApplicationAssociate;
      31: astore_3
      32: aload_3
      33: ifnull        42
      36: aload_0
      37: aload_3
      38: aload_2
      39: invokespecial #49                 // Method destroyBeans:(Lcom/sun/faces/application/ApplicationAssociate;Ljava/util/Map;)V
      42: return

  com.sun.faces.application.view.ViewScopeContextManager getContextManager();
    Code:
       0: aload_0
       1: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
       4: areturn

  public static com.sun.faces.application.view.ViewScopeManager getInstance(javax.faces.context.FacesContext);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       4: invokevirtual #50                 // Method javax/faces/context/ExternalContext.getApplicationMap:()Ljava/util/Map;
       7: ldc           #51                 // String com.sun.faces.application.view.viewScopeManager
       9: invokeinterface #52,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifne          39
      17: aload_0
      18: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
      21: invokevirtual #50                 // Method javax/faces/context/ExternalContext.getApplicationMap:()Ljava/util/Map;
      24: ldc           #51                 // String com.sun.faces.application.view.viewScopeManager
      26: new           #53                 // class com/sun/faces/application/view/ViewScopeManager
      29: dup
      30: invokespecial #54                 // Method "<init>":()V
      33: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
      43: invokevirtual #50                 // Method javax/faces/context/ExternalContext.getApplicationMap:()Ljava/util/Map;
      46: ldc           #51                 // String com.sun.faces.application.view.viewScopeManager
      48: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #53                 // class com/sun/faces/application/view/ViewScopeManager
      56: areturn

  public boolean isListenerForSource(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #57                 // class javax/faces/component/UIViewRoot
       4: ireturn

  public void processEvent(javax.faces.event.SystemEvent) throws javax.faces.event.AbortProcessingException;
    Code:
       0: aload_1
       1: instanceof    #58                 // class javax/faces/event/PreDestroyViewMapEvent
       4: ifeq          12
       7: aload_0
       8: aload_1
       9: invokespecial #59                 // Method processPreDestroyViewMap:(Ljavax/faces/event/SystemEvent;)V
      12: aload_1
      13: instanceof    #60                 // class javax/faces/event/PostConstructViewMapEvent
      16: ifeq          24
      19: aload_0
      20: aload_1
      21: invokespecial #61                 // Method processPostConstructViewMap:(Ljavax/faces/event/SystemEvent;)V
      24: return

  private void processPostConstructViewMap(javax.faces.event.SystemEvent);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          23
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #62                 // String Handling PostConstructViewMapEvent
      20: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      23: aload_1
      24: invokevirtual #63                 // Method javax/faces/event/SystemEvent.getSource:()Ljava/lang/Object;
      27: checkcast     #57                 // class javax/faces/component/UIViewRoot
      30: astore_2
      31: aload_2
      32: iconst_0
      33: invokevirtual #24                 // Method javax/faces/component/UIViewRoot.getViewMap:(Z)Ljava/util/Map;
      36: astore_3
      37: aload_3
      38: ifnull        404
      41: invokestatic  #2                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
      44: astore        4
      46: aload_2
      47: invokevirtual #64                 // Method javax/faces/component/UIViewRoot.isTransient:()Z
      50: ifeq          116
      53: aload         4
      55: getstatic     #65                 // Field javax/faces/application/ProjectStage.Development:Ljavax/faces/application/ProjectStage;
      58: invokevirtual #66                 // Method javax/faces/context/FacesContext.isProjectStage:(Ljavax/faces/application/ProjectStage;)Z
      61: ifeq          116
      64: new           #67                 // class javax/faces/application/FacesMessage
      67: dup
      68: getstatic     #68                 // Field javax/faces/application/FacesMessage.SEVERITY_WARN:Ljavax/faces/application/FacesMessage$Severity;
      71: ldc           #69                 // String @ViewScoped beans are not supported on stateless views
      73: ldc           #69                 // String @ViewScoped beans are not supported on stateless views
      75: invokespecial #70                 // Method javax/faces/application/FacesMessage."<init>":(Ljavax/faces/application/FacesMessage$Severity;Ljava/lang/String;Ljava/lang/String;)V
      78: astore        5
      80: aload         4
      82: aload_2
      83: aload         4
      85: invokevirtual #71                 // Method javax/faces/component/UIViewRoot.getClientId:(Ljavax/faces/context/FacesContext;)Ljava/lang/String;
      88: aload         5
      90: invokevirtual #72                 // Method javax/faces/context/FacesContext.addMessage:(Ljava/lang/String;Ljavax/faces/application/FacesMessage;)V
      93: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      96: getstatic     #41                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      99: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     102: ifeq          116
     105: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
     108: getstatic     #41                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     111: ldc           #69                 // String @ViewScoped beans are not supported on stateless views
     113: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     116: aload         4
     118: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
     121: iconst_1
     122: invokevirtual #73                 // Method javax/faces/context/ExternalContext.getSession:(Z)Ljava/lang/Object;
     125: astore        5
     127: aload         5
     129: ifnull        404
     132: aload         4
     134: invokevirtual #15                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
     137: invokevirtual #74                 // Method javax/faces/context/ExternalContext.getSessionMap:()Ljava/util/Map;
     140: astore        6
     142: aload         6
     144: ldc           #75                 // String com.sun.faces.application.view.activeViewMapsSize
     146: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     151: checkcast     #76                 // class java/lang/Integer
     154: astore        7
     156: aload         7
     158: ifnonnull     168
     161: bipush        25
     163: invokestatic  #77                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     166: astore        7
     168: aload         6
     170: ldc           #78                 // String com.sun.faces.application.view.activeViewMaps
     172: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     177: ifnonnull     205
     180: aload         6
     182: ldc           #78                 // String com.sun.faces.application.view.activeViewMaps
     184: new           #79                 // class com/sun/faces/util/LRUMap
     187: dup
     188: aload         7
     190: invokevirtual #80                 // Method java/lang/Integer.intValue:()I
     193: invokespecial #81                 // Method com/sun/faces/util/LRUMap."<init>":(I)V
     196: invokestatic  #82                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
     199: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     204: pop
     205: aload         6
     207: ldc           #78                 // String com.sun.faces.application.view.activeViewMaps
     209: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     214: checkcast     #83                 // class java/util/Map
     217: astore        8
     219: aload         8
     221: dup
     222: astore        9
     224: monitorenter
     225: invokestatic  #84                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
     228: invokevirtual #85                 // Method java/util/UUID.toString:()Ljava/lang/String;
     231: astore        10
     233: aload         8
     235: aload         10
     237: invokeinterface #52,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     242: ifeq          256
     245: invokestatic  #84                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
     248: invokevirtual #85                 // Method java/util/UUID.toString:()Ljava/lang/String;
     251: astore        10
     253: goto          233
     256: aload         8
     258: invokeinterface #86,  1           // InterfaceMethod java/util/Map.size:()I
     263: aload         7
     265: invokevirtual #80                 // Method java/lang/Integer.intValue:()I
     268: if_icmpne     315
     271: aload         8
     273: invokeinterface #87,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     278: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     283: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     288: checkcast     #35                 // class java/lang/String
     291: astore        11
     293: aload         8
     295: aload         11
     297: invokeinterface #89,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     302: checkcast     #83                 // class java/util/Map
     305: astore        12
     307: aload_0
     308: aload         4
     310: aload         12
     312: invokespecial #90                 // Method removeEldestViewMap:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
     315: aload         8
     317: aload         10
     319: aload_3
     320: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     325: pop
     326: aload_2
     327: invokevirtual #91                 // Method javax/faces/component/UIViewRoot.getTransientStateHelper:()Ljavax/faces/component/TransientStateHelper;
     330: ldc           #92                 // String com.sun.faces.application.view.viewMapId
     332: aload         10
     334: invokeinterface #93,  3           // InterfaceMethod javax/faces/component/TransientStateHelper.putTransient:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     339: pop
     340: aload_2
     341: invokevirtual #91                 // Method javax/faces/component/UIViewRoot.getTransientStateHelper:()Ljavax/faces/component/TransientStateHelper;
     344: ldc           #94                 // String com.sun.faces.application.view.viewMap
     346: aload_3
     347: invokeinterface #93,  3           // InterfaceMethod javax/faces/component/TransientStateHelper.putTransient:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     352: pop
     353: aload_0
     354: getfield      #19                 // Field distributable:Z
     357: ifeq          372
     360: aload         6
     362: ldc           #78                 // String com.sun.faces.application.view.activeViewMaps
     364: aload         8
     366: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     371: pop
     372: aload         9
     374: monitorexit
     375: goto          386
     378: astore        13
     380: aload         9
     382: monitorexit
     383: aload         13
     385: athrow
     386: aconst_null
     387: aload_0
     388: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
     391: if_acmpeq     404
     394: aload_0
     395: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
     398: aload         4
     400: aload_2
     401: invokevirtual #95                 // Method com/sun/faces/application/view/ViewScopeContextManager.fireInitializedEvent:(Ljavax/faces/context/FacesContext;Ljavax/faces/component/UIViewRoot;)V
     404: return
    Exception table:
       from    to  target type
         225   375   378   any
         378   383   378   any

  private void processPreDestroyViewMap(javax.faces.event.SystemEvent);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          23
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #96                 // String Handling PreDestroyViewMapEvent
      20: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      23: aload_1
      24: invokevirtual #63                 // Method javax/faces/event/SystemEvent.getSource:()Ljava/lang/Object;
      27: checkcast     #57                 // class javax/faces/component/UIViewRoot
      30: astore_2
      31: aload_2
      32: iconst_0
      33: invokevirtual #24                 // Method javax/faces/component/UIViewRoot.getViewMap:(Z)Ljava/util/Map;
      36: astore_3
      37: aload_3
      38: ifnull        89
      41: aload_3
      42: invokeinterface #97,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      47: ifne          89
      50: invokestatic  #2                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
      53: astore        4
      55: aload_0
      56: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      59: ifnull        82
      62: aload_0
      63: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      66: aload         4
      68: aload_3
      69: invokevirtual #28                 // Method com/sun/faces/application/view/ViewScopeContextManager.clear:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      72: aload_0
      73: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      76: aload         4
      78: aload_2
      79: invokevirtual #98                 // Method com/sun/faces/application/view/ViewScopeContextManager.fireDestroyedEvent:(Ljavax/faces/context/FacesContext;Ljavax/faces/component/UIViewRoot;)V
      82: aload_0
      83: aload         4
      85: aload_3
      86: invokevirtual #25                 // Method destroyBeans:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      89: return

  public void sessionCreated(javax.servlet.http.HttpSessionEvent);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          23
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #99                 // String Creating session for @ViewScoped beans
      20: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      23: return

  public void sessionDestroyed(javax.servlet.http.HttpSessionEvent);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          23
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #100                // String Cleaning up session for @ViewScoped beans
      20: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      23: aload_0
      24: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      27: ifnull        38
      30: aload_0
      31: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      34: aload_1
      35: invokevirtual #101                // Method com/sun/faces/application/view/ViewScopeContextManager.sessionDestroyed:(Ljavax/servlet/http/HttpSessionEvent;)V
      38: aload_1
      39: invokevirtual #102                // Method javax/servlet/http/HttpSessionEvent.getSession:()Ljavax/servlet/http/HttpSession;
      42: astore_2
      43: aload_2
      44: ldc           #78                 // String com.sun.faces.application.view.activeViewMaps
      46: invokeinterface #103,  2          // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      51: checkcast     #83                 // class java/util/Map
      54: astore_3
      55: aload_3
      56: ifnull        141
      59: aload_3
      60: invokeinterface #104,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      65: invokeinterface #105,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      70: astore        4
      72: aload_1
      73: invokevirtual #102                // Method javax/servlet/http/HttpSessionEvent.getSession:()Ljavax/servlet/http/HttpSession;
      76: invokeinterface #106,  1          // InterfaceMethod javax/servlet/http/HttpSession.getServletContext:()Ljavax/servlet/ServletContext;
      81: invokestatic  #107                // Method com/sun/faces/application/ApplicationAssociate.getInstance:(Ljavax/servlet/ServletContext;)Lcom/sun/faces/application/ApplicationAssociate;
      84: astore        5
      86: aload         4
      88: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          119
      96: aload         4
      98: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #83                 // class java/util/Map
     106: astore        6
     108: aload_0
     109: aload         5
     111: aload         6
     113: invokespecial #49                 // Method destroyBeans:(Lcom/sun/faces/application/ApplicationAssociate;Ljava/util/Map;)V
     116: goto          86
     119: aload_3
     120: invokeinterface #108,  1          // InterfaceMethod java/util/Map.clear:()V
     125: aload_2
     126: ldc           #78                 // String com.sun.faces.application.view.activeViewMaps
     128: invokeinterface #109,  2          // InterfaceMethod javax/servlet/http/HttpSession.removeAttribute:(Ljava/lang/String;)V
     133: aload_2
     134: ldc           #75                 // String com.sun.faces.application.view.activeViewMapsSize
     136: invokeinterface #109,  2          // InterfaceMethod javax/servlet/http/HttpSession.removeAttribute:(Ljava/lang/String;)V
     141: return

  private void removeEldestViewMap(javax.faces.context.FacesContext, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #9                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          24
      12: getstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #20                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #110                // String Removing eldest view map: {0}
      20: aload_2
      21: invokevirtual #27                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      24: aload_0
      25: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      28: ifnull        40
      31: aload_0
      32: getfield      #5                  // Field contextManager:Lcom/sun/faces/application/view/ViewScopeContextManager;
      35: aload_1
      36: aload_2
      37: invokevirtual #28                 // Method com/sun/faces/application/view/ViewScopeContextManager.clear:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokevirtual #25                 // Method destroyBeans:(Ljavax/faces/context/FacesContext;Ljava/util/Map;)V
      46: return

  static {};
    Code:
       0: ldc_w         #53                 // class com/sun/faces/application/view/ViewScopeManager
       3: invokevirtual #111                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #112                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: putstatic     #7                  // Field LOGGER:Ljava/util/logging/Logger;
      12: return
}
