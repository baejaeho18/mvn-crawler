Compiled from "FacetHandler.java"
public final class com.sun.faces.facelets.tag.jsf.core.FacetHandler extends com.sun.faces.facelets.tag.TagHandlerImpl implements javax.faces.view.facelets.FacetHandler {
  public static final java.lang.String KEY;

  protected final javax.faces.view.facelets.TagAttribute name;

  public com.sun.faces.facelets.tag.jsf.core.FacetHandler(javax.faces.view.facelets.TagConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/sun/faces/facelets/tag/TagHandlerImpl."<init>":(Ljavax/faces/view/facelets/TagConfig;)V
       5: aload_0
       6: aload_0
       7: ldc           #2                  // String name
       9: invokevirtual #3                  // Method getRequiredAttribute:(Ljava/lang/String;)Ljavax/faces/view/facelets/TagAttribute;
      12: putfield      #4                  // Field name:Ljavax/faces/view/facelets/TagAttribute;
      15: return

  public void apply(javax.faces.view.facelets.FaceletContext, javax.faces.component.UIComponent) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     18
       4: new           #5                  // class javax/faces/view/facelets/TagException
       7: dup
       8: aload_0
       9: getfield      #6                  // Field tag:Ljavax/faces/view/facelets/Tag;
      12: ldc           #7                  // String Parent UIComponent was null
      14: invokespecial #8                  // Method javax/faces/view/facelets/TagException."<init>":(Ljavax/faces/view/facelets/Tag;Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: invokevirtual #9                  // Method javax/faces/component/UIComponent.getAttributes:()Ljava/util/Map;
      22: ldc           #10                 // String facelets.FACET_NAME
      24: aload_0
      25: aload_1
      26: invokevirtual #11                 // Method getFacetName:(Ljavax/faces/view/facelets/FaceletContext;)Ljava/lang/String;
      29: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: getfield      #13                 // Field nextHandler:Ljavax/faces/view/facelets/FaceletHandler;
      39: aload_1
      40: aload_2
      41: invokeinterface #14,  3           // InterfaceMethod javax/faces/view/facelets/FaceletHandler.apply:(Ljavax/faces/view/facelets/FaceletContext;Ljavax/faces/component/UIComponent;)V
      46: jsr           58
      49: goto          74
      52: astore_3
      53: jsr           58
      56: aload_3
      57: athrow
      58: astore        4
      60: aload_2
      61: invokevirtual #9                  // Method javax/faces/component/UIComponent.getAttributes:()Ljava/util/Map;
      64: ldc           #10                 // String facelets.FACET_NAME
      66: invokeinterface #15,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: ret           4
      74: return
    Exception table:
       from    to  target type
          35    49    52   any
          52    56    52   any

  public java.lang.String getFacetName(javax.faces.view.facelets.FaceletContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljavax/faces/view/facelets/TagAttribute;
       4: aload_1
       5: invokevirtual #16                 // Method javax/faces/view/facelets/TagAttribute.getValue:(Ljavax/faces/view/facelets/FaceletContext;)Ljava/lang/String;
       8: areturn
}
