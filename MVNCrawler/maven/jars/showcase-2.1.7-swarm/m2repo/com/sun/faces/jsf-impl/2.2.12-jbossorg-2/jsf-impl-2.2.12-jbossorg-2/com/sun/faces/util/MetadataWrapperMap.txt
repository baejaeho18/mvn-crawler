Compiled from "MetadataWrapperMap.java"
public abstract class com.sun.faces.util.MetadataWrapperMap<K, V> implements java.util.Map<K, V> {
  private java.util.Map<K, V> wrapped;

  private java.util.Map<K, java.util.Map<java.lang.Object, java.lang.Object>> metadata;

  public com.sun.faces.util.MetadataWrapperMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field wrapped:Ljava/util/Map;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field metadata:Ljava/util/Map;
      20: return

  protected java.util.Map<K, java.util.Map<java.lang.Object, java.lang.Object>> getMetadata();
    Code:
       0: aload_0
       1: getfield      #5                  // Field metadata:Ljava/util/Map;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method onPut:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #2                  // Field wrapped:Ljava/util/Map;
      11: aload_1
      12: aload_2
      13: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  protected abstract V onPut(K, V);

  public void putAll(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrapped:Ljava/util/Map;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn
}
