Compiled from "PhaseListenerHandler.java"
final class com.sun.faces.facelets.tag.jsf.core.PhaseListenerHandler$LazyPhaseListener implements javax.faces.event.PhaseListener,java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.String type;

  private final javax.el.ValueExpression binding;

  public com.sun.faces.facelets.tag.jsf.core.PhaseListenerHandler$LazyPhaseListener(java.lang.String, javax.el.ValueExpression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      14: return

  private javax.faces.event.PhaseListener getInstance();
    Code:
       0: aconst_null
       1: astore_1
       2: invokestatic  #4                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      16: ifnull        34
      19: aload_0
      20: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      23: aload_2
      24: invokevirtual #5                  // Method javax/faces/context/FacesContext.getELContext:()Ljavax/el/ELContext;
      27: invokevirtual #6                  // Method javax/el/ValueExpression.getValue:(Ljavax/el/ELContext;)Ljava/lang/Object;
      30: checkcast     #7                  // class javax/faces/event/PhaseListener
      33: astore_1
      34: aload_1
      35: ifnonnull     93
      38: aload_0
      39: getfield      #2                  // Field type:Ljava/lang/String;
      42: ifnull        93
      45: aload_0
      46: getfield      #2                  // Field type:Ljava/lang/String;
      49: invokestatic  #8                  // Method com/sun/faces/facelets/util/ReflectionUtil.forName:(Ljava/lang/String;)Ljava/lang/Class;
      52: invokevirtual #9                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      55: checkcast     #7                  // class javax/faces/event/PhaseListener
      58: astore_1
      59: goto          74
      62: astore_3
      63: new           #11                 // class javax/faces/event/AbortProcessingException
      66: dup
      67: ldc           #12                 // String Couldn\'t Lazily instantiate PhaseListener
      69: aload_3
      70: invokespecial #13                 // Method javax/faces/event/AbortProcessingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: athrow
      74: aload_0
      75: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      78: ifnull        93
      81: aload_0
      82: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      85: aload_2
      86: invokevirtual #5                  // Method javax/faces/context/FacesContext.getELContext:()Ljavax/el/ELContext;
      89: aload_1
      90: invokevirtual #14                 // Method javax/el/ValueExpression.setValue:(Ljavax/el/ELContext;Ljava/lang/Object;)V
      93: aload_1
      94: areturn
    Exception table:
       from    to  target type
          45    59    62   Class java/lang/Exception

  public void afterPhase(javax.faces.event.PhaseEvent);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method getInstance:()Ljavax/faces/event/PhaseListener;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #16,  2           // InterfaceMethod javax/faces/event/PhaseListener.afterPhase:(Ljavax/faces/event/PhaseEvent;)V
      16: return

  public void beforePhase(javax.faces.event.PhaseEvent);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method getInstance:()Ljavax/faces/event/PhaseListener;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #17,  2           // InterfaceMethod javax/faces/event/PhaseListener.beforePhase:(Ljavax/faces/event/PhaseEvent;)V
      16: return

  public javax.faces.event.PhaseId getPhaseId();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method getInstance:()Ljavax/faces/event/PhaseListener;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #18,  1           // InterfaceMethod javax/faces/event/PhaseListener.getPhaseId:()Ljavax/faces/event/PhaseId;
      15: goto          21
      18: getstatic     #19                 // Field javax/faces/event/PhaseId.ANY_PHASE:Ljavax/faces/event/PhaseId;
      21: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #21                 // class com/sun/faces/facelets/tag/jsf/core/PhaseListenerHandler$LazyPhaseListener
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      33: ifnull        53
      36: aload_0
      37: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      40: aload_2
      41: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      44: invokevirtual #22                 // Method javax/el/ValueExpression.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #2                  // Field type:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #2                  // Field type:Ljava/lang/String;
      73: aload_2
      74: getfield      #2                  // Field type:Ljava/lang/String;
      77: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #2                  // Field type:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: iconst_1
      96: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field type:Ljava/lang/String;
      11: invokevirtual #24                 // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      27: ifnull        40
      30: aload_0
      31: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      34: invokevirtual #25                 // Method javax/el/ValueExpression.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn
}
