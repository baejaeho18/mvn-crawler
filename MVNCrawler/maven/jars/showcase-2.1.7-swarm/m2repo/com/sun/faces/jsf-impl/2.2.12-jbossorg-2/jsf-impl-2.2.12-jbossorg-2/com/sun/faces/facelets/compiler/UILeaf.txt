Compiled from "UILeaf.java"
public class com.sun.faces.facelets.compiler.UILeaf extends javax.faces.component.UIComponentBase {
  private static final java.util.Map<java.lang.String, javax.faces.component.UIComponent> facets;

  private javax.faces.component.UIComponent parent;

  private boolean returnLocalTransient;

  public com.sun.faces.facelets.compiler.UILeaf();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/faces/component/UIComponentBase."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field returnLocalTransient:Z
       9: return

  public javax.faces.el.ValueBinding getValueBinding(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public void setValueBinding(java.lang.String, javax.faces.el.ValueBinding);
    Code:
       0: return

  public javax.el.ValueExpression getValueExpression(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public void setValueExpression(java.lang.String, javax.el.ValueExpression);
    Code:
       0: return

  public java.lang.String getFamily();
    Code:
       0: ldc           #3                  // String facelets.LiteralText
       2: areturn

  public javax.faces.component.UIComponent getParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parent:Ljavax/faces/component/UIComponent;
       4: areturn

  public void setParent(javax.faces.component.UIComponent);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field parent:Ljavax/faces/component/UIComponent;
       5: return

  public java.lang.String getRendererType();
    Code:
       0: aconst_null
       1: areturn

  public void setRendererType(java.lang.String);
    Code:
       0: return

  public boolean getRendersChildren();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.List<javax.faces.component.UIComponent> getChildren();
    Code:
       0: invokestatic  #5                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public int getChildCount();
    Code:
       0: iconst_0
       1: ireturn

  public javax.faces.component.UIComponent findComponent(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map<java.lang.String, javax.faces.component.UIComponent> getFacets();
    Code:
       0: getstatic     #6                  // Field facets:Ljava/util/Map;
       3: areturn

  public int getFacetCount();
    Code:
       0: iconst_0
       1: ireturn

  public javax.faces.component.UIComponent getFacet(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Iterator<javax.faces.component.UIComponent> getFacetsAndChildren();
    Code:
       0: invokestatic  #5                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: areturn

  public void broadcast(javax.faces.event.FacesEvent) throws javax.faces.event.AbortProcessingException;
    Code:
       0: return

  public void decode(javax.faces.context.FacesContext);
    Code:
       0: return

  public void encodeBegin(javax.faces.context.FacesContext) throws java.io.IOException;
    Code:
       0: return

  public void encodeChildren(javax.faces.context.FacesContext) throws java.io.IOException;
    Code:
       0: return

  public void encodeEnd(javax.faces.context.FacesContext) throws java.io.IOException;
    Code:
       0: return

  public void encodeAll(javax.faces.context.FacesContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method encodeBegin:(Ljavax/faces/context/FacesContext;)V
       5: return

  protected void addFacesListener(javax.faces.event.FacesListener);
    Code:
       0: return

  protected javax.faces.event.FacesListener[] getFacesListeners(java.lang.Class);
    Code:
       0: aconst_null
       1: areturn

  protected void removeFacesListener(javax.faces.event.FacesListener);
    Code:
       0: return

  public void queueEvent(javax.faces.event.FacesEvent);
    Code:
       0: return

  public void processDecodes(javax.faces.context.FacesContext);
    Code:
       0: return

  public void processValidators(javax.faces.context.FacesContext);
    Code:
       0: return

  public void processUpdates(javax.faces.context.FacesContext);
    Code:
       0: return

  protected javax.faces.context.FacesContext getFacesContext();
    Code:
       0: invokestatic  #9                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       3: areturn

  protected javax.faces.render.Renderer getRenderer(javax.faces.context.FacesContext);
    Code:
       0: aconst_null
       1: areturn

  public boolean isTransient();
    Code:
       0: aload_0
       1: getfield      #2                  // Field returnLocalTransient:Z
       4: ifne          14
       7: aload_0
       8: invokespecial #10                 // Method javax/faces/component/UIComponentBase.isTransient:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void setTransient(boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field returnLocalTransient:Z
       5: aload_0
       6: iload_1
       7: invokespecial #11                 // Method javax/faces/component/UIComponentBase.setTransient:(Z)V
      10: return

  static {};
    Code:
       0: new           #12                 // class com/sun/faces/facelets/compiler/UILeaf$1
       3: dup
       4: iconst_0
       5: fconst_1
       6: invokespecial #13                 // Method com/sun/faces/facelets/compiler/UILeaf$1."<init>":(IF)V
       9: putstatic     #6                  // Field facets:Ljava/util/Map;
      12: return
}
