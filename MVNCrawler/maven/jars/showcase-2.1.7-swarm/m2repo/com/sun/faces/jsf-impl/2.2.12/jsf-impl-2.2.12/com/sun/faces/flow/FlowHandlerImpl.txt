Compiled from "FlowHandlerImpl.java"
public class com.sun.faces.flow.FlowHandlerImpl extends javax.faces.flow.FlowHandler {
  public static final java.lang.String ABANDONED_FLOW;

  private boolean flowFeatureIsEnabled;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, javax.faces.flow.Flow>> flows;

  private final java.util.Map<java.lang.String, java.util.List<javax.faces.flow.Flow>> flowsByFlowId;

  public static final java.lang.String FLOW_RETURN_DEPTH_PARAM_NAME;

  static final boolean $assertionsDisabled;

  public com.sun.faces.flow.FlowHandlerImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/faces/flow/FlowHandler."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field flowFeatureIsEnabled:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field flows:Ljava/util/Map;
      20: aload_0
      21: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      24: dup
      25: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      28: putfield      #6                  // Field flowsByFlowId:Ljava/util/Map;
      31: return

  public java.util.Map<java.lang.Object, java.lang.Object> getCurrentFlowScope();
    Code:
       0: invokestatic  #7                  // Method com/sun/faces/flow/FlowCDIContext.getCurrentFlowScopeAndUpdateSession:()Ljava/util/Map;
       3: areturn

  public javax.faces.flow.Flow getFlow(javax.faces.context.FacesContext, java.lang.String, java.lang.String);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: ldc           #10                 // String definingDocumentId
       8: aload_2
       9: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      12: ldc           #11                 // String id
      14: aload_3
      15: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      18: aconst_null
      19: astore        4
      21: aload_0
      22: getfield      #5                  // Field flows:Ljava/util/Map;
      25: aload_2
      26: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #13                 // class java/util/Map
      34: astore        5
      36: aconst_null
      37: aload         5
      39: if_acmpeq     55
      42: aload         5
      44: aload_3
      45: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #14                 // class javax/faces/flow/Flow
      53: astore        4
      55: aload         4
      57: areturn

  public void addFlow(javax.faces.context.FacesContext, javax.faces.flow.Flow);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: ldc           #15                 // String toAdd
       8: aload_2
       9: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_2
      13: invokevirtual #16                 // Method javax/faces/flow/Flow.getId:()Ljava/lang/String;
      16: astore_3
      17: aconst_null
      18: aload_3
      19: if_acmpeq     30
      22: iconst_0
      23: aload_3
      24: invokevirtual #17                 // Method java/lang/String.length:()I
      27: if_icmpne     40
      30: new           #18                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #19                 // String The id of the flow may not be null or zero-length.
      36: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: invokevirtual #21                 // Method javax/faces/flow/Flow.getDefiningDocumentId:()Ljava/lang/String;
      44: astore        4
      46: aconst_null
      47: aload         4
      49: if_acmpne     62
      52: new           #18                 // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #22                 // String The definingDocumentId of the flow may not be null.
      58: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: getfield      #5                  // Field flows:Ljava/util/Map;
      66: aload         4
      68: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #13                 // class java/util/Map
      76: astore        5
      78: aconst_null
      79: aload         5
      81: if_acmpne     109
      84: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      87: dup
      88: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      91: astore        5
      93: aload_0
      94: getfield      #5                  // Field flows:Ljava/util/Map;
      97: aload_2
      98: invokevirtual #21                 // Method javax/faces/flow/Flow.getDefiningDocumentId:()Ljava/lang/String;
     101: aload         5
     103: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: aload         5
     111: aload_3
     112: aload_2
     113: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     118: checkcast     #14                 // class javax/faces/flow/Flow
     121: astore        6
     123: aconst_null
     124: aload         6
     126: if_acmpeq     159
     129: ldc           #24                 // String Flow with id \"{0}\" and definingDocumentId \"{1}\" already exists.
     131: iconst_2
     132: anewarray     #25                 // class java/lang/Object
     135: dup
     136: iconst_0
     137: aload_3
     138: aastore
     139: dup
     140: iconst_1
     141: aload         4
     143: aastore
     144: invokestatic  #26                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     147: astore        7
     149: new           #27                 // class java/lang/IllegalStateException
     152: dup
     153: aload         7
     155: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: aload_0
     160: getfield      #6                  // Field flowsByFlowId:Ljava/util/Map;
     163: aload_3
     164: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     169: checkcast     #29                 // class java/util/List
     172: astore        7
     174: aconst_null
     175: aload         7
     177: if_acmpne     202
     180: new           #30                 // class java/util/concurrent/CopyOnWriteArrayList
     183: dup
     184: invokespecial #31                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
     187: astore        7
     189: aload_0
     190: getfield      #6                  // Field flowsByFlowId:Ljava/util/Map;
     193: aload_3
     194: aload         7
     196: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     201: pop
     202: aload         7
     204: aload_2
     205: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     210: pop
     211: aload_1
     212: invokevirtual #33                 // Method javax/faces/context/FacesContext.getApplication:()Ljavax/faces/application/Application;
     215: invokevirtual #34                 // Method javax/faces/application/Application.getNavigationHandler:()Ljavax/faces/application/NavigationHandler;
     218: astore        8
     220: aload         8
     222: instanceof    #35                 // class javax/faces/application/ConfigurableNavigationHandler
     225: ifeq          238
     228: aload         8
     230: checkcast     #35                 // class javax/faces/application/ConfigurableNavigationHandler
     233: aload_1
     234: aload_2
     235: invokevirtual #36                 // Method javax/faces/application/ConfigurableNavigationHandler.inspectFlow:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;)V
     238: aload_0
     239: iconst_1
     240: putfield      #2                  // Field flowFeatureIsEnabled:Z
     243: return

  public boolean isActive(javax.faces.context.FacesContext, java.lang.String, java.lang.String);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: ldc           #10                 // String definingDocumentId
       8: aload_2
       9: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      12: ldc           #11                 // String id
      14: aload_3
      15: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      18: iconst_0
      19: istore        4
      21: aload_1
      22: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      25: astore        5
      27: aload         5
      29: invokevirtual #38                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.iterator:()Ljava/util/Iterator;
      32: astore        6
      34: aload         6
      36: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          89
      44: aload         6
      46: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #14                 // class javax/faces/flow/Flow
      54: astore        7
      56: aload_3
      57: aload         7
      59: invokevirtual #16                 // Method javax/faces/flow/Flow.getId:()Ljava/lang/String;
      62: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifeq          86
      68: aload_2
      69: aload         7
      71: invokevirtual #21                 // Method javax/faces/flow/Flow.getDefiningDocumentId:()Ljava/lang/String;
      74: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          86
      80: iconst_1
      81: istore        4
      83: goto          89
      86: goto          34
      89: iload         4
      91: ireturn

  public javax.faces.flow.Flow getCurrentFlow(javax.faces.context.FacesContext);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: getfield      #2                  // Field flowFeatureIsEnabled:Z
      10: ifne          15
      13: aconst_null
      14: areturn
      15: aconst_null
      16: astore_2
      17: aconst_null
      18: aload_1
      19: invokevirtual #42                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
      22: iconst_0
      23: invokevirtual #43                 // Method javax/faces/context/ExternalContext.getSession:(Z)Ljava/lang/Object;
      26: if_acmpne     31
      29: aconst_null
      30: areturn
      31: aload_1
      32: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      35: astore_3
      36: aload_3
      37: invokevirtual #44                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.getReturnDepth:()I
      40: istore        4
      42: aload_3
      43: invokevirtual #45                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.size:()I
      46: iload         4
      48: if_icmpgt     53
      51: aconst_null
      52: areturn
      53: iconst_0
      54: iload         4
      56: if_icmpge     110
      59: aload_3
      60: invokevirtual #46                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.iterator:()Ljava/util/Iterator;
      63: astore        5
      65: iconst_0
      66: istore        6
      68: aload         5
      70: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: pop
      76: aload         5
      78: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          107
      86: aload         5
      88: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #14                 // class javax/faces/flow/Flow
      96: astore_2
      97: iinc          6, 1
     100: iload         6
     102: iload         4
     104: if_icmplt     86
     107: goto          121
     110: aload_1
     111: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
     114: invokevirtual #47                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.peekFirst:()Ljava/lang/Object;
     117: checkcast     #14                 // class javax/faces/flow/Flow
     120: astore_2
     121: aload_2
     122: areturn

  public java.lang.String getLastDisplayedViewId(javax.faces.context.FacesContext);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aconst_null
       7: astore_2
       8: aload_1
       9: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      12: astore_3
      13: aload_3
      14: invokevirtual #48                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.peekLastDisplayedViewId:()Ljava/lang/String;
      17: astore_2
      18: aload_2
      19: areturn

  public int getAndClearReturnModeDepth(javax.faces.context.FacesContext);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
       6: astore_3
       7: aload_3
       8: aload_1
       9: invokestatic  #49                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.access$000:(Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;Ljavax/faces/context/FacesContext;)I
      12: istore_2
      13: iload_2
      14: ireturn

  public void pushReturnMode(javax.faces.context.FacesContext);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_1
       7: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      10: astore_2
      11: aload_2
      12: invokevirtual #50                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.pushReturnMode:()V
      15: return

  public void popReturnMode(javax.faces.context.FacesContext);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_1
       7: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      10: astore_2
      11: aload_2
      12: invokevirtual #51                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.popReturnMode:()V
      15: return

  public void transition(javax.faces.context.FacesContext, javax.faces.flow.Flow, javax.faces.flow.Flow, javax.faces.flow.FlowCallNode, java.lang.String);
    Code:
       0: ldc           #8                  // String context
       2: aload_1
       3: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: ldc           #52                 // String toViewId
       8: aload         5
      10: invokestatic  #9                  // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #2                  // Field flowFeatureIsEnabled:Z
      17: ifne          21
      20: return
      21: aload_0
      22: aload_2
      23: aload_3
      24: invokespecial #53                 // Method flowsEqual:(Ljavax/faces/flow/Flow;Ljavax/faces/flow/Flow;)Z
      27: ifne          239
      30: aconst_null
      31: astore        6
      33: aconst_null
      34: aload         4
      36: if_acmpeq     196
      39: aload         4
      41: invokevirtual #54                 // Method javax/faces/flow/FlowCallNode.getOutboundParameters:()Ljava/util/Map;
      44: astore        7
      46: aload_3
      47: invokevirtual #55                 // Method javax/faces/flow/Flow.getInboundParameters:()Ljava/util/Map;
      50: astore        8
      52: aconst_null
      53: aload         7
      55: if_acmpeq     196
      58: aload         7
      60: invokeinterface #56,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      65: ifne          196
      68: aconst_null
      69: aload         8
      71: if_acmpeq     196
      74: aload         8
      76: invokeinterface #56,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      81: ifne          196
      84: aload_1
      85: invokevirtual #57                 // Method javax/faces/context/FacesContext.getELContext:()Ljavax/el/ELContext;
      88: astore        9
      90: aload         7
      92: invokeinterface #58,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      97: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     102: astore        11
     104: aload         11
     106: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          196
     114: aload         11
     116: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #60                 // class java/util/Map$Entry
     124: astore        12
     126: aload         12
     128: invokeinterface #61,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     133: checkcast     #62                 // class java/lang/String
     136: astore        10
     138: aload         8
     140: aload         10
     142: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     147: ifeq          193
     150: aconst_null
     151: aload         6
     153: if_acmpne     165
     156: new           #64                 // class java/util/HashMap
     159: dup
     160: invokespecial #65                 // Method java/util/HashMap."<init>":()V
     163: astore        6
     165: aload         6
     167: aload         10
     169: aload         12
     171: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     176: checkcast     #67                 // class javax/faces/flow/Parameter
     179: invokevirtual #68                 // Method javax/faces/flow/Parameter.getValue:()Ljavax/el/ValueExpression;
     182: aload         9
     184: invokevirtual #69                 // Method javax/el/ValueExpression.getValue:(Ljavax/el/ELContext;)Ljava/lang/Object;
     187: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     192: pop
     193: goto          104
     196: aload_0
     197: aload_1
     198: aload_2
     199: aload_3
     200: invokespecial #70                 // Method performPops:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;Ljavax/faces/flow/Flow;)V
     203: aconst_null
     204: aload_3
     205: if_acmpeq     231
     208: aload_3
     209: getstatic     #71                 // Field com/sun/faces/flow/FlowImpl.ABANDONED_FLOW:Ljavax/faces/flow/Flow;
     212: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     215: ifne          231
     218: aload_0
     219: aload_1
     220: aload_3
     221: aload         5
     223: aload         6
     225: invokespecial #73                 // Method pushFlow:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;Ljava/lang/String;Ljava/util/Map;)V
     228: goto          239
     231: aload_0
     232: aload_1
     233: aload_3
     234: aload         6
     236: invokespecial #74                 // Method assignInboundParameters:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;Ljava/util/Map;)V
     239: return

  private void assignInboundParameters(javax.faces.context.FacesContext, javax.faces.flow.Flow, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aconst_null
       1: aload_3
       2: if_acmpeq     124
       5: aload_2
       6: invokevirtual #55                 // Method javax/faces/flow/Flow.getInboundParameters:()Ljava/util/Map;
       9: astore        4
      11: aload_1
      12: invokevirtual #57                 // Method javax/faces/context/FacesContext.getELContext:()Ljavax/el/ELContext;
      15: astore        5
      17: aload_3
      18: invokeinterface #58,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore        8
      30: aload         8
      32: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          124
      40: aload         8
      42: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #60                 // class java/util/Map$Entry
      50: astore        9
      52: aload         9
      54: invokeinterface #61,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #62                 // class java/lang/String
      62: astore        6
      64: getstatic     #75                 // Field $assertionsDisabled:Z
      67: ifne          90
      70: aload         4
      72: aload         6
      74: invokeinterface #63,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      79: ifne          90
      82: new           #76                 // class java/lang/AssertionError
      85: dup
      86: invokespecial #77                 // Method java/lang/AssertionError."<init>":()V
      89: athrow
      90: aload         4
      92: aload         6
      94: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #67                 // class javax/faces/flow/Parameter
     102: invokevirtual #68                 // Method javax/faces/flow/Parameter.getValue:()Ljavax/el/ValueExpression;
     105: astore        7
     107: aload         7
     109: aload         5
     111: aload         9
     113: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     118: invokevirtual #78                 // Method javax/el/ValueExpression.setValue:(Ljavax/el/ELContext;Ljava/lang/Object;)V
     121: goto          30
     124: return

  public void clientWindowTransition(javax.faces.context.FacesContext);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       4: invokevirtual #79                 // Method javax/faces/context/ExternalContext.getRequestParameterMap:()Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: ldc           #80                 // String jftfdi
      11: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #62                 // class java/lang/String
      19: astore_3
      20: aload_2
      21: ldc           #81                 // String jffi
      23: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #62                 // class java/lang/String
      31: astore        4
      33: aconst_null
      34: aload_3
      35: if_acmpeq     167
      38: aload_1
      39: invokevirtual #33                 // Method javax/faces/context/FacesContext.getApplication:()Ljavax/faces/application/Application;
      42: invokevirtual #82                 // Method javax/faces/application/Application.getFlowHandler:()Ljavax/faces/flow/FlowHandler;
      45: astore        5
      47: aload         5
      49: aload_1
      50: invokevirtual #83                 // Method javax/faces/flow/FlowHandler.getCurrentFlow:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
      53: astore        6
      55: aconst_null
      56: astore        7
      58: aconst_null
      59: astore        8
      61: aconst_null
      62: aload         4
      64: if_acmpeq     111
      67: ldc           #84                 // String javax.faces.flow.NullFlow
      69: aload_3
      70: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifne          111
      76: aload         5
      78: aload_1
      79: aload_3
      80: aload         4
      82: invokevirtual #85                 // Method javax/faces/flow/FlowHandler.getFlow:(Ljavax/faces/context/FacesContext;Ljava/lang/String;Ljava/lang/String;)Ljavax/faces/flow/Flow;
      85: astore        7
      87: aconst_null
      88: aload         7
      90: if_acmpeq     148
      93: aconst_null
      94: aload         6
      96: if_acmpeq     148
      99: aload         6
     101: aload         7
     103: invokevirtual #86                 // Method javax/faces/flow/Flow.getFlowCall:(Ljavax/faces/flow/Flow;)Ljavax/faces/flow/FlowCallNode;
     106: astore        8
     108: goto          148
     111: aload_2
     112: ldc           #87                 // String jffrd
     114: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     119: checkcast     #62                 // class java/lang/String
     122: astore        9
     124: aload         9
     126: invokestatic  #88                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     129: invokevirtual #89                 // Method java/lang/Integer.intValue:()I
     132: istore        10
     134: aload_1
     135: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
     138: astore        11
     140: aload         11
     142: aload_1
     143: iload         10
     145: invokestatic  #90                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.access$100:(Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;Ljavax/faces/context/FacesContext;I)V
     148: aload         5
     150: aload_1
     151: aload         6
     153: aload         7
     155: aload         8
     157: aload_1
     158: invokevirtual #91                 // Method javax/faces/context/FacesContext.getViewRoot:()Ljavax/faces/component/UIViewRoot;
     161: invokevirtual #92                 // Method javax/faces/component/UIViewRoot.getViewId:()Ljava/lang/String;
     164: invokevirtual #93                 // Method javax/faces/flow/FlowHandler.transition:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;Ljavax/faces/flow/Flow;Ljavax/faces/flow/FlowCallNode;Ljava/lang/String;)V
     167: return

  private void performPops(javax.faces.context.FacesContext, javax.faces.flow.Flow, javax.faces.flow.Flow);
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpne     29
       5: getstatic     #75                 // Field $assertionsDisabled:Z
       8: ifne          28
      11: aconst_null
      12: aload_0
      13: aload_1
      14: invokespecial #94                 // Method peekFlow:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
      17: if_acmpeq     28
      20: new           #76                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #77                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: return
      29: aconst_null
      30: aload_3
      31: if_acmpne     71
      34: aload_1
      35: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      38: astore        4
      40: aload         4
      42: aload_1
      43: invokestatic  #49                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.access$000:(Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;Ljavax/faces/context/FacesContext;)I
      46: istore        5
      48: iconst_0
      49: istore        6
      51: iload         6
      53: iload         5
      55: if_icmpge     70
      58: aload_0
      59: aload_1
      60: invokespecial #95                 // Method popFlow:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
      63: pop
      64: iinc          6, 1
      67: goto          51
      70: return
      71: getstatic     #71                 // Field com/sun/faces/flow/FlowImpl.ABANDONED_FLOW:Ljavax/faces/flow/Flow;
      74: aload_3
      75: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          117
      81: aload_1
      82: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      85: astore        4
      87: aload         4
      89: invokevirtual #45                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.size:()I
      92: istore        5
      94: iconst_0
      95: istore        6
      97: iload         6
      99: iload         5
     101: if_icmpge     116
     104: aload_0
     105: aload_1
     106: invokespecial #95                 // Method popFlow:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
     109: pop
     110: iinc          6, 1
     113: goto          97
     116: return
     117: aconst_null
     118: aload_2
     119: aload_3
     120: invokevirtual #86                 // Method javax/faces/flow/Flow.getFlowCall:(Ljavax/faces/flow/Flow;)Ljavax/faces/flow/FlowCallNode;
     123: if_acmpne     132
     126: aload_0
     127: aload_1
     128: invokespecial #95                 // Method popFlow:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
     131: pop
     132: return

  private boolean flowsEqual(javax.faces.flow.Flow, javax.faces.flow.Flow);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: aload_2
       4: if_acmpne     12
       7: iconst_1
       8: istore_3
       9: goto          33
      12: aconst_null
      13: aload_1
      14: if_acmpeq     22
      17: aconst_null
      18: aload_2
      19: if_acmpne     27
      22: iconst_0
      23: istore_3
      24: goto          33
      27: aload_1
      28: aload_2
      29: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: istore_3
      33: iload_3
      34: ireturn

  private void pushFlow(javax.faces.context.FacesContext, javax.faces.flow.Flow, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
       4: astore        5
       6: aload         5
       8: aload_2
       9: aload_3
      10: invokevirtual #96                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.addFirst:(Ljava/lang/Object;Ljava/lang/String;)V
      13: invokestatic  #97                 // Method com/sun/faces/flow/FlowCDIContext.flowEntered:()V
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload         4
      21: invokespecial #74                 // Method assignInboundParameters:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;Ljava/util/Map;)V
      24: aload_2
      25: invokevirtual #98                 // Method javax/faces/flow/Flow.getInitializer:()Ljavax/el/MethodExpression;
      28: astore        6
      30: aconst_null
      31: aload         6
      33: if_acmpeq     47
      36: aload         6
      38: aload_1
      39: invokevirtual #57                 // Method javax/faces/context/FacesContext.getELContext:()Ljavax/el/ELContext;
      42: aconst_null
      43: invokevirtual #99                 // Method javax/el/MethodExpression.invoke:(Ljavax/el/ELContext;[Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: aload_1
      49: aload         5
      51: invokespecial #100                // Method forceSessionUpdateForFlowStack:(Ljavax/faces/context/FacesContext;Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;)V
      54: return

  private javax.faces.flow.Flow peekFlow(javax.faces.context.FacesContext);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
       4: astore_2
       5: aload_2
       6: invokevirtual #47                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.peekFirst:()Ljava/lang/Object;
       9: checkcast     #14                 // class javax/faces/flow/Flow
      12: areturn

  private javax.faces.flow.Flow popFlow(javax.faces.context.FacesContext);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
       4: astore_2
       5: aload_0
       6: aload_1
       7: invokespecial #94                 // Method peekFlow:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
      10: astore_3
      11: aconst_null
      12: aload_3
      13: if_acmpeq     26
      16: aload_0
      17: aload_1
      18: aload_3
      19: aload_2
      20: invokevirtual #45                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.size:()I
      23: invokespecial #101                // Method callFinalizer:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;I)V
      26: aload_2
      27: invokevirtual #102                // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.pollFirst:()Ljava/lang/Object;
      30: checkcast     #14                 // class javax/faces/flow/Flow
      33: astore        4
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #100                // Method forceSessionUpdateForFlowStack:(Ljavax/faces/context/FacesContext;Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;)V
      41: aload         4
      43: areturn

  private void callFinalizer(javax.faces.context.FacesContext, javax.faces.flow.Flow, int);
    Code:
       0: aload_2
       1: invokevirtual #103                // Method javax/faces/flow/Flow.getFinalizer:()Ljavax/el/MethodExpression;
       4: astore        4
       6: aconst_null
       7: aload         4
       9: if_acmpeq     23
      12: aload         4
      14: aload_1
      15: invokevirtual #57                 // Method javax/faces/context/FacesContext.getELContext:()Ljavax/el/ELContext;
      18: aconst_null
      19: invokevirtual #99                 // Method javax/el/MethodExpression.invoke:(Ljavax/el/ELContext;[Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_2
      24: iload_3
      25: invokestatic  #104                // Method com/sun/faces/flow/FlowCDIContext.flowExited:(Ljavax/faces/flow/Flow;I)V
      28: return

  static com.sun.faces.flow.FlowHandlerImpl$FlowDeque<javax.faces.flow.Flow> getFlowStack(javax.faces.context.FacesContext);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #42                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       6: astore_2
       7: new           #105                // class java/lang/StringBuilder
      10: dup
      11: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      14: aload_2
      15: invokevirtual #107                // Method javax/faces/context/ExternalContext.getClientWindow:()Ljavax/faces/lifecycle/ClientWindow;
      18: invokevirtual #108                // Method javax/faces/lifecycle/ClientWindow.getId:()Ljava/lang/String;
      21: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #110                // String _flowStack
      26: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: astore_3
      33: aload_2
      34: invokevirtual #112                // Method javax/faces/context/ExternalContext.getSessionMap:()Ljava/util/Map;
      37: astore        4
      39: aload         4
      41: aload_3
      42: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #113                // class com/sun/faces/flow/FlowHandlerImpl$FlowDeque
      50: astore_1
      51: aconst_null
      52: aload_1
      53: if_acmpne     75
      56: new           #113                // class com/sun/faces/flow/FlowHandlerImpl$FlowDeque
      59: dup
      60: aload_3
      61: invokespecial #114                // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque."<init>":(Ljava/lang/String;)V
      64: astore_1
      65: aload         4
      67: aload_3
      68: aload_1
      69: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload_1
      76: areturn

  private void forceSessionUpdateForFlowStack(javax.faces.context.FacesContext, com.sun.faces.flow.FlowHandlerImpl$FlowDeque<javax.faces.flow.Flow>);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       4: astore_3
       5: aload_3
       6: invokevirtual #112                // Method javax/faces/context/ExternalContext.getSessionMap:()Ljava/util/Map;
       9: astore        4
      11: aload         4
      13: aload_2
      14: invokevirtual #115                // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.getSessionKey:()Ljava/lang/String;
      17: aload_2
      18: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  static {};
    Code:
       0: ldc_w         #116                // class com/sun/faces/flow/FlowHandlerImpl
       3: invokevirtual #117                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #75                 // Field $assertionsDisabled:Z
      17: return
}
