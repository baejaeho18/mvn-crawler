Compiled from "FlowHandlerImpl.java"
class com.sun.faces.flow.FlowHandlerImpl$FlowDeque<E> implements java.lang.Iterable<E>, java.io.Serializable {
  private static final long serialVersionUID;

  private int returnDepth;

  private java.util.ArrayDeque<E> data;

  private java.util.ArrayDeque<com.sun.faces.flow.FlowHandlerImpl$FlowDeque$RideAlong> rideAlong;

  private final java.lang.String sessionKey;

  public com.sun.faces.flow.FlowHandlerImpl$FlowDeque(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #6                  // Field data:Ljava/util/ArrayDeque;
      15: aload_0
      16: new           #4                  // class java/util/ArrayDeque
      19: dup
      20: invokespecial #5                  // Method java/util/ArrayDeque."<init>":()V
      23: putfield      #7                  // Field rideAlong:Ljava/util/ArrayDeque;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field sessionKey:Ljava/lang/String;
      31: return

  public java.lang.String getSessionKey();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionKey:Ljava/lang/String;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
       4: invokevirtual #9                  // Method java/util/ArrayDeque.size:()I
       7: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
       4: invokevirtual #10                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
       7: areturn

  public void addFirst(E, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rideAlong:Ljava/util/ArrayDeque;
       4: new           #11                 // class com/sun/faces/flow/FlowHandlerImpl$FlowDeque$RideAlong
       7: dup
       8: aload_2
       9: invokespecial #12                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque$RideAlong."<init>":(Ljava/lang/String;)V
      12: invokevirtual #13                 // Method java/util/ArrayDeque.addFirst:(Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
      19: aload_1
      20: invokevirtual #13                 // Method java/util/ArrayDeque.addFirst:(Ljava/lang/Object;)V
      23: return

  public E pollFirst();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rideAlong:Ljava/util/ArrayDeque;
       4: invokevirtual #14                 // Method java/util/ArrayDeque.pollFirst:()Ljava/lang/Object;
       7: pop
       8: aload_0
       9: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
      12: invokevirtual #14                 // Method java/util/ArrayDeque.pollFirst:()Ljava/lang/Object;
      15: areturn

  public int getCurrentFlowDepth();
    Code:
       0: aload_0
       1: getfield      #15                 // Field returnDepth:I
       4: istore_1
       5: aload_0
       6: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
       9: invokevirtual #9                  // Method java/util/ArrayDeque.size:()I
      12: iload_1
      13: if_icmpgt     18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
      22: invokevirtual #9                  // Method java/util/ArrayDeque.size:()I
      25: istore_2
      26: iconst_0
      27: iload_1
      28: if_icmpge     73
      31: aload_0
      32: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
      35: invokevirtual #10                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
      38: astore_3
      39: iconst_0
      40: istore        4
      42: aload_3
      43: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          73
      51: iload         4
      53: iload_1
      54: if_icmpge     73
      57: aload_3
      58: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: pop
      64: iinc          2, -1
      67: iinc          4, 1
      70: goto          42
      73: iload_2
      74: ireturn

  public E peekFirst();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:Ljava/util/ArrayDeque;
       4: invokevirtual #18                 // Method java/util/ArrayDeque.peekFirst:()Ljava/lang/Object;
       7: areturn

  public java.lang.String peekLastDisplayedViewId();
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: invokevirtual #19                 // Method getReturnDepth:()I
       8: istore_3
       9: iconst_0
      10: iload_3
      11: if_icmpge     67
      14: aload_0
      15: getfield      #7                  // Field rideAlong:Ljava/util/ArrayDeque;
      18: invokevirtual #10                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: pop
      31: iconst_0
      32: istore        5
      34: aload         4
      36: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          64
      44: aload         4
      46: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #11                 // class com/sun/faces/flow/FlowHandlerImpl$FlowDeque$RideAlong
      54: astore_2
      55: iinc          5, 1
      58: iload         5
      60: iload_3
      61: if_icmplt     44
      64: goto          78
      67: aload_0
      68: getfield      #7                  // Field rideAlong:Ljava/util/ArrayDeque;
      71: invokevirtual #18                 // Method java/util/ArrayDeque.peekFirst:()Ljava/lang/Object;
      74: checkcast     #11                 // class com/sun/faces/flow/FlowHandlerImpl$FlowDeque$RideAlong
      77: astore_2
      78: aconst_null
      79: aload_2
      80: if_acmpeq     88
      83: aload_2
      84: getfield      #20                 // Field com/sun/faces/flow/FlowHandlerImpl$FlowDeque$RideAlong.lastDisplayedViewId:Ljava/lang/String;
      87: astore_1
      88: aload_1
      89: areturn

  public int getReturnDepth();
    Code:
       0: aload_0
       1: getfield      #15                 // Field returnDepth:I
       4: ireturn

  private void setMaxReturnDepth(javax.faces.context.FacesContext, int);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method javax/faces/context/FacesContext.getAttributes:()Ljava/util/Map;
       4: astore_3
       5: aload_3
       6: ldc           #22                 // String jffrd
       8: iload_2
       9: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  private int getAndClearMaxReturnDepth(javax.faces.context.FacesContext);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method javax/faces/context/FacesContext.getAttributes:()Ljava/util/Map;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_2
       8: ldc           #22                 // String jffrd
      10: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          33
      18: aload_2
      19: ldc           #22                 // String jffrd
      21: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #27                 // class java/lang/Integer
      29: invokevirtual #28                 // Method java/lang/Integer.intValue:()I
      32: istore_3
      33: iload_3
      34: ireturn

  private void incrementMaxReturnDepth();
    Code:
       0: invokestatic  #29                 // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       3: astore_1
       4: aload_1
       5: invokevirtual #21                 // Method javax/faces/context/FacesContext.getAttributes:()Ljava/util/Map;
       8: astore_2
       9: aload_2
      10: ldc           #22                 // String jffrd
      12: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifne          36
      20: aload_2
      21: ldc           #22                 // String jffrd
      23: iconst_1
      24: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: goto          66
      36: aload_2
      37: ldc           #22                 // String jffrd
      39: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #27                 // class java/lang/Integer
      47: astore_3
      48: aload_2
      49: ldc           #22                 // String jffrd
      51: aload_3
      52: invokevirtual #28                 // Method java/lang/Integer.intValue:()I
      55: iconst_1
      56: iadd
      57: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: return

  public void pushReturnMode();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method incrementMaxReturnDepth:()V
       4: aload_0
       5: dup
       6: getfield      #15                 // Field returnDepth:I
       9: iconst_1
      10: iadd
      11: putfield      #15                 // Field returnDepth:I
      14: return

  public void popReturnMode();
    Code:
       0: aload_0
       1: dup
       2: getfield      #15                 // Field returnDepth:I
       5: iconst_1
       6: isub
       7: putfield      #15                 // Field returnDepth:I
      10: return

  static int access$000(com.sun.faces.flow.FlowHandlerImpl$FlowDeque, javax.faces.context.FacesContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method getAndClearMaxReturnDepth:(Ljavax/faces/context/FacesContext;)I
       5: ireturn

  static void access$100(com.sun.faces.flow.FlowHandlerImpl$FlowDeque, javax.faces.context.FacesContext, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method setMaxReturnDepth:(Ljavax/faces/context/FacesContext;I)V
       6: return
}
