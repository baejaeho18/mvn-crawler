Compiled from "PhaseListenerTag.java"
class com.sun.faces.taglib.jsf_core.PhaseListenerTag$BindingPhaseListener implements javax.faces.event.PhaseListener,java.io.Serializable {
  private javax.el.ValueExpression type;

  private javax.el.ValueExpression binding;

  public com.sun.faces.taglib.jsf_core.PhaseListenerTag$BindingPhaseListener(javax.el.ValueExpression, javax.el.ValueExpression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Ljavax/el/ValueExpression;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field binding:Ljavax/el/ValueExpression;
      14: return

  public void afterPhase(javax.faces.event.PhaseEvent);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getPhaseListener:()Ljavax/faces/event/PhaseListener;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #5,  2            // InterfaceMethod javax/faces/event/PhaseListener.afterPhase:(Ljavax/faces/event/PhaseEvent;)V
      16: return

  public void beforePhase(javax.faces.event.PhaseEvent);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getPhaseListener:()Ljavax/faces/event/PhaseListener;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #6,  2            // InterfaceMethod javax/faces/event/PhaseListener.beforePhase:(Ljavax/faces/event/PhaseEvent;)V
      16: return

  public javax.faces.event.PhaseId getPhaseId();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getPhaseListener:()Ljavax/faces/event/PhaseListener;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #7,  1            // InterfaceMethod javax/faces/event/PhaseListener.getPhaseId:()Ljavax/faces/event/PhaseId;
      15: areturn
      16: aconst_null
      17: areturn

  public javax.faces.event.PhaseListener getPhaseListener() throws javax.faces.event.AbortProcessingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Ljavax/el/ValueExpression;
       4: aload_0
       5: getfield      #3                  // Field binding:Ljavax/el/ValueExpression;
       8: invokestatic  #8                  // Method com/sun/faces/util/Util.getListenerInstance:(Ljavax/el/ValueExpression;Ljavax/el/ValueExpression;)Ljava/lang/Object;
      11: checkcast     #9                  // class javax/faces/event/PhaseListener
      14: astore_1
      15: aload_1
      16: ifnull        21
      19: aload_1
      20: areturn
      21: invokestatic  #10                 // Method com/sun/faces/taglib/jsf_core/PhaseListenerTag.access$000:()Ljava/util/logging/Logger;
      24: getstatic     #11                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      27: invokevirtual #12                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      30: ifeq          41
      33: invokestatic  #10                 // Method com/sun/faces/taglib/jsf_core/PhaseListenerTag.access$000:()Ljava/util/logging/Logger;
      36: ldc           #13                 // String PhaseListener will not be processed - both \'binding\' and \'type\' are null
      38: invokevirtual #14                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      41: aconst_null
      42: areturn
}
