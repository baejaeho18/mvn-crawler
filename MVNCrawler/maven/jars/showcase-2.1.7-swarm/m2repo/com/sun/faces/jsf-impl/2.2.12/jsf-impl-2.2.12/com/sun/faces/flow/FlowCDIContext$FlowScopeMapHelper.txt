Compiled from "FlowCDIContext.java"
class com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper {
  private transient java.lang.String flowBeansForClientWindowKey;

  private transient java.lang.String creationalForClientWindowKey;

  private final transient java.util.Map<java.lang.String, java.lang.Object> sessionMap;

  private com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper(javax.faces.context.FacesContext);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #9                  // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #10                 // Method javax/faces/context/ExternalContext.getSessionMap:()Ljava/util/Map;
      14: putfield      #11                 // Field sessionMap:Ljava/util/Map;
      17: aload_1
      18: invokestatic  #12                 // Method com/sun/faces/flow/FlowCDIContext.access$000:(Ljavax/faces/context/FacesContext;)Ljavax/faces/flow/Flow;
      21: astore_3
      22: aload_1
      23: invokestatic  #13                 // Method com/sun/faces/flow/FlowHandlerImpl.getFlowStack:(Ljavax/faces/context/FacesContext;)Lcom/sun/faces/flow/FlowHandlerImpl$FlowDeque;
      26: invokevirtual #14                 // Method com/sun/faces/flow/FlowHandlerImpl$FlowDeque.getCurrentFlowDepth:()I
      29: istore        4
      31: aload_0
      32: aload_1
      33: aload_3
      34: iload         4
      36: invokespecial #15                 // Method generateKeyForCDIBeansBelongToAFlow:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;I)V
      39: return

  private com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper(javax.faces.context.FacesContext, javax.faces.flow.Flow, int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #9                  // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       8: astore        4
      10: aload_0
      11: aload         4
      13: invokevirtual #10                 // Method javax/faces/context/ExternalContext.getSessionMap:()Ljava/util/Map;
      16: putfield      #11                 // Field sessionMap:Ljava/util/Map;
      19: aload_0
      20: aload_1
      21: aload_2
      22: iload_3
      23: invokespecial #15                 // Method generateKeyForCDIBeansBelongToAFlow:(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;I)V
      26: return

  private void generateKeyForCDIBeansBelongToAFlow(javax.faces.context.FacesContext, javax.faces.flow.Flow, int);
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpeq     107
       5: aload_1
       6: invokevirtual #9                  // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       9: invokevirtual #16                 // Method javax/faces/context/ExternalContext.getClientWindow:()Ljavax/faces/lifecycle/ClientWindow;
      12: astore        4
      14: aconst_null
      15: aload         4
      17: if_acmpne     30
      20: new           #17                 // class java/lang/IllegalStateException
      23: dup
      24: ldc           #18                 // String Unable to obtain current ClientWindow.  Is the ClientWindow feature enabled?
      26: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_2
      31: aload         4
      33: invokevirtual #20                 // Method javax/faces/flow/Flow.getClientWindowFlowId:(Ljavax/faces/lifecycle/ClientWindow;)Ljava/lang/String;
      36: astore        5
      38: aload_0
      39: new           #21                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      46: aload         5
      48: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #24                 // String :
      53: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_3
      57: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #26                 // String _beans
      62: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: putfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
      71: aload_0
      72: new           #21                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      79: aload         5
      81: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #24                 // String :
      86: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: iload_3
      90: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: ldc           #29                 // String _creational
      95: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: putfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
     104: goto          117
     107: aload_0
     108: aload_0
     109: aconst_null
     110: dup_x1
     111: putfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
     114: putfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
     117: return

  private void createMaps();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getFlowScopedBeanMapForCurrentFlow:()Ljava/util/Map;
       4: pop
       5: aload_0
       6: invokespecial #2                  // Method getFlowScopedCreationalMapForCurrentFlow:()Ljava/util/Map;
       9: pop
      10: return

  private boolean isFlowExists();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
       5: if_acmpeq     20
       8: aconst_null
       9: aload_0
      10: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      13: if_acmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.lang.String getCreationalForClientWindowKey();
    Code:
       0: aload_0
       1: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
       4: areturn

  public java.lang.String getFlowBeansForClientWindowKey();
    Code:
       0: aload_0
       1: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
       4: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getFlowScopedBeanMapForCurrentFlow();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
       5: if_acmpne     20
       8: aconst_null
       9: aload_0
      10: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      13: if_acmpne     20
      16: invokestatic  #31                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      19: areturn
      20: aload_0
      21: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      24: aload_0
      25: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
      28: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #33                 // class java/util/Map
      36: astore_1
      37: aconst_null
      38: aload_1
      39: if_acmpne     76
      42: new           #34                 // class java/util/concurrent/ConcurrentHashMap
      45: dup
      46: invokespecial #35                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      49: astore_1
      50: aload_0
      51: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      54: aload_0
      55: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
      58: aload_1
      59: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      69: aload_0
      70: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
      73: invokestatic  #37                 // Method com/sun/faces/flow/FlowCDIContext.access$100:(Ljava/util/Map;Ljava/lang/String;)V
      76: aload_1
      77: areturn

  private java.util.Map<java.lang.String, javax.enterprise.context.spi.CreationalContext<?>> getFlowScopedCreationalMapForCurrentFlow();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
       5: if_acmpne     20
       8: aconst_null
       9: aload_0
      10: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      13: if_acmpne     20
      16: invokestatic  #31                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      19: areturn
      20: aload_0
      21: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      24: aload_0
      25: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      28: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #33                 // class java/util/Map
      36: astore_1
      37: aconst_null
      38: aload_1
      39: if_acmpne     76
      42: new           #34                 // class java/util/concurrent/ConcurrentHashMap
      45: dup
      46: invokespecial #35                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      49: astore_1
      50: aload_0
      51: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      54: aload_0
      55: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      58: aload_1
      59: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      69: aload_0
      70: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      73: invokestatic  #38                 // Method com/sun/faces/flow/FlowCDIContext.access$200:(Ljava/util/Map;Ljava/lang/String;)V
      76: aload_1
      77: areturn

  private void updateSession();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
       5: if_acmpne     17
       8: aconst_null
       9: aload_0
      10: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      13: if_acmpne     17
      16: return
      17: aload_0
      18: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      21: aload_0
      22: getfield      #28                 // Field flowBeansForClientWindowKey:Ljava/lang/String;
      25: aload_0
      26: invokespecial #6                  // Method getFlowScopedBeanMapForCurrentFlow:()Ljava/util/Map;
      29: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      39: aload_0
      40: getfield      #30                 // Field creationalForClientWindowKey:Ljava/lang/String;
      43: aload_0
      44: invokespecial #2                  // Method getFlowScopedCreationalMapForCurrentFlow:()Ljava/util/Map;
      47: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_0
      54: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      57: invokestatic  #39                 // Method com/sun/faces/flow/FlowCDIContext.access$300:()Ljava/lang/String;
      60: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: astore_1
      66: aconst_null
      67: aload_1
      68: if_acmpeq     85
      71: aload_0
      72: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      75: invokestatic  #39                 // Method com/sun/faces/flow/FlowCDIContext.access$300:()Ljava/lang/String;
      78: aload_1
      79: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_0
      86: getfield      #11                 // Field sessionMap:Ljava/util/Map;
      89: invokestatic  #40                 // Method com/sun/faces/flow/FlowCDIContext.access$400:()Ljava/lang/String;
      92: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: astore_1
      98: aconst_null
      99: aload_1
     100: if_acmpeq     117
     103: aload_0
     104: getfield      #11                 // Field sessionMap:Ljava/util/Map;
     107: invokestatic  #40                 // Method com/sun/faces/flow/FlowCDIContext.access$400:()Ljava/lang/String;
     110: aload_1
     111: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: return

  com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper(javax.faces.context.FacesContext, com.sun.faces.flow.FlowCDIContext$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method "<init>":(Ljavax/faces/context/FacesContext;)V
       5: return

  static java.util.Map access$600(com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getFlowScopedBeanMapForCurrentFlow:()Ljava/util/Map;
       4: areturn

  static boolean access$700(com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method isFlowExists:()Z
       4: ireturn

  static void access$800(com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method updateSession:()V
       4: return

  com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper(javax.faces.context.FacesContext, javax.faces.flow.Flow, int, com.sun.faces.flow.FlowCDIContext$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #3                  // Method "<init>":(Ljavax/faces/context/FacesContext;Ljavax/faces/flow/Flow;I)V
       7: return

  static java.util.Map access$1000(com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method getFlowScopedCreationalMapForCurrentFlow:()Ljava/util/Map;
       4: areturn

  static void access$1100(com.sun.faces.flow.FlowCDIContext$FlowScopeMapHelper);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method createMaps:()V
       4: return
}
