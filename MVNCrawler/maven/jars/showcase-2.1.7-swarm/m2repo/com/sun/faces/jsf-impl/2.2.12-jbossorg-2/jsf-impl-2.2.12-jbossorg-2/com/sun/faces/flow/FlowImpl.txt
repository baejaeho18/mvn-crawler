Compiled from "FlowImpl.java"
public class com.sun.faces.flow.FlowImpl extends javax.faces.flow.Flow implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final javax.faces.flow.Flow SYNTHESIZED_RETURN_CASE_FLOW;

  public static final javax.faces.flow.Flow ABANDONED_FLOW;

  private java.lang.String id;

  private java.lang.String definingDocumentId;

  private java.lang.String startNodeId;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.Set<javax.faces.application.NavigationCase>> _navigationCases;

  private final java.util.Map<java.lang.String, java.util.Set<javax.faces.application.NavigationCase>> navigationCases;

  private final java.util.concurrent.CopyOnWriteArrayList<javax.faces.flow.ViewNode> _views;

  private final java.util.List<javax.faces.flow.ViewNode> views;

  private final java.util.concurrent.CopyOnWriteArrayList<javax.faces.flow.MethodCallNode> _methodCalls;

  private final java.util.List<javax.faces.flow.MethodCallNode> methodCalls;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, javax.faces.flow.Parameter> _inboundParameters;

  private final java.util.Map<java.lang.String, javax.faces.flow.Parameter> inboundParameters;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, javax.faces.flow.ReturnNode> _returns;

  private final java.util.Map<java.lang.String, javax.faces.flow.ReturnNode> returns;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, javax.faces.flow.SwitchNode> _switches;

  private final java.util.Map<java.lang.String, javax.faces.flow.SwitchNode> switches;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, javax.faces.flow.FlowCallNode> _facesFlowCalls;

  private final java.util.Map<java.lang.String, javax.faces.flow.FlowCallNode> facesFlowCalls;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, javax.faces.flow.FlowCallNode> _facesFlowCallsByTargetFlowId;

  private javax.el.MethodExpression initializer;

  private javax.el.MethodExpression finalizer;

  private boolean hasBeenInitialized;

  public com.sun.faces.flow.FlowImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/faces/flow/Flow."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hasBeenInitialized:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field _inboundParameters:Ljava/util/concurrent/ConcurrentHashMap;
      20: aload_0
      21: aload_0
      22: getfield      #5                  // Field _inboundParameters:Ljava/util/concurrent/ConcurrentHashMap;
      25: invokestatic  #6                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      28: putfield      #7                  // Field inboundParameters:Ljava/util/Map;
      31: aload_0
      32: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      35: dup
      36: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      39: putfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
      42: aload_0
      43: aload_0
      44: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
      47: invokestatic  #6                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      50: putfield      #9                  // Field returns:Ljava/util/Map;
      53: aload_0
      54: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      57: dup
      58: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      61: putfield      #10                 // Field _switches:Ljava/util/concurrent/ConcurrentHashMap;
      64: aload_0
      65: aload_0
      66: getfield      #10                 // Field _switches:Ljava/util/concurrent/ConcurrentHashMap;
      69: invokestatic  #6                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      72: putfield      #11                 // Field switches:Ljava/util/Map;
      75: aload_0
      76: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      79: dup
      80: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      83: putfield      #12                 // Field _facesFlowCalls:Ljava/util/concurrent/ConcurrentHashMap;
      86: aload_0
      87: aload_0
      88: getfield      #12                 // Field _facesFlowCalls:Ljava/util/concurrent/ConcurrentHashMap;
      91: invokestatic  #6                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      94: putfield      #13                 // Field facesFlowCalls:Ljava/util/Map;
      97: aload_0
      98: new           #3                  // class java/util/concurrent/ConcurrentHashMap
     101: dup
     102: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     105: putfield      #14                 // Field _facesFlowCallsByTargetFlowId:Ljava/util/concurrent/ConcurrentHashMap;
     108: aload_0
     109: new           #15                 // class java/util/concurrent/CopyOnWriteArrayList
     112: dup
     113: invokespecial #16                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
     116: putfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
     119: aload_0
     120: aload_0
     121: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
     124: invokestatic  #18                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     127: putfield      #19                 // Field views:Ljava/util/List;
     130: aload_0
     131: new           #3                  // class java/util/concurrent/ConcurrentHashMap
     134: dup
     135: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     138: putfield      #20                 // Field _navigationCases:Ljava/util/concurrent/ConcurrentHashMap;
     141: aload_0
     142: aload_0
     143: getfield      #20                 // Field _navigationCases:Ljava/util/concurrent/ConcurrentHashMap;
     146: invokestatic  #6                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     149: putfield      #21                 // Field navigationCases:Ljava/util/Map;
     152: aload_0
     153: new           #15                 // class java/util/concurrent/CopyOnWriteArrayList
     156: dup
     157: invokespecial #16                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
     160: putfield      #22                 // Field _methodCalls:Ljava/util/concurrent/CopyOnWriteArrayList;
     163: aload_0
     164: aload_0
     165: getfield      #22                 // Field _methodCalls:Ljava/util/concurrent/CopyOnWriteArrayList;
     168: invokestatic  #18                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     171: putfield      #23                 // Field methodCalls:Ljava/util/List;
     174: return

  private com.sun.faces.flow.FlowImpl(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/faces/flow/Flow."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hasBeenInitialized:Z
       9: aload_0
      10: aload_1
      11: putfield      #24                 // Field id:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #25                 // Field definingDocumentId:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #26                 // Field startNodeId:Ljava/lang/String;
      24: aload_0
      25: aconst_null
      26: putfield      #20                 // Field _navigationCases:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_0
      30: aconst_null
      31: putfield      #21                 // Field navigationCases:Ljava/util/Map;
      34: aload_0
      35: aconst_null
      36: putfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
      39: aload_0
      40: aconst_null
      41: putfield      #19                 // Field views:Ljava/util/List;
      44: aload_0
      45: aconst_null
      46: putfield      #22                 // Field _methodCalls:Ljava/util/concurrent/CopyOnWriteArrayList;
      49: aload_0
      50: aconst_null
      51: putfield      #23                 // Field methodCalls:Ljava/util/List;
      54: aload_0
      55: aconst_null
      56: putfield      #5                  // Field _inboundParameters:Ljava/util/concurrent/ConcurrentHashMap;
      59: aload_0
      60: aconst_null
      61: putfield      #7                  // Field inboundParameters:Ljava/util/Map;
      64: aload_0
      65: aconst_null
      66: putfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
      69: aload_0
      70: aconst_null
      71: putfield      #9                  // Field returns:Ljava/util/Map;
      74: aload_0
      75: aconst_null
      76: putfield      #10                 // Field _switches:Ljava/util/concurrent/ConcurrentHashMap;
      79: aload_0
      80: aconst_null
      81: putfield      #11                 // Field switches:Ljava/util/Map;
      84: aload_0
      85: aconst_null
      86: putfield      #12                 // Field _facesFlowCalls:Ljava/util/concurrent/ConcurrentHashMap;
      89: aload_0
      90: aconst_null
      91: putfield      #13                 // Field facesFlowCalls:Ljava/util/Map;
      94: aload_0
      95: aconst_null
      96: putfield      #14                 // Field _facesFlowCallsByTargetFlowId:Ljava/util/concurrent/ConcurrentHashMap;
      99: aload_0
     100: aconst_null
     101: putfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
     104: aload_0
     105: aconst_null
     106: putfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
     109: aload_0
     110: iconst_1
     111: putfield      #2                  // Field hasBeenInitialized:Z
     114: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #30                 // class javax/faces/flow/Flow
      23: astore_2
      24: aload_0
      25: getfield      #24                 // Field id:Ljava/lang/String;
      28: ifnonnull     41
      31: aload_2
      32: invokevirtual #31                 // Method javax/faces/flow/Flow.getId:()Ljava/lang/String;
      35: ifnull        57
      38: goto          55
      41: aload_0
      42: getfield      #24                 // Field id:Ljava/lang/String;
      45: aload_2
      46: invokevirtual #31                 // Method javax/faces/flow/Flow.getId:()Ljava/lang/String;
      49: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: aload_0
      58: getfield      #26                 // Field startNodeId:Ljava/lang/String;
      61: ifnonnull     74
      64: aload_2
      65: invokevirtual #33                 // Method javax/faces/flow/Flow.getStartNodeId:()Ljava/lang/String;
      68: ifnull        90
      71: goto          88
      74: aload_0
      75: getfield      #26                 // Field startNodeId:Ljava/lang/String;
      78: aload_2
      79: invokevirtual #33                 // Method javax/faces/flow/Flow.getStartNodeId:()Ljava/lang/String;
      82: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifne          90
      88: iconst_0
      89: ireturn
      90: aload_0
      91: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
      94: aload_2
      95: invokevirtual #34                 // Method javax/faces/flow/Flow.getViews:()Ljava/util/List;
      98: if_acmpeq     124
     101: aload_0
     102: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
     105: ifnull        122
     108: aload_0
     109: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
     112: aload_2
     113: invokevirtual #34                 // Method javax/faces/flow/Flow.getViews:()Ljava/util/List;
     116: invokevirtual #35                 // Method java/util/concurrent/CopyOnWriteArrayList.equals:(Ljava/lang/Object;)Z
     119: ifne          124
     122: iconst_0
     123: ireturn
     124: invokestatic  #36                 // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
     127: astore_3
     128: aconst_null
     129: aload_3
     130: if_acmpeq     235
     133: aload_0
     134: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
     137: aload_2
     138: invokevirtual #37                 // Method javax/faces/flow/Flow.getReturns:()Ljava/util/Map;
     141: if_acmpeq     167
     144: aload_0
     145: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
     148: ifnull        165
     151: aload_0
     152: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
     155: aload_2
     156: invokevirtual #37                 // Method javax/faces/flow/Flow.getReturns:()Ljava/util/Map;
     159: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.equals:(Ljava/lang/Object;)Z
     162: ifne          167
     165: iconst_0
     166: ireturn
     167: aload_0
     168: getfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
     171: aload_2
     172: invokevirtual #39                 // Method javax/faces/flow/Flow.getInitializer:()Ljavax/el/MethodExpression;
     175: if_acmpeq     201
     178: aload_0
     179: getfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
     182: ifnull        199
     185: aload_0
     186: getfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
     189: aload_2
     190: invokevirtual #39                 // Method javax/faces/flow/Flow.getInitializer:()Ljavax/el/MethodExpression;
     193: invokevirtual #40                 // Method javax/el/MethodExpression.equals:(Ljava/lang/Object;)Z
     196: ifne          201
     199: iconst_0
     200: ireturn
     201: aload_0
     202: getfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
     205: aload_2
     206: invokevirtual #41                 // Method javax/faces/flow/Flow.getFinalizer:()Ljavax/el/MethodExpression;
     209: if_acmpeq     235
     212: aload_0
     213: getfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
     216: ifnull        233
     219: aload_0
     220: getfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
     223: aload_2
     224: invokevirtual #41                 // Method javax/faces/flow/Flow.getFinalizer:()Ljavax/el/MethodExpression;
     227: invokevirtual #40                 // Method javax/el/MethodExpression.equals:(Ljava/lang/Object;)Z
     230: ifne          235
     233: iconst_0
     234: ireturn
     235: iconst_1
     236: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: istore_1
       2: bipush        59
       4: iload_1
       5: imul
       6: aload_0
       7: getfield      #24                 // Field id:Ljava/lang/String;
      10: ifnull        23
      13: aload_0
      14: getfield      #24                 // Field id:Ljava/lang/String;
      17: invokevirtual #42                 // Method java/lang/String.hashCode:()I
      20: goto          24
      23: iconst_0
      24: iadd
      25: istore_1
      26: bipush        59
      28: iload_1
      29: imul
      30: aload_0
      31: getfield      #26                 // Field startNodeId:Ljava/lang/String;
      34: ifnull        47
      37: aload_0
      38: getfield      #26                 // Field startNodeId:Ljava/lang/String;
      41: invokevirtual #42                 // Method java/lang/String.hashCode:()I
      44: goto          48
      47: iconst_0
      48: iadd
      49: istore_1
      50: bipush        59
      52: iload_1
      53: imul
      54: aload_0
      55: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
      58: ifnull        71
      61: aload_0
      62: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
      65: invokevirtual #43                 // Method java/util/concurrent/CopyOnWriteArrayList.hashCode:()I
      68: goto          72
      71: iconst_0
      72: iadd
      73: istore_1
      74: bipush        59
      76: iload_1
      77: imul
      78: aload_0
      79: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
      82: ifnull        95
      85: aload_0
      86: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
      89: invokevirtual #44                 // Method java/util/concurrent/ConcurrentHashMap.hashCode:()I
      92: goto          96
      95: iconst_0
      96: iadd
      97: istore_1
      98: bipush        59
     100: iload_1
     101: imul
     102: aload_0
     103: getfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
     106: ifnull        119
     109: aload_0
     110: getfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
     113: invokevirtual #45                 // Method javax/el/MethodExpression.hashCode:()I
     116: goto          120
     119: iconst_0
     120: iadd
     121: istore_1
     122: bipush        59
     124: iload_1
     125: imul
     126: aload_0
     127: getfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
     130: ifnull        143
     133: aload_0
     134: getfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
     137: invokevirtual #45                 // Method javax/el/MethodExpression.hashCode:()I
     140: goto          144
     143: iconst_0
     144: iadd
     145: istore_1
     146: iload_1
     147: ireturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #24                 // Field id:Ljava/lang/String;
       4: areturn

  public java.lang.String getDefiningDocumentId();
    Code:
       0: aload_0
       1: getfield      #25                 // Field definingDocumentId:Ljava/lang/String;
       4: areturn

  public void setId(java.lang.String, java.lang.String);
    Code:
       0: ldc           #46                 // String definingDocumentId
       2: aload_1
       3: invokestatic  #47                 // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
       6: ldc           #48                 // String flowId
       8: aload_2
       9: invokestatic  #47                 // Method com/sun/faces/util/Util.notNull:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: aload_2
      14: putfield      #24                 // Field id:Ljava/lang/String;
      17: aload_0
      18: aload_1
      19: putfield      #25                 // Field definingDocumentId:Ljava/lang/String;
      22: return

  public java.lang.String getStartNodeId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field startNodeId:Ljava/lang/String;
       4: areturn

  public void setStartNodeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field startNodeId:Ljava/lang/String;
       5: return

  public javax.el.MethodExpression getFinalizer();
    Code:
       0: aload_0
       1: getfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
       4: areturn

  public void setFinalizer(javax.el.MethodExpression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field finalizer:Ljavax/el/MethodExpression;
       5: return

  public javax.el.MethodExpression getInitializer();
    Code:
       0: aload_0
       1: getfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
       4: areturn

  public void setInitializer(javax.el.MethodExpression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field initializer:Ljavax/el/MethodExpression;
       5: return

  public java.util.Map<java.lang.String, javax.faces.flow.Parameter> getInboundParameters();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inboundParameters:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.Parameter> _getInboundParameters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _inboundParameters:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public java.util.List<javax.faces.flow.ViewNode> getViews();
    Code:
       0: aload_0
       1: getfield      #19                 // Field views:Ljava/util/List;
       4: areturn

  public java.util.List<javax.faces.flow.ViewNode> _getViews();
    Code:
       0: aload_0
       1: getfield      #17                 // Field _views:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.ReturnNode> getReturns();
    Code:
       0: aload_0
       1: getfield      #9                  // Field returns:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.ReturnNode> _getReturns();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _returns:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.SwitchNode> getSwitches();
    Code:
       0: aload_0
       1: getfield      #11                 // Field switches:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.SwitchNode> _getSwitches();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _switches:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.FlowCallNode> getFlowCalls();
    Code:
       0: aload_0
       1: getfield      #13                 // Field facesFlowCalls:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, javax.faces.flow.FlowCallNode> _getFlowCalls();
    Code:
       0: aload_0
       1: getfield      #12                 // Field _facesFlowCalls:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public java.util.Map<java.lang.String, java.util.Set<javax.faces.application.NavigationCase>> getNavigationCases();
    Code:
       0: aload_0
       1: getfield      #21                 // Field navigationCases:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.util.Set<javax.faces.application.NavigationCase>> _getNavigationCases();
    Code:
       0: aload_0
       1: getfield      #20                 // Field _navigationCases:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  public javax.faces.flow.FlowCallNode getFlowCall(javax.faces.flow.Flow);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method javax/faces/flow/Flow.getId:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field hasBeenInitialized:Z
       9: ifne          21
      12: invokestatic  #36                 // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #49                 // Method init:(Ljavax/faces/context/FacesContext;)V
      21: aload_0
      22: getfield      #14                 // Field _facesFlowCallsByTargetFlowId:Ljava/util/concurrent/ConcurrentHashMap;
      25: aload_2
      26: invokevirtual #50                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #51                 // class javax/faces/flow/FlowCallNode
      32: astore_3
      33: aload_3
      34: areturn

  public java.util.List<javax.faces.flow.MethodCallNode> getMethodCalls();
    Code:
       0: aload_0
       1: getfield      #23                 // Field methodCalls:Ljava/util/List;
       4: areturn

  public java.util.List<javax.faces.flow.MethodCallNode> _getMethodCalls();
    Code:
       0: aload_0
       1: getfield      #22                 // Field _methodCalls:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public javax.faces.flow.FlowNode getNode(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getViews:()Ljava/util/List;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aconst_null
       8: aload_2
       9: if_acmpeq     63
      12: aload_2
      13: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          63
      30: aload         4
      32: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #56                 // class javax/faces/flow/ViewNode
      40: astore        5
      42: aload_1
      43: aload         5
      45: invokevirtual #57                 // Method javax/faces/flow/ViewNode.getId:()Ljava/lang/String;
      48: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          60
      54: aload         5
      56: astore_3
      57: goto          63
      60: goto          20
      63: aconst_null
      64: aload_3
      65: if_acmpne     86
      68: aload_0
      69: invokevirtual #58                 // Method getSwitches:()Ljava/util/Map;
      72: astore        4
      74: aload         4
      76: aload_1
      77: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #60                 // class javax/faces/flow/FlowNode
      85: astore_3
      86: aconst_null
      87: aload_3
      88: if_acmpne     149
      91: aload_0
      92: invokevirtual #61                 // Method getMethodCalls:()Ljava/util/List;
      95: astore        4
      97: aload         4
      99: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore        5
     106: aload         5
     108: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          149
     116: aload         5
     118: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #62                 // class javax/faces/flow/MethodCallNode
     126: astore        6
     128: aload_1
     129: aload         6
     131: invokevirtual #63                 // Method javax/faces/flow/MethodCallNode.getId:()Ljava/lang/String;
     134: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     137: ifeq          146
     140: aload         6
     142: astore_3
     143: goto          149
     146: goto          106
     149: aconst_null
     150: aload_3
     151: if_acmpne     172
     154: aload_0
     155: invokevirtual #64                 // Method getFlowCalls:()Ljava/util/Map;
     158: astore        4
     160: aload         4
     162: aload_1
     163: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     168: checkcast     #60                 // class javax/faces/flow/FlowNode
     171: astore_3
     172: aconst_null
     173: aload_3
     174: if_acmpne     195
     177: aload_0
     178: invokevirtual #65                 // Method getReturns:()Ljava/util/Map;
     181: astore        4
     183: aload         4
     185: aload_1
     186: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     191: checkcast     #60                 // class javax/faces/flow/FlowNode
     194: astore_3
     195: aload_3
     196: areturn

  public java.lang.String getClientWindowFlowId(javax.faces.lifecycle.ClientWindow);
    Code:
       0: aconst_null
       1: astore_2
       2: new           #66                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       9: aload_1
      10: invokevirtual #68                 // Method javax/faces/lifecycle/ClientWindow.getId:()Ljava/lang/String;
      13: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #70                 // String _
      18: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #71                 // Method getId:()Ljava/lang/String;
      25: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore_2
      32: aload_2
      33: areturn

  public void init(javax.faces.context.FacesContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasBeenInitialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #2                  // Field hasBeenInitialized:Z
      13: aconst_null
      14: astore_2
      15: aconst_null
      16: astore_3
      17: aload_0
      18: getfield      #12                 // Field _facesFlowCalls:Ljava/util/concurrent/ConcurrentHashMap;
      21: invokevirtual #73                 // Method java/util/concurrent/ConcurrentHashMap.entrySet:()Ljava/util/Set;
      24: invokeinterface #74,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          83
      41: aload         4
      43: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #75                 // class java/util/Map$Entry
      51: astore        5
      53: aload         5
      55: invokeinterface #76,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      60: checkcast     #51                 // class javax/faces/flow/FlowCallNode
      63: astore_2
      64: aload_2
      65: aload_1
      66: invokevirtual #77                 // Method javax/faces/flow/FlowCallNode.getCalledFlowId:(Ljavax/faces/context/FacesContext;)Ljava/lang/String;
      69: astore_3
      70: aload_0
      71: getfield      #14                 // Field _facesFlowCallsByTargetFlowId:Ljava/util/concurrent/ConcurrentHashMap;
      74: aload_3
      75: aload_2
      76: invokevirtual #78                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          31
      83: return

  static {};
    Code:
       0: new           #79                 // class com/sun/faces/flow/FlowImpl
       3: dup
       4: ldc           #80                 // String javax.faces.flow.NullFlow
       6: invokespecial #81                 // Method "<init>":(Ljava/lang/String;)V
       9: putstatic     #82                 // Field SYNTHESIZED_RETURN_CASE_FLOW:Ljavax/faces/flow/Flow;
      12: new           #79                 // class com/sun/faces/flow/FlowImpl
      15: dup
      16: ldc           #83                 // String javax.faces.flow.AbandonedFlow
      18: invokespecial #81                 // Method "<init>":(Ljava/lang/String;)V
      21: putstatic     #84                 // Field ABANDONED_FLOW:Ljavax/faces/flow/Flow;
      24: return
}
