Compiled from "Phase.java"
public abstract class com.sun.faces.lifecycle.Phase {
  private static final java.util.logging.Logger LOGGER;

  public com.sun.faces.lifecycle.Phase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void doPhase(javax.faces.context.FacesContext, javax.faces.lifecycle.Lifecycle, java.util.ListIterator<javax.faces.event.PhaseListener>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
       5: invokevirtual #3                  // Method javax/faces/context/FacesContext.setCurrentPhaseId:(Ljavax/faces/event/PhaseId;)V
       8: aconst_null
       9: astore        4
      11: aload_3
      12: invokeinterface #4,  1            // InterfaceMethod java/util/ListIterator.hasNext:()Z
      17: ifeq          35
      20: new           #5                  // class javax/faces/event/PhaseEvent
      23: dup
      24: aload_1
      25: aload_0
      26: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
      29: aload_2
      30: invokespecial #6                  // Method javax/faces/event/PhaseEvent."<init>":(Ljavax/faces/context/FacesContext;Ljavax/faces/event/PhaseId;Ljavax/faces/lifecycle/Lifecycle;)V
      33: astore        4
      35: invokestatic  #7                  // Method com/sun/faces/util/Timer.getInstance:()Lcom/sun/faces/util/Timer;
      38: astore        5
      40: aload         5
      42: ifnull        50
      45: aload         5
      47: invokevirtual #8                  // Method com/sun/faces/util/Timer.startTiming:()V
      50: aload_0
      51: aload_1
      52: aload_3
      53: aload         4
      55: invokevirtual #9                  // Method handleBeforePhase:(Ljavax/faces/context/FacesContext;Ljava/util/ListIterator;Ljavax/faces/event/PhaseEvent;)V
      58: aload_0
      59: aload_1
      60: invokespecial #10                 // Method shouldSkip:(Ljavax/faces/context/FacesContext;)Z
      63: ifne          71
      66: aload_0
      67: aload_1
      68: invokevirtual #11                 // Method execute:(Ljavax/faces/context/FacesContext;)V
      71: aload_0
      72: aload_1
      73: aload_3
      74: aload         4
      76: invokevirtual #12                 // Method handleAfterPhase:(Ljavax/faces/context/FacesContext;Ljava/util/ListIterator;Ljavax/faces/event/PhaseEvent;)V
      79: goto          91
      82: astore        6
      84: aload_0
      85: aload_1
      86: aload         6
      88: invokevirtual #14                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;)V
      91: aload         5
      93: ifnull        131
      96: aload         5
      98: invokevirtual #15                 // Method com/sun/faces/util/Timer.stopTiming:()V
     101: aload         5
     103: new           #16                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #18                 // String Execution time for phase (including any PhaseListeners) ->
     112: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
     119: invokevirtual #20                 // Method javax/faces/event/PhaseId.toString:()Ljava/lang/String;
     122: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #22                 // Method com/sun/faces/util/Timer.logResult:(Ljava/lang/String;)V
     131: aload_1
     132: invokevirtual #23                 // Method javax/faces/context/FacesContext.getExceptionHandler:()Ljavax/faces/context/ExceptionHandler;
     135: invokevirtual #24                 // Method javax/faces/context/ExceptionHandler.handle:()V
     138: goto          292
     141: astore        6
     143: aload_0
     144: aload_1
     145: aload         6
     147: invokevirtual #14                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;)V
     150: aload_0
     151: aload_1
     152: aload_3
     153: aload         4
     155: invokevirtual #12                 // Method handleAfterPhase:(Ljavax/faces/context/FacesContext;Ljava/util/ListIterator;Ljavax/faces/event/PhaseEvent;)V
     158: goto          170
     161: astore        6
     163: aload_0
     164: aload_1
     165: aload         6
     167: invokevirtual #14                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;)V
     170: aload         5
     172: ifnull        210
     175: aload         5
     177: invokevirtual #15                 // Method com/sun/faces/util/Timer.stopTiming:()V
     180: aload         5
     182: new           #16                 // class java/lang/StringBuilder
     185: dup
     186: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #18                 // String Execution time for phase (including any PhaseListeners) ->
     191: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_0
     195: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
     198: invokevirtual #20                 // Method javax/faces/event/PhaseId.toString:()Ljava/lang/String;
     201: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: invokevirtual #22                 // Method com/sun/faces/util/Timer.logResult:(Ljava/lang/String;)V
     210: aload_1
     211: invokevirtual #23                 // Method javax/faces/context/FacesContext.getExceptionHandler:()Ljavax/faces/context/ExceptionHandler;
     214: invokevirtual #24                 // Method javax/faces/context/ExceptionHandler.handle:()V
     217: goto          292
     220: astore        7
     222: aload_0
     223: aload_1
     224: aload_3
     225: aload         4
     227: invokevirtual #12                 // Method handleAfterPhase:(Ljavax/faces/context/FacesContext;Ljava/util/ListIterator;Ljavax/faces/event/PhaseEvent;)V
     230: goto          242
     233: astore        8
     235: aload_0
     236: aload_1
     237: aload         8
     239: invokevirtual #14                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;)V
     242: aload         5
     244: ifnull        282
     247: aload         5
     249: invokevirtual #15                 // Method com/sun/faces/util/Timer.stopTiming:()V
     252: aload         5
     254: new           #16                 // class java/lang/StringBuilder
     257: dup
     258: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     261: ldc           #18                 // String Execution time for phase (including any PhaseListeners) ->
     263: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: aload_0
     267: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
     270: invokevirtual #20                 // Method javax/faces/event/PhaseId.toString:()Ljava/lang/String;
     273: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     279: invokevirtual #22                 // Method com/sun/faces/util/Timer.logResult:(Ljava/lang/String;)V
     282: aload_1
     283: invokevirtual #23                 // Method javax/faces/context/FacesContext.getExceptionHandler:()Ljavax/faces/context/ExceptionHandler;
     286: invokevirtual #24                 // Method javax/faces/context/ExceptionHandler.handle:()V
     289: aload         7
     291: athrow
     292: return
    Exception table:
       from    to  target type
          71    79    82   Class java/lang/Throwable
          50    71   141   Class java/lang/Throwable
         150   158   161   Class java/lang/Throwable
          50    71   220   any
         141   150   220   any
         222   230   233   Class java/lang/Throwable
         220   222   220   any

  public abstract void execute(javax.faces.context.FacesContext) throws javax.faces.FacesException;

  public abstract javax.faces.event.PhaseId getId();

  protected void queueException(javax.faces.context.FacesContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #25                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;Ljava/lang/String;)V
       7: return

  protected void queueException(javax.faces.context.FacesContext, java.lang.Throwable, java.lang.String);
    Code:
       0: new           #26                 // class javax/faces/event/ExceptionQueuedEventContext
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #27                 // Method javax/faces/event/ExceptionQueuedEventContext."<init>":(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;)V
       9: astore        4
      11: aload_3
      12: ifnull        30
      15: aload         4
      17: invokevirtual #28                 // Method javax/faces/event/ExceptionQueuedEventContext.getAttributes:()Ljava/util/Map;
      20: aload_3
      21: getstatic     #29                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      24: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_1
      31: invokevirtual #31                 // Method javax/faces/context/FacesContext.getApplication:()Ljavax/faces/application/Application;
      34: aload_1
      35: ldc_w         #32                 // class javax/faces/event/ExceptionQueuedEvent
      38: aload         4
      40: invokevirtual #33                 // Method javax/faces/application/Application.publishEvent:(Ljavax/faces/context/FacesContext;Ljava/lang/Class;Ljava/lang/Object;)V
      43: return

  protected void handleAfterPhase(javax.faces.context.FacesContext, java.util.ListIterator<javax.faces.event.PhaseListener>, javax.faces.event.PhaseEvent);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       4: invokevirtual #35                 // Method javax/faces/context/ExternalContext.getFlash:()Ljavax/faces/context/Flash;
       7: astore        4
       9: aload         4
      11: aload_1
      12: invokevirtual #36                 // Method javax/faces/context/Flash.doPostPhaseActions:(Ljavax/faces/context/FacesContext;)V
      15: goto          40
      18: astore        4
      20: getstatic     #38                 // Field LOGGER:Ljava/util/logging/Logger;
      23: getstatic     #39                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      26: invokevirtual #40                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      29: ifeq          40
      32: getstatic     #38                 // Field LOGGER:Ljava/util/logging/Logger;
      35: ldc           #41                 // String ExternalContext.getFlash() throw UnsupportedOperationException -> Flash unavailable
      37: invokevirtual #42                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      40: aload_2
      41: invokeinterface #43,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      46: ifeq          120
      49: aload_2
      50: invokeinterface #44,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      55: checkcast     #45                 // class javax/faces/event/PhaseListener
      58: astore        4
      60: aload_0
      61: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
      64: aload         4
      66: invokeinterface #46,  1           // InterfaceMethod javax/faces/event/PhaseListener.getPhaseId:()Ljavax/faces/event/PhaseId;
      71: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifne          93
      77: getstatic     #48                 // Field javax/faces/event/PhaseId.ANY_PHASE:Ljavax/faces/event/PhaseId;
      80: aload         4
      82: invokeinterface #46,  1           // InterfaceMethod javax/faces/event/PhaseListener.getPhaseId:()Ljavax/faces/event/PhaseId;
      87: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifeq          117
      93: aload         4
      95: aload_3
      96: invokeinterface #49,  2           // InterfaceMethod javax/faces/event/PhaseListener.afterPhase:(Ljavax/faces/event/PhaseEvent;)V
     101: goto          117
     104: astore        5
     106: aload_0
     107: aload_1
     108: aload         5
     110: getstatic     #51                 // Field javax/faces/event/ExceptionQueuedEventContext.IN_AFTER_PHASE_KEY:Ljava/lang/String;
     113: invokevirtual #25                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;Ljava/lang/String;)V
     116: return
     117: goto          40
     120: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/UnsupportedOperationException
          93   101   104   Class java/lang/Exception

  protected void handleBeforePhase(javax.faces.context.FacesContext, java.util.ListIterator<javax.faces.event.PhaseListener>, javax.faces.event.PhaseEvent);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method javax/faces/context/FacesContext.getExternalContext:()Ljavax/faces/context/ExternalContext;
       4: invokevirtual #35                 // Method javax/faces/context/ExternalContext.getFlash:()Ljavax/faces/context/Flash;
       7: astore        4
       9: aload         4
      11: aload_1
      12: invokevirtual #52                 // Method javax/faces/context/Flash.doPrePhaseActions:(Ljavax/faces/context/FacesContext;)V
      15: goto          40
      18: astore        4
      20: getstatic     #38                 // Field LOGGER:Ljava/util/logging/Logger;
      23: getstatic     #39                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      26: invokevirtual #40                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      29: ifeq          40
      32: getstatic     #38                 // Field LOGGER:Ljava/util/logging/Logger;
      35: ldc           #41                 // String ExternalContext.getFlash() throw UnsupportedOperationException -> Flash unavailable
      37: invokevirtual #42                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      40: aload_1
      41: aload_1
      42: invokevirtual #53                 // Method javax/faces/context/FacesContext.getCurrentPhaseId:()Ljavax/faces/event/PhaseId;
      45: invokestatic  #54                 // Method com/sun/faces/util/RequestStateManager.clearAttributesForPhase:(Ljavax/faces/context/FacesContext;Ljavax/faces/event/PhaseId;)V
      48: aload_2
      49: invokeinterface #4,  1            // InterfaceMethod java/util/ListIterator.hasNext:()Z
      54: ifeq          144
      57: aload_2
      58: invokeinterface #55,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      63: checkcast     #45                 // class javax/faces/event/PhaseListener
      66: astore        4
      68: aload_0
      69: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
      72: aload         4
      74: invokeinterface #46,  1           // InterfaceMethod javax/faces/event/PhaseListener.getPhaseId:()Ljavax/faces/event/PhaseId;
      79: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      82: ifne          101
      85: getstatic     #48                 // Field javax/faces/event/PhaseId.ANY_PHASE:Ljavax/faces/event/PhaseId;
      88: aload         4
      90: invokeinterface #46,  1           // InterfaceMethod javax/faces/event/PhaseListener.getPhaseId:()Ljavax/faces/event/PhaseId;
      95: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      98: ifeq          141
     101: aload         4
     103: aload_3
     104: invokeinterface #56,  2           // InterfaceMethod javax/faces/event/PhaseListener.beforePhase:(Ljavax/faces/event/PhaseEvent;)V
     109: goto          141
     112: astore        5
     114: aload_0
     115: aload_1
     116: aload         5
     118: getstatic     #57                 // Field javax/faces/event/ExceptionQueuedEventContext.IN_BEFORE_PHASE_KEY:Ljava/lang/String;
     121: invokevirtual #25                 // Method queueException:(Ljavax/faces/context/FacesContext;Ljava/lang/Throwable;Ljava/lang/String;)V
     124: aload_2
     125: invokeinterface #43,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
     130: ifeq          140
     133: aload_2
     134: invokeinterface #44,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     139: pop
     140: return
     141: goto          48
     144: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/UnsupportedOperationException
         101   109   112   Class java/lang/Exception

  private boolean shouldSkip(javax.faces.context.FacesContext);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method javax/faces/context/FacesContext.getResponseComplete:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: invokevirtual #59                 // Method javax/faces/context/FacesContext.getRenderResponse:()Z
      13: ifeq          31
      16: getstatic     #60                 // Field javax/faces/event/PhaseId.RENDER_RESPONSE:Ljavax/faces/event/PhaseId;
      19: aload_0
      20: invokevirtual #2                  // Method getId:()Ljavax/faces/event/PhaseId;
      23: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  static {};
    Code:
       0: getstatic     #61                 // Field com/sun/faces/util/FacesLogger.LIFECYCLE:Lcom/sun/faces/util/FacesLogger;
       3: invokevirtual #62                 // Method com/sun/faces/util/FacesLogger.getLogger:()Ljava/util/logging/Logger;
       6: putstatic     #38                 // Field LOGGER:Ljava/util/logging/Logger;
       9: return
}
