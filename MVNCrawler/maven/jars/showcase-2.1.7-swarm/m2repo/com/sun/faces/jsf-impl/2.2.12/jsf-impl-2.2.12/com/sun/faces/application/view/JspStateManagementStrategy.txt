Compiled from "JspStateManagementStrategy.java"
public class com.sun.faces.application.view.JspStateManagementStrategy extends javax.faces.view.StateManagementStrategy {
  private static final java.util.logging.Logger LOGGER;

  private java.util.Map<java.lang.String, java.lang.Class<?>> classMap;

  private boolean isDevelopmentMode;

  static final boolean $assertionsDisabled;

  public com.sun.faces.application.view.JspStateManagementStrategy();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       4: invokespecial #2                  // Method "<init>":(Ljavax/faces/context/FacesContext;)V
       7: return

  public com.sun.faces.application.view.JspStateManagementStrategy(javax.faces.context.FacesContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method javax/faces/view/StateManagementStrategy."<init>":()V
       4: aload_0
       5: aload_1
       6: getstatic     #4                  // Field javax/faces/application/ProjectStage.Development:Ljavax/faces/application/ProjectStage;
       9: invokevirtual #5                  // Method javax/faces/context/FacesContext.isProjectStage:(Ljavax/faces/application/ProjectStage;)Z
      12: putfield      #6                  // Field isDevelopmentMode:Z
      15: aload_0
      16: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: bipush        32
      22: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      25: putfield      #9                  // Field classMap:Ljava/util/Map;
      28: return

  private void captureChild(java.util.List<com.sun.faces.application.view.JspStateManagementStrategy$TreeNode>, int, javax.faces.component.UIComponent);
    Code:
       0: aload_3
       1: invokevirtual #10                 // Method javax/faces/component/UIComponent.isTransient:()Z
       4: ifne          43
       7: new           #11                 // class com/sun/faces/application/view/JspStateManagementStrategy$TreeNode
      10: dup
      11: iload_2
      12: aload_3
      13: invokespecial #12                 // Method com/sun/faces/application/view/JspStateManagementStrategy$TreeNode."<init>":(ILjavax/faces/component/UIComponent;)V
      16: astore        4
      18: aload_1
      19: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      24: istore        5
      26: aload_1
      27: aload         4
      29: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: aload_1
      37: iload         5
      39: aload_3
      40: invokespecial #15                 // Method captureRest:(Ljava/util/List;ILjavax/faces/component/UIComponent;)V
      43: return

  private void captureFacet(java.util.List<com.sun.faces.application.view.JspStateManagementStrategy$TreeNode>, int, java.lang.String, javax.faces.component.UIComponent);
    Code:
       0: aload         4
       2: invokevirtual #10                 // Method javax/faces/component/UIComponent.isTransient:()Z
       5: ifne          47
       8: new           #16                 // class com/sun/faces/application/view/JspStateManagementStrategy$FacetNode
      11: dup
      12: iload_2
      13: aload_3
      14: aload         4
      16: invokespecial #17                 // Method com/sun/faces/application/view/JspStateManagementStrategy$FacetNode."<init>":(ILjava/lang/String;Ljavax/faces/component/UIComponent;)V
      19: astore        5
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      27: istore        6
      29: aload_1
      30: aload         5
      32: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: aload_1
      40: iload         6
      42: aload         4
      44: invokespecial #15                 // Method captureRest:(Ljava/util/List;ILjavax/faces/component/UIComponent;)V
      47: return

  private void captureRest(java.util.List<com.sun.faces.application.view.JspStateManagementStrategy$TreeNode>, int, javax.faces.component.UIComponent);
    Code:
       0: aload_3
       1: invokevirtual #18                 // Method javax/faces/component/UIComponent.getChildCount:()I
       4: istore        4
       6: iload         4
       8: ifle          51
      11: aload_3
      12: invokevirtual #19                 // Method javax/faces/component/UIComponent.getChildren:()Ljava/util/List;
      15: astore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: iload         4
      24: if_icmpge     51
      27: aload_0
      28: aload_1
      29: iload_2
      30: aload         5
      32: iload         6
      34: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #21                 // class javax/faces/component/UIComponent
      42: invokespecial #22                 // Method captureChild:(Ljava/util/List;ILjavax/faces/component/UIComponent;)V
      45: iinc          6, 1
      48: goto          20
      51: aload_3
      52: invokevirtual #23                 // Method javax/faces/component/UIComponent.getFacetCount:()I
      55: istore        4
      57: iload         4
      59: ifle          129
      62: aload_3
      63: invokevirtual #24                 // Method javax/faces/component/UIComponent.getFacets:()Ljava/util/Map;
      66: invokeinterface #25,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      71: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      76: astore        5
      78: aload         5
      80: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          129
      88: aload         5
      90: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #29                 // class java/util/Map$Entry
      98: astore        6
     100: aload_0
     101: aload_1
     102: iload_2
     103: aload         6
     105: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     110: checkcast     #31                 // class java/lang/String
     113: aload         6
     115: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     120: checkcast     #21                 // class javax/faces/component/UIComponent
     123: invokespecial #33                 // Method captureFacet:(Ljava/util/List;ILjava/lang/String;Ljavax/faces/component/UIComponent;)V
     126: goto          78
     129: return

  private javax.faces.component.UIComponent newInstance(com.sun.faces.application.view.JspStateManagementStrategy$TreeNode) throws javax.faces.FacesException;
    Code:
       0: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #36                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          27
      12: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #37                 // String newInstance
      20: aload_1
      21: getfield      #38                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.componentType:Ljava/lang/String;
      24: invokevirtual #39                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #9                  // Field classMap:Ljava/util/Map;
      31: ifnull        53
      34: aload_0
      35: getfield      #9                  // Field classMap:Ljava/util/Map;
      38: aload_1
      39: getfield      #38                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.componentType:Ljava/lang/String;
      42: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #41                 // class java/lang/Class
      50: goto          54
      53: aconst_null
      54: astore_2
      55: aload_2
      56: ifnonnull     112
      59: aload_1
      60: getfield      #38                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.componentType:Ljava/lang/String;
      63: aload_1
      64: invokestatic  #42                 // Method com/sun/faces/util/Util.loadClass:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Class;
      67: astore_2
      68: aload_2
      69: ifnull        97
      72: aload_0
      73: getfield      #9                  // Field classMap:Ljava/util/Map;
      76: ifnull        97
      79: aload_0
      80: getfield      #9                  // Field classMap:Ljava/util/Map;
      83: aload_1
      84: getfield      #38                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.componentType:Ljava/lang/String;
      87: aload_2
      88: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: goto          112
      97: aload_0
      98: getfield      #6                  // Field isDevelopmentMode:Z
     101: ifne          112
     104: new           #44                 // class java/lang/NullPointerException
     107: dup
     108: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
     111: athrow
     112: getstatic     #46                 // Field $assertionsDisabled:Z
     115: ifne          130
     118: aload_2
     119: ifnonnull     130
     122: new           #47                 // class java/lang/AssertionError
     125: dup
     126: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
     129: athrow
     130: aload_2
     131: invokevirtual #49                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     134: checkcast     #21                 // class javax/faces/component/UIComponent
     137: astore_3
     138: aload_3
     139: aload_1
     140: getfield      #50                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.id:Ljava/lang/String;
     143: invokevirtual #51                 // Method javax/faces/component/UIComponent.setId:(Ljava/lang/String;)V
     146: aload_3
     147: areturn
     148: astore_2
     149: new           #53                 // class javax/faces/FacesException
     152: dup
     153: aload_2
     154: invokespecial #54                 // Method javax/faces/FacesException."<init>":(Ljava/lang/Throwable;)V
     157: athrow
    Exception table:
       from    to  target type
          27   147   148   Class java/lang/Exception

  private javax.faces.component.UIViewRoot restoreTree(javax.faces.context.FacesContext, java.lang.String, java.lang.Object[]) throws javax.faces.FacesException;
    Code:
       0: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #36                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          24
      12: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #55                 // String restoreTree
      20: aload_2
      21: invokevirtual #39                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      24: iconst_0
      25: istore        7
      27: iload         7
      29: aload_3
      30: arraylength
      31: if_icmpge     210
      34: aload_3
      35: iload         7
      37: aaload
      38: instanceof    #16                 // class com/sun/faces/application/view/JspStateManagementStrategy$FacetNode
      41: ifeq          106
      44: aload_3
      45: iload         7
      47: aaload
      48: checkcast     #16                 // class com/sun/faces/application/view/JspStateManagementStrategy$FacetNode
      51: astore        5
      53: aload_0
      54: aload         5
      56: invokespecial #56                 // Method newInstance:(Lcom/sun/faces/application/view/JspStateManagementStrategy$TreeNode;)Ljavax/faces/component/UIComponent;
      59: astore        4
      61: aload_3
      62: iload         7
      64: aload         4
      66: aastore
      67: iload         7
      69: aload         5
      71: getfield      #57                 // Field com/sun/faces/application/view/JspStateManagementStrategy$FacetNode.parent:I
      74: if_icmpeq     204
      77: aload_3
      78: aload         5
      80: getfield      #57                 // Field com/sun/faces/application/view/JspStateManagementStrategy$FacetNode.parent:I
      83: aaload
      84: checkcast     #21                 // class javax/faces/component/UIComponent
      87: invokevirtual #24                 // Method javax/faces/component/UIComponent.getFacets:()Ljava/util/Map;
      90: aload         5
      92: getfield      #58                 // Field com/sun/faces/application/view/JspStateManagementStrategy$FacetNode.facetName:Ljava/lang/String;
      95: aload         4
      97: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: goto          204
     106: aload_3
     107: iload         7
     109: aaload
     110: checkcast     #11                 // class com/sun/faces/application/view/JspStateManagementStrategy$TreeNode
     113: astore        6
     115: aload_0
     116: aload         6
     118: invokespecial #56                 // Method newInstance:(Lcom/sun/faces/application/view/JspStateManagementStrategy$TreeNode;)Ljavax/faces/component/UIComponent;
     121: astore        4
     123: aload_3
     124: iload         7
     126: aload         4
     128: aastore
     129: iload         7
     131: aload         6
     133: getfield      #59                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.parent:I
     136: if_icmpeq     163
     139: aload_3
     140: aload         6
     142: getfield      #59                 // Field com/sun/faces/application/view/JspStateManagementStrategy$TreeNode.parent:I
     145: aaload
     146: checkcast     #21                 // class javax/faces/component/UIComponent
     149: invokevirtual #19                 // Method javax/faces/component/UIComponent.getChildren:()Ljava/util/List;
     152: aload         4
     154: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     159: pop
     160: goto          204
     163: getstatic     #46                 // Field $assertionsDisabled:Z
     166: ifne          185
     169: aload         4
     171: instanceof    #60                 // class javax/faces/component/UIViewRoot
     174: ifne          185
     177: new           #47                 // class java/lang/AssertionError
     180: dup
     181: invokespecial #48                 // Method java/lang/AssertionError."<init>":()V
     184: athrow
     185: aload         4
     187: checkcast     #60                 // class javax/faces/component/UIViewRoot
     190: astore        8
     192: aload_1
     193: aload         8
     195: invokevirtual #61                 // Method javax/faces/context/FacesContext.setViewRoot:(Ljavax/faces/component/UIViewRoot;)V
     198: aload         8
     200: aload_2
     201: invokevirtual #62                 // Method javax/faces/component/UIViewRoot.setRenderKitId:(Ljava/lang/String;)V
     204: iinc          7, 1
     207: goto          27
     210: aload_3
     211: iconst_0
     212: aaload
     213: checkcast     #60                 // class javax/faces/component/UIViewRoot
     216: areturn

  public javax.faces.component.UIViewRoot restoreView(javax.faces.context.FacesContext, java.lang.String, java.lang.String);
    Code:
       0: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #36                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          35
      12: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      18: ldc           #63                 // String restoreView
      20: iconst_2
      21: anewarray     #64                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_2
      27: aastore
      28: dup
      29: iconst_1
      30: aload_3
      31: aastore
      32: invokevirtual #65                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      35: aconst_null
      36: astore        4
      38: aload_1
      39: aload_3
      40: invokestatic  #66                 // Method com/sun/faces/renderkit/RenderKitUtils.getResponseStateManager:(Ljavax/faces/context/FacesContext;Ljava/lang/String;)Ljavax/faces/render/ResponseStateManager;
      43: astore        5
      45: aload         5
      47: aload_1
      48: aload_2
      49: invokevirtual #67                 // Method javax/faces/render/ResponseStateManager.getState:(Ljavax/faces/context/FacesContext;Ljava/lang/String;)Ljava/lang/Object;
      52: checkcast     #68                 // class "[Ljava/lang/Object;"
      55: checkcast     #68                 // class "[Ljava/lang/Object;"
      58: astore        6
      60: aload         6
      62: ifnull        131
      65: aload         6
      67: arraylength
      68: iconst_2
      69: if_icmplt     131
      72: aload         6
      74: iconst_0
      75: aaload
      76: ifnull        109
      79: aload_0
      80: aload_1
      81: aload_3
      82: aload         6
      84: iconst_0
      85: aaload
      86: checkcast     #68                 // class "[Ljava/lang/Object;"
      89: checkcast     #68                 // class "[Ljava/lang/Object;"
      92: invokevirtual #69                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      95: checkcast     #68                 // class "[Ljava/lang/Object;"
      98: invokespecial #70                 // Method restoreTree:(Ljavax/faces/context/FacesContext;Ljava/lang/String;[Ljava/lang/Object;)Ljavax/faces/component/UIViewRoot;
     101: astore        4
     103: aload_1
     104: aload         4
     106: invokevirtual #61                 // Method javax/faces/context/FacesContext.setViewRoot:(Ljavax/faces/component/UIViewRoot;)V
     109: aload         4
     111: ifnull        131
     114: aload         6
     116: iconst_1
     117: aaload
     118: ifnull        131
     121: aload         4
     123: aload_1
     124: aload         6
     126: iconst_1
     127: aaload
     128: invokevirtual #71                 // Method javax/faces/component/UIViewRoot.processRestoreState:(Ljavax/faces/context/FacesContext;Ljava/lang/Object;)V
     131: aload         4
     133: areturn

  public java.lang.Object saveView(javax.faces.context.FacesContext);
    Code:
       0: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       6: invokevirtual #36                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          20
      12: getstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
      15: ldc           #72                 // String saveView
      17: invokevirtual #73                 // Method java/util/logging/Logger.finest:(Ljava/lang/String;)V
      20: aload_1
      21: invokevirtual #74                 // Method javax/faces/context/FacesContext.getViewRoot:()Ljavax/faces/component/UIViewRoot;
      24: astore_3
      25: aload_1
      26: aload_3
      27: new           #75                 // class java/util/HashSet
      30: dup
      31: aload_3
      32: invokevirtual #76                 // Method javax/faces/component/UIViewRoot.getChildCount:()I
      35: iconst_1
      36: ishl
      37: invokespecial #77                 // Method java/util/HashSet."<init>":(I)V
      40: invokestatic  #78                 // Method com/sun/faces/util/Util.checkIdUniqueness:(Ljavax/faces/context/FacesContext;Ljavax/faces/component/UIComponent;Ljava/util/Set;)V
      43: aload_3
      44: aload_1
      45: invokevirtual #79                 // Method javax/faces/component/UIViewRoot.processSaveState:(Ljavax/faces/context/FacesContext;)Ljava/lang/Object;
      48: astore        4
      50: new           #80                 // class java/util/ArrayList
      53: dup
      54: bipush        32
      56: invokespecial #81                 // Method java/util/ArrayList."<init>":(I)V
      59: astore        5
      61: aload_0
      62: aload         5
      64: iconst_0
      65: aload_3
      66: invokespecial #22                 // Method captureChild:(Ljava/util/List;ILjavax/faces/component/UIComponent;)V
      69: aload         5
      71: invokeinterface #82,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      76: astore        6
      78: iconst_2
      79: anewarray     #64                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload         6
      86: aastore
      87: dup
      88: iconst_1
      89: aload         4
      91: aastore
      92: astore_2
      93: aload_2
      94: areturn

  static {};
    Code:
       0: ldc_w         #83                 // class com/sun/faces/application/view/JspStateManagementStrategy
       3: invokevirtual #84                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #46                 // Field $assertionsDisabled:Z
      17: getstatic     #85                 // Field com/sun/faces/util/FacesLogger.APPLICATION_VIEW:Lcom/sun/faces/util/FacesLogger;
      20: invokevirtual #86                 // Method com/sun/faces/util/FacesLogger.getLogger:()Ljava/util/logging/Logger;
      23: putstatic     #34                 // Field LOGGER:Ljava/util/logging/Logger;
      26: return
}
