Compiled from "BootstrapLogger.java"
public class org.wildfly.swarm.bootstrap.logging.BootstrapLogger {
  private static java.util.Map<java.lang.String, org.wildfly.swarm.bootstrap.logging.BootstrapLogger> LOGGERS;

  private static org.wildfly.swarm.bootstrap.logging.BackingLoggerManager MANAGER;

  private static java.lang.Object LOCK;

  private final java.lang.String name;

  private org.wildfly.swarm.bootstrap.logging.BackingLogger backingLogger;

  private org.wildfly.swarm.bootstrap.logging.BootstrapLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: return

  public static org.wildfly.swarm.bootstrap.logging.BootstrapLogger logger(java.lang.String);
    Code:
       0: getstatic     #3                  // Field LOGGERS:Ljava/util/Map;
       3: dup
       4: astore_1
       5: monitorenter
       6: getstatic     #3                  // Field LOGGERS:Ljava/util/Map;
       9: aload_0
      10: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #5                  // class org/wildfly/swarm/bootstrap/logging/BootstrapLogger
      18: astore_2
      19: aload_2
      20: ifnonnull     43
      23: new           #5                  // class org/wildfly/swarm/bootstrap/logging/BootstrapLogger
      26: dup
      27: aload_0
      28: invokespecial #6                  // Method "<init>":(Ljava/lang/String;)V
      31: astore_2
      32: getstatic     #3                  // Field LOGGERS:Ljava/util/Map;
      35: aload_0
      36: aload_2
      37: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_2
      44: aload_1
      45: monitorexit
      46: areturn
      47: astore_3
      48: aload_1
      49: monitorexit
      50: aload_3
      51: athrow
    Exception table:
       from    to  target type
           6    46    47   any
          47    50    47   any

  public static void setBackingLoggerManager(org.wildfly.swarm.bootstrap.logging.BackingLoggerManager);
    Code:
       0: getstatic     #8                  // Field LOCK:Ljava/lang/Object;
       3: dup
       4: astore_1
       5: monitorenter
       6: aload_0
       7: putstatic     #9                  // Field MANAGER:Lorg/wildfly/swarm/bootstrap/logging/BackingLoggerManager;
      10: getstatic     #3                  // Field LOGGERS:Ljava/util/Map;
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: invokedynamic #11,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      23: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: return
    Exception table:
       from    to  target type
           6    30    33   any
          33    36    33   any

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.trace:(Ljava/lang/Object;)V
      10: return

  public void debug(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.debug:(Ljava/lang/Object;)V
      10: return

  public void info(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.info:(Ljava/lang/Object;)V
      10: return

  public void warn(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.warn:(Ljava/lang/Object;)V
      10: return

  public void error(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.error:(Ljava/lang/Object;)V
      10: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public java.lang.Object getLevel();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: invokeinterface #20,  1           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.getLevel:()Ljava/lang/Object;
       9: areturn

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: invokeinterface #21,  1           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.isDebugEnabled:()Z
       9: ireturn

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBackingLogger:()Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: invokeinterface #22,  1           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLogger.isTraceEnabled:()Z
       9: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String [
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #27                 // String :
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #28                 // Method getLevel:()Ljava/lang/Object;
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #30                 // String ]
      33: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  private org.wildfly.swarm.bootstrap.logging.BackingLogger getBackingLogger();
    Code:
       0: aload_0
       1: getfield      #32                 // Field backingLogger:Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       4: ifnonnull     39
       7: getstatic     #8                  // Field LOCK:Ljava/lang/Object;
      10: dup
      11: astore_1
      12: monitorenter
      13: aload_0
      14: getstatic     #9                  // Field MANAGER:Lorg/wildfly/swarm/bootstrap/logging/BackingLoggerManager;
      17: aload_0
      18: getfield      #2                  // Field name:Ljava/lang/String;
      21: invokeinterface #33,  2           // InterfaceMethod org/wildfly/swarm/bootstrap/logging/BackingLoggerManager.getBackingLogger:(Ljava/lang/String;)Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
      26: putfield      #32                 // Field backingLogger:Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
      29: aload_1
      30: monitorexit
      31: goto          39
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
      39: aload_0
      40: getfield      #32                 // Field backingLogger:Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
      43: areturn
    Exception table:
       from    to  target type
          13    31    34   any
          34    37    34   any

  void resetBackingLogger();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #32                 // Field backingLogger:Lorg/wildfly/swarm/bootstrap/logging/BackingLogger;
       5: return

  static {};
    Code:
       0: new           #34                 // class java/util/HashMap
       3: dup
       4: invokespecial #35                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #3                  // Field LOGGERS:Ljava/util/Map;
      10: getstatic     #36                 // Field org/wildfly/swarm/bootstrap/logging/InitialLoggerManager.INSTANCE:Lorg/wildfly/swarm/bootstrap/logging/InitialLoggerManager;
      13: putstatic     #9                  // Field MANAGER:Lorg/wildfly/swarm/bootstrap/logging/BackingLoggerManager;
      16: new           #37                 // class java/lang/Object
      19: dup
      20: invokespecial #1                  // Method java/lang/Object."<init>":()V
      23: putstatic     #8                  // Field LOCK:Ljava/lang/Object;
      26: return
}
