Compiled from "XmlPullParser.java"
public interface org.jboss.modules.xml.XmlPullParser {
  public static final java.lang.String NO_NAMESPACE;

  public static final int START_DOCUMENT;

  public static final int END_DOCUMENT;

  public static final int START_TAG;

  public static final int END_TAG;

  public static final int TEXT;

  public static final int CDSECT;

  public static final int ENTITY_REF;

  public static final int IGNORABLE_WHITESPACE;

  public static final int PROCESSING_INSTRUCTION;

  public static final int COMMENT;

  public static final int DOCDECL;

  public static final java.lang.String[] TYPES;

  public static final java.lang.String FEATURE_PROCESS_NAMESPACES;

  public static final java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES;

  public static final java.lang.String FEATURE_PROCESS_DOCDECL;

  public static final java.lang.String FEATURE_VALIDATION;

  public abstract void setFeature(java.lang.String, boolean) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract boolean getFeature(java.lang.String);

  public abstract void setProperty(java.lang.String, java.lang.Object) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract java.lang.Object getProperty(java.lang.String);

  public abstract void setInput(java.io.Reader) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract void setInput(java.io.InputStream, java.lang.String) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract java.lang.String getInputEncoding();

  public abstract void defineEntityReplacementText(java.lang.String, java.lang.String) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract int getNamespaceCount(int) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract java.lang.String getNamespacePrefix(int) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract java.lang.String getNamespaceUri(int) throws org.jboss.modules.xml.XmlPullParserException;

  public abstract java.lang.String getNamespace(java.lang.String);

  public abstract int getDepth();

  public abstract java.lang.String getPositionDescription();

  public abstract int getLineNumber();

  public abstract int getColumnNumber();

  public abstract boolean isWhitespace() throws org.jboss.modules.xml.XmlPullParserException;

  public abstract java.lang.String getText();

  public abstract char[] getTextCharacters(int[]);

  public abstract java.lang.String getNamespace();

  public abstract java.lang.String getName();

  public abstract java.lang.String getPrefix();

  public abstract boolean isEmptyElementTag() throws org.jboss.modules.xml.XmlPullParserException;

  public abstract int getAttributeCount();

  public abstract java.lang.String getAttributeNamespace(int);

  public abstract java.lang.String getAttributeName(int);

  public abstract java.lang.String getAttributePrefix(int);

  public abstract java.lang.String getAttributeType(int);

  public abstract boolean isAttributeDefault(int);

  public abstract java.lang.String getAttributeValue(int);

  public abstract java.lang.String getAttributeValue(java.lang.String, java.lang.String);

  public abstract int getEventType();

  public abstract int next() throws org.jboss.modules.xml.XmlPullParserException, java.io.IOException;

  public abstract int nextToken() throws org.jboss.modules.xml.XmlPullParserException, java.io.IOException;

  public abstract void require(int, java.lang.String, java.lang.String) throws org.jboss.modules.xml.XmlPullParserException, java.io.IOException;

  public abstract java.lang.String nextText() throws org.jboss.modules.xml.XmlPullParserException, java.io.IOException;

  public abstract int nextTag() throws org.jboss.modules.xml.XmlPullParserException, java.io.IOException;

  static {};
    Code:
       0: bipush        11
       2: anewarray     #1                  // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #2                  // String START_DOCUMENT
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #3                  // String END_DOCUMENT
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #4                  // String START_TAG
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #5                  // String END_TAG
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #6                  // String TEXT
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #7                  // String CDSECT
      34: aastore
      35: dup
      36: bipush        6
      38: ldc           #8                  // String ENTITY_REF
      40: aastore
      41: dup
      42: bipush        7
      44: ldc           #9                  // String IGNORABLE_WHITESPACE
      46: aastore
      47: dup
      48: bipush        8
      50: ldc           #10                 // String PROCESSING_INSTRUCTION
      52: aastore
      53: dup
      54: bipush        9
      56: ldc           #11                 // String COMMENT
      58: aastore
      59: dup
      60: bipush        10
      62: ldc           #12                 // String DOCDECL
      64: aastore
      65: putstatic     #13                 // Field TYPES:[Ljava/lang/String;
      68: return
}
