Compiled from "Base64.scala"
public class pl.morgaroth.utils.strings.Base64Decoding$FromBase64DecodableString {
  private final java.lang.String string;

  public final pl.morgaroth.utils.strings.Base64Decoding $outer;

  public byte[] fromBase64();
    Code:
       0: new           #13                 // class sun/misc/BASE64Decoder
       3: dup
       4: invokespecial #17                 // Method sun/misc/BASE64Decoder."<init>":()V
       7: aload_0
       8: getfield      #19                 // Field string:Ljava/lang/String;
      11: invokevirtual #23                 // Method sun/misc/BASE64Decoder.decodeBuffer:(Ljava/lang/String;)[B
      14: areturn

  public pl.morgaroth.utils.strings.Base64Decoding pl$morgaroth$utils$strings$Base64Decoding$FromBase64DecodableString$$$outer();
    Code:
       0: aload_0
       1: getfield      #29                 // Field $outer:Lpl/morgaroth/utils/strings/Base64Decoding;
       4: areturn

  public pl.morgaroth.utils.strings.Base64Decoding$FromBase64DecodableString(pl.morgaroth.utils.strings.Base64Decoding, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #19                 // Field string:Ljava/lang/String;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #29                 // Field $outer:Lpl/morgaroth/utils/strings/Base64Decoding;
      16: aload_0
      17: invokespecial #31                 // Method java/lang/Object."<init>":()V
      20: return
}
