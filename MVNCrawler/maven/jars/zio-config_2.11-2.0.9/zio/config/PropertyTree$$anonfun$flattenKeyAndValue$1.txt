Compiled from "PropertyTree.scala"
public final class zio.config.PropertyTree$$anonfun$flattenKeyAndValue$1 extends scala.runtime.AbstractFunction1<scala.Tuple2<scala.collection.immutable.Vector<K1>, scala.collection.immutable.$colon$colon<V1>>, scala.Tuple2<java.lang.String, java.lang.String>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final java.lang.String pathDelimiter$1;

  private final java.lang.String valueDelimiter$2;

  private final scala.Predef$$eq$colon$eq KS$1;

  public final scala.Tuple2<java.lang.String, java.lang.String> apply(scala.Tuple2<scala.collection.immutable.Vector<K1>, scala.collection.immutable.$colon$colon<V1>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        70
       6: aload_2
       7: invokevirtual #30                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #32                 // class scala/collection/immutable/Vector
      13: astore_3
      14: aload_2
      15: invokevirtual #35                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #37                 // class scala/collection/immutable/$colon$colon
      21: astore        4
      23: new           #26                 // class scala/Tuple2
      26: dup
      27: aload_3
      28: aload_0
      29: getfield      #39                 // Field KS$1:Lscala/Predef$$eq$colon$eq;
      32: getstatic     #45                 // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      35: invokevirtual #49                 // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #53                 // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #55                 // class scala/collection/TraversableOnce
      44: aload_0
      45: getfield      #57                 // Field pathDelimiter$1:Ljava/lang/String;
      48: invokeinterface #61,  2           // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
      53: aload         4
      55: aload_0
      56: getfield      #63                 // Field valueDelimiter$2:Ljava/lang/String;
      59: invokevirtual #64                 // Method scala/collection/immutable/$colon$colon.mkString:(Ljava/lang/String;)Ljava/lang/String;
      62: invokespecial #68                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      65: astore        5
      67: aload         5
      69: areturn
      70: new           #70                 // class scala/MatchError
      73: dup
      74: aload_2
      75: invokespecial #73                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class scala/Tuple2
       5: invokevirtual #84                 // Method apply:(Lscala/Tuple2;)Lscala/Tuple2;
       8: areturn

  public zio.config.PropertyTree$$anonfun$flattenKeyAndValue$1(zio.config.PropertyTree<K, V>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #57                 // Field pathDelimiter$1:Ljava/lang/String;
       5: aload_0
       6: aload_3
       7: putfield      #63                 // Field valueDelimiter$2:Ljava/lang/String;
      10: aload_0
      11: aload         4
      13: putfield      #39                 // Field KS$1:Lscala/Predef$$eq$colon$eq;
      16: aload_0
      17: invokespecial #90                 // Method scala/runtime/AbstractFunction1."<init>":()V
      20: return
}
