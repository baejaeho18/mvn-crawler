Compiled from "ConfigDescriptorModule.scala"
public final class zio.config.ConfigDescriptorModule$ConfigDescriptorFunctions$$anonfun$listOrSingleton$1$$anonfun$apply$27 extends scala.runtime.AbstractFunction1<A, scala.util.Right<scala.runtime.Nothing$, scala.collection.immutable.List<A>>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.util.Right<scala.runtime.Nothing$, scala.collection.immutable.List<A>> apply(A);
    Code:
       0: getstatic     #22                 // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #26                 // Method scala/package$.Right:()Lscala/util/Right$;
       6: getstatic     #31                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       9: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: iconst_1
      13: anewarray     #38                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: invokevirtual #42                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      23: invokevirtual #45                 // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      26: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      29: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method apply:(Ljava/lang/Object;)Lscala/util/Right;
       5: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorFunctions$$anonfun$listOrSingleton$1$$anonfun$apply$27(zio.config.ConfigDescriptorModule$ConfigDescriptorFunctions$$anonfun$listOrSingleton$1);
    Code:
       0: aload_0
       1: invokespecial #61                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
