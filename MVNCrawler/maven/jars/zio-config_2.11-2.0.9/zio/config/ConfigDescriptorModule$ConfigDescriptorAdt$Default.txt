Compiled from "ConfigDescriptorModule.scala"
public class zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Default<A> implements zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, scala.Product, scala.Serializable {
  private final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> config;

  private final A default;

  public final zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$ $outer;

  private final scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSource> sources;

  private volatile boolean bitmap$0;

  private scala.collection.immutable.Set sources$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #29                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #34                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.sources:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lscala/collection/immutable/Set;
      16: putfield      #36                 // Field sources:Lscala/collection/immutable/Set;
      19: aload_0
      20: iconst_1
      21: putfield      #29                 // Field bitmap$0:Z
      24: getstatic     #42                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: pop
      28: aload_1
      29: monitorexit
      30: aload_0
      31: getfield      #36                 // Field sources:Lscala/collection/immutable/Set;
      34: areturn
      35: aload_1
      36: monitorexit
      37: athrow
    Exception table:
       from    to  target type
           4    30    35   any

  public scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSource> sources();
    Code:
       0: aload_0
       1: getfield      #29                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #36                 // Field sources:Lscala/collection/immutable/Set;
      11: goto          18
      14: aload_0
      15: invokespecial #48                 // Method sources$lzycompute:()Lscala/collection/immutable/Set;
      18: areturn

  public <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> apply(scala.Function1<A, B>, scala.Function1<B, scala.Option<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.apply:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public <B extends scala.Product> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> to(zio.config.TupleConversion<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.to:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lzio/config/TupleConversion;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> $qmark$qmark(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$qmark$qmark:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/String;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B, C> zio.config.ConfigDescriptorModule$ConfigDescriptor<C> zip(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>, zio.config.InvariantZip<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.zip:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;Lzio/config/InvariantZip;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> $less$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Tuple2<A, B>> $less$times$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$times$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.util.Either<A, B>> $less$plus$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$plus$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> default(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.default:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/Object;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> describe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.describe:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/String;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> from(zio.config.ConfigSourceModule$ConfigSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.from:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lzio/config/ConfigSourceModule$ConfigSource;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> map(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.map:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> mapEither(scala.Function1<A, scala.util.Either<java.lang.String, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.mapEither:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptor<A> mapKey(scala.Function1<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.mapKey:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Option<A>> optional();
    Code:
       0: aload_0
       1: invokestatic  #122                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.optional:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> orElse(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.orElse:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.util.Either<A, B>> orElseEither(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.orElseEither:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> unsourced();
    Code:
       0: aload_0
       1: invokestatic  #131                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.unsourced:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> updateSource(scala.Function1<zio.config.ConfigSourceModule$ConfigSource, zio.config.ConfigSourceModule$ConfigSource>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.updateSource:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transform(scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transform:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFail(scala.Function1<A, scala.util.Either<java.lang.String, B>>, scala.Function1<B, scala.util.Either<java.lang.String, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFail:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFailLeft(scala.Function1<A, scala.util.Either<java.lang.String, B>>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #143                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFailLeft:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFailRight(scala.Function1<A, B>, scala.Function1<B, scala.util.Either<java.lang.String, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #147                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFailRight:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public <B, Out, C> zio.config.ConfigDescriptorModule$ConfigDescriptor<C> zipWith(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>, scala.Function1<Out, scala.util.Either<java.lang.String, C>>, scala.Function1<C, scala.util.Either<java.lang.String, Out>>, zio.config.InvariantZip<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #152                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.zipWith:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;Lscala/Function1;Lscala/Function1;Lzio/config/InvariantZip;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       9: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptor<A> config();
    Code:
       0: aload_0
       1: getfield      #154                // Field config:Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public A default();
    Code:
       0: aload_0
       1: getfield      #157                // Field default:Ljava/lang/Object;
       4: areturn

  public <A> zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Default<A> copy(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, A);
    Code:
       0: new           #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Default
       3: dup
       4: aload_0
       5: invokevirtual #163                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Default$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       8: aload_1
       9: aload_2
      10: invokespecial #167                // Method "<init>":(Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/Object;)V
      13: areturn

  public <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<A> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #170                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public <A> A copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method default:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #177                // String Default
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #183                // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #189                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #192                // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #195                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #173                // Method default:()Ljava/lang/Object;
      43: goto          50
      46: aload_0
      47: invokevirtual #170                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #205                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #209                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Default
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #205                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #216                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #205                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #220                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     109
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Default
      11: ifeq          33
      14: aload_2
      15: checkcast     #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Default
      18: invokevirtual #163                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Default$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      21: aload_0
      22: invokevirtual #163                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Default$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      25: if_acmpne     33
      28: iconst_1
      29: istore_3
      30: goto          35
      33: iconst_0
      34: istore_3
      35: iload_3
      36: ifeq          113
      39: aload_1
      40: checkcast     #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Default
      43: astore        4
      45: aload_0
      46: invokevirtual #170                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      49: aload         4
      51: invokevirtual #170                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      54: astore        5
      56: dup
      57: ifnonnull     69
      60: pop
      61: aload         5
      63: ifnull        77
      66: goto          105
      69: aload         5
      71: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          105
      77: aload_0
      78: invokevirtual #173                // Method default:()Ljava/lang/Object;
      81: aload         4
      83: invokevirtual #173                // Method default:()Ljava/lang/Object;
      86: invokestatic  #226                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      89: ifeq          105
      92: aload         4
      94: aload_0
      95: invokevirtual #228                // Method canEqual:(Ljava/lang/Object;)Z
      98: ifeq          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: ifeq          113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: ireturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$ zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Default$$$outer();
    Code:
       0: aload_0
       1: getfield      #230                // Field $outer:Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       4: areturn

  public zio.config.ConfigDescriptorModule zio$config$ConfigDescriptorModule$ConfigDescriptor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Default$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       4: invokevirtual #237                // Method zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$.zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$$$outer:()Lzio/config/ConfigDescriptorModule;
       7: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Default(zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$, zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, A);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #154                // Field config:Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: aload_0
       6: aload_3
       7: putfield      #157                // Field default:Ljava/lang/Object;
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #230                // Field $outer:Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      21: aload_0
      22: invokespecial #240                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #244                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$init$:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)V
      29: aload_0
      30: invokestatic  #249                // Method scala/Product$class.$init$:(Lscala/Product;)V
      33: return
}
