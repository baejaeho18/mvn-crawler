Compiled from "PropertyTree.scala"
public abstract class zio.config.PropertyTree$class {
  public static zio.config.PropertyTree flatMap(zio.config.PropertyTree, scala.Function1);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          36
       9: aload_2
      10: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      13: astore_3
      14: aload_3
      15: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      18: astore        4
      20: aload_1
      21: aload         4
      23: invokeinterface #19,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #21                 // class zio/config/PropertyTree
      31: astore        5
      33: goto          163
      36: aload_2
      37: instanceof    #23                 // class zio/config/PropertyTree$Record
      40: ifeq          93
      43: aload_2
      44: checkcast     #23                 // class zio/config/PropertyTree$Record
      47: astore        6
      49: aload         6
      51: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      54: astore        7
      56: new           #23                 // class zio/config/PropertyTree$Record
      59: dup
      60: aload         7
      62: new           #28                 // class zio/config/PropertyTree$$anonfun$flatMap$1
      65: dup
      66: aload_0
      67: aload_1
      68: invokespecial #32                 // Method zio/config/PropertyTree$$anonfun$flatMap$1."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
      71: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      74: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      77: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      82: checkcast     #44                 // class scala/collection/immutable/Map
      85: invokespecial #51                 // Method zio/config/PropertyTree$Record."<init>":(Lscala/collection/immutable/Map;)V
      88: astore        5
      90: goto          163
      93: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
      96: aload_2
      97: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     100: ifeq          111
     103: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     106: astore        5
     108: goto          163
     111: aload_2
     112: instanceof    #62                 // class zio/config/PropertyTree$Sequence
     115: ifeq          166
     118: aload_2
     119: checkcast     #62                 // class zio/config/PropertyTree$Sequence
     122: astore        8
     124: aload         8
     126: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
     129: astore        9
     131: new           #62                 // class zio/config/PropertyTree$Sequence
     134: dup
     135: aload         9
     137: new           #67                 // class zio/config/PropertyTree$$anonfun$flatMap$2
     140: dup
     141: aload_0
     142: aload_1
     143: invokespecial #68                 // Method zio/config/PropertyTree$$anonfun$flatMap$2."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
     146: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     149: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     152: invokevirtual #77                 // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     155: checkcast     #76                 // class scala/collection/immutable/List
     158: invokespecial #80                 // Method zio/config/PropertyTree$Sequence."<init>":(Lscala/collection/immutable/List;)V
     161: astore        5
     163: aload         5
     165: areturn
     166: new           #82                 // class scala/MatchError
     169: dup
     170: aload_2
     171: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     174: athrow

  public static zio.config.PropertyTree leafNotASequence(zio.config.PropertyTree);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          33
       9: aload_1
      10: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      13: astore_2
      14: aload_2
      15: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      18: astore_3
      19: new           #9                  // class zio/config/PropertyTree$Leaf
      22: dup
      23: aload_3
      24: iconst_0
      25: invokespecial #97                 // Method zio/config/PropertyTree$Leaf."<init>":(Ljava/lang/Object;Z)V
      28: astore        4
      30: goto          158
      33: aload_1
      34: instanceof    #23                 // class zio/config/PropertyTree$Record
      37: ifeq          89
      40: aload_1
      41: checkcast     #23                 // class zio/config/PropertyTree$Record
      44: astore        5
      46: aload         5
      48: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      51: astore        6
      53: new           #23                 // class zio/config/PropertyTree$Record
      56: dup
      57: aload         6
      59: new           #99                 // class zio/config/PropertyTree$$anonfun$leafNotASequence$1
      62: dup
      63: aload_0
      64: invokespecial #102                // Method zio/config/PropertyTree$$anonfun$leafNotASequence$1."<init>":(Lzio/config/PropertyTree;)V
      67: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      70: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      73: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      78: checkcast     #44                 // class scala/collection/immutable/Map
      81: invokespecial #51                 // Method zio/config/PropertyTree$Record."<init>":(Lscala/collection/immutable/Map;)V
      84: astore        4
      86: goto          158
      89: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
      92: aload_1
      93: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      96: ifeq          107
      99: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     102: astore        4
     104: goto          158
     107: aload_1
     108: instanceof    #62                 // class zio/config/PropertyTree$Sequence
     111: ifeq          161
     114: aload_1
     115: checkcast     #62                 // class zio/config/PropertyTree$Sequence
     118: astore        7
     120: aload         7
     122: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
     125: astore        8
     127: new           #62                 // class zio/config/PropertyTree$Sequence
     130: dup
     131: aload         8
     133: new           #104                // class zio/config/PropertyTree$$anonfun$leafNotASequence$2
     136: dup
     137: aload_0
     138: invokespecial #105                // Method zio/config/PropertyTree$$anonfun$leafNotASequence$2."<init>":(Lzio/config/PropertyTree;)V
     141: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     144: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     147: invokevirtual #77                 // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     150: checkcast     #76                 // class scala/collection/immutable/List
     153: invokespecial #80                 // Method zio/config/PropertyTree$Sequence."<init>":(Lscala/collection/immutable/List;)V
     156: astore        4
     158: aload         4
     160: areturn
     161: new           #82                 // class scala/MatchError
     164: dup
     165: aload_1
     166: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     169: athrow

  public static zio.config.PropertyTree zip(zio.config.PropertyTree, zio.config.PropertyTree);
    Code:
       0: aload_0
       1: new           #109                // class zio/config/PropertyTree$$anonfun$zip$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #112                // Method zio/config/PropertyTree$$anonfun$zip$1."<init>":(Lzio/config/PropertyTree;Lzio/config/PropertyTree;)V
      10: invokeinterface #115,  2          // InterfaceMethod zio/config/PropertyTree.flatMap:(Lscala/Function1;)Lzio/config/PropertyTree;
      15: areturn

  public static final zio.config.PropertyTree at(zio.config.PropertyTree, zio.config.PropertyTreePath);
    Code:
       0: aload_1
       1: invokevirtual #124                // Method zio/config/PropertyTreePath.path:()Lscala/collection/immutable/Vector;
       4: astore_2
       5: aload_2
       6: aload_0
       7: new           #126                // class zio/config/PropertyTree$$anonfun$at$1
      10: dup
      11: aload_0
      12: invokespecial #127                // Method zio/config/PropertyTree$$anonfun$at$1."<init>":(Lzio/config/PropertyTree;)V
      15: invokevirtual #133                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      18: checkcast     #21                 // class zio/config/PropertyTree
      21: areturn

  public static final scala.Option atKey(zio.config.PropertyTree, java.lang.Object);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          16
       9: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
      12: astore_3
      13: goto          72
      16: aload_2
      17: instanceof    #23                 // class zio/config/PropertyTree$Record
      20: ifeq          44
      23: aload_2
      24: checkcast     #23                 // class zio/config/PropertyTree$Record
      27: astore        4
      29: aload         4
      31: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      34: aload_1
      35: invokeinterface #148,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      40: astore_3
      41: goto          72
      44: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
      47: aload_2
      48: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          61
      54: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
      57: astore_3
      58: goto          72
      61: aload_2
      62: instanceof    #62                 // class zio/config/PropertyTree$Sequence
      65: ifeq          74
      68: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
      71: astore_3
      72: aload_3
      73: areturn
      74: new           #82                 // class scala/MatchError
      77: dup
      78: aload_2
      79: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      82: athrow

  public static final scala.Option atIndex(zio.config.PropertyTree, int);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          69
       9: aload_2
      10: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      13: astore_3
      14: aload_3
      15: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      18: astore        4
      20: aload_3
      21: invokevirtual #157                // Method zio/config/PropertyTree$Leaf.canBeSequence:()Z
      24: istore        5
      26: iload_1
      27: iconst_0
      28: if_icmpne     61
      31: iload         5
      33: ifeq          61
      36: new           #159                // class scala/Some
      39: dup
      40: new           #9                  // class zio/config/PropertyTree$Leaf
      43: dup
      44: aload         4
      46: getstatic     #164                // Field zio/config/PropertyTree$Leaf$.MODULE$:Lzio/config/PropertyTree$Leaf$;
      49: invokevirtual #167                // Method zio/config/PropertyTree$Leaf$.apply$default$2:()Z
      52: invokespecial #97                 // Method zio/config/PropertyTree$Leaf."<init>":(Ljava/lang/Object;Z)V
      55: invokespecial #168                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      58: goto          64
      61: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
      64: astore        6
      66: goto          141
      69: aload_2
      70: instanceof    #23                 // class zio/config/PropertyTree$Record
      73: ifeq          84
      76: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
      79: astore        6
      81: goto          141
      84: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
      87: aload_2
      88: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      91: ifeq          102
      94: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
      97: astore        6
      99: goto          141
     102: aload_2
     103: instanceof    #62                 // class zio/config/PropertyTree$Sequence
     106: ifeq          144
     109: aload_2
     110: checkcast     #62                 // class zio/config/PropertyTree$Sequence
     113: astore        7
     115: aload         7
     117: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
     120: astore        8
     122: aload         8
     124: invokevirtual #172                // Method scala/collection/immutable/List.lift:()Lscala/Function1;
     127: iload_1
     128: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     131: invokeinterface #19,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     136: checkcast     #151                // class scala/Option
     139: astore        6
     141: aload         6
     143: areturn
     144: new           #82                 // class scala/MatchError
     147: dup
     148: aload_2
     149: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     152: athrow

  public static final scala.collection.immutable.Map flatten(zio.config.PropertyTree);
    Code:
       0: aload_0
       1: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
       4: invokevirtual #194                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       7: invokevirtual #199                // Method scala/collection/immutable/Vector$.empty:()Lscala/collection/immutable/Vector;
      10: aload_0
      11: getstatic     #204                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: invokevirtual #208                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      17: invokevirtual #210                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
      20: invokestatic  #214                // Method go$1:(Lzio/config/PropertyTree;Lscala/collection/immutable/Vector;Lzio/config/PropertyTree;Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;
      23: areturn

  public static final scala.collection.immutable.Map flattenKeyAndValue(zio.config.PropertyTree, java.lang.String, java.lang.String, scala.Predef$$eq$colon$eq);
    Code:
       0: aload_0
       1: invokeinterface #218,  1          // InterfaceMethod zio/config/PropertyTree.flatten:()Lscala/collection/immutable/Map;
       6: new           #220                // class zio/config/PropertyTree$$anonfun$flattenKeyAndValue$1
       9: dup
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokespecial #223                // Method zio/config/PropertyTree$$anonfun$flattenKeyAndValue$1."<init>":(Lzio/config/PropertyTree;Ljava/lang/String;Ljava/lang/String;Lscala/Predef$$eq$colon$eq;)V
      17: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      20: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      23: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      28: checkcast     #44                 // class scala/collection/immutable/Map
      31: areturn

  public static final java.lang.String flattenKeyAndValue$default$1(zio.config.PropertyTree);
    Code:
       0: ldc           #232                // String .
       2: areturn

  public static final java.lang.String flattenKeyAndValue$default$2(zio.config.PropertyTree);
    Code:
       0: ldc           #235                // String :
       2: areturn

  public static final scala.collection.immutable.Map flattenKeyWith(zio.config.PropertyTree, scala.Function1, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #218,  1          // InterfaceMethod zio/config/PropertyTree.flatten:()Lscala/collection/immutable/Map;
       6: new           #239                // class zio/config/PropertyTree$$anonfun$flattenKeyWith$1
       9: dup
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #242                // Method zio/config/PropertyTree$$anonfun$flattenKeyWith$1."<init>":(Lzio/config/PropertyTree;Lscala/Function1;Ljava/lang/String;)V
      16: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      19: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      22: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #44                 // class scala/collection/immutable/Map
      30: areturn

  public static final scala.collection.immutable.Map flattenString(zio.config.PropertyTree, java.lang.String, scala.Predef$$eq$colon$eq);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #248,  3          // InterfaceMethod zio/config/PropertyTree.flattenKeyWith:(Lscala/Function1;Ljava/lang/String;)Lscala/collection/immutable/Map;
       8: areturn

  public static final java.lang.String flattenString$default$1(zio.config.PropertyTree);
    Code:
       0: ldc           #232                // String .
       2: areturn

  public static final zio.config.PropertyTree getOrElse(zio.config.PropertyTree, scala.Function0);
    Code:
       0: aload_0
       1: getstatic     #256                // Field zio/config/PropertyTree$.MODULE$:Lzio/config/PropertyTree$;
       4: invokevirtual #259                // Method zio/config/PropertyTree$.empty:()Lzio/config/PropertyTree;
       7: astore_2
       8: dup
       9: ifnonnull     20
      12: pop
      13: aload_2
      14: ifnull        27
      17: goto          39
      20: aload_2
      21: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          39
      27: aload_1
      28: invokeinterface #263,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      33: checkcast     #21                 // class zio/config/PropertyTree
      36: goto          40
      39: aload_0
      40: areturn

  public static final zio.config.PropertyTree getPath(zio.config.PropertyTree, scala.collection.immutable.List);
    Code:
       0: aload_1
       1: aload_0
       2: new           #269                // class zio/config/PropertyTree$$anonfun$getPath$1
       5: dup
       6: aload_0
       7: invokespecial #270                // Method zio/config/PropertyTree$$anonfun$getPath$1."<init>":(Lzio/config/PropertyTree;)V
      10: invokevirtual #271                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: checkcast     #21                 // class zio/config/PropertyTree
      16: areturn

  public static final boolean isEmpty(zio.config.PropertyTree);
    Code:
       0: aload_0
       1: astore_1
       2: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
       5: aload_1
       6: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          97
      17: aload_1
      18: instanceof    #9                  // class zio/config/PropertyTree$Leaf
      21: ifeq          29
      24: iconst_0
      25: istore_2
      26: goto          97
      29: aload_1
      30: instanceof    #23                 // class zio/config/PropertyTree$Record
      33: ifeq          63
      36: aload_1
      37: checkcast     #23                 // class zio/config/PropertyTree$Record
      40: astore_3
      41: aload_3
      42: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      45: astore        4
      47: aload         4
      49: invokeinterface #278,  1          // InterfaceMethod scala/collection/immutable/Map.values:()Lscala/collection/Iterable;
      54: invokeinterface #282,  1          // InterfaceMethod scala/collection/Iterable.isEmpty:()Z
      59: istore_2
      60: goto          97
      63: aload_1
      64: instanceof    #62                 // class zio/config/PropertyTree$Sequence
      67: ifeq          99
      70: aload_1
      71: checkcast     #62                 // class zio/config/PropertyTree$Sequence
      74: astore        5
      76: aload         5
      78: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
      81: astore        6
      83: aload         6
      85: new           #284                // class zio/config/PropertyTree$$anonfun$isEmpty$1
      88: dup
      89: aload_0
      90: invokespecial #285                // Method zio/config/PropertyTree$$anonfun$isEmpty$1."<init>":(Lzio/config/PropertyTree;)V
      93: invokevirtual #289                // Method scala/collection/immutable/List.forall:(Lscala/Function1;)Z
      96: istore_2
      97: iload_2
      98: ireturn
      99: new           #82                 // class scala/MatchError
     102: dup
     103: aload_1
     104: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     107: athrow

  public static final zio.config.PropertyTree mapKey(zio.config.PropertyTree, scala.Function1);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          42
       9: aload_2
      10: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      13: astore_3
      14: aload_3
      15: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      18: astore        4
      20: aload_3
      21: invokevirtual #157                // Method zio/config/PropertyTree$Leaf.canBeSequence:()Z
      24: istore        5
      26: new           #9                  // class zio/config/PropertyTree$Leaf
      29: dup
      30: aload         4
      32: iload         5
      34: invokespecial #97                 // Method zio/config/PropertyTree$Leaf."<init>":(Ljava/lang/Object;Z)V
      37: astore        6
      39: goto          169
      42: aload_2
      43: instanceof    #23                 // class zio/config/PropertyTree$Record
      46: ifeq          99
      49: aload_2
      50: checkcast     #23                 // class zio/config/PropertyTree$Record
      53: astore        7
      55: aload         7
      57: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      60: astore        8
      62: new           #23                 // class zio/config/PropertyTree$Record
      65: dup
      66: aload         8
      68: new           #292                // class zio/config/PropertyTree$$anonfun$mapKey$1
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #293                // Method zio/config/PropertyTree$$anonfun$mapKey$1."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
      77: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      80: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      83: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      88: checkcast     #44                 // class scala/collection/immutable/Map
      91: invokespecial #51                 // Method zio/config/PropertyTree$Record."<init>":(Lscala/collection/immutable/Map;)V
      94: astore        6
      96: goto          169
      99: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     102: aload_2
     103: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     106: ifeq          117
     109: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     112: astore        6
     114: goto          169
     117: aload_2
     118: instanceof    #62                 // class zio/config/PropertyTree$Sequence
     121: ifeq          172
     124: aload_2
     125: checkcast     #62                 // class zio/config/PropertyTree$Sequence
     128: astore        9
     130: aload         9
     132: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
     135: astore        10
     137: new           #62                 // class zio/config/PropertyTree$Sequence
     140: dup
     141: aload         10
     143: new           #295                // class zio/config/PropertyTree$$anonfun$mapKey$2
     146: dup
     147: aload_0
     148: aload_1
     149: invokespecial #296                // Method zio/config/PropertyTree$$anonfun$mapKey$2."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
     152: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     155: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     158: invokevirtual #77                 // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     161: checkcast     #76                 // class scala/collection/immutable/List
     164: invokespecial #80                 // Method zio/config/PropertyTree$Sequence."<init>":(Lscala/collection/immutable/List;)V
     167: astore        6
     169: aload         6
     171: areturn
     172: new           #82                 // class scala/MatchError
     175: dup
     176: aload_2
     177: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     180: athrow

  public static final zio.config.PropertyTree map(zio.config.PropertyTree, scala.Function1);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          48
       9: aload_2
      10: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      13: astore_3
      14: aload_3
      15: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      18: astore        4
      20: aload_3
      21: invokevirtual #157                // Method zio/config/PropertyTree$Leaf.canBeSequence:()Z
      24: istore        5
      26: new           #9                  // class zio/config/PropertyTree$Leaf
      29: dup
      30: aload_1
      31: aload         4
      33: invokeinterface #19,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: iload         5
      40: invokespecial #97                 // Method zio/config/PropertyTree$Leaf."<init>":(Ljava/lang/Object;Z)V
      43: astore        6
      45: goto          175
      48: aload_2
      49: instanceof    #23                 // class zio/config/PropertyTree$Record
      52: ifeq          105
      55: aload_2
      56: checkcast     #23                 // class zio/config/PropertyTree$Record
      59: astore        7
      61: aload         7
      63: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      66: astore        8
      68: new           #23                 // class zio/config/PropertyTree$Record
      71: dup
      72: aload         8
      74: new           #298                // class zio/config/PropertyTree$$anonfun$map$1
      77: dup
      78: aload_0
      79: aload_1
      80: invokespecial #299                // Method zio/config/PropertyTree$$anonfun$map$1."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
      83: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      86: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      89: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      94: checkcast     #44                 // class scala/collection/immutable/Map
      97: invokespecial #51                 // Method zio/config/PropertyTree$Record."<init>":(Lscala/collection/immutable/Map;)V
     100: astore        6
     102: goto          175
     105: aload_2
     106: instanceof    #62                 // class zio/config/PropertyTree$Sequence
     109: ifeq          160
     112: aload_2
     113: checkcast     #62                 // class zio/config/PropertyTree$Sequence
     116: astore        9
     118: aload         9
     120: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
     123: astore        10
     125: new           #62                 // class zio/config/PropertyTree$Sequence
     128: dup
     129: aload         10
     131: new           #301                // class zio/config/PropertyTree$$anonfun$map$2
     134: dup
     135: aload_0
     136: aload_1
     137: invokespecial #302                // Method zio/config/PropertyTree$$anonfun$map$2."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
     140: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     143: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     146: invokevirtual #77                 // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     149: checkcast     #76                 // class scala/collection/immutable/List
     152: invokespecial #80                 // Method zio/config/PropertyTree$Sequence."<init>":(Lscala/collection/immutable/List;)V
     155: astore        6
     157: goto          175
     160: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     163: aload_2
     164: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     167: ifeq          178
     170: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     173: astore        6
     175: aload         6
     177: areturn
     178: new           #82                 // class scala/MatchError
     181: dup
     182: aload_2
     183: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     186: athrow

  public static final scala.util.Either mapEither(zio.config.PropertyTree, scala.Function1);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class zio/config/PropertyTree$Leaf
       6: ifeq          61
       9: aload_2
      10: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      13: astore_3
      14: aload_3
      15: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      18: astore        4
      20: aload_3
      21: invokevirtual #157                // Method zio/config/PropertyTree$Leaf.canBeSequence:()Z
      24: istore        5
      26: getstatic     #309                // Field zio/config/VersionSpecificSupport$.MODULE$:Lzio/config/VersionSpecificSupport$;
      29: aload_1
      30: aload         4
      32: invokeinterface #19,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #311                // class scala/util/Either
      40: invokevirtual #315                // Method zio/config/VersionSpecificSupport$.RightBiasedEither:(Lscala/util/Either;)Lzio/config/VersionSpecificSupport$RightBiasedEither;
      43: new           #317                // class zio/config/PropertyTree$$anonfun$mapEither$1
      46: dup
      47: aload_0
      48: iload         5
      50: invokespecial #320                // Method zio/config/PropertyTree$$anonfun$mapEither$1."<init>":(Lzio/config/PropertyTree;Z)V
      53: invokevirtual #325                // Method zio/config/VersionSpecificSupport$RightBiasedEither.map:(Lscala/Function1;)Lscala/util/Either;
      56: astore        6
      58: goto          257
      61: aload_2
      62: instanceof    #23                 // class zio/config/PropertyTree$Record
      65: ifeq          138
      68: aload_2
      69: checkcast     #23                 // class zio/config/PropertyTree$Record
      72: astore        7
      74: aload         7
      76: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
      79: astore        8
      81: aload         8
      83: new           #327                // class zio/config/PropertyTree$$anonfun$1
      86: dup
      87: aload_0
      88: aload_1
      89: invokespecial #328                // Method zio/config/PropertyTree$$anonfun$1."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
      92: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      95: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      98: invokeinterface #48,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     103: checkcast     #44                 // class scala/collection/immutable/Map
     106: astore        9
     108: getstatic     #309                // Field zio/config/VersionSpecificSupport$.MODULE$:Lzio/config/VersionSpecificSupport$;
     111: getstatic     #333                // Field zio/config/package$.MODULE$:Lzio/config/package$;
     114: aload         9
     116: invokevirtual #337                // Method zio/config/package$.seqMap:(Lscala/collection/immutable/Map;)Lscala/util/Either;
     119: invokevirtual #315                // Method zio/config/VersionSpecificSupport$.RightBiasedEither:(Lscala/util/Either;)Lzio/config/VersionSpecificSupport$RightBiasedEither;
     122: new           #339                // class zio/config/PropertyTree$$anonfun$mapEither$2
     125: dup
     126: aload_0
     127: invokespecial #340                // Method zio/config/PropertyTree$$anonfun$mapEither$2."<init>":(Lzio/config/PropertyTree;)V
     130: invokevirtual #325                // Method zio/config/VersionSpecificSupport$RightBiasedEither.map:(Lscala/Function1;)Lscala/util/Either;
     133: astore        6
     135: goto          257
     138: aload_2
     139: instanceof    #62                 // class zio/config/PropertyTree$Sequence
     142: ifeq          233
     145: aload_2
     146: checkcast     #62                 // class zio/config/PropertyTree$Sequence
     149: astore        10
     151: aload         10
     153: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
     156: astore        11
     158: aload         11
     160: new           #342                // class zio/config/PropertyTree$$anonfun$2
     163: dup
     164: aload_0
     165: aload_1
     166: invokespecial #343                // Method zio/config/PropertyTree$$anonfun$2."<init>":(Lzio/config/PropertyTree;Lscala/Function1;)V
     169: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     172: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     175: invokevirtual #77                 // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     178: checkcast     #76                 // class scala/collection/immutable/List
     181: astore        12
     183: getstatic     #309                // Field zio/config/VersionSpecificSupport$.MODULE$:Lzio/config/VersionSpecificSupport$;
     186: aload         12
     188: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
     191: invokevirtual #347                // Method scala/package$.Right:()Lscala/util/Right$;
     194: getstatic     #352                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     197: invokevirtual #357                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
     200: new           #359                // class zio/config/PropertyTree$$anonfun$mapEither$3
     203: dup
     204: aload_0
     205: invokespecial #360                // Method zio/config/PropertyTree$$anonfun$mapEither$3."<init>":(Lzio/config/PropertyTree;)V
     208: invokevirtual #363                // Method scala/collection/immutable/List.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     211: checkcast     #311                // class scala/util/Either
     214: invokevirtual #315                // Method zio/config/VersionSpecificSupport$.RightBiasedEither:(Lscala/util/Either;)Lzio/config/VersionSpecificSupport$RightBiasedEither;
     217: new           #365                // class zio/config/PropertyTree$$anonfun$mapEither$4
     220: dup
     221: aload_0
     222: invokespecial #366                // Method zio/config/PropertyTree$$anonfun$mapEither$4."<init>":(Lzio/config/PropertyTree;)V
     225: invokevirtual #325                // Method zio/config/VersionSpecificSupport$RightBiasedEither.map:(Lscala/Function1;)Lscala/util/Either;
     228: astore        6
     230: goto          257
     233: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     236: aload_2
     237: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     240: ifeq          260
     243: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
     246: invokevirtual #347                // Method scala/package$.Right:()Lscala/util/Right$;
     249: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
     252: invokevirtual #357                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
     255: astore        6
     257: aload         6
     259: areturn
     260: new           #82                 // class scala/MatchError
     263: dup
     264: aload_2
     265: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     268: athrow

  public static zio.config.PropertyTree bimap(zio.config.PropertyTree, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #371,  2          // InterfaceMethod zio/config/PropertyTree.mapKey:(Lscala/Function1;)Lzio/config/PropertyTree;
       7: aload_2
       8: invokeinterface #373,  2          // InterfaceMethod zio/config/PropertyTree.map:(Lscala/Function1;)Lzio/config/PropertyTree;
      13: areturn

  public static final scala.collection.immutable.List merge(zio.config.PropertyTree, zio.config.PropertyTree);
    Code:
       0: new           #378                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #381                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_2
      10: aload_2
      11: ifnull        107
      14: aload_2
      15: invokevirtual #384                // Method scala/Tuple2._1:()Ljava/lang/Object;
      18: checkcast     #21                 // class zio/config/PropertyTree
      21: astore_3
      22: aload_2
      23: invokevirtual #387                // Method scala/Tuple2._2:()Ljava/lang/Object;
      26: checkcast     #21                 // class zio/config/PropertyTree
      29: astore        4
      31: aload_3
      32: instanceof    #62                 // class zio/config/PropertyTree$Sequence
      35: ifeq          107
      38: aload_3
      39: checkcast     #62                 // class zio/config/PropertyTree$Sequence
      42: astore        5
      44: aload         5
      46: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
      49: astore        6
      51: aload         4
      53: instanceof    #62                 // class zio/config/PropertyTree$Sequence
      56: ifeq          107
      59: aload         4
      61: checkcast     #62                 // class zio/config/PropertyTree$Sequence
      64: astore        7
      66: aload         7
      68: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
      71: astore        8
      73: getstatic     #333                // Field zio/config/package$.MODULE$:Lzio/config/package$;
      76: new           #62                 // class zio/config/PropertyTree$Sequence
      79: dup
      80: aload         6
      82: aload         8
      84: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      87: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      90: invokevirtual #391                // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      93: checkcast     #76                 // class scala/collection/immutable/List
      96: invokespecial #80                 // Method zio/config/PropertyTree$Sequence."<init>":(Lscala/collection/immutable/List;)V
      99: invokevirtual #395                // Method zio/config/package$.singleton:(Ljava/lang/Object;)Lscala/collection/immutable/$colon$colon;
     102: astore        9
     104: goto          404
     107: aload_2
     108: ifnull        269
     111: aload_2
     112: invokevirtual #384                // Method scala/Tuple2._1:()Ljava/lang/Object;
     115: checkcast     #21                 // class zio/config/PropertyTree
     118: astore        10
     120: aload_2
     121: invokevirtual #387                // Method scala/Tuple2._2:()Ljava/lang/Object;
     124: checkcast     #21                 // class zio/config/PropertyTree
     127: astore        11
     129: aload         10
     131: instanceof    #23                 // class zio/config/PropertyTree$Record
     134: ifeq          269
     137: aload         10
     139: checkcast     #23                 // class zio/config/PropertyTree$Record
     142: astore        12
     144: aload         11
     146: instanceof    #23                 // class zio/config/PropertyTree$Record
     149: ifeq          269
     152: aload         11
     154: checkcast     #23                 // class zio/config/PropertyTree$Record
     157: astore        13
     159: aload         12
     161: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
     164: invokeinterface #399,  1          // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
     169: aload         13
     171: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
     174: invokeinterface #399,  1          // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
     179: getstatic     #404                // Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
     182: invokevirtual #405                // Method scala/collection/immutable/Set$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     185: invokeinterface #408,  3          // InterfaceMethod scala/collection/immutable/Set.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     190: checkcast     #410                // class scala/collection/TraversableOnce
     193: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     196: getstatic     #204                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     199: iconst_1
     200: anewarray     #44                 // class scala/collection/immutable/Map
     203: dup
     204: iconst_0
     205: getstatic     #204                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     208: invokevirtual #208                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     211: invokevirtual #210                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
     214: aastore
     215: checkcast     #412                // class "[Ljava/lang/Object;"
     218: invokevirtual #416                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     221: invokevirtual #419                // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
     224: new           #421                // class zio/config/PropertyTree$$anonfun$merge$1
     227: dup
     228: aload_0
     229: aload         12
     231: aload         13
     233: invokespecial #424                // Method zio/config/PropertyTree$$anonfun$merge$1."<init>":(Lzio/config/PropertyTree;Lzio/config/PropertyTree$Record;Lzio/config/PropertyTree$Record;)V
     236: invokeinterface #425,  3          // InterfaceMethod scala/collection/TraversableOnce.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     241: checkcast     #76                 // class scala/collection/immutable/List
     244: new           #427                // class zio/config/PropertyTree$$anonfun$merge$2
     247: dup
     248: aload_0
     249: invokespecial #428                // Method zio/config/PropertyTree$$anonfun$merge$2."<init>":(Lzio/config/PropertyTree;)V
     252: getstatic     #73                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     255: invokevirtual #74                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     258: invokevirtual #77                 // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     261: checkcast     #76                 // class scala/collection/immutable/List
     264: astore        9
     266: goto          404
     269: aload_2
     270: ifnull        314
     273: aload_2
     274: invokevirtual #384                // Method scala/Tuple2._1:()Ljava/lang/Object;
     277: checkcast     #21                 // class zio/config/PropertyTree
     280: astore        14
     282: aload_2
     283: invokevirtual #387                // Method scala/Tuple2._2:()Ljava/lang/Object;
     286: checkcast     #21                 // class zio/config/PropertyTree
     289: astore        15
     291: aload         14
     293: invokeinterface #429,  1          // InterfaceMethod zio/config/PropertyTree.isEmpty:()Z
     298: ifeq          314
     301: getstatic     #333                // Field zio/config/package$.MODULE$:Lzio/config/package$;
     304: aload         15
     306: invokevirtual #395                // Method zio/config/package$.singleton:(Ljava/lang/Object;)Lscala/collection/immutable/$colon$colon;
     309: astore        9
     311: goto          404
     314: aload_2
     315: ifnull        359
     318: aload_2
     319: invokevirtual #384                // Method scala/Tuple2._1:()Ljava/lang/Object;
     322: checkcast     #21                 // class zio/config/PropertyTree
     325: astore        16
     327: aload_2
     328: invokevirtual #387                // Method scala/Tuple2._2:()Ljava/lang/Object;
     331: checkcast     #21                 // class zio/config/PropertyTree
     334: astore        17
     336: aload         17
     338: invokeinterface #429,  1          // InterfaceMethod zio/config/PropertyTree.isEmpty:()Z
     343: ifeq          359
     346: getstatic     #333                // Field zio/config/package$.MODULE$:Lzio/config/package$;
     349: aload         16
     351: invokevirtual #395                // Method zio/config/package$.singleton:(Ljava/lang/Object;)Lscala/collection/immutable/$colon$colon;
     354: astore        9
     356: goto          404
     359: aload_2
     360: ifnull        407
     363: aload_2
     364: invokevirtual #384                // Method scala/Tuple2._1:()Ljava/lang/Object;
     367: checkcast     #21                 // class zio/config/PropertyTree
     370: astore        18
     372: aload_2
     373: invokevirtual #387                // Method scala/Tuple2._2:()Ljava/lang/Object;
     376: checkcast     #21                 // class zio/config/PropertyTree
     379: astore        19
     381: aload         18
     383: astore        20
     385: aload         19
     387: astore        21
     389: getstatic     #352                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     392: aload         21
     394: invokevirtual #433                // Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     397: aload         20
     399: invokevirtual #434                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     402: astore        9
     404: aload         9
     406: areturn
     407: new           #82                 // class scala/MatchError
     410: dup
     411: aload_2
     412: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     415: athrow

  public static final boolean nonEmpty(zio.config.PropertyTree);
    Code:
       0: aload_0
       1: invokeinterface #429,  1          // InterfaceMethod zio/config/PropertyTree.isEmpty:()Z
       6: ifeq          13
       9: iconst_0
      10: goto          14
      13: iconst_1
      14: ireturn

  public static final scala.collection.immutable.Map go$1(zio.config.PropertyTree, scala.collection.immutable.Vector, zio.config.PropertyTree, scala.collection.immutable.Map);
    Code:
       0: aload_2
       1: astore        4
       3: getstatic     #56                 // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
       6: aload         4
       8: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          20
      14: aload_3
      15: astore        5
      17: goto          179
      20: aload         4
      22: instanceof    #62                 // class zio/config/PropertyTree$Sequence
      25: ifeq          65
      28: aload         4
      30: checkcast     #62                 // class zio/config/PropertyTree$Sequence
      33: astore        6
      35: aload         6
      37: invokevirtual #65                 // Method zio/config/PropertyTree$Sequence.value:()Lscala/collection/immutable/List;
      40: astore        7
      42: aload         7
      44: aload_3
      45: new           #441                // class zio/config/PropertyTree$$anonfun$go$1$1
      48: dup
      49: aload_0
      50: aload_1
      51: invokespecial #444                // Method zio/config/PropertyTree$$anonfun$go$1$1."<init>":(Lzio/config/PropertyTree;Lscala/collection/immutable/Vector;)V
      54: invokevirtual #271                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      57: checkcast     #44                 // class scala/collection/immutable/Map
      60: astore        5
      62: goto          179
      65: aload         4
      67: instanceof    #9                  // class zio/config/PropertyTree$Leaf
      70: ifeq          129
      73: aload         4
      75: checkcast     #9                  // class zio/config/PropertyTree$Leaf
      78: astore        8
      80: aload         8
      82: invokevirtual #13                 // Method zio/config/PropertyTree$Leaf.value:()Ljava/lang/Object;
      85: astore        9
      87: aload_3
      88: aload_1
      89: invokeinterface #148,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      94: new           #446                // class zio/config/PropertyTree$$anonfun$go$1$2
      97: dup
      98: aload_0
      99: aload_1
     100: aload_3
     101: aload         9
     103: invokespecial #449                // Method zio/config/PropertyTree$$anonfun$go$1$2."<init>":(Lzio/config/PropertyTree;Lscala/collection/immutable/Vector;Lscala/collection/immutable/Map;Ljava/lang/Object;)V
     106: new           #451                // class zio/config/PropertyTree$$anonfun$go$1$3
     109: dup
     110: aload_0
     111: aload_1
     112: aload_3
     113: aload         9
     115: invokespecial #452                // Method zio/config/PropertyTree$$anonfun$go$1$3."<init>":(Lzio/config/PropertyTree;Lscala/collection/immutable/Vector;Lscala/collection/immutable/Map;Ljava/lang/Object;)V
     118: invokevirtual #456                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
     121: checkcast     #44                 // class scala/collection/immutable/Map
     124: astore        5
     126: goto          179
     129: aload         4
     131: instanceof    #23                 // class zio/config/PropertyTree$Record
     134: ifeq          182
     137: aload         4
     139: checkcast     #23                 // class zio/config/PropertyTree$Record
     142: astore        10
     144: aload         10
     146: invokevirtual #26                 // Method zio/config/PropertyTree$Record.value:()Lscala/collection/immutable/Map;
     149: astore        11
     151: aload         11
     153: new           #458                // class zio/config/PropertyTree$$anonfun$go$1$4
     156: dup
     157: aload_0
     158: aload_1
     159: aload_3
     160: invokespecial #461                // Method zio/config/PropertyTree$$anonfun$go$1$4."<init>":(Lzio/config/PropertyTree;Lscala/collection/immutable/Vector;Lscala/collection/immutable/Map;)V
     163: getstatic     #38                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
     166: invokevirtual #42                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     169: invokeinterface #463,  3          // InterfaceMethod scala/collection/immutable/Map.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     174: checkcast     #44                 // class scala/collection/immutable/Map
     177: astore        5
     179: aload         5
     181: areturn
     182: new           #82                 // class scala/MatchError
     185: dup
     186: aload         4
     188: invokespecial #85                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     191: athrow

  public static void $init$(zio.config.PropertyTree);
    Code:
       0: return
}
