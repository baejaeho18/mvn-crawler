Compiled from "InvariantZip.scala"
public interface zio.config.InvariantZipLowPriority0 extends zio.config.InvariantZipLowPriority1 {
  public abstract <A, B, Z> zio.config.InvariantZip<scala.Tuple2<A, B>, Z> invariantZipTuple2();

  public abstract <A, B, C, Z> zio.config.InvariantZip<scala.Tuple3<A, B, C>, Z> invariantZipTuple3();

  public abstract <A, B, C, D, Z> zio.config.InvariantZip<scala.Tuple4<A, B, C, D>, Z> invariantZipTuple4();

  public abstract <A, B, C, D, E, Z> zio.config.InvariantZip<scala.Tuple5<A, B, C, D, E>, Z> invariantZipTuple5();

  public abstract <A, B, C, D, E, F, Z> zio.config.InvariantZip<scala.Tuple6<A, B, C, D, E, F>, Z> invariantZipTuple6();

  public abstract <A, B, C, D, E, F, G, Z> zio.config.InvariantZip<scala.Tuple7<A, B, C, D, E, F, G>, Z> invariantZipTuple7();

  public abstract <A, B, C, D, E, F, G, H, Z> zio.config.InvariantZip<scala.Tuple8<A, B, C, D, E, F, G, H>, Z> invariantZipTuple8();

  public abstract <A, B, C, D, E, F, G, H, I, Z> zio.config.InvariantZip<scala.Tuple9<A, B, C, D, E, F, G, H, I>, Z> invariantZipTuple9();

  public abstract <A, B, C, D, E, F, G, H, I, J, Z> zio.config.InvariantZip<scala.Tuple10<A, B, C, D, E, F, G, H, I, J>, Z> invariantZipTuple10();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, Z> zio.config.InvariantZip<scala.Tuple11<A, B, C, D, E, F, G, H, I, J, K>, Z> invariantZipTuple11();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, Z> zio.config.InvariantZip<scala.Tuple12<A, B, C, D, E, F, G, H, I, J, K, L>, Z> invariantZipTuple12();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, Z> zio.config.InvariantZip<scala.Tuple13<A, B, C, D, E, F, G, H, I, J, K, L, M>, Z> invariantZipTuple13();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z> zio.config.InvariantZip<scala.Tuple14<A, B, C, D, E, F, G, H, I, J, K, L, M, N>, Z> invariantZipTuple14();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z> zio.config.InvariantZip<scala.Tuple15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>, Z> invariantZipTuple15();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z> zio.config.InvariantZip<scala.Tuple16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>, Z> invariantZipTuple16();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z> zio.config.InvariantZip<scala.Tuple17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>, Z> invariantZipTuple17();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z> zio.config.InvariantZip<scala.Tuple18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>, Z> invariantZipTuple18();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z> zio.config.InvariantZip<scala.Tuple19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>, Z> invariantZipTuple19();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z> zio.config.InvariantZip<scala.Tuple20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T>, Z> invariantZipTuple20();

  public abstract <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z> zio.config.InvariantZip<scala.Tuple21<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U>, Z> invariantZipTuple21();
}
