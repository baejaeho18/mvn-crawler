Compiled from "PropertyTree.scala"
public class zio.config.PropertyTree$Empty$ implements zio.config.PropertyTree<scala.runtime.Nothing$, scala.runtime.Nothing$>, scala.Product, scala.Serializable {
  public static final zio.config.PropertyTree$Empty$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class zio/config/PropertyTree$Empty$
       3: invokespecial #19                 // Method "<init>":()V
       6: return

  public <K1, V1> zio.config.PropertyTree<K1, V1> flatMap(scala.Function1<scala.runtime.Nothing$, zio.config.PropertyTree<K1, V1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method zio/config/PropertyTree$class.flatMap:(Lzio/config/PropertyTree;Lscala/Function1;)Lzio/config/PropertyTree;
       5: areturn

  public zio.config.PropertyTree<scala.runtime.Nothing$, scala.runtime.Nothing$> leafNotASequence();
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method zio/config/PropertyTree$class.leafNotASequence:(Lzio/config/PropertyTree;)Lzio/config/PropertyTree;
       4: areturn

  public <K1, V1> zio.config.PropertyTree<K1, scala.Tuple2<scala.runtime.Nothing$, V1>> zip(zio.config.PropertyTree<K1, V1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method zio/config/PropertyTree$class.zip:(Lzio/config/PropertyTree;Lzio/config/PropertyTree;)Lzio/config/PropertyTree;
       5: areturn

  public final <K1> zio.config.PropertyTree<K1, scala.runtime.Nothing$> at(zio.config.PropertyTreePath<K1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // Method zio/config/PropertyTree$class.at:(Lzio/config/PropertyTree;Lzio/config/PropertyTreePath;)Lzio/config/PropertyTree;
       5: areturn

  public final <K1> scala.Option<zio.config.PropertyTree<K1, scala.runtime.Nothing$>> atKey(K1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method zio/config/PropertyTree$class.atKey:(Lzio/config/PropertyTree;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public final <K1> scala.Option<zio.config.PropertyTree<K1, scala.runtime.Nothing$>> atIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method zio/config/PropertyTree$class.atIndex:(Lzio/config/PropertyTree;I)Lscala/Option;
       5: areturn

  public final <K1, V1> scala.collection.immutable.Map<scala.collection.immutable.Vector<K1>, scala.collection.immutable.$colon$colon<V1>> flatten();
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method zio/config/PropertyTree$class.flatten:(Lzio/config/PropertyTree;)Lscala/collection/immutable/Map;
       4: areturn

  public final <K1, V1> scala.collection.immutable.Map<java.lang.String, java.lang.String> flattenKeyAndValue(java.lang.String, java.lang.String, scala.Predef$$eq$colon$eq<K1, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #71                 // Method zio/config/PropertyTree$class.flattenKeyAndValue:(Lzio/config/PropertyTree;Ljava/lang/String;Ljava/lang/String;Lscala/Predef$$eq$colon$eq;)Lscala/collection/immutable/Map;
       7: areturn

  public final <K1, V1> scala.collection.immutable.Map<java.lang.String, scala.collection.immutable.$colon$colon<V1>> flattenKeyWith(scala.Function1<K1, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // Method zio/config/PropertyTree$class.flattenKeyWith:(Lzio/config/PropertyTree;Lscala/Function1;Ljava/lang/String;)Lscala/collection/immutable/Map;
       6: areturn

  public final <K1, V1> scala.collection.immutable.Map<java.lang.String, scala.collection.immutable.$colon$colon<V1>> flattenString(java.lang.String, scala.Predef$$eq$colon$eq<K1, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // Method zio/config/PropertyTree$class.flattenString:(Lzio/config/PropertyTree;Ljava/lang/String;Lscala/Predef$$eq$colon$eq;)Lscala/collection/immutable/Map;
       6: areturn

  public final <K1, V1> zio.config.PropertyTree<K1, V1> getOrElse(scala.Function0<zio.config.PropertyTree<K1, V1>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method zio/config/PropertyTree$class.getOrElse:(Lzio/config/PropertyTree;Lscala/Function0;)Lzio/config/PropertyTree;
       5: areturn

  public final <K1> zio.config.PropertyTree<K1, scala.runtime.Nothing$> getPath(scala.collection.immutable.List<K1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method zio/config/PropertyTree$class.getPath:(Lzio/config/PropertyTree;Lscala/collection/immutable/List;)Lzio/config/PropertyTree;
       5: areturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #106                // Method zio/config/PropertyTree$class.isEmpty:(Lzio/config/PropertyTree;)Z
       4: ireturn

  public final <K2> zio.config.PropertyTree<K2, scala.runtime.Nothing$> mapKey(scala.Function1<scala.runtime.Nothing$, K2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method zio/config/PropertyTree$class.mapKey:(Lzio/config/PropertyTree;Lscala/Function1;)Lzio/config/PropertyTree;
       5: areturn

  public final <V2> zio.config.PropertyTree<scala.runtime.Nothing$, V2> map(scala.Function1<scala.runtime.Nothing$, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #112                // Method zio/config/PropertyTree$class.map:(Lzio/config/PropertyTree;Lscala/Function1;)Lzio/config/PropertyTree;
       5: areturn

  public final <E, V2> scala.util.Either<E, zio.config.PropertyTree<scala.runtime.Nothing$, V2>> mapEither(scala.Function1<scala.runtime.Nothing$, scala.util.Either<E, V2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method zio/config/PropertyTree$class.mapEither:(Lzio/config/PropertyTree;Lscala/Function1;)Lscala/util/Either;
       5: areturn

  public <K2, V2> zio.config.PropertyTree<K2, V2> bimap(scala.Function1<scala.runtime.Nothing$, K2>, scala.Function1<scala.runtime.Nothing$, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // Method zio/config/PropertyTree$class.bimap:(Lzio/config/PropertyTree;Lscala/Function1;Lscala/Function1;)Lzio/config/PropertyTree;
       6: areturn

  public final <K1, V1> scala.collection.immutable.List<zio.config.PropertyTree<K1, V1>> merge(zio.config.PropertyTree<K1, V1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method zio/config/PropertyTree$class.merge:(Lzio/config/PropertyTree;Lzio/config/PropertyTree;)Lscala/collection/immutable/List;
       5: areturn

  public final boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #131                // Method zio/config/PropertyTree$class.nonEmpty:(Lzio/config/PropertyTree;)Z
       4: ireturn

  public final <K1, V1> java.lang.String flattenKeyAndValue$default$1();
    Code:
       0: aload_0
       1: invokestatic  #136                // Method zio/config/PropertyTree$class.flattenKeyAndValue$default$1:(Lzio/config/PropertyTree;)Ljava/lang/String;
       4: areturn

  public final <K1, V1> java.lang.String flattenKeyAndValue$default$2();
    Code:
       0: aload_0
       1: invokestatic  #139                // Method zio/config/PropertyTree$class.flattenKeyAndValue$default$2:(Lzio/config/PropertyTree;)Ljava/lang/String;
       4: areturn

  public final <K1, V1> java.lang.String flattenString$default$1();
    Code:
       0: aload_0
       1: invokestatic  #142                // Method zio/config/PropertyTree$class.flattenString$default$1:(Lzio/config/PropertyTree;)Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #145                // String Empty
       2: areturn

  public int productArity();
    Code:
       0: iconst_0
       1: ireturn

  public scala.runtime.Nothing$ productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: new           #151                // class java/lang/IndexOutOfBoundsException
       5: dup
       6: iload_1
       7: invokestatic  #157                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #160                // Method java/lang/Object.toString:()Ljava/lang/String;
      13: invokespecial #163                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow

  public scala.collection.Iterator<scala.runtime.Nothing$> productIterator();
    Code:
       0: getstatic     #171                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #175                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/config/PropertyTree$Empty$
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #179                // int 67081517
       2: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #145                // String Empty
       2: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #183                // Field MODULE$:Lzio/config/PropertyTree$Empty$;
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #186                // Method productElement:(I)Lscala/runtime/Nothing$;
       5: athrow

  public zio.config.PropertyTree$Empty$();
    Code:
       0: aload_0
       1: invokespecial #188                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #183                // Field MODULE$:Lzio/config/PropertyTree$Empty$;
       8: aload_0
       9: invokestatic  #192                // Method zio/config/PropertyTree$class.$init$:(Lzio/config/PropertyTree;)V
      12: aload_0
      13: invokestatic  #197                // Method scala/Product$class.$init$:(Lscala/Product;)V
      16: return
}
