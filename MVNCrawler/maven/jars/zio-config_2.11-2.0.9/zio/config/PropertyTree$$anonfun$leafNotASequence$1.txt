Compiled from "PropertyTree.scala"
public final class zio.config.PropertyTree$$anonfun$leafNotASequence$1 extends scala.runtime.AbstractFunction1<scala.Tuple2<K, zio.config.PropertyTree<K, V>>, scala.Tuple2<K, zio.config.PropertyTree<K, V>>> implements scala.Serializable {
  public static final long serialVersionUID;

  public final scala.Tuple2<K, zio.config.PropertyTree<K, V>> apply(scala.Tuple2<K, zio.config.PropertyTree<K, V>>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        40
       6: aload_2
       7: invokevirtual #25                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #28                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      15: checkcast     #10                 // class zio/config/PropertyTree
      18: astore        4
      20: new           #21                 // class scala/Tuple2
      23: dup
      24: aload_3
      25: aload         4
      27: invokeinterface #29,  1           // InterfaceMethod zio/config/PropertyTree.leafNotASequence:()Lzio/config/PropertyTree;
      32: invokespecial #33                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      35: astore        5
      37: aload         5
      39: areturn
      40: new           #35                 // class scala/MatchError
      43: dup
      44: aload_2
      45: invokespecial #38                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class scala/Tuple2
       5: invokevirtual #49                 // Method apply:(Lscala/Tuple2;)Lscala/Tuple2;
       8: areturn

  public zio.config.PropertyTree$$anonfun$leafNotASequence$1(zio.config.PropertyTree<K, V>);
    Code:
       0: aload_0
       1: invokespecial #54                 // Method scala/runtime/AbstractFunction1."<init>":()V
       4: return
}
