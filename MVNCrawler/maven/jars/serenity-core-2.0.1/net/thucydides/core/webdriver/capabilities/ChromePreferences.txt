Compiled from "ChromePreferences.java"
public class net.thucydides.core.webdriver.capabilities.ChromePreferences {
  private final java.lang.String prefix;

  private net.thucydides.core.webdriver.capabilities.ChromePreferences(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field prefix:Ljava/lang/String;
       9: return

  public static net.thucydides.core.webdriver.capabilities.ChromePreferences startingWith(java.lang.String);
    Code:
       0: new           #3                  // class net/thucydides/core/webdriver/capabilities/ChromePreferences
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public java.util.Map<java.lang.String, java.lang.Object> from(net.thucydides.core.util.EnvironmentVariables);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod net/thucydides/core/util/EnvironmentVariables.getKeys:()Ljava/util/List;
       6: invokeinterface #6,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      11: aload_0
      12: invokedynamic #7,  0              // InvokeDynamic #0:test:(Lnet/thucydides/core/webdriver/capabilities/ChromePreferences;)Ljava/util/function/Predicate;
      17: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      22: invokestatic  #9                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      25: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      30: checkcast     #11                 // class java/util/List
      33: astore_2
      34: new           #12                 // class java/util/HashMap
      37: dup
      38: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      41: astore_3
      42: aload_2
      43: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          116
      60: aload         4
      62: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #17                 // class java/lang/String
      70: astore        5
      72: aload_0
      73: aload         5
      75: invokespecial #18                 // Method getPreparedPropertyKey:(Ljava/lang/String;)Ljava/lang/String;
      78: astore        6
      80: aload_1
      81: aload         5
      83: invokeinterface #19,  2           // InterfaceMethod net/thucydides/core/util/EnvironmentVariables.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      88: astore        7
      90: aload         7
      92: invokestatic  #20                 // Method org/apache/commons/lang3/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
      95: ifeq          113
      98: aload_3
      99: aload         6
     101: aload_0
     102: aload         7
     104: invokespecial #21                 // Method asObject:(Ljava/lang/String;)Ljava/lang/Object;
     107: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: goto          50
     116: aload_3
     117: areturn

  private java.lang.Object asObject(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       4: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: areturn
       8: astore_2
       9: aload_1
      10: ldc           #26                 // String true
      12: invokevirtual #27                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      15: ifne          27
      18: aload_1
      19: ldc           #28                 // String false
      21: invokevirtual #27                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      24: ifeq          35
      27: aload_1
      28: invokestatic  #29                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      31: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: areturn
      35: aload_1
      36: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/NumberFormatException

  private java.lang.String getPreparedPropertyKey(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field prefix:Ljava/lang/String;
       5: ldc           #31                 // String
       7: invokevirtual #32                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      10: areturn

  private boolean lambda$from$0(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field prefix:Ljava/lang/String;
       5: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ireturn
}
