Compiled from "TagScanner.java"
public class net.thucydides.core.tags.TagScanner {
  private final java.util.List<net.thucydides.core.model.TestTag> providedTags;

  public net.thucydides.core.tags.TagScanner(net.thucydides.core.util.EnvironmentVariables);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method tagsProvidedBy:(Lnet/thucydides/core/util/EnvironmentVariables;)Ljava/util/List;
      10: putfield      #3                  // Field providedTags:Ljava/util/List;
      13: return

  public boolean shouldRunForTags(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field providedTags:Ljava/util/List;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: aload_1
      16: aload_0
      17: getfield      #3                  // Field providedTags:Ljava/util/List;
      20: invokespecial #5                  // Method tagsMatchAPositiveTag:(Ljava/util/List;Ljava/util/List;)Z
      23: ifeq          42
      26: aload_0
      27: aload_1
      28: aload_0
      29: getfield      #3                  // Field providedTags:Ljava/util/List;
      32: invokespecial #6                  // Method tagsMatchANegativeTag:(Ljava/util/List;Ljava/util/List;)Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public boolean shouldRunClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field providedTags:Ljava/util/List;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: aload_1
      16: aload_0
      17: getfield      #3                  // Field providedTags:Ljava/util/List;
      20: invokespecial #7                  // Method testClassMatchesAPositiveTag:(Ljava/lang/Class;Ljava/util/List;)Z
      23: ifeq          42
      26: aload_0
      27: aload_1
      28: aload_0
      29: getfield      #3                  // Field providedTags:Ljava/util/List;
      32: invokespecial #8                  // Method testClassDoesNotMatchANegativeTag:(Ljava/lang/Class;Ljava/util/List;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public boolean shouldRunMethod(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method isATaggable:(Ljava/lang/Class;)Z
       5: ifeq          20
       8: aload_0
       9: getfield      #3                  // Field providedTags:Ljava/util/List;
      12: invokeinterface #4,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_0
      26: getfield      #3                  // Field providedTags:Ljava/util/List;
      29: invokespecial #10                 // Method testMethodMatchesAPositiveTag:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;)Z
      32: ifeq          52
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload_0
      39: getfield      #3                  // Field providedTags:Ljava/util/List;
      42: invokespecial #11                 // Method testMethodDoesNotMatchANegativeTag:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  private boolean isATaggable(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #12                 // class org/junit/runner/RunWith
       3: invokevirtual #13                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #12                 // class org/junit/runner/RunWith
       9: astore_2
      10: aload_2
      11: ifnull        32
      14: ldc           #14                 // class net/thucydides/core/tags/Taggable
      16: aload_2
      17: invokeinterface #15,  1           // InterfaceMethod org/junit/runner/RunWith.value:()Ljava/lang/Class;
      22: invokevirtual #16                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private boolean testClassMatchesAPositiveTag(java.lang.Class<?>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method net/thucydides/core/annotations/TestAnnotations.forClass:(Ljava/lang/Class;)Lnet/thucydides/core/annotations/TestAnnotations;
       4: invokevirtual #18                 // Method net/thucydides/core/annotations/TestAnnotations.getTags:()Ljava/util/List;
       7: astore_3
       8: aload_0
       9: aload_2
      10: aload_3
      11: invokespecial #19                 // Method containsAPositiveMatch:(Ljava/util/List;Ljava/util/List;)Z
      14: ireturn

  private boolean tagsMatchAPositiveTag(java.util.List<java.lang.String>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method definedIn:(Ljava/util/List;)Ljava/util/List;
       5: astore_3
       6: aload_0
       7: aload_2
       8: aload_3
       9: invokespecial #19                 // Method containsAPositiveMatch:(Ljava/util/List;Ljava/util/List;)Z
      12: ireturn

  private boolean tagsMatchANegativeTag(java.util.List<java.lang.String>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method definedIn:(Ljava/util/List;)Ljava/util/List;
       5: astore_3
       6: aload_0
       7: aload_2
       8: aload_3
       9: invokespecial #21                 // Method containsANegativeMatch:(Ljava/util/List;Ljava/util/List;)Z
      12: ireturn

  private java.util.List<net.thucydides.core.model.TestTag> definedIn(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #23,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #25                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #27                 // class java/util/List
      27: areturn

  private boolean containsAPositiveMatch(java.util.List<net.thucydides.core.model.TestTag>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method positive:(Ljava/util/List;)Ljava/util/List;
       5: invokeinterface #4,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifne          26
      13: aload_0
      14: aload_0
      15: aload_1
      16: invokespecial #28                 // Method positive:(Ljava/util/List;)Ljava/util/List;
      19: aload_2
      20: invokespecial #29                 // Method tagsMatch:(Ljava/util/List;Ljava/util/List;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private boolean testClassDoesNotMatchANegativeTag(java.lang.Class<?>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method net/thucydides/core/annotations/TestAnnotations.forClass:(Ljava/lang/Class;)Lnet/thucydides/core/annotations/TestAnnotations;
       4: invokevirtual #18                 // Method net/thucydides/core/annotations/TestAnnotations.getTags:()Ljava/util/List;
       7: astore_3
       8: aload_0
       9: aload_2
      10: aload_3
      11: invokespecial #21                 // Method containsANegativeMatch:(Ljava/util/List;Ljava/util/List;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private java.util.List<net.thucydides.core.model.TestTag> positive(java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: new           #30                 // class java/util/ArrayList
       3: dup
       4: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          56
      24: aload_3
      25: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #35                 // class net/thucydides/core/model/TestTag
      33: astore        4
      35: aload_0
      36: aload         4
      38: invokespecial #36                 // Method isANegative:(Lnet/thucydides/core/model/TestTag;)Z
      41: ifne          53
      44: aload_2
      45: aload         4
      47: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          15
      56: aload_2
      57: areturn

  private boolean isANegative(net.thucydides.core.model.TestTag);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method net/thucydides/core/model/TestTag.getType:()Ljava/lang/String;
       4: ldc           #39                 // String ~
       6: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  private java.util.List<net.thucydides.core.model.TestTag> negative(java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: new           #30                 // class java/util/ArrayList
       3: dup
       4: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          74
      24: aload_3
      25: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #35                 // class net/thucydides/core/model/TestTag
      33: astore        4
      35: aload_0
      36: aload         4
      38: invokespecial #36                 // Method isANegative:(Lnet/thucydides/core/model/TestTag;)Z
      41: ifeq          71
      44: aload_2
      45: aload         4
      47: invokevirtual #41                 // Method net/thucydides/core/model/TestTag.getName:()Ljava/lang/String;
      50: invokestatic  #42                 // Method net/thucydides/core/model/TestTag.withName:(Ljava/lang/String;)Lnet/thucydides/core/model/TestTag$TestTagBuilder;
      53: aload         4
      55: invokevirtual #38                 // Method net/thucydides/core/model/TestTag.getType:()Ljava/lang/String;
      58: iconst_1
      59: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      62: invokevirtual #44                 // Method net/thucydides/core/model/TestTag$TestTagBuilder.andType:(Ljava/lang/String;)Lnet/thucydides/core/model/TestTag;
      65: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          15
      74: aload_2
      75: areturn

  private boolean testMethodMatchesAPositiveTag(java.lang.Class<?>, java.lang.String, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method net/thucydides/core/annotations/TestAnnotations.forClass:(Ljava/lang/Class;)Lnet/thucydides/core/annotations/TestAnnotations;
       4: aload_2
       5: invokevirtual #45                 // Method net/thucydides/core/annotations/TestAnnotations.getTagsForMethod:(Ljava/lang/String;)Ljava/util/List;
       8: astore        4
      10: aload_0
      11: aload_3
      12: aload         4
      14: invokespecial #19                 // Method containsAPositiveMatch:(Ljava/util/List;Ljava/util/List;)Z
      17: ireturn

  private boolean testMethodDoesNotMatchANegativeTag(java.lang.Class<?>, java.lang.String, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method net/thucydides/core/annotations/TestAnnotations.forClass:(Ljava/lang/Class;)Lnet/thucydides/core/annotations/TestAnnotations;
       4: aload_2
       5: invokevirtual #45                 // Method net/thucydides/core/annotations/TestAnnotations.getTagsForMethod:(Ljava/lang/String;)Ljava/util/List;
       8: astore        4
      10: aload_0
      11: aload_3
      12: aload         4
      14: invokespecial #21                 // Method containsANegativeMatch:(Ljava/util/List;Ljava/util/List;)Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean containsANegativeMatch(java.util.List<net.thucydides.core.model.TestTag>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method negative:(Ljava/util/List;)Ljava/util/List;
       5: invokeinterface #4,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifeq          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokespecial #46                 // Method negative:(Ljava/util/List;)Ljava/util/List;
      21: aload_2
      22: invokespecial #29                 // Method tagsMatch:(Ljava/util/List;Ljava/util/List;)Z
      25: ireturn

  private boolean tagsMatch(java.util.List<net.thucydides.core.model.TestTag>, java.util.List<net.thucydides.core.model.TestTag>);
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_3
      17: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #35                 // class net/thucydides/core/model/TestTag
      25: astore        4
      27: aload_2
      28: aload         4
      30: invokeinterface #47,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: goto          7
      43: iconst_0
      44: ireturn

  private java.util.List<net.thucydides.core.model.TestTag> tagsProvidedBy(net.thucydides.core.util.EnvironmentVariables);
    Code:
       0: aload_1
       1: getstatic     #48                 // Field net/thucydides/core/ThucydidesSystemProperty.TAGS:Lnet/thucydides/core/ThucydidesSystemProperty;
       4: invokeinterface #49,  2           // InterfaceMethod net/thucydides/core/util/EnvironmentVariables.getProperty:(Ljava/lang/Enum;)Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: invokestatic  #50                 // Method org/apache/commons/lang3/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
      14: ifeq          58
      17: ldc           #51                 // String ,
      19: invokestatic  #52                 // Method com/google/common/base/Splitter.on:(Ljava/lang/String;)Lcom/google/common/base/Splitter;
      22: invokevirtual #53                 // Method com/google/common/base/Splitter.trimResults:()Lcom/google/common/base/Splitter;
      25: aload_2
      26: invokevirtual #54                 // Method com/google/common/base/Splitter.splitToList:(Ljava/lang/CharSequence;)Ljava/util/List;
      29: astore_3
      30: aload_3
      31: invokeinterface #22,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      36: invokedynamic #23,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      41: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      46: invokestatic  #25                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      49: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      54: checkcast     #27                 // class java/util/List
      57: areturn
      58: new           #30                 // class java/util/ArrayList
      61: dup
      62: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      65: areturn
}
