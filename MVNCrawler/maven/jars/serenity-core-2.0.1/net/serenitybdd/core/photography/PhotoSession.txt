Compiled from "PhotoSession.java"
public class net.serenitybdd.core.photography.PhotoSession {
  private final org.openqa.selenium.WebDriver driver;

  private final java.nio.file.Path outputDirectory;

  private final net.serenitybdd.core.photography.Darkroom darkroom;

  private net.thucydides.core.screenshots.BlurLevel blurLevel;

  private final org.slf4j.Logger LOGGER;

  public net.serenitybdd.core.photography.PhotoSession(org.openqa.selenium.WebDriver, net.serenitybdd.core.photography.Darkroom, java.nio.file.Path, net.thucydides.core.screenshots.BlurLevel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field LOGGER:Lorg/slf4j/Logger;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field driver:Lorg/openqa/selenium/WebDriver;
      20: aload_0
      21: aload_3
      22: putfield      #6                  // Field outputDirectory:Ljava/nio/file/Path;
      25: aload_0
      26: aload         4
      28: putfield      #7                  // Field blurLevel:Lnet/thucydides/core/screenshots/BlurLevel;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field darkroom:Lnet/serenitybdd/core/photography/Darkroom;
      36: aload_2
      37: invokevirtual #9                  // Method net/serenitybdd/core/photography/Darkroom.isOpenForBusiness:()V
      40: return

  public net.serenitybdd.core.photography.ScreenshotPhoto takeScreenshot();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #5                  // Field driver:Lorg/openqa/selenium/WebDriver;
       6: invokestatic  #10                 // Method net/thucydides/core/webdriver/WebDriverFactory.isAlive:(Lorg/openqa/selenium/WebDriver;)Z
       9: ifeq          61
      12: aload_0
      13: getfield      #5                  // Field driver:Lorg/openqa/selenium/WebDriver;
      16: instanceof    #11                 // class org/openqa/selenium/TakesScreenshot
      19: ifeq          61
      22: aload_0
      23: getfield      #5                  // Field driver:Lorg/openqa/selenium/WebDriver;
      26: checkcast     #11                 // class org/openqa/selenium/TakesScreenshot
      29: getstatic     #12                 // Field org/openqa/selenium/OutputType.BYTES:Lorg/openqa/selenium/OutputType;
      32: invokeinterface #13,  2           // InterfaceMethod org/openqa/selenium/TakesScreenshot.getScreenshotAs:(Lorg/openqa/selenium/OutputType;)Ljava/lang/Object;
      37: checkcast     #14                 // class "[B"
      40: astore_1
      41: goto          61
      44: astore_2
      45: aload_0
      46: getfield      #4                  // Field LOGGER:Lorg/slf4j/Logger;
      49: ldc           #16                 // String Failed to take screenshot
      51: aload_2
      52: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: getstatic     #18                 // Field net/serenitybdd/core/photography/ScreenshotPhoto.None:Lnet/serenitybdd/core/photography/ScreenshotPhoto;
      60: areturn
      61: aload_1
      62: ifnull        70
      65: aload_1
      66: arraylength
      67: ifne          74
      70: getstatic     #18                 // Field net/serenitybdd/core/photography/ScreenshotPhoto.None:Lnet/serenitybdd/core/photography/ScreenshotPhoto;
      73: areturn
      74: aload_0
      75: aload_1
      76: invokespecial #19                 // Method storedScreenshot:([B)Lnet/serenitybdd/core/photography/ScreenshotPhoto;
      79: areturn
    Exception table:
       from    to  target type
          22    41    44   Class java/lang/Exception

  private net.serenitybdd.core.photography.ScreenshotPhoto storedScreenshot(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method screenshotPathFor:([B)Ljava/nio/file/Path;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #21                 // Method storeScreenshot:([BLjava/nio/file/Path;)Lnet/serenitybdd/core/photography/ScreenshotReceipt;
      12: astore_3
      13: aload_0
      14: getfield      #4                  // Field LOGGER:Lorg/slf4j/Logger;
      17: ldc           #22                 // String Screenshot scheduled to be saved to {}
      19: aload_2
      20: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_3
      26: invokevirtual #24                 // Method net/serenitybdd/core/photography/ScreenshotReceipt.getDestinationPath:()Ljava/nio/file/Path;
      29: invokestatic  #25                 // Method net/serenitybdd/core/photography/ScreenshotPhoto.forScreenshotAt:(Ljava/nio/file/Path;)Lnet/serenitybdd/core/photography/ScreenshotPhoto;
      32: areturn
      33: astore_2
      34: aload_0
      35: getfield      #4                  // Field LOGGER:Lorg/slf4j/Logger;
      38: ldc           #27                 // String Failed to save screenshot
      40: aload_2
      41: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: getstatic     #18                 // Field net/serenitybdd/core/photography/ScreenshotPhoto.None:Lnet/serenitybdd/core/photography/ScreenshotPhoto;
      49: areturn
    Exception table:
       from    to  target type
           0    32    33   Class java/io/IOException

  private net.serenitybdd.core.photography.ScreenshotReceipt storeScreenshot(byte[], java.nio.file.Path) throws java.io.IOException;
    Code:
       0: invokestatic  #28                 // Method net/serenitybdd/core/photography/DarkroomFileSystem.get:()Ljava/nio/file/FileSystem;
       3: ldc           #29                 // String /var/screenshots
       5: iconst_0
       6: anewarray     #30                 // class java/lang/String
       9: invokevirtual #31                 // Method java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      12: astore_3
      13: aload_3
      14: iconst_0
      15: anewarray     #32                 // class java/nio/file/attribute/FileAttribute
      18: invokestatic  #33                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      21: pop
      22: aload_3
      23: invokestatic  #34                 // Method net/serenitybdd/core/photography/ScreenshotNegative.prepareNegativeIn:(Ljava/nio/file/Path;)Lnet/serenitybdd/core/photography/ScreenshotNegative$ScreenshotNegativeBuilder;
      26: aload_1
      27: invokevirtual #35                 // Method net/serenitybdd/core/photography/ScreenshotNegative$ScreenshotNegativeBuilder.withScreenshotData:([B)Lnet/serenitybdd/core/photography/ScreenshotNegative$ScreenshotNegativeBuilder;
      30: aload_0
      31: getfield      #7                  // Field blurLevel:Lnet/thucydides/core/screenshots/BlurLevel;
      34: invokevirtual #36                 // Method net/serenitybdd/core/photography/ScreenshotNegative$ScreenshotNegativeBuilder.andBlurringOf:(Lnet/thucydides/core/screenshots/BlurLevel;)Lnet/serenitybdd/core/photography/ScreenshotNegative$ScreenshotNegativeBuilder;
      37: aload_2
      38: invokevirtual #37                 // Method net/serenitybdd/core/photography/ScreenshotNegative$ScreenshotNegativeBuilder.andTargetPathOf:(Ljava/nio/file/Path;)Lnet/serenitybdd/core/photography/ScreenshotNegative;
      41: astore        4
      43: aload_0
      44: getfield      #8                  // Field darkroom:Lnet/serenitybdd/core/photography/Darkroom;
      47: aload         4
      49: invokevirtual #38                 // Method net/serenitybdd/core/photography/Darkroom.sendNegative:(Lnet/serenitybdd/core/photography/ScreenshotNegative;)Lnet/serenitybdd/core/photography/ScreenshotReceipt;
      52: areturn

  private java.nio.file.Path screenshotPathFor(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #39                 // Method net/serenitybdd/core/photography/ScreenshotDigest.forScreenshotData:([B)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field outputDirectory:Ljava/nio/file/Path;
       9: aload_2
      10: invokeinterface #40,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      15: areturn
}
