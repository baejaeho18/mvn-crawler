Compiled from "WebElementFacade.java"
public interface net.serenitybdd.core.pages.WebElementFacade extends org.openqa.selenium.WebElement,org.openqa.selenium.internal.WrapsElement,org.openqa.selenium.interactions.internal.Locatable,net.serenitybdd.core.pages.WebElementState,io.appium.java_client.FindsByAccessibilityId,io.appium.java_client.FindsByAndroidUIAutomator,io.appium.java_client.FindsByIosUIAutomation,net.thucydides.core.webdriver.ConfigurableTimeouts {
  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T then(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T findBy(java.lang.String);

  public abstract java.util.List<net.serenitybdd.core.pages.WebElementFacade> thenFindAll(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T findBy(org.openqa.selenium.By);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T find(org.openqa.selenium.By);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T then(org.openqa.selenium.By);

  public abstract java.lang.String getAttribute(java.lang.String);

  public abstract java.util.List<net.serenitybdd.core.pages.WebElementFacade> thenFindAll(org.openqa.selenium.By);

  public abstract long getImplicitTimeoutInMilliseconds();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T withTimeoutOf(int, java.util.concurrent.TimeUnit);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T and();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T then();

  public abstract java.util.List<java.lang.String> getSelectOptions();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T type(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T typeAndEnter(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T typeAndTab(java.lang.String);

  public abstract void setWindowFocus();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T deselectAll();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T deselectByVisibleText(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T deselectByValue(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T deselectByIndex(int);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T selectByVisibleText(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T selectByValue(java.lang.String);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T selectByIndex(int);

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T waitUntilVisible();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T waitUntilPresent();

  public abstract org.openqa.selenium.support.ui.Wait<org.openqa.selenium.WebDriver> waitForCondition();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T waitUntilNotVisible();

  public abstract java.lang.String getValue();

  public abstract java.lang.String getText();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T waitUntilEnabled();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T waitUntilClickable();

  public abstract <T extends net.serenitybdd.core.pages.WebElementFacade> T waitUntilDisabled();

  public abstract void click();

  public abstract void clear();

  public abstract java.lang.String toString();

  public abstract boolean containsElements(org.openqa.selenium.By);

  public abstract boolean containsElements(java.lang.String);

  public abstract void shouldContainElements(org.openqa.selenium.By);

  public abstract void shouldContainElements(java.lang.String);

  public abstract boolean hasClass(java.lang.String);
}
