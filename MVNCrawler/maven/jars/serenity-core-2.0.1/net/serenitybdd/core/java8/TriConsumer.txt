Compiled from "TriConsumer.java"
public interface net.serenitybdd.core.java8.TriConsumer<T, U, V> {
  public abstract void accept(T, U, V);

  public default net.serenitybdd.core.java8.TriConsumer<T, U, V> andThen(net.serenitybdd.core.java8.TriConsumer<? super T, ? super U, ? super V>);
    Code:
       0: aload_1
       1: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #2,  0              // InvokeDynamic #0:accept:(Lnet/serenitybdd/core/java8/TriConsumer;Lnet/serenitybdd/core/java8/TriConsumer;)Lnet/serenitybdd/core/java8/TriConsumer;
      12: areturn

  private void lambda$andThen$0(net.serenitybdd.core.java8.TriConsumer, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokeinterface #3,  4            // InterfaceMethod accept:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      10: aload_1
      11: aload_2
      12: aload_3
      13: aload         4
      15: invokeinterface #3,  4            // InterfaceMethod accept:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return
}
