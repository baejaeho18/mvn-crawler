Compiled from "WorkSpacesMock.scala"
public final class zio.aws.workspaces.WorkSpacesMock$$anon$1 implements zio.aws.workspaces.WorkSpaces {
  private final software.amazon.awssdk.services.workspaces.WorkSpacesAsyncClient api;

  private final zio.mock.Proxy proxy$1;

  private final zio.Runtime rts$1;

  public software.amazon.awssdk.services.workspaces.WorkSpacesAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #557                // Field api:Lsoftware/amazon/awssdk/services/workspaces/WorkSpacesAsyncClient;
       4: areturn

  public <R1> zio.aws.workspaces.WorkSpaces withAspect(zio.ZIOAspect<scala.runtime.Nothing$, R1, zio.aws.core.AwsError, zio.aws.core.AwsError, scala.runtime.Nothing$, zio.aws.core.aspects.package$Described<?>>, zio.ZEnvironment<R1>);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifyWorkspacePropertiesResponse$ReadOnly> modifyWorkspaceProperties(zio.aws.workspaces.model.ModifyWorkspacePropertiesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #576                // Field zio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceProperties$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceProperties$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeTagsResponse$ReadOnly> describeTags(zio.aws.workspaces.model.DescribeTagsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #589                // Field zio/aws/workspaces/WorkSpacesMock$DescribeTags$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeTags$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.UpdateRulesOfIpGroupResponse$ReadOnly> updateRulesOfIpGroup(zio.aws.workspaces.model.UpdateRulesOfIpGroupRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #596                // Field zio/aws/workspaces/WorkSpacesMock$UpdateRulesOfIpGroup$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$UpdateRulesOfIpGroup$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.UpdateConnectClientAddInResponse$ReadOnly> updateConnectClientAddIn(zio.aws.workspaces.model.UpdateConnectClientAddInRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #603                // Field zio/aws/workspaces/WorkSpacesMock$UpdateConnectClientAddIn$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$UpdateConnectClientAddIn$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeregisterWorkspaceDirectoryResponse$ReadOnly> deregisterWorkspaceDirectory(zio.aws.workspaces.model.DeregisterWorkspaceDirectoryRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #610                // Field zio/aws/workspaces/WorkSpacesMock$DeregisterWorkspaceDirectory$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeregisterWorkspaceDirectory$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteIpGroupResponse$ReadOnly> deleteIpGroup(zio.aws.workspaces.model.DeleteIpGroupRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #617                // Field zio/aws/workspaces/WorkSpacesMock$DeleteIpGroup$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteIpGroup$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteClientBrandingResponse$ReadOnly> deleteClientBranding(zio.aws.workspaces.model.DeleteClientBrandingRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #624                // Field zio/aws/workspaces/WorkSpacesMock$DeleteClientBranding$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteClientBranding$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ConnectionAlias$ReadOnly> describeConnectionAliases(zio.aws.workspaces.model.DescribeConnectionAliasesRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #656,  0            // InvokeDynamic #0:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeConnectionAliasesRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeConnectionAliasesResponse$ReadOnly> describeConnectionAliasesPaginated(zio.aws.workspaces.model.DescribeConnectionAliasesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #669                // Field zio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliasesPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliasesPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifyAccountResponse$ReadOnly> modifyAccount(zio.aws.workspaces.model.ModifyAccountRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #675                // Field zio/aws/workspaces/WorkSpacesMock$ModifyAccount$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifyAccount$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccountModification$ReadOnly> describeAccountModifications(zio.aws.workspaces.model.DescribeAccountModificationsRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #687,  0            // InvokeDynamic #1:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeAccountModificationsRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeAccountModificationsResponse$ReadOnly> describeAccountModificationsPaginated(zio.aws.workspaces.model.DescribeAccountModificationsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #694                // Field zio/aws/workspaces/WorkSpacesMock$DescribeAccountModificationsPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeAccountModificationsPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspaceBundle$ReadOnly> describeWorkspaceBundles(zio.aws.workspaces.model.DescribeWorkspaceBundlesRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #705,  0            // InvokeDynamic #2:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeWorkspaceBundlesRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspaceBundlesResponse$ReadOnly> describeWorkspaceBundlesPaginated(zio.aws.workspaces.model.DescribeWorkspaceBundlesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #712                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceBundlesPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceBundlesPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.StartWorkspacesResponse$ReadOnly> startWorkspaces(zio.aws.workspaces.model.StartWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #718                // Field zio/aws/workspaces/WorkSpacesMock$StartWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$StartWorkspaces$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeClientBrandingResponse$ReadOnly> describeClientBranding(zio.aws.workspaces.model.DescribeClientBrandingRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #725                // Field zio/aws/workspaces/WorkSpacesMock$DescribeClientBranding$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeClientBranding$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifySelfservicePermissionsResponse$ReadOnly> modifySelfservicePermissions(zio.aws.workspaces.model.ModifySelfservicePermissionsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #732                // Field zio/aws/workspaces/WorkSpacesMock$ModifySelfservicePermissions$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifySelfservicePermissions$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspaceConnectionStatus$ReadOnly> describeWorkspacesConnectionStatus(zio.aws.workspaces.model.DescribeWorkspacesConnectionStatusRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #744,  0            // InvokeDynamic #3:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeWorkspacesConnectionStatusRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspacesConnectionStatusResponse$ReadOnly> describeWorkspacesConnectionStatusPaginated(zio.aws.workspaces.model.DescribeWorkspacesConnectionStatusRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #751                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspacesConnectionStatusPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspacesConnectionStatusPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifyWorkspaceStateResponse$ReadOnly> modifyWorkspaceState(zio.aws.workspaces.model.ModifyWorkspaceStateRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #757                // Field zio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceState$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceState$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteConnectionAliasResponse$ReadOnly> deleteConnectionAlias(zio.aws.workspaces.model.DeleteConnectionAliasRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #764                // Field zio/aws/workspaces/WorkSpacesMock$DeleteConnectionAlias$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteConnectionAlias$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifyWorkspaceAccessPropertiesResponse$ReadOnly> modifyWorkspaceAccessProperties(zio.aws.workspaces.model.ModifyWorkspaceAccessPropertiesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #771                // Field zio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceAccessProperties$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceAccessProperties$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateConnectionAliasResponse$ReadOnly> createConnectionAlias(zio.aws.workspaces.model.CreateConnectionAliasRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #778                // Field zio/aws/workspaces/WorkSpacesMock$CreateConnectionAlias$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateConnectionAlias$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.RevokeIpRulesResponse$ReadOnly> revokeIpRules(zio.aws.workspaces.model.RevokeIpRulesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #785                // Field zio/aws/workspaces/WorkSpacesMock$RevokeIpRules$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$RevokeIpRules$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.RestoreWorkspaceResponse$ReadOnly> restoreWorkspace(zio.aws.workspaces.model.RestoreWorkspaceRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #792                // Field zio/aws/workspaces/WorkSpacesMock$RestoreWorkspace$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$RestoreWorkspace$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.workspaces.model.DescribeConnectionAliasPermissionsResponse$ReadOnly, zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly>> describeConnectionAliasPermissions(zio.aws.workspaces.model.DescribeConnectionAliasPermissionsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #799                // Field zio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliasPermissions$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliasPermissions$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeConnectionAliasPermissionsResponse$ReadOnly> describeConnectionAliasPermissionsPaginated(zio.aws.workspaces.model.DescribeConnectionAliasPermissionsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #805                // Field zio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliasPermissionsPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliasPermissionsPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.MigrateWorkspaceResponse$ReadOnly> migrateWorkspace(zio.aws.workspaces.model.MigrateWorkspaceRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #811                // Field zio/aws/workspaces/WorkSpacesMock$MigrateWorkspace$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$MigrateWorkspace$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.UpdateWorkspaceImagePermissionResponse$ReadOnly> updateWorkspaceImagePermission(zio.aws.workspaces.model.UpdateWorkspaceImagePermissionRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #818                // Field zio/aws/workspaces/WorkSpacesMock$UpdateWorkspaceImagePermission$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$UpdateWorkspaceImagePermission$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, java.lang.String> listAvailableManagementCidrRanges(zio.aws.workspaces.model.ListAvailableManagementCidrRangesRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #830,  0            // InvokeDynamic #4:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/ListAvailableManagementCidrRangesRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ListAvailableManagementCidrRangesResponse$ReadOnly> listAvailableManagementCidrRangesPaginated(zio.aws.workspaces.model.ListAvailableManagementCidrRangesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #837                // Field zio/aws/workspaces/WorkSpacesMock$ListAvailableManagementCidrRangesPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ListAvailableManagementCidrRangesPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AuthorizeIpRulesResponse$ReadOnly> authorizeIpRules(zio.aws.workspaces.model.AuthorizeIpRulesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #843                // Field zio/aws/workspaces/WorkSpacesMock$AuthorizeIpRules$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$AuthorizeIpRules$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.workspaces.model.DescribeWorkspaceImagePermissionsResponse$ReadOnly, zio.aws.workspaces.model.ImagePermission$ReadOnly>> describeWorkspaceImagePermissions(zio.aws.workspaces.model.DescribeWorkspaceImagePermissionsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #850                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImagePermissions$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImagePermissions$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspaceImagePermissionsResponse$ReadOnly> describeWorkspaceImagePermissionsPaginated(zio.aws.workspaces.model.DescribeWorkspaceImagePermissionsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #856                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImagePermissionsPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImagePermissionsPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeAccountResponse$ReadOnly> describeAccount(zio.aws.workspaces.model.DescribeAccountRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #862                // Field zio/aws/workspaces/WorkSpacesMock$DescribeAccount$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeAccount$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateIpGroupResponse$ReadOnly> createIpGroup(zio.aws.workspaces.model.CreateIpGroupRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #869                // Field zio/aws/workspaces/WorkSpacesMock$CreateIpGroup$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateIpGroup$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.UpdateWorkspaceBundleResponse$ReadOnly> updateWorkspaceBundle(zio.aws.workspaces.model.UpdateWorkspaceBundleRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #876                // Field zio/aws/workspaces/WorkSpacesMock$UpdateWorkspaceBundle$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$UpdateWorkspaceBundle$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateWorkspaceBundleResponse$ReadOnly> createWorkspaceBundle(zio.aws.workspaces.model.CreateWorkspaceBundleRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #883                // Field zio/aws/workspaces/WorkSpacesMock$CreateWorkspaceBundle$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateWorkspaceBundle$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ImportWorkspaceImageResponse$ReadOnly> importWorkspaceImage(zio.aws.workspaces.model.ImportWorkspaceImageRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #890                // Field zio/aws/workspaces/WorkSpacesMock$ImportWorkspaceImage$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ImportWorkspaceImage$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.RegisterWorkspaceDirectoryResponse$ReadOnly> registerWorkspaceDirectory(zio.aws.workspaces.model.RegisterWorkspaceDirectoryRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #897                // Field zio/aws/workspaces/WorkSpacesMock$RegisterWorkspaceDirectory$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$RegisterWorkspaceDirectory$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AssociateIpGroupsResponse$ReadOnly> associateIpGroups(zio.aws.workspaces.model.AssociateIpGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #904                // Field zio/aws/workspaces/WorkSpacesMock$AssociateIpGroups$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$AssociateIpGroups$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateConnectClientAddInResponse$ReadOnly> createConnectClientAddIn(zio.aws.workspaces.model.CreateConnectClientAddInRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #911                // Field zio/aws/workspaces/WorkSpacesMock$CreateConnectClientAddIn$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateConnectClientAddIn$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifyClientPropertiesResponse$ReadOnly> modifyClientProperties(zio.aws.workspaces.model.ModifyClientPropertiesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #918                // Field zio/aws/workspaces/WorkSpacesMock$ModifyClientProperties$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifyClientProperties$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DisassociateConnectionAliasResponse$ReadOnly> disassociateConnectionAlias(zio.aws.workspaces.model.DisassociateConnectionAliasRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #925                // Field zio/aws/workspaces/WorkSpacesMock$DisassociateConnectionAlias$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DisassociateConnectionAlias$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.StopWorkspacesResponse$ReadOnly> stopWorkspaces(zio.aws.workspaces.model.StopWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #932                // Field zio/aws/workspaces/WorkSpacesMock$StopWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$StopWorkspaces$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateWorkspaceImageResponse$ReadOnly> createWorkspaceImage(zio.aws.workspaces.model.CreateWorkspaceImageRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #939                // Field zio/aws/workspaces/WorkSpacesMock$CreateWorkspaceImage$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateWorkspaceImage$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.Workspace$ReadOnly> describeWorkspaces(zio.aws.workspaces.model.DescribeWorkspacesRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #951,  0            // InvokeDynamic #5:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeWorkspacesRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspacesResponse$ReadOnly> describeWorkspacesPaginated(zio.aws.workspaces.model.DescribeWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #958                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspacesPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspacesPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.RebootWorkspacesResponse$ReadOnly> rebootWorkspaces(zio.aws.workspaces.model.RebootWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #964                // Field zio/aws/workspaces/WorkSpacesMock$RebootWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$RebootWorkspaces$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspaceDirectory$ReadOnly> describeWorkspaceDirectories(zio.aws.workspaces.model.DescribeWorkspaceDirectoriesRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #976,  0            // InvokeDynamic #6:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeWorkspaceDirectoriesRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspaceDirectoriesResponse$ReadOnly> describeWorkspaceDirectoriesPaginated(zio.aws.workspaces.model.DescribeWorkspaceDirectoriesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #983                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceDirectoriesPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceDirectoriesPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifyWorkspaceCreationPropertiesResponse$ReadOnly> modifyWorkspaceCreationProperties(zio.aws.workspaces.model.ModifyWorkspaceCreationPropertiesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #989                // Field zio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceCreationProperties$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifyWorkspaceCreationProperties$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspaceSnapshotsResponse$ReadOnly> describeWorkspaceSnapshots(zio.aws.workspaces.model.DescribeWorkspaceSnapshotsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #996                // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceSnapshots$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceSnapshots$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspacesIpGroup$ReadOnly> describeIpGroups(zio.aws.workspaces.model.DescribeIpGroupsRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1008,  0           // InvokeDynamic #7:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeIpGroupsRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeIpGroupsResponse$ReadOnly> describeIpGroupsPaginated(zio.aws.workspaces.model.DescribeIpGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1015               // Field zio/aws/workspaces/WorkSpacesMock$DescribeIpGroupsPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeIpGroupsPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateUpdatedWorkspaceImageResponse$ReadOnly> createUpdatedWorkspaceImage(zio.aws.workspaces.model.CreateUpdatedWorkspaceImageRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1021               // Field zio/aws/workspaces/WorkSpacesMock$CreateUpdatedWorkspaceImage$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateUpdatedWorkspaceImage$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.TerminateWorkspacesResponse$ReadOnly> terminateWorkspaces(zio.aws.workspaces.model.TerminateWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1028               // Field zio/aws/workspaces/WorkSpacesMock$TerminateWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$TerminateWorkspaces$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CopyWorkspaceImageResponse$ReadOnly> copyWorkspaceImage(zio.aws.workspaces.model.CopyWorkspaceImageRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1035               // Field zio/aws/workspaces/WorkSpacesMock$CopyWorkspaceImage$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CopyWorkspaceImage$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ModifySamlPropertiesResponse$ReadOnly> modifySamlProperties(zio.aws.workspaces.model.ModifySamlPropertiesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1042               // Field zio/aws/workspaces/WorkSpacesMock$ModifySamlProperties$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ModifySamlProperties$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AssociateConnectionAliasResponse$ReadOnly> associateConnectionAlias(zio.aws.workspaces.model.AssociateConnectionAliasRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1049               // Field zio/aws/workspaces/WorkSpacesMock$AssociateConnectionAlias$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$AssociateConnectionAlias$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.RebuildWorkspacesResponse$ReadOnly> rebuildWorkspaces(zio.aws.workspaces.model.RebuildWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1056               // Field zio/aws/workspaces/WorkSpacesMock$RebuildWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$RebuildWorkspaces$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteTagsResponse$ReadOnly> deleteTags(zio.aws.workspaces.model.DeleteTagsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1063               // Field zio/aws/workspaces/WorkSpacesMock$DeleteTags$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteTags$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspaceImage$ReadOnly> describeWorkspaceImages(zio.aws.workspaces.model.DescribeWorkspaceImagesRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1075,  0           // InvokeDynamic #8:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeWorkspaceImagesRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeWorkspaceImagesResponse$ReadOnly> describeWorkspaceImagesPaginated(zio.aws.workspaces.model.DescribeWorkspaceImagesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1082               // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImagesPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImagesPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateWorkspacesResponse$ReadOnly> createWorkspaces(zio.aws.workspaces.model.CreateWorkspacesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1088               // Field zio/aws/workspaces/WorkSpacesMock$CreateWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateWorkspaces$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteWorkspaceImageResponse$ReadOnly> deleteWorkspaceImage(zio.aws.workspaces.model.DeleteWorkspaceImageRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1095               // Field zio/aws/workspaces/WorkSpacesMock$DeleteWorkspaceImage$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteWorkspaceImage$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteConnectClientAddInResponse$ReadOnly> deleteConnectClientAddIn(zio.aws.workspaces.model.DeleteConnectClientAddInRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1102               // Field zio/aws/workspaces/WorkSpacesMock$DeleteConnectClientAddIn$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteConnectClientAddIn$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly> importClientBranding(zio.aws.workspaces.model.ImportClientBrandingRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1109               // Field zio/aws/workspaces/WorkSpacesMock$ImportClientBranding$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ImportClientBranding$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DeleteWorkspaceBundleResponse$ReadOnly> deleteWorkspaceBundle(zio.aws.workspaces.model.DeleteWorkspaceBundleRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1116               // Field zio/aws/workspaces/WorkSpacesMock$DeleteWorkspaceBundle$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DeleteWorkspaceBundle$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.ConnectClientAddIn$ReadOnly> describeConnectClientAddIns(zio.aws.workspaces.model.DescribeConnectClientAddInsRequest);
    Code:
       0: getstatic     #633                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1128,  0           // InvokeDynamic #9:apply:(Lzio/aws/workspaces/WorkSpacesMock$$anon$1;Lzio/aws/workspaces/model/DescribeConnectClientAddInsRequest;)Lscala/Function1;
      10: invokevirtual #660                // Method zio/Unsafe$.unsafeCompat:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #662                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeConnectClientAddInsResponse$ReadOnly> describeConnectClientAddInsPaginated(zio.aws.workspaces.model.DescribeConnectClientAddInsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1135               // Field zio/aws/workspaces/WorkSpacesMock$DescribeConnectClientAddInsPaginated$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeConnectClientAddInsPaginated$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DisassociateIpGroupsResponse$ReadOnly> disassociateIpGroups(zio.aws.workspaces.model.DisassociateIpGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1141               // Field zio/aws/workspaces/WorkSpacesMock$DisassociateIpGroups$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DisassociateIpGroups$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DescribeClientPropertiesResponse$ReadOnly> describeClientProperties(zio.aws.workspaces.model.DescribeClientPropertiesRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1148               // Field zio/aws/workspaces/WorkSpacesMock$DescribeClientProperties$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeClientProperties$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.UpdateConnectionAliasPermissionResponse$ReadOnly> updateConnectionAliasPermission(zio.aws.workspaces.model.UpdateConnectionAliasPermissionRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1155               // Field zio/aws/workspaces/WorkSpacesMock$UpdateConnectionAliasPermission$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$UpdateConnectionAliasPermission$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.CreateTagsResponse$ReadOnly> createTags(zio.aws.workspaces.model.CreateTagsRequest);
    Code:
       0: aload_0
       1: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #1162               // Field zio/aws/workspaces/WorkSpacesMock$CreateTags$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$CreateTags$;
       7: aload_1
       8: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1166               // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/workspaces/WorkSpaces;
       6: areturn

  public static final zio.stream.ZStream $anonfun$describeConnectionAliases$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeConnectionAliasesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1178               // Field zio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliases$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeConnectionAliases$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1180               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeConnectionAliases(WorkSpacesMock.scala:582)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeAccountModifications$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeAccountModificationsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1195               // Field zio/aws/workspaces/WorkSpacesMock$DescribeAccountModifications$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeAccountModifications$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1197               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeAccountModifications(WorkSpacesMock.scala:605)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeWorkspaceBundles$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeWorkspaceBundlesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1201               // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceBundles$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceBundles$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1203               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeWorkspaceBundles(WorkSpacesMock.scala:624)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeWorkspacesConnectionStatus$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeWorkspacesConnectionStatusRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1207               // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspacesConnectionStatus$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspacesConnectionStatus$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1209               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeWorkspacesConnectionStatus(WorkSpacesMock.scala:659)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$listAvailableManagementCidrRanges$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.ListAvailableManagementCidrRangesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1213               // Field zio/aws/workspaces/WorkSpacesMock$ListAvailableManagementCidrRanges$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$ListAvailableManagementCidrRanges$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1215               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.listAvailableManagementCidrRanges(WorkSpacesMock.scala:728)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeWorkspaces$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeWorkspacesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1219               // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaces$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaces$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1221               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeWorkspaces(WorkSpacesMock.scala:822)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeWorkspaceDirectories$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeWorkspaceDirectoriesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1225               // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceDirectories$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceDirectories$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1227               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeWorkspaceDirectories(WorkSpacesMock.scala:845)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeIpGroups$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeIpGroupsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1231               // Field zio/aws/workspaces/WorkSpacesMock$DescribeIpGroups$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeIpGroups$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1233               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeIpGroups(WorkSpacesMock.scala:874)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeWorkspaceImages$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeWorkspaceImagesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1237               // Field zio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImages$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeWorkspaceImages$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1239               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeWorkspaceImages(WorkSpacesMock.scala:922)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public static final zio.stream.ZStream $anonfun$describeConnectClientAddIns$1(zio.aws.workspaces.WorkSpacesMock$$anon$1, zio.aws.workspaces.model.DescribeConnectClientAddInsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #1171               // Field rts$1:Lzio/Runtime;
       4: invokeinterface #1175,  1         // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #572                // Field proxy$1:Lzio/mock/Proxy;
      13: getstatic     #1243               // Field zio/aws/workspaces/WorkSpacesMock$DescribeConnectClientAddIns$.MODULE$:Lzio/aws/workspaces/WorkSpacesMock$DescribeConnectClientAddIns$;
      16: aload_1
      17: invokevirtual #582                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #1245               // String zio.aws.workspaces.WorkSpacesMock.compose.$anon.describeConnectClientAddIns(WorkSpacesMock.scala:965)
      23: aload_2
      24: invokeinterface #1184,  4         // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #1190,  2         // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #662                // class zio/stream/ZStream
      38: areturn

  public zio.aws.workspaces.WorkSpacesMock$$anon$1(zio.mock.Proxy, zio.Runtime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #572                // Field proxy$1:Lzio/mock/Proxy;
       5: aload_0
       6: aload_2
       7: putfield      #1171               // Field rts$1:Lzio/Runtime;
      10: aload_0
      11: invokespecial #1250               // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aconst_null
      16: putfield      #557                // Field api:Lsoftware/amazon/awssdk/services/workspaces/WorkSpacesAsyncClient;
      19: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1262,  0           // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
