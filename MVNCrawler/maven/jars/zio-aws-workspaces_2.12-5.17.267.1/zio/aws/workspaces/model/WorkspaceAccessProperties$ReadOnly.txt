Compiled from "WorkspaceAccessProperties.scala"
public interface zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly {
  public static zio.aws.workspaces.model.WorkspaceAccessProperties asEditable$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #20                 // InterfaceMethod asEditable:()Lzio/aws/workspaces/model/WorkspaceAccessProperties;
       4: areturn

  public default zio.aws.workspaces.model.WorkspaceAccessProperties asEditable();
    Code:
       0: new           #12                 // class zio/aws/workspaces/model/WorkspaceAccessProperties
       3: dup
       4: aload_0
       5: invokeinterface #25,  1           // InterfaceMethod deviceTypeWindows:()Lzio/prelude/data/Optional;
      10: invokedynamic #48,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #57,  1           // InterfaceMethod deviceTypeOsx:()Lzio/prelude/data/Optional;
      26: invokedynamic #62,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      31: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      36: aload_0
      37: invokeinterface #65,  1           // InterfaceMethod deviceTypeWeb:()Lzio/prelude/data/Optional;
      42: invokedynamic #70,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      47: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      52: aload_0
      53: invokeinterface #73,  1           // InterfaceMethod deviceTypeIos:()Lzio/prelude/data/Optional;
      58: invokedynamic #78,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      63: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      68: aload_0
      69: invokeinterface #81,  1           // InterfaceMethod deviceTypeAndroid:()Lzio/prelude/data/Optional;
      74: invokedynamic #86,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      79: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      84: aload_0
      85: invokeinterface #89,  1           // InterfaceMethod deviceTypeChromeOs:()Lzio/prelude/data/Optional;
      90: invokedynamic #94,  0             // InvokeDynamic #5:apply:()Lscala/Function1;
      95: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     100: aload_0
     101: invokeinterface #97,  1           // InterfaceMethod deviceTypeZeroClient:()Lzio/prelude/data/Optional;
     106: invokedynamic #102,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
     111: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     116: aload_0
     117: invokeinterface #105,  1          // InterfaceMethod deviceTypeLinux:()Lzio/prelude/data/Optional;
     122: invokedynamic #110,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
     127: invokeinterface #54,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     132: invokespecial #114                // Method zio/aws/workspaces/model/WorkspaceAccessProperties."<init>":(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)V
     135: areturn

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeWindows();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeOsx();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeWeb();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeIos();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeAndroid();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeChromeOs();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeZeroClient();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.AccessPropertyValue> deviceTypeLinux();

  public static zio.ZIO getDeviceTypeWindows$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #122                // InterfaceMethod getDeviceTypeWindows:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeWindows();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #130                // String deviceTypeWindows
       5: aload_0
       6: invokedynamic #141,  0            // InvokeDynamic #8:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeOsx$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #149                // InterfaceMethod getDeviceTypeOsx:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeOsx();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #150                // String deviceTypeOsx
       5: aload_0
       6: invokedynamic #155,  0            // InvokeDynamic #9:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeWeb$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #159                // InterfaceMethod getDeviceTypeWeb:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeWeb();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #160                // String deviceTypeWeb
       5: aload_0
       6: invokedynamic #165,  0            // InvokeDynamic #10:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeIos$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #169                // InterfaceMethod getDeviceTypeIos:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeIos();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #170                // String deviceTypeIos
       5: aload_0
       6: invokedynamic #175,  0            // InvokeDynamic #11:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeAndroid$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #179                // InterfaceMethod getDeviceTypeAndroid:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeAndroid();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #180                // String deviceTypeAndroid
       5: aload_0
       6: invokedynamic #185,  0            // InvokeDynamic #12:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeChromeOs$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #189                // InterfaceMethod getDeviceTypeChromeOs:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeChromeOs();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #190                // String deviceTypeChromeOs
       5: aload_0
       6: invokedynamic #195,  0            // InvokeDynamic #13:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeZeroClient$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #199                // InterfaceMethod getDeviceTypeZeroClient:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeZeroClient();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #200                // String deviceTypeZeroClient
       5: aload_0
       6: invokedynamic #205,  0            // InvokeDynamic #14:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeLinux$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #209                // InterfaceMethod getDeviceTypeLinux:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.AccessPropertyValue> getDeviceTypeLinux();
    Code:
       0: getstatic     #129                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #210                // String deviceTypeLinux
       5: aload_0
       6: invokedynamic #215,  0            // InvokeDynamic #15:apply:(Lzio/aws/workspaces/model/WorkspaceAccessProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #145                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$1(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$2(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$3(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$4(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$5(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$6(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$7(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.AccessPropertyValue $anonfun$asEditable$8(zio.aws.workspaces.model.AccessPropertyValue);
    Code:
       0: aload_0
       1: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeWindows$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod deviceTypeWindows:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeOsx$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #57,  1           // InterfaceMethod deviceTypeOsx:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeWeb$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod deviceTypeWeb:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeIos$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #73,  1           // InterfaceMethod deviceTypeIos:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeAndroid$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #81,  1           // InterfaceMethod deviceTypeAndroid:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeChromeOs$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #89,  1           // InterfaceMethod deviceTypeChromeOs:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeZeroClient$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #97,  1           // InterfaceMethod deviceTypeZeroClient:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeLinux$1(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #105,  1          // InterfaceMethod deviceTypeLinux:()Lzio/prelude/data/Optional;
       6: areturn

  public static void $init$(zio.aws.workspaces.model.WorkspaceAccessProperties$ReadOnly);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #231,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
