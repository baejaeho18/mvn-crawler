Compiled from "RebootWorkspacesResponse.scala"
public interface zio.aws.workspaces.model.RebootWorkspacesResponse$ReadOnly {
  public static zio.aws.workspaces.model.RebootWorkspacesResponse asEditable$(zio.aws.workspaces.model.RebootWorkspacesResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #24                 // InterfaceMethod asEditable:()Lzio/aws/workspaces/model/RebootWorkspacesResponse;
       4: areturn

  public default zio.aws.workspaces.model.RebootWorkspacesResponse asEditable();
    Code:
       0: new           #17                 // class zio/aws/workspaces/model/RebootWorkspacesResponse
       3: dup
       4: aload_0
       5: invokeinterface #29,  1           // InterfaceMethod failedRequests:()Lzio/prelude/data/Optional;
      10: invokedynamic #52,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #58,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: invokespecial #62                 // Method zio/aws/workspaces/model/RebootWorkspacesResponse."<init>":(Lzio/prelude/data/Optional;)V
      23: areturn

  public abstract zio.prelude.data.Optional<scala.collection.immutable.List<zio.aws.workspaces.model.FailedWorkspaceChangeRequest$ReadOnly>> failedRequests();

  public static zio.ZIO getFailedRequests$(zio.aws.workspaces.model.RebootWorkspacesResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #70                 // InterfaceMethod getFailedRequests:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.List<zio.aws.workspaces.model.FailedWorkspaceChangeRequest$ReadOnly>> getFailedRequests();
    Code:
       0: getstatic     #77                 // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #78                 // String failedRequests
       5: aload_0
       6: invokedynamic #89,  0             // InvokeDynamic #1:apply:(Lzio/aws/workspaces/model/RebootWorkspacesResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #93                 // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.aws.workspaces.model.FailedWorkspaceChangeRequest $anonfun$asEditable$2(zio.aws.workspaces.model.FailedWorkspaceChangeRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod zio/aws/workspaces/model/FailedWorkspaceChangeRequest$ReadOnly.asEditable:()Lzio/aws/workspaces/model/FailedWorkspaceChangeRequest;
       6: areturn

  public static scala.collection.Iterable $anonfun$asEditable$1(scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokedynamic #106,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       6: getstatic     #111                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       9: invokevirtual #115                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      12: invokevirtual #120                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      15: checkcast     #122                // class scala/collection/Iterable
      18: areturn

  public static zio.prelude.data.Optional $anonfun$getFailedRequests$1(zio.aws.workspaces.model.RebootWorkspacesResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod failedRequests:()Lzio/prelude/data/Optional;
       6: areturn

  public static void $init$(zio.aws.workspaces.model.RebootWorkspacesResponse$ReadOnly);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #137,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
