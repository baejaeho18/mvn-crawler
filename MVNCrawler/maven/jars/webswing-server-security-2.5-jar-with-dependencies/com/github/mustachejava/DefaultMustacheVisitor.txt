Compiled from "DefaultMustacheVisitor.java"
public class com.github.mustachejava.DefaultMustacheVisitor implements com.github.mustachejava.MustacheVisitor {
  protected static java.util.logging.Logger logger;

  private static final com.github.mustachejava.Code EOF;

  protected final java.util.List<com.github.mustachejava.Code> list;

  private final java.util.Map<java.lang.String, com.github.mustachejava.PragmaHandler> handlers;

  protected com.github.mustachejava.DefaultMustacheFactory df;

  public com.github.mustachejava.DefaultMustacheVisitor(com.github.mustachejava.DefaultMustacheFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field list:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class com/github/mustachejava/DefaultMustacheVisitor$2
      19: dup
      20: aload_0
      21: invokespecial #6                  // Method com/github/mustachejava/DefaultMustacheVisitor$2."<init>":(Lcom/github/mustachejava/DefaultMustacheVisitor;)V
      24: putfield      #7                  // Field handlers:Ljava/util/Map;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      32: return

  public void addPragmaHandler(java.lang.String, com.github.mustachejava.PragmaHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field handlers:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: aload_2
       9: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public com.github.mustachejava.Mustache mustache(com.github.mustachejava.TemplateContext);
    Code:
       0: new           #11                 // class com/github/mustachejava/codes/DefaultMustache
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
       9: aload_0
      10: getfield      #4                  // Field list:Ljava/util/List;
      13: aload_0
      14: getfield      #4                  // Field list:Ljava/util/List;
      17: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      22: anewarray     #13                 // class com/github/mustachejava/Code
      25: invokeinterface #14,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      30: checkcast     #15                 // class "[Lcom/github/mustachejava/Code;"
      33: aload_1
      34: invokevirtual #16                 // Method com/github/mustachejava/TemplateContext.file:()Ljava/lang/String;
      37: invokespecial #17                 // Method com/github/mustachejava/codes/DefaultMustache."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;[Lcom/github/mustachejava/Code;Ljava/lang/String;)V
      40: areturn

  public void iterable(com.github.mustachejava.TemplateContext, java.lang.String, com.github.mustachejava.Mustache);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: new           #18                 // class com/github/mustachejava/codes/IterableCode
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      13: aload_3
      14: aload_2
      15: invokespecial #19                 // Method com/github/mustachejava/codes/IterableCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;)V
      18: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void notIterable(com.github.mustachejava.TemplateContext, java.lang.String, com.github.mustachejava.Mustache);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: new           #21                 // class com/github/mustachejava/codes/NotIterableCode
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      13: aload_3
      14: aload_2
      15: invokespecial #22                 // Method com/github/mustachejava/codes/NotIterableCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;)V
      18: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void name(com.github.mustachejava.TemplateContext, java.lang.String, com.github.mustachejava.Mustache);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: new           #23                 // class com/github/mustachejava/codes/ExtendNameCode
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      13: aload_3
      14: aload_2
      15: invokespecial #24                 // Method com/github/mustachejava/codes/ExtendNameCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;)V
      18: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void partial(com.github.mustachejava.TemplateContext, java.lang.String);
    Code:
       0: new           #25                 // class com/github/mustachejava/TemplateContext
       3: dup
       4: ldc           #26                 // String {{
       6: ldc           #27                 // String }}
       8: aload_1
       9: invokevirtual #16                 // Method com/github/mustachejava/TemplateContext.file:()Ljava/lang/String;
      12: aload_1
      13: invokevirtual #28                 // Method com/github/mustachejava/TemplateContext.line:()I
      16: aload_1
      17: invokevirtual #29                 // Method com/github/mustachejava/TemplateContext.startOfLine:()Z
      20: invokespecial #30                 // Method com/github/mustachejava/TemplateContext."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)V
      23: astore_3
      24: aload_0
      25: getfield      #4                  // Field list:Ljava/util/List;
      28: new           #31                 // class com/github/mustachejava/codes/PartialCode
      31: dup
      32: aload_3
      33: aload_0
      34: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      37: aload_2
      38: invokespecial #32                 // Method com/github/mustachejava/codes/PartialCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Ljava/lang/String;)V
      41: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: return

  public void value(com.github.mustachejava.TemplateContext, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: new           #33                 // class com/github/mustachejava/codes/ValueCode
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      13: aload_2
      14: iload_3
      15: invokespecial #34                 // Method com/github/mustachejava/codes/ValueCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Ljava/lang/String;Z)V
      18: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void write(com.github.mustachejava.TemplateContext, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #35                 // Method java/lang/String.length:()I
       4: ifle          72
       7: aload_0
       8: getfield      #4                  // Field list:Ljava/util/List;
      11: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      16: istore_3
      17: iload_3
      18: ifle          49
      21: aload_0
      22: getfield      #4                  // Field list:Ljava/util/List;
      25: iload_3
      26: iconst_1
      27: isub
      28: invokeinterface #36,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: checkcast     #13                 // class com/github/mustachejava/Code
      36: astore        4
      38: aload         4
      40: aload_2
      41: invokeinterface #37,  2           // InterfaceMethod com/github/mustachejava/Code.append:(Ljava/lang/String;)V
      46: goto          72
      49: aload_0
      50: getfield      #4                  // Field list:Ljava/util/List;
      53: new           #38                 // class com/github/mustachejava/codes/WriteCode
      56: dup
      57: aload_1
      58: aload_0
      59: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      62: aload_2
      63: invokespecial #39                 // Method com/github/mustachejava/codes/WriteCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Ljava/lang/String;)V
      66: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: return

  public void pragma(com.github.mustachejava.TemplateContext, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field handlers:Ljava/util/Map;
       4: aload_2
       5: invokevirtual #9                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #41                 // class com/github/mustachejava/PragmaHandler
      16: astore        4
      18: aload         4
      20: ifnonnull     51
      23: getstatic     #42                 // Field logger:Ljava/util/logging/Logger;
      26: new           #43                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #45                 // String Unimplemented pragma:
      35: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #48                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      48: goto          80
      51: aload         4
      53: aload_1
      54: aload_2
      55: aload_3
      56: invokeinterface #49,  4           // InterfaceMethod com/github/mustachejava/PragmaHandler.handle:(Lcom/github/mustachejava/TemplateContext;Ljava/lang/String;Ljava/lang/String;)Lcom/github/mustachejava/Code;
      61: astore        5
      63: aload         5
      65: ifnull        80
      68: aload_0
      69: getfield      #4                  // Field list:Ljava/util/List;
      72: aload         5
      74: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: return

  public void eof(com.github.mustachejava.TemplateContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: getstatic     #50                 // Field EOF:Lcom/github/mustachejava/Code;
       7: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      12: pop
      13: return

  public void extend(com.github.mustachejava.TemplateContext, java.lang.String, com.github.mustachejava.Mustache);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: new           #51                 // class com/github/mustachejava/codes/ExtendCode
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      13: aload_3
      14: aload_2
      15: invokespecial #52                 // Method com/github/mustachejava/codes/ExtendCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;)V
      18: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void comment(com.github.mustachejava.TemplateContext, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/List;
       4: new           #53                 // class com/github/mustachejava/codes/CommentCode
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      13: aload_2
      14: invokespecial #54                 // Method com/github/mustachejava/codes/CommentCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Ljava/lang/String;)V
      17: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: return

  static {};
    Code:
       0: ldc           #55                 // class com/github/mustachejava/DefaultMustacheVisitor
       2: invokevirtual #56                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       5: invokestatic  #57                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #42                 // Field logger:Ljava/util/logging/Logger;
      11: new           #58                 // class com/github/mustachejava/DefaultMustacheVisitor$1
      14: dup
      15: invokespecial #59                 // Method com/github/mustachejava/DefaultMustacheVisitor$1."<init>":()V
      18: putstatic     #50                 // Field EOF:Lcom/github/mustachejava/Code;
      21: return
}
