Compiled from "DeferringMustacheFactory.java"
public class com.github.mustachejava.DeferringMustacheFactory extends com.github.mustachejava.DefaultMustacheFactory {
  public static final java.lang.Object DEFERRED;

  public com.github.mustachejava.DeferringMustacheFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/github/mustachejava/DefaultMustacheFactory."<init>":()V
       4: return

  public com.github.mustachejava.DeferringMustacheFactory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/github/mustachejava/DefaultMustacheFactory."<init>":(Ljava/lang/String;)V
       5: return

  public com.github.mustachejava.DeferringMustacheFactory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method com/github/mustachejava/DefaultMustacheFactory."<init>":(Ljava/io/File;)V
       5: return

  public com.github.mustachejava.MustacheVisitor createMustacheVisitor();
    Code:
       0: new           #4                  // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: astore_1
       9: new           #6                  // class com/github/mustachejava/DeferringMustacheFactory$1
      12: dup
      13: aload_0
      14: aload_0
      15: aload_1
      16: invokespecial #7                  // Method com/github/mustachejava/DeferringMustacheFactory$1."<init>":(Lcom/github/mustachejava/DeferringMustacheFactory;Lcom/github/mustachejava/DefaultMustacheFactory;Ljava/util/concurrent/atomic/AtomicLong;)V
      19: areturn

  protected void writeTarget(java.io.Writer, java.lang.Long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #8                  // String <div id=\"
       3: invokevirtual #9                  // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       6: pop
       7: aload_1
       8: aload_2
       9: invokevirtual #10                 // Method java/lang/Long.toString:()Ljava/lang/String;
      12: invokevirtual #9                  // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      15: pop
      16: aload_1
      17: ldc           #11                 // String \"></div>
      19: invokevirtual #9                  // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      22: pop
      23: return

  protected static void writeDeferral(java.lang.StringBuilder, com.github.mustachejava.DeferringMustacheFactory$Deferral, java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #12                 // String <script>document.getElementById(\"
       3: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: pop
       7: aload_0
       8: aload_1
       9: getfield      #14                 // Field com/github/mustachejava/DeferringMustacheFactory$Deferral.id:J
      12: invokevirtual #15                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      15: pop
      16: aload_0
      17: ldc           #16                 // String \").innerHTML=\"
      19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_0
      24: aload_2
      25: invokevirtual #17                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: ldc           #18                 // String <
      30: ldc           #19                 // String &lt;
      32: invokevirtual #20                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      35: ldc           #21                 // String \"
      37: ldc           #22                 // String \\\"
      39: invokevirtual #20                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      42: ldc           #23                 // String \n
      44: ldc           #24                 // String \\n
      46: invokevirtual #20                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      49: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_0
      54: ldc           #25                 // String \";</script>
      56: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: return

  static {};
    Code:
       0: new           #26                 // class java/lang/Object
       3: dup
       4: invokespecial #27                 // Method java/lang/Object."<init>":()V
       7: putstatic     #28                 // Field DEFERRED:Ljava/lang/Object;
      10: return
}
