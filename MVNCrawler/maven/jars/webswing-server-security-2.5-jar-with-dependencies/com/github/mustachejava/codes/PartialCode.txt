Compiled from "PartialCode.java"
public class com.github.mustachejava.codes.PartialCode extends com.github.mustachejava.codes.DefaultCode {
  protected final java.lang.String extension;

  protected final java.lang.String dir;

  protected com.github.mustachejava.Mustache partial;

  protected int recrusionLimit;

  protected boolean isRecursive;

  static final boolean $assertionsDisabled;

  protected com.github.mustachejava.codes.PartialCode(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, com.github.mustachejava.Mustache, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         5
       6: aload         4
       8: invokespecial #1                  // Method com/github/mustachejava/codes/DefaultCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      11: aload_1
      12: invokevirtual #2                  // Method com/github/mustachejava/TemplateContext.file:()Ljava/lang/String;
      15: astore        6
      17: aload         6
      19: ldc           #3                  // String .
      21: invokevirtual #4                  // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      24: istore        7
      26: aload_0
      27: iload         7
      29: iconst_m1
      30: if_icmpne     38
      33: ldc           #5                  // String
      35: goto          45
      38: aload         6
      40: iload         7
      42: invokevirtual #6                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: putfield      #7                  // Field extension:Ljava/lang/String;
      48: aload         6
      50: ldc           #8                  // String /
      52: invokevirtual #4                  // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      55: istore        8
      57: aload_0
      58: aload         6
      60: iconst_0
      61: iload         8
      63: iconst_1
      64: iadd
      65: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      68: putfield      #10                 // Field dir:Ljava/lang/String;
      71: aload_0
      72: aload_2
      73: invokevirtual #11                 // Method com/github/mustachejava/DefaultMustacheFactory.getRecursionLimit:()I
      76: putfield      #12                 // Field recrusionLimit:I
      79: return

  public com.github.mustachejava.codes.PartialCode(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: ldc           #13                 // String >
       6: aload_3
       7: invokespecial #14                 // Method "<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void identity(java.io.Writer);
    Code:
       0: aload_0
       1: getfield      #15                 // Field name:Ljava/lang/String;
       4: ifnull        16
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #16                 // Field type:Ljava/lang/String;
      13: invokespecial #17                 // Method com/github/mustachejava/codes/DefaultCode.tag:(Ljava/io/Writer;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: invokevirtual #18                 // Method appendText:(Ljava/io/Writer;)Ljava/io/Writer;
      21: pop
      22: goto          35
      25: astore_2
      26: new           #20                 // class com/github/mustachejava/MustacheException
      29: dup
      30: aload_2
      31: invokespecial #21                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/Throwable;)V
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0    22    25   Class java/io/IOException

  public com.github.mustachejava.Code[] getCodes();
    Code:
       0: aload_0
       1: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
       4: ifnonnull     11
       7: aconst_null
       8: goto          20
      11: aload_0
      12: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
      15: invokeinterface #23,  1           // InterfaceMethod com/github/mustachejava/Mustache.getCodes:()[Lcom/github/mustachejava/Code;
      20: areturn

  public void setCodes(com.github.mustachejava.Code[]);
    Code:
       0: aload_0
       1: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod com/github/mustachejava/Mustache.setCodes:([Lcom/github/mustachejava/Code;)V
      10: return

  public java.io.Writer execute(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #25                 // Field isRecursive:Z
       6: ifeq          76
       9: aload_1
      10: instanceof    #26                 // class com/github/mustachejava/codes/DepthLimitedWriter
      13: ifeq          24
      16: aload_1
      17: checkcast     #26                 // class com/github/mustachejava/codes/DepthLimitedWriter
      20: astore_3
      21: goto          33
      24: new           #26                 // class com/github/mustachejava/codes/DepthLimitedWriter
      27: dup
      28: aload_1
      29: invokespecial #27                 // Method com/github/mustachejava/codes/DepthLimitedWriter."<init>":(Ljava/io/Writer;)V
      32: astore_3
      33: aload_3
      34: invokevirtual #28                 // Method com/github/mustachejava/codes/DepthLimitedWriter.incr:()I
      37: aload_0
      38: getfield      #12                 // Field recrusionLimit:I
      41: if_icmple     74
      44: new           #20                 // class com/github/mustachejava/MustacheException
      47: dup
      48: new           #29                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #31                 // String Maximum partial recursion limit reached:
      57: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #12                 // Field recrusionLimit:I
      64: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #35                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_3
      75: astore_1
      76: aload_0
      77: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
      80: aload_1
      81: aload_2
      82: invokeinterface #36,  3           // InterfaceMethod com/github/mustachejava/Mustache.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      87: astore        4
      89: aload_0
      90: getfield      #25                 // Field isRecursive:Z
      93: ifeq          119
      96: getstatic     #37                 // Field $assertionsDisabled:Z
      99: ifne          114
     102: aload_3
     103: ifnonnull     114
     106: new           #38                 // class java/lang/AssertionError
     109: dup
     110: invokespecial #39                 // Method java/lang/AssertionError."<init>":()V
     113: athrow
     114: aload_3
     115: invokevirtual #40                 // Method com/github/mustachejava/codes/DepthLimitedWriter.decr:()I
     118: pop
     119: aload_0
     120: aload         4
     122: invokevirtual #18                 // Method appendText:(Ljava/io/Writer;)Ljava/io/Writer;
     125: areturn

  public synchronized void init();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method filterText:()V
       4: aload_0
       5: aload_0
       6: getfield      #42                 // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
       9: aload_0
      10: invokevirtual #43                 // Method partialName:()Ljava/lang/String;
      13: invokevirtual #44                 // Method com/github/mustachejava/DefaultMustacheFactory.compilePartial:(Ljava/lang/String;)Lcom/github/mustachejava/Mustache;
      16: putfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
      19: aload_0
      20: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
      23: instanceof    #45                 // class com/github/mustachejava/codes/DefaultMustache
      26: ifeq          47
      29: aload_0
      30: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
      33: checkcast     #45                 // class com/github/mustachejava/codes/DefaultMustache
      36: invokevirtual #46                 // Method com/github/mustachejava/codes/DefaultMustache.isRecursive:()Z
      39: ifeq          47
      42: aload_0
      43: iconst_1
      44: putfield      #25                 // Field isRecursive:Z
      47: aload_0
      48: getfield      #22                 // Field partial:Lcom/github/mustachejava/Mustache;
      51: ifnonnull     84
      54: new           #20                 // class com/github/mustachejava/MustacheException
      57: dup
      58: new           #29                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #47                 // String Failed to compile partial:
      67: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #15                 // Field name:Ljava/lang/String;
      74: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #35                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: return

  protected java.lang.String partialName();
    Code:
       0: aload_0
       1: getfield      #42                 // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
       4: aload_0
       5: getfield      #10                 // Field dir:Ljava/lang/String;
       8: aload_0
       9: getfield      #15                 // Field name:Ljava/lang/String;
      12: aload_0
      13: getfield      #7                  // Field extension:Ljava/lang/String;
      16: invokevirtual #48                 // Method com/github/mustachejava/DefaultMustacheFactory.resolvePartialPath:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: areturn

  static {};
    Code:
       0: ldc           #49                 // class com/github/mustachejava/codes/PartialCode
       2: invokevirtual #50                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #37                 // Field $assertionsDisabled:Z
      16: return
}
