Compiled from "ValueCode.java"
public class com.github.mustachejava.codes.ValueCode extends com.github.mustachejava.codes.DefaultCode {
  private final boolean encoded;

  private final java.util.concurrent.ExecutorService les;

  private java.util.regex.Pattern compiledAppended;

  public void identity(java.io.Writer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: ifnull        71
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field tc:Lcom/github/mustachejava/TemplateContext;
      12: invokevirtual #4                  // Method com/github/mustachejava/TemplateContext.startChars:()Ljava/lang/String;
      15: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #6                  // Field encoded:Z
      22: ifne          31
      25: aload_1
      26: ldc           #7                  // String {
      28: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      31: aload_1
      32: aload_0
      33: getfield      #8                  // Field type:Ljava/lang/String;
      36: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      39: aload_1
      40: aload_0
      41: getfield      #2                  // Field name:Ljava/lang/String;
      44: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      47: aload_0
      48: getfield      #6                  // Field encoded:Z
      51: ifne          60
      54: aload_1
      55: ldc           #9                  // String }
      57: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      60: aload_1
      61: aload_0
      62: getfield      #3                  // Field tc:Lcom/github/mustachejava/TemplateContext;
      65: invokevirtual #10                 // Method com/github/mustachejava/TemplateContext.endChars:()Ljava/lang/String;
      68: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      71: aload_0
      72: aload_1
      73: invokevirtual #11                 // Method appendText:(Ljava/io/Writer;)Ljava/io/Writer;
      76: pop
      77: goto          90
      80: astore_2
      81: new           #13                 // class com/github/mustachejava/MustacheException
      84: dup
      85: aload_2
      86: invokespecial #14                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/Throwable;)V
      89: athrow
      90: return
    Exception table:
       from    to  target type
           0    77    80   Class java/io/IOException

  public com.github.mustachejava.codes.ValueCode(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: ldc           #15                 // String
       7: invokespecial #16                 // Method com/github/mustachejava/codes/DefaultCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: iload         4
      13: putfield      #6                  // Field encoded:Z
      16: aload_0
      17: aload_2
      18: invokevirtual #17                 // Method com/github/mustachejava/DefaultMustacheFactory.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      21: putfield      #18                 // Field les:Ljava/util/concurrent/ExecutorService;
      24: return

  public java.io.Writer execute(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #19                 // Method get:(Ljava/util/List;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnull        63
      10: aload_3
      11: instanceof    #20                 // class java/util/function/Function
      14: ifeq          30
      17: aload_0
      18: aload_1
      19: aload_3
      20: checkcast     #20                 // class java/util/function/Function
      23: aload_2
      24: invokevirtual #21                 // Method handleFunction:(Ljava/io/Writer;Ljava/util/function/Function;Ljava/util/List;)V
      27: goto          63
      30: aload_3
      31: instanceof    #22                 // class java/util/concurrent/Callable
      34: ifeq          48
      37: aload_0
      38: aload_1
      39: aload_3
      40: checkcast     #22                 // class java/util/concurrent/Callable
      43: aload_2
      44: invokevirtual #23                 // Method handleCallable:(Ljava/io/Writer;Ljava/util/concurrent/Callable;Ljava/util/List;)Ljava/io/Writer;
      47: areturn
      48: aload_0
      49: aload_1
      50: aload_0
      51: getfield      #24                 // Field oh:Lcom/github/mustachejava/ObjectHandler;
      54: aload_3
      55: invokeinterface #25,  2           // InterfaceMethod com/github/mustachejava/ObjectHandler.stringify:(Ljava/lang/Object;)Ljava/lang/String;
      60: invokevirtual #26                 // Method execute:(Ljava/io/Writer;Ljava/lang/String;)V
      63: aload_0
      64: aload_1
      65: aload_2
      66: invokespecial #27                 // Method com/github/mustachejava/codes/DefaultCode.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      69: areturn
      70: astore_3
      71: new           #13                 // class com/github/mustachejava/MustacheException
      74: dup
      75: new           #29                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #31                 // String Failed to get value for
      84: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #2                  // Field name:Ljava/lang/String;
      91: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: aload_3
      98: aload_0
      99: getfield      #3                  // Field tc:Lcom/github/mustachejava/TemplateContext;
     102: invokespecial #34                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;Lcom/github/mustachejava/TemplateContext;)V
     105: athrow
    Exception table:
       from    to  target type
           0    47    70   Class java/lang/Exception
          48    69    70   Class java/lang/Exception

  protected java.io.Writer handleCallable(java.io.Writer, java.util.concurrent.Callable, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #18                 // Field les:Ljava/util/concurrent/ExecutorService;
       4: ifnonnull     47
       7: aload_2
       8: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      13: astore        4
      15: aload_0
      16: aload_1
      17: aload         4
      19: ifnonnull     26
      22: aconst_null
      23: goto          37
      26: aload_0
      27: getfield      #24                 // Field oh:Lcom/github/mustachejava/ObjectHandler;
      30: aload         4
      32: invokeinterface #25,  2           // InterfaceMethod com/github/mustachejava/ObjectHandler.stringify:(Ljava/lang/Object;)Ljava/lang/String;
      37: invokevirtual #26                 // Method execute:(Ljava/io/Writer;Ljava/lang/String;)V
      40: aload_0
      41: aload_1
      42: aload_3
      43: invokespecial #27                 // Method com/github/mustachejava/codes/DefaultCode.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      46: areturn
      47: aload_1
      48: invokevirtual #36                 // Method java/io/Writer.flush:()V
      51: goto          68
      54: astore        4
      56: new           #13                 // class com/github/mustachejava/MustacheException
      59: dup
      60: ldc           #37                 // String Failed to flush writer
      62: aload         4
      64: invokespecial #38                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: athrow
      68: new           #39                 // class com/github/mustachejava/util/LatchedWriter
      71: dup
      72: aload_1
      73: invokespecial #40                 // Method com/github/mustachejava/util/LatchedWriter."<init>":(Ljava/io/Writer;)V
      76: astore        4
      78: aload_1
      79: astore        5
      81: aload_0
      82: getfield      #18                 // Field les:Ljava/util/concurrent/ExecutorService;
      85: aload_0
      86: aload_2
      87: aload         5
      89: aload         4
      91: invokedynamic #41,  0             // InvokeDynamic #0:run:(Lcom/github/mustachejava/codes/ValueCode;Ljava/util/concurrent/Callable;Ljava/io/Writer;Lcom/github/mustachejava/util/LatchedWriter;)Ljava/lang/Runnable;
      96: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     101: aload_0
     102: aload         4
     104: aload_3
     105: invokespecial #27                 // Method com/github/mustachejava/codes/DefaultCode.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
     108: areturn
    Exception table:
       from    to  target type
          47    51    54   Class java/io/IOException

  protected void handleFunction(java.io.Writer, java.util.function.Function, java.util.List<java.lang.Object>) throws java.io.IOException;
    Code:
       0: aload_2
       1: aconst_null
       2: invokeinterface #43,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        5
       9: aload         5
      11: ifnonnull     21
      14: ldc           #15                 // String
      16: astore        4
      18: goto          107
      21: aload         5
      23: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: astore        6
      28: new           #45                 // class java/io/StringWriter
      31: dup
      32: invokespecial #46                 // Method java/io/StringWriter."<init>":()V
      35: astore        7
      37: new           #47                 // class com/github/mustachejava/TemplateContext
      40: dup
      41: ldc           #48                 // String {{
      43: ldc           #49                 // String }}
      45: aload_0
      46: getfield      #3                  // Field tc:Lcom/github/mustachejava/TemplateContext;
      49: invokevirtual #50                 // Method com/github/mustachejava/TemplateContext.file:()Ljava/lang/String;
      52: aload_0
      53: getfield      #3                  // Field tc:Lcom/github/mustachejava/TemplateContext;
      56: invokevirtual #51                 // Method com/github/mustachejava/TemplateContext.line:()I
      59: aload_0
      60: getfield      #3                  // Field tc:Lcom/github/mustachejava/TemplateContext;
      63: invokevirtual #52                 // Method com/github/mustachejava/TemplateContext.startOfLine:()Z
      66: invokespecial #53                 // Method com/github/mustachejava/TemplateContext."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)V
      69: astore        8
      71: aload_0
      72: getfield      #54                 // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      75: new           #55                 // class com/github/mustachejava/FragmentKey
      78: dup
      79: aload         8
      81: aload         6
      83: invokespecial #56                 // Method com/github/mustachejava/FragmentKey."<init>":(Lcom/github/mustachejava/TemplateContext;Ljava/lang/String;)V
      86: invokevirtual #57                 // Method com/github/mustachejava/DefaultMustacheFactory.getFragment:(Lcom/github/mustachejava/FragmentKey;)Lcom/github/mustachejava/Mustache;
      89: aload         7
      91: aload_3
      92: invokeinterface #58,  3           // InterfaceMethod com/github/mustachejava/Mustache.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      97: invokevirtual #59                 // Method java/io/Writer.close:()V
     100: aload         7
     102: invokevirtual #60                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
     105: astore        4
     107: aload_0
     108: aload_1
     109: aload         4
     111: invokevirtual #26                 // Method execute:(Ljava/io/Writer;Ljava/lang/String;)V
     114: return

  protected void execute(java.io.Writer, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        28
       4: aload_0
       5: getfield      #6                  // Field encoded:Z
       8: ifeq          23
      11: aload_0
      12: getfield      #54                 // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
      15: aload_2
      16: aload_1
      17: invokevirtual #61                 // Method com/github/mustachejava/DefaultMustacheFactory.encode:(Ljava/lang/String;Ljava/io/Writer;)V
      20: goto          28
      23: aload_1
      24: aload_2
      25: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      28: return

  public com.github.mustachejava.util.Node invert(com.github.mustachejava.util.Node, java.lang.String, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: getfield      #62                 // Field compiledAppended:Ljava/util/regex/Pattern;
       4: ifnonnull     37
       7: aload_0
       8: getfield      #63                 // Field appended:Ljava/lang/String;
      11: ifnonnull     26
      14: aload_0
      15: ldc           #64                 // String $
      17: invokestatic  #65                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      20: putfield      #62                 // Field compiledAppended:Ljava/util/regex/Pattern;
      23: goto          37
      26: aload_0
      27: aload_0
      28: getfield      #63                 // Field appended:Ljava/lang/String;
      31: invokestatic  #65                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      34: putfield      #62                 // Field compiledAppended:Ljava/util/regex/Pattern;
      37: aload_3
      38: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      41: istore        4
      43: aload_0
      44: getfield      #62                 // Field compiledAppended:Ljava/util/regex/Pattern;
      47: aload_2
      48: invokevirtual #67                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      51: astore        5
      53: aload         5
      55: aload_3
      56: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      59: invokevirtual #68                 // Method java/util/regex/Matcher.find:(I)Z
      62: ifeq          113
      65: aload_2
      66: iload         4
      68: aload         5
      70: invokevirtual #69                 // Method java/util/regex/Matcher.start:()I
      73: invokevirtual #70                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      76: astore        6
      78: aload_3
      79: aload         5
      81: invokevirtual #69                 // Method java/util/regex/Matcher.start:()I
      84: aload         5
      86: iconst_0
      87: invokevirtual #71                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      90: invokevirtual #72                 // Method java/lang/String.length:()I
      93: iadd
      94: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      97: aload_1
      98: aload_0
      99: getfield      #2                  // Field name:Ljava/lang/String;
     102: aload         6
     104: invokestatic  #74                 // Method com/github/mustachejava/util/NodeValue.value:(Ljava/lang/String;)Lcom/github/mustachejava/util/NodeValue;
     107: invokevirtual #75                 // Method com/github/mustachejava/util/Node.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_1
     112: areturn
     113: aconst_null
     114: areturn

  private void lambda$handleCallable$2(java.util.concurrent.Callable, java.io.Writer, com.github.mustachejava.util.LatchedWriter);
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       6: astore        4
       8: aload_0
       9: aload_2
      10: aload         4
      12: ifnonnull     19
      15: aconst_null
      16: goto          30
      19: aload_0
      20: getfield      #24                 // Field oh:Lcom/github/mustachejava/ObjectHandler;
      23: aload         4
      25: invokeinterface #25,  2           // InterfaceMethod com/github/mustachejava/ObjectHandler.stringify:(Ljava/lang/Object;)Ljava/lang/String;
      30: invokevirtual #26                 // Method execute:(Ljava/io/Writer;Ljava/lang/String;)V
      33: aload_3
      34: invokevirtual #76                 // Method com/github/mustachejava/util/LatchedWriter.done:()V
      37: goto          48
      40: astore        4
      42: aload_3
      43: aload         4
      45: invokevirtual #78                 // Method com/github/mustachejava/util/LatchedWriter.failed:(Ljava/lang/Throwable;)V
      48: return
    Exception table:
       from    to  target type
           0    37    40   Class java/lang/Throwable
}
