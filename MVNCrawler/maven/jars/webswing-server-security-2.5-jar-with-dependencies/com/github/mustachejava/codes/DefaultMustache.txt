Compiled from "DefaultMustache.java"
public class com.github.mustachejava.codes.DefaultMustache extends com.github.mustachejava.codes.DefaultCode implements com.github.mustachejava.Mustache {
  private com.github.mustachejava.Code[] codes;

  private boolean inited;

  private boolean isRecursive;

  public com.github.mustachejava.codes.DefaultMustache(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, com.github.mustachejava.Code[], java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload         4
       6: aconst_null
       7: invokespecial #1                  // Method com/github/mustachejava/codes/DefaultCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: iconst_0
      12: putfield      #2                  // Field inited:Z
      15: aload_0
      16: iconst_0
      17: putfield      #3                  // Field isRecursive:Z
      20: aload_0
      21: aload_3
      22: invokevirtual #4                  // Method setCodes:([Lcom/github/mustachejava/Code;)V
      25: return

  public com.github.mustachejava.Code[] getCodes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field codes:[Lcom/github/mustachejava/Code;
       4: areturn

  public java.io.Writer run(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field codes:[Lcom/github/mustachejava/Code;
       4: ifnull        48
       7: aload_0
       8: getfield      #5                  // Field codes:[Lcom/github/mustachejava/Code;
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     48
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload         6
      34: aload_1
      35: aload_2
      36: invokeinterface #6,  3            // InterfaceMethod com/github/mustachejava/Code.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      41: astore_1
      42: iinc          5, 1
      45: goto          19
      48: aload_1
      49: areturn

  public com.github.mustachejava.util.Node invert(java.lang.String);
    Code:
       0: aload_0
       1: new           #7                  // class com/github/mustachejava/util/Node
       4: dup
       5: invokespecial #8                  // Method com/github/mustachejava/util/Node."<init>":()V
       8: aload_1
       9: new           #9                  // class java/util/concurrent/atomic/AtomicInteger
      12: dup
      13: iconst_0
      14: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      17: invokevirtual #11                 // Method invert:(Lcom/github/mustachejava/util/Node;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;)Lcom/github/mustachejava/util/Node;
      20: areturn

  public void setCodes(com.github.mustachejava.Code[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field codes:[Lcom/github/mustachejava/Code;
       5: return

  public java.io.Writer execute(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aload_2
       1: instanceof    #12                 // class com/github/mustachejava/util/InternalArrayList
       4: ifne          16
       7: new           #12                 // class com/github/mustachejava/util/InternalArrayList
      10: dup
      11: aload_2
      12: invokespecial #13                 // Method com/github/mustachejava/util/InternalArrayList."<init>":(Ljava/util/Collection;)V
      15: astore_2
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokespecial #14                 // Method com/github/mustachejava/codes/DefaultCode.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      22: areturn

  public void identity(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method runIdentity:(Ljava/io/Writer;)V
       5: return

  public synchronized void init();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inited:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #2                  // Field inited:Z
      12: aload_0
      13: invokespecial #16                 // Method com/github/mustachejava/codes/DefaultCode.init:()V
      16: return

  public boolean isRecursive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isRecursive:Z
       4: ireturn

  public void setRecursive();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field isRecursive:Z
       5: return
}
