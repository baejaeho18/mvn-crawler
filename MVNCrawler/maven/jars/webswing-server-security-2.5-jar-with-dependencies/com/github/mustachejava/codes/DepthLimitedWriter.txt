Compiled from "DepthLimitedWriter.java"
class com.github.mustachejava.codes.DepthLimitedWriter extends java.io.FilterWriter {
  private java.util.concurrent.atomic.AtomicInteger depth;

  public com.github.mustachejava.codes.DepthLimitedWriter(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       9: dup
      10: iconst_0
      11: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      14: putfield      #4                  // Field depth:Ljava/util/concurrent/atomic/AtomicInteger;
      17: return

  public int incr();
    Code:
       0: aload_0
       1: getfield      #4                  // Field depth:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: ireturn

  public int decr();
    Code:
       0: aload_0
       1: getfield      #4                  // Field depth:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ireturn
}
