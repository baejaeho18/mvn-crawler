Compiled from "NotIterableCode.java"
public class com.github.mustachejava.codes.NotIterableCode extends com.github.mustachejava.codes.IterableCode {
  public com.github.mustachejava.codes.NotIterableCode(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, com.github.mustachejava.Mustache, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: ldc           #1                  // String ^
       8: invokespecial #2                  // Method com/github/mustachejava/codes/IterableCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.io.Writer execute(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #3                  // Method get:(Ljava/util/List;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_3
       9: aload_2
      10: invokevirtual #4                  // Method handle:(Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      13: astore_1
      14: aload_0
      15: aload_1
      16: invokevirtual #5                  // Method appendText:(Ljava/io/Writer;)Ljava/io/Writer;
      19: pop
      20: aload_1
      21: areturn

  protected java.io.Writer handle(java.io.Writer, java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_2
       1: instanceof    #6                  // class java/util/concurrent/Callable
       4: ifeq          21
       7: aload_0
       8: aload_1
       9: aload_2
      10: checkcast     #6                  // class java/util/concurrent/Callable
      13: aload_3
      14: invokevirtual #7                  // Method handleCallable:(Ljava/io/Writer;Ljava/util/concurrent/Callable;Ljava/util/List;)Ljava/io/Writer;
      17: astore_1
      18: goto          29
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokevirtual #8                  // Method execute:(Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      28: astore_1
      29: aload_1
      30: areturn

  protected java.io.Writer execute(java.io.Writer, java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field oh:Lcom/github/mustachejava/ObjectHandler;
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #10,  5           // InterfaceMethod com/github/mustachejava/ObjectHandler.falsey:(Lcom/github/mustachejava/Iteration;Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      13: areturn

  public java.io.Writer next(java.io.Writer, java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #11                 // Method run:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
       6: areturn
}
