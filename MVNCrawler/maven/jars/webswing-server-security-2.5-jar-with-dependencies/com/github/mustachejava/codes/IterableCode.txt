Compiled from "IterableCode.java"
public class com.github.mustachejava.codes.IterableCode extends com.github.mustachejava.codes.DefaultCode implements com.github.mustachejava.Iteration {
  private final java.util.concurrent.ExecutorService les;

  public com.github.mustachejava.codes.IterableCode(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, com.github.mustachejava.Mustache, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method com/github/mustachejava/codes/DefaultCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      11: aload_0
      12: aload_2
      13: invokevirtual #2                  // Method com/github/mustachejava/DefaultMustacheFactory.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      16: putfield      #3                  // Field les:Ljava/util/concurrent/ExecutorService;
      19: return

  public com.github.mustachejava.codes.IterableCode(com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, com.github.mustachejava.Mustache, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: ldc           #4                  // String #
       8: invokespecial #5                  // Method "<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Lcom/github/mustachejava/Mustache;Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.io.Writer execute(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #6                  // Method get:(Ljava/util/List;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_3
       9: aload_2
      10: invokevirtual #7                  // Method handle:(Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      13: astore_1
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method appendText:(Ljava/io/Writer;)Ljava/io/Writer;
      19: pop
      20: aload_1
      21: areturn

  protected java.io.Writer handle(java.io.Writer, java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_2
       1: ifnull        54
       4: aload_2
       5: instanceof    #9                  // class java/util/function/Function
       8: ifeq          25
      11: aload_0
      12: aload_1
      13: aload_2
      14: checkcast     #9                  // class java/util/function/Function
      17: aload_3
      18: invokevirtual #10                 // Method handleFunction:(Ljava/io/Writer;Ljava/util/function/Function;Ljava/util/List;)Ljava/io/Writer;
      21: astore_1
      22: goto          54
      25: aload_2
      26: instanceof    #11                 // class java/util/concurrent/Callable
      29: ifeq          46
      32: aload_0
      33: aload_1
      34: aload_2
      35: checkcast     #11                 // class java/util/concurrent/Callable
      38: aload_3
      39: invokevirtual #12                 // Method handleCallable:(Ljava/io/Writer;Ljava/util/concurrent/Callable;Ljava/util/List;)Ljava/io/Writer;
      42: astore_1
      43: goto          54
      46: aload_0
      47: aload_1
      48: aload_2
      49: aload_3
      50: invokevirtual #13                 // Method execute:(Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      53: astore_1
      54: aload_1
      55: areturn

  protected java.io.Writer handleCallable(java.io.Writer, java.util.concurrent.Callable, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field les:Ljava/util/concurrent/ExecutorService;
       4: ifnonnull     35
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      15: aload_3
      16: invokevirtual #13                 // Method execute:(Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      19: astore_1
      20: goto          104
      23: astore        4
      25: new           #16                 // class com/github/mustachejava/MustacheException
      28: dup
      29: aload         4
      31: invokespecial #17                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/Throwable;)V
      34: athrow
      35: aload_1
      36: invokevirtual #18                 // Method java/io/Writer.flush:()V
      39: goto          56
      42: astore        4
      44: new           #16                 // class com/github/mustachejava/MustacheException
      47: dup
      48: ldc           #20                 // String Failed to flush writer
      50: aload         4
      52: invokespecial #21                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: aload_1
      57: astore        4
      59: new           #22                 // class com/github/mustachejava/util/LatchedWriter
      62: dup
      63: aload_1
      64: invokespecial #23                 // Method com/github/mustachejava/util/LatchedWriter."<init>":(Ljava/io/Writer;)V
      67: astore        5
      69: aload         5
      71: astore_1
      72: new           #24                 // class com/github/mustachejava/util/InternalArrayList
      75: dup
      76: aload_3
      77: invokespecial #25                 // Method com/github/mustachejava/util/InternalArrayList."<init>":(Ljava/util/Collection;)V
      80: astore        6
      82: aload_0
      83: getfield      #3                  // Field les:Ljava/util/concurrent/ExecutorService;
      86: aload_0
      87: aload_2
      88: aload         4
      90: aload         6
      92: aload         5
      94: invokedynamic #26,  0             // InvokeDynamic #0:run:(Lcom/github/mustachejava/codes/IterableCode;Ljava/util/concurrent/Callable;Ljava/io/Writer;Ljava/util/List;Lcom/github/mustachejava/util/LatchedWriter;)Ljava/lang/Runnable;
      99: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     104: aload_1
     105: areturn
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Exception
          35    39    42   Class java/io/IOException

  protected java.io.Writer handleFunction(java.io.Writer, java.util.function.Function, java.util.List<java.lang.Object>);
    Code:
       0: new           #28                 // class java/io/StringWriter
       3: dup
       4: invokespecial #29                 // Method java/io/StringWriter."<init>":()V
       7: astore        4
       9: aload_0
      10: aload         4
      12: invokevirtual #30                 // Method runIdentity:(Ljava/io/Writer;)V
      15: aload_2
      16: instanceof    #31                 // class com/github/mustachejava/TemplateFunction
      19: ifeq          59
      22: aload_2
      23: aload         4
      25: invokevirtual #32                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      28: invokeinterface #33,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: astore        5
      35: aload         5
      37: ifnull        56
      40: aload         5
      42: invokevirtual #34                 // Method java/lang/Object.toString:()Ljava/lang/String;
      45: astore        6
      47: aload_0
      48: aload_1
      49: aload         6
      51: aload_3
      52: invokevirtual #35                 // Method writeTemplate:(Ljava/io/Writer;Ljava/lang/String;Ljava/util/List;)Ljava/io/Writer;
      55: astore_1
      56: goto          127
      59: new           #28                 // class java/io/StringWriter
      62: dup
      63: invokespecial #29                 // Method java/io/StringWriter."<init>":()V
      66: astore        5
      68: aload_0
      69: aload         5
      71: aload         4
      73: invokevirtual #32                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      76: aload_3
      77: invokevirtual #35                 // Method writeTemplate:(Ljava/io/Writer;Ljava/lang/String;Ljava/util/List;)Ljava/io/Writer;
      80: invokevirtual #36                 // Method java/io/Writer.close:()V
      83: aload_2
      84: aload         5
      86: invokevirtual #32                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      89: invokeinterface #33,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      94: astore        6
      96: aload         6
      98: ifnull        110
     101: aload_1
     102: aload         6
     104: invokevirtual #34                 // Method java/lang/Object.toString:()Ljava/lang/String;
     107: invokevirtual #37                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     110: goto          127
     113: astore        5
     115: new           #16                 // class com/github/mustachejava/MustacheException
     118: dup
     119: ldc           #38                 // String Failed to write function result
     121: aload         5
     123: invokespecial #21                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     126: athrow
     127: aload_1
     128: areturn
    Exception table:
       from    to  target type
          59   110   113   Class java/io/IOException

  protected java.io.Writer writeTemplate(java.io.Writer, java.lang.String, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #39                 // Field df:Lcom/github/mustachejava/DefaultMustacheFactory;
       4: new           #40                 // class com/github/mustachejava/FragmentKey
       7: dup
       8: aload_0
       9: getfield      #41                 // Field tc:Lcom/github/mustachejava/TemplateContext;
      12: aload_2
      13: invokespecial #42                 // Method com/github/mustachejava/FragmentKey."<init>":(Lcom/github/mustachejava/TemplateContext;Ljava/lang/String;)V
      16: invokevirtual #43                 // Method com/github/mustachejava/DefaultMustacheFactory.getFragment:(Lcom/github/mustachejava/FragmentKey;)Lcom/github/mustachejava/Mustache;
      19: aload_1
      20: aload_3
      21: invokeinterface #44,  3           // InterfaceMethod com/github/mustachejava/Mustache.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      26: areturn

  protected java.io.Writer execute(java.io.Writer, java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #45                 // Field oh:Lcom/github/mustachejava/ObjectHandler;
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #46,  5           // InterfaceMethod com/github/mustachejava/ObjectHandler.iterate:(Lcom/github/mustachejava/Iteration;Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      13: areturn

  public java.io.Writer next(java.io.Writer, java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_3
       2: aload_2
       3: invokevirtual #47                 // Method addScope:(Ljava/util/List;Ljava/lang/Object;)Z
       6: istore        4
       8: aload_0
       9: aload_1
      10: aload_3
      11: invokevirtual #48                 // Method run:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      14: astore_1
      15: iload         4
      17: ifeq          35
      20: aload_3
      21: aload_3
      22: invokeinterface #49,  1           // InterfaceMethod java/util/List.size:()I
      27: iconst_1
      28: isub
      29: invokeinterface #50,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: areturn

  public com.github.mustachejava.util.Node invert(com.github.mustachejava.util.Node, java.lang.String, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_3
       1: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       4: istore        4
       6: new           #52                 // class java/util/ArrayList
       9: dup
      10: invokespecial #53                 // Method java/util/ArrayList."<init>":()V
      13: astore        5
      15: aload_0
      16: getfield      #54                 // Field mustache:Lcom/github/mustachejava/Mustache;
      19: new           #55                 // class com/github/mustachejava/util/Node
      22: dup
      23: invokespecial #56                 // Method com/github/mustachejava/util/Node."<init>":()V
      26: aload_2
      27: aload_3
      28: invokeinterface #57,  4           // InterfaceMethod com/github/mustachejava/Mustache.invert:(Lcom/github/mustachejava/util/Node;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;)Lcom/github/mustachejava/util/Node;
      33: dup
      34: astore        6
      36: ifnull        52
      39: aload         5
      41: aload         6
      43: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: goto          15
      52: aload_1
      53: aload_0
      54: getfield      #59                 // Field name:Ljava/lang/String;
      57: aload         5
      59: invokestatic  #60                 // Method com/github/mustachejava/util/NodeValue.list:(Ljava/util/List;)Lcom/github/mustachejava/util/NodeValue;
      62: invokevirtual #61                 // Method com/github/mustachejava/util/Node.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: aload_1
      68: aload_2
      69: aload_3
      70: iload         4
      72: invokevirtual #62                 // Method matchAppended:(Lcom/github/mustachejava/util/Node;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;I)Lcom/github/mustachejava/util/Node;
      75: areturn

  private void lambda$handleCallable$3(java.util.concurrent.Callable, java.io.Writer, java.util.List, com.github.mustachejava.util.LatchedWriter);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       6: astore        5
       8: aload_0
       9: aload_2
      10: aload         5
      12: aload_3
      13: invokevirtual #7                  // Method handle:(Ljava/io/Writer;Ljava/lang/Object;Ljava/util/List;)Ljava/io/Writer;
      16: astore        6
      18: aload         6
      20: instanceof    #22                 // class com/github/mustachejava/util/LatchedWriter
      23: ifeq          34
      26: aload         6
      28: checkcast     #22                 // class com/github/mustachejava/util/LatchedWriter
      31: invokevirtual #63                 // Method com/github/mustachejava/util/LatchedWriter.await:()V
      34: aload         4
      36: invokevirtual #64                 // Method com/github/mustachejava/util/LatchedWriter.done:()V
      39: goto          51
      42: astore        5
      44: aload         4
      46: aload         5
      48: invokevirtual #66                 // Method com/github/mustachejava/util/LatchedWriter.failed:(Ljava/lang/Throwable;)V
      51: return
    Exception table:
       from    to  target type
           0    39    42   Class java/lang/Throwable
}
