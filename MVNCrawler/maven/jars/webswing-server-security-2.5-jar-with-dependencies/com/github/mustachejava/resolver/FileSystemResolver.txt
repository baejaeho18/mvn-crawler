Compiled from "FileSystemResolver.java"
public class com.github.mustachejava.resolver.FileSystemResolver implements com.github.mustachejava.MustacheResolver {
  private final java.io.File fileRoot;

  public com.github.mustachejava.resolver.FileSystemResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field fileRoot:Ljava/io/File;
       9: return

  public com.github.mustachejava.resolver.FileSystemResolver(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #3                  // Method java/io/File.exists:()Z
       8: ifne          38
      11: new           #4                  // class com/github/mustachejava/MustacheException
      14: dup
      15: new           #5                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      22: aload_1
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #8                  // String  does not exist
      28: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #11                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: invokevirtual #12                 // Method java/io/File.isDirectory:()Z
      42: ifne          72
      45: new           #4                  // class com/github/mustachejava/MustacheException
      48: dup
      49: new           #5                  // class java/lang/StringBuilder
      52: dup
      53: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      56: aload_1
      57: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #13                 // String  is not a directory
      62: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #11                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: aload_1
      74: putfield      #2                  // Field fileRoot:Ljava/io/File;
      77: return

  public java.io.Reader getReader(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #2                  // Field fileRoot:Ljava/io/File;
       6: ifnonnull     20
       9: new           #14                 // class java/io/File
      12: dup
      13: aload_1
      14: invokespecial #15                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      17: goto          32
      20: new           #14                 // class java/io/File
      23: dup
      24: aload_0
      25: getfield      #2                  // Field fileRoot:Ljava/io/File;
      28: aload_1
      29: invokespecial #16                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      32: astore_3
      33: aload_3
      34: invokevirtual #3                  // Method java/io/File.exists:()Z
      37: ifeq          187
      40: aload_3
      41: invokevirtual #17                 // Method java/io/File.isFile:()Z
      44: ifeq          187
      47: aload_0
      48: getfield      #2                  // Field fileRoot:Ljava/io/File;
      51: ifnonnull     69
      54: new           #14                 // class java/io/File
      57: dup
      58: ldc           #18                 // String
      60: invokespecial #15                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      63: invokevirtual #19                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      66: goto          76
      69: aload_0
      70: getfield      #2                  // Field fileRoot:Ljava/io/File;
      73: invokevirtual #19                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      76: astore        4
      78: aload_3
      79: invokevirtual #19                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      82: astore        5
      84: aload         5
      86: invokevirtual #20                 // Method java/io/File.getParentFile:()Ljava/io/File;
      89: dup
      90: astore        5
      92: ifnull        108
      95: aload         5
      97: aload         4
      99: invokevirtual #21                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
     102: ifeq          84
     105: goto          108
     108: aload         5
     110: ifnonnull     144
     113: new           #4                  // class com/github/mustachejava/MustacheException
     116: dup
     117: new           #5                  // class java/lang/StringBuilder
     120: dup
     121: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #22                 // String File not under root:
     126: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         4
     131: invokevirtual #23                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     134: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #11                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: new           #24                 // class java/io/FileInputStream
     147: dup
     148: aload_3
     149: invokespecial #25                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
     152: astore_2
     153: goto          187
     156: astore        4
     158: new           #4                  // class com/github/mustachejava/MustacheException
     161: dup
     162: new           #5                  // class java/lang/StringBuilder
     165: dup
     166: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     169: ldc           #27                 // String Found file, could not open:
     171: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_3
     175: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     178: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: aload         4
     183: invokespecial #28                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     186: athrow
     187: aload_2
     188: ifnull        210
     191: new           #29                 // class java/io/BufferedReader
     194: dup
     195: new           #30                 // class java/io/InputStreamReader
     198: dup
     199: aload_2
     200: getstatic     #31                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     203: invokespecial #32                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
     206: invokespecial #33                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     209: areturn
     210: aconst_null
     211: areturn
    Exception table:
       from    to  target type
          47   153   156   Class java/io/IOException
}
