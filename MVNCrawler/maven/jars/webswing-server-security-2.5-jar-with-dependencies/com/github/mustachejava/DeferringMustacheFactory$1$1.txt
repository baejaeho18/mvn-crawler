Compiled from "DeferringMustacheFactory.java"
class com.github.mustachejava.DeferringMustacheFactory$1$1 extends com.github.mustachejava.codes.PartialCode {
  com.github.mustachejava.util.Wrapper deferredWrapper;

  final java.lang.Long val$divid;

  final com.github.mustachejava.DeferringMustacheFactory$1 this$1;

  com.github.mustachejava.DeferringMustacheFactory$1$1(com.github.mustachejava.DeferringMustacheFactory$1, com.github.mustachejava.TemplateContext, com.github.mustachejava.DefaultMustacheFactory, java.lang.String, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lcom/github/mustachejava/DeferringMustacheFactory$1;
       5: aload_0
       6: aload         5
       8: putfield      #2                  // Field val$divid:Ljava/lang/Long;
      11: aload_0
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokespecial #3                  // Method com/github/mustachejava/codes/PartialCode."<init>":(Lcom/github/mustachejava/TemplateContext;Lcom/github/mustachejava/DefaultMustacheFactory;Ljava/lang/String;)V
      19: return

  public java.io.Writer execute(java.io.Writer, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #4                  // Method get:(Ljava/util/List;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_2
       8: invokespecial #5                  // Method getDeferred:(Ljava/util/List;)Lcom/github/mustachejava/DeferringMustacheFactory$DeferredCallable;
      11: astore        4
      13: aload_3
      14: getstatic     #6                  // Field com/github/mustachejava/DeferringMustacheFactory.DEFERRED:Ljava/lang/Object;
      17: if_acmpne     120
      20: aload         4
      22: ifnull        120
      25: aload_0
      26: getfield      #1                  // Field this$1:Lcom/github/mustachejava/DeferringMustacheFactory$1;
      29: getfield      #7                  // Field com/github/mustachejava/DeferringMustacheFactory$1.this$0:Lcom/github/mustachejava/DeferringMustacheFactory;
      32: aload_1
      33: aload_0
      34: getfield      #2                  // Field val$divid:Ljava/lang/Long;
      37: invokevirtual #8                  // Method com/github/mustachejava/DeferringMustacheFactory.writeTarget:(Ljava/io/Writer;Ljava/lang/Long;)V
      40: aload_1
      41: aload_0
      42: getfield      #9                  // Field appended:Ljava/lang/String;
      45: invokevirtual #10                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      48: pop
      49: goto          66
      52: astore        5
      54: new           #12                 // class com/github/mustachejava/MustacheException
      57: dup
      58: ldc           #13                 // String Failed to write
      60: aload         5
      62: invokespecial #14                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      65: athrow
      66: new           #15                 // class com/github/mustachejava/util/InternalArrayList
      69: dup
      70: aload_2
      71: invokespecial #16                 // Method com/github/mustachejava/util/InternalArrayList."<init>":(Ljava/util/Collection;)V
      74: astore        5
      76: aload         4
      78: new           #17                 // class com/github/mustachejava/DeferringMustacheFactory$Deferral
      81: dup
      82: aload_0
      83: getfield      #2                  // Field val$divid:Ljava/lang/Long;
      86: invokevirtual #18                 // Method java/lang/Long.longValue:()J
      89: aload_0
      90: getfield      #1                  // Field this$1:Lcom/github/mustachejava/DeferringMustacheFactory$1;
      93: getfield      #7                  // Field com/github/mustachejava/DeferringMustacheFactory$1.this$0:Lcom/github/mustachejava/DeferringMustacheFactory;
      96: invokevirtual #19                 // Method com/github/mustachejava/DeferringMustacheFactory.getExecutorService:()Ljava/util/concurrent/ExecutorService;
      99: aload_0
     100: aload         5
     102: invokedynamic #20,  0             // InvokeDynamic #0:call:(Lcom/github/mustachejava/DeferringMustacheFactory$1$1;Ljava/util/List;)Ljava/util/concurrent/Callable;
     107: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     112: invokespecial #22                 // Method com/github/mustachejava/DeferringMustacheFactory$Deferral."<init>":(JLjava/util/concurrent/Future;)V
     115: invokevirtual #23                 // Method com/github/mustachejava/DeferringMustacheFactory$DeferredCallable.add:(Lcom/github/mustachejava/DeferringMustacheFactory$Deferral;)V
     118: aload_1
     119: areturn
     120: aload_0
     121: aload_0
     122: getfield      #24                 // Field partial:Lcom/github/mustachejava/Mustache;
     125: aload_1
     126: aload_2
     127: invokeinterface #25,  3           // InterfaceMethod com/github/mustachejava/Mustache.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
     132: invokevirtual #26                 // Method appendText:(Ljava/io/Writer;)Ljava/io/Writer;
     135: areturn
    Exception table:
       from    to  target type
          25    49    52   Class java/io/IOException

  private com.github.mustachejava.DeferringMustacheFactory$DeferredCallable getDeferred(java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field deferredWrapper:Lcom/github/mustachejava/util/Wrapper;
       4: ifnonnull     29
       7: aload_0
       8: aload_0
       9: getfield      #1                  // Field this$1:Lcom/github/mustachejava/DeferringMustacheFactory$1;
      12: getfield      #7                  // Field com/github/mustachejava/DeferringMustacheFactory$1.this$0:Lcom/github/mustachejava/DeferringMustacheFactory;
      15: invokevirtual #28                 // Method com/github/mustachejava/DeferringMustacheFactory.getObjectHandler:()Lcom/github/mustachejava/ObjectHandler;
      18: ldc           #29                 // String deferred
      20: aload_1
      21: invokeinterface #30,  3           // InterfaceMethod com/github/mustachejava/ObjectHandler.find:(Ljava/lang/String;Ljava/util/List;)Lcom/github/mustachejava/util/Wrapper;
      26: putfield      #27                 // Field deferredWrapper:Lcom/github/mustachejava/util/Wrapper;
      29: aload_0
      30: getfield      #27                 // Field deferredWrapper:Lcom/github/mustachejava/util/Wrapper;
      33: aload_1
      34: invokeinterface #31,  2           // InterfaceMethod com/github/mustachejava/util/Wrapper.call:(Ljava/util/List;)Ljava/lang/Object;
      39: checkcast     #32                 // class com/github/mustachejava/DeferringMustacheFactory$DeferredCallable
      42: areturn
      43: astore_2
      44: aload_0
      45: aconst_null
      46: putfield      #27                 // Field deferredWrapper:Lcom/github/mustachejava/util/Wrapper;
      49: aload_0
      50: aload_1
      51: invokespecial #5                  // Method getDeferred:(Ljava/util/List;)Lcom/github/mustachejava/DeferringMustacheFactory$DeferredCallable;
      54: areturn
    Exception table:
       from    to  target type
           0    42    43   Class com/github/mustachejava/util/GuardException

  private java.lang.Object lambda$execute$6(java.util.List) throws java.lang.Exception;
    Code:
       0: new           #34                 // class java/io/StringWriter
       3: dup
       4: invokespecial #35                 // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #24                 // Field partial:Lcom/github/mustachejava/Mustache;
      12: aload_2
      13: aload_1
      14: invokeinterface #25,  3           // InterfaceMethod com/github/mustachejava/Mustache.execute:(Ljava/io/Writer;Ljava/util/List;)Ljava/io/Writer;
      19: invokevirtual #36                 // Method java/io/Writer.close:()V
      22: aload_2
      23: invokevirtual #37                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      26: areturn
      27: astore_2
      28: new           #12                 // class com/github/mustachejava/MustacheException
      31: dup
      32: ldc           #38                 // String Failed to writer
      34: aload_2
      35: invokespecial #14                 // Method com/github/mustachejava/MustacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/io/IOException
}
