Compiled from "ContainerDeserializerBase.java"
public abstract class com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase<T> extends com.fasterxml.jackson.databind.deser.std.StdDeserializer<T> {
  protected com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/fasterxml/jackson/databind/deser/std/StdDeserializer."<init>":(Lcom/fasterxml/jackson/databind/JavaType;)V
       5: return

  protected com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/fasterxml/jackson/databind/deser/std/StdDeserializer."<init>":(Ljava/lang/Class;)V
       5: return

  public com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getContentDeserializer:()Lcom/fasterxml/jackson/databind/JsonDeserializer;
       4: astore_2
       5: aload_2
       6: ifnonnull     56
       9: new           #4                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #5                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #7                  // String Can not handle managed/back reference \'
      22: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #9                  // String \': type: container deserializer of type
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      41: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #12                 // String  returned null for \'getContentDeserializer()\'
      46: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_2
      57: aload_1
      58: invokevirtual #15                 // Method com/fasterxml/jackson/databind/JsonDeserializer.findBackReference:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;
      61: areturn

  public abstract com.fasterxml.jackson.databind.JavaType getContentType();

  public abstract com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object> getContentDeserializer();

  protected void wrapAndThrow(java.lang.Throwable, java.lang.Object, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #16                 // class java/lang/reflect/InvocationTargetException
       4: ifeq          22
       7: aload_1
       8: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      11: ifnull        22
      14: aload_1
      15: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      18: astore_1
      19: goto          0
      22: aload_1
      23: instanceof    #18                 // class java/lang/Error
      26: ifeq          34
      29: aload_1
      30: checkcast     #18                 // class java/lang/Error
      33: athrow
      34: aload_1
      35: instanceof    #19                 // class java/io/IOException
      38: ifeq          53
      41: aload_1
      42: instanceof    #20                 // class com/fasterxml/jackson/databind/JsonMappingException
      45: ifne          53
      48: aload_1
      49: checkcast     #19                 // class java/io/IOException
      52: athrow
      53: aload_1
      54: aload_2
      55: aload_3
      56: invokestatic  #21                 // Method com/fasterxml/jackson/databind/JsonMappingException.wrapWithPath:(Ljava/lang/Throwable;Ljava/lang/Object;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonMappingException;
      59: athrow
}
