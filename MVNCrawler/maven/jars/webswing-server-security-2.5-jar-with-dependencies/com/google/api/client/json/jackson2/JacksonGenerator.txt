Compiled from "JacksonGenerator.java"
final class com.google.api.client.json.jackson2.JacksonGenerator extends com.google.api.client.json.JsonGenerator {
  private final com.fasterxml.jackson.core.JsonGenerator generator;

  private final com.google.api.client.json.jackson2.JacksonFactory factory;

  public com.google.api.client.json.jackson2.JacksonFactory getFactory();
    Code:
       0: aload_0
       1: getfield      #1                  // Field factory:Lcom/google/api/client/json/jackson2/JacksonFactory;
       4: areturn

  com.google.api.client.json.jackson2.JacksonGenerator(com.google.api.client.json.jackson2.JacksonFactory, com.fasterxml.jackson.core.JsonGenerator);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/api/client/json/JsonGenerator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field factory:Lcom/google/api/client/json/jackson2/JacksonFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
      14: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonGenerator.flush:()V
       7: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonGenerator.close:()V
       7: return

  public void writeBoolean(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: iload_1
       5: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
       8: return

  public void writeEndArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #7                  // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
       7: return

  public void writeEndObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       7: return

  public void writeFieldName(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
       8: return

  public void writeNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
       7: return

  public void writeNumber(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: iload_1
       5: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V
       8: return

  public void writeNumber(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: lload_1
       5: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
       8: return

  public void writeNumber(java.math.BigInteger) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #13                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
       8: return

  public void writeNumber(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: dload_1
       5: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
       8: return

  public void writeNumber(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: fload_1
       5: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V
       8: return

  public void writeNumber(java.math.BigDecimal) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #16                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V
       8: return

  public void writeNumber(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #17                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V
       8: return

  public void writeStartArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #18                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
       7: return

  public void writeStartObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #19                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       7: return

  public void writeString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #20                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
       8: return

  public void enablePrettyPrint() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field generator:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #21                 // Method com/fasterxml/jackson/core/JsonGenerator.useDefaultPrettyPrinter:()Lcom/fasterxml/jackson/core/JsonGenerator;
       7: pop
       8: return

  public com.google.api.client.json.JsonFactory getFactory();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getFactory:()Lcom/google/api/client/json/jackson2/JacksonFactory;
       4: areturn
}
