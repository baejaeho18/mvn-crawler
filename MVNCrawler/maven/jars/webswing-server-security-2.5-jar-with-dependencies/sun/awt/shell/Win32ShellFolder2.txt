Compiled from "Win32ShellFolder2.java"
final class sun.awt.shell.Win32ShellFolder2 extends sun.awt.shell.ShellFolder {
  private static final boolean is98;

  public static final int DESKTOP;

  public static final int INTERNET;

  public static final int PROGRAMS;

  public static final int CONTROLS;

  public static final int PRINTERS;

  public static final int PERSONAL;

  public static final int FAVORITES;

  public static final int STARTUP;

  public static final int RECENT;

  public static final int SENDTO;

  public static final int BITBUCKET;

  public static final int STARTMENU;

  public static final int DESKTOPDIRECTORY;

  public static final int DRIVES;

  public static final int NETWORK;

  public static final int NETHOOD;

  public static final int FONTS;

  public static final int TEMPLATES;

  public static final int COMMON_STARTMENU;

  public static final int COMMON_PROGRAMS;

  public static final int COMMON_STARTUP;

  public static final int COMMON_DESKTOPDIRECTORY;

  public static final int APPDATA;

  public static final int PRINTHOOD;

  public static final int ALTSTARTUP;

  public static final int COMMON_ALTSTARTUP;

  public static final int COMMON_FAVORITES;

  public static final int INTERNET_CACHE;

  public static final int COOKIES;

  public static final int HISTORY;

  public static final int ATTRIB_CANCOPY;

  public static final int ATTRIB_CANMOVE;

  public static final int ATTRIB_CANLINK;

  public static final int ATTRIB_CANRENAME;

  public static final int ATTRIB_CANDELETE;

  public static final int ATTRIB_HASPROPSHEET;

  public static final int ATTRIB_DROPTARGET;

  public static final int ATTRIB_LINK;

  public static final int ATTRIB_SHARE;

  public static final int ATTRIB_READONLY;

  public static final int ATTRIB_GHOSTED;

  public static final int ATTRIB_HIDDEN;

  public static final int ATTRIB_FILESYSANCESTOR;

  public static final int ATTRIB_FOLDER;

  public static final int ATTRIB_FILESYSTEM;

  public static final int ATTRIB_HASSUBFOLDER;

  public static final int ATTRIB_VALIDATE;

  public static final int ATTRIB_REMOVABLE;

  public static final int ATTRIB_COMPRESSED;

  public static final int ATTRIB_BROWSABLE;

  public static final int ATTRIB_NONENUMERATED;

  public static final int ATTRIB_NEWCONTENT;

  public static final int SHGDN_NORMAL;

  public static final int SHGDN_INFOLDER;

  public static final int SHGDN_INCLUDE_NONFILESYS;

  public static final int SHGDN_FORADDRESSBAR;

  public static final int SHGDN_FORPARSING;

  sun.awt.shell.Win32ShellFolder2$FolderDisposer disposer;

  private long pIShellIcon;

  private java.lang.String folderType;

  private java.lang.String displayName;

  private java.awt.Image smallIcon;

  private java.awt.Image largeIcon;

  private java.lang.Boolean isDir;

  private boolean isPersonal;

  private volatile java.lang.Boolean cachedIsFileSystem;

  private volatile java.lang.Boolean cachedIsLink;

  private static java.util.Map smallSystemImages;

  private static java.util.Map largeSystemImages;

  private static java.util.Map smallLinkedSystemImages;

  private static java.util.Map largeLinkedSystemImages;

  private java.util.List topFolderList;

  private static final int LVCFMT_LEFT;

  private static final int LVCFMT_RIGHT;

  private static final int LVCFMT_CENTER;

  private static native void initIDs();

  private void setIShellFolder(long);
    Code:
       0: aload_0
       1: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
       4: lload_1
       5: putfield      #593                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.pIShellFolder:J
       8: return

  private void setRelativePIDL(long);
    Code:
       0: aload_0
       1: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
       4: lload_1
       5: putfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
       8: return

  private static java.lang.String composePathForCsidl(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #659                // Method getFileSystemPath:(I)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     34
       9: new           #378                // class java/lang/StringBuilder
      12: dup
      13: invokespecial #609                // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #10                 // String ShellFolder: 0x
      18: invokevirtual #611                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_0
      22: invokestatic  #602                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      25: invokevirtual #611                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #610                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: goto          35
      34: aload_1
      35: areturn

  sun.awt.shell.Win32ShellFolder2(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: iload_1
       3: invokestatic  #658                // Method composePathForCsidl:(I)Ljava/lang/String;
       6: invokespecial #619                // Method sun/awt/shell/ShellFolder."<init>":(Lsun/awt/shell/ShellFolder;Ljava/lang/String;)V
       9: aload_0
      10: new           #402                // class sun/awt/shell/Win32ShellFolder2$FolderDisposer
      13: dup
      14: invokespecial #692                // Method sun/awt/shell/Win32ShellFolder2$FolderDisposer."<init>":()V
      17: putfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      20: aload_0
      21: ldc2_w        #361                // long -1l
      24: putfield      #575                // Field pIShellIcon:J
      27: aload_0
      28: aconst_null
      29: putfield      #584                // Field folderType:Ljava/lang/String;
      32: aload_0
      33: aconst_null
      34: putfield      #583                // Field displayName:Ljava/lang/String;
      37: aload_0
      38: aconst_null
      39: putfield      #579                // Field smallIcon:Ljava/awt/Image;
      42: aload_0
      43: aconst_null
      44: putfield      #578                // Field largeIcon:Ljava/awt/Image;
      47: aload_0
      48: aconst_null
      49: putfield      #582                // Field isDir:Ljava/lang/Boolean;
      52: aload_0
      53: aconst_null
      54: putfield      #585                // Field topFolderList:Ljava/util/List;
      57: new           #383                // class sun/awt/shell/Win32ShellFolder2$1
      60: dup
      61: aload_0
      62: iload_1
      63: invokespecial #674                // Method sun/awt/shell/Win32ShellFolder2$1."<init>":(Lsun/awt/shell/Win32ShellFolder2;I)V
      66: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      69: pop
      70: aload_0
      71: aload_0
      72: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      75: invokestatic  #698                // Method sun/java2d/Disposer.addRecord:(Ljava/lang/Object;Lsun/java2d/DisposerRecord;)V
      78: return

  sun.awt.shell.Win32ShellFolder2(sun.awt.shell.Win32ShellFolder2, long, long, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload         6
       4: ifnull        12
       7: aload         6
       9: goto          14
      12: ldc           #9                  // String ShellFolder:
      14: invokespecial #619                // Method sun/awt/shell/ShellFolder."<init>":(Lsun/awt/shell/ShellFolder;Ljava/lang/String;)V
      17: aload_0
      18: new           #402                // class sun/awt/shell/Win32ShellFolder2$FolderDisposer
      21: dup
      22: invokespecial #692                // Method sun/awt/shell/Win32ShellFolder2$FolderDisposer."<init>":()V
      25: putfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      28: aload_0
      29: ldc2_w        #361                // long -1l
      32: putfield      #575                // Field pIShellIcon:J
      35: aload_0
      36: aconst_null
      37: putfield      #584                // Field folderType:Ljava/lang/String;
      40: aload_0
      41: aconst_null
      42: putfield      #583                // Field displayName:Ljava/lang/String;
      45: aload_0
      46: aconst_null
      47: putfield      #579                // Field smallIcon:Ljava/awt/Image;
      50: aload_0
      51: aconst_null
      52: putfield      #578                // Field largeIcon:Ljava/awt/Image;
      55: aload_0
      56: aconst_null
      57: putfield      #582                // Field isDir:Ljava/lang/Boolean;
      60: aload_0
      61: aconst_null
      62: putfield      #585                // Field topFolderList:Ljava/util/List;
      65: aload_0
      66: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      69: lload_2
      70: putfield      #593                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.pIShellFolder:J
      73: aload_0
      74: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      77: lload         4
      79: putfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
      82: aload_0
      83: aload_0
      84: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      87: invokestatic  #698                // Method sun/java2d/Disposer.addRecord:(Ljava/lang/Object;Lsun/java2d/DisposerRecord;)V
      90: return

  sun.awt.shell.Win32ShellFolder2(sun.awt.shell.Win32ShellFolder2, long);
    Code:
       0: aload_0
       1: aload_1
       2: new           #393                // class sun/awt/shell/Win32ShellFolder2$2
       5: dup
       6: aload_1
       7: lload_2
       8: invokespecial #684                // Method sun/awt/shell/Win32ShellFolder2$2."<init>":(Lsun/awt/shell/Win32ShellFolder2;J)V
      11: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      14: checkcast     #377                // class java/lang/String
      17: invokespecial #619                // Method sun/awt/shell/ShellFolder."<init>":(Lsun/awt/shell/ShellFolder;Ljava/lang/String;)V
      20: aload_0
      21: new           #402                // class sun/awt/shell/Win32ShellFolder2$FolderDisposer
      24: dup
      25: invokespecial #692                // Method sun/awt/shell/Win32ShellFolder2$FolderDisposer."<init>":()V
      28: putfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      31: aload_0
      32: ldc2_w        #361                // long -1l
      35: putfield      #575                // Field pIShellIcon:J
      38: aload_0
      39: aconst_null
      40: putfield      #584                // Field folderType:Ljava/lang/String;
      43: aload_0
      44: aconst_null
      45: putfield      #583                // Field displayName:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #579                // Field smallIcon:Ljava/awt/Image;
      53: aload_0
      54: aconst_null
      55: putfield      #578                // Field largeIcon:Ljava/awt/Image;
      58: aload_0
      59: aconst_null
      60: putfield      #582                // Field isDir:Ljava/lang/Boolean;
      63: aload_0
      64: aconst_null
      65: putfield      #585                // Field topFolderList:Ljava/util/List;
      68: aload_0
      69: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      72: lload_2
      73: putfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
      76: aload_0
      77: invokevirtual #656                // Method getAbsolutePath:()Ljava/lang/String;
      80: astore        4
      82: aload_0
      83: aload_0
      84: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      87: invokestatic  #698                // Method sun/java2d/Disposer.addRecord:(Ljava/lang/Object;Lsun/java2d/DisposerRecord;)V
      90: return

  private native void initDesktop();

  private native void initSpecial(long, int);

  public void setIsPersonal();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #577                // Field isPersonal:Z
       5: return

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #394                // class sun/awt/shell/Win32ShellFolder2$3
       3: dup
       4: aload_0
       5: invokespecial #685                // Method sun/awt/shell/Win32ShellFolder2$3."<init>":(Lsun/awt/shell/Win32ShellFolder2;)V
       8: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      11: areturn

  protected void dispose();
    Code:
       0: aload_0
       1: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
       4: invokevirtual #693                // Method sun/awt/shell/Win32ShellFolder2$FolderDisposer.dispose:()V
       7: return

  static native long getNextPIDLEntry(long);

  static native long copyFirstPIDLEntry(long);

  private static native long combinePIDLs(long, long);

  static native void releasePIDL(long);

  private static native void releaseIShellFolder(long);

  public long getIShellFolder();
    Code:
       0: aload_0
       1: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
       4: getfield      #593                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.pIShellFolder:J
       7: lconst_0
       8: lcmp
       9: ifne          36
      12: aload_0
      13: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      16: new           #395                // class sun/awt/shell/Win32ShellFolder2$4
      19: dup
      20: aload_0
      21: invokespecial #686                // Method sun/awt/shell/Win32ShellFolder2$4."<init>":(Lsun/awt/shell/Win32ShellFolder2;)V
      24: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      27: checkcast     #375                // class java/lang/Long
      30: invokevirtual #604                // Method java/lang/Long.longValue:()J
      33: putfield      #593                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.pIShellFolder:J
      36: aload_0
      37: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      40: getfield      #593                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.pIShellFolder:J
      43: lreturn

  public long getParentIShellFolder();
    Code:
       0: aload_0
       1: invokevirtual #652                // Method getParentFile:()Ljava/io/File;
       4: checkcast     #382                // class sun/awt/shell/Win32ShellFolder2
       7: astore_1
       8: aload_1
       9: ifnonnull     17
      12: aload_0
      13: invokevirtual #622                // Method getIShellFolder:()J
      16: lreturn
      17: aload_1
      18: invokevirtual #622                // Method getIShellFolder:()J
      21: lreturn

  public long getRelativePIDL();
    Code:
       0: aload_0
       1: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
       4: getfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
       7: lconst_0
       8: lcmp
       9: ifne          22
      12: new           #373                // class java/lang/InternalError
      15: dup
      16: ldc           #11                 // String Should always have a relative PIDL
      18: invokespecial #603                // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      26: getfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
      29: lreturn

  private long getAbsolutePIDL();
    Code:
       0: aload_0
       1: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
       4: ifnonnull     12
       7: aload_0
       8: invokevirtual #625                // Method getRelativePIDL:()J
      11: lreturn
      12: aload_0
      13: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      16: getfield      #592                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.absolutePIDL:J
      19: lconst_0
      20: lcmp
      21: ifne          48
      24: aload_0
      25: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      28: aload_0
      29: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
      32: checkcast     #382                // class sun/awt/shell/Win32ShellFolder2
      35: invokespecial #620                // Method getAbsolutePIDL:()J
      38: aload_0
      39: invokevirtual #625                // Method getRelativePIDL:()J
      42: invokestatic  #642                // Method combinePIDLs:(JJ)J
      45: putfield      #592                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.absolutePIDL:J
      48: aload_0
      49: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
      52: getfield      #592                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.absolutePIDL:J
      55: lreturn

  public sun.awt.shell.Win32ShellFolder2 getDesktop();
    Code:
       0: invokestatic  #695                // Method sun/awt/shell/Win32ShellFolderManager2.getDesktop:()Lsun/awt/shell/Win32ShellFolder2;
       3: areturn

  public long getDesktopIShellFolder();
    Code:
       0: aload_0
       1: invokevirtual #669                // Method getDesktop:()Lsun/awt/shell/Win32ShellFolder2;
       4: invokevirtual #622                // Method getIShellFolder:()J
       7: lreturn

  private static boolean pathsEqual(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #607                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       5: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #382                // class sun/awt/shell/Win32ShellFolder2
       8: ifne          39
      11: aload_1
      12: instanceof    #368                // class java/io/File
      15: ifne          24
      18: aload_0
      19: aload_1
      20: invokespecial #618                // Method sun/awt/shell/ShellFolder.equals:(Ljava/lang/Object;)Z
      23: ireturn
      24: aload_0
      25: invokevirtual #657                // Method getPath:()Ljava/lang/String;
      28: aload_1
      29: checkcast     #368                // class java/io/File
      32: invokevirtual #599                // Method java/io/File.getPath:()Ljava/lang/String;
      35: invokestatic  #672                // Method pathsEqual:(Ljava/lang/String;Ljava/lang/String;)Z
      38: ireturn
      39: aload_1
      40: checkcast     #382                // class sun/awt/shell/Win32ShellFolder2
      43: astore_2
      44: aload_0
      45: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
      48: ifnonnull     58
      51: aload_2
      52: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
      55: ifnonnull     72
      58: aload_0
      59: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
      62: ifnull        74
      65: aload_2
      66: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
      69: ifnonnull     74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: invokevirtual #628                // Method isFileSystem:()Z
      78: ifeq          133
      81: aload_2
      82: invokevirtual #628                // Method isFileSystem:()Z
      85: ifeq          133
      88: aload_0
      89: invokevirtual #657                // Method getPath:()Ljava/lang/String;
      92: aload_2
      93: invokevirtual #657                // Method getPath:()Ljava/lang/String;
      96: invokestatic  #672                // Method pathsEqual:(Ljava/lang/String;Ljava/lang/String;)Z
      99: ifeq          131
     102: aload_0
     103: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     106: aload_2
     107: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     110: if_acmpeq     127
     113: aload_0
     114: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     117: aload_2
     118: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     121: invokevirtual #618                // Method sun/awt/shell/ShellFolder.equals:(Ljava/lang/Object;)Z
     124: ifeq          131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: ireturn
     133: aload_0
     134: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     137: ifnull        165
     140: aload_0
     141: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     144: aload_2
     145: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     148: if_acmpeq     165
     151: aload_0
     152: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     155: aload_2
     156: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
     159: invokevirtual #618                // Method sun/awt/shell/ShellFolder.equals:(Ljava/lang/Object;)Z
     162: ifeq          187
     165: aload_0
     166: invokevirtual #624                // Method getParentIShellFolder:()J
     169: aload_0
     170: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
     173: getfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
     176: aload_2
     177: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
     180: getfield      #594                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.relativePIDL:J
     183: invokestatic  #645                // Method pidlsEqual:(JJJ)Z
     186: ireturn
     187: iconst_0
     188: ireturn

  private static boolean pidlsEqual(long, long, long);
    Code:
       0: new           #396                // class sun/awt/shell/Win32ShellFolder2$5
       3: dup
       4: lload_0
       5: lload_2
       6: lload         4
       8: invokespecial #687                // Method sun/awt/shell/Win32ShellFolder2$5."<init>":(JJJ)V
      11: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      14: checkcast     #371                // class java/lang/Boolean
      17: astore        6
      19: aload         6
      21: ifnull        36
      24: aload         6
      26: invokevirtual #600                // Method java/lang/Boolean.booleanValue:()Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private static native int compareIDs(long, long, long);

  public boolean isFileSystem();
    Code:
       0: aload_0
       1: getfield      #580                // Field cachedIsFileSystem:Ljava/lang/Boolean;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: ldc           #5                  // int 1073741824
      11: invokevirtual #632                // Method hasAttribute:(I)Z
      14: invokestatic  #601                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: putfield      #580                // Field cachedIsFileSystem:Ljava/lang/Boolean;
      20: aload_0
      21: getfield      #580                // Field cachedIsFileSystem:Ljava/lang/Boolean;
      24: invokevirtual #600                // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  public boolean hasAttribute(int);
    Code:
       0: new           #397                // class sun/awt/shell/Win32ShellFolder2$6
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #688                // Method sun/awt/shell/Win32ShellFolder2$6."<init>":(Lsun/awt/shell/Win32ShellFolder2;I)V
       9: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      12: checkcast     #371                // class java/lang/Boolean
      15: astore_2
      16: aload_2
      17: ifnull        31
      20: aload_2
      21: invokevirtual #600                // Method java/lang/Boolean.booleanValue:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private static native int getAttributes0(long, long, int);

  private static java.lang.String getFileSystemPath(long, long);
    Code:
       0: new           #398                // class sun/awt/shell/Win32ShellFolder2$7
       3: dup
       4: lload_0
       5: lload_2
       6: invokespecial #689                // Method sun/awt/shell/Win32ShellFolder2$7."<init>":(JJ)V
       9: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      12: checkcast     #377                // class java/lang/String
      15: areturn

  static java.lang.String getFileSystemPath(int) throws java.io.IOException;
    Code:
       0: new           #399                // class sun/awt/shell/Win32ShellFolder2$8
       3: dup
       4: iload_0
       5: invokespecial #690                // Method sun/awt/shell/Win32ShellFolder2$8."<init>":(I)V
       8: ldc_w         #369                // class java/io/IOException
      11: invokestatic  #673                // Method invoke:(Ljava/util/concurrent/Callable;Ljava/lang/Class;)Ljava/lang/Object;
      14: checkcast     #377                // class java/lang/String
      17: areturn
      18: astore_1
      19: aconst_null
      20: areturn
    Exception table:
       from    to  target type
           0    17    18   Class java/lang/InterruptedException

  private static native java.lang.String getFileSystemPath0(int) throws java.io.IOException;

  private static boolean isNetworkRoot(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #14                 // String \\\\
       3: invokevirtual #606                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          36
       9: aload_0
      10: ldc           #13                 // String \\
      12: invokevirtual #606                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          36
      18: aload_0
      19: ldc           #7                  // String //
      21: invokevirtual #606                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifne          36
      27: aload_0
      28: ldc           #6                  // String /
      30: invokevirtual #606                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public java.io.File getParentFile();
    Code:
       0: aload_0
       1: getfield      #590                // Field parent:Lsun/awt/shell/ShellFolder;
       4: areturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #582                // Field isDir:Ljava/lang/Boolean;
       4: ifnonnull     97
       7: aload_0
       8: ldc           #4                  // int 536870912
      10: invokevirtual #632                // Method hasAttribute:(I)Z
      13: ifeq          51
      16: aload_0
      17: ldc           #3                  // int 134217728
      19: invokevirtual #632                // Method hasAttribute:(I)Z
      22: ifeq          41
      25: getstatic     #576                // Field is98:Z
      28: ifeq          51
      31: aload_0
      32: invokestatic  #696                // Method sun/awt/shell/Win32ShellFolderManager2.getPersonal:()Lsun/awt/shell/Win32ShellFolder2;
      35: invokevirtual #655                // Method equals:(Ljava/lang/Object;)Z
      38: ifeq          51
      41: aload_0
      42: getstatic     #574                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      45: putfield      #582                // Field isDir:Ljava/lang/Boolean;
      48: goto          97
      51: aload_0
      52: invokevirtual #629                // Method isLink:()Z
      55: ifeq          90
      58: aload_0
      59: iconst_0
      60: invokespecial #667                // Method getLinkLocation:(Z)Lsun/awt/shell/ShellFolder;
      63: astore_1
      64: aload_0
      65: aload_1
      66: ifnull        80
      69: aload_1
      70: invokevirtual #615                // Method sun/awt/shell/ShellFolder.isDirectory:()Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: invokestatic  #601                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      84: putfield      #582                // Field isDir:Ljava/lang/Boolean;
      87: goto          97
      90: aload_0
      91: getstatic     #573                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      94: putfield      #582                // Field isDir:Ljava/lang/Boolean;
      97: aload_0
      98: getfield      #582                // Field isDir:Ljava/lang/Boolean;
     101: invokevirtual #600                // Method java/lang/Boolean.booleanValue:()Z
     104: ireturn

  private long getEnumObjects(long, boolean);
    Code:
       0: aload_0
       1: getfield      #591                // Field disposer:Lsun/awt/shell/Win32ShellFolder2$FolderDisposer;
       4: getfield      #593                // Field sun/awt/shell/Win32ShellFolder2$FolderDisposer.pIShellFolder:J
       7: aload_0
       8: invokevirtual #621                // Method getDesktopIShellFolder:()J
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore        4
      22: new           #400                // class sun/awt/shell/Win32ShellFolder2$9
      25: dup
      26: aload_0
      27: iload         4
      29: iload_3
      30: invokespecial #691                // Method sun/awt/shell/Win32ShellFolder2$9."<init>":(Lsun/awt/shell/Win32ShellFolder2;ZZ)V
      33: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      36: checkcast     #375                // class java/lang/Long
      39: invokevirtual #604                // Method java/lang/Long.longValue:()J
      42: lreturn

  private native long getEnumObjects(long, boolean, boolean);

  private native long getNextChild(long);

  private native void releaseEnumObjects(long);

  private static native long bindToObject(long, long);

  public java.io.File[] listFiles(boolean);
    Code:
       0: invokestatic  #612                // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_2
       4: aload_2
       5: ifnull        16
       8: aload_2
       9: aload_0
      10: invokevirtual #657                // Method getPath:()Ljava/lang/String;
      13: invokevirtual #605                // Method java/lang/SecurityManager.checkRead:(Ljava/lang/String;)V
      16: new           #384                // class sun/awt/shell/Win32ShellFolder2$10
      19: dup
      20: aload_0
      21: iload_1
      22: invokespecial #675                // Method sun/awt/shell/Win32ShellFolder2$10."<init>":(Lsun/awt/shell/Win32ShellFolder2;Z)V
      25: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      28: checkcast     #363                // class "[Ljava/io/File;"
      31: areturn

  sun.awt.shell.Win32ShellFolder2 getChildByPath(java.lang.String);
    Code:
       0: new           #385                // class sun/awt/shell/Win32ShellFolder2$11
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #676                // Method sun/awt/shell/Win32ShellFolder2$11."<init>":(Lsun/awt/shell/Win32ShellFolder2;Ljava/lang/String;)V
       9: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      12: checkcast     #382                // class sun/awt/shell/Win32ShellFolder2
      15: areturn

  public boolean isLink();
    Code:
       0: aload_0
       1: getfield      #581                // Field cachedIsLink:Ljava/lang/Boolean;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: ldc           #1                  // int 65536
      11: invokevirtual #632                // Method hasAttribute:(I)Z
      14: invokestatic  #601                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: putfield      #581                // Field cachedIsLink:Ljava/lang/Boolean;
      20: aload_0
      21: getfield      #581                // Field cachedIsLink:Ljava/lang/Boolean;
      24: invokevirtual #600                // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  public boolean isHidden();
    Code:
       0: aload_0
       1: ldc           #2                  // int 524288
       3: invokevirtual #632                // Method hasAttribute:(I)Z
       6: ireturn

  private static native long getLinkLocation(long, long, boolean);

  public sun.awt.shell.ShellFolder getLinkLocation();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #667                // Method getLinkLocation:(Z)Lsun/awt/shell/ShellFolder;
       5: areturn

  private sun.awt.shell.ShellFolder getLinkLocation(boolean);
    Code:
       0: new           #386                // class sun/awt/shell/Win32ShellFolder2$12
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #677                // Method sun/awt/shell/Win32ShellFolder2$12."<init>":(Lsun/awt/shell/Win32ShellFolder2;Z)V
       9: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      12: checkcast     #381                // class sun/awt/shell/ShellFolder
      15: areturn

  long parseDisplayName(java.lang.String) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: new           #387                // class sun/awt/shell/Win32ShellFolder2$13
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #678                // Method sun/awt/shell/Win32ShellFolder2$13."<init>":(Lsun/awt/shell/Win32ShellFolder2;Ljava/lang/String;)V
       9: ldc_w         #369                // class java/io/IOException
      12: invokestatic  #673                // Method invoke:(Ljava/util/concurrent/Callable;Ljava/lang/Class;)Ljava/lang/Object;
      15: checkcast     #375                // class java/lang/Long
      18: invokevirtual #604                // Method java/lang/Long.longValue:()J
      21: lreturn

  private static native long parseDisplayName0(long, java.lang.String) throws java.io.IOException;

  private static native java.lang.String getDisplayNameOf(long, long, int);

  public java.lang.String getDisplayName();
    Code:
       0: aload_0
       1: getfield      #583                // Field displayName:Ljava/lang/String;
       4: ifnonnull     25
       7: aload_0
       8: new           #388                // class sun/awt/shell/Win32ShellFolder2$14
      11: dup
      12: aload_0
      13: invokespecial #679                // Method sun/awt/shell/Win32ShellFolder2$14."<init>":(Lsun/awt/shell/Win32ShellFolder2;)V
      16: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      19: checkcast     #377                // class java/lang/String
      22: putfield      #583                // Field displayName:Ljava/lang/String;
      25: aload_0
      26: getfield      #583                // Field displayName:Ljava/lang/String;
      29: areturn

  private static native java.lang.String getFolderType(long);

  public java.lang.String getFolderType();
    Code:
       0: aload_0
       1: getfield      #584                // Field folderType:Ljava/lang/String;
       4: ifnonnull     31
       7: aload_0
       8: invokespecial #620                // Method getAbsolutePIDL:()J
      11: lstore_1
      12: aload_0
      13: new           #389                // class sun/awt/shell/Win32ShellFolder2$15
      16: dup
      17: aload_0
      18: lload_1
      19: invokespecial #680                // Method sun/awt/shell/Win32ShellFolder2$15."<init>":(Lsun/awt/shell/Win32ShellFolder2;J)V
      22: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      25: checkcast     #377                // class java/lang/String
      28: putfield      #584                // Field folderType:Ljava/lang/String;
      31: aload_0
      32: getfield      #584                // Field folderType:Ljava/lang/String;
      35: areturn

  private native java.lang.String getExecutableType(java.lang.String);

  public java.lang.String getExecutableType();
    Code:
       0: aload_0
       1: invokevirtual #628                // Method isFileSystem:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: aload_0
      11: invokevirtual #656                // Method getAbsolutePath:()Ljava/lang/String;
      14: invokespecial #671                // Method getExecutableType:(Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  private static native long getIShellIcon(long);

  private static native int getIconIndex(long, long);

  private static native long getIcon(java.lang.String, boolean);

  private static native long extractIcon(long, long, boolean);

  private static native long getSystemIcon(int);

  private static native long getIconResource(java.lang.String, int, int, int, boolean);

  private static native int[] getIconBits(long, int);

  private static native void disposeIcon(long);

  static native int[] getStandardViewButton0(int);

  private long getIShellIcon();
    Code:
       0: aload_0
       1: getfield      #575                // Field pIShellIcon:J
       4: ldc2_w        #361                // long -1l
       7: lcmp
       8: ifne          22
      11: aload_0
      12: aload_0
      13: invokevirtual #622                // Method getIShellFolder:()J
      16: invokestatic  #633                // Method getIShellIcon:(J)J
      19: putfield      #575                // Field pIShellIcon:J
      22: aload_0
      23: getfield      #575                // Field pIShellIcon:J
      26: lreturn

  private static java.awt.Image makeIcon(long, boolean);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifeq          66
       6: lload_0
       7: ldc2_w        #361                // long -1l
      10: lcmp
      11: ifeq          66
      14: iload_2
      15: ifeq          23
      18: bipush        32
      20: goto          25
      23: bipush        16
      25: istore_3
      26: lload_0
      27: iload_3
      28: invokestatic  #639                // Method getIconBits:(JI)[I
      31: astore        4
      33: aload         4
      35: ifnull        66
      38: new           #367                // class java/awt/image/BufferedImage
      41: dup
      42: iload_3
      43: iload_3
      44: iconst_2
      45: invokespecial #597                // Method java/awt/image/BufferedImage."<init>":(III)V
      48: astore        5
      50: aload         5
      52: iconst_0
      53: iconst_0
      54: iload_3
      55: iload_3
      56: aload         4
      58: iconst_0
      59: iload_3
      60: invokevirtual #598                // Method java/awt/image/BufferedImage.setRGB:(IIII[III)V
      63: aload         5
      65: areturn
      66: aconst_null
      67: areturn

  public java.awt.Image getIcon(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #578                // Field largeIcon:Ljava/awt/Image;
       8: goto          15
      11: aload_0
      12: getfield      #579                // Field smallIcon:Ljava/awt/Image;
      15: astore_2
      16: aload_2
      17: ifnonnull     53
      20: new           #390                // class sun/awt/shell/Win32ShellFolder2$16
      23: dup
      24: aload_0
      25: iload_1
      26: invokespecial #681                // Method sun/awt/shell/Win32ShellFolder2$16."<init>":(Lsun/awt/shell/Win32ShellFolder2;Z)V
      29: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      32: checkcast     #365                // class java/awt/Image
      35: astore_2
      36: iload_1
      37: ifeq          48
      40: aload_0
      41: aload_2
      42: putfield      #578                // Field largeIcon:Ljava/awt/Image;
      45: goto          53
      48: aload_0
      49: aload_2
      50: putfield      #579                // Field smallIcon:Ljava/awt/Image;
      53: aload_2
      54: areturn

  static java.awt.Image getSystemIcon(sun.awt.shell.Win32ShellFolder2$SystemIcon);
    Code:
       0: aload_0
       1: invokevirtual #694                // Method sun/awt/shell/Win32ShellFolder2$SystemIcon.getIconID:()I
       4: invokestatic  #631                // Method getSystemIcon:(I)J
       7: lstore_1
       8: lload_1
       9: iconst_1
      10: invokestatic  #651                // Method makeIcon:(JZ)Ljava/awt/Image;
      13: astore_3
      14: lload_1
      15: invokestatic  #635                // Method disposeIcon:(J)V
      18: aload_3
      19: areturn

  static java.awt.Image getShell32Icon(int);
    Code:
       0: iconst_1
       1: istore_1
       2: invokestatic  #595                // Method java/awt/Toolkit.getDefaultToolkit:()Ljava/awt/Toolkit;
       5: astore_2
       6: aload_2
       7: ldc           #17                 // String win.icon.shellIconBPP
       9: invokevirtual #596                // Method java/awt/Toolkit.getDesktopProperty:(Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #377                // class java/lang/String
      15: astore_3
      16: aload_3
      17: ifnull        27
      20: aload_3
      21: ldc           #8                  // String 4
      23: invokevirtual #606                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: istore_1
      27: ldc           #16                 // String shell32.dll
      29: iload_0
      30: bipush        16
      32: bipush        16
      34: iload_1
      35: invokestatic  #665                // Method getIconResource:(Ljava/lang/String;IIIZ)J
      38: lstore        4
      40: lload         4
      42: lconst_0
      43: lcmp
      44: ifeq          63
      47: lload         4
      49: iconst_0
      50: invokestatic  #651                // Method makeIcon:(JZ)Ljava/awt/Image;
      53: astore        6
      55: lload         4
      57: invokestatic  #635                // Method disposeIcon:(J)V
      60: aload         6
      62: areturn
      63: aconst_null
      64: areturn

  public java.io.File getCanonicalFile() throws java.io.IOException;
    Code:
       0: aload_0
       1: areturn

  public boolean isSpecial();
    Code:
       0: aload_0
       1: getfield      #577                // Field isPersonal:Z
       4: ifne          22
       7: aload_0
       8: invokevirtual #628                // Method isFileSystem:()Z
      11: ifeq          22
      14: aload_0
      15: aload_0
      16: invokevirtual #669                // Method getDesktop:()Lsun/awt/shell/Win32ShellFolder2;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public int compareTo(java.io.File);
    Code:
       0: aload_1
       1: instanceof    #382                // class sun/awt/shell/Win32ShellFolder2
       4: ifne          29
       7: aload_0
       8: invokevirtual #628                // Method isFileSystem:()Z
      11: ifeq          27
      14: aload_0
      15: invokevirtual #630                // Method isSpecial:()Z
      18: ifne          27
      21: aload_0
      22: aload_1
      23: invokespecial #617                // Method sun/awt/shell/ShellFolder.compareTo:(Ljava/io/File;)I
      26: ireturn
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: aload_1
      31: checkcast     #382                // class sun/awt/shell/Win32ShellFolder2
      34: invokestatic  #697                // Method sun/awt/shell/Win32ShellFolderManager2.compareShellFolders:(Lsun/awt/shell/Win32ShellFolder2;Lsun/awt/shell/Win32ShellFolder2;)I
      37: ireturn

  public sun.awt.shell.ShellFolderColumnInfo[] getFolderColumns();
    Code:
       0: new           #391                // class sun/awt/shell/Win32ShellFolder2$17
       3: dup
       4: aload_0
       5: invokespecial #682                // Method sun/awt/shell/Win32ShellFolder2$17."<init>":(Lsun/awt/shell/Win32ShellFolder2;)V
       8: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      11: checkcast     #364                // class "[Lsun/awt/shell/ShellFolderColumnInfo;"
      14: areturn

  public java.lang.Object getFolderColumnValue(int);
    Code:
       0: new           #392                // class sun/awt/shell/Win32ShellFolder2$18
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #683                // Method sun/awt/shell/Win32ShellFolder2$18."<init>":(Lsun/awt/shell/Win32ShellFolder2;I)V
       9: invokestatic  #670                // Method invoke:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      12: areturn

  private native sun.awt.shell.ShellFolderColumnInfo[] doGetColumnInfo(long);

  private native java.lang.Object doGetColumnValue(long, long, int);

  private native int compareIDsByColumn(long, long, long, int);

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #368                // class java/io/File
       5: invokevirtual #653                // Method compareTo:(Ljava/io/File;)I
       8: ireturn

  static void access$000(long);
    Code:
       0: lload_0
       1: invokestatic  #637                // Method releaseIShellFolder:(J)V
       4: return

  static void access$100(sun.awt.shell.Win32ShellFolder2);
    Code:
       0: aload_0
       1: invokespecial #626                // Method initDesktop:()V
       4: return

  static void access$200(sun.awt.shell.Win32ShellFolder2, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #638                // Method initSpecial:(JI)V
       6: return

  static java.lang.String access$300(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #662                // Method getFileSystemPath:(JJ)Ljava/lang/String;
       5: areturn

  static long access$400(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #641                // Method bindToObject:(JJ)J
       5: lreturn

  static int access$500(long, long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lload         4
       4: invokestatic  #644                // Method compareIDs:(JJJ)I
       7: ireturn

  static int access$600(long, long, int);
    Code:
       0: lload_0
       1: lload_2
       2: iload         4
       4: invokestatic  #643                // Method getAttributes0:(JJI)I
       7: ireturn

  static long access$700(long, long, boolean);
    Code:
       0: lload_0
       1: lload_2
       2: iload         4
       4: invokestatic  #648                // Method getLinkLocation:(JJZ)J
       7: lreturn

  static java.lang.String access$800(long, long, int);
    Code:
       0: lload_0
       1: lload_2
       2: iload         4
       4: invokestatic  #663                // Method getDisplayNameOf:(JJI)Ljava/lang/String;
       7: areturn

  static java.lang.String access$900(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #660                // Method getFileSystemPath0:(I)Ljava/lang/String;
       4: areturn

  static long access$1000(sun.awt.shell.Win32ShellFolder2, long, boolean, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: invokespecial #650                // Method getEnumObjects:(JZZ)J
       8: lreturn

  static long access$1100(sun.awt.shell.Win32ShellFolder2, long, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #649                // Method getEnumObjects:(JZ)J
       6: lreturn

  static long access$1200(sun.awt.shell.Win32ShellFolder2, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #634                // Method getNextChild:(J)J
       5: lreturn

  static boolean access$1300(long, long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lload         4
       4: invokestatic  #645                // Method pidlsEqual:(JJJ)Z
       7: ireturn

  static void access$1400(sun.awt.shell.Win32ShellFolder2, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #636                // Method releaseEnumObjects:(J)V
       5: return

  static long access$1500(long, java.lang.String) throws java.io.IOException;
    Code:
       0: lload_0
       1: aload_2
       2: invokestatic  #664                // Method parseDisplayName0:(JLjava/lang/String;)J
       5: lreturn

  static java.lang.String access$1600(long);
    Code:
       0: lload_0
       1: invokestatic  #661                // Method getFolderType:(J)Ljava/lang/String;
       4: areturn

  static long access$1700(sun.awt.shell.Win32ShellFolder2);
    Code:
       0: aload_0
       1: invokespecial #623                // Method getIShellIcon:()J
       4: lreturn

  static int access$1800(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #640                // Method getIconIndex:(JJ)I
       5: ireturn

  static java.util.Map access$1900();
    Code:
       0: getstatic     #586                // Field largeLinkedSystemImages:Ljava/util/Map;
       3: areturn

  static java.util.Map access$2000();
    Code:
       0: getstatic     #588                // Field smallLinkedSystemImages:Ljava/util/Map;
       3: areturn

  static java.util.Map access$2100();
    Code:
       0: getstatic     #587                // Field largeSystemImages:Ljava/util/Map;
       3: areturn

  static java.util.Map access$2200();
    Code:
       0: getstatic     #589                // Field smallSystemImages:Ljava/util/Map;
       3: areturn

  static long access$2300(java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #666                // Method getIcon:(Ljava/lang/String;Z)J
       5: lreturn

  static java.awt.Image access$2400(long, boolean);
    Code:
       0: lload_0
       1: iload_2
       2: invokestatic  #651                // Method makeIcon:(JZ)Ljava/awt/Image;
       5: areturn

  static void access$2500(long);
    Code:
       0: lload_0
       1: invokestatic  #635                // Method disposeIcon:(J)V
       4: return

  static long access$2600(long, long, boolean);
    Code:
       0: lload_0
       1: lload_2
       2: iload         4
       4: invokestatic  #647                // Method extractIcon:(JJZ)J
       7: lreturn

  static java.awt.Image access$2701(sun.awt.shell.Win32ShellFolder2, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #616                // Method sun/awt/shell/ShellFolder.getIcon:(Z)Ljava/awt/Image;
       5: areturn

  static sun.awt.shell.ShellFolderColumnInfo[] access$2800(sun.awt.shell.Win32ShellFolder2, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #668                // Method doGetColumnInfo:(J)[Lsun/awt/shell/ShellFolderColumnInfo;
       5: areturn

  static java.lang.Object access$2900(sun.awt.shell.Win32ShellFolder2, long, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: invokespecial #654                // Method doGetColumnValue:(JJI)Ljava/lang/Object;
       8: areturn

  static int access$3100(sun.awt.shell.Win32ShellFolder2, long, long, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: iload         7
       7: invokespecial #646                // Method compareIDsByColumn:(JJJI)I
      10: ireturn

  static {};
    Code:
       0: ldc           #15                 // String os.name
       2: invokestatic  #613                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: aload_0
       7: ifnull        23
      10: aload_0
      11: ldc           #12                 // String Windows 98
      13: invokevirtual #608                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: putstatic     #576                // Field is98:Z
      27: invokestatic  #627                // Method initIDs:()V
      30: new           #380                // class java/util/HashMap
      33: dup
      34: invokespecial #614                // Method java/util/HashMap."<init>":()V
      37: putstatic     #589                // Field smallSystemImages:Ljava/util/Map;
      40: new           #380                // class java/util/HashMap
      43: dup
      44: invokespecial #614                // Method java/util/HashMap."<init>":()V
      47: putstatic     #587                // Field largeSystemImages:Ljava/util/Map;
      50: new           #380                // class java/util/HashMap
      53: dup
      54: invokespecial #614                // Method java/util/HashMap."<init>":()V
      57: putstatic     #588                // Field smallLinkedSystemImages:Ljava/util/Map;
      60: new           #380                // class java/util/HashMap
      63: dup
      64: invokespecial #614                // Method java/util/HashMap."<init>":()V
      67: putstatic     #586                // Field largeLinkedSystemImages:Ljava/util/Map;
      70: return
}
