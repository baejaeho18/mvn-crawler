Compiled from "StaticBasicParserPool.java"
public class org.opensaml.xml.parse.StaticBasicParserPool implements org.opensaml.xml.parse.ParserPool {
  private final org.slf4j.Logger log;

  private boolean initialized;

  private javax.xml.parsers.DocumentBuilderFactory builderFactory;

  private java.util.Stack<java.lang.ref.SoftReference<javax.xml.parsers.DocumentBuilder>> builderPool;

  private int maxPoolSize;

  private java.util.Map<java.lang.String, java.lang.Object> builderAttributes;

  private boolean coalescing;

  private boolean expandEntityReferences;

  private java.util.Map<java.lang.String, java.lang.Boolean> builderFeatures;

  private boolean ignoreComments;

  private boolean ignoreElementContentWhitespace;

  private boolean namespaceAware;

  private javax.xml.validation.Schema schema;

  private boolean dtdValidating;

  private boolean xincludeAware;

  private org.xml.sax.EntityResolver entityResolver;

  private org.xml.sax.ErrorHandler errorHandler;

  public org.opensaml.xml.parse.StaticBasicParserPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class org/opensaml/xml/parse/StaticBasicParserPool
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field initialized:Z
      19: aload_0
      20: iconst_5
      21: putfield      #6                  // Field maxPoolSize:I
      24: aload_0
      25: new           #7                  // class java/util/Stack
      28: dup
      29: invokespecial #8                  // Method java/util/Stack."<init>":()V
      32: putfield      #9                  // Field builderPool:Ljava/util/Stack;
      35: aload_0
      36: new           #10                 // class org/opensaml/xml/util/LazyMap
      39: dup
      40: invokespecial #11                 // Method org/opensaml/xml/util/LazyMap."<init>":()V
      43: putfield      #12                 // Field builderAttributes:Ljava/util/Map;
      46: aload_0
      47: iconst_1
      48: putfield      #13                 // Field coalescing:Z
      51: aload_0
      52: iconst_0
      53: putfield      #14                 // Field expandEntityReferences:Z
      56: aload_0
      57: aload_0
      58: invokevirtual #15                 // Method buildDefaultFeatures:()Ljava/util/Map;
      61: putfield      #16                 // Field builderFeatures:Ljava/util/Map;
      64: aload_0
      65: iconst_1
      66: putfield      #17                 // Field ignoreComments:Z
      69: aload_0
      70: iconst_1
      71: putfield      #18                 // Field ignoreElementContentWhitespace:Z
      74: aload_0
      75: iconst_1
      76: putfield      #19                 // Field namespaceAware:Z
      79: aload_0
      80: aconst_null
      81: putfield      #20                 // Field schema:Ljavax/xml/validation/Schema;
      84: aload_0
      85: iconst_0
      86: putfield      #21                 // Field dtdValidating:Z
      89: aload_0
      90: iconst_0
      91: putfield      #22                 // Field xincludeAware:Z
      94: aload_0
      95: new           #23                 // class org/opensaml/xml/parse/LoggingErrorHandler
      98: dup
      99: aload_0
     100: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     103: invokespecial #24                 // Method org/opensaml/xml/parse/LoggingErrorHandler."<init>":(Lorg/slf4j/Logger;)V
     106: putfield      #25                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
     109: return

  public synchronized void initialize() throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field initialized:Z
       4: ifeq          17
       7: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      10: dup
      11: ldc           #27                 // String Parser pool was already initialized
      13: invokespecial #28                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #29                 // Method initializeFactory:()V
      21: aload_0
      22: iconst_1
      23: putfield      #5                  // Field initialized:Z
      26: return

  public synchronized boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #5                  // Field initialized:Z
       4: ireturn

  public javax.xml.parsers.DocumentBuilder getBuilder() throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #5                  // Field initialized:Z
       6: ifne          19
       9: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      12: dup
      13: ldc           #30                 // String Parser pool has not been initialized
      15: invokespecial #28                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #9                  // Field builderPool:Ljava/util/Stack;
      23: dup
      24: astore_2
      25: monitorenter
      26: aload_0
      27: getfield      #9                  // Field builderPool:Ljava/util/Stack;
      30: invokevirtual #31                 // Method java/util/Stack.isEmpty:()Z
      33: ifne          53
      36: aload_0
      37: getfield      #9                  // Field builderPool:Ljava/util/Stack;
      40: invokevirtual #32                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      43: checkcast     #33                 // class java/lang/ref/SoftReference
      46: invokevirtual #34                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      49: checkcast     #35                 // class javax/xml/parsers/DocumentBuilder
      52: astore_1
      53: aload_2
      54: monitorexit
      55: goto          63
      58: astore_3
      59: aload_2
      60: monitorexit
      61: aload_3
      62: athrow
      63: aload_1
      64: ifnonnull     72
      67: aload_0
      68: invokevirtual #36                 // Method createBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      71: astore_1
      72: aload_1
      73: ifnull        87
      76: new           #37                 // class org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy
      79: dup
      80: aload_0
      81: aload_1
      82: aload_0
      83: invokespecial #38                 // Method org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy."<init>":(Lorg/opensaml/xml/parse/StaticBasicParserPool;Ljavax/xml/parsers/DocumentBuilder;Lorg/opensaml/xml/parse/StaticBasicParserPool;)V
      86: areturn
      87: aconst_null
      88: areturn
    Exception table:
       from    to  target type
          26    55    58   any
          58    61    58   any

  public void returnBuilder(javax.xml.parsers.DocumentBuilder);
    Code:
       0: aload_1
       1: instanceof    #37                 // class org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy
       4: ifne          8
       7: return
       8: aload_1
       9: checkcast     #37                 // class org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy
      12: astore_2
      13: aload_2
      14: invokevirtual #39                 // Method org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy.getOwningPool:()Lorg/opensaml/xml/parse/ParserPool;
      17: aload_0
      18: if_acmpeq     22
      21: return
      22: aload_2
      23: dup
      24: astore_3
      25: monitorenter
      26: aload_2
      27: invokevirtual #40                 // Method org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy.isReturned:()Z
      30: ifeq          36
      33: aload_3
      34: monitorexit
      35: return
      36: aload_2
      37: iconst_1
      38: invokevirtual #41                 // Method org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy.setReturned:(Z)V
      41: aload_3
      42: monitorexit
      43: goto          53
      46: astore        4
      48: aload_3
      49: monitorexit
      50: aload         4
      52: athrow
      53: aload_2
      54: invokevirtual #42                 // Method org/opensaml/xml/parse/StaticBasicParserPool$DocumentBuilderProxy.getProxiedBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      57: astore_3
      58: aload_3
      59: invokevirtual #43                 // Method javax/xml/parsers/DocumentBuilder.reset:()V
      62: new           #33                 // class java/lang/ref/SoftReference
      65: dup
      66: aload_3
      67: invokespecial #44                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      70: astore        4
      72: aload_0
      73: getfield      #9                  // Field builderPool:Ljava/util/Stack;
      76: dup
      77: astore        5
      79: monitorenter
      80: aload_0
      81: getfield      #9                  // Field builderPool:Ljava/util/Stack;
      84: invokevirtual #45                 // Method java/util/Stack.size:()I
      87: aload_0
      88: getfield      #6                  // Field maxPoolSize:I
      91: if_icmpge     104
      94: aload_0
      95: getfield      #9                  // Field builderPool:Ljava/util/Stack;
      98: aload         4
     100: invokevirtual #46                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload         5
     106: monitorexit
     107: goto          118
     110: astore        6
     112: aload         5
     114: monitorexit
     115: aload         6
     117: athrow
     118: return
    Exception table:
       from    to  target type
          26    35    46   any
          36    43    46   any
          46    50    46   any
          80   107   110   any
         110   115   110   any

  public org.w3c.dom.Document newDocument() throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getBuilder:()Ljavax/xml/parsers/DocumentBuilder;
       4: astore_1
       5: aload_1
       6: invokevirtual #48                 // Method javax/xml/parsers/DocumentBuilder.newDocument:()Lorg/w3c/dom/Document;
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #49                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      15: aload_2
      16: areturn

  public org.w3c.dom.Document parse(java.io.InputStream) throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getBuilder:()Ljavax/xml/parsers/DocumentBuilder;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #50                 // Method javax/xml/parsers/DocumentBuilder.parse:(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
      10: astore_3
      11: aload_3
      12: astore        4
      14: aload_0
      15: aload_2
      16: invokevirtual #49                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      19: aload         4
      21: areturn
      22: astore_3
      23: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      26: dup
      27: ldc           #52                 // String Invalid XML
      29: aload_3
      30: invokespecial #53                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      33: athrow
      34: astore_3
      35: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      38: dup
      39: ldc           #55                 // String Unable to read XML from input stream
      41: aload_3
      42: invokespecial #53                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      45: athrow
      46: astore        5
      48: aload_0
      49: aload_2
      50: invokevirtual #49                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      53: aload         5
      55: athrow
    Exception table:
       from    to  target type
           5    14    22   Class org/xml/sax/SAXException
           5    14    34   Class java/io/IOException
           5    14    46   any
          22    48    46   any

  public org.w3c.dom.Document parse(java.io.Reader) throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getBuilder:()Ljavax/xml/parsers/DocumentBuilder;
       4: astore_2
       5: aload_2
       6: new           #56                 // class org/xml/sax/InputSource
       9: dup
      10: aload_1
      11: invokespecial #57                 // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
      14: invokevirtual #58                 // Method javax/xml/parsers/DocumentBuilder.parse:(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;
      17: astore_3
      18: aload_3
      19: astore        4
      21: aload_0
      22: aload_2
      23: invokevirtual #49                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      26: aload         4
      28: areturn
      29: astore_3
      30: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      33: dup
      34: ldc           #52                 // String Invalid XML
      36: aload_3
      37: invokespecial #53                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      40: athrow
      41: astore_3
      42: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      45: dup
      46: ldc           #55                 // String Unable to read XML from input stream
      48: aload_3
      49: invokespecial #53                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      52: athrow
      53: astore        5
      55: aload_0
      56: aload_2
      57: invokevirtual #49                 // Method returnBuilder:(Ljavax/xml/parsers/DocumentBuilder;)V
      60: aload         5
      62: athrow
    Exception table:
       from    to  target type
           5    21    29   Class org/xml/sax/SAXException
           5    21    41   Class java/io/IOException
           5    21    53   any
          29    55    53   any

  public int getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxPoolSize:I
       4: ireturn

  public void setMaxPoolSize(int);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #6                  // Field maxPoolSize:I
       9: return

  public java.util.Map<java.lang.String, java.lang.Object> getBuilderAttributes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderAttributes:Ljava/util/Map;
       4: invokestatic  #60                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setBuilderAttributes(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: aload_1
       6: putfield      #12                 // Field builderAttributes:Ljava/util/Map;
       9: return

  public boolean isCoalescing();
    Code:
       0: aload_0
       1: getfield      #13                 // Field coalescing:Z
       4: ireturn

  public void setCoalescing(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #13                 // Field coalescing:Z
       9: return

  public boolean isExpandEntityReferences();
    Code:
       0: aload_0
       1: getfield      #14                 // Field expandEntityReferences:Z
       4: ireturn

  public void setExpandEntityReferences(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #14                 // Field expandEntityReferences:Z
       9: return

  public java.util.Map<java.lang.String, java.lang.Boolean> getBuilderFeatures();
    Code:
       0: aload_0
       1: getfield      #16                 // Field builderFeatures:Ljava/util/Map;
       4: invokestatic  #60                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setBuilderFeatures(java.util.Map<java.lang.String, java.lang.Boolean>);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: aload_1
       6: putfield      #16                 // Field builderFeatures:Ljava/util/Map;
       9: return

  public boolean getIgnoreComments();
    Code:
       0: aload_0
       1: getfield      #17                 // Field ignoreComments:Z
       4: ireturn

  public void setIgnoreComments(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #17                 // Field ignoreComments:Z
       9: return

  public boolean isIgnoreElementContentWhitespace();
    Code:
       0: aload_0
       1: getfield      #18                 // Field ignoreElementContentWhitespace:Z
       4: ireturn

  public void setIgnoreElementContentWhitespace(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #18                 // Field ignoreElementContentWhitespace:Z
       9: return

  public boolean isNamespaceAware();
    Code:
       0: aload_0
       1: getfield      #19                 // Field namespaceAware:Z
       4: ireturn

  public void setNamespaceAware(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #19                 // Field namespaceAware:Z
       9: return

  public javax.xml.validation.Schema getSchema();
    Code:
       0: aload_0
       1: getfield      #20                 // Field schema:Ljavax/xml/validation/Schema;
       4: areturn

  public synchronized void setSchema(javax.xml.validation.Schema);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field schema:Ljavax/xml/validation/Schema;
       9: aload_0
      10: getfield      #20                 // Field schema:Ljavax/xml/validation/Schema;
      13: ifnull        45
      16: aload_0
      17: iconst_1
      18: invokevirtual #61                 // Method setNamespaceAware:(Z)V
      21: aload_0
      22: getfield      #12                 // Field builderAttributes:Ljava/util/Map;
      25: ldc           #62                 // String http://java.sun.com/xml/jaxp/properties/schemaSource
      27: invokeinterface #63,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: getfield      #12                 // Field builderAttributes:Ljava/util/Map;
      37: ldc           #64                 // String http://java.sun.com/xml/jaxp/properties/schemaLanguage
      39: invokeinterface #63,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: return

  public boolean isDTDValidating();
    Code:
       0: aload_0
       1: getfield      #21                 // Field dtdValidating:Z
       4: ireturn

  public void setDTDValidating(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #21                 // Field dtdValidating:Z
       9: return

  public boolean isXincludeAware();
    Code:
       0: aload_0
       1: getfield      #22                 // Field xincludeAware:Z
       4: ireturn

  public void setXincludeAware(boolean);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method checkValidModifyState:()V
       4: aload_0
       5: iload_1
       6: putfield      #22                 // Field xincludeAware:Z
       9: return

  protected int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field builderPool:Ljava/util/Stack;
       4: invokevirtual #45                 // Method java/util/Stack.size:()I
       7: ireturn

  protected void checkValidModifyState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field initialized:Z
       4: ifeq          17
       7: new           #65                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #66                 // String Pool is already initialized, property changes not allowed
      13: invokespecial #67                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected synchronized void initializeFactory() throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: invokestatic  #68                 // Method javax/xml/parsers/DocumentBuilderFactory.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;
       3: astore_1
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #12                 // Field builderAttributes:Ljava/util/Map;
      10: invokevirtual #69                 // Method setAttributes:(Ljavax/xml/parsers/DocumentBuilderFactory;Ljava/util/Map;)V
      13: aload_0
      14: aload_1
      15: aload_0
      16: getfield      #16                 // Field builderFeatures:Ljava/util/Map;
      19: invokevirtual #70                 // Method setFeatures:(Ljavax/xml/parsers/DocumentBuilderFactory;Ljava/util/Map;)V
      22: aload_1
      23: aload_0
      24: getfield      #13                 // Field coalescing:Z
      27: invokevirtual #71                 // Method javax/xml/parsers/DocumentBuilderFactory.setCoalescing:(Z)V
      30: aload_1
      31: aload_0
      32: getfield      #14                 // Field expandEntityReferences:Z
      35: invokevirtual #72                 // Method javax/xml/parsers/DocumentBuilderFactory.setExpandEntityReferences:(Z)V
      38: aload_1
      39: aload_0
      40: getfield      #17                 // Field ignoreComments:Z
      43: invokevirtual #73                 // Method javax/xml/parsers/DocumentBuilderFactory.setIgnoringComments:(Z)V
      46: aload_1
      47: aload_0
      48: getfield      #18                 // Field ignoreElementContentWhitespace:Z
      51: invokevirtual #74                 // Method javax/xml/parsers/DocumentBuilderFactory.setIgnoringElementContentWhitespace:(Z)V
      54: aload_1
      55: aload_0
      56: getfield      #19                 // Field namespaceAware:Z
      59: invokevirtual #75                 // Method javax/xml/parsers/DocumentBuilderFactory.setNamespaceAware:(Z)V
      62: aload_1
      63: aload_0
      64: getfield      #20                 // Field schema:Ljavax/xml/validation/Schema;
      67: invokevirtual #76                 // Method javax/xml/parsers/DocumentBuilderFactory.setSchema:(Ljavax/xml/validation/Schema;)V
      70: aload_1
      71: aload_0
      72: getfield      #21                 // Field dtdValidating:Z
      75: invokevirtual #77                 // Method javax/xml/parsers/DocumentBuilderFactory.setValidating:(Z)V
      78: aload_1
      79: aload_0
      80: getfield      #22                 // Field xincludeAware:Z
      83: invokevirtual #78                 // Method javax/xml/parsers/DocumentBuilderFactory.setXIncludeAware:(Z)V
      86: aload_0
      87: aload_1
      88: putfield      #79                 // Field builderFactory:Ljavax/xml/parsers/DocumentBuilderFactory;
      91: return

  protected void setAttributes(javax.xml.parsers.DocumentBuilderFactory, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_2
       5: invokeinterface #80,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          14
      13: return
      14: aload_2
      15: invokeinterface #81,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #82,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          111
      35: aload_3
      36: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #85                 // class java/util/Map$Entry
      44: astore        4
      46: aload_0
      47: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      50: ldc           #86                 // String Setting DocumentBuilderFactory attribute \'{}\'
      52: aload         4
      54: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      64: aload_1
      65: aload         4
      67: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      72: checkcast     #89                 // class java/lang/String
      75: aload         4
      77: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: invokevirtual #91                 // Method javax/xml/parsers/DocumentBuilderFactory.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      85: goto          108
      88: astore        5
      90: aload_0
      91: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      94: ldc           #93                 // String DocumentBuilderFactory attribute \'{}\' is not supported
      96: aload         4
      98: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     103: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     108: goto          26
     111: return
    Exception table:
       from    to  target type
          46    85    88   Class java/lang/IllegalArgumentException

  protected void setFeatures(javax.xml.parsers.DocumentBuilderFactory, java.util.Map<java.lang.String, java.lang.Boolean>);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_2
       5: invokeinterface #80,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          14
      13: return
      14: aload_2
      15: invokeinterface #81,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #82,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          117
      35: aload_3
      36: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #85                 // class java/util/Map$Entry
      44: astore        4
      46: aload_0
      47: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      50: ldc           #86                 // String Setting DocumentBuilderFactory attribute \'{}\'
      52: aload         4
      54: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      64: aload_1
      65: aload         4
      67: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      72: checkcast     #89                 // class java/lang/String
      75: aload         4
      77: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: checkcast     #95                 // class java/lang/Boolean
      85: invokevirtual #96                 // Method java/lang/Boolean.booleanValue:()Z
      88: invokevirtual #97                 // Method javax/xml/parsers/DocumentBuilderFactory.setFeature:(Ljava/lang/String;Z)V
      91: goto          114
      94: astore        5
      96: aload_0
      97: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     100: ldc           #99                 // String DocumentBuilderFactory feature \'{}\' is not supported
     102: aload         4
     104: invokeinterface #87,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     109: invokeinterface #94,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     114: goto          26
     117: return
    Exception table:
       from    to  target type
          46    91    94   Class javax/xml/parsers/ParserConfigurationException

  protected javax.xml.parsers.DocumentBuilder createBuilder() throws org.opensaml.xml.parse.XMLParserException;
    Code:
       0: aload_0
       1: getfield      #79                 // Field builderFactory:Ljavax/xml/parsers/DocumentBuilderFactory;
       4: invokevirtual #100                // Method javax/xml/parsers/DocumentBuilderFactory.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;
       7: astore_1
       8: aload_0
       9: getfield      #101                // Field entityResolver:Lorg/xml/sax/EntityResolver;
      12: ifnull        23
      15: aload_1
      16: aload_0
      17: getfield      #101                // Field entityResolver:Lorg/xml/sax/EntityResolver;
      20: invokevirtual #102                // Method javax/xml/parsers/DocumentBuilder.setEntityResolver:(Lorg/xml/sax/EntityResolver;)V
      23: aload_0
      24: getfield      #25                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
      27: ifnull        38
      30: aload_1
      31: aload_0
      32: getfield      #25                 // Field errorHandler:Lorg/xml/sax/ErrorHandler;
      35: invokevirtual #103                // Method javax/xml/parsers/DocumentBuilder.setErrorHandler:(Lorg/xml/sax/ErrorHandler;)V
      38: aload_1
      39: areturn
      40: astore_1
      41: aload_0
      42: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      45: ldc           #104                // String Unable to create new document builder
      47: aload_1
      48: invokeinterface #105,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: new           #26                 // class org/opensaml/xml/parse/XMLParserException
      56: dup
      57: ldc           #104                // String Unable to create new document builder
      59: aload_1
      60: invokespecial #53                 // Method org/opensaml/xml/parse/XMLParserException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      63: athrow
    Exception table:
       from    to  target type
           0    39    40   Class javax/xml/parsers/ParserConfigurationException

  protected java.util.Map<java.lang.String, java.lang.Boolean> buildDefaultFeatures();
    Code:
       0: new           #106                // class java/util/HashMap
       3: dup
       4: invokespecial #107                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #108                // String http://javax.xml.XMLConstants/feature/secure-processing
      11: iconst_1
      12: invokestatic  #109                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: invokevirtual #110                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #111                // String http://apache.org/xml/features/disallow-doctype-decl
      22: iconst_1
      23: invokestatic  #109                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: invokevirtual #110                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_1
      31: areturn
}
