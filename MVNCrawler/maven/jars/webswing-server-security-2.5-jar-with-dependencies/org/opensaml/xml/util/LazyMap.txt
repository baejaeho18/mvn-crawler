Compiled from "LazyMap.java"
public class org.opensaml.xml.util.LazyMap<KeyType, ValueType> implements java.util.Map<KeyType, ValueType>, java.io.Serializable {
  private static final long serialVersionUID;

  private java.util.Map<KeyType, ValueType> delegate;

  public org.opensaml.xml.util.LazyMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field delegate:Ljava/util/Map;
      11: return

  public void clear();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       4: putfield      #3                  // Field delegate:Ljava/util/Map;
       7: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<KeyType, ValueType>> entrySet();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #6                  // Method buildMap:()Ljava/util/Map;
       5: putfield      #3                  // Field delegate:Ljava/util/Map;
       8: aload_0
       9: getfield      #3                  // Field delegate:Ljava/util/Map;
      12: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: areturn

  public ValueType get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<KeyType> keySet();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #6                  // Method buildMap:()Ljava/util/Map;
       5: putfield      #3                  // Field delegate:Ljava/util/Map;
       8: aload_0
       9: getfield      #3                  // Field delegate:Ljava/util/Map;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: areturn

  public ValueType put(KeyType, ValueType);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          23
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokestatic  #11                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      18: putfield      #3                  // Field delegate:Ljava/util/Map;
      21: aconst_null
      22: areturn
      23: aload_0
      24: aload_0
      25: invokevirtual #6                  // Method buildMap:()Ljava/util/Map;
      28: putfield      #3                  // Field delegate:Ljava/util/Map;
      31: aload_0
      32: getfield      #3                  // Field delegate:Ljava/util/Map;
      35: aload_1
      36: aload_2
      37: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn

  public void putAll(java.util.Map<? extends KeyType, ? extends ValueType>);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #6                  // Method buildMap:()Ljava/util/Map;
       5: putfield      #3                  // Field delegate:Ljava/util/Map;
       8: aload_0
       9: getfield      #3                  // Field delegate:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #13,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      18: return

  public ValueType remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #6                  // Method buildMap:()Ljava/util/Map;
       5: putfield      #3                  // Field delegate:Ljava/util/Map;
       8: aload_0
       9: getfield      #3                  // Field delegate:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection<ValueType> values();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #6                  // Method buildMap:()Ljava/util/Map;
       5: putfield      #3                  // Field delegate:Ljava/util/Map;
       8: aload_0
       9: getfield      #3                  // Field delegate:Ljava/util/Map;
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: areturn

  protected java.util.Map<KeyType, ValueType> buildMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: instanceof    #17                 // class java/util/HashMap
       7: ifeq          15
      10: aload_0
      11: getfield      #3                  // Field delegate:Ljava/util/Map;
      14: areturn
      15: new           #17                 // class java/util/HashMap
      18: dup
      19: aload_0
      20: getfield      #3                  // Field delegate:Ljava/util/Map;
      23: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      26: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljava/util/Map;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #3                  // Field delegate:Ljava/util/Map;
      28: aload_1
      29: checkcast     #22                 // class org/opensaml/xml/util/LazyMap
      32: getfield      #3                  // Field delegate:Ljava/util/Map;
      35: invokeinterface #23,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      40: ireturn
}
