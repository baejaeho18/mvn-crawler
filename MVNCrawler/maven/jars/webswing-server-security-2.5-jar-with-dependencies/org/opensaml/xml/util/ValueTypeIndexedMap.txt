Compiled from "ValueTypeIndexedMap.java"
public class org.opensaml.xml.util.ValueTypeIndexedMap<KeyType, ValueType> implements java.util.Map<KeyType, ValueType> {
  private java.util.Map<java.lang.Class<?>, java.util.Map<KeyType, ValueType>> index;

  private java.util.Map<KeyType, ValueType> map;

  private java.util.Set<java.lang.Class> types;

  public org.opensaml.xml.util.ValueTypeIndexedMap();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/HashSet
       4: dup
       5: invokespecial #2                  // Method java/util/HashSet."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/Collection;)V
      11: return

  public org.opensaml.xml.util.ValueTypeIndexedMap(java.util.Map<KeyType, ValueType>, java.util.Collection<java.lang.Class>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field map:Ljava/util/Map;
       9: aload_0
      10: new           #1                  // class java/util/HashSet
      13: dup
      14: aload_2
      15: invokespecial #6                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      18: putfield      #7                  // Field types:Ljava/util/Set;
      21: aload_0
      22: new           #8                  // class java/util/HashMap
      25: dup
      26: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      29: putfield      #10                 // Field index:Ljava/util/Map;
      32: aload_0
      33: invokevirtual #11                 // Method rebuildIndex:()V
      36: return

  public org.opensaml.xml.util.ValueTypeIndexedMap(java.util.Collection<java.lang.Class>);
    Code:
       0: aload_0
       1: new           #8                  // class java/util/HashMap
       4: dup
       5: invokespecial #9                  // Method java/util/HashMap."<init>":()V
       8: aload_1
       9: invokespecial #12                 // Method "<init>":(Ljava/util/Map;Ljava/util/Collection;)V
      12: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: invokevirtual #11                 // Method rebuildIndex:()V
      13: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<KeyType, ValueType>> entrySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public ValueType get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Set<java.lang.Class> getTypes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field types:Ljava/util/Set;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<KeyType> keySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  private java.lang.Boolean matchType(java.lang.Class<?>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #20                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifne          19
       8: aload_1
       9: ldc_w         #21                 // class org/opensaml/xml/util/ValueTypeIndexedMap$NullValue
      12: if_acmpne     23
      15: aload_2
      16: ifnonnull     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public ValueType put(KeyType, ValueType);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_0
      13: getfield      #10                 // Field index:Ljava/util/Map;
      16: invokeinterface #19,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      21: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          135
      38: aload         4
      40: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #27                 // class java/lang/Class
      48: astore        5
      50: aload         5
      52: ifnonnull     60
      55: ldc_w         #21                 // class org/opensaml/xml/util/ValueTypeIndexedMap$NullValue
      58: astore        5
      60: aload_0
      61: aload         5
      63: aload_2
      64: invokespecial #28                 // Method matchType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Boolean;
      67: invokevirtual #29                 // Method java/lang/Boolean.booleanValue:()Z
      70: ifeq          98
      73: aload_0
      74: getfield      #10                 // Field index:Ljava/util/Map;
      77: aload         5
      79: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #30                 // class java/util/Map
      87: aload_1
      88: aload_2
      89: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: goto          132
      98: aload_0
      99: aload         5
     101: aload_3
     102: invokespecial #28                 // Method matchType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Boolean;
     105: invokevirtual #29                 // Method java/lang/Boolean.booleanValue:()Z
     108: ifeq          132
     111: aload_0
     112: getfield      #10                 // Field index:Ljava/util/Map;
     115: aload         5
     117: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     122: checkcast     #30                 // class java/util/Map
     125: aload_1
     126: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: goto          28
     135: aload_3
     136: areturn

  public void putAll(java.util.Map<? extends KeyType, ? extends ValueType>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          44
      21: aload_2
      22: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: aload_3
      30: aload_1
      31: aload_3
      32: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: invokevirtual #32                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: goto          12
      44: return

  public void rebuildIndex();
    Code:
       0: aload_0
       1: getfield      #10                 // Field index:Ljava/util/Map;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #7                  // Field types:Ljava/util/Set;
      13: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          151
      28: aload_2
      29: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #27                 // class java/lang/Class
      37: astore_3
      38: aload_3
      39: ifnonnull     46
      42: ldc_w         #21                 // class org/opensaml/xml/util/ValueTypeIndexedMap$NullValue
      45: astore_3
      46: aload_0
      47: getfield      #10                 // Field index:Ljava/util/Map;
      50: aload_3
      51: new           #8                  // class java/util/HashMap
      54: dup
      55: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      58: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: getfield      #5                  // Field map:Ljava/util/Map;
      68: invokeinterface #19,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      73: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      78: astore        4
      80: aload         4
      82: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          148
      90: aload         4
      92: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: astore        5
      99: aload_0
     100: getfield      #5                  // Field map:Ljava/util/Map;
     103: aload         5
     105: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     110: astore_1
     111: aload_0
     112: aload_3
     113: aload_1
     114: invokespecial #28                 // Method matchType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Boolean;
     117: invokevirtual #29                 // Method java/lang/Boolean.booleanValue:()Z
     120: ifeq          145
     123: aload_0
     124: getfield      #10                 // Field index:Ljava/util/Map;
     127: aload_3
     128: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     133: checkcast     #30                 // class java/util/Map
     136: aload         5
     138: aload_1
     139: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: goto          80
     148: goto          19
     151: return

  public ValueType remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_0
      12: getfield      #10                 // Field index:Ljava/util/Map;
      15: invokeinterface #19,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      20: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          79
      35: aload_3
      36: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #27                 // class java/lang/Class
      44: astore        4
      46: aload         4
      48: aload_2
      49: invokevirtual #20                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      52: ifeq          76
      55: aload_0
      56: getfield      #10                 // Field index:Ljava/util/Map;
      59: aload         4
      61: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #30                 // class java/util/Map
      69: aload_1
      70: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: goto          26
      79: aload_2
      80: areturn

  public void setTypes(java.util.Collection<java.lang.Class>);
    Code:
       0: aload_0
       1: new           #1                  // class java/util/HashSet
       4: dup
       5: aload_1
       6: invokespecial #6                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
       9: putfield      #7                  // Field types:Ljava/util/Set;
      12: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public <SubType extends ValueType> java.util.Map<KeyType, SubType> subMap(java.lang.Class<SubType>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnonnull     10
       6: ldc_w         #21                 // class org/opensaml/xml/util/ValueTypeIndexedMap$NullValue
       9: astore_2
      10: aload_0
      11: getfield      #10                 // Field index:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      20: ifeq          40
      23: aload_0
      24: getfield      #10                 // Field index:Ljava/util/Map;
      27: aload_2
      28: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #30                 // class java/util/Map
      36: invokestatic  #34                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      39: areturn
      40: invokestatic  #35                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      43: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokevirtual #36                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public java.util.Collection<ValueType> values();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn
}
