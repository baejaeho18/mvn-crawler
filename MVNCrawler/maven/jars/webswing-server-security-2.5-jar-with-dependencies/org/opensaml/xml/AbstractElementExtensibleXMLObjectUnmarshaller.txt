Compiled from "AbstractElementExtensibleXMLObjectUnmarshaller.java"
public abstract class org.opensaml.xml.AbstractElementExtensibleXMLObjectUnmarshaller extends org.opensaml.xml.io.AbstractXMLObjectUnmarshaller {
  public org.opensaml.xml.AbstractElementExtensibleXMLObjectUnmarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/opensaml/xml/io/AbstractXMLObjectUnmarshaller."<init>":()V
       4: return

  public org.opensaml.xml.AbstractElementExtensibleXMLObjectUnmarshaller(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/opensaml/xml/io/AbstractXMLObjectUnmarshaller."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  protected void processChildElement(org.opensaml.xml.XMLObject, org.opensaml.xml.XMLObject) throws org.opensaml.xml.io.UnmarshallingException;
    Code:
       0: aload_1
       1: checkcast     #3                  // class org/opensaml/xml/ElementExtensibleXMLObject
       4: astore_3
       5: aload_3
       6: invokeinterface #4,  1            // InterfaceMethod org/opensaml/xml/ElementExtensibleXMLObject.getUnknownXMLObjects:()Ljava/util/List;
      11: aload_2
      12: invokeinterface #5,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  protected void processAttribute(org.opensaml.xml.XMLObject, org.w3c.dom.Attr) throws org.opensaml.xml.io.UnmarshallingException;
    Code:
       0: return

  protected void processElementContent(org.opensaml.xml.XMLObject, java.lang.String);
    Code:
       0: return
}
