Compiled from "MapBasedStorageService.java"
public class org.opensaml.util.storage.MapBasedStorageService<KeyType, ValueType> implements org.opensaml.util.storage.StorageService<KeyType, ValueType> {
  private java.util.Map<java.lang.String, java.util.Map<KeyType, ValueType>> store;

  public org.opensaml.util.storage.MapBasedStorageService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field store:Ljava/util/Map;
      15: return

  protected org.opensaml.util.storage.MapBasedStorageService(java.util.Map<java.lang.String, java.util.Map<KeyType, ValueType>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field store:Ljava/util/Map;
       9: return

  public java.util.Iterator<java.lang.String> getPartitions();
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: astore_1
      10: aload_1
      11: ifnull        21
      14: aload_1
      15: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: areturn
      21: aconst_null
      22: areturn

  public java.util.Iterator<KeyType> getKeys(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          43
      13: aload_0
      14: getfield      #4                  // Field store:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #9                  // class java/util/Map
      26: invokeinterface #5,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      31: astore_2
      32: aload_2
      33: ifnull        43
      36: aload_2
      37: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: areturn
      43: aconst_null
      44: areturn

  public boolean contains(java.lang.String, KeyType);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #4                  // Field store:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          39
      19: aload_0
      20: getfield      #4                  // Field store:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #9                  // class java/util/Map
      32: aload_2
      33: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      38: ireturn
      39: iconst_0
      40: ireturn

  public ValueType get(java.lang.String, KeyType);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #4                  // Field store:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          39
      19: aload_0
      20: getfield      #4                  // Field store:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #9                  // class java/util/Map
      32: aload_2
      33: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn
      39: aconst_null
      40: areturn

  public ValueType put(java.lang.String, KeyType, ValueType);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #4                  // Field store:Ljava/util/Map;
      10: dup
      11: astore        5
      13: monitorenter
      14: aload_0
      15: getfield      #4                  // Field store:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #9                  // class java/util/Map
      27: astore        4
      29: aload         4
      31: ifnonnull     43
      34: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      37: dup
      38: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      41: astore        4
      43: aload_0
      44: getfield      #4                  // Field store:Ljava/util/Map;
      47: aload_1
      48: aload         4
      50: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload         5
      58: monitorexit
      59: goto          70
      62: astore        6
      64: aload         5
      66: monitorexit
      67: aload         6
      69: athrow
      70: aload         4
      72: aload_2
      73: aload_3
      74: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: areturn
    Exception table:
       from    to  target type
          14    59    62   any
          62    67    62   any

  public ValueType remove(java.lang.String, KeyType);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #4                  // Field store:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          39
      19: aload_0
      20: getfield      #4                  // Field store:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #9                  // class java/util/Map
      32: aload_2
      33: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn
      39: aconst_null
      40: areturn
}
