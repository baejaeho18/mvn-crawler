Compiled from "FileBackedHttpResource.java"
public class org.opensaml.util.resource.FileBackedHttpResource extends org.opensaml.util.resource.HttpResource {
  private org.slf4j.Logger log;

  private java.io.File resourceFile;

  public org.opensaml.util.resource.FileBackedHttpResource(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/opensaml/util/resource/HttpResource."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc_w         #2                  // class org/opensaml/util/resource/FileBackedHttpResource
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      15: aload_2
      16: invokestatic  #5                  // Method org/opensaml/xml/util/DatatypeHelper.isEmpty:(Ljava/lang/String;)Z
      19: ifeq          32
      22: new           #6                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #7                  // String Backing file path may not be null or empty
      28: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: new           #9                  // class java/io/File
      36: dup
      37: aload_2
      38: invokespecial #10                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      41: putfield      #11                 // Field resourceFile:Ljava/io/File;
      44: return

  public org.opensaml.util.resource.FileBackedHttpResource(java.lang.String, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/opensaml/util/resource/HttpResource."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc_w         #2                  // class org/opensaml/util/resource/FileBackedHttpResource
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      15: aload_2
      16: ifnonnull     29
      19: new           #6                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #7                  // String Backing file path may not be null or empty
      25: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: new           #9                  // class java/io/File
      33: dup
      34: aload_2
      35: invokespecial #12                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      38: putfield      #11                 // Field resourceFile:Ljava/io/File;
      41: return

  public org.opensaml.util.resource.FileBackedHttpResource(java.lang.String, java.lang.String, org.opensaml.util.resource.ResourceFilter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #13                 // Method org/opensaml/util/resource/HttpResource."<init>":(Ljava/lang/String;Lorg/opensaml/util/resource/ResourceFilter;)V
       6: aload_0
       7: ldc_w         #2                  // class org/opensaml/util/resource/FileBackedHttpResource
      10: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      13: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      16: aload_2
      17: invokestatic  #5                  // Method org/opensaml/xml/util/DatatypeHelper.isEmpty:(Ljava/lang/String;)Z
      20: ifeq          33
      23: new           #6                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #7                  // String Backing file path may not be null or empty
      29: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: new           #9                  // class java/io/File
      37: dup
      38: aload_2
      39: invokespecial #10                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      42: putfield      #11                 // Field resourceFile:Ljava/io/File;
      45: return

  public org.opensaml.util.resource.FileBackedHttpResource(java.lang.String, java.net.URI, org.opensaml.util.resource.ResourceFilter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #13                 // Method org/opensaml/util/resource/HttpResource."<init>":(Ljava/lang/String;Lorg/opensaml/util/resource/ResourceFilter;)V
       6: aload_0
       7: ldc_w         #2                  // class org/opensaml/util/resource/FileBackedHttpResource
      10: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      13: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      16: aload_2
      17: ifnonnull     30
      20: new           #6                  // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #7                  // String Backing file path may not be null or empty
      26: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: new           #9                  // class java/io/File
      34: dup
      35: aload_2
      36: invokespecial #12                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      39: putfield      #11                 // Field resourceFile:Ljava/io/File;
      42: return

  public boolean exists() throws org.opensaml.util.resource.ResourceException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/opensaml/util/resource/HttpResource.exists:()Z
       4: istore_1
       5: goto          39
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      13: ldc           #16                 // String HTTP resource \'{}\' was inaccessible for exists(), trying backing file \'{}\'
      15: aload_0
      16: invokevirtual #17                 // Method getLocation:()Ljava/lang/String;
      19: aload_0
      20: getfield      #11                 // Field resourceFile:Ljava/io/File;
      23: invokevirtual #18                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      26: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #11                 // Field resourceFile:Ljava/io/File;
      35: invokevirtual #20                 // Method java/io/File.exists:()Z
      38: ireturn
      39: iload_1
      40: ifeq          45
      43: iconst_1
      44: ireturn
      45: aload_0
      46: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      49: ldc           #21                 // String HTTP resource \'{}\' did not exist, trying backing file \'{}\'
      51: aload_0
      52: invokevirtual #17                 // Method getLocation:()Ljava/lang/String;
      55: aload_0
      56: getfield      #11                 // Field resourceFile:Ljava/io/File;
      59: invokevirtual #18                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      62: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      67: aload_0
      68: getfield      #11                 // Field resourceFile:Ljava/io/File;
      71: invokevirtual #20                 // Method java/io/File.exists:()Z
      74: ireturn
    Exception table:
       from    to  target type
           0     5     8   Class org/opensaml/util/resource/ResourceException

  public java.io.InputStream getInputStream() throws org.opensaml.util.resource.ResourceException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokespecial #22                 // Method org/opensaml/util/resource/HttpResource.getResource:()Lorg/apache/commons/httpclient/methods/GetMethod;
       6: astore_2
       7: aload_2
       8: invokevirtual #23                 // Method org/apache/commons/httpclient/methods/GetMethod.getResponseBody:()[B
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #24                 // Method saveToResourceFile:([B)V
      17: aload_2
      18: invokevirtual #25                 // Method org/apache/commons/httpclient/methods/GetMethod.getResponseBodyAsStream:()Ljava/io/InputStream;
      21: astore_1
      22: goto          98
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      30: ldc           #27                 // String HTTP resource \'{}\' was inaccessible for getInputStream(), trying backing file \'{}\'
      32: aload_0
      33: invokevirtual #17                 // Method getLocation:()Ljava/lang/String;
      36: aload_0
      37: getfield      #11                 // Field resourceFile:Ljava/io/File;
      40: invokevirtual #18                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      43: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      48: new           #28                 // class java/io/FileInputStream
      51: dup
      52: aload_0
      53: getfield      #11                 // Field resourceFile:Ljava/io/File;
      56: invokespecial #29                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      59: astore_1
      60: goto          98
      63: astore_3
      64: new           #15                 // class org/opensaml/util/resource/ResourceException
      67: dup
      68: new           #31                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #33                 // String Unable to read resource URL or backing file
      77: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #11                 // Field resourceFile:Ljava/io/File;
      84: invokevirtual #18                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      87: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: aload_3
      94: invokespecial #36                 // Method org/opensaml/util/resource/ResourceException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      97: athrow
      98: aload_0
      99: aload_1
     100: invokevirtual #37                 // Method applyFilter:(Ljava/io/InputStream;)Ljava/io/InputStream;
     103: areturn
    Exception table:
       from    to  target type
           2    22    25   Class java/lang/Exception
          26    60    63   Class java/io/IOException

  public org.joda.time.DateTime getLastModifiedTime() throws org.opensaml.util.resource.ResourceException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method org/opensaml/util/resource/HttpResource.getLastModifiedTime:()Lorg/joda/time/DateTime;
       4: areturn
       5: astore_1
       6: aload_0
       7: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      10: ldc           #39                 // String HTTP resource \'{}\' was inaccessible for getLastModifiedTime(), trying backing file \'{}\'
      12: aload_0
      13: invokevirtual #17                 // Method getLocation:()Ljava/lang/String;
      16: aload_0
      17: getfield      #11                 // Field resourceFile:Ljava/io/File;
      20: invokevirtual #18                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      23: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #11                 // Field resourceFile:Ljava/io/File;
      32: invokevirtual #40                 // Method java/io/File.lastModified:()J
      35: lstore_2
      36: lload_2
      37: lconst_0
      38: lcmp
      39: ifne          52
      42: new           #15                 // class org/opensaml/util/resource/ResourceException
      45: dup
      46: ldc           #41                 // String URL resource is not reachable and backing file is not readable
      48: invokespecial #42                 // Method org/opensaml/util/resource/ResourceException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: new           #43                 // class org/joda/time/DateTime
      55: dup
      56: lload_2
      57: invokestatic  #44                 // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
      60: invokespecial #45                 // Method org/joda/time/DateTime."<init>":(JLorg/joda/time/Chronology;)V
      63: areturn
    Exception table:
       from    to  target type
           0     4     5   Class org/opensaml/util/resource/ResourceException

  public java.lang.String getLocation();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/opensaml/util/resource/HttpResource.getLocation:()Ljava/lang/String;
       4: areturn

  protected void saveToResourceFile(byte[]) throws org.opensaml.util.resource.ResourceException;
    Code:
       0: new           #47                 // class java/io/FileOutputStream
       3: dup
       4: aload_0
       5: getfield      #11                 // Field resourceFile:Ljava/io/File;
       8: invokespecial #48                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokevirtual #49                 // Method java/io/FileOutputStream.write:([B)V
      17: goto          55
      20: astore_2
      21: new           #15                 // class org/opensaml/util/resource/ResourceException
      24: dup
      25: new           #31                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #50                 // String Unable to write resource to backing file
      34: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #11                 // Field resourceFile:Ljava/io/File;
      41: invokevirtual #18                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      44: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: aload_2
      51: invokespecial #36                 // Method org/opensaml/util/resource/ResourceException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    17    20   Class java/io/IOException
}
