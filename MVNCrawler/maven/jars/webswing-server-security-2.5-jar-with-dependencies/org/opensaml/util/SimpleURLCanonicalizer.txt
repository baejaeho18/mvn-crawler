Compiled from "SimpleURLCanonicalizer.java"
public final class org.opensaml.util.SimpleURLCanonicalizer {
  private static java.util.Map<java.lang.String, java.lang.Integer> schemePortMap;

  private org.opensaml.util.SimpleURLCanonicalizer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void registerSchemePortMapping(java.lang.String, java.lang.Integer);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Scheme and port may not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: getstatic     #5                  // Field schemePortMap:Ljava/util/Map;
      21: aload_0
      22: invokevirtual #6                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      25: aload_1
      26: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public static void deregisterSchemePortMapping(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String Scheme may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #5                  // Field schemePortMap:Ljava/util/Map;
      17: aload_0
      18: invokevirtual #6                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      21: invokeinterface #9,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return

  public static java.lang.Integer getRegisteredPort(java.lang.String);
    Code:
       0: getstatic     #5                  // Field schemePortMap:Ljava/util/Map;
       3: aload_0
       4: invokevirtual #6                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       7: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #11                 // class java/lang/Integer
      15: areturn

  public static java.lang.String canonicalize(java.lang.String);
    Code:
       0: new           #12                 // class org/opensaml/util/URLBuilder
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method org/opensaml/util/URLBuilder."<init>":(Ljava/lang/String;)V
       8: astore_1
       9: aload_1
      10: invokestatic  #14                 // Method canonicalize:(Lorg/opensaml/util/URLBuilder;)V
      13: aload_1
      14: invokevirtual #15                 // Method org/opensaml/util/URLBuilder.buildURL:()Ljava/lang/String;
      17: areturn

  private static void canonicalize(org.opensaml.util.URLBuilder);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method org/opensaml/util/URLBuilder.getScheme:()Ljava/lang/String;
       4: ifnull        48
       7: aload_0
       8: aload_0
       9: invokevirtual #16                 // Method org/opensaml/util/URLBuilder.getScheme:()Ljava/lang/String;
      12: invokevirtual #6                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      15: invokevirtual #17                 // Method org/opensaml/util/URLBuilder.setScheme:(Ljava/lang/String;)V
      18: aload_0
      19: invokevirtual #16                 // Method org/opensaml/util/URLBuilder.getScheme:()Ljava/lang/String;
      22: astore_1
      23: aload_1
      24: invokestatic  #18                 // Method getRegisteredPort:(Ljava/lang/String;)Ljava/lang/Integer;
      27: astore_2
      28: aload_2
      29: ifnull        48
      32: aload_2
      33: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      36: aload_0
      37: invokevirtual #20                 // Method org/opensaml/util/URLBuilder.getPort:()I
      40: if_icmpne     48
      43: aload_0
      44: iconst_0
      45: invokevirtual #21                 // Method org/opensaml/util/URLBuilder.setPort:(I)V
      48: aload_0
      49: invokevirtual #22                 // Method org/opensaml/util/URLBuilder.getHost:()Ljava/lang/String;
      52: ifnull        66
      55: aload_0
      56: aload_0
      57: invokevirtual #22                 // Method org/opensaml/util/URLBuilder.getHost:()Ljava/lang/String;
      60: invokevirtual #6                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      63: invokevirtual #23                 // Method org/opensaml/util/URLBuilder.setHost:(Ljava/lang/String;)V
      66: return

  static {};
    Code:
       0: new           #24                 // class java/util/HashMap
       3: dup
       4: invokespecial #25                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #5                  // Field schemePortMap:Ljava/util/Map;
      10: ldc           #26                 // String ftp
      12: bipush        23
      14: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokestatic  #28                 // Method registerSchemePortMapping:(Ljava/lang/String;Ljava/lang/Integer;)V
      20: ldc           #29                 // String http
      22: bipush        80
      24: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: invokestatic  #28                 // Method registerSchemePortMapping:(Ljava/lang/String;Ljava/lang/Integer;)V
      30: ldc           #30                 // String https
      32: sipush        443
      35: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokestatic  #28                 // Method registerSchemePortMapping:(Ljava/lang/String;Ljava/lang/Integer;)V
      41: return
}
