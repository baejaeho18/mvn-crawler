Compiled from "NameIDMappingRequestSchemaValidator.java"
public class org.opensaml.saml2.core.validator.NameIDMappingRequestSchemaValidator extends org.opensaml.saml2.core.validator.RequestAbstractTypeSchemaValidator<org.opensaml.saml2.core.NameIDMappingRequest> {
  public org.opensaml.saml2.core.validator.NameIDMappingRequestSchemaValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/opensaml/saml2/core/validator/RequestAbstractTypeSchemaValidator."<init>":()V
       4: return

  public void validate(org.opensaml.saml2.core.NameIDMappingRequest) throws org.opensaml.xml.validation.ValidationException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/opensaml/saml2/core/validator/RequestAbstractTypeSchemaValidator.validate:(Lorg/opensaml/saml2/core/RequestAbstractType;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #3                  // Method validateIdentifiers:(Lorg/opensaml/saml2/core/NameIDMappingRequest;)V
      10: aload_0
      11: aload_1
      12: invokespecial #4                  // Method validateNameIDPolicy:(Lorg/opensaml/saml2/core/NameIDMappingRequest;)V
      15: return

  protected void validateIdentifiers(org.opensaml.saml2.core.NameIDMappingRequest) throws org.opensaml.xml.validation.ValidationException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #5,  1            // InterfaceMethod org/opensaml/saml2/core/NameIDMappingRequest.getBaseID:()Lorg/opensaml/saml2/core/BaseID;
       8: ifnull        14
      11: iinc          2, 1
      14: aload_1
      15: invokeinterface #6,  1            // InterfaceMethod org/opensaml/saml2/core/NameIDMappingRequest.getNameID:()Lorg/opensaml/saml2/core/NameID;
      20: ifnull        26
      23: iinc          2, 1
      26: aload_1
      27: invokeinterface #7,  1            // InterfaceMethod org/opensaml/saml2/core/NameIDMappingRequest.getEncryptedID:()Lorg/opensaml/saml2/core/EncryptedID;
      32: ifnull        38
      35: iinc          2, 1
      38: iload_2
      39: iconst_1
      40: if_icmpeq     53
      43: new           #8                  // class org/opensaml/xml/validation/ValidationException
      46: dup
      47: ldc           #9                  // String NameIDMappingRequest must contain exactly one of: BaseID, NameID, EncryptedID
      49: invokespecial #10                 // Method org/opensaml/xml/validation/ValidationException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: return

  private void validateNameIDPolicy(org.opensaml.saml2.core.NameIDMappingRequest) throws org.opensaml.xml.validation.ValidationException;
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod org/opensaml/saml2/core/NameIDMappingRequest.getNameIDPolicy:()Lorg/opensaml/saml2/core/NameIDPolicy;
       6: ifnonnull     19
       9: new           #8                  // class org/opensaml/xml/validation/ValidationException
      12: dup
      13: ldc           #12                 // String NameIDPolicy is required
      15: invokespecial #10                 // Method org/opensaml/xml/validation/ValidationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return

  public void validate(org.opensaml.saml2.core.RequestAbstractType) throws org.opensaml.xml.validation.ValidationException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/opensaml/saml2/core/NameIDMappingRequest
       5: invokevirtual #14                 // Method validate:(Lorg/opensaml/saml2/core/NameIDMappingRequest;)V
       8: return

  public void validate(org.opensaml.xml.XMLObject) throws org.opensaml.xml.validation.ValidationException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/opensaml/saml2/core/NameIDMappingRequest
       5: invokevirtual #14                 // Method validate:(Lorg/opensaml/saml2/core/NameIDMappingRequest;)V
       8: return
}
