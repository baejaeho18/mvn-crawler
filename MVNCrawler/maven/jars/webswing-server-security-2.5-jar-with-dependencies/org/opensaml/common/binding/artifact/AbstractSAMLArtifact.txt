Compiled from "AbstractSAMLArtifact.java"
public abstract class org.opensaml.common.binding.artifact.AbstractSAMLArtifact {
  private byte[] typeCode;

  protected org.opensaml.common.binding.artifact.AbstractSAMLArtifact(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: arraylength
       6: iconst_2
       7: if_icmpeq     20
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #3                  // String Type code was not 2-bytes in size
      16: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: aload_1
      22: putfield      #5                  // Field typeCode:[B
      25: return

  public byte[] getArtifactBytes();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getRemainingArtifact:()[B
       4: astore_1
       5: iconst_2
       6: aload_1
       7: arraylength
       8: iadd
       9: newarray       byte
      11: astore_2
      12: aload_0
      13: invokevirtual #7                  // Method getTypeCode:()[B
      16: iconst_0
      17: aload_2
      18: iconst_0
      19: iconst_2
      20: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_1
      24: iconst_0
      25: aload_2
      26: iconst_2
      27: aload_1
      28: arraylength
      29: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_2
      33: areturn

  public byte[] getTypeCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field typeCode:[B
       4: areturn

  protected void setTypeCode(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field typeCode:[B
       5: return

  public abstract byte[] getRemainingArtifact();

  public java.lang.String base64Encode();
    Code:
       0: new           #9                  // class java/lang/String
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method getArtifactBytes:()[B
       8: invokestatic  #11                 // Method org/opensaml/xml/util/Base64.encodeBytes:([B)Ljava/lang/String;
      11: invokespecial #12                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
      14: areturn

  public java.lang.String hexEncode();
    Code:
       0: new           #9                  // class java/lang/String
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method getArtifactBytes:()[B
       8: invokestatic  #13                 // Method org/bouncycastle/util/encoders/Hex.encode:([B)[B
      11: invokespecial #14                 // Method java/lang/String."<init>":([B)V
      14: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #15                 // class org/opensaml/common/binding/artifact/AbstractSAMLArtifact
      11: ifeq          31
      14: aload_1
      15: checkcast     #15                 // class org/opensaml/common/binding/artifact/AbstractSAMLArtifact
      18: astore_2
      19: aload_0
      20: invokevirtual #10                 // Method getArtifactBytes:()[B
      23: aload_2
      24: invokevirtual #10                 // Method getArtifactBytes:()[B
      27: invokestatic  #16                 // Method java/util/Arrays.equals:([B[B)Z
      30: ireturn
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getArtifactBytes:()[B
       4: invokestatic  #17                 // Method java/util/Arrays.hashCode:([B)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method base64Encode:()Ljava/lang/String;
       4: areturn
}
