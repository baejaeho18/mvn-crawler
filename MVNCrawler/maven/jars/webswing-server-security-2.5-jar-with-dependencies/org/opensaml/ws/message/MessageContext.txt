Compiled from "MessageContext.java"
public interface org.opensaml.ws.message.MessageContext {
  public abstract java.lang.String getCommunicationProfileId();

  public abstract org.opensaml.xml.XMLObject getInboundMessage();

  public abstract java.lang.String getInboundMessageIssuer();

  public abstract org.opensaml.ws.transport.InTransport getInboundMessageTransport();

  public abstract org.opensaml.xml.XMLObject getOutboundMessage();

  public abstract java.lang.String getOutboundMessageIssuer();

  public abstract org.opensaml.ws.transport.OutTransport getOutboundMessageTransport();

  public abstract org.opensaml.ws.security.SecurityPolicyResolver getSecurityPolicyResolver();

  public abstract boolean isIssuerAuthenticated();

  public abstract void setCommunicationProfileId(java.lang.String);

  public abstract void setInboundMessage(org.opensaml.xml.XMLObject);

  public abstract void setInboundMessageIssuer(java.lang.String);

  public abstract void setInboundMessageTransport(org.opensaml.ws.transport.InTransport);

  public abstract void setOutboundMessage(org.opensaml.xml.XMLObject);

  public abstract void setOutboundMessageIssuer(java.lang.String);

  public abstract void setOutboundMessageTransport(org.opensaml.ws.transport.OutTransport);

  public abstract void setSecurityPolicyResolver(org.opensaml.ws.security.SecurityPolicyResolver);

  public abstract org.opensaml.ws.message.handler.HandlerChainResolver getPreSecurityInboundHandlerChainResolver();

  public abstract void setPreSecurityInboundHandlerChainResolver(org.opensaml.ws.message.handler.HandlerChainResolver);

  public abstract org.opensaml.ws.message.handler.HandlerChainResolver getPostSecurityInboundHandlerChainResolver();

  public abstract void setPostSecurityInboundHandlerChainResolver(org.opensaml.ws.message.handler.HandlerChainResolver);

  public abstract org.opensaml.ws.message.handler.HandlerChainResolver getOutboundHandlerChainResolver();

  public abstract void setOutboundHandlerChainResolver(org.opensaml.ws.message.handler.HandlerChainResolver);
}
