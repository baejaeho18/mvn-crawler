Compiled from "TLSProtocolSocketFactory.java"
public class org.opensaml.ws.soap.client.http.TLSProtocolSocketFactory implements org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory {
  private javax.net.ssl.X509KeyManager[] keyManagers;

  private javax.net.ssl.X509TrustManager[] trustManagers;

  private java.security.SecureRandom secureRandom;

  private javax.net.ssl.HostnameVerifier hostnameVerifier;

  private javax.net.ssl.SSLContext sslContext;

  public org.opensaml.ws.soap.client.http.TLSProtocolSocketFactory(javax.net.ssl.X509KeyManager, javax.net.ssl.X509TrustManager) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljavax/net/ssl/X509KeyManager;Ljavax/net/ssl/X509TrustManager;Ljavax/net/ssl/HostnameVerifier;)V
       7: return

  public org.opensaml.ws.soap.client.http.TLSProtocolSocketFactory(javax.net.ssl.X509KeyManager, javax.net.ssl.X509TrustManager, javax.net.ssl.HostnameVerifier) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: anewarray     #3                  // class javax/net/ssl/X509KeyManager
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: putfield      #4                  // Field keyManagers:[Ljavax/net/ssl/X509KeyManager;
      16: aload_2
      17: ifnull        35
      20: aload_0
      21: iconst_1
      22: anewarray     #5                  // class javax/net/ssl/X509TrustManager
      25: dup
      26: iconst_0
      27: aload_2
      28: aastore
      29: putfield      #6                  // Field trustManagers:[Ljavax/net/ssl/X509TrustManager;
      32: goto          40
      35: aload_0
      36: aconst_null
      37: putfield      #6                  // Field trustManagers:[Ljavax/net/ssl/X509TrustManager;
      40: aload_0
      41: aload_3
      42: putfield      #7                  // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
      45: aload_0
      46: aconst_null
      47: putfield      #8                  // Field secureRandom:Ljava/security/SecureRandom;
      50: aload_0
      51: invokevirtual #9                  // Method init:()V
      54: return

  public org.opensaml.ws.soap.client.http.TLSProtocolSocketFactory(javax.net.ssl.X509KeyManager[], javax.net.ssl.X509TrustManager[], javax.net.ssl.HostnameVerifier, java.security.SecureRandom) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field keyManagers:[Ljavax/net/ssl/X509KeyManager;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field trustManagers:[Ljavax/net/ssl/X509TrustManager;
      14: aload_0
      15: aload_3
      16: putfield      #7                  // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
      19: aload_0
      20: aload         4
      22: putfield      #8                  // Field secureRandom:Ljava/security/SecureRandom;
      25: aload_0
      26: invokevirtual #9                  // Method init:()V
      29: return

  protected void init() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: ldc           #10                 // String SSL
       3: invokestatic  #11                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
       6: putfield      #12                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       9: aload_0
      10: getfield      #12                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      13: aload_0
      14: getfield      #4                  // Field keyManagers:[Ljavax/net/ssl/X509KeyManager;
      17: aload_0
      18: getfield      #6                  // Field trustManagers:[Ljavax/net/ssl/X509TrustManager;
      21: aload_0
      22: getfield      #8                  // Field secureRandom:Ljava/security/SecureRandom;
      25: invokevirtual #13                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      28: goto          43
      31: astore_1
      32: new           #15                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #16                 // String Error create SSL context
      38: aload_1
      39: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: return
    Exception table:
       from    to  target type
           0    28    31   Class java/security/GeneralSecurityException

  public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: invokevirtual #18                 // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
       7: aload_1
       8: iload_2
       9: invokevirtual #19                 // Method javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokevirtual #20                 // Method verifyHostname:(Ljava/net/Socket;)V
      18: aload_3
      19: areturn

  public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: invokevirtual #18                 // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
       7: aload_1
       8: iload_2
       9: aload_3
      10: iload         4
      12: invokevirtual #21                 // Method javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;
      15: astore        5
      17: aload_0
      18: aload         5
      20: invokevirtual #20                 // Method verifyHostname:(Ljava/net/Socket;)V
      23: aload         5
      25: areturn

  public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: invokevirtual #18                 // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
       7: aload_1
       8: aload_2
       9: iload_3
      10: iload         4
      12: invokevirtual #22                 // Method javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;
      15: astore        5
      17: aload_0
      18: aload_1
      19: invokevirtual #20                 // Method verifyHostname:(Ljava/net/Socket;)V
      22: aload         5
      24: areturn

  public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException;
    Code:
       0: aload         5
       2: ifnonnull     15
       5: new           #15                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #23                 // String Parameters may not be null
      11: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload         5
      17: invokevirtual #25                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getConnectionTimeout:()I
      20: istore        6
      22: aload_0
      23: getfield      #12                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      26: invokevirtual #18                 // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      29: astore        7
      31: iload         6
      33: ifne          57
      36: aload         7
      38: aload_1
      39: iload_2
      40: aload_3
      41: iload         4
      43: invokevirtual #26                 // Method javax/net/SocketFactory.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;
      46: astore        8
      48: aload_0
      49: aload         8
      51: invokevirtual #20                 // Method verifyHostname:(Ljava/net/Socket;)V
      54: aload         8
      56: areturn
      57: aload         7
      59: invokevirtual #27                 // Method javax/net/SocketFactory.createSocket:()Ljava/net/Socket;
      62: astore        8
      64: new           #28                 // class java/net/InetSocketAddress
      67: dup
      68: aload_3
      69: iload         4
      71: invokespecial #29                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      74: astore        9
      76: new           #28                 // class java/net/InetSocketAddress
      79: dup
      80: aload_1
      81: iload_2
      82: invokespecial #30                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      85: astore        10
      87: aload         8
      89: aload         9
      91: invokevirtual #31                 // Method java/net/Socket.bind:(Ljava/net/SocketAddress;)V
      94: aload         8
      96: aload         10
      98: iload         6
     100: invokevirtual #32                 // Method java/net/Socket.connect:(Ljava/net/SocketAddress;I)V
     103: aload_0
     104: aload         8
     106: invokevirtual #20                 // Method verifyHostname:(Ljava/net/Socket;)V
     109: aload         8
     111: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_1
       5: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: aload_0
       9: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #34                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #35                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  protected void verifyHostname(java.net.Socket) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
       4: ifnonnull     8
       7: return
       8: aload_1
       9: instanceof    #36                 // class javax/net/ssl/SSLSocket
      12: ifne          16
      15: return
      16: aload_1
      17: checkcast     #36                 // class javax/net/ssl/SSLSocket
      20: astore_2
      21: aload_2
      22: invokevirtual #37                 // Method javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;
      25: astore_3
      26: aload_3
      27: invokeinterface #38,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPeerHost:()Ljava/lang/String;
      32: astore        4
      34: aload_0
      35: getfield      #7                  // Field hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;
      38: aload         4
      40: aload_3
      41: invokeinterface #39,  3           // InterfaceMethod javax/net/ssl/HostnameVerifier.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
      46: ifne          77
      49: new           #40                 // class javax/net/ssl/SSLPeerUnverifiedException
      52: dup
      53: new           #41                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #43                 // String SSL peer failed hostname validation for name:
      62: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload         4
      67: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #46                 // Method javax/net/ssl/SSLPeerUnverifiedException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: goto          105
      80: astore_3
      81: aload_0
      82: aload_2
      83: invokevirtual #48                 // Method cleanUpFailedSocket:(Ljavax/net/ssl/SSLSocket;)V
      86: aload_3
      87: athrow
      88: astore_3
      89: aload_0
      90: aload_2
      91: invokevirtual #48                 // Method cleanUpFailedSocket:(Ljavax/net/ssl/SSLSocket;)V
      94: new           #47                 // class javax/net/ssl/SSLException
      97: dup
      98: ldc           #50                 // String Error in hostname verification
     100: aload_3
     101: invokespecial #51                 // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     104: athrow
     105: return
    Exception table:
       from    to  target type
          21    77    80   Class javax/net/ssl/SSLException
          21    77    88   Class java/lang/Throwable

  protected void cleanUpFailedSocket(javax.net.ssl.SSLSocket);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method javax/net/ssl/SSLSocket.close:()V
       4: goto          8
       7: astore_2
       8: return
    Exception table:
       from    to  target type
           0     4     7   Class java/io/IOException
}
