Compiled from "HTTPPostDecoder.java"
public class org.opensaml.saml1.binding.decoding.HTTPPostDecoder extends org.opensaml.saml1.binding.decoding.BaseSAML1MessageDecoder {
  private final org.slf4j.Logger log;

  public org.opensaml.saml1.binding.decoding.HTTPPostDecoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/opensaml/saml1/binding/decoding/BaseSAML1MessageDecoder."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class org/opensaml/saml1/binding/decoding/HTTPPostDecoder
       8: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      14: return

  public org.opensaml.saml1.binding.decoding.HTTPPostDecoder(org.opensaml.xml.parse.ParserPool);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/opensaml/saml1/binding/decoding/BaseSAML1MessageDecoder."<init>":(Lorg/opensaml/xml/parse/ParserPool;)V
       5: aload_0
       6: ldc_w         #2                  // class org/opensaml/saml1/binding/decoding/HTTPPostDecoder
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      15: return

  public org.opensaml.saml1.binding.decoding.HTTPPostDecoder(org.opensaml.common.binding.artifact.SAMLArtifactMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/opensaml/saml1/binding/decoding/BaseSAML1MessageDecoder."<init>":(Lorg/opensaml/common/binding/artifact/SAMLArtifactMap;)V
       5: aload_0
       6: ldc_w         #2                  // class org/opensaml/saml1/binding/decoding/HTTPPostDecoder
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      15: return

  public org.opensaml.saml1.binding.decoding.HTTPPostDecoder(org.opensaml.common.binding.artifact.SAMLArtifactMap, org.opensaml.xml.parse.ParserPool);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method org/opensaml/saml1/binding/decoding/BaseSAML1MessageDecoder."<init>":(Lorg/opensaml/common/binding/artifact/SAMLArtifactMap;Lorg/opensaml/xml/parse/ParserPool;)V
       6: aload_0
       7: ldc_w         #2                  // class org/opensaml/saml1/binding/decoding/HTTPPostDecoder
      10: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      13: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      16: return

  public java.lang.String getBindingURI();
    Code:
       0: ldc           #8                  // String urn:oasis:names:tc:SAML:1.0:profiles:browser-post
       2: areturn

  protected void doDecode(org.opensaml.ws.message.MessageContext) throws org.opensaml.ws.message.decoder.MessageDecodingException;
    Code:
       0: aload_1
       1: instanceof    #9                  // class org/opensaml/common/binding/SAMLMessageContext
       4: ifne          28
       7: aload_0
       8: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      11: ldc           #10                 // String Invalid message context type, this decoder only support SAMLMessageContext
      13: invokeinterface #11,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      18: new           #12                 // class org/opensaml/ws/message/decoder/MessageDecodingException
      21: dup
      22: ldc           #10                 // String Invalid message context type, this decoder only support SAMLMessageContext
      24: invokespecial #13                 // Method org/opensaml/ws/message/decoder/MessageDecodingException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: invokeinterface #14,  1           // InterfaceMethod org/opensaml/ws/message/MessageContext.getInboundMessageTransport:()Lorg/opensaml/ws/transport/InTransport;
      34: instanceof    #15                 // class org/opensaml/ws/transport/http/HTTPInTransport
      37: ifne          61
      40: aload_0
      41: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      44: ldc           #16                 // String Invalid inbound message transport type, this decoder only support HTTPInTransport
      46: invokeinterface #11,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      51: new           #12                 // class org/opensaml/ws/message/decoder/MessageDecodingException
      54: dup
      55: ldc           #16                 // String Invalid inbound message transport type, this decoder only support HTTPInTransport
      57: invokespecial #13                 // Method org/opensaml/ws/message/decoder/MessageDecodingException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_1
      62: checkcast     #9                  // class org/opensaml/common/binding/SAMLMessageContext
      65: astore_2
      66: aload_2
      67: invokeinterface #17,  1           // InterfaceMethod org/opensaml/common/binding/SAMLMessageContext.getInboundMessageTransport:()Lorg/opensaml/ws/transport/InTransport;
      72: checkcast     #15                 // class org/opensaml/ws/transport/http/HTTPInTransport
      75: astore_3
      76: aload_3
      77: invokeinterface #18,  1           // InterfaceMethod org/opensaml/ws/transport/http/HTTPInTransport.getHTTPMethod:()Ljava/lang/String;
      82: ldc           #19                 // String POST
      84: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      87: ifne          100
      90: new           #12                 // class org/opensaml/ws/message/decoder/MessageDecodingException
      93: dup
      94: ldc           #21                 // String This message decoder only supports the HTTP POST method
      96: invokespecial #13                 // Method org/opensaml/ws/message/decoder/MessageDecodingException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_3
     101: ldc           #22                 // String TARGET
     103: invokeinterface #23,  2           // InterfaceMethod org/opensaml/ws/transport/http/HTTPInTransport.getParameterValue:(Ljava/lang/String;)Ljava/lang/String;
     108: astore        4
     110: aload_2
     111: aload         4
     113: invokeinterface #24,  2           // InterfaceMethod org/opensaml/common/binding/SAMLMessageContext.setRelayState:(Ljava/lang/String;)V
     118: aload_0
     119: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     122: ldc           #25                 // String Decoded SAML relay state (TARGET parameter) of: {}
     124: aload         4
     126: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     131: aload_3
     132: ldc           #27                 // String SAMLResponse
     134: invokeinterface #23,  2           // InterfaceMethod org/opensaml/ws/transport/http/HTTPInTransport.getParameterValue:(Ljava/lang/String;)Ljava/lang/String;
     139: astore        5
     141: aload         5
     143: invokestatic  #28                 // Method org/opensaml/xml/util/Base64.decode:(Ljava/lang/String;)[B
     146: astore        6
     148: aload         6
     150: ifnonnull     174
     153: aload_0
     154: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     157: ldc           #29                 // String Unable to Base64 decode SAML message
     159: invokeinterface #11,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     164: new           #12                 // class org/opensaml/ws/message/decoder/MessageDecodingException
     167: dup
     168: ldc           #29                 // String Unable to Base64 decode SAML message
     170: invokespecial #13                 // Method org/opensaml/ws/message/decoder/MessageDecodingException."<init>":(Ljava/lang/String;)V
     173: athrow
     174: aload_0
     175: new           #30                 // class java/io/ByteArrayInputStream
     178: dup
     179: aload         6
     181: invokespecial #31                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     184: invokevirtual #32                 // Method unmarshallMessage:(Ljava/io/InputStream;)Lorg/opensaml/xml/XMLObject;
     187: checkcast     #33                 // class org/opensaml/common/SAMLObject
     190: astore        7
     192: aload_2
     193: aload         7
     195: invokeinterface #34,  2           // InterfaceMethod org/opensaml/common/binding/SAMLMessageContext.setInboundMessage:(Lorg/opensaml/xml/XMLObject;)V
     200: aload_2
     201: aload         7
     203: invokeinterface #35,  2           // InterfaceMethod org/opensaml/common/binding/SAMLMessageContext.setInboundSAMLMessage:(Lorg/opensaml/common/SAMLObject;)V
     208: aload_0
     209: getfield      #4                  // Field log:Lorg/slf4j/Logger;
     212: ldc           #36                 // String Decoded SAML message
     214: invokeinterface #37,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     219: aload_0
     220: aload_2
     221: invokevirtual #38                 // Method populateMessageContext:(Lorg/opensaml/common/binding/SAMLMessageContext;)V
     224: return

  protected boolean isIntendedDestinationEndpointURIRequired(org.opensaml.common.binding.SAMLMessageContext);
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod org/opensaml/common/binding/SAMLMessageContext.getInboundSAMLMessage:()Lorg/opensaml/common/SAMLObject;
       6: instanceof    #40                 // class org/opensaml/saml1/core/ResponseAbstractType
       9: ireturn
}
