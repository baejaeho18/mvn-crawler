Compiled from "AccessMappingSecurityExtension.java"
class org.webswing.server.services.security.extension.accessmapping.AccessMappingSecurityExtension$1 extends org.webswing.server.services.security.extension.api.WebswingUserDecorator {
  final org.webswing.server.services.security.api.AbstractWebswingUser val$user;

  final org.webswing.server.services.security.extension.accessmapping.AccessMappingSecurityExtension this$0;

  org.webswing.server.services.security.extension.accessmapping.AccessMappingSecurityExtension$1(org.webswing.server.services.security.extension.accessmapping.AccessMappingSecurityExtension, org.webswing.server.services.security.api.AbstractWebswingUser, org.webswing.server.services.security.api.AbstractWebswingUser);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$user:Lorg/webswing/server/services/security/api/AbstractWebswingUser;
      10: aload_0
      11: aload_2
      12: invokespecial #3                  // Method org/webswing/server/services/security/extension/api/WebswingUserDecorator."<init>":(Lorg/webswing/server/services/security/api/AbstractWebswingUser;)V
      15: return

  public boolean isPermitted(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/webswing/server/services/security/api/WebswingAction.valueOf:(Ljava/lang/String;)Lorg/webswing/server/services/security/api/WebswingAction;
       4: invokevirtual #5                  // Method org/webswing/server/services/security/api/WebswingAction.getAccessTypes:()[Lorg/webswing/server/services/security/api/WebswingAction$AccessType;
       7: astore_2
       8: goto          23
      11: astore_3
      12: iconst_1
      13: anewarray     #7                  // class org/webswing/server/services/security/api/WebswingAction$AccessType
      16: dup
      17: iconst_0
      18: getstatic     #8                  // Field org/webswing/server/services/security/api/WebswingAction$AccessType.admin:Lorg/webswing/server/services/security/api/WebswingAction$AccessType;
      21: aastore
      22: astore_2
      23: aload_2
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     294
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload_0
      46: getfield      #1                  // Field this$0:Lorg/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension;
      49: invokestatic  #9                  // Method org/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension.access$000:(Lorg/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension;)Ljava/util/Map;
      52: aload         6
      54: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #11                 // class org/webswing/server/services/security/extension/accessmapping/AccessTypeMapping
      62: astore        7
      64: aload         7
      66: ifnull        233
      69: aload         7
      71: invokeinterface #12,  1           // InterfaceMethod org/webswing/server/services/security/extension/accessmapping/AccessTypeMapping.isEveryone:()Z
      76: ifeq          81
      79: iconst_1
      80: ireturn
      81: aload         7
      83: invokeinterface #13,  1           // InterfaceMethod org/webswing/server/services/security/extension/accessmapping/AccessTypeMapping.getUsers:()Ljava/util/List;
      88: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      93: astore        8
      95: aload         8
      97: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          157
     105: aload         8
     107: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #17                 // class java/lang/String
     115: astore        9
     117: aload_0
     118: getfield      #2                  // Field val$user:Lorg/webswing/server/services/security/api/AbstractWebswingUser;
     121: invokevirtual #18                 // Method org/webswing/server/services/security/api/AbstractWebswingUser.getUserId:()Ljava/lang/String;
     124: aload_0
     125: getfield      #1                  // Field this$0:Lorg/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension;
     128: invokevirtual #19                 // Method org/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension.getConfig:()Lorg/webswing/server/services/security/extension/api/SecurityModuleExtensionConfig;
     131: checkcast     #20                 // class org/webswing/server/services/security/extension/accessmapping/AccessMappingExtensionConfig
     134: invokeinterface #21,  1           // InterfaceMethod org/webswing/server/services/security/extension/accessmapping/AccessMappingExtensionConfig.getContext:()Lorg/webswing/server/services/security/api/SecurityContext;
     139: aload         9
     141: invokeinterface #22,  2           // InterfaceMethod org/webswing/server/services/security/api/SecurityContext.replaceVariables:(Ljava/lang/String;)Ljava/lang/String;
     146: invokestatic  #23                 // Method org/apache/commons/lang3/StringUtils.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
     149: ifeq          154
     152: iconst_1
     153: ireturn
     154: goto          95
     157: aload         7
     159: invokeinterface #24,  1           // InterfaceMethod org/webswing/server/services/security/extension/accessmapping/AccessTypeMapping.getRoles:()Ljava/util/List;
     164: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     169: astore        8
     171: aload         8
     173: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          230
     181: aload         8
     183: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     188: checkcast     #17                 // class java/lang/String
     191: astore        9
     193: aload_0
     194: getfield      #2                  // Field val$user:Lorg/webswing/server/services/security/api/AbstractWebswingUser;
     197: aload_0
     198: getfield      #1                  // Field this$0:Lorg/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension;
     201: invokevirtual #19                 // Method org/webswing/server/services/security/extension/accessmapping/AccessMappingSecurityExtension.getConfig:()Lorg/webswing/server/services/security/extension/api/SecurityModuleExtensionConfig;
     204: checkcast     #20                 // class org/webswing/server/services/security/extension/accessmapping/AccessMappingExtensionConfig
     207: invokeinterface #21,  1           // InterfaceMethod org/webswing/server/services/security/extension/accessmapping/AccessMappingExtensionConfig.getContext:()Lorg/webswing/server/services/security/api/SecurityContext;
     212: aload         9
     214: invokeinterface #22,  2           // InterfaceMethod org/webswing/server/services/security/api/SecurityContext.replaceVariables:(Ljava/lang/String;)Ljava/lang/String;
     219: invokevirtual #25                 // Method org/webswing/server/services/security/api/AbstractWebswingUser.hasRole:(Ljava/lang/String;)Z
     222: ifeq          227
     225: iconst_1
     226: ireturn
     227: goto          171
     230: goto          288
     233: aload         6
     235: invokestatic  #26                 // Method org/webswing/server/services/security/api/WebswingAction$DefaultRolePermissionResolver.getRolesForAccessType:(Lorg/webswing/server/services/security/api/WebswingAction$AccessType;)Ljava/util/Set;
     238: astore        8
     240: aload         8
     242: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     247: astore        9
     249: aload         9
     251: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     256: ifeq          288
     259: aload         9
     261: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     266: checkcast     #17                 // class java/lang/String
     269: astore        10
     271: aload_0
     272: getfield      #2                  // Field val$user:Lorg/webswing/server/services/security/api/AbstractWebswingUser;
     275: aload         10
     277: invokevirtual #25                 // Method org/webswing/server/services/security/api/AbstractWebswingUser.hasRole:(Ljava/lang/String;)Z
     280: ifeq          285
     283: iconst_1
     284: ireturn
     285: goto          249
     288: iinc          5, 1
     291: goto          32
     294: iconst_0
     295: ireturn
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/IllegalArgumentException
}
