Compiled from "GraphicsWrapper.java"
public class org.webswing.common.GraphicsWrapper extends java.awt.Graphics2D {
  private org.webswing.toolkit.WebComponentPeer rootPaintComponent;

  private java.awt.Point offset;

  private java.awt.Graphics2D original;

  public org.webswing.common.GraphicsWrapper(java.awt.Graphics2D, org.webswing.toolkit.WebComponentPeer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/awt/Graphics2D."<init>":()V
       4: aload_0
       5: new           #2                  // class java/awt/Point
       8: dup
       9: iconst_0
      10: iconst_0
      11: invokespecial #3                  // Method java/awt/Point."<init>":(II)V
      14: putfield      #4                  // Field offset:Ljava/awt/Point;
      17: aload_0
      18: aload_1
      19: putfield      #5                  // Field original:Ljava/awt/Graphics2D;
      22: aload_0
      23: aload_2
      24: putfield      #6                  // Field rootPaintComponent:Lorg/webswing/toolkit/WebComponentPeer;
      27: return

  public void setOffset(java.awt.Point);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field offset:Ljava/awt/Point;
       5: return

  private void addDirtyClipArea();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #7                  // Method getClipBounds:()Ljava/awt/Rectangle;
       5: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
       8: return

  private void addDirtyRectangleArea(java.awt.Rectangle);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: getfield      #6                  // Field rootPaintComponent:Lorg/webswing/toolkit/WebComponentPeer;
       8: aconst_null
       9: invokevirtual #9                  // Method org/webswing/toolkit/WebComponentPeer.notifyWindowAreaRepainted:(Ljava/awt/Rectangle;)V
      12: goto          84
      15: aload_0
      16: invokevirtual #7                  // Method getClipBounds:()Ljava/awt/Rectangle;
      19: astore_2
      20: aload_2
      21: ifnull        30
      24: aload_2
      25: aload_1
      26: invokevirtual #10                 // Method java/awt/Rectangle.intersection:(Ljava/awt/Rectangle;)Ljava/awt/Rectangle;
      29: astore_1
      30: aload_1
      31: getfield      #11                 // Field java/awt/Rectangle.width:I
      34: ifle          84
      37: aload_1
      38: getfield      #12                 // Field java/awt/Rectangle.height:I
      41: ifle          84
      44: aload_0
      45: invokevirtual #13                 // Method getTransform:()Ljava/awt/geom/AffineTransform;
      48: aload_1
      49: invokevirtual #14                 // Method java/awt/geom/AffineTransform.createTransformedShape:(Ljava/awt/Shape;)Ljava/awt/Shape;
      52: invokeinterface #15,  1           // InterfaceMethod java/awt/Shape.getBounds:()Ljava/awt/Rectangle;
      57: astore_3
      58: aload_3
      59: aload_0
      60: getfield      #4                  // Field offset:Ljava/awt/Point;
      63: getfield      #16                 // Field java/awt/Point.x:I
      66: aload_0
      67: getfield      #4                  // Field offset:Ljava/awt/Point;
      70: getfield      #17                 // Field java/awt/Point.y:I
      73: invokevirtual #18                 // Method java/awt/Rectangle.translate:(II)V
      76: aload_0
      77: getfield      #6                  // Field rootPaintComponent:Lorg/webswing/toolkit/WebComponentPeer;
      80: aload_3
      81: invokevirtual #9                  // Method org/webswing/toolkit/WebComponentPeer.notifyWindowAreaRepainted:(Ljava/awt/Rectangle;)V
      84: return

  public org.webswing.toolkit.WebComponentPeer getRootPaintComponent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field rootPaintComponent:Lorg/webswing/toolkit/WebComponentPeer;
       4: areturn

  public void setRootPaintComponent(org.webswing.toolkit.WebComponentPeer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field rootPaintComponent:Lorg/webswing/toolkit/WebComponentPeer;
       5: return

  public java.awt.Graphics getOriginal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: areturn

  public java.awt.Graphics create();
    Code:
       0: new           #19                 // class org/webswing/common/GraphicsWrapper
       3: dup
       4: aload_0
       5: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       8: invokevirtual #20                 // Method java/awt/Graphics2D.create:()Ljava/awt/Graphics;
      11: checkcast     #21                 // class java/awt/Graphics2D
      14: aload_0
      15: getfield      #6                  // Field rootPaintComponent:Lorg/webswing/toolkit/WebComponentPeer;
      18: invokespecial #22                 // Method "<init>":(Ljava/awt/Graphics2D;Lorg/webswing/toolkit/WebComponentPeer;)V
      21: astore_1
      22: aload_1
      23: areturn

  public void translate(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: iload_1
       5: iload_2
       6: invokevirtual #23                 // Method java/awt/Graphics2D.translate:(II)V
       9: return

  public java.awt.Color getColor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #24                 // Method java/awt/Graphics2D.getColor:()Ljava/awt/Color;
       7: areturn

  public void setColor(java.awt.Color);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #25                 // Method java/awt/Graphics2D.setColor:(Ljava/awt/Color;)V
       8: return

  public void setPaintMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #26                 // Method java/awt/Graphics2D.setPaintMode:()V
       7: return

  public void setXORMode(java.awt.Color);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #27                 // Method java/awt/Graphics2D.setXORMode:(Ljava/awt/Color;)V
       8: return

  public java.awt.Font getFont();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #28                 // Method java/awt/Graphics2D.getFont:()Ljava/awt/Font;
       7: areturn

  public void setFont(java.awt.Font);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #29                 // Method java/awt/Graphics2D.setFont:(Ljava/awt/Font;)V
       8: return

  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #30                 // Method java/awt/Graphics2D.getFontMetrics:(Ljava/awt/Font;)Ljava/awt/FontMetrics;
       8: areturn

  public java.awt.Rectangle getClipBounds();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #31                 // Method java/awt/Graphics2D.getClipBounds:()Ljava/awt/Rectangle;
       7: areturn

  public void clipRect(int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #32                 // Method java/awt/Graphics2D.clipRect:(IIII)V
      12: return

  public void setClip(int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #33                 // Method java/awt/Graphics2D.setClip:(IIII)V
      12: return

  public java.awt.Shape getClip();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #34                 // Method java/awt/Graphics2D.getClip:()Ljava/awt/Shape;
       7: areturn

  public void setClip(java.awt.Shape);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #35                 // Method java/awt/Graphics2D.setClip:(Ljava/awt/Shape;)V
       8: return

  public void copyArea(int, int, int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        7
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #37                 // Method java/awt/Graphics2D.copyArea:(IIIIII)V
      23: new           #38                 // class java/awt/Rectangle
      26: dup
      27: iload_1
      28: iload         5
      30: iadd
      31: iload_2
      32: iload         6
      34: iadd
      35: iload_3
      36: iload         4
      38: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      41: astore        8
      43: aload_0
      44: aload         8
      46: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      49: aload         7
      51: monitorexit
      52: goto          63
      55: astore        9
      57: aload         7
      59: monitorexit
      60: aload         9
      62: athrow
      63: return
    Exception table:
       from    to  target type
           7    52    55   any
          55    60    55   any

  public void drawLine(int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        5
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: invokevirtual #40                 // Method java/awt/Graphics2D.drawLine:(IIII)V
      19: new           #38                 // class java/awt/Rectangle
      22: dup
      23: iload_1
      24: iload_2
      25: iload_3
      26: iload         4
      28: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      31: astore        6
      33: aload_0
      34: aload         6
      36: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      39: aload         5
      41: monitorexit
      42: goto          53
      45: astore        7
      47: aload         5
      49: monitorexit
      50: aload         7
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    50    45   any

  public void fillRect(int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        5
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: invokevirtual #41                 // Method java/awt/Graphics2D.fillRect:(IIII)V
      19: aload_0
      20: new           #38                 // class java/awt/Rectangle
      23: dup
      24: iload_1
      25: iload_2
      26: iload_3
      27: iload         4
      29: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      32: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      35: aload         5
      37: monitorexit
      38: goto          49
      41: astore        6
      43: aload         5
      45: monitorexit
      46: aload         6
      48: athrow
      49: return
    Exception table:
       from    to  target type
           7    38    41   any
          41    46    41   any

  public void clearRect(int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: dup
       5: astore        5
       7: monitorenter
       8: aload_0
       9: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: invokevirtual #42                 // Method java/awt/Graphics2D.clearRect:(IIII)V
      20: aload_0
      21: new           #38                 // class java/awt/Rectangle
      24: dup
      25: iload_1
      26: iload_2
      27: iload_3
      28: iload         4
      30: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      33: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      36: aload         5
      38: monitorexit
      39: goto          50
      42: astore        6
      44: aload         5
      46: monitorexit
      47: aload         6
      49: athrow
      50: return
    Exception table:
       from    to  target type
           8    39    42   any
          42    47    42   any

  public void drawRoundRect(int, int, int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        7
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #43                 // Method java/awt/Graphics2D.drawRoundRect:(IIIIII)V
      23: aload_0
      24: new           #38                 // class java/awt/Rectangle
      27: dup
      28: iload_1
      29: iload_2
      30: iload_3
      31: iload         4
      33: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      36: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      39: aload         7
      41: monitorexit
      42: goto          53
      45: astore        8
      47: aload         7
      49: monitorexit
      50: aload         8
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    50    45   any

  public void fillRoundRect(int, int, int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        7
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #44                 // Method java/awt/Graphics2D.fillRoundRect:(IIIIII)V
      23: aload_0
      24: new           #38                 // class java/awt/Rectangle
      27: dup
      28: iload_1
      29: iload_2
      30: iload_3
      31: iload         4
      33: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      36: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      39: aload         7
      41: monitorexit
      42: goto          53
      45: astore        8
      47: aload         7
      49: monitorexit
      50: aload         8
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    50    45   any

  public void drawOval(int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        5
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: invokevirtual #45                 // Method java/awt/Graphics2D.drawOval:(IIII)V
      19: aload_0
      20: new           #38                 // class java/awt/Rectangle
      23: dup
      24: iload_1
      25: iload_2
      26: iload_3
      27: iload         4
      29: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      32: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      35: aload         5
      37: monitorexit
      38: goto          49
      41: astore        6
      43: aload         5
      45: monitorexit
      46: aload         6
      48: athrow
      49: return
    Exception table:
       from    to  target type
           7    38    41   any
          41    46    41   any

  public void fillOval(int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        5
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: invokevirtual #46                 // Method java/awt/Graphics2D.fillOval:(IIII)V
      19: aload_0
      20: new           #38                 // class java/awt/Rectangle
      23: dup
      24: iload_1
      25: iload_2
      26: iload_3
      27: iload         4
      29: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      32: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      35: aload         5
      37: monitorexit
      38: goto          49
      41: astore        6
      43: aload         5
      45: monitorexit
      46: aload         6
      48: athrow
      49: return
    Exception table:
       from    to  target type
           7    38    41   any
          41    46    41   any

  public void drawArc(int, int, int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        7
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #47                 // Method java/awt/Graphics2D.drawArc:(IIIIII)V
      23: aload_0
      24: new           #38                 // class java/awt/Rectangle
      27: dup
      28: iload_1
      29: iload_2
      30: iload_3
      31: iload         4
      33: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      36: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      39: aload         7
      41: monitorexit
      42: goto          53
      45: astore        8
      47: aload         7
      49: monitorexit
      50: aload         8
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    50    45   any

  public void fillArc(int, int, int, int, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        7
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #48                 // Method java/awt/Graphics2D.fillArc:(IIIIII)V
      23: aload_0
      24: new           #38                 // class java/awt/Rectangle
      27: dup
      28: iload_1
      29: iload_2
      30: iload_3
      31: iload         4
      33: invokespecial #39                 // Method java/awt/Rectangle."<init>":(IIII)V
      36: invokespecial #8                  // Method addDirtyRectangleArea:(Ljava/awt/Rectangle;)V
      39: aload         7
      41: monitorexit
      42: goto          53
      45: astore        8
      47: aload         7
      49: monitorexit
      50: aload         8
      52: athrow
      53: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    50    45   any

  public void drawPolyline(int[], int[], int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: aload_2
      13: iload_3
      14: invokevirtual #49                 // Method java/awt/Graphics2D.drawPolyline:([I[II)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void drawPolygon(int[], int[], int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: aload_2
      13: iload_3
      14: invokevirtual #51                 // Method java/awt/Graphics2D.drawPolygon:([I[II)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void fillPolygon(int[], int[], int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: aload_2
      13: iload_3
      14: invokevirtual #52                 // Method java/awt/Graphics2D.fillPolygon:([I[II)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void drawString(java.lang.String, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #53                 // Method java/awt/Graphics2D.drawString:(Ljava/lang/String;II)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void drawString(java.text.AttributedCharacterIterator, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #54                 // Method java/awt/Graphics2D.drawString:(Ljava/text/AttributedCharacterIterator;II)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        6
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: aload         4
      16: invokevirtual #55                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;IILjava/awt/image/ImageObserver;)Z
      19: istore        5
      21: aload_0
      22: invokespecial #50                 // Method addDirtyClipArea:()V
      25: aload         6
      27: monitorexit
      28: goto          39
      31: astore        7
      33: aload         6
      35: monitorexit
      36: aload         7
      38: athrow
      39: iload         5
      41: ireturn
    Exception table:
       from    to  target type
           7    28    31   any
          31    36    31   any

  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        8
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: aload         6
      20: invokevirtual #56                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;IIIILjava/awt/image/ImageObserver;)Z
      23: istore        7
      25: aload_0
      26: invokespecial #50                 // Method addDirtyClipArea:()V
      29: aload         8
      31: monitorexit
      32: goto          43
      35: astore        9
      37: aload         8
      39: monitorexit
      40: aload         9
      42: athrow
      43: iload         7
      45: ireturn
    Exception table:
       from    to  target type
           7    32    35   any
          35    40    35   any

  public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        7
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: aload         4
      16: aload         5
      18: invokevirtual #57                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;IILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z
      21: istore        6
      23: aload_0
      24: invokespecial #50                 // Method addDirtyClipArea:()V
      27: aload         7
      29: monitorexit
      30: goto          41
      33: astore        8
      35: aload         7
      37: monitorexit
      38: aload         8
      40: athrow
      41: iload         6
      43: ireturn
    Exception table:
       from    to  target type
           7    30    33   any
          33    38    33   any

  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        9
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: aload         6
      20: aload         7
      22: invokevirtual #58                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;IIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z
      25: istore        8
      27: aload_0
      28: invokespecial #50                 // Method addDirtyClipArea:()V
      31: aload         9
      33: monitorexit
      34: goto          45
      37: astore        10
      39: aload         9
      41: monitorexit
      42: aload         10
      44: athrow
      45: iload         8
      47: ireturn
    Exception table:
       from    to  target type
           7    34    37   any
          37    42    37   any

  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        12
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: iload         7
      22: iload         8
      24: iload         9
      26: aload         10
      28: invokevirtual #59                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;IIIIIIIILjava/awt/image/ImageObserver;)Z
      31: istore        11
      33: aload_0
      34: invokespecial #50                 // Method addDirtyClipArea:()V
      37: aload         12
      39: monitorexit
      40: goto          51
      43: astore        13
      45: aload         12
      47: monitorexit
      48: aload         13
      50: athrow
      51: iload         11
      53: ireturn
    Exception table:
       from    to  target type
           7    40    43   any
          43    48    43   any

  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        13
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: iload         7
      22: iload         8
      24: iload         9
      26: aload         10
      28: aload         11
      30: invokevirtual #60                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;IIIIIIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z
      33: istore        12
      35: aload_0
      36: invokespecial #50                 // Method addDirtyClipArea:()V
      39: aload         13
      41: monitorexit
      42: goto          53
      45: astore        14
      47: aload         13
      49: monitorexit
      50: aload         14
      52: athrow
      53: iload         12
      55: ireturn
    Exception table:
       from    to  target type
           7    42    45   any
          45    50    45   any

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #61                 // Method java/awt/Graphics2D.dispose:()V
       7: return

  public void draw(java.awt.Shape);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore_2
       5: monitorenter
       6: aload_0
       7: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      10: aload_1
      11: invokevirtual #62                 // Method java/awt/Graphics2D.draw:(Ljava/awt/Shape;)V
      14: aload_0
      15: invokespecial #50                 // Method addDirtyClipArea:()V
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           6    20    23   any
          23    26    23   any

  public boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        5
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #63                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/image/ImageObserver;)Z
      17: istore        4
      19: aload_0
      20: invokespecial #50                 // Method addDirtyClipArea:()V
      23: aload         5
      25: monitorexit
      26: goto          37
      29: astore        6
      31: aload         5
      33: monitorexit
      34: aload         6
      36: athrow
      37: iload         4
      39: ireturn
    Exception table:
       from    to  target type
           7    26    29   any
          29    34    29   any

  public void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        5
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: aload_2
      13: iload_3
      14: iload         4
      16: invokevirtual #64                 // Method java/awt/Graphics2D.drawImage:(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImageOp;II)V
      19: aload_0
      20: invokespecial #50                 // Method addDirtyClipArea:()V
      23: aload         5
      25: monitorexit
      26: goto          37
      29: astore        6
      31: aload         5
      33: monitorexit
      34: aload         6
      36: athrow
      37: return
    Exception table:
       from    to  target type
           7    26    29   any
          29    34    29   any

  public void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      10: aload_1
      11: aload_2
      12: invokevirtual #65                 // Method java/awt/Graphics2D.drawRenderedImage:(Ljava/awt/image/RenderedImage;Ljava/awt/geom/AffineTransform;)V
      15: aload_0
      16: invokespecial #50                 // Method addDirtyClipArea:()V
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: return
    Exception table:
       from    to  target type
           6    21    24   any
          24    28    24   any

  public void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      10: aload_1
      11: aload_2
      12: invokevirtual #66                 // Method java/awt/Graphics2D.drawRenderableImage:(Ljava/awt/image/renderable/RenderableImage;Ljava/awt/geom/AffineTransform;)V
      15: aload_0
      16: invokespecial #50                 // Method addDirtyClipArea:()V
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: return
    Exception table:
       from    to  target type
           6    21    24   any
          24    28    24   any

  public void drawString(java.lang.String, float, float);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: fload_2
      13: fload_3
      14: invokevirtual #67                 // Method java/awt/Graphics2D.drawString:(Ljava/lang/String;FF)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void drawString(java.text.AttributedCharacterIterator, float, float);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: fload_2
      13: fload_3
      14: invokevirtual #68                 // Method java/awt/Graphics2D.drawString:(Ljava/text/AttributedCharacterIterator;FF)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void drawGlyphVector(java.awt.font.GlyphVector, float, float);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      11: aload_1
      12: fload_2
      13: fload_3
      14: invokevirtual #69                 // Method java/awt/Graphics2D.drawGlyphVector:(Ljava/awt/font/GlyphVector;FF)V
      17: aload_0
      18: invokespecial #50                 // Method addDirtyClipArea:()V
      21: aload         4
      23: monitorexit
      24: goto          35
      27: astore        5
      29: aload         4
      31: monitorexit
      32: aload         5
      34: athrow
      35: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    32    27   any

  public void fill(java.awt.Shape);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore_2
       5: monitorenter
       6: aload_0
       7: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      10: aload_1
      11: invokevirtual #70                 // Method java/awt/Graphics2D.fill:(Ljava/awt/Shape;)V
      14: aload_0
      15: invokespecial #50                 // Method addDirtyClipArea:()V
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           6    20    23   any
          23    26    23   any

  public boolean hit(java.awt.Rectangle, java.awt.Shape, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #71                 // Method java/awt/Graphics2D.hit:(Ljava/awt/Rectangle;Ljava/awt/Shape;Z)Z
      10: ireturn

  public java.awt.GraphicsConfiguration getDeviceConfiguration();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #72                 // Method java/awt/Graphics2D.getDeviceConfiguration:()Ljava/awt/GraphicsConfiguration;
       7: areturn

  public void setComposite(java.awt.Composite);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #73                 // Method java/awt/Graphics2D.setComposite:(Ljava/awt/Composite;)V
       8: return

  public void setPaint(java.awt.Paint);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #74                 // Method java/awt/Graphics2D.setPaint:(Ljava/awt/Paint;)V
       8: return

  public void setStroke(java.awt.Stroke);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #75                 // Method java/awt/Graphics2D.setStroke:(Ljava/awt/Stroke;)V
       8: return

  public void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: aload_2
       6: invokevirtual #76                 // Method java/awt/Graphics2D.setRenderingHint:(Ljava/awt/RenderingHints$Key;Ljava/lang/Object;)V
       9: return

  public java.lang.Object getRenderingHint(java.awt.RenderingHints$Key);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #77                 // Method java/awt/Graphics2D.getRenderingHint:(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;
       8: areturn

  public void setRenderingHints(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #78                 // Method java/awt/Graphics2D.setRenderingHints:(Ljava/util/Map;)V
       8: return

  public void addRenderingHints(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #79                 // Method java/awt/Graphics2D.addRenderingHints:(Ljava/util/Map;)V
       8: return

  public java.awt.RenderingHints getRenderingHints();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #80                 // Method java/awt/Graphics2D.getRenderingHints:()Ljava/awt/RenderingHints;
       7: areturn

  public void translate(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: dload_1
       5: dload_3
       6: invokevirtual #81                 // Method java/awt/Graphics2D.translate:(DD)V
       9: return

  public void rotate(double);
    Code:
       0: getstatic     #36                 // Field org/webswing/dispatch/WebPaintDispatcher.webPaintLock:Ljava/lang/Object;
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
      10: dload_1
      11: invokevirtual #82                 // Method java/awt/Graphics2D.rotate:(D)V
      14: aload_0
      15: invokespecial #50                 // Method addDirtyClipArea:()V
      18: aload_3
      19: monitorexit
      20: goto          30
      23: astore        4
      25: aload_3
      26: monitorexit
      27: aload         4
      29: athrow
      30: return
    Exception table:
       from    to  target type
           6    20    23   any
          23    27    23   any

  public void rotate(double, double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: dload_1
       5: dload_3
       6: dload         5
       8: invokevirtual #83                 // Method java/awt/Graphics2D.rotate:(DDD)V
      11: return

  public void scale(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: dload_1
       5: dload_3
       6: invokevirtual #84                 // Method java/awt/Graphics2D.scale:(DD)V
       9: return

  public void shear(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: dload_1
       5: dload_3
       6: invokevirtual #85                 // Method java/awt/Graphics2D.shear:(DD)V
       9: return

  public void transform(java.awt.geom.AffineTransform);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #86                 // Method java/awt/Graphics2D.transform:(Ljava/awt/geom/AffineTransform;)V
       8: return

  public void setTransform(java.awt.geom.AffineTransform);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #87                 // Method java/awt/Graphics2D.setTransform:(Ljava/awt/geom/AffineTransform;)V
       8: return

  public java.awt.geom.AffineTransform getTransform();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #88                 // Method java/awt/Graphics2D.getTransform:()Ljava/awt/geom/AffineTransform;
       7: areturn

  public java.awt.Paint getPaint();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #89                 // Method java/awt/Graphics2D.getPaint:()Ljava/awt/Paint;
       7: areturn

  public java.awt.Composite getComposite();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #90                 // Method java/awt/Graphics2D.getComposite:()Ljava/awt/Composite;
       7: areturn

  public void setBackground(java.awt.Color);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #91                 // Method java/awt/Graphics2D.setBackground:(Ljava/awt/Color;)V
       8: return

  public java.awt.Color getBackground();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #92                 // Method java/awt/Graphics2D.getBackground:()Ljava/awt/Color;
       7: areturn

  public java.awt.Stroke getStroke();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #93                 // Method java/awt/Graphics2D.getStroke:()Ljava/awt/Stroke;
       7: areturn

  public void clip(java.awt.Shape);
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: aload_1
       5: invokevirtual #94                 // Method java/awt/Graphics2D.clip:(Ljava/awt/Shape;)V
       8: return

  public java.awt.font.FontRenderContext getFontRenderContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Ljava/awt/Graphics2D;
       4: invokevirtual #95                 // Method java/awt/Graphics2D.getFontRenderContext:()Ljava/awt/font/FontRenderContext;
       7: areturn
}
