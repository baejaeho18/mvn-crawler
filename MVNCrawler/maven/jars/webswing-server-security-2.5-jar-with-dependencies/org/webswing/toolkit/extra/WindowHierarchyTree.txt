Compiled from "WindowHierarchyTree.java"
public class org.webswing.toolkit.extra.WindowHierarchyTree {
  private java.util.Map<java.awt.Window, org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode> lookup;

  private java.util.LinkedList<org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode> rootWindowNodes;

  private java.util.LinkedList<org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode> alwaysOnTopZOrder;

  private java.util.LinkedList<org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode> regularZOrder;

  private java.util.LinkedList<org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode> zOrder;

  public org.webswing.toolkit.extra.WindowHierarchyTree();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field lookup:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/LinkedList
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedList."<init>":()V
      23: putfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      26: aload_0
      27: new           #5                  // class java/util/LinkedList
      30: dup
      31: invokespecial #6                  // Method java/util/LinkedList."<init>":()V
      34: putfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
      37: aload_0
      38: new           #5                  // class java/util/LinkedList
      41: dup
      42: invokespecial #6                  // Method java/util/LinkedList."<init>":()V
      45: putfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
      48: aload_0
      49: new           #5                  // class java/util/LinkedList
      52: dup
      53: invokespecial #6                  // Method java/util/LinkedList."<init>":()V
      56: putfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      59: return

  protected void bringToFront(java.awt.Window);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: invokevirtual #11                 // Method java/awt/Window.isEnabled:()Z
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #4                  // Field lookup:Ljava/util/Map;
      16: aload_1
      17: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      22: ifeq          123
      25: aload_0
      26: getfield      #4                  // Field lookup:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      38: astore_2
      39: aload_2
      40: invokevirtual #15                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getParent:()Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;
      43: ifnonnull     82
      46: aload_0
      47: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      50: aload_2
      51: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      54: ifeq          74
      57: aload_0
      58: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      61: aload_2
      62: invokevirtual #17                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      70: aload_2
      71: invokevirtual #18                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      74: aload_0
      75: iconst_1
      76: invokespecial #19                 // Method rebuildZOrder:(Z)V
      79: goto          120
      82: aload_2
      83: invokevirtual #15                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getParent:()Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;
      86: invokevirtual #20                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getChildren:()Ljava/util/LinkedList;
      89: astore_3
      90: aload_3
      91: aload_2
      92: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      95: ifeq          109
      98: aload_3
      99: aload_2
     100: invokevirtual #17                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     103: pop
     104: aload_3
     105: aload_2
     106: invokevirtual #18                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
     109: aload_0
     110: aload_2
     111: invokevirtual #15                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getParent:()Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;
     114: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     117: invokevirtual #22                 // Method bringToFront:(Ljava/awt/Window;)V
     120: goto          136
     123: ldc           #23                 // String Window not registered. Not able to bring to front.
     125: iconst_1
     126: anewarray     #24                 // class java/lang/Object
     129: dup
     130: iconst_0
     131: aload_1
     132: aastore
     133: invokestatic  #25                 // Method org/webswing/toolkit/util/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     136: return

  protected void addWindow(java.awt.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookup:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          130
      13: aload_0
      14: getfield      #4                  // Field lookup:Ljava/util/Map;
      17: aload_1
      18: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      21: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      29: astore_2
      30: aload_1
      31: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      34: ifnull        41
      37: aload_2
      38: ifnonnull     80
      41: new           #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      44: dup
      45: aload_0
      46: aload_1
      47: invokespecial #27                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode."<init>":(Lorg/webswing/toolkit/extra/WindowHierarchyTree;Ljava/awt/Window;)V
      50: astore_3
      51: aload_0
      52: getfield      #4                  // Field lookup:Ljava/util/Map;
      55: aload_1
      56: aload_3
      57: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      67: aload_3
      68: invokevirtual #29                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: iconst_0
      74: invokespecial #19                 // Method rebuildZOrder:(Z)V
      77: goto          113
      80: new           #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      83: dup
      84: aload_0
      85: aload_1
      86: aload_2
      87: invokespecial #30                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode."<init>":(Lorg/webswing/toolkit/extra/WindowHierarchyTree;Ljava/awt/Window;Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
      90: astore_3
      91: aload_0
      92: getfield      #4                  // Field lookup:Ljava/util/Map;
      95: aload_1
      96: aload_3
      97: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: aload_2
     104: aload_3
     105: invokevirtual #31                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.addChild:(Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
     108: aload_0
     109: iconst_0
     110: invokespecial #19                 // Method rebuildZOrder:(Z)V
     113: aload_1
     114: invokevirtual #32                 // Method java/awt/Window.repaint:()V
     117: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
     120: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
     123: aload_1
     124: invokevirtual #35                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowRepaint:(Ljava/awt/Window;)V
     127: goto          143
     130: ldc           #36                 // String Window already registered in hierarchy tree
     132: iconst_1
     133: anewarray     #24                 // class java/lang/Object
     136: dup
     137: iconst_0
     138: aload_1
     139: aastore
     140: invokestatic  #25                 // Method org/webswing/toolkit/util/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     143: return

  protected void removeWindow(java.awt.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookup:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          231
      13: aload_0
      14: getfield      #4                  // Field lookup:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      26: astore_2
      27: aload_0
      28: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      31: aload_2
      32: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      35: istore_3
      36: aload_0
      37: aload_1
      38: invokespecial #37                 // Method findSuccessor:(Ljava/awt/Window;)Ljava/awt/Window;
      41: astore        4
      43: aload_0
      44: getfield      #4                  // Field lookup:Ljava/util/Map;
      47: aload_1
      48: invokeinterface #38,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload_2
      55: invokevirtual #15                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getParent:()Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;
      58: astore        5
      60: aload_2
      61: invokevirtual #20                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getChildren:()Ljava/util/LinkedList;
      64: astore        6
      66: aload         5
      68: ifnull        134
      71: aload         5
      73: invokevirtual #20                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getChildren:()Ljava/util/LinkedList;
      76: aload_2
      77: invokevirtual #17                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      80: pop
      81: aload         6
      83: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      86: astore        7
      88: aload         7
      90: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          120
      98: aload         7
     100: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     108: astore        8
     110: aload         8
     112: aload         5
     114: invokevirtual #42                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.setParent:(Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
     117: goto          88
     120: aload         5
     122: invokevirtual #20                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getChildren:()Ljava/util/LinkedList;
     125: aload         6
     127: invokevirtual #43                 // Method java/util/LinkedList.addAll:(Ljava/util/Collection;)Z
     130: pop
     131: goto          191
     134: aload_0
     135: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
     138: aload_2
     139: invokevirtual #17                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     142: pop
     143: aload_0
     144: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
     147: aload         6
     149: invokevirtual #43                 // Method java/util/LinkedList.addAll:(Ljava/util/Collection;)Z
     152: pop
     153: aload         6
     155: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     158: astore        7
     160: aload         7
     162: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     167: ifeq          191
     170: aload         7
     172: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     177: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     180: astore        8
     182: aload         8
     184: aconst_null
     185: invokevirtual #42                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.setParent:(Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
     188: goto          160
     191: aload_0
     192: iconst_0
     193: invokespecial #19                 // Method rebuildZOrder:(Z)V
     196: aload_0
     197: iload_3
     198: aload_1
     199: invokevirtual #44                 // Method java/awt/Window.getBounds:()Ljava/awt/Rectangle;
     202: invokespecial #45                 // Method requestRepaintUnderlying:(ILjava/awt/Rectangle;)V
     205: aload         4
     207: ifnull        228
     210: invokestatic  #46                 // Method org/webswing/toolkit/extra/WindowManager.getInstance:()Lorg/webswing/toolkit/extra/WindowManager;
     213: aload_1
     214: invokevirtual #47                 // Method org/webswing/toolkit/extra/WindowManager.isWindowActive:(Ljava/awt/Window;)Z
     217: ifeq          228
     220: invokestatic  #46                 // Method org/webswing/toolkit/extra/WindowManager.getInstance:()Lorg/webswing/toolkit/extra/WindowManager;
     223: aload         4
     225: invokevirtual #48                 // Method org/webswing/toolkit/extra/WindowManager.activateWindow:(Ljava/awt/Window;)V
     228: goto          244
     231: ldc           #49                 // String Window not registered. Could not remove.
     233: iconst_1
     234: anewarray     #24                 // class java/lang/Object
     237: dup
     238: iconst_0
     239: aload_1
     240: aastore
     241: invokestatic  #25                 // Method org/webswing/toolkit/util/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     244: return

  private java.awt.Window findSuccessor(java.awt.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookup:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      13: astore_2
      14: aload_2
      15: invokevirtual #15                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getParent:()Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;
      18: ifnull        29
      21: aload_2
      22: invokevirtual #15                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getParent:()Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;
      25: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      28: areturn
      29: aload_0
      30: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      33: aload_2
      34: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      37: istore_3
      38: aload_0
      39: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      42: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      45: iload_3
      46: iconst_1
      47: iadd
      48: if_icmple     68
      51: aload_0
      52: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      55: iload_3
      56: iconst_1
      57: iadd
      58: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      61: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      64: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      67: areturn
      68: aconst_null
      69: areturn

  private void rebuildZOrder(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
       4: invokevirtual #50                 // Method java/util/LinkedList.size:()I
       7: ifle          24
      10: aload_0
      11: getfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
      14: iconst_0
      15: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      18: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      21: goto          25
      24: aconst_null
      25: astore_2
      26: aload_0
      27: getfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
      30: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      33: ifle          50
      36: aload_0
      37: getfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
      40: iconst_0
      41: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      44: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      47: goto          51
      50: aconst_null
      51: astore_3
      52: aload_0
      53: getfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
      56: invokevirtual #52                 // Method java/util/LinkedList.clear:()V
      59: aload_0
      60: getfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
      63: invokevirtual #52                 // Method java/util/LinkedList.clear:()V
      66: aload_0
      67: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      70: invokevirtual #52                 // Method java/util/LinkedList.clear:()V
      73: aload_0
      74: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
      77: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      80: astore        4
      82: aload         4
      84: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          118
      92: aload         4
      94: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     102: astore        5
     104: aload_0
     105: aload_0
     106: getfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
     109: iconst_0
     110: aload         5
     112: invokespecial #53                 // Method buildAlwaysOnTopZOrderList:(Ljava/util/List;ZLorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
     115: goto          82
     118: aload_0
     119: getfield      #7                  // Field rootWindowNodes:Ljava/util/LinkedList;
     122: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     125: astore        4
     127: aload         4
     129: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     134: ifeq          162
     137: aload         4
     139: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     144: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     147: astore        5
     149: aload_0
     150: aload_0
     151: getfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
     154: aload         5
     156: invokespecial #54                 // Method buildRegularZOrderList:(Ljava/util/List;Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
     159: goto          127
     162: aload_0
     163: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
     166: aload_0
     167: getfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
     170: invokevirtual #43                 // Method java/util/LinkedList.addAll:(Ljava/util/Collection;)Z
     173: pop
     174: aload_0
     175: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
     178: aload_0
     179: getfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
     182: invokevirtual #43                 // Method java/util/LinkedList.addAll:(Ljava/util/Collection;)Z
     185: pop
     186: iload_1
     187: ifeq          328
     190: aload_2
     191: ifnull        259
     194: aload_0
     195: getfield      #8                  // Field alwaysOnTopZOrder:Ljava/util/LinkedList;
     198: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     201: astore        4
     203: aload         4
     205: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     210: ifeq          259
     213: aload         4
     215: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     220: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     223: astore        5
     225: aload         5
     227: aload_2
     228: if_acmpne     234
     231: goto          259
     234: aload         5
     236: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     239: invokevirtual #32                 // Method java/awt/Window.repaint:()V
     242: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
     245: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
     248: aload         5
     250: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     253: invokevirtual #35                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowRepaint:(Ljava/awt/Window;)V
     256: goto          203
     259: aload_3
     260: ifnull        328
     263: aload_0
     264: getfield      #9                  // Field regularZOrder:Ljava/util/LinkedList;
     267: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     270: astore        4
     272: aload         4
     274: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     279: ifeq          328
     282: aload         4
     284: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     289: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     292: astore        5
     294: aload         5
     296: aload_3
     297: if_acmpne     303
     300: goto          328
     303: aload         5
     305: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     308: invokevirtual #32                 // Method java/awt/Window.repaint:()V
     311: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
     314: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
     317: aload         5
     319: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     322: invokevirtual #35                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowRepaint:(Ljava/awt/Window;)V
     325: goto          272
     328: return

  private void buildAlwaysOnTopZOrderList(java.util.List<org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode>, boolean, org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode);
    Code:
       0: aload_3
       1: invokevirtual #20                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getChildren:()Ljava/util/LinkedList;
       4: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore        4
       9: aload         4
      11: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload         4
      21: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      29: astore        5
      31: aload_0
      32: aload_1
      33: iload_2
      34: aload         5
      36: invokespecial #53                 // Method buildAlwaysOnTopZOrderList:(Ljava/util/List;ZLorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
      39: goto          9
      42: aload_3
      43: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      46: invokevirtual #55                 // Method java/awt/Window.isAlwaysOnTop:()Z
      49: ifne          56
      52: iload_2
      53: ifeq          66
      56: aload_1
      57: aload_3
      58: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: iconst_1
      65: istore_2
      66: return

  private void buildRegularZOrderList(java.util.List<org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode>, org.webswing.toolkit.extra.WindowHierarchyTree$WindowHierarchyNode);
    Code:
       0: aload_2
       1: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
       4: invokevirtual #55                 // Method java/awt/Window.isAlwaysOnTop:()Z
       7: ifne          56
      10: aload_2
      11: invokevirtual #20                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getChildren:()Ljava/util/LinkedList;
      14: invokevirtual #39                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          48
      27: aload_3
      28: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      36: astore        4
      38: aload_0
      39: aload_1
      40: aload         4
      42: invokespecial #54                 // Method buildRegularZOrderList:(Ljava/util/List;Lorg/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode;)V
      45: goto          18
      48: aload_1
      49: aload_2
      50: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: return

  protected boolean contains(java.awt.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookup:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  protected java.awt.Window getVisibleWindowOnPosition(int, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
       4: invokevirtual #57                 // Method java/util/LinkedList.clone:()Ljava/lang/Object;
       7: checkcast     #58                 // class java/util/List
      10: astore_3
      11: aload_3
      12: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          75
      29: aload         4
      31: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      39: astore        5
      41: aload         5
      43: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      46: invokevirtual #44                 // Method java/awt/Window.getBounds:()Ljava/awt/Rectangle;
      49: new           #60                 // class java/awt/Rectangle
      52: dup
      53: iload_1
      54: iload_2
      55: iconst_0
      56: iconst_0
      57: invokespecial #61                 // Method java/awt/Rectangle."<init>":(IIII)V
      60: invokestatic  #62                 // Method javax/swing/SwingUtilities.isRectangleContainingRectangle:(Ljava/awt/Rectangle;Ljava/awt/Rectangle;)Z
      63: ifeq          72
      66: aload         5
      68: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      71: areturn
      72: goto          19
      75: aconst_null
      76: areturn

  protected java.util.Map<java.lang.String, java.util.List<java.awt.Rectangle>> extractNonVisibleAreas();
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      12: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      15: ifle          268
      18: iconst_1
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      25: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      28: iconst_1
      29: iadd
      30: if_icmpge     268
      33: iload_2
      34: aload_0
      35: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      38: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      41: if_icmpne     49
      44: ldc           #64                 // String BG
      46: goto          72
      49: aload_0
      50: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      53: iload_2
      54: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      57: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      60: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      63: invokestatic  #65                 // Method org/webswing/toolkit/WebToolkit.targetToPeer:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #66                 // class org/webswing/toolkit/WebWindowPeer
      69: invokevirtual #67                 // Method org/webswing/toolkit/WebWindowPeer.getGuid:()Ljava/lang/String;
      72: astore_3
      73: iload_2
      74: aload_0
      75: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      78: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      81: if_icmpne     100
      84: new           #60                 // class java/awt/Rectangle
      87: dup
      88: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      91: invokevirtual #68                 // Method org/webswing/toolkit/WebToolkit.getScreenSize:()Ljava/awt/Dimension;
      94: invokespecial #69                 // Method java/awt/Rectangle."<init>":(Ljava/awt/Dimension;)V
      97: goto          117
     100: aload_0
     101: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
     104: iload_2
     105: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
     108: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     111: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     114: invokevirtual #44                 // Method java/awt/Window.getBounds:()Ljava/awt/Rectangle;
     117: astore        4
     119: new           #70                 // class java/util/ArrayList
     122: dup
     123: invokespecial #71                 // Method java/util/ArrayList."<init>":()V
     126: astore        5
     128: iload_2
     129: iconst_1
     130: isub
     131: istore        6
     133: iload         6
     135: iflt          242
     138: aload_0
     139: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
     142: iload         6
     144: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
     147: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
     150: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
     153: invokevirtual #44                 // Method java/awt/Window.getBounds:()Ljava/awt/Rectangle;
     156: astore        7
     158: aload         4
     160: getfield      #72                 // Field java/awt/Rectangle.x:I
     163: aload         4
     165: getfield      #73                 // Field java/awt/Rectangle.y:I
     168: aload         4
     170: getfield      #74                 // Field java/awt/Rectangle.width:I
     173: aload         4
     175: getfield      #75                 // Field java/awt/Rectangle.height:I
     178: aload         7
     180: invokevirtual #76                 // Method java/awt/Rectangle.clone:()Ljava/lang/Object;
     183: checkcast     #60                 // class java/awt/Rectangle
     186: invokestatic  #77                 // Method javax/swing/SwingUtilities.computeIntersection:(IIIILjava/awt/Rectangle;)Ljava/awt/Rectangle;
     189: astore        8
     191: aload         8
     193: invokevirtual #78                 // Method java/awt/Rectangle.isEmpty:()Z
     196: ifne          236
     199: aload         8
     201: aload         8
     203: getfield      #72                 // Field java/awt/Rectangle.x:I
     206: aload         4
     208: getfield      #72                 // Field java/awt/Rectangle.x:I
     211: isub
     212: aload         8
     214: getfield      #73                 // Field java/awt/Rectangle.y:I
     217: aload         4
     219: getfield      #73                 // Field java/awt/Rectangle.y:I
     222: isub
     223: invokevirtual #79                 // Method java/awt/Rectangle.setLocation:(II)V
     226: aload         5
     228: aload         8
     230: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     235: pop
     236: iinc          6, -1
     239: goto          133
     242: aload         5
     244: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     249: ifeq          262
     252: aload_1
     253: aload_3
     254: aload         5
     256: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     261: pop
     262: iinc          2, 1
     265: goto          20
     268: aload_1
     269: areturn

  public void requestRepaintAfterMove(java.awt.Window, java.awt.Rectangle);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
       5: aload_0
       6: getfield      #4                  // Field lookup:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      18: iconst_1
      19: iadd
      20: aload_2
      21: invokespecial #45                 // Method requestRepaintUnderlying:(ILjava/awt/Rectangle;)V
      24: aload_1
      25: invokevirtual #44                 // Method java/awt/Window.getBounds:()Ljava/awt/Rectangle;
      28: astore_3
      29: aload_2
      30: getfield      #72                 // Field java/awt/Rectangle.x:I
      33: aload_3
      34: getfield      #72                 // Field java/awt/Rectangle.x:I
      37: if_icmpne     51
      40: aload_2
      41: getfield      #73                 // Field java/awt/Rectangle.y:I
      44: aload_3
      45: getfield      #73                 // Field java/awt/Rectangle.y:I
      48: if_icmpeq     118
      51: aload_0
      52: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      55: aload_0
      56: getfield      #4                  // Field lookup:Ljava/util/Map;
      59: aload_1
      60: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      68: ifne          108
      71: aload_1
      72: invokevirtual #81                 // Method java/awt/Window.getWidth:()I
      75: aload_2
      76: getfield      #74                 // Field java/awt/Rectangle.width:I
      79: if_icmpne     108
      82: aload_1
      83: invokevirtual #82                 // Method java/awt/Window.getHeight:()I
      86: aload_2
      87: getfield      #75                 // Field java/awt/Rectangle.height:I
      90: if_icmpne     108
      93: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      96: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
      99: aload_1
     100: aload_2
     101: aload_3
     102: invokevirtual #83                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowMoved:(Ljava/awt/Window;Ljava/awt/Rectangle;Ljava/awt/Rectangle;)V
     105: goto          118
     108: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
     111: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
     114: aload_1
     115: invokevirtual #35                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowRepaint:(Ljava/awt/Window;)V
     118: return

  private void requestRepaintUnderlying(int, java.awt.Rectangle);
    Code:
       0: iload_1
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
       7: invokevirtual #50                 // Method java/util/LinkedList.size:()I
      10: if_icmpge     141
      13: aload_0
      14: getfield      #10                 // Field zOrder:Ljava/util/LinkedList;
      17: iload_3
      18: invokevirtual #51                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      21: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      24: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      27: astore        4
      29: aload         4
      31: invokevirtual #44                 // Method java/awt/Window.getBounds:()Ljava/awt/Rectangle;
      34: astore        5
      36: new           #60                 // class java/awt/Rectangle
      39: dup
      40: aload_2
      41: invokespecial #84                 // Method java/awt/Rectangle."<init>":(Ljava/awt/Rectangle;)V
      44: astore        6
      46: aload         5
      48: getfield      #72                 // Field java/awt/Rectangle.x:I
      51: aload         5
      53: getfield      #73                 // Field java/awt/Rectangle.y:I
      56: aload         5
      58: getfield      #74                 // Field java/awt/Rectangle.width:I
      61: aload         5
      63: getfield      #75                 // Field java/awt/Rectangle.height:I
      66: aload         6
      68: invokestatic  #77                 // Method javax/swing/SwingUtilities.computeIntersection:(IIIILjava/awt/Rectangle;)Ljava/awt/Rectangle;
      71: pop
      72: aload         4
      74: invokestatic  #65                 // Method org/webswing/toolkit/WebToolkit.targetToPeer:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #66                 // class org/webswing/toolkit/WebWindowPeer
      80: astore        7
      82: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      85: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
      88: aload         7
      90: invokevirtual #67                 // Method org/webswing/toolkit/WebWindowPeer.getGuid:()Ljava/lang/String;
      93: new           #60                 // class java/awt/Rectangle
      96: dup
      97: aload         6
      99: getfield      #72                 // Field java/awt/Rectangle.x:I
     102: aload         5
     104: getfield      #72                 // Field java/awt/Rectangle.x:I
     107: isub
     108: aload         6
     110: getfield      #73                 // Field java/awt/Rectangle.y:I
     113: aload         5
     115: getfield      #73                 // Field java/awt/Rectangle.y:I
     118: isub
     119: aload         6
     121: getfield      #74                 // Field java/awt/Rectangle.width:I
     124: aload         6
     126: getfield      #75                 // Field java/awt/Rectangle.height:I
     129: invokespecial #61                 // Method java/awt/Rectangle."<init>":(IIII)V
     132: invokevirtual #85                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowAreaRepainted:(Ljava/lang/String;Ljava/awt/Rectangle;)V
     135: iinc          3, 1
     138: goto          2
     141: new           #60                 // class java/awt/Rectangle
     144: dup
     145: aload_2
     146: invokespecial #84                 // Method java/awt/Rectangle."<init>":(Ljava/awt/Rectangle;)V
     149: astore_3
     150: invokestatic  #86                 // Method java/awt/Toolkit.getDefaultToolkit:()Ljava/awt/Toolkit;
     153: invokevirtual #87                 // Method java/awt/Toolkit.getScreenSize:()Ljava/awt/Dimension;
     156: astore        4
     158: iconst_0
     159: iconst_0
     160: aload         4
     162: getfield      #88                 // Field java/awt/Dimension.width:I
     165: aload         4
     167: getfield      #89                 // Field java/awt/Dimension.height:I
     170: aload_3
     171: invokestatic  #77                 // Method javax/swing/SwingUtilities.computeIntersection:(IIIILjava/awt/Rectangle;)Ljava/awt/Rectangle;
     174: pop
     175: invokestatic  #33                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
     178: invokevirtual #34                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
     181: aload_3
     182: invokevirtual #90                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyBackgroundRepainted:(Ljava/awt/Rectangle;)V
     185: return

  protected boolean isInSameModalBranch(java.awt.Window, java.awt.Window);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokespecial #91                 // Method getModalParent:(Ljava/awt/Window;)Ljava/awt/Window;
      11: astore_3
      12: aload_0
      13: aload_2
      14: invokespecial #91                 // Method getModalParent:(Ljava/awt/Window;)Ljava/awt/Window;
      17: astore        4
      19: aload_0
      20: aload_3
      21: aload         4
      23: invokevirtual #92                 // Method isParent:(Ljava/awt/Window;Ljava/awt/Window;)Z
      26: istore        5
      28: aload_3
      29: ifnull        49
      32: aload_3
      33: aload         4
      35: if_acmpeq     49
      38: aload_2
      39: aload         4
      41: if_acmpne     51
      44: iload         5
      46: ifeq          51
      49: iconst_1
      50: ireturn
      51: iconst_0
      52: ireturn

  public boolean isParent(java.awt.Window, java.awt.Window);
    Code:
       0: aload_1
       1: ifnull        46
       4: aload_2
       5: ifnull        46
       8: aload_2
       9: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      12: ifnull        44
      15: aload_2
      16: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      19: aload_1
      20: if_acmpeq     38
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      29: checkcast     #93                 // class java/awt/Window
      32: invokevirtual #92                 // Method isParent:(Ljava/awt/Window;Ljava/awt/Window;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn
      44: iconst_0
      45: ireturn
      46: iconst_0
      47: ireturn

  private java.awt.Window getModalParent(java.awt.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookup:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      13: astore_2
      14: aload_2
      15: ifnull        73
      18: aload_2
      19: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      22: instanceof    #94                 // class java/awt/Dialog
      25: ifeq          46
      28: aload_2
      29: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      32: checkcast     #94                 // class java/awt/Dialog
      35: invokevirtual #95                 // Method java/awt/Dialog.isModal:()Z
      38: ifeq          46
      41: aload_2
      42: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      45: areturn
      46: aload_2
      47: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      50: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      53: ifnull        71
      56: aload_0
      57: aload_2
      58: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      61: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      64: checkcast     #93                 // class java/awt/Window
      67: invokespecial #91                 // Method getModalParent:(Ljava/awt/Window;)Ljava/awt/Window;
      70: areturn
      71: aconst_null
      72: areturn
      73: aconst_null
      74: areturn

  public boolean isInModalBranch(java.awt.Window);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #91                 // Method getModalParent:(Ljava/awt/Window;)Ljava/awt/Window;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isInFullModalBranch(java.awt.Window);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookup:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode
      13: astore_2
      14: aload_2
      15: ifnull        86
      18: aload_2
      19: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      22: instanceof    #94                 // class java/awt/Dialog
      25: ifeq          59
      28: aload_2
      29: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      32: checkcast     #94                 // class java/awt/Dialog
      35: invokevirtual #95                 // Method java/awt/Dialog.isModal:()Z
      38: ifeq          59
      41: aload_2
      42: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      45: checkcast     #94                 // class java/awt/Dialog
      48: invokevirtual #96                 // Method java/awt/Dialog.getModalityType:()Ljava/awt/Dialog$ModalityType;
      51: getstatic     #97                 // Field java/awt/Dialog$ModalityType.DOCUMENT_MODAL:Ljava/awt/Dialog$ModalityType;
      54: if_acmpeq     59
      57: iconst_1
      58: ireturn
      59: aload_2
      60: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      63: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      66: ifnull        84
      69: aload_0
      70: aload_2
      71: invokevirtual #21                 // Method org/webswing/toolkit/extra/WindowHierarchyTree$WindowHierarchyNode.getW:()Ljava/awt/Window;
      74: invokevirtual #26                 // Method java/awt/Window.getParent:()Ljava/awt/Container;
      77: checkcast     #93                 // class java/awt/Window
      80: invokevirtual #98                 // Method isInFullModalBranch:(Ljava/awt/Window;)Z
      83: ireturn
      84: iconst_0
      85: ireturn
      86: iconst_0
      87: ireturn
}
