Compiled from "WeakValueHashMap.java"
class org.webswing.toolkit.util.WeakValueHashMap$WeakValue<T> extends java.lang.ref.WeakReference<T> {
  private final K key;

  final org.webswing.toolkit.util.WeakValueHashMap this$0;

  private org.webswing.toolkit.util.WeakValueHashMap$WeakValue(K, T, java.lang.ref.ReferenceQueue<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/webswing/toolkit/util/WeakValueHashMap;
       5: aload_0
       6: aload_3
       7: aload         4
       9: invokespecial #4                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      12: aload_0
      13: aload_2
      14: putfield      #5                  // Field key:Ljava/lang/Object;
      17: return

  private K getKey();
    Code:
       0: aload_0
       1: getfield      #5                  // Field key:Ljava/lang/Object;
       4: areturn

  org.webswing.toolkit.util.WeakValueHashMap$WeakValue(org.webswing.toolkit.util.WeakValueHashMap, java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue, org.webswing.toolkit.util.WeakValueHashMap$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #2                  // Method "<init>":(Lorg/webswing/toolkit/util/WeakValueHashMap;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       9: return

  static java.lang.Object access$100(org.webswing.toolkit.util.WeakValueHashMap$WeakValue);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getKey:()Ljava/lang/Object;
       4: areturn
}
