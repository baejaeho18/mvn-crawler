Compiled from "GitRepositoryState.java"
public class org.webswing.toolkit.util.GitRepositoryState {
  private static org.webswing.toolkit.util.GitRepositoryState instance;

  java.lang.String tags;

  java.lang.String branch;

  java.lang.String dirty;

  java.lang.String remoteOriginUrl;

  java.lang.String commitId;

  java.lang.String commitIdAbbrev;

  java.lang.String describe;

  java.lang.String describeShort;

  java.lang.String commitUserName;

  java.lang.String commitUserEmail;

  java.lang.String commitMessageFull;

  java.lang.String commitMessageShort;

  java.lang.String commitTime;

  java.lang.String closestTagName;

  java.lang.String closestTagCommitCount;

  java.lang.String buildUserName;

  java.lang.String buildUserEmail;

  java.lang.String buildTime;

  java.lang.String buildHost;

  java.lang.String buildVersion;

  public org.webswing.toolkit.util.GitRepositoryState(java.util.Properties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String git.tags
       8: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: putfield      #5                  // Field tags:Ljava/lang/String;
      17: aload_0
      18: aload_1
      19: ldc           #6                  // String git.branch
      21: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      27: putfield      #7                  // Field branch:Ljava/lang/String;
      30: aload_0
      31: aload_1
      32: ldc           #8                  // String git.dirty
      34: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      40: putfield      #9                  // Field dirty:Ljava/lang/String;
      43: aload_0
      44: aload_1
      45: ldc           #10                 // String git.remote.origin.url
      47: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      53: putfield      #11                 // Field remoteOriginUrl:Ljava/lang/String;
      56: aload_0
      57: aload_1
      58: ldc           #12                 // String git.commit.id.full
      60: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      66: putfield      #13                 // Field commitId:Ljava/lang/String;
      69: aload_0
      70: aload_1
      71: ldc           #14                 // String git.commit.id.abbrev
      73: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      76: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      79: putfield      #15                 // Field commitIdAbbrev:Ljava/lang/String;
      82: aload_0
      83: aload_1
      84: ldc           #16                 // String git.commit.id.describe
      86: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      92: putfield      #17                 // Field describe:Ljava/lang/String;
      95: aload_0
      96: aload_1
      97: ldc           #18                 // String git.commit.id.describe-short
      99: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     102: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     105: putfield      #19                 // Field describeShort:Ljava/lang/String;
     108: aload_0
     109: aload_1
     110: ldc           #20                 // String git.commit.user.name
     112: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     115: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     118: putfield      #21                 // Field commitUserName:Ljava/lang/String;
     121: aload_0
     122: aload_1
     123: ldc           #22                 // String git.commit.user.email
     125: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     128: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     131: putfield      #23                 // Field commitUserEmail:Ljava/lang/String;
     134: aload_0
     135: aload_1
     136: ldc           #24                 // String git.commit.message.full
     138: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     141: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     144: putfield      #25                 // Field commitMessageFull:Ljava/lang/String;
     147: aload_0
     148: aload_1
     149: ldc           #26                 // String git.commit.message.short
     151: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     154: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     157: putfield      #27                 // Field commitMessageShort:Ljava/lang/String;
     160: aload_0
     161: aload_1
     162: ldc           #28                 // String git.commit.time
     164: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     167: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     170: putfield      #29                 // Field commitTime:Ljava/lang/String;
     173: aload_0
     174: aload_1
     175: ldc           #30                 // String git.closest.tag.name
     177: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     183: putfield      #31                 // Field closestTagName:Ljava/lang/String;
     186: aload_0
     187: aload_1
     188: ldc           #32                 // String git.closest.tag.commit.count
     190: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     193: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     196: putfield      #33                 // Field closestTagCommitCount:Ljava/lang/String;
     199: aload_0
     200: aload_1
     201: ldc           #34                 // String git.build.user.name
     203: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     206: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     209: putfield      #35                 // Field buildUserName:Ljava/lang/String;
     212: aload_0
     213: aload_1
     214: ldc           #36                 // String git.build.user.email
     216: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     219: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     222: putfield      #37                 // Field buildUserEmail:Ljava/lang/String;
     225: aload_0
     226: aload_1
     227: ldc           #38                 // String git.build.time
     229: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     232: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     235: putfield      #39                 // Field buildTime:Ljava/lang/String;
     238: aload_0
     239: aload_1
     240: ldc           #40                 // String git.build.host
     242: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     245: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     248: putfield      #41                 // Field buildHost:Ljava/lang/String;
     251: aload_0
     252: aload_1
     253: ldc           #42                 // String git.build.version
     255: invokevirtual #3                  // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
     258: invokestatic  #4                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     261: putfield      #43                 // Field buildVersion:Ljava/lang/String;
     264: return

  public static org.webswing.toolkit.util.GitRepositoryState getInstance();
    Code:
       0: getstatic     #44                 // Field instance:Lorg/webswing/toolkit/util/GitRepositoryState;
       3: ifnonnull     62
       6: new           #45                 // class java/util/Properties
       9: dup
      10: invokespecial #46                 // Method java/util/Properties."<init>":()V
      13: astore_0
      14: ldc           #47                 // class org/webswing/toolkit/util/GitRepositoryState
      16: invokevirtual #48                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      19: astore_1
      20: aload_1
      21: ifnonnull     28
      24: invokestatic  #49                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      27: astore_1
      28: aload_0
      29: aload_1
      30: ldc           #50                 // String git.properties
      32: invokevirtual #51                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      35: invokevirtual #52                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      38: goto          51
      41: astore_1
      42: ldc           #54                 // String Failed to load git.properties
      44: iconst_0
      45: anewarray     #55                 // class java/lang/Object
      48: invokestatic  #56                 // Method org/webswing/toolkit/util/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      51: new           #47                 // class org/webswing/toolkit/util/GitRepositoryState
      54: dup
      55: aload_0
      56: invokespecial #57                 // Method "<init>":(Ljava/util/Properties;)V
      59: putstatic     #44                 // Field instance:Lorg/webswing/toolkit/util/GitRepositoryState;
      62: getstatic     #44                 // Field instance:Lorg/webswing/toolkit/util/GitRepositoryState;
      65: areturn
    Exception table:
       from    to  target type
          14    38    41   Class java/io/IOException

  public java.lang.String getTags();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tags:Ljava/lang/String;
       4: areturn

  public java.lang.String getBranch();
    Code:
       0: aload_0
       1: getfield      #7                  // Field branch:Ljava/lang/String;
       4: areturn

  public java.lang.String getDirty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field dirty:Ljava/lang/String;
       4: areturn

  public java.lang.String getRemoteOriginUrl();
    Code:
       0: aload_0
       1: getfield      #11                 // Field remoteOriginUrl:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitId();
    Code:
       0: aload_0
       1: getfield      #13                 // Field commitId:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitIdAbbrev();
    Code:
       0: aload_0
       1: getfield      #15                 // Field commitIdAbbrev:Ljava/lang/String;
       4: areturn

  public java.lang.String getDescribe();
    Code:
       0: aload_0
       1: getfield      #17                 // Field describe:Ljava/lang/String;
       4: areturn

  public java.lang.String getDescribeShort();
    Code:
       0: aload_0
       1: getfield      #19                 // Field describeShort:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitUserName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field commitUserName:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitUserEmail();
    Code:
       0: aload_0
       1: getfield      #23                 // Field commitUserEmail:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitMessageFull();
    Code:
       0: aload_0
       1: getfield      #25                 // Field commitMessageFull:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitMessageShort();
    Code:
       0: aload_0
       1: getfield      #27                 // Field commitMessageShort:Ljava/lang/String;
       4: areturn

  public java.lang.String getCommitTime();
    Code:
       0: aload_0
       1: getfield      #29                 // Field commitTime:Ljava/lang/String;
       4: areturn

  public java.lang.String getClosestTagName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field closestTagName:Ljava/lang/String;
       4: areturn

  public java.lang.String getClosestTagCommitCount();
    Code:
       0: aload_0
       1: getfield      #33                 // Field closestTagCommitCount:Ljava/lang/String;
       4: areturn

  public java.lang.String getBuildUserName();
    Code:
       0: aload_0
       1: getfield      #35                 // Field buildUserName:Ljava/lang/String;
       4: areturn

  public java.lang.String getBuildUserEmail();
    Code:
       0: aload_0
       1: getfield      #37                 // Field buildUserEmail:Ljava/lang/String;
       4: areturn

  public java.lang.String getBuildTime();
    Code:
       0: aload_0
       1: getfield      #39                 // Field buildTime:Ljava/lang/String;
       4: areturn

  public java.lang.String getBuildHost();
    Code:
       0: aload_0
       1: getfield      #41                 // Field buildHost:Ljava/lang/String;
       4: areturn

  public java.lang.String getBuildVersion();
    Code:
       0: aload_0
       1: getfield      #43                 // Field buildVersion:Ljava/lang/String;
       4: areturn
}
