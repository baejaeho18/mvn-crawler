Compiled from "DummyGraphics2D.java"
public class org.webswing.toolkit.util.DummyGraphics2D extends java.awt.Graphics2D {
  private java.awt.Color backgroundColor;

  private java.awt.Stroke currentStroke;

  private java.awt.Color currentColor;

  private java.awt.Paint currentPaint;

  private java.awt.Font currentFont;

  private java.awt.RenderingHints hints;

  private java.awt.Composite currentComposite;

  private java.awt.Shape userClip;

  private java.awt.geom.AffineTransform currentTransform;

  public org.webswing.toolkit.util.DummyGraphics2D();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/awt/Graphics2D."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field userClip:Ljava/awt/Shape;
       9: aload_0
      10: new           #3                  // class java/awt/geom/AffineTransform
      13: dup
      14: invokespecial #4                  // Method java/awt/geom/AffineTransform."<init>":()V
      17: putfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
      20: aload_0
      21: iconst_3
      22: invokestatic  #7                  // Method java/awt/AlphaComposite.getInstance:(I)Ljava/awt/AlphaComposite;
      25: putfield      #8                  // Field currentComposite:Ljava/awt/Composite;
      28: aload_0
      29: new           #9                  // class java/awt/BasicStroke
      32: dup
      33: invokespecial #10                 // Method java/awt/BasicStroke."<init>":()V
      36: putfield      #11                 // Field currentStroke:Ljava/awt/Stroke;
      39: aload_0
      40: getstatic     #12                 // Field java/awt/Color.BLACK:Ljava/awt/Color;
      43: putfield      #13                 // Field currentColor:Ljava/awt/Color;
      46: aload_0
      47: getstatic     #12                 // Field java/awt/Color.BLACK:Ljava/awt/Color;
      50: putfield      #14                 // Field currentPaint:Ljava/awt/Paint;
      53: aload_0
      54: getstatic     #12                 // Field java/awt/Color.BLACK:Ljava/awt/Color;
      57: putfield      #15                 // Field backgroundColor:Ljava/awt/Color;
      60: aload_0
      61: new           #16                 // class java/awt/Font
      64: dup
      65: ldc           #17                 // String Dialog
      67: iconst_0
      68: bipush        12
      70: invokespecial #18                 // Method java/awt/Font."<init>":(Ljava/lang/String;II)V
      73: putfield      #19                 // Field currentFont:Ljava/awt/Font;
      76: aload_0
      77: new           #20                 // class java/awt/RenderingHints
      80: dup
      81: aconst_null
      82: invokespecial #21                 // Method java/awt/RenderingHints."<init>":(Ljava/util/Map;)V
      85: putfield      #22                 // Field hints:Ljava/awt/RenderingHints;
      88: return

  public java.awt.Font getFont();
    Code:
       0: aload_0
       1: getfield      #19                 // Field currentFont:Ljava/awt/Font;
       4: areturn

  public void clearRect(int, int, int, int);
    Code:
       0: return

  public void drawLine(int, int, int, int);
    Code:
       0: return

  public void drawRect(int, int, int, int);
    Code:
       0: return

  public void fillRect(int, int, int, int);
    Code:
       0: return

  public void drawArc(int, int, int, int, int, int);
    Code:
       0: return

  public void fillArc(int, int, int, int, int, int);
    Code:
       0: return

  public void drawOval(int, int, int, int);
    Code:
       0: return

  public void fillOval(int, int, int, int);
    Code:
       0: return

  public void drawRoundRect(int, int, int, int, int, int);
    Code:
       0: return

  public void fillRoundRect(int, int, int, int, int, int);
    Code:
       0: return

  public void translate(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: i2d
       3: iload_2
       4: i2d
       5: invokevirtual #23                 // Method translate:(DD)V
       8: return

  public void drawString(java.lang.String, int, int);
    Code:
       0: return

  public void drawString(java.lang.String, float, float);
    Code:
       0: return

  public void drawString(java.text.AttributedCharacterIterator, int, int);
    Code:
       0: return

  public java.awt.Color getBackground();
    Code:
       0: aload_0
       1: getfield      #15                 // Field backgroundColor:Ljava/awt/Color;
       4: areturn

  public void setBackground(java.awt.Color);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field backgroundColor:Ljava/awt/Color;
       5: return

  public java.awt.Color getColor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field currentColor:Ljava/awt/Color;
       4: areturn

  public java.awt.Paint getPaint();
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentPaint:Ljava/awt/Paint;
       4: areturn

  public void rotate(double, double, double);
    Code:
       0: aload_0
       1: dload_3
       2: dload         5
       4: invokevirtual #23                 // Method translate:(DD)V
       7: aload_0
       8: dload_1
       9: invokevirtual #24                 // Method rotate:(D)V
      12: aload_0
      13: dload_3
      14: dneg
      15: dload         5
      17: dneg
      18: invokevirtual #23                 // Method translate:(DD)V
      21: return

  public void drawPolyline(int[], int[], int);
    Code:
       0: return

  public void drawPolygon(int[], int[], int);
    Code:
       0: return

  public void fillPolygon(int[], int[], int);
    Code:
       0: return

  public boolean hit(java.awt.Rectangle, java.awt.Shape, boolean);
    Code:
       0: iload_3
       1: ifeq          22
       4: aload_0
       5: invokevirtual #25                 // Method getStroke:()Ljava/awt/Stroke;
       8: ifnull        22
      11: aload_0
      12: invokevirtual #25                 // Method getStroke:()Ljava/awt/Stroke;
      15: aload_2
      16: invokeinterface #26,  2           // InterfaceMethod java/awt/Stroke.createStrokedShape:(Ljava/awt/Shape;)Ljava/awt/Shape;
      21: astore_2
      22: aload_0
      23: invokevirtual #27                 // Method getTransform:()Ljava/awt/geom/AffineTransform;
      26: ifnull        38
      29: aload_0
      30: invokevirtual #27                 // Method getTransform:()Ljava/awt/geom/AffineTransform;
      33: aload_2
      34: invokevirtual #28                 // Method java/awt/geom/AffineTransform.createTransformedShape:(Ljava/awt/Shape;)Ljava/awt/Shape;
      37: astore_2
      38: aload_2
      39: aload_1
      40: invokeinterface #29,  2           // InterfaceMethod java/awt/Shape.intersects:(Ljava/awt/geom/Rectangle2D;)Z
      45: ireturn

  public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver);
    Code:
       0: iconst_1
       1: ireturn

  public void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int);
    Code:
       0: return

  public void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform);
    Code:
       0: return

  public void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform);
    Code:
       0: return

  public void drawGlyphVector(java.awt.font.GlyphVector, float, float);
    Code:
       0: return

  public void drawString(java.text.AttributedCharacterIterator, float, float);
    Code:
       0: return

  public java.awt.geom.AffineTransform getTransform();
    Code:
       0: new           #3                  // class java/awt/geom/AffineTransform
       3: dup
       4: aload_0
       5: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       8: invokespecial #30                 // Method java/awt/geom/AffineTransform."<init>":(Ljava/awt/geom/AffineTransform;)V
      11: areturn

  public void setTransform(java.awt.geom.AffineTransform);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       4: aload_1
       5: invokevirtual #31                 // Method java/awt/geom/AffineTransform.equals:(Ljava/lang/Object;)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
      16: aload_1
      17: invokevirtual #32                 // Method java/awt/geom/AffineTransform.setTransform:(Ljava/awt/geom/AffineTransform;)V
      20: return

  public void transform(java.awt.geom.AffineTransform);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       4: aload_1
       5: invokevirtual #33                 // Method java/awt/geom/AffineTransform.concatenate:(Ljava/awt/geom/AffineTransform;)V
       8: return

  public void translate(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       4: dload_1
       5: dload_3
       6: invokevirtual #34                 // Method java/awt/geom/AffineTransform.translate:(DD)V
       9: return

  public void rotate(double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       4: dload_1
       5: invokevirtual #35                 // Method java/awt/geom/AffineTransform.rotate:(D)V
       8: return

  public void scale(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       4: dload_1
       5: dload_3
       6: invokevirtual #36                 // Method java/awt/geom/AffineTransform.scale:(DD)V
       9: return

  public void shear(double, double);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentTransform:Ljava/awt/geom/AffineTransform;
       4: dload_1
       5: dload_3
       6: invokevirtual #37                 // Method java/awt/geom/AffineTransform.shear:(DD)V
       9: return

  public java.awt.Shape getClip();
    Code:
       0: aload_0
       1: getfield      #2                  // Field userClip:Ljava/awt/Shape;
       4: areturn

  public java.awt.Rectangle getClipBounds();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getClip:()Ljava/awt/Shape;
       4: astore_1
       5: aload_1
       6: ifnull        21
       9: aload_0
      10: invokevirtual #38                 // Method getClip:()Ljava/awt/Shape;
      13: invokeinterface #39,  1           // InterfaceMethod java/awt/Shape.getBounds:()Ljava/awt/Rectangle;
      18: goto          22
      21: aconst_null
      22: areturn

  public java.awt.Rectangle getClipBounds(java.awt.Rectangle);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getClipBounds:()Ljava/awt/Rectangle;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_1
      10: aload_2
      11: invokevirtual #41                 // Method java/awt/Rectangle.setBounds:(Ljava/awt/Rectangle;)V
      14: aload_1
      15: areturn

  public void clipRect(int, int, int, int);
    Code:
       0: aload_0
       1: new           #42                 // class java/awt/Rectangle
       4: dup
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: invokespecial #43                 // Method java/awt/Rectangle."<init>":(IIII)V
      13: invokevirtual #44                 // Method clip:(Ljava/awt/Shape;)V
      16: return

  public void setClip(int, int, int, int);
    Code:
       0: aload_0
       1: new           #42                 // class java/awt/Rectangle
       4: dup
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: invokespecial #43                 // Method java/awt/Rectangle."<init>":(IIII)V
      13: invokevirtual #45                 // Method setClip:(Ljava/awt/Shape;)V
      16: return

  public void setClip(java.awt.Shape);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field userClip:Ljava/awt/Shape;
       5: return

  public void clip(java.awt.Shape);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field userClip:Ljava/awt/Shape;
       5: return

  public java.awt.Stroke getStroke();
    Code:
       0: aload_0
       1: getfield      #11                 // Field currentStroke:Ljava/awt/Stroke;
       4: areturn

  public void setStroke(java.awt.Stroke);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field currentStroke:Ljava/awt/Stroke;
       5: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: aload_1
      14: putfield      #11                 // Field currentStroke:Ljava/awt/Stroke;
      17: return

  public void setColor(java.awt.Color);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_0
       7: invokevirtual #47                 // Method getPaint:()Ljava/awt/Paint;
      10: invokevirtual #48                 // Method java/awt/Color.equals:(Ljava/lang/Object;)Z
      13: ifeq          17
      16: return
      17: aload_0
      18: aload_1
      19: putfield      #13                 // Field currentColor:Ljava/awt/Color;
      22: aload_0
      23: aload_1
      24: putfield      #14                 // Field currentPaint:Ljava/awt/Paint;
      27: return

  public void setPaint(java.awt.Paint);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_0
       7: invokevirtual #47                 // Method getPaint:()Ljava/awt/Paint;
      10: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ifeq          17
      16: return
      17: aload_1
      18: instanceof    #49                 // class java/awt/Color
      21: ifeq          32
      24: aload_0
      25: aload_1
      26: checkcast     #49                 // class java/awt/Color
      29: putfield      #13                 // Field currentColor:Ljava/awt/Color;
      32: aload_0
      33: aload_1
      34: putfield      #14                 // Field currentPaint:Ljava/awt/Paint;
      37: return

  public java.awt.font.FontRenderContext getFontRenderContext();
    Code:
       0: getstatic     #50                 // Field java/awt/RenderingHints.VALUE_TEXT_ANTIALIAS_ON:Ljava/lang/Object;
       3: aload_0
       4: getstatic     #51                 // Field java/awt/RenderingHints.KEY_TEXT_ANTIALIASING:Ljava/awt/RenderingHints$Key;
       7: invokevirtual #52                 // Method getRenderingHint:(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;
      10: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: istore_1
      14: getstatic     #53                 // Field java/awt/RenderingHints.VALUE_FRACTIONALMETRICS_ON:Ljava/lang/Object;
      17: aload_0
      18: getstatic     #54                 // Field java/awt/RenderingHints.KEY_FRACTIONALMETRICS:Ljava/awt/RenderingHints$Key;
      21: invokevirtual #52                 // Method getRenderingHint:(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;
      24: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: istore_2
      28: new           #55                 // class java/awt/font/FontRenderContext
      31: dup
      32: new           #3                  // class java/awt/geom/AffineTransform
      35: dup
      36: invokespecial #4                  // Method java/awt/geom/AffineTransform."<init>":()V
      39: iload_1
      40: iload_2
      41: invokespecial #56                 // Method java/awt/font/FontRenderContext."<init>":(Ljava/awt/geom/AffineTransform;ZZ)V
      44: areturn

  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
    Code:
       0: invokestatic  #57                 // Method java/awt/Toolkit.getDefaultToolkit:()Ljava/awt/Toolkit;
       3: aload_1
       4: invokevirtual #58                 // Method java/awt/Toolkit.getFontMetrics:(Ljava/awt/Font;)Ljava/awt/FontMetrics;
       7: areturn

  public java.awt.RenderingHints getRenderingHints();
    Code:
       0: aload_0
       1: getfield      #22                 // Field hints:Ljava/awt/RenderingHints;
       4: invokevirtual #59                 // Method java/awt/RenderingHints.clone:()Ljava/lang/Object;
       7: checkcast     #20                 // class java/awt/RenderingHints
      10: areturn

  public void addRenderingHints(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: getfield      #22                 // Field hints:Ljava/awt/RenderingHints;
       4: aload_1
       5: invokevirtual #60                 // Method java/awt/RenderingHints.putAll:(Ljava/util/Map;)V
       8: return

  public void setRenderingHints(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: getfield      #22                 // Field hints:Ljava/awt/RenderingHints;
       4: invokevirtual #61                 // Method java/awt/RenderingHints.clear:()V
       7: aload_0
       8: getfield      #22                 // Field hints:Ljava/awt/RenderingHints;
      11: aload_1
      12: invokevirtual #60                 // Method java/awt/RenderingHints.putAll:(Ljava/util/Map;)V
      15: return

  public java.lang.Object getRenderingHint(java.awt.RenderingHints$Key);
    Code:
       0: aload_0
       1: getfield      #22                 // Field hints:Ljava/awt/RenderingHints;
       4: aload_1
       5: invokevirtual #62                 // Method java/awt/RenderingHints.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     9
       8: return
       9: aload_0
      10: getfield      #22                 // Field hints:Ljava/awt/RenderingHints;
      13: aload_1
      14: aload_2
      15: invokevirtual #63                 // Method java/awt/RenderingHints.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  public void setFont(java.awt.Font);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #19                 // Field currentFont:Ljava/awt/Font;
       8: aload_1
       9: invokevirtual #64                 // Method java/awt/Font.equals:(Ljava/lang/Object;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: aload_1
      18: putfield      #19                 // Field currentFont:Ljava/awt/Font;
      21: return

  public java.awt.Composite getComposite();
    Code:
       0: aload_0
       1: getfield      #8                  // Field currentComposite:Ljava/awt/Composite;
       4: areturn

  public void setComposite(java.awt.Composite);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: aload_0
       6: invokevirtual #65                 // Method getComposite:()Ljava/awt/Composite;
       9: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field currentComposite:Ljava/awt/Composite;
      21: return

  public void draw(java.awt.Shape);
    Code:
       0: return

  public void fill(java.awt.Shape);
    Code:
       0: return

  public java.awt.GraphicsConfiguration getDeviceConfiguration();
    Code:
       0: invokestatic  #66                 // Method java/awt/GraphicsEnvironment.getLocalGraphicsEnvironment:()Ljava/awt/GraphicsEnvironment;
       3: invokevirtual #67                 // Method java/awt/GraphicsEnvironment.getDefaultScreenDevice:()Ljava/awt/GraphicsDevice;
       6: invokevirtual #68                 // Method java/awt/GraphicsDevice.getDefaultConfiguration:()Ljava/awt/GraphicsConfiguration;
       9: areturn

  public java.awt.Graphics create();
    Code:
       0: aload_0
       1: areturn

  public void setPaintMode();
    Code:
       0: return

  public void setXORMode(java.awt.Color);
    Code:
       0: return

  public void copyArea(int, int, int, int, int, int);
    Code:
       0: return

  public void dispose();
    Code:
       0: return
}
