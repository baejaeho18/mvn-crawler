Compiled from "DeamonThreadFactory.java"
public class org.webswing.toolkit.util.DeamonThreadFactory implements java.util.concurrent.ThreadFactory {
  private final java.lang.String name;

  private org.webswing.toolkit.util.DeamonThreadFactory(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: return

  public static java.util.concurrent.ThreadFactory getInstance(java.lang.String);
    Code:
       0: new           #3                  // class org/webswing/toolkit/util/DeamonThreadFactory
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: invokestatic  #5                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       3: aload_1
       4: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       9: astore_2
      10: aload_2
      11: iconst_1
      12: invokevirtual #7                  // Method java/lang/Thread.setDaemon:(Z)V
      15: aload_2
      16: aload_0
      17: getfield      #2                  // Field name:Ljava/lang/String;
      20: invokevirtual #8                  // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      23: aload_2
      24: areturn
}
