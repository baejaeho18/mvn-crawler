Compiled from "WebDataTransfer.java"
public class org.webswing.toolkit.WebDataTransfer extends sun.awt.datatransfer.DataTransferer {
  private static org.webswing.toolkit.WebDataTransfer transfer;

  private final sun.awt.datatransfer.ToolkitThreadBlockedHandler handler;

  public org.webswing.toolkit.WebDataTransfer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method sun/awt/datatransfer/DataTransferer."<init>":()V
       4: aload_0
       5: new           #2                  // class org/webswing/toolkit/WebToolkitThreadBlockedHandler
       8: dup
       9: invokespecial #3                  // Method org/webswing/toolkit/WebToolkitThreadBlockedHandler."<init>":()V
      12: putfield      #4                  // Field handler:Lsun/awt/datatransfer/ToolkitThreadBlockedHandler;
      15: return

  public static org.webswing.toolkit.WebDataTransfer getInstanceImpl();
    Code:
       0: getstatic     #5                  // Field transfer:Lorg/webswing/toolkit/WebDataTransfer;
       3: ifnonnull     37
       6: ldc           #6                  // class org/webswing/toolkit/WebDataTransfer
       8: dup
       9: astore_0
      10: monitorenter
      11: getstatic     #5                  // Field transfer:Lorg/webswing/toolkit/WebDataTransfer;
      14: ifnonnull     27
      17: new           #6                  // class org/webswing/toolkit/WebDataTransfer
      20: dup
      21: invokespecial #7                  // Method "<init>":()V
      24: putstatic     #5                  // Field transfer:Lorg/webswing/toolkit/WebDataTransfer;
      27: aload_0
      28: monitorexit
      29: goto          37
      32: astore_1
      33: aload_0
      34: monitorexit
      35: aload_1
      36: athrow
      37: getstatic     #5                  // Field transfer:Lorg/webswing/toolkit/WebDataTransfer;
      40: areturn
    Exception table:
       from    to  target type
          11    29    32   any
          32    35    32   any

  public java.lang.String getDefaultUnicodeEncoding();
    Code:
       0: ldc           #8                  // String utf-16
       2: areturn

  public boolean isLocaleDependentTextFormat(long);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isFileFormat(long);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isImageFormat(long);
    Code:
       0: iconst_0
       1: ireturn

  protected java.lang.Long getFormatForNativeAsLong(java.lang.String);
    Code:
       0: lconst_1
       1: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       4: areturn

  protected java.lang.String getNativeForFormat(long);
    Code:
       0: ldc           #10                 // String
       2: areturn

  protected java.lang.String[] dragQueryFile(byte[]);
    Code:
       0: aconst_null
       1: areturn

  protected java.awt.Image platformImageBytesToImage(byte[], long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  protected java.awt.Image platformImageBytesOrStreamToImage(java.io.InputStream, byte[], long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  protected byte[] imageToPlatformBytes(java.awt.Image, long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public sun.awt.datatransfer.ToolkitThreadBlockedHandler getToolkitThreadBlockedHandler();
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Lsun/awt/datatransfer/ToolkitThreadBlockedHandler;
       4: areturn

  protected java.io.ByteArrayOutputStream convertFileListToBytes(java.util.ArrayList<java.lang.String>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn
}
