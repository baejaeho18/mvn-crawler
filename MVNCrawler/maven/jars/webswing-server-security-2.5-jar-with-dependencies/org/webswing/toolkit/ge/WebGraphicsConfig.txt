Compiled from "WebGraphicsConfig.java"
public class org.webswing.toolkit.ge.WebGraphicsConfig extends sun.awt.image.BufferedImageGraphicsConfig {
  org.webswing.toolkit.ge.WebScreenDevice device;

  public static org.webswing.toolkit.ge.WebGraphicsConfig getWebGraphicsConfig(int, int);
    Code:
       0: new           #1                  // class org/webswing/toolkit/ge/WebGraphicsConfig
       3: dup
       4: iload_0
       5: iload_1
       6: invokespecial #2                  // Method "<init>":(II)V
       9: areturn

  private org.webswing.toolkit.ge.WebGraphicsConfig(int, int);
    Code:
       0: aload_0
       1: new           #3                  // class java/awt/image/BufferedImage
       4: dup
       5: iload_1
       6: iload_2
       7: iconst_2
       8: invokespecial #4                  // Method java/awt/image/BufferedImage."<init>":(III)V
      11: aconst_null
      12: invokespecial #5                  // Method sun/awt/image/BufferedImageGraphicsConfig."<init>":(Ljava/awt/image/BufferedImage;Ljava/awt/Component;)V
      15: return

  public java.awt.GraphicsDevice getDevice();
    Code:
       0: aload_0
       1: getfield      #6                  // Field device:Lorg/webswing/toolkit/ge/WebScreenDevice;
       4: ifnonnull     23
       7: aload_0
       8: new           #7                  // class org/webswing/toolkit/ge/WebScreenDevice
      11: dup
      12: aload_0
      13: invokespecial #8                  // Method sun/awt/image/BufferedImageGraphicsConfig.getDevice:()Ljava/awt/GraphicsDevice;
      16: aload_0
      17: invokespecial #9                  // Method org/webswing/toolkit/ge/WebScreenDevice."<init>":(Ljava/awt/GraphicsDevice;Ljava/awt/GraphicsConfiguration;)V
      20: putfield      #6                  // Field device:Lorg/webswing/toolkit/ge/WebScreenDevice;
      23: aload_0
      24: getfield      #6                  // Field device:Lorg/webswing/toolkit/ge/WebScreenDevice;
      27: areturn

  public java.awt.Image createAcceleratedImage(java.awt.Component, int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #10                 // Method getColorModel:(I)Ljava/awt/image/ColorModel;
       5: astore        4
       7: aload         4
       9: iload_2
      10: iload_3
      11: invokevirtual #11                 // Method java/awt/image/ColorModel.createCompatibleWritableRaster:(II)Ljava/awt/image/WritableRaster;
      14: astore        5
      16: new           #12                 // class sun/awt/image/OffScreenImage
      19: dup
      20: aload_1
      21: aload         4
      23: aload         5
      25: aload         4
      27: invokevirtual #13                 // Method java/awt/image/ColorModel.isAlphaPremultiplied:()Z
      30: invokespecial #14                 // Method sun/awt/image/OffScreenImage."<init>":(Ljava/awt/Component;Ljava/awt/image/ColorModel;Ljava/awt/image/WritableRaster;Z)V
      33: areturn

  public java.awt.image.VolatileImage createCompatibleVolatileImage(int, int, java.awt.ImageCapabilities, int) throws java.awt.AWTException;
    Code:
       0: invokestatic  #15                 // Method org/webswing/toolkit/util/Util.isDD:()Z
       3: ifeq          20
       6: invokestatic  #16                 // Method org/webswing/toolkit/util/Services.getDirectDrawService:()Lorg/webswing/ext/services/DirectDrawService;
       9: iload_1
      10: iload_2
      11: aload_3
      12: iload         4
      14: invokeinterface #17,  5           // InterfaceMethod org/webswing/ext/services/DirectDrawService.createVolatileImage:(IILjava/awt/ImageCapabilities;I)Ljava/awt/image/VolatileImage;
      19: areturn
      20: aload_0
      21: iload_1
      22: iload_2
      23: aload_3
      24: iload         4
      26: invokespecial #18                 // Method sun/awt/image/BufferedImageGraphicsConfig.createCompatibleVolatileImage:(IILjava/awt/ImageCapabilities;I)Ljava/awt/image/VolatileImage;
      29: areturn
}
