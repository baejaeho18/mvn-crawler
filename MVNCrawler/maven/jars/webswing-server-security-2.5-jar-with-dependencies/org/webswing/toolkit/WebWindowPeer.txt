Compiled from "WebWindowPeer.java"
public class org.webswing.toolkit.WebWindowPeer extends org.webswing.toolkit.WebContainerPeer implements java.awt.peer.WindowPeer {
  public org.webswing.toolkit.WebWindowPeer(java.awt.Window);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/webswing/toolkit/WebContainerPeer."<init>":(Ljava/awt/Container;)V
       5: aload_1
       6: invokevirtual #2                  // Method java/awt/Window.getFont:()Ljava/awt/Font;
       9: astore_2
      10: aload_2
      11: ifnonnull     21
      14: aload_1
      15: getstatic     #3                  // Field org/webswing/toolkit/WebToolkit.defaultFont:Ljava/awt/Font;
      18: invokevirtual #4                  // Method java/awt/Window.setFont:(Ljava/awt/Font;)V
      21: return

  public void toFront();
    Code:
       0: invokestatic  #5                  // Method org/webswing/toolkit/extra/WindowManager.getInstance:()Lorg/webswing/toolkit/extra/WindowManager;
       3: aload_0
       4: getfield      #6                  // Field target:Ljava/lang/Object;
       7: checkcast     #7                  // class java/awt/Window
      10: invokevirtual #8                  // Method org/webswing/toolkit/extra/WindowManager.bringToFront:(Ljava/awt/Window;)V
      13: return

  public void toBack();
    Code:
       0: invokestatic  #5                  // Method org/webswing/toolkit/extra/WindowManager.getInstance:()Lorg/webswing/toolkit/extra/WindowManager;
       3: aload_0
       4: getfield      #6                  // Field target:Ljava/lang/Object;
       7: checkcast     #7                  // class java/awt/Window
      10: invokevirtual #9                  // Method org/webswing/toolkit/extra/WindowManager.bringToBack:(Ljava/awt/Window;)V
      13: return

  public void setAlwaysOnTop(boolean);
    Code:
       0: invokestatic  #5                  // Method org/webswing/toolkit/extra/WindowManager.getInstance:()Lorg/webswing/toolkit/extra/WindowManager;
       3: aload_0
       4: getfield      #6                  // Field target:Ljava/lang/Object;
       7: checkcast     #7                  // class java/awt/Window
      10: invokevirtual #8                  // Method org/webswing/toolkit/extra/WindowManager.bringToFront:(Ljava/awt/Window;)V
      13: return

  public void updateFocusableWindowState();
    Code:
       0: return

  public boolean requestWindowFocus();
    Code:
       0: invokestatic  #10                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
       3: invokevirtual #11                 // Method org/webswing/toolkit/WebToolkit.getWindowManager:()Lorg/webswing/toolkit/extra/WindowManager;
       6: aload_0
       7: getfield      #6                  // Field target:Ljava/lang/Object;
      10: checkcast     #7                  // class java/awt/Window
      13: invokevirtual #12                 // Method org/webswing/toolkit/extra/WindowManager.activateWindow:(Ljava/awt/Window;)V
      16: iconst_1
      17: ireturn

  public void setModalBlocked(java.awt.Dialog, boolean);
    Code:
       0: return

  public void updateMinimumSize();
    Code:
       0: return

  public void updateIconImages();
    Code:
       0: return

  public void setOpacity(float);
    Code:
       0: return

  public void setOpaque(boolean);
    Code:
       0: return

  public void repositionSecurityWarning();
    Code:
       0: return

  public void updateWindow();
    Code:
       0: return

  public void show();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isJFileChooserDialog:()Z
       4: ifeq          17
       7: invokestatic  #10                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      10: invokevirtual #14                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
      13: aload_0
      14: invokevirtual #15                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyFileDialogActive:(Lorg/webswing/toolkit/WebWindowPeer;)V
      17: invokestatic  #10                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      20: invokevirtual #11                 // Method org/webswing/toolkit/WebToolkit.getWindowManager:()Lorg/webswing/toolkit/extra/WindowManager;
      23: aload_0
      24: getfield      #6                  // Field target:Ljava/lang/Object;
      27: checkcast     #7                  // class java/awt/Window
      30: invokevirtual #12                 // Method org/webswing/toolkit/extra/WindowManager.activateWindow:(Ljava/awt/Window;)V
      33: return

  public void hide();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isJFileChooserDialog:()Z
       4: ifeq          17
       7: invokestatic  #10                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      10: invokevirtual #14                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
      13: aload_0
      14: invokevirtual #16                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyFileDialogHidden:(Lorg/webswing/toolkit/WebWindowPeer;)V
      17: invokestatic  #10                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
      20: invokevirtual #11                 // Method org/webswing/toolkit/WebToolkit.getWindowManager:()Lorg/webswing/toolkit/extra/WindowManager;
      23: aload_0
      24: getfield      #6                  // Field target:Ljava/lang/Object;
      27: checkcast     #7                  // class java/awt/Window
      30: invokevirtual #17                 // Method org/webswing/toolkit/extra/WindowManager.removeWindow:(Ljava/awt/Window;)V
      33: aload_0
      34: invokevirtual #18                 // Method notifyWindowClosed:()V
      37: return

  public void setTitle(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method updateWindowDecorationImage:()V
       4: invokestatic  #10                 // Method org/webswing/toolkit/util/Util.getWebToolkit:()Lorg/webswing/toolkit/WebToolkit;
       7: invokevirtual #14                 // Method org/webswing/toolkit/WebToolkit.getPaintDispatcher:()Lorg/webswing/dispatch/WebPaintDispatcher;
      10: aload_0
      11: invokevirtual #20                 // Method getGuid:()Ljava/lang/String;
      14: new           #21                 // class java/awt/Rectangle
      17: dup
      18: iconst_0
      19: iconst_0
      20: aload_0
      21: invokevirtual #22                 // Method getBounds:()Ljava/awt/Rectangle;
      24: getfield      #23                 // Field java/awt/Rectangle.width:I
      27: aload_0
      28: invokevirtual #24                 // Method getInsets:()Ljava/awt/Insets;
      31: getfield      #25                 // Field java/awt/Insets.top:I
      34: invokespecial #26                 // Method java/awt/Rectangle."<init>":(IIII)V
      37: invokevirtual #27                 // Method org/webswing/dispatch/WebPaintDispatcher.notifyWindowAreaRepainted:(Ljava/lang/String;Ljava/awt/Rectangle;)V
      40: return

  public void setResizable(boolean);
    Code:
       0: return

  protected java.awt.Point validate(int, int, int, int);
    Code:
       0: ldc           #29                 // String webswing.disableWindowPositionValidation
       2: invokestatic  #30                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: ifeq          18
       8: new           #31                 // class java/awt/Point
      11: dup
      12: iload_1
      13: iload_2
      14: invokespecial #32                 // Method java/awt/Point."<init>":(II)V
      17: areturn
      18: new           #31                 // class java/awt/Point
      21: dup
      22: iload_1
      23: iload_2
      24: invokespecial #32                 // Method java/awt/Point."<init>":(II)V
      27: astore        5
      29: iload_3
      30: ifne          41
      33: iload         4
      35: ifne          41
      38: aload         5
      40: areturn
      41: invokestatic  #33                 // Method java/awt/Toolkit.getDefaultToolkit:()Ljava/awt/Toolkit;
      44: invokevirtual #34                 // Method java/awt/Toolkit.getScreenSize:()Ljava/awt/Dimension;
      47: astore        6
      49: aload_0
      50: invokevirtual #24                 // Method getInsets:()Ljava/awt/Insets;
      53: astore        7
      55: iload_2
      56: ifge          65
      59: aload         5
      61: iconst_0
      62: putfield      #35                 // Field java/awt/Point.y:I
      65: iload_2
      66: aload         6
      68: getfield      #36                 // Field java/awt/Dimension.height:I
      71: aload         7
      73: getfield      #25                 // Field java/awt/Insets.top:I
      76: isub
      77: if_icmple     96
      80: aload         5
      82: aload         6
      84: getfield      #36                 // Field java/awt/Dimension.height:I
      87: aload         7
      89: getfield      #25                 // Field java/awt/Insets.top:I
      92: isub
      93: putfield      #35                 // Field java/awt/Point.y:I
      96: iload_1
      97: iload_3
      98: bipush        40
     100: isub
     101: iconst_m1
     102: imul
     103: if_icmpge     117
     106: aload         5
     108: iload_3
     109: bipush        40
     111: isub
     112: iconst_m1
     113: imul
     114: putfield      #37                 // Field java/awt/Point.x:I
     117: iload_1
     118: aload         6
     120: getfield      #38                 // Field java/awt/Dimension.width:I
     123: bipush        40
     125: isub
     126: if_icmple     142
     129: aload         5
     131: aload         6
     133: getfield      #38                 // Field java/awt/Dimension.width:I
     136: bipush        40
     138: isub
     139: putfield      #37                 // Field java/awt/Point.x:I
     142: aload_0
     143: getfield      #6                  // Field target:Ljava/lang/Object;
     146: instanceof    #39                 // class java/awt/Frame
     149: ifeq          179
     152: aload_0
     153: getfield      #6                  // Field target:Ljava/lang/Object;
     156: checkcast     #39                 // class java/awt/Frame
     159: invokevirtual #40                 // Method java/awt/Frame.getExtendedState:()I
     162: bipush        6
     164: if_icmpne     179
     167: aload         5
     169: iconst_0
     170: putfield      #37                 // Field java/awt/Point.x:I
     173: aload         5
     175: iconst_0
     176: putfield      #35                 // Field java/awt/Point.y:I
     179: aload         5
     181: getfield      #37                 // Field java/awt/Point.x:I
     184: iload_1
     185: if_icmpne     197
     188: aload         5
     190: getfield      #35                 // Field java/awt/Point.y:I
     193: iload_2
     194: if_icmpeq     209
     197: aload_0
     198: getfield      #6                  // Field target:Ljava/lang/Object;
     201: checkcast     #41                 // class java/awt/Component
     204: aload         5
     206: invokevirtual #42                 // Method java/awt/Component.setLocation:(Ljava/awt/Point;)V
     209: aload         5
     211: areturn

  public void updateAlwaysOnTopState();
    Code:
       0: return

  public boolean isJFileChooserDialog();
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method org/webswing/toolkit/util/Util.discoverFileChooser:(Lorg/webswing/toolkit/WebWindowPeer;)Ljavax/swing/JFileChooser;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
