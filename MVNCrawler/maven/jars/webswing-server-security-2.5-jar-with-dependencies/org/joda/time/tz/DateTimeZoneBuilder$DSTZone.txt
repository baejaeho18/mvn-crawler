Compiled from "DateTimeZoneBuilder.java"
final class org.joda.time.tz.DateTimeZoneBuilder$DSTZone extends org.joda.time.DateTimeZone {
  private static final long serialVersionUID;

  final int iStandardOffset;

  final org.joda.time.tz.DateTimeZoneBuilder$Recurrence iStartRecurrence;

  final org.joda.time.tz.DateTimeZoneBuilder$Recurrence iEndRecurrence;

  static org.joda.time.tz.DateTimeZoneBuilder$DSTZone readFrom(java.io.DataInput, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #1                  // class org/joda/time/tz/DateTimeZoneBuilder$DSTZone
       3: dup
       4: aload_1
       5: aload_0
       6: invokestatic  #2                  // Method org/joda/time/tz/DateTimeZoneBuilder.readMillis:(Ljava/io/DataInput;)J
       9: l2i
      10: aload_0
      11: invokestatic  #3                  // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.readFrom:(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      14: aload_0
      15: invokestatic  #3                  // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.readFrom:(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      18: invokespecial #4                  // Method "<init>":(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V
      21: areturn

  org.joda.time.tz.DateTimeZoneBuilder$DSTZone(java.lang.String, int, org.joda.time.tz.DateTimeZoneBuilder$Recurrence, org.joda.time.tz.DateTimeZoneBuilder$Recurrence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/joda/time/DateTimeZone."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: putfield      #6                  // Field iStandardOffset:I
      10: aload_0
      11: aload_3
      12: putfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      15: aload_0
      16: aload         4
      18: putfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      21: return

  public java.lang.String getNameKey(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #9                  // Method findMatchingRecurrence:(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       5: invokevirtual #10                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getNameKey:()Ljava/lang/String;
       8: areturn

  public int getOffset(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iStandardOffset:I
       4: aload_0
       5: lload_1
       6: invokespecial #9                  // Method findMatchingRecurrence:(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       9: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      12: iadd
      13: ireturn

  public int getStandardOffset(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iStandardOffset:I
       4: ireturn

  public boolean isFixed();
    Code:
       0: iconst_0
       1: ireturn

  public long nextTransition(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iStandardOffset:I
       4: istore_3
       5: aload_0
       6: getfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       9: astore        4
      11: aload_0
      12: getfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      15: astore        5
      17: aload         4
      19: lload_1
      20: iload_3
      21: aload         5
      23: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      26: invokevirtual #12                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.next:(JII)J
      29: lstore        6
      31: lload_1
      32: lconst_0
      33: lcmp
      34: ifle          47
      37: lload         6
      39: lconst_0
      40: lcmp
      41: ifge          47
      44: lload_1
      45: lstore        6
      47: goto          63
      50: astore        10
      52: lload_1
      53: lstore        6
      55: goto          63
      58: astore        10
      60: lload_1
      61: lstore        6
      63: aload         5
      65: lload_1
      66: iload_3
      67: aload         4
      69: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      72: invokevirtual #12                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.next:(JII)J
      75: lstore        8
      77: lload_1
      78: lconst_0
      79: lcmp
      80: ifle          93
      83: lload         8
      85: lconst_0
      86: lcmp
      87: ifge          93
      90: lload_1
      91: lstore        8
      93: goto          109
      96: astore        10
      98: lload_1
      99: lstore        8
     101: goto          109
     104: astore        10
     106: lload_1
     107: lstore        8
     109: lload         6
     111: lload         8
     113: lcmp
     114: ifle          122
     117: lload         8
     119: goto          124
     122: lload         6
     124: lreturn
    Exception table:
       from    to  target type
          17    47    50   Class java/lang/IllegalArgumentException
          17    47    58   Class java/lang/ArithmeticException
          63    93    96   Class java/lang/IllegalArgumentException
          63    93   104   Class java/lang/ArithmeticException

  public long previousTransition(long);
    Code:
       0: lload_1
       1: lconst_1
       2: ladd
       3: lstore_1
       4: aload_0
       5: getfield      #6                  // Field iStandardOffset:I
       8: istore_3
       9: aload_0
      10: getfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      13: astore        4
      15: aload_0
      16: getfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      19: astore        5
      21: aload         4
      23: lload_1
      24: iload_3
      25: aload         5
      27: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      30: invokevirtual #15                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.previous:(JII)J
      33: lstore        6
      35: lload_1
      36: lconst_0
      37: lcmp
      38: ifge          51
      41: lload         6
      43: lconst_0
      44: lcmp
      45: ifle          51
      48: lload_1
      49: lstore        6
      51: goto          67
      54: astore        10
      56: lload_1
      57: lstore        6
      59: goto          67
      62: astore        10
      64: lload_1
      65: lstore        6
      67: aload         5
      69: lload_1
      70: iload_3
      71: aload         4
      73: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      76: invokevirtual #15                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.previous:(JII)J
      79: lstore        8
      81: lload_1
      82: lconst_0
      83: lcmp
      84: ifge          97
      87: lload         8
      89: lconst_0
      90: lcmp
      91: ifle          97
      94: lload_1
      95: lstore        8
      97: goto          113
     100: astore        10
     102: lload_1
     103: lstore        8
     105: goto          113
     108: astore        10
     110: lload_1
     111: lstore        8
     113: lload         6
     115: lload         8
     117: lcmp
     118: ifle          126
     121: lload         6
     123: goto          128
     126: lload         8
     128: lconst_1
     129: lsub
     130: lreturn
    Exception table:
       from    to  target type
          21    51    54   Class java/lang/IllegalArgumentException
          21    51    62   Class java/lang/ArithmeticException
          67    97   100   Class java/lang/IllegalArgumentException
          67    97   108   Class java/lang/ArithmeticException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class org/joda/time/tz/DateTimeZoneBuilder$DSTZone
      11: ifeq          78
      14: aload_1
      15: checkcast     #1                  // class org/joda/time/tz/DateTimeZoneBuilder$DSTZone
      18: astore_2
      19: aload_0
      20: invokevirtual #16                 // Method getID:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #16                 // Method getID:()Ljava/lang/String;
      27: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          76
      33: aload_0
      34: getfield      #6                  // Field iStandardOffset:I
      37: aload_2
      38: getfield      #6                  // Field iStandardOffset:I
      41: if_icmpne     76
      44: aload_0
      45: getfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      48: aload_2
      49: getfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      52: invokevirtual #18                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.equals:(Ljava/lang/Object;)Z
      55: ifeq          76
      58: aload_0
      59: getfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      62: aload_2
      63: getfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      66: invokevirtual #18                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.equals:(Ljava/lang/Object;)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: iconst_0
      79: ireturn

  public void writeTo(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field iStandardOffset:I
       5: i2l
       6: invokestatic  #19                 // Method org/joda/time/tz/DateTimeZoneBuilder.writeMillis:(Ljava/io/DataOutput;J)V
       9: aload_0
      10: getfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      13: aload_1
      14: invokevirtual #20                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.writeTo:(Ljava/io/DataOutput;)V
      17: aload_0
      18: getfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      21: aload_1
      22: invokevirtual #20                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.writeTo:(Ljava/io/DataOutput;)V
      25: return

  private org.joda.time.tz.DateTimeZoneBuilder$Recurrence findMatchingRecurrence(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iStandardOffset:I
       4: istore_3
       5: aload_0
       6: getfield      #7                  // Field iStartRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       9: astore        4
      11: aload_0
      12: getfield      #8                  // Field iEndRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      15: astore        5
      17: aload         4
      19: lload_1
      20: iload_3
      21: aload         5
      23: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      26: invokevirtual #12                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.next:(JII)J
      29: lstore        6
      31: goto          47
      34: astore        10
      36: lload_1
      37: lstore        6
      39: goto          47
      42: astore        10
      44: lload_1
      45: lstore        6
      47: aload         5
      49: lload_1
      50: iload_3
      51: aload         4
      53: invokevirtual #11                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
      56: invokevirtual #12                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.next:(JII)J
      59: lstore        8
      61: goto          77
      64: astore        10
      66: lload_1
      67: lstore        8
      69: goto          77
      72: astore        10
      74: lload_1
      75: lstore        8
      77: lload         6
      79: lload         8
      81: lcmp
      82: ifle          90
      85: aload         4
      87: goto          92
      90: aload         5
      92: areturn
    Exception table:
       from    to  target type
          17    31    34   Class java/lang/IllegalArgumentException
          17    31    42   Class java/lang/ArithmeticException
          47    61    64   Class java/lang/IllegalArgumentException
          47    61    72   Class java/lang/ArithmeticException
}
