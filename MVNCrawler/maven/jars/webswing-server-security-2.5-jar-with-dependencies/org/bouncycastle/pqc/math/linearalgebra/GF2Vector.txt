public class org.bouncycastle.pqc.math.linearalgebra.GF2Vector extends org.bouncycastle.pqc.math.linearalgebra.Vector {
  private int[] v;

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int);
    Code:
       0: aload_0
       1: invokespecial #146                // Method org/bouncycastle/pqc/math/linearalgebra/Vector."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #73                 // class java/lang/ArithmeticException
      11: dup
      12: ldc           #1                  // String Negative length.
      14: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #124                // Field length:I
      23: aload_0
      24: iload_1
      25: bipush        31
      27: iadd
      28: iconst_5
      29: ishr
      30: newarray       int
      32: putfield      #125                // Field v:[I
      35: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #146                // Method org/bouncycastle/pqc/math/linearalgebra/Vector."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #124                // Field length:I
       9: iload_1
      10: bipush        31
      12: iadd
      13: iconst_5
      14: ishr
      15: istore_3
      16: aload_0
      17: iload_3
      18: newarray       int
      20: putfield      #125                // Field v:[I
      23: iload_3
      24: iconst_1
      25: isub
      26: istore        4
      28: iload         4
      30: iflt          50
      33: aload_0
      34: getfield      #125                // Field v:[I
      37: iload         4
      39: aload_2
      40: invokevirtual #133                // Method java/security/SecureRandom.nextInt:()I
      43: iastore
      44: iinc          4, -1
      47: goto          28
      50: iload_1
      51: bipush        31
      53: iand
      54: istore        4
      56: iload         4
      58: ifeq          78
      61: aload_0
      62: getfield      #125                // Field v:[I
      65: iload_3
      66: iconst_1
      67: isub
      68: dup2
      69: iaload
      70: iconst_1
      71: iload         4
      73: ishl
      74: iconst_1
      75: isub
      76: iand
      77: iastore
      78: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #146                // Method org/bouncycastle/pqc/math/linearalgebra/Vector."<init>":()V
       4: iload_2
       5: iload_1
       6: if_icmple     19
       9: new           #73                 // class java/lang/ArithmeticException
      12: dup
      13: ldc           #2                  // String The hamming weight is greater than the length of vector.
      15: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iload_1
      21: putfield      #124                // Field length:I
      24: iload_1
      25: bipush        31
      27: iadd
      28: iconst_5
      29: ishr
      30: istore        4
      32: aload_0
      33: iload         4
      35: newarray       int
      37: putfield      #125                // Field v:[I
      40: iload_1
      41: newarray       int
      43: astore        5
      45: iconst_0
      46: istore        6
      48: iload         6
      50: iload_1
      51: if_icmpge     67
      54: aload         5
      56: iload         6
      58: iload         6
      60: iastore
      61: iinc          6, 1
      64: goto          48
      67: iload_1
      68: istore        6
      70: iconst_0
      71: istore        7
      73: iload         7
      75: iload_2
      76: if_icmpge     115
      79: aload_3
      80: iload         6
      82: invokestatic  #145                // Method org/bouncycastle/pqc/math/linearalgebra/RandUtils.nextInt:(Ljava/security/SecureRandom;I)I
      85: istore        8
      87: aload_0
      88: aload         5
      90: iload         8
      92: iaload
      93: invokevirtual #135                // Method setBit:(I)V
      96: iinc          6, -1
      99: aload         5
     101: iload         8
     103: aload         5
     105: iload         6
     107: iaload
     108: iastore
     109: iinc          7, 1
     112: goto          73
     115: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int, int[]);
    Code:
       0: aload_0
       1: invokespecial #146                // Method org/bouncycastle/pqc/math/linearalgebra/Vector."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #73                 // class java/lang/ArithmeticException
      11: dup
      12: ldc           #7                  // String negative length
      14: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #124                // Field length:I
      23: iload_1
      24: bipush        31
      26: iadd
      27: iconst_5
      28: ishr
      29: istore_3
      30: aload_2
      31: arraylength
      32: iload_3
      33: if_icmpeq     46
      36: new           #73                 // class java/lang/ArithmeticException
      39: dup
      40: ldc           #6                  // String length mismatch
      42: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_2
      48: invokestatic  #140                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      51: putfield      #125                // Field v:[I
      54: iload_1
      55: bipush        31
      57: iand
      58: istore        4
      60: iload         4
      62: ifeq          82
      65: aload_0
      66: getfield      #125                // Field v:[I
      69: iload_3
      70: iconst_1
      71: isub
      72: dup2
      73: iaload
      74: iconst_1
      75: iload         4
      77: ishl
      78: iconst_1
      79: isub
      80: iand
      81: iastore
      82: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector(org.bouncycastle.pqc.math.linearalgebra.GF2Vector);
    Code:
       0: aload_0
       1: invokespecial #146                // Method org/bouncycastle/pqc/math/linearalgebra/Vector."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #124                // Field length:I
       9: putfield      #124                // Field length:I
      12: aload_0
      13: aload_1
      14: getfield      #125                // Field v:[I
      17: invokestatic  #140                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      20: putfield      #125                // Field v:[I
      23: return

  protected org.bouncycastle.pqc.math.linearalgebra.GF2Vector(int[], int);
    Code:
       0: aload_0
       1: invokespecial #146                // Method org/bouncycastle/pqc/math/linearalgebra/Vector."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #125                // Field v:[I
       9: aload_0
      10: iload_2
      11: putfield      #124                // Field length:I
      14: return

  public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector OS2VP(int, byte[]);
    Code:
       0: iload_0
       1: ifge          14
       4: new           #73                 // class java/lang/ArithmeticException
       7: dup
       8: ldc           #7                  // String negative length
      10: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_0
      15: bipush        7
      17: iadd
      18: iconst_3
      19: ishr
      20: istore_2
      21: aload_1
      22: arraylength
      23: iload_2
      24: if_icmple     37
      27: new           #73                 // class java/lang/ArithmeticException
      30: dup
      31: ldc           #6                  // String length mismatch
      33: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      40: dup
      41: iload_0
      42: aload_1
      43: invokestatic  #142                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.toIntArray:([B)[I
      46: invokespecial #136                // Method "<init>":(I[I)V
      49: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #124                // Field length:I
       4: bipush        7
       6: iadd
       7: iconst_3
       8: ishr
       9: istore_1
      10: aload_0
      11: getfield      #125                // Field v:[I
      14: iload_1
      15: invokestatic  #143                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.toByteArray:([II)[B
      18: areturn

  public int[] getVecArray();
    Code:
       0: aload_0
       1: getfield      #125                // Field v:[I
       4: areturn

  public int getHammingWeight();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #125                // Field v:[I
       9: arraylength
      10: if_icmpge     59
      13: aload_0
      14: getfield      #125                // Field v:[I
      17: iload_2
      18: iaload
      19: istore_3
      20: iconst_0
      21: istore        4
      23: iload         4
      25: bipush        32
      27: if_icmpge     53
      30: iload_3
      31: iconst_1
      32: iand
      33: istore        5
      35: iload         5
      37: ifeq          43
      40: iinc          1, 1
      43: iload_3
      44: iconst_1
      45: iushr
      46: istore_3
      47: iinc          4, 1
      50: goto          23
      53: iinc          2, 1
      56: goto          4
      59: iload_1
      60: ireturn

  public boolean isZero();
    Code:
       0: aload_0
       1: getfield      #125                // Field v:[I
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_1
       8: iload_1
       9: iflt          29
      12: aload_0
      13: getfield      #125                // Field v:[I
      16: iload_1
      17: iaload
      18: ifeq          23
      21: iconst_0
      22: ireturn
      23: iinc          1, -1
      26: goto          8
      29: iconst_1
      30: ireturn

  public int getBit(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #124                // Field length:I
       5: if_icmplt     16
       8: new           #74                 // class java/lang/IndexOutOfBoundsException
      11: dup
      12: invokespecial #127                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      15: athrow
      16: iload_1
      17: iconst_5
      18: ishr
      19: istore_2
      20: iload_1
      21: bipush        31
      23: iand
      24: istore_3
      25: aload_0
      26: getfield      #125                // Field v:[I
      29: iload_2
      30: iaload
      31: iconst_1
      32: iload_3
      33: ishl
      34: iand
      35: iload_3
      36: iushr
      37: ireturn

  public void setBit(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #124                // Field length:I
       5: if_icmplt     16
       8: new           #74                 // class java/lang/IndexOutOfBoundsException
      11: dup
      12: invokespecial #127                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #125                // Field v:[I
      20: iload_1
      21: iconst_5
      22: ishr
      23: dup2
      24: iaload
      25: iconst_1
      26: iload_1
      27: bipush        31
      29: iand
      30: ishl
      31: ior
      32: iastore
      33: return

  public org.bouncycastle.pqc.math.linearalgebra.Vector add(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: aload_1
       1: instanceof    #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       4: ifne          17
       7: new           #73                 // class java/lang/ArithmeticException
      10: dup
      11: ldc           #8                  // String vector is not defined over GF(2)
      13: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      21: astore_2
      22: aload_0
      23: getfield      #124                // Field length:I
      26: aload_2
      27: getfield      #124                // Field length:I
      30: if_icmpeq     43
      33: new           #73                 // class java/lang/ArithmeticException
      36: dup
      37: ldc           #6                  // String length mismatch
      39: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: checkcast     #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      47: getfield      #125                // Field v:[I
      50: invokestatic  #140                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      53: astore_3
      54: aload_3
      55: arraylength
      56: iconst_1
      57: isub
      58: istore        4
      60: iload         4
      62: iflt          85
      65: aload_3
      66: iload         4
      68: dup2
      69: iaload
      70: aload_0
      71: getfield      #125                // Field v:[I
      74: iload         4
      76: iaload
      77: ixor
      78: iastore
      79: iinc          4, -1
      82: goto          60
      85: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      88: dup
      89: aload_0
      90: getfield      #124                // Field length:I
      93: aload_3
      94: invokespecial #136                // Method "<init>":(I[I)V
      97: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Vector multiply(org.bouncycastle.pqc.math.linearalgebra.Permutation);
    Code:
       0: aload_1
       1: invokevirtual #144                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.getVector:()[I
       4: astore_2
       5: aload_0
       6: getfield      #124                // Field length:I
       9: aload_2
      10: arraylength
      11: if_icmpeq     24
      14: new           #73                 // class java/lang/ArithmeticException
      17: dup
      18: ldc           #6                  // String length mismatch
      20: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      27: dup
      28: aload_0
      29: getfield      #124                // Field length:I
      32: invokespecial #134                // Method "<init>":(I)V
      35: astore_3
      36: iconst_0
      37: istore        4
      39: iload         4
      41: aload_2
      42: arraylength
      43: if_icmpge     99
      46: aload_0
      47: getfield      #125                // Field v:[I
      50: aload_2
      51: iload         4
      53: iaload
      54: iconst_5
      55: ishr
      56: iaload
      57: iconst_1
      58: aload_2
      59: iload         4
      61: iaload
      62: bipush        31
      64: iand
      65: ishl
      66: iand
      67: istore        5
      69: iload         5
      71: ifeq          93
      74: aload_3
      75: getfield      #125                // Field v:[I
      78: iload         4
      80: iconst_5
      81: ishr
      82: dup2
      83: iaload
      84: iconst_1
      85: iload         4
      87: bipush        31
      89: iand
      90: ishl
      91: ior
      92: iastore
      93: iinc          4, 1
      96: goto          39
      99: aload_3
     100: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector extractVector(int[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: aload_1
       4: iload_2
       5: iconst_1
       6: isub
       7: iaload
       8: aload_0
       9: getfield      #124                // Field length:I
      12: if_icmple     25
      15: new           #73                 // class java/lang/ArithmeticException
      18: dup
      19: ldc           #4                  // String invalid index set
      21: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      28: dup
      29: iload_2
      30: invokespecial #134                // Method "<init>":(I)V
      33: astore_3
      34: iconst_0
      35: istore        4
      37: iload         4
      39: iload_2
      40: if_icmpge     96
      43: aload_0
      44: getfield      #125                // Field v:[I
      47: aload_1
      48: iload         4
      50: iaload
      51: iconst_5
      52: ishr
      53: iaload
      54: iconst_1
      55: aload_1
      56: iload         4
      58: iaload
      59: bipush        31
      61: iand
      62: ishl
      63: iand
      64: istore        5
      66: iload         5
      68: ifeq          90
      71: aload_3
      72: getfield      #125                // Field v:[I
      75: iload         4
      77: iconst_5
      78: ishr
      79: dup2
      80: iaload
      81: iconst_1
      82: iload         4
      84: bipush        31
      86: iand
      87: ishl
      88: ior
      89: iastore
      90: iinc          4, 1
      93: goto          37
      96: aload_3
      97: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector extractLeftVector(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #124                // Field length:I
       5: if_icmple     18
       8: new           #73                 // class java/lang/ArithmeticException
      11: dup
      12: ldc           #5                  // String invalid length
      14: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_1
      19: aload_0
      20: getfield      #124                // Field length:I
      23: if_icmpne     35
      26: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      29: dup
      30: aload_0
      31: invokespecial #137                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;)V
      34: areturn
      35: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      38: dup
      39: iload_1
      40: invokespecial #134                // Method "<init>":(I)V
      43: astore_2
      44: iload_1
      45: iconst_5
      46: ishr
      47: istore_3
      48: iload_1
      49: bipush        31
      51: iand
      52: istore        4
      54: aload_0
      55: getfield      #125                // Field v:[I
      58: iconst_0
      59: aload_2
      60: getfield      #125                // Field v:[I
      63: iconst_0
      64: iload_3
      65: invokestatic  #132                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: iload         4
      70: ifeq          92
      73: aload_2
      74: getfield      #125                // Field v:[I
      77: iload_3
      78: aload_0
      79: getfield      #125                // Field v:[I
      82: iload_3
      83: iaload
      84: iconst_1
      85: iload         4
      87: ishl
      88: iconst_1
      89: isub
      90: iand
      91: iastore
      92: aload_2
      93: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Vector extractRightVector(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #124                // Field length:I
       5: if_icmple     18
       8: new           #73                 // class java/lang/ArithmeticException
      11: dup
      12: ldc           #5                  // String invalid length
      14: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_1
      19: aload_0
      20: getfield      #124                // Field length:I
      23: if_icmpne     35
      26: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      29: dup
      30: aload_0
      31: invokespecial #137                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;)V
      34: areturn
      35: new           #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      38: dup
      39: iload_1
      40: invokespecial #134                // Method "<init>":(I)V
      43: astore_2
      44: aload_0
      45: getfield      #124                // Field length:I
      48: iload_1
      49: isub
      50: iconst_5
      51: ishr
      52: istore_3
      53: aload_0
      54: getfield      #124                // Field length:I
      57: iload_1
      58: isub
      59: bipush        31
      61: iand
      62: istore        4
      64: iload_1
      65: bipush        31
      67: iadd
      68: iconst_5
      69: ishr
      70: istore        5
      72: iload_3
      73: istore        6
      75: iload         4
      77: ifeq          192
      80: iconst_0
      81: istore        7
      83: iload         7
      85: iload         5
      87: iconst_1
      88: isub
      89: if_icmpge     132
      92: aload_2
      93: getfield      #125                // Field v:[I
      96: iload         7
      98: aload_0
      99: getfield      #125                // Field v:[I
     102: iload         6
     104: iinc          6, 1
     107: iaload
     108: iload         4
     110: iushr
     111: aload_0
     112: getfield      #125                // Field v:[I
     115: iload         6
     117: iaload
     118: bipush        32
     120: iload         4
     122: isub
     123: ishl
     124: ior
     125: iastore
     126: iinc          7, 1
     129: goto          83
     132: aload_2
     133: getfield      #125                // Field v:[I
     136: iload         5
     138: iconst_1
     139: isub
     140: aload_0
     141: getfield      #125                // Field v:[I
     144: iload         6
     146: iinc          6, 1
     149: iaload
     150: iload         4
     152: iushr
     153: iastore
     154: iload         6
     156: aload_0
     157: getfield      #125                // Field v:[I
     160: arraylength
     161: if_icmpge     207
     164: aload_2
     165: getfield      #125                // Field v:[I
     168: iload         5
     170: iconst_1
     171: isub
     172: dup2
     173: iaload
     174: aload_0
     175: getfield      #125                // Field v:[I
     178: iload         6
     180: iaload
     181: bipush        32
     183: iload         4
     185: isub
     186: ishl
     187: ior
     188: iastore
     189: goto          207
     192: aload_0
     193: getfield      #125                // Field v:[I
     196: iload_3
     197: aload_2
     198: getfield      #125                // Field v:[I
     201: iconst_0
     202: iload         5
     204: invokestatic  #132                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     207: aload_2
     208: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2mVector toExtensionFieldVector(org.bouncycastle.pqc.math.linearalgebra.GF2mField);
    Code:
       0: aload_1
       1: invokevirtual #138                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
       4: istore_2
       5: aload_0
       6: getfield      #124                // Field length:I
       9: iload_2
      10: irem
      11: ifeq          24
      14: new           #73                 // class java/lang/ArithmeticException
      17: dup
      18: ldc           #3                  // String conversion is impossible
      20: invokespecial #126                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #124                // Field length:I
      28: iload_2
      29: idiv
      30: istore_3
      31: iload_3
      32: newarray       int
      34: astore        4
      36: iconst_0
      37: istore        5
      39: iload_3
      40: iconst_1
      41: isub
      42: istore        6
      44: iload         6
      46: iflt          122
      49: aload_1
      50: invokevirtual #138                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
      53: iconst_1
      54: isub
      55: istore        7
      57: iload         7
      59: iflt          116
      62: iload         5
      64: iconst_5
      65: iushr
      66: istore        8
      68: iload         5
      70: bipush        31
      72: iand
      73: istore        9
      75: aload_0
      76: getfield      #125                // Field v:[I
      79: iload         8
      81: iaload
      82: iload         9
      84: iushr
      85: iconst_1
      86: iand
      87: istore        10
      89: iload         10
      91: iconst_1
      92: if_icmpne     107
      95: aload         4
      97: iload         6
      99: dup2
     100: iaload
     101: iconst_1
     102: iload         7
     104: ishl
     105: ixor
     106: iastore
     107: iinc          5, 1
     110: iinc          7, -1
     113: goto          57
     116: iinc          6, -1
     119: goto          44
     122: new           #81                 // class org/bouncycastle/pqc/math/linearalgebra/GF2mVector
     125: dup
     126: aload_1
     127: aload         4
     129: invokespecial #139                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mVector."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
     132: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #79                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      13: astore_2
      14: aload_0
      15: getfield      #124                // Field length:I
      18: aload_2
      19: getfield      #124                // Field length:I
      22: if_icmpne     43
      25: aload_0
      26: getfield      #125                // Field v:[I
      29: aload_2
      30: getfield      #125                // Field v:[I
      33: invokestatic  #141                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.equals:([I[I)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #124                // Field length:I
       4: istore_1
       5: iload_1
       6: bipush        31
       8: imul
       9: aload_0
      10: getfield      #125                // Field v:[I
      13: invokevirtual #128                // Method java/lang/Object.hashCode:()I
      16: iadd
      17: istore_1
      18: iload_1
      19: ireturn

  public java.lang.String toString();
    Code:
       0: new           #76                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #129                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #124                // Field length:I
      15: if_icmpge     87
      18: iload_2
      19: ifeq          36
      22: iload_2
      23: bipush        31
      25: iand
      26: ifne          36
      29: aload_1
      30: bipush        32
      32: invokevirtual #131                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      35: pop
      36: iload_2
      37: iconst_5
      38: ishr
      39: istore_3
      40: iload_2
      41: bipush        31
      43: iand
      44: istore        4
      46: aload_0
      47: getfield      #125                // Field v:[I
      50: iload_3
      51: iaload
      52: iconst_1
      53: iload         4
      55: ishl
      56: iand
      57: istore        5
      59: iload         5
      61: ifne          74
      64: aload_1
      65: bipush        48
      67: invokevirtual #131                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      70: pop
      71: goto          81
      74: aload_1
      75: bipush        49
      77: invokevirtual #131                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      80: pop
      81: iinc          2, 1
      84: goto          10
      87: aload_1
      88: invokevirtual #130                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      91: areturn
}
