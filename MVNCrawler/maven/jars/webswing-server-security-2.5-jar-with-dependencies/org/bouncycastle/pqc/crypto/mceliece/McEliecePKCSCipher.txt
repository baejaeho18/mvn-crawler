public class org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher implements org.bouncycastle.pqc.crypto.MessageEncryptor {
  public static final java.lang.String OID;

  private java.security.SecureRandom sr;

  private int n;

  private int k;

  private int t;

  public int maxPlainTextSize;

  public int cipherTextSize;

  org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters key;

  public org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSCipher();
    Code:
       0: aload_0
       1: invokespecial #154                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: iload_1
       1: ifeq          82
       4: aload_2
       5: instanceof    #72                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       8: ifeq          49
      11: aload_2
      12: checkcast     #72                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #157                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      21: putfield      #150                // Field sr:Ljava/security/SecureRandom;
      24: aload_0
      25: aload_3
      26: invokevirtual #158                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      29: checkcast     #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
      32: putfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      35: aload_0
      36: aload_0
      37: getfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      40: checkcast     #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
      43: invokevirtual #160                // Method initCipherEncrypt:(Lorg/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters;)V
      46: goto          101
      49: aload_0
      50: new           #71                 // class java/security/SecureRandom
      53: dup
      54: invokespecial #156                // Method java/security/SecureRandom."<init>":()V
      57: putfield      #150                // Field sr:Ljava/security/SecureRandom;
      60: aload_0
      61: aload_2
      62: checkcast     #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
      65: putfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      68: aload_0
      69: aload_0
      70: getfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      73: checkcast     #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
      76: invokevirtual #160                // Method initCipherEncrypt:(Lorg/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters;)V
      79: goto          101
      82: aload_0
      83: aload_2
      84: checkcast     #75                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
      87: putfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      90: aload_0
      91: aload_0
      92: getfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      95: checkcast     #75                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
      98: invokevirtual #159                // Method initCipherDecrypt:(Lorg/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters;)V
     101: return

  public int getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceKeyParameters);
    Code:
       0: aload_1
       1: instanceof    #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
       4: ifeq          15
       7: aload_1
       8: checkcast     #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
      11: invokevirtual #173                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters.getN:()I
      14: ireturn
      15: aload_1
      16: instanceof    #75                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
      19: ifeq          30
      22: aload_1
      23: checkcast     #75                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
      26: invokevirtual #164                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getN:()I
      29: ireturn
      30: new           #68                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #2                  // String unsupported type
      36: invokespecial #153                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow

  public void initCipherEncrypt(org.bouncycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #150                // Field sr:Ljava/security/SecureRandom;
       5: ifnull        15
       8: aload_0
       9: getfield      #150                // Field sr:Ljava/security/SecureRandom;
      12: goto          22
      15: new           #71                 // class java/security/SecureRandom
      18: dup
      19: invokespecial #156                // Method java/security/SecureRandom."<init>":()V
      22: putfield      #150                // Field sr:Ljava/security/SecureRandom;
      25: aload_0
      26: aload_1
      27: invokevirtual #173                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters.getN:()I
      30: putfield      #148                // Field n:I
      33: aload_0
      34: aload_1
      35: invokevirtual #172                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters.getK:()I
      38: putfield      #146                // Field k:I
      41: aload_0
      42: aload_1
      43: invokevirtual #174                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters.getT:()I
      46: putfield      #149                // Field t:I
      49: aload_0
      50: aload_0
      51: getfield      #148                // Field n:I
      54: iconst_3
      55: ishr
      56: putfield      #145                // Field cipherTextSize:I
      59: aload_0
      60: aload_0
      61: getfield      #146                // Field k:I
      64: iconst_3
      65: ishr
      66: putfield      #147                // Field maxPlainTextSize:I
      69: return

  public void initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #164                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getN:()I
       5: putfield      #148                // Field n:I
       8: aload_0
       9: aload_1
      10: invokevirtual #163                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getK:()I
      13: putfield      #146                // Field k:I
      16: aload_0
      17: aload_0
      18: getfield      #146                // Field k:I
      21: iconst_3
      22: ishr
      23: putfield      #147                // Field maxPlainTextSize:I
      26: aload_0
      27: aload_0
      28: getfield      #148                // Field n:I
      31: iconst_3
      32: ishr
      33: putfield      #145                // Field cipherTextSize:I
      36: return

  public byte[] messageEncrypt(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #162                // Method computeMessageRepresentative:([B)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
       5: astore_2
       6: new           #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       9: dup
      10: aload_0
      11: getfield      #148                // Field n:I
      14: aload_0
      15: getfield      #149                // Field t:I
      18: aload_0
      19: getfield      #150                // Field sr:Ljava/security/SecureRandom;
      22: invokespecial #179                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":(IILjava/security/SecureRandom;)V
      25: astore_3
      26: aload_0
      27: getfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      30: checkcast     #76                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters
      33: invokevirtual #175                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters.getG:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      36: astore        4
      38: aload         4
      40: aload_2
      41: invokevirtual #176                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.leftMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Vector;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
      44: astore        5
      46: aload         5
      48: aload_3
      49: invokevirtual #187                // Method org/bouncycastle/pqc/math/linearalgebra/Vector.add:(Lorg/bouncycastle/pqc/math/linearalgebra/Vector;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
      52: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      55: astore        6
      57: aload         6
      59: invokevirtual #178                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getEncoded:()[B
      62: areturn

  private org.bouncycastle.pqc.math.linearalgebra.GF2Vector computeMessageRepresentative(byte[]);
    Code:
       0: aload_0
       1: getfield      #147                // Field maxPlainTextSize:I
       4: aload_0
       5: getfield      #146                // Field k:I
       8: bipush        7
      10: iand
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: iadd
      20: newarray       byte
      22: astore_2
      23: aload_1
      24: iconst_0
      25: aload_2
      26: iconst_0
      27: aload_1
      28: arraylength
      29: invokestatic  #155                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_2
      33: aload_1
      34: arraylength
      35: iconst_1
      36: bastore
      37: aload_0
      38: getfield      #146                // Field k:I
      41: aload_2
      42: invokestatic  #181                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.OS2VP:(I[B)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
      45: areturn

  public byte[] messageDecrypt(byte[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #148                // Field n:I
       4: aload_1
       5: invokestatic  #181                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.OS2VP:(I[B)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
       8: astore_2
       9: aload_0
      10: getfield      #151                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters;
      13: checkcast     #75                 // class org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters
      16: astore_3
      17: aload_3
      18: invokevirtual #167                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getField:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      21: astore        4
      23: aload_3
      24: invokevirtual #170                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getGoppaPoly:()Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      27: astore        5
      29: aload_3
      30: invokevirtual #166                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getSInv:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      33: astore        6
      35: aload_3
      36: invokevirtual #168                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getP1:()Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;
      39: astore        7
      41: aload_3
      42: invokevirtual #169                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getP2:()Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;
      45: astore        8
      47: aload_3
      48: invokevirtual #165                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getH:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      51: astore        9
      53: aload_3
      54: invokevirtual #171                // Method org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.getQInv:()[Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      57: astore        10
      59: aload         7
      61: aload         8
      63: invokevirtual #186                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;
      66: astore        11
      68: aload         11
      70: invokevirtual #185                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.computeInverse:()Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;
      73: astore        12
      75: aload_2
      76: aload         12
      78: invokevirtual #182                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.multiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
      81: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      84: astore        13
      86: aload         9
      88: aload         13
      90: invokevirtual #177                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Vector;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
      93: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      96: astore        14
      98: aload         14
     100: aload         4
     102: aload         5
     104: aload         10
     106: invokestatic  #184                // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode.syndromeDecode:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;[Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
     109: astore        15
     111: aload         13
     113: aload         15
     115: invokevirtual #183                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.add:(Lorg/bouncycastle/pqc/math/linearalgebra/Vector;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
     118: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     121: astore        16
     123: aload         16
     125: aload         7
     127: invokevirtual #182                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.multiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
     130: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     133: astore        16
     135: aload         15
     137: aload         11
     139: invokevirtual #182                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.multiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
     142: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     145: astore        15
     147: aload         16
     149: aload_0
     150: getfield      #146                // Field k:I
     153: invokevirtual #180                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.extractRightVector:(I)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
     156: astore        17
     158: aload         6
     160: aload         17
     162: invokevirtual #176                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.leftMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Vector;)Lorg/bouncycastle/pqc/math/linearalgebra/Vector;
     165: checkcast     #78                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     168: astore        18
     170: aload_0
     171: aload         18
     173: invokespecial #161                // Method computeMessage:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;)[B
     176: areturn

  private byte[] computeMessage(org.bouncycastle.pqc.math.linearalgebra.GF2Vector) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #178                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getEncoded:()[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_3
      11: iflt          26
      14: aload_2
      15: iload_3
      16: baload
      17: ifne          26
      20: iinc          3, -1
      23: goto          10
      26: aload_2
      27: iload_3
      28: baload
      29: iconst_1
      30: if_icmpeq     43
      33: new           #67                 // class java/lang/Exception
      36: dup
      37: ldc           #1                  // String Bad Padding: invalid ciphertext
      39: invokespecial #152                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_3
      44: newarray       byte
      46: astore        4
      48: aload_2
      49: iconst_0
      50: aload         4
      52: iconst_0
      53: iload_3
      54: invokestatic  #155                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: aload         4
      59: areturn
}
