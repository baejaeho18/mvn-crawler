public class org.bouncycastle.crypto.macs.Poly1305 implements org.bouncycastle.crypto.Mac {
  private static final int BLOCK_SIZE;

  private final org.bouncycastle.crypto.BlockCipher cipher;

  private final byte[] singleByte;

  private int r0;

  private int r1;

  private int r2;

  private int r3;

  private int r4;

  private int s1;

  private int s2;

  private int s3;

  private int s4;

  private int k0;

  private int k1;

  private int k2;

  private int k3;

  private final byte[] currentBlock;

  private int currentBlockOffset;

  private int h0;

  private int h1;

  private int h2;

  private int h3;

  private int h4;

  public org.bouncycastle.crypto.macs.Poly1305();
    Code:
       0: aload_0
       1: invokespecial #194                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #190                // Field singleByte:[B
      11: aload_0
      12: bipush        16
      14: newarray       byte
      16: putfield      #189                // Field currentBlock:[B
      19: aload_0
      20: iconst_0
      21: putfield      #170                // Field currentBlockOffset:I
      24: aload_0
      25: aconst_null
      26: putfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      29: return

  public org.bouncycastle.crypto.macs.Poly1305(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: invokespecial #194                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #190                // Field singleByte:[B
      11: aload_0
      12: bipush        16
      14: newarray       byte
      16: putfield      #189                // Field currentBlock:[B
      19: aload_0
      20: iconst_0
      21: putfield      #170                // Field currentBlockOffset:I
      24: aload_1
      25: invokeinterface #212,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      30: bipush        16
      32: if_icmpeq     45
      35: new           #103                // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #11                 // String Poly1305 requires a 128 bit block cipher.
      41: invokespecial #192                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: putfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      50: return

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       6: ifnull        41
       9: aload_1
      10: instanceof    #115                // class org/bouncycastle/crypto/params/ParametersWithIV
      13: ifne          26
      16: new           #103                // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #13                 // String Poly1305 requires an IV when used with a block cipher.
      22: invokespecial #192                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_1
      27: checkcast     #115                // class org/bouncycastle/crypto/params/ParametersWithIV
      30: astore_3
      31: aload_3
      32: invokevirtual #208                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      35: astore_2
      36: aload_3
      37: invokevirtual #209                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      40: astore_1
      41: aload_1
      42: instanceof    #114                // class org/bouncycastle/crypto/params/KeyParameter
      45: ifne          58
      48: new           #103                // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #12                 // String Poly1305 requires a key.
      54: invokespecial #192                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_1
      59: checkcast     #114                // class org/bouncycastle/crypto/params/KeyParameter
      62: astore_3
      63: aload_0
      64: aload_3
      65: invokevirtual #206                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      68: aload_2
      69: invokespecial #205                // Method setKey:([B[B)V
      72: aload_0
      73: invokevirtual #202                // Method reset:()V
      76: return

  private void setKey(byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: ifnull        28
       7: aload_2
       8: ifnull        18
      11: aload_2
      12: arraylength
      13: bipush        16
      15: if_icmpeq     28
      18: new           #103                // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #10                 // String Poly1305 requires a 128 bit IV.
      24: invokespecial #192                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: invokestatic  #200                // Method org/bouncycastle/crypto/generators/Poly1305KeyGenerator.checkKey:([B)V
      32: aload_1
      33: bipush        16
      35: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      38: istore_3
      39: aload_1
      40: bipush        20
      42: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      45: istore        4
      47: aload_1
      48: bipush        24
      50: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      53: istore        5
      55: aload_1
      56: bipush        28
      58: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      61: istore        6
      63: aload_0
      64: iload_3
      65: ldc           #6                  // int 67108863
      67: iand
      68: putfield      #180                // Field r0:I
      71: iload_3
      72: bipush        26
      74: iushr
      75: istore_3
      76: iload_3
      77: iload         4
      79: bipush        6
      81: ishl
      82: ior
      83: istore_3
      84: aload_0
      85: iload_3
      86: ldc           #5                  // int 67108611
      88: iand
      89: putfield      #181                // Field r1:I
      92: iload         4
      94: bipush        20
      96: iushr
      97: istore        4
      99: iload         4
     101: iload         5
     103: bipush        12
     105: ishl
     106: ior
     107: istore        4
     109: aload_0
     110: iload         4
     112: ldc           #4                  // int 67092735
     114: iand
     115: putfield      #182                // Field r2:I
     118: iload         5
     120: bipush        14
     122: iushr
     123: istore        5
     125: iload         5
     127: iload         6
     129: bipush        18
     131: ishl
     132: ior
     133: istore        5
     135: aload_0
     136: iload         5
     138: ldc           #3                  // int 66076671
     140: iand
     141: putfield      #183                // Field r3:I
     144: iload         6
     146: bipush        8
     148: iushr
     149: istore        6
     151: aload_0
     152: iload         6
     154: ldc           #1                  // int 1048575
     156: iand
     157: putfield      #184                // Field r4:I
     160: aload_0
     161: aload_0
     162: getfield      #181                // Field r1:I
     165: iconst_5
     166: imul
     167: putfield      #185                // Field s1:I
     170: aload_0
     171: aload_0
     172: getfield      #182                // Field r2:I
     175: iconst_5
     176: imul
     177: putfield      #186                // Field s2:I
     180: aload_0
     181: aload_0
     182: getfield      #183                // Field r3:I
     185: iconst_5
     186: imul
     187: putfield      #187                // Field s3:I
     190: aload_0
     191: aload_0
     192: getfield      #184                // Field r4:I
     195: iconst_5
     196: imul
     197: putfield      #188                // Field s4:I
     200: aload_0
     201: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     204: ifnonnull     213
     207: aload_1
     208: astore        7
     210: goto          255
     213: bipush        16
     215: newarray       byte
     217: astore        7
     219: aload_0
     220: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     223: iconst_1
     224: new           #114                // class org/bouncycastle/crypto/params/KeyParameter
     227: dup
     228: aload_1
     229: iconst_0
     230: bipush        16
     232: invokespecial #207                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([BII)V
     235: invokeinterface #215,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     240: aload_0
     241: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     244: aload_2
     245: iconst_0
     246: aload         7
     248: iconst_0
     249: invokeinterface #213,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     254: pop
     255: aload_0
     256: aload         7
     258: iconst_0
     259: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     262: putfield      #176                // Field k0:I
     265: aload_0
     266: aload         7
     268: iconst_4
     269: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     272: putfield      #177                // Field k1:I
     275: aload_0
     276: aload         7
     278: bipush        8
     280: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     283: putfield      #178                // Field k2:I
     286: aload_0
     287: aload         7
     289: bipush        12
     291: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     294: putfield      #179                // Field k3:I
     297: return

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: ifnonnull     12
       7: ldc           #9                  // String Poly1305
       9: goto          39
      12: new           #107                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #195                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #14                 // String Poly1305-
      21: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #191                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      28: invokeinterface #214,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      33: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #196                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public int getMacSize();
    Code:
       0: bipush        16
       2: ireturn

  public void update(byte) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #190                // Field singleByte:[B
       4: iconst_0
       5: iload_1
       6: bastore
       7: aload_0
       8: aload_0
       9: getfield      #190                // Field singleByte:[B
      12: iconst_0
      13: iconst_1
      14: invokevirtual #204                // Method update:([BII)V
      17: return

  public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload_3
       4: iload         4
       6: if_icmple     82
       9: aload_0
      10: getfield      #170                // Field currentBlockOffset:I
      13: bipush        16
      15: if_icmpne     27
      18: aload_0
      19: invokespecial #201                // Method processBlock:()V
      22: aload_0
      23: iconst_0
      24: putfield      #170                // Field currentBlockOffset:I
      27: iload_3
      28: iload         4
      30: isub
      31: bipush        16
      33: aload_0
      34: getfield      #170                // Field currentBlockOffset:I
      37: isub
      38: invokestatic  #193                // Method java/lang/Math.min:(II)I
      41: istore        5
      43: aload_1
      44: iload         4
      46: iload_2
      47: iadd
      48: aload_0
      49: getfield      #189                // Field currentBlock:[B
      52: aload_0
      53: getfield      #170                // Field currentBlockOffset:I
      56: iload         5
      58: invokestatic  #198                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: iload         4
      63: iload         5
      65: iadd
      66: istore        4
      68: aload_0
      69: dup
      70: getfield      #170                // Field currentBlockOffset:I
      73: iload         5
      75: iadd
      76: putfield      #170                // Field currentBlockOffset:I
      79: goto          3
      82: return

  private void processBlock();
    Code:
       0: aload_0
       1: getfield      #170                // Field currentBlockOffset:I
       4: bipush        16
       6: if_icmpge     45
       9: aload_0
      10: getfield      #189                // Field currentBlock:[B
      13: aload_0
      14: getfield      #170                // Field currentBlockOffset:I
      17: iconst_1
      18: bastore
      19: aload_0
      20: getfield      #170                // Field currentBlockOffset:I
      23: iconst_1
      24: iadd
      25: istore_1
      26: iload_1
      27: bipush        16
      29: if_icmpge     45
      32: aload_0
      33: getfield      #189                // Field currentBlock:[B
      36: iload_1
      37: iconst_0
      38: bastore
      39: iinc          1, 1
      42: goto          26
      45: ldc2_w        #101                // long 4294967295l
      48: aload_0
      49: getfield      #189                // Field currentBlock:[B
      52: iconst_0
      53: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      56: i2l
      57: land
      58: lstore_1
      59: ldc2_w        #101                // long 4294967295l
      62: aload_0
      63: getfield      #189                // Field currentBlock:[B
      66: iconst_4
      67: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      70: i2l
      71: land
      72: lstore_3
      73: ldc2_w        #101                // long 4294967295l
      76: aload_0
      77: getfield      #189                // Field currentBlock:[B
      80: bipush        8
      82: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      85: i2l
      86: land
      87: lstore        5
      89: ldc2_w        #101                // long 4294967295l
      92: aload_0
      93: getfield      #189                // Field currentBlock:[B
      96: bipush        12
      98: invokestatic  #211                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     101: i2l
     102: land
     103: lstore        7
     105: aload_0
     106: dup
     107: getfield      #171                // Field h0:I
     110: i2l
     111: lload_1
     112: ldc2_w        #99                 // long 67108863l
     115: land
     116: ladd
     117: l2i
     118: putfield      #171                // Field h0:I
     121: aload_0
     122: dup
     123: getfield      #172                // Field h1:I
     126: i2l
     127: lload_3
     128: bipush        32
     130: lshl
     131: lload_1
     132: lor
     133: bipush        26
     135: lushr
     136: ldc2_w        #99                 // long 67108863l
     139: land
     140: ladd
     141: l2i
     142: putfield      #172                // Field h1:I
     145: aload_0
     146: dup
     147: getfield      #173                // Field h2:I
     150: i2l
     151: lload         5
     153: bipush        32
     155: lshl
     156: lload_3
     157: lor
     158: bipush        20
     160: lushr
     161: ldc2_w        #99                 // long 67108863l
     164: land
     165: ladd
     166: l2i
     167: putfield      #173                // Field h2:I
     170: aload_0
     171: dup
     172: getfield      #174                // Field h3:I
     175: i2l
     176: lload         7
     178: bipush        32
     180: lshl
     181: lload         5
     183: lor
     184: bipush        14
     186: lushr
     187: ldc2_w        #99                 // long 67108863l
     190: land
     191: ladd
     192: l2i
     193: putfield      #174                // Field h3:I
     196: aload_0
     197: dup
     198: getfield      #175                // Field h4:I
     201: i2l
     202: lload         7
     204: bipush        8
     206: lushr
     207: ladd
     208: l2i
     209: putfield      #175                // Field h4:I
     212: aload_0
     213: getfield      #170                // Field currentBlockOffset:I
     216: bipush        16
     218: if_icmpne     232
     221: aload_0
     222: dup
     223: getfield      #175                // Field h4:I
     226: ldc           #2                  // int 16777216
     228: iadd
     229: putfield      #175                // Field h4:I
     232: aload_0
     233: getfield      #171                // Field h0:I
     236: aload_0
     237: getfield      #180                // Field r0:I
     240: invokestatic  #203                // Method mul32x32_64:(II)J
     243: aload_0
     244: getfield      #172                // Field h1:I
     247: aload_0
     248: getfield      #188                // Field s4:I
     251: invokestatic  #203                // Method mul32x32_64:(II)J
     254: ladd
     255: aload_0
     256: getfield      #173                // Field h2:I
     259: aload_0
     260: getfield      #187                // Field s3:I
     263: invokestatic  #203                // Method mul32x32_64:(II)J
     266: ladd
     267: aload_0
     268: getfield      #174                // Field h3:I
     271: aload_0
     272: getfield      #186                // Field s2:I
     275: invokestatic  #203                // Method mul32x32_64:(II)J
     278: ladd
     279: aload_0
     280: getfield      #175                // Field h4:I
     283: aload_0
     284: getfield      #185                // Field s1:I
     287: invokestatic  #203                // Method mul32x32_64:(II)J
     290: ladd
     291: lstore        9
     293: aload_0
     294: getfield      #171                // Field h0:I
     297: aload_0
     298: getfield      #181                // Field r1:I
     301: invokestatic  #203                // Method mul32x32_64:(II)J
     304: aload_0
     305: getfield      #172                // Field h1:I
     308: aload_0
     309: getfield      #180                // Field r0:I
     312: invokestatic  #203                // Method mul32x32_64:(II)J
     315: ladd
     316: aload_0
     317: getfield      #173                // Field h2:I
     320: aload_0
     321: getfield      #188                // Field s4:I
     324: invokestatic  #203                // Method mul32x32_64:(II)J
     327: ladd
     328: aload_0
     329: getfield      #174                // Field h3:I
     332: aload_0
     333: getfield      #187                // Field s3:I
     336: invokestatic  #203                // Method mul32x32_64:(II)J
     339: ladd
     340: aload_0
     341: getfield      #175                // Field h4:I
     344: aload_0
     345: getfield      #186                // Field s2:I
     348: invokestatic  #203                // Method mul32x32_64:(II)J
     351: ladd
     352: lstore        11
     354: aload_0
     355: getfield      #171                // Field h0:I
     358: aload_0
     359: getfield      #182                // Field r2:I
     362: invokestatic  #203                // Method mul32x32_64:(II)J
     365: aload_0
     366: getfield      #172                // Field h1:I
     369: aload_0
     370: getfield      #181                // Field r1:I
     373: invokestatic  #203                // Method mul32x32_64:(II)J
     376: ladd
     377: aload_0
     378: getfield      #173                // Field h2:I
     381: aload_0
     382: getfield      #180                // Field r0:I
     385: invokestatic  #203                // Method mul32x32_64:(II)J
     388: ladd
     389: aload_0
     390: getfield      #174                // Field h3:I
     393: aload_0
     394: getfield      #188                // Field s4:I
     397: invokestatic  #203                // Method mul32x32_64:(II)J
     400: ladd
     401: aload_0
     402: getfield      #175                // Field h4:I
     405: aload_0
     406: getfield      #187                // Field s3:I
     409: invokestatic  #203                // Method mul32x32_64:(II)J
     412: ladd
     413: lstore        13
     415: aload_0
     416: getfield      #171                // Field h0:I
     419: aload_0
     420: getfield      #183                // Field r3:I
     423: invokestatic  #203                // Method mul32x32_64:(II)J
     426: aload_0
     427: getfield      #172                // Field h1:I
     430: aload_0
     431: getfield      #182                // Field r2:I
     434: invokestatic  #203                // Method mul32x32_64:(II)J
     437: ladd
     438: aload_0
     439: getfield      #173                // Field h2:I
     442: aload_0
     443: getfield      #181                // Field r1:I
     446: invokestatic  #203                // Method mul32x32_64:(II)J
     449: ladd
     450: aload_0
     451: getfield      #174                // Field h3:I
     454: aload_0
     455: getfield      #180                // Field r0:I
     458: invokestatic  #203                // Method mul32x32_64:(II)J
     461: ladd
     462: aload_0
     463: getfield      #175                // Field h4:I
     466: aload_0
     467: getfield      #188                // Field s4:I
     470: invokestatic  #203                // Method mul32x32_64:(II)J
     473: ladd
     474: lstore        15
     476: aload_0
     477: getfield      #171                // Field h0:I
     480: aload_0
     481: getfield      #184                // Field r4:I
     484: invokestatic  #203                // Method mul32x32_64:(II)J
     487: aload_0
     488: getfield      #172                // Field h1:I
     491: aload_0
     492: getfield      #183                // Field r3:I
     495: invokestatic  #203                // Method mul32x32_64:(II)J
     498: ladd
     499: aload_0
     500: getfield      #173                // Field h2:I
     503: aload_0
     504: getfield      #182                // Field r2:I
     507: invokestatic  #203                // Method mul32x32_64:(II)J
     510: ladd
     511: aload_0
     512: getfield      #174                // Field h3:I
     515: aload_0
     516: getfield      #181                // Field r1:I
     519: invokestatic  #203                // Method mul32x32_64:(II)J
     522: ladd
     523: aload_0
     524: getfield      #175                // Field h4:I
     527: aload_0
     528: getfield      #180                // Field r0:I
     531: invokestatic  #203                // Method mul32x32_64:(II)J
     534: ladd
     535: lstore        17
     537: aload_0
     538: lload         9
     540: l2i
     541: ldc           #6                  // int 67108863
     543: iand
     544: putfield      #171                // Field h0:I
     547: lload         9
     549: bipush        26
     551: lushr
     552: lstore        19
     554: lload         11
     556: lload         19
     558: ladd
     559: lstore        11
     561: aload_0
     562: lload         11
     564: l2i
     565: ldc           #6                  // int 67108863
     567: iand
     568: putfield      #172                // Field h1:I
     571: lload         11
     573: bipush        26
     575: lushr
     576: ldc2_w        #95                 // long -1l
     579: land
     580: lstore        19
     582: lload         13
     584: lload         19
     586: ladd
     587: lstore        13
     589: aload_0
     590: lload         13
     592: l2i
     593: ldc           #6                  // int 67108863
     595: iand
     596: putfield      #173                // Field h2:I
     599: lload         13
     601: bipush        26
     603: lushr
     604: ldc2_w        #95                 // long -1l
     607: land
     608: lstore        19
     610: lload         15
     612: lload         19
     614: ladd
     615: lstore        15
     617: aload_0
     618: lload         15
     620: l2i
     621: ldc           #6                  // int 67108863
     623: iand
     624: putfield      #174                // Field h3:I
     627: lload         15
     629: bipush        26
     631: lushr
     632: lstore        19
     634: lload         17
     636: lload         19
     638: ladd
     639: lstore        17
     641: aload_0
     642: lload         17
     644: l2i
     645: ldc           #6                  // int 67108863
     647: iand
     648: putfield      #175                // Field h4:I
     651: lload         17
     653: bipush        26
     655: lushr
     656: lstore        19
     658: aload_0
     659: dup
     660: getfield      #171                // Field h0:I
     663: i2l
     664: lload         19
     666: ldc2_w        #97                 // long 5l
     669: lmul
     670: ladd
     671: l2i
     672: putfield      #171                // Field h0:I
     675: return

  public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: bipush        16
       3: iadd
       4: aload_1
       5: arraylength
       6: if_icmple     19
       9: new           #110                // class org/bouncycastle/crypto/DataLengthException
      12: dup
      13: ldc           #8                  // String Output buffer is too short.
      15: invokespecial #199                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #170                // Field currentBlockOffset:I
      23: ifle          30
      26: aload_0
      27: invokespecial #201                // Method processBlock:()V
      30: aload_0
      31: getfield      #171                // Field h0:I
      34: bipush        26
      36: iushr
      37: istore        11
      39: aload_0
      40: aload_0
      41: getfield      #171                // Field h0:I
      44: ldc           #6                  // int 67108863
      46: iand
      47: putfield      #171                // Field h0:I
      50: aload_0
      51: dup
      52: getfield      #172                // Field h1:I
      55: iload         11
      57: iadd
      58: putfield      #172                // Field h1:I
      61: aload_0
      62: getfield      #172                // Field h1:I
      65: bipush        26
      67: iushr
      68: istore        11
      70: aload_0
      71: aload_0
      72: getfield      #172                // Field h1:I
      75: ldc           #6                  // int 67108863
      77: iand
      78: putfield      #172                // Field h1:I
      81: aload_0
      82: dup
      83: getfield      #173                // Field h2:I
      86: iload         11
      88: iadd
      89: putfield      #173                // Field h2:I
      92: aload_0
      93: getfield      #173                // Field h2:I
      96: bipush        26
      98: iushr
      99: istore        11
     101: aload_0
     102: aload_0
     103: getfield      #173                // Field h2:I
     106: ldc           #6                  // int 67108863
     108: iand
     109: putfield      #173                // Field h2:I
     112: aload_0
     113: dup
     114: getfield      #174                // Field h3:I
     117: iload         11
     119: iadd
     120: putfield      #174                // Field h3:I
     123: aload_0
     124: getfield      #174                // Field h3:I
     127: bipush        26
     129: iushr
     130: istore        11
     132: aload_0
     133: aload_0
     134: getfield      #174                // Field h3:I
     137: ldc           #6                  // int 67108863
     139: iand
     140: putfield      #174                // Field h3:I
     143: aload_0
     144: dup
     145: getfield      #175                // Field h4:I
     148: iload         11
     150: iadd
     151: putfield      #175                // Field h4:I
     154: aload_0
     155: getfield      #175                // Field h4:I
     158: bipush        26
     160: iushr
     161: istore        11
     163: aload_0
     164: aload_0
     165: getfield      #175                // Field h4:I
     168: ldc           #6                  // int 67108863
     170: iand
     171: putfield      #175                // Field h4:I
     174: aload_0
     175: dup
     176: getfield      #171                // Field h0:I
     179: iload         11
     181: iconst_5
     182: imul
     183: iadd
     184: putfield      #171                // Field h0:I
     187: aload_0
     188: getfield      #171                // Field h0:I
     191: iconst_5
     192: iadd
     193: istore        12
     195: iload         12
     197: bipush        26
     199: iushr
     200: istore        11
     202: iload         12
     204: ldc           #6                  // int 67108863
     206: iand
     207: istore        12
     209: aload_0
     210: getfield      #172                // Field h1:I
     213: iload         11
     215: iadd
     216: istore        13
     218: iload         13
     220: bipush        26
     222: iushr
     223: istore        11
     225: iload         13
     227: ldc           #6                  // int 67108863
     229: iand
     230: istore        13
     232: aload_0
     233: getfield      #173                // Field h2:I
     236: iload         11
     238: iadd
     239: istore        14
     241: iload         14
     243: bipush        26
     245: iushr
     246: istore        11
     248: iload         14
     250: ldc           #6                  // int 67108863
     252: iand
     253: istore        14
     255: aload_0
     256: getfield      #174                // Field h3:I
     259: iload         11
     261: iadd
     262: istore        15
     264: iload         15
     266: bipush        26
     268: iushr
     269: istore        11
     271: iload         15
     273: ldc           #6                  // int 67108863
     275: iand
     276: istore        15
     278: aload_0
     279: getfield      #175                // Field h4:I
     282: iload         11
     284: iadd
     285: ldc           #7                  // int 67108864
     287: isub
     288: istore        16
     290: iload         16
     292: bipush        31
     294: iushr
     295: iconst_1
     296: isub
     297: istore        11
     299: iload         11
     301: iconst_m1
     302: ixor
     303: istore        17
     305: aload_0
     306: aload_0
     307: getfield      #171                // Field h0:I
     310: iload         17
     312: iand
     313: iload         12
     315: iload         11
     317: iand
     318: ior
     319: putfield      #171                // Field h0:I
     322: aload_0
     323: aload_0
     324: getfield      #172                // Field h1:I
     327: iload         17
     329: iand
     330: iload         13
     332: iload         11
     334: iand
     335: ior
     336: putfield      #172                // Field h1:I
     339: aload_0
     340: aload_0
     341: getfield      #173                // Field h2:I
     344: iload         17
     346: iand
     347: iload         14
     349: iload         11
     351: iand
     352: ior
     353: putfield      #173                // Field h2:I
     356: aload_0
     357: aload_0
     358: getfield      #174                // Field h3:I
     361: iload         17
     363: iand
     364: iload         15
     366: iload         11
     368: iand
     369: ior
     370: putfield      #174                // Field h3:I
     373: aload_0
     374: aload_0
     375: getfield      #175                // Field h4:I
     378: iload         17
     380: iand
     381: iload         16
     383: iload         11
     385: iand
     386: ior
     387: putfield      #175                // Field h4:I
     390: aload_0
     391: getfield      #171                // Field h0:I
     394: aload_0
     395: getfield      #172                // Field h1:I
     398: bipush        26
     400: ishl
     401: ior
     402: i2l
     403: ldc2_w        #101                // long 4294967295l
     406: land
     407: ldc2_w        #101                // long 4294967295l
     410: aload_0
     411: getfield      #176                // Field k0:I
     414: i2l
     415: land
     416: ladd
     417: lstore_3
     418: aload_0
     419: getfield      #172                // Field h1:I
     422: bipush        6
     424: iushr
     425: aload_0
     426: getfield      #173                // Field h2:I
     429: bipush        20
     431: ishl
     432: ior
     433: i2l
     434: ldc2_w        #101                // long 4294967295l
     437: land
     438: ldc2_w        #101                // long 4294967295l
     441: aload_0
     442: getfield      #177                // Field k1:I
     445: i2l
     446: land
     447: ladd
     448: lstore        5
     450: aload_0
     451: getfield      #173                // Field h2:I
     454: bipush        12
     456: iushr
     457: aload_0
     458: getfield      #174                // Field h3:I
     461: bipush        14
     463: ishl
     464: ior
     465: i2l
     466: ldc2_w        #101                // long 4294967295l
     469: land
     470: ldc2_w        #101                // long 4294967295l
     473: aload_0
     474: getfield      #178                // Field k2:I
     477: i2l
     478: land
     479: ladd
     480: lstore        7
     482: aload_0
     483: getfield      #174                // Field h3:I
     486: bipush        18
     488: iushr
     489: aload_0
     490: getfield      #175                // Field h4:I
     493: bipush        8
     495: ishl
     496: ior
     497: i2l
     498: ldc2_w        #101                // long 4294967295l
     501: land
     502: ldc2_w        #101                // long 4294967295l
     505: aload_0
     506: getfield      #179                // Field k3:I
     509: i2l
     510: land
     511: ladd
     512: lstore        9
     514: lload_3
     515: l2i
     516: aload_1
     517: iload_2
     518: invokestatic  #210                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     521: lload         5
     523: lload_3
     524: bipush        32
     526: lushr
     527: ladd
     528: lstore        5
     530: lload         5
     532: l2i
     533: aload_1
     534: iload_2
     535: iconst_4
     536: iadd
     537: invokestatic  #210                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     540: lload         7
     542: lload         5
     544: bipush        32
     546: lushr
     547: ladd
     548: lstore        7
     550: lload         7
     552: l2i
     553: aload_1
     554: iload_2
     555: bipush        8
     557: iadd
     558: invokestatic  #210                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     561: lload         9
     563: lload         7
     565: bipush        32
     567: lushr
     568: ladd
     569: lstore        9
     571: lload         9
     573: l2i
     574: aload_1
     575: iload_2
     576: bipush        12
     578: iadd
     579: invokestatic  #210                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     582: aload_0
     583: invokevirtual #202                // Method reset:()V
     586: bipush        16
     588: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #170                // Field currentBlockOffset:I
       5: aload_0
       6: aload_0
       7: aload_0
       8: aload_0
       9: aload_0
      10: iconst_0
      11: dup_x1
      12: putfield      #175                // Field h4:I
      15: dup_x1
      16: putfield      #174                // Field h3:I
      19: dup_x1
      20: putfield      #173                // Field h2:I
      23: dup_x1
      24: putfield      #172                // Field h1:I
      27: putfield      #171                // Field h0:I
      30: return

  private static final long mul32x32_64(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: lreturn
}
