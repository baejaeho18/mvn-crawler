public class org.bouncycastle.crypto.ec.ECFixedTransform implements org.bouncycastle.crypto.ec.ECPairFactorTransform {
  private org.bouncycastle.crypto.params.ECPublicKeyParameters key;

  private java.math.BigInteger k;

  public org.bouncycastle.crypto.ec.ECFixedTransform(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #85                 // Field k:Ljava/math/BigInteger;
       9: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #45                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
       4: ifne          17
       7: new           #37                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #2                  // String ECPublicKeyParameters are required for fixed transform.
      13: invokespecial #87                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #45                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      22: putfield      #86                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      25: return

  public org.bouncycastle.crypto.ec.ECPair transform(org.bouncycastle.crypto.ec.ECPair);
    Code:
       0: aload_0
       1: getfield      #86                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
       4: ifnonnull     17
       7: new           #38                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String ECFixedTransform not initialised
      13: invokespecial #88                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #86                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      21: invokevirtual #98                 // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      24: astore_2
      25: aload_2
      26: invokevirtual #95                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      29: astore_3
      30: aload_0
      31: invokevirtual #91                 // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      34: astore        4
      36: aload_0
      37: getfield      #85                 // Field k:Ljava/math/BigInteger;
      40: aload_3
      41: invokevirtual #90                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      44: astore        5
      46: iconst_2
      47: anewarray     #48                 // class org/bouncycastle/math/ec/ECPoint
      50: dup
      51: iconst_0
      52: aload         4
      54: aload_2
      55: invokevirtual #97                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      58: aload         5
      60: invokeinterface #104,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      65: aload_1
      66: invokevirtual #92                 // Method org/bouncycastle/crypto/ec/ECPair.getX:()Lorg/bouncycastle/math/ec/ECPoint;
      69: invokevirtual #102                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      72: aastore
      73: dup
      74: iconst_1
      75: aload_0
      76: getfield      #86                 // Field key:Lorg/bouncycastle/crypto/params/ECPublicKeyParameters;
      79: invokevirtual #99                 // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      82: aload         5
      84: invokevirtual #101                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      87: aload_1
      88: invokevirtual #93                 // Method org/bouncycastle/crypto/ec/ECPair.getY:()Lorg/bouncycastle/math/ec/ECPoint;
      91: invokevirtual #102                // Method org/bouncycastle/math/ec/ECPoint.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      94: aastore
      95: astore        6
      97: aload_2
      98: invokevirtual #96                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
     101: aload         6
     103: invokevirtual #100                // Method org/bouncycastle/math/ec/ECCurve.normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;)V
     106: new           #42                 // class org/bouncycastle/crypto/ec/ECPair
     109: dup
     110: aload         6
     112: iconst_0
     113: aaload
     114: aload         6
     116: iconst_1
     117: aaload
     118: invokespecial #94                 // Method org/bouncycastle/crypto/ec/ECPair."<init>":(Lorg/bouncycastle/math/ec/ECPoint;Lorg/bouncycastle/math/ec/ECPoint;)V
     121: areturn

  public java.math.BigInteger getTransformValue();
    Code:
       0: aload_0
       1: getfield      #85                 // Field k:Ljava/math/BigInteger;
       4: areturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #49                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #103                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn
}
