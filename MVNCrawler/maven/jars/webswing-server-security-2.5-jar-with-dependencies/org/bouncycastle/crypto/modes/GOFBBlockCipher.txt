public class org.bouncycastle.crypto.modes.GOFBBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher {
  private byte[] IV;

  private byte[] ofbV;

  private byte[] ofbOutV;

  private int byteCount;

  private final int blockSize;

  private final org.bouncycastle.crypto.BlockCipher cipher;

  boolean firstStep;

  int N3;

  int N4;

  static final int C1;

  static final int C2;

  public org.bouncycastle.crypto.modes.GOFBBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #112                // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: iconst_1
       7: putfield      #102                // Field firstStep:Z
      10: aload_0
      11: aload_1
      12: putfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      15: aload_0
      16: aload_1
      17: invokeinterface #119,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      22: putfield      #100                // Field blockSize:I
      25: aload_0
      26: getfield      #100                // Field blockSize:I
      29: bipush        8
      31: if_icmpeq     44
      34: new           #56                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #7                  // String GCTR only for 64 bit block ciphers
      40: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: aload_1
      46: invokeinterface #119,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      51: newarray       byte
      53: putfield      #103                // Field IV:[B
      56: aload_0
      57: aload_1
      58: invokeinterface #119,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      63: newarray       byte
      65: putfield      #105                // Field ofbV:[B
      68: aload_0
      69: aload_1
      70: invokeinterface #119,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      75: newarray       byte
      77: putfield      #104                // Field ofbOutV:[B
      80: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #102                // Field firstStep:Z
       5: aload_0
       6: iconst_0
       7: putfield      #98                 // Field N3:I
      10: aload_0
      11: iconst_0
      12: putfield      #99                 // Field N4:I
      15: aload_2
      16: instanceof    #64                 // class org/bouncycastle/crypto/params/ParametersWithIV
      19: ifeq          144
      22: aload_2
      23: checkcast     #64                 // class org/bouncycastle/crypto/params/ParametersWithIV
      26: astore_3
      27: aload_3
      28: invokevirtual #117                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      31: astore        4
      33: aload         4
      35: arraylength
      36: aload_0
      37: getfield      #103                // Field IV:[B
      40: arraylength
      41: if_icmpge     100
      44: aload         4
      46: iconst_0
      47: aload_0
      48: getfield      #103                // Field IV:[B
      51: aload_0
      52: getfield      #103                // Field IV:[B
      55: arraylength
      56: aload         4
      58: arraylength
      59: isub
      60: aload         4
      62: arraylength
      63: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      66: iconst_0
      67: istore        5
      69: iload         5
      71: aload_0
      72: getfield      #103                // Field IV:[B
      75: arraylength
      76: aload         4
      78: arraylength
      79: isub
      80: if_icmpge     97
      83: aload_0
      84: getfield      #103                // Field IV:[B
      87: iload         5
      89: iconst_0
      90: bastore
      91: iinc          5, 1
      94: goto          69
      97: goto          116
     100: aload         4
     102: iconst_0
     103: aload_0
     104: getfield      #103                // Field IV:[B
     107: iconst_0
     108: aload_0
     109: getfield      #103                // Field IV:[B
     112: arraylength
     113: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     116: aload_0
     117: invokevirtual #113                // Method reset:()V
     120: aload_3
     121: invokevirtual #118                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     124: ifnull        141
     127: aload_0
     128: getfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     131: iconst_1
     132: aload_3
     133: invokevirtual #118                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     136: invokeinterface #123,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     141: goto          163
     144: aload_0
     145: invokevirtual #113                // Method reset:()V
     148: aload_2
     149: ifnull        163
     152: aload_0
     153: getfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     156: iconst_1
     157: aload_2
     158: invokeinterface #123,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     163: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #122,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #6                  // String /GCTR
      21: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #109                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #100                // Field blockSize:I
       4: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #100                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #116                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #100                // Field blockSize:I
      18: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #102                // Field firstStep:Z
       5: aload_0
       6: iconst_0
       7: putfield      #98                 // Field N3:I
      10: aload_0
      11: iconst_0
      12: putfield      #99                 // Field N4:I
      15: aload_0
      16: getfield      #103                // Field IV:[B
      19: iconst_0
      20: aload_0
      21: getfield      #105                // Field ofbV:[B
      24: iconst_0
      25: aload_0
      26: getfield      #103                // Field IV:[B
      29: arraylength
      30: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_0
      34: iconst_0
      35: putfield      #101                // Field byteCount:I
      38: aload_0
      39: getfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      42: invokeinterface #120,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      47: return

  private int bytesToint(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_3
       3: iadd
       4: baload
       5: bipush        24
       7: ishl
       8: ldc           #1                  // int -16777216
      10: iand
      11: aload_1
      12: iload_2
      13: iconst_2
      14: iadd
      15: baload
      16: bipush        16
      18: ishl
      19: ldc           #3                  // int 16711680
      21: iand
      22: iadd
      23: aload_1
      24: iload_2
      25: iconst_1
      26: iadd
      27: baload
      28: bipush        8
      30: ishl
      31: ldc           #2                  // int 65280
      33: iand
      34: iadd
      35: aload_1
      36: iload_2
      37: baload
      38: sipush        255
      41: iand
      42: iadd
      43: ireturn

  private void intTobytes(int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iconst_3
       3: iadd
       4: iload_1
       5: bipush        24
       7: iushr
       8: i2b
       9: bastore
      10: aload_2
      11: iload_3
      12: iconst_2
      13: iadd
      14: iload_1
      15: bipush        16
      17: iushr
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_1
      23: iadd
      24: iload_1
      25: bipush        8
      27: iushr
      28: i2b
      29: bastore
      30: aload_2
      31: iload_3
      32: iload_1
      33: i2b
      34: bastore
      35: return

  protected byte calculateByte(byte);
    Code:
       0: aload_0
       1: getfield      #101                // Field byteCount:I
       4: ifne          133
       7: aload_0
       8: getfield      #102                // Field firstStep:Z
      11: ifeq          65
      14: aload_0
      15: iconst_0
      16: putfield      #102                // Field firstStep:Z
      19: aload_0
      20: getfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      23: aload_0
      24: getfield      #105                // Field ofbV:[B
      27: iconst_0
      28: aload_0
      29: getfield      #104                // Field ofbOutV:[B
      32: iconst_0
      33: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      38: pop
      39: aload_0
      40: aload_0
      41: aload_0
      42: getfield      #104                // Field ofbOutV:[B
      45: iconst_0
      46: invokespecial #115                // Method bytesToint:([BI)I
      49: putfield      #98                 // Field N3:I
      52: aload_0
      53: aload_0
      54: aload_0
      55: getfield      #104                // Field ofbOutV:[B
      58: iconst_4
      59: invokespecial #115                // Method bytesToint:([BI)I
      62: putfield      #99                 // Field N4:I
      65: aload_0
      66: dup
      67: getfield      #98                 // Field N3:I
      70: ldc           #4                  // int 16843009
      72: iadd
      73: putfield      #98                 // Field N3:I
      76: aload_0
      77: dup
      78: getfield      #99                 // Field N4:I
      81: ldc           #5                  // int 16843012
      83: iadd
      84: putfield      #99                 // Field N4:I
      87: aload_0
      88: aload_0
      89: getfield      #98                 // Field N3:I
      92: aload_0
      93: getfield      #105                // Field ofbV:[B
      96: iconst_0
      97: invokespecial #114                // Method intTobytes:(I[BI)V
     100: aload_0
     101: aload_0
     102: getfield      #99                 // Field N4:I
     105: aload_0
     106: getfield      #105                // Field ofbV:[B
     109: iconst_4
     110: invokespecial #114                // Method intTobytes:(I[BI)V
     113: aload_0
     114: getfield      #106                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     117: aload_0
     118: getfield      #105                // Field ofbV:[B
     121: iconst_0
     122: aload_0
     123: getfield      #104                // Field ofbOutV:[B
     126: iconst_0
     127: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     132: pop
     133: aload_0
     134: getfield      #104                // Field ofbOutV:[B
     137: aload_0
     138: dup
     139: getfield      #101                // Field byteCount:I
     142: dup_x1
     143: iconst_1
     144: iadd
     145: putfield      #101                // Field byteCount:I
     148: baload
     149: iload_1
     150: ixor
     151: i2b
     152: istore_2
     153: aload_0
     154: getfield      #101                // Field byteCount:I
     157: aload_0
     158: getfield      #100                // Field blockSize:I
     161: if_icmpne     221
     164: aload_0
     165: iconst_0
     166: putfield      #101                // Field byteCount:I
     169: aload_0
     170: getfield      #105                // Field ofbV:[B
     173: aload_0
     174: getfield      #100                // Field blockSize:I
     177: aload_0
     178: getfield      #105                // Field ofbV:[B
     181: iconst_0
     182: aload_0
     183: getfield      #105                // Field ofbV:[B
     186: arraylength
     187: aload_0
     188: getfield      #100                // Field blockSize:I
     191: isub
     192: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     195: aload_0
     196: getfield      #104                // Field ofbOutV:[B
     199: iconst_0
     200: aload_0
     201: getfield      #105                // Field ofbV:[B
     204: aload_0
     205: getfield      #105                // Field ofbV:[B
     208: arraylength
     209: aload_0
     210: getfield      #100                // Field blockSize:I
     213: isub
     214: aload_0
     215: getfield      #100                // Field blockSize:I
     218: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     221: iload_2
     222: ireturn
}
