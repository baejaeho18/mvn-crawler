abstract class org.bouncycastle.crypto.modes.gcm.GCMUtil {
  private static final int E1;

  private static final byte E1B;

  private static final long E1L;

  private static final int[] LOOKUP;

  org.bouncycastle.crypto.modes.gcm.GCMUtil();
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: return

  private static int[] generateLookup();
    Code:
       0: sipush        256
       3: newarray       int
       5: astore_0
       6: iconst_0
       7: istore_1
       8: iload_1
       9: sipush        256
      12: if_icmpge     58
      15: iconst_0
      16: istore_2
      17: bipush        7
      19: istore_3
      20: iload_3
      21: iflt          48
      24: iload_1
      25: iconst_1
      26: iload_3
      27: ishl
      28: iand
      29: ifeq          42
      32: iload_2
      33: ldc           #2                  // int -520093696
      35: bipush        7
      37: iload_3
      38: isub
      39: iushr
      40: ixor
      41: istore_2
      42: iinc          3, -1
      45: goto          20
      48: aload_0
      49: iload_1
      50: iload_2
      51: iastore
      52: iinc          1, 1
      55: goto          8
      58: aload_0
      59: areturn

  static byte[] oneAsBytes();
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_0
       5: aload_0
       6: iconst_0
       7: bipush        -128
       9: bastore
      10: aload_0
      11: areturn

  static int[] oneAsInts();
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc           #1                  // int -2147483648
       8: iastore
       9: aload_0
      10: areturn

  static long[] oneAsLongs();
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc2_w        #72                 // long -9223372036854775808l
       9: lastore
      10: aload_0
      11: areturn

  static byte[] asBytes(int[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokestatic  #118                // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
      11: aload_1
      12: areturn

  static void asBytes(int[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #118                // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
       6: return

  static byte[] asBytes(long[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokestatic  #119                // Method org/bouncycastle/util/Pack.longToBigEndian:([J[BI)V
      11: aload_1
      12: areturn

  static void asBytes(long[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #119                // Method org/bouncycastle/util/Pack.longToBigEndian:([J[BI)V
       6: return

  static int[] asInts(byte[]);
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_1
       7: invokestatic  #116                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[I)V
      10: aload_1
      11: areturn

  static void asInts(byte[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #116                // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[I)V
       6: return

  static long[] asLongs(byte[]);
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_1
       7: invokestatic  #117                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI[J)V
      10: aload_1
      11: areturn

  static void asLongs(byte[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #117                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI[J)V
       6: return

  static void multiply(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #114                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       4: astore_2
       5: bipush        16
       7: newarray       byte
       9: astore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: bipush        16
      17: if_icmpge     78
      20: aload_1
      21: iload         4
      23: baload
      24: istore        5
      26: bipush        7
      28: istore        6
      30: iload         6
      32: iflt          72
      35: iload         5
      37: iconst_1
      38: iload         6
      40: ishl
      41: iand
      42: ifeq          50
      45: aload_3
      46: aload_2
      47: invokestatic  #106                // Method xor:([B[B)V
      50: aload_2
      51: invokestatic  #105                // Method shiftRight:([B)B
      54: ifeq          66
      57: aload_2
      58: iconst_0
      59: dup2
      60: baload
      61: bipush        -31
      63: ixor
      64: i2b
      65: bastore
      66: iinc          6, -1
      69: goto          30
      72: iinc          4, 1
      75: goto          13
      78: aload_3
      79: iconst_0
      80: aload_0
      81: iconst_0
      82: bipush        16
      84: invokestatic  #103                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      87: return

  static void multiply(int[], int[]);
    Code:
       0: aload_0
       1: invokestatic  #115                // Method org/bouncycastle/util/Arrays.clone:([I)[I
       4: astore_2
       5: iconst_4
       6: newarray       int
       8: astore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: iconst_4
      15: if_icmpge     75
      18: aload_1
      19: iload         4
      21: iaload
      22: istore        5
      24: bipush        31
      26: istore        6
      28: iload         6
      30: iflt          69
      33: iload         5
      35: iconst_1
      36: iload         6
      38: ishl
      39: iand
      40: ifeq          48
      43: aload_3
      44: aload_2
      45: invokestatic  #111                // Method xor:([I[I)V
      48: aload_2
      49: invokestatic  #107                // Method shiftRight:([I)I
      52: ifeq          63
      55: aload_2
      56: iconst_0
      57: dup2
      58: iaload
      59: ldc           #2                  // int -520093696
      61: ixor
      62: iastore
      63: iinc          6, -1
      66: goto          28
      69: iinc          4, 1
      72: goto          12
      75: aload_3
      76: iconst_0
      77: aload_0
      78: iconst_0
      79: iconst_4
      80: invokestatic  #103                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      83: return

  static void multiply(long[], long[]);
    Code:
       0: iconst_2
       1: newarray       long
       3: dup
       4: iconst_0
       5: aload_0
       6: iconst_0
       7: laload
       8: lastore
       9: dup
      10: iconst_1
      11: aload_0
      12: iconst_1
      13: laload
      14: lastore
      15: astore_2
      16: iconst_2
      17: newarray       long
      19: astore_3
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iconst_2
      26: if_icmpge     91
      29: aload_1
      30: iload         4
      32: laload
      33: lstore        5
      35: bipush        63
      37: istore        7
      39: iload         7
      41: iflt          85
      44: lload         5
      46: lconst_1
      47: iload         7
      49: lshl
      50: land
      51: lconst_0
      52: lcmp
      53: ifeq          61
      56: aload_3
      57: aload_2
      58: invokestatic  #113                // Method xor:([J[J)V
      61: aload_2
      62: invokestatic  #112                // Method shiftRight:([J)J
      65: lconst_0
      66: lcmp
      67: ifeq          79
      70: aload_2
      71: iconst_0
      72: dup2
      73: laload
      74: ldc2_w        #74                 // long 63331869759897600l
      77: lxor
      78: lastore
      79: iinc          7, -1
      82: goto          39
      85: iinc          4, 1
      88: goto          23
      91: aload_0
      92: iconst_0
      93: aload_3
      94: iconst_0
      95: laload
      96: lastore
      97: aload_0
      98: iconst_1
      99: aload_3
     100: iconst_1
     101: laload
     102: lastore
     103: return

  static void multiplyP(int[]);
    Code:
       0: aload_0
       1: invokestatic  #107                // Method shiftRight:([I)I
       4: ifeq          15
       7: aload_0
       8: iconst_0
       9: dup2
      10: iaload
      11: ldc           #2                  // int -520093696
      13: ixor
      14: iastore
      15: return

  static void multiplyP(int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // Method shiftRight:([I[I)I
       5: ifeq          16
       8: aload_1
       9: iconst_0
      10: dup2
      11: iaload
      12: ldc           #2                  // int -520093696
      14: ixor
      15: iastore
      16: return

  static void multiplyP8(int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: invokestatic  #108                // Method shiftRightN:([II)I
       6: istore_1
       7: aload_0
       8: iconst_0
       9: dup2
      10: iaload
      11: getstatic     #101                // Field LOOKUP:[I
      14: iload_1
      15: bipush        24
      17: iushr
      18: iaload
      19: ixor
      20: iastore
      21: return

  static void multiplyP8(int[], int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: aload_1
       4: invokestatic  #109                // Method shiftRightN:([II[I)I
       7: istore_2
       8: aload_1
       9: iconst_0
      10: dup2
      11: iaload
      12: getstatic     #101                // Field LOOKUP:[I
      15: iload_2
      16: bipush        24
      18: iushr
      19: iaload
      20: ixor
      21: iastore
      22: return

  static byte shiftRight(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: iload_1
       6: baload
       7: sipush        255
      10: iand
      11: istore_3
      12: aload_0
      13: iload_1
      14: iinc          1, 1
      17: iload_3
      18: iconst_1
      19: iushr
      20: iload_2
      21: ior
      22: i2b
      23: bastore
      24: iload_3
      25: iconst_1
      26: iand
      27: bipush        7
      29: ishl
      30: istore_2
      31: aload_0
      32: iload_1
      33: baload
      34: sipush        255
      37: iand
      38: istore_3
      39: aload_0
      40: iload_1
      41: iinc          1, 1
      44: iload_3
      45: iconst_1
      46: iushr
      47: iload_2
      48: ior
      49: i2b
      50: bastore
      51: iload_3
      52: iconst_1
      53: iand
      54: bipush        7
      56: ishl
      57: istore_2
      58: aload_0
      59: iload_1
      60: baload
      61: sipush        255
      64: iand
      65: istore_3
      66: aload_0
      67: iload_1
      68: iinc          1, 1
      71: iload_3
      72: iconst_1
      73: iushr
      74: iload_2
      75: ior
      76: i2b
      77: bastore
      78: iload_3
      79: iconst_1
      80: iand
      81: bipush        7
      83: ishl
      84: istore_2
      85: aload_0
      86: iload_1
      87: baload
      88: sipush        255
      91: iand
      92: istore_3
      93: aload_0
      94: iload_1
      95: iinc          1, 1
      98: iload_3
      99: iconst_1
     100: iushr
     101: iload_2
     102: ior
     103: i2b
     104: bastore
     105: iload_3
     106: iconst_1
     107: iand
     108: bipush        7
     110: ishl
     111: istore_2
     112: iload_1
     113: bipush        16
     115: if_icmplt     4
     118: iload_2
     119: i2b
     120: ireturn

  static byte shiftRight(byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: iload_2
       6: baload
       7: sipush        255
      10: iand
      11: istore        4
      13: aload_1
      14: iload_2
      15: iinc          2, 1
      18: iload         4
      20: iconst_1
      21: iushr
      22: iload_3
      23: ior
      24: i2b
      25: bastore
      26: iload         4
      28: iconst_1
      29: iand
      30: bipush        7
      32: ishl
      33: istore_3
      34: aload_0
      35: iload_2
      36: baload
      37: sipush        255
      40: iand
      41: istore        4
      43: aload_1
      44: iload_2
      45: iinc          2, 1
      48: iload         4
      50: iconst_1
      51: iushr
      52: iload_3
      53: ior
      54: i2b
      55: bastore
      56: iload         4
      58: iconst_1
      59: iand
      60: bipush        7
      62: ishl
      63: istore_3
      64: aload_0
      65: iload_2
      66: baload
      67: sipush        255
      70: iand
      71: istore        4
      73: aload_1
      74: iload_2
      75: iinc          2, 1
      78: iload         4
      80: iconst_1
      81: iushr
      82: iload_3
      83: ior
      84: i2b
      85: bastore
      86: iload         4
      88: iconst_1
      89: iand
      90: bipush        7
      92: ishl
      93: istore_3
      94: aload_0
      95: iload_2
      96: baload
      97: sipush        255
     100: iand
     101: istore        4
     103: aload_1
     104: iload_2
     105: iinc          2, 1
     108: iload         4
     110: iconst_1
     111: iushr
     112: iload_3
     113: ior
     114: i2b
     115: bastore
     116: iload         4
     118: iconst_1
     119: iand
     120: bipush        7
     122: ishl
     123: istore_3
     124: iload_2
     125: bipush        16
     127: if_icmplt     4
     130: iload_3
     131: i2b
     132: ireturn

  static int shiftRight(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_1
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iconst_1
       8: iushr
       9: iastore
      10: iload_1
      11: bipush        31
      13: ishl
      14: istore_2
      15: aload_0
      16: iconst_1
      17: iaload
      18: istore_1
      19: aload_0
      20: iconst_1
      21: iload_1
      22: iconst_1
      23: iushr
      24: iload_2
      25: ior
      26: iastore
      27: iload_1
      28: bipush        31
      30: ishl
      31: istore_2
      32: aload_0
      33: iconst_2
      34: iaload
      35: istore_1
      36: aload_0
      37: iconst_2
      38: iload_1
      39: iconst_1
      40: iushr
      41: iload_2
      42: ior
      43: iastore
      44: iload_1
      45: bipush        31
      47: ishl
      48: istore_2
      49: aload_0
      50: iconst_3
      51: iaload
      52: istore_1
      53: aload_0
      54: iconst_3
      55: iload_1
      56: iconst_1
      57: iushr
      58: iload_2
      59: ior
      60: iastore
      61: iload_1
      62: bipush        31
      64: ishl
      65: ireturn

  static int shiftRight(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_1
       5: iconst_0
       6: iload_2
       7: iconst_1
       8: iushr
       9: iastore
      10: iload_2
      11: bipush        31
      13: ishl
      14: istore_3
      15: aload_0
      16: iconst_1
      17: iaload
      18: istore_2
      19: aload_1
      20: iconst_1
      21: iload_2
      22: iconst_1
      23: iushr
      24: iload_3
      25: ior
      26: iastore
      27: iload_2
      28: bipush        31
      30: ishl
      31: istore_3
      32: aload_0
      33: iconst_2
      34: iaload
      35: istore_2
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iconst_1
      40: iushr
      41: iload_3
      42: ior
      43: iastore
      44: iload_2
      45: bipush        31
      47: ishl
      48: istore_3
      49: aload_0
      50: iconst_3
      51: iaload
      52: istore_2
      53: aload_1
      54: iconst_3
      55: iload_2
      56: iconst_1
      57: iushr
      58: iload_3
      59: ior
      60: iastore
      61: iload_2
      62: bipush        31
      64: ishl
      65: ireturn

  static long shiftRight(long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_1
       4: aload_0
       5: iconst_0
       6: lload_1
       7: iconst_1
       8: lushr
       9: lastore
      10: lload_1
      11: bipush        63
      13: lshl
      14: lstore_3
      15: aload_0
      16: iconst_1
      17: laload
      18: lstore_1
      19: aload_0
      20: iconst_1
      21: lload_1
      22: iconst_1
      23: lushr
      24: lload_3
      25: lor
      26: lastore
      27: lload_1
      28: bipush        63
      30: lshl
      31: lreturn

  static long shiftRight(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_1
       5: iconst_0
       6: lload_2
       7: iconst_1
       8: lushr
       9: lastore
      10: lload_2
      11: bipush        63
      13: lshl
      14: lstore        4
      16: aload_0
      17: iconst_1
      18: laload
      19: lstore_2
      20: aload_1
      21: iconst_1
      22: lload_2
      23: iconst_1
      24: lushr
      25: lload         4
      27: lor
      28: lastore
      29: lload_2
      30: bipush        63
      32: lshl
      33: lreturn

  static int shiftRightN(int[], int);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: bipush        32
       6: iload_1
       7: isub
       8: istore_3
       9: aload_0
      10: iconst_0
      11: iload_2
      12: iload_1
      13: iushr
      14: iastore
      15: iload_2
      16: iload_3
      17: ishl
      18: istore        4
      20: aload_0
      21: iconst_1
      22: iaload
      23: istore_2
      24: aload_0
      25: iconst_1
      26: iload_2
      27: iload_1
      28: iushr
      29: iload         4
      31: ior
      32: iastore
      33: iload_2
      34: iload_3
      35: ishl
      36: istore        4
      38: aload_0
      39: iconst_2
      40: iaload
      41: istore_2
      42: aload_0
      43: iconst_2
      44: iload_2
      45: iload_1
      46: iushr
      47: iload         4
      49: ior
      50: iastore
      51: iload_2
      52: iload_3
      53: ishl
      54: istore        4
      56: aload_0
      57: iconst_3
      58: iaload
      59: istore_2
      60: aload_0
      61: iconst_3
      62: iload_2
      63: iload_1
      64: iushr
      65: iload         4
      67: ior
      68: iastore
      69: iload_2
      70: iload_3
      71: ishl
      72: ireturn

  static int shiftRightN(int[], int, int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_3
       4: bipush        32
       6: iload_1
       7: isub
       8: istore        4
      10: aload_2
      11: iconst_0
      12: iload_3
      13: iload_1
      14: iushr
      15: iastore
      16: iload_3
      17: iload         4
      19: ishl
      20: istore        5
      22: aload_0
      23: iconst_1
      24: iaload
      25: istore_3
      26: aload_2
      27: iconst_1
      28: iload_3
      29: iload_1
      30: iushr
      31: iload         5
      33: ior
      34: iastore
      35: iload_3
      36: iload         4
      38: ishl
      39: istore        5
      41: aload_0
      42: iconst_2
      43: iaload
      44: istore_3
      45: aload_2
      46: iconst_2
      47: iload_3
      48: iload_1
      49: iushr
      50: iload         5
      52: ior
      53: iastore
      54: iload_3
      55: iload         4
      57: ishl
      58: istore        5
      60: aload_0
      61: iconst_3
      62: iaload
      63: istore_3
      64: aload_2
      65: iconst_3
      66: iload_3
      67: iload_1
      68: iushr
      69: iload         5
      71: ior
      72: iastore
      73: iload_3
      74: iload         4
      76: ishl
      77: ireturn

  static void xor(byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iload_2
       4: dup2
       5: baload
       6: aload_1
       7: iload_2
       8: baload
       9: ixor
      10: i2b
      11: bastore
      12: iinc          2, 1
      15: aload_0
      16: iload_2
      17: dup2
      18: baload
      19: aload_1
      20: iload_2
      21: baload
      22: ixor
      23: i2b
      24: bastore
      25: iinc          2, 1
      28: aload_0
      29: iload_2
      30: dup2
      31: baload
      32: aload_1
      33: iload_2
      34: baload
      35: ixor
      36: i2b
      37: bastore
      38: iinc          2, 1
      41: aload_0
      42: iload_2
      43: dup2
      44: baload
      45: aload_1
      46: iload_2
      47: baload
      48: ixor
      49: i2b
      50: bastore
      51: iinc          2, 1
      54: iload_2
      55: bipush        16
      57: if_icmplt     2
      60: return

  static void xor(byte[], byte[], int, int);
    Code:
       0: iload_3
       1: iinc          3, -1
       4: ifle          22
       7: aload_0
       8: iload_3
       9: dup2
      10: baload
      11: aload_1
      12: iload_2
      13: iload_3
      14: iadd
      15: baload
      16: ixor
      17: i2b
      18: bastore
      19: goto          0
      22: return

  static void xor(byte[], byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: iload_3
       4: aload_0
       5: iload_3
       6: baload
       7: aload_1
       8: iload_3
       9: baload
      10: ixor
      11: i2b
      12: bastore
      13: iinc          3, 1
      16: aload_2
      17: iload_3
      18: aload_0
      19: iload_3
      20: baload
      21: aload_1
      22: iload_3
      23: baload
      24: ixor
      25: i2b
      26: bastore
      27: iinc          3, 1
      30: aload_2
      31: iload_3
      32: aload_0
      33: iload_3
      34: baload
      35: aload_1
      36: iload_3
      37: baload
      38: ixor
      39: i2b
      40: bastore
      41: iinc          3, 1
      44: aload_2
      45: iload_3
      46: aload_0
      47: iload_3
      48: baload
      49: aload_1
      50: iload_3
      51: baload
      52: ixor
      53: i2b
      54: bastore
      55: iinc          3, 1
      58: iload_3
      59: bipush        16
      61: if_icmplt     2
      64: return

  static void xor(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_0
       6: iaload
       7: ixor
       8: iastore
       9: aload_0
      10: iconst_1
      11: dup2
      12: iaload
      13: aload_1
      14: iconst_1
      15: iaload
      16: ixor
      17: iastore
      18: aload_0
      19: iconst_2
      20: dup2
      21: iaload
      22: aload_1
      23: iconst_2
      24: iaload
      25: ixor
      26: iastore
      27: aload_0
      28: iconst_3
      29: dup2
      30: iaload
      31: aload_1
      32: iconst_3
      33: iaload
      34: ixor
      35: iastore
      36: return

  static void xor(int[], int[], int[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: iaload
       5: aload_1
       6: iconst_0
       7: iaload
       8: ixor
       9: iastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: iaload
      15: aload_1
      16: iconst_1
      17: iaload
      18: ixor
      19: iastore
      20: aload_2
      21: iconst_2
      22: aload_0
      23: iconst_2
      24: iaload
      25: aload_1
      26: iconst_2
      27: iaload
      28: ixor
      29: iastore
      30: aload_2
      31: iconst_3
      32: aload_0
      33: iconst_3
      34: iaload
      35: aload_1
      36: iconst_3
      37: iaload
      38: ixor
      39: iastore
      40: return

  static void xor(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: laload
       4: aload_1
       5: iconst_0
       6: laload
       7: lxor
       8: lastore
       9: aload_0
      10: iconst_1
      11: dup2
      12: laload
      13: aload_1
      14: iconst_1
      15: laload
      16: lxor
      17: lastore
      18: return

  static void xor(long[], long[], long[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: laload
       5: aload_1
       6: iconst_0
       7: laload
       8: lxor
       9: lastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: laload
      15: aload_1
      16: iconst_1
      17: laload
      18: lxor
      19: lastore
      20: return

  static {};
    Code:
       0: invokestatic  #104                // Method generateLookup:()[I
       3: putstatic     #101                // Field LOOKUP:[I
       6: return
}
