public class org.bouncycastle.crypto.modes.OFBBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher {
  private int byteCount;

  private byte[] IV;

  private byte[] ofbV;

  private byte[] ofbOutV;

  private final int blockSize;

  private final org.bouncycastle.crypto.BlockCipher cipher;

  public org.bouncycastle.crypto.modes.OFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #88                 // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: aload_1
       7: putfield      #82                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      10: aload_0
      11: iload_2
      12: bipush        8
      14: idiv
      15: putfield      #77                 // Field blockSize:I
      18: aload_0
      19: aload_1
      20: invokeinterface #93,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      25: newarray       byte
      27: putfield      #79                 // Field IV:[B
      30: aload_0
      31: aload_1
      32: invokeinterface #93,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      37: newarray       byte
      39: putfield      #81                 // Field ofbV:[B
      42: aload_0
      43: aload_1
      44: invokeinterface #93,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      49: newarray       byte
      51: putfield      #80                 // Field ofbOutV:[B
      54: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #47                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifeq          129
       7: aload_2
       8: checkcast     #47                 // class org/bouncycastle/crypto/params/ParametersWithIV
      11: astore_3
      12: aload_3
      13: invokevirtual #91                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      16: astore        4
      18: aload         4
      20: arraylength
      21: aload_0
      22: getfield      #79                 // Field IV:[B
      25: arraylength
      26: if_icmpge     85
      29: aload         4
      31: iconst_0
      32: aload_0
      33: getfield      #79                 // Field IV:[B
      36: aload_0
      37: getfield      #79                 // Field IV:[B
      40: arraylength
      41: aload         4
      43: arraylength
      44: isub
      45: aload         4
      47: arraylength
      48: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      51: iconst_0
      52: istore        5
      54: iload         5
      56: aload_0
      57: getfield      #79                 // Field IV:[B
      60: arraylength
      61: aload         4
      63: arraylength
      64: isub
      65: if_icmpge     82
      68: aload_0
      69: getfield      #79                 // Field IV:[B
      72: iload         5
      74: iconst_0
      75: bastore
      76: iinc          5, 1
      79: goto          54
      82: goto          101
      85: aload         4
      87: iconst_0
      88: aload_0
      89: getfield      #79                 // Field IV:[B
      92: iconst_0
      93: aload_0
      94: getfield      #79                 // Field IV:[B
      97: arraylength
      98: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     101: aload_0
     102: invokevirtual #89                 // Method reset:()V
     105: aload_3
     106: invokevirtual #92                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     109: ifnull        126
     112: aload_0
     113: getfield      #82                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     116: iconst_1
     117: aload_3
     118: invokevirtual #92                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     121: invokeinterface #97,  3           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     126: goto          148
     129: aload_0
     130: invokevirtual #89                 // Method reset:()V
     133: aload_2
     134: ifnull        148
     137: aload_0
     138: getfield      #82                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     141: iconst_1
     142: aload_2
     143: invokeinterface #97,  3           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     148: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #41                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #82                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #96,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /OFB
      21: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #77                 // Field blockSize:I
      28: bipush        8
      30: imul
      31: invokevirtual #85                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #77                 // Field blockSize:I
       4: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #77                 // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #90                 // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #77                 // Field blockSize:I
      18: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #79                 // Field IV:[B
       4: iconst_0
       5: aload_0
       6: getfield      #81                 // Field ofbV:[B
       9: iconst_0
      10: aload_0
      11: getfield      #79                 // Field IV:[B
      14: arraylength
      15: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_0
      19: iconst_0
      20: putfield      #78                 // Field byteCount:I
      23: aload_0
      24: getfield      #82                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      27: invokeinterface #94,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      32: return

  protected byte calculateByte(byte) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #78                 // Field byteCount:I
       4: ifne          27
       7: aload_0
       8: getfield      #82                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: aload_0
      12: getfield      #81                 // Field ofbV:[B
      15: iconst_0
      16: aload_0
      17: getfield      #80                 // Field ofbOutV:[B
      20: iconst_0
      21: invokeinterface #95,  5           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      26: pop
      27: aload_0
      28: getfield      #80                 // Field ofbOutV:[B
      31: aload_0
      32: dup
      33: getfield      #78                 // Field byteCount:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #78                 // Field byteCount:I
      42: baload
      43: iload_1
      44: ixor
      45: i2b
      46: istore_2
      47: aload_0
      48: getfield      #78                 // Field byteCount:I
      51: aload_0
      52: getfield      #77                 // Field blockSize:I
      55: if_icmpne     115
      58: aload_0
      59: iconst_0
      60: putfield      #78                 // Field byteCount:I
      63: aload_0
      64: getfield      #81                 // Field ofbV:[B
      67: aload_0
      68: getfield      #77                 // Field blockSize:I
      71: aload_0
      72: getfield      #81                 // Field ofbV:[B
      75: iconst_0
      76: aload_0
      77: getfield      #81                 // Field ofbV:[B
      80: arraylength
      81: aload_0
      82: getfield      #77                 // Field blockSize:I
      85: isub
      86: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload_0
      90: getfield      #80                 // Field ofbOutV:[B
      93: iconst_0
      94: aload_0
      95: getfield      #81                 // Field ofbV:[B
      98: aload_0
      99: getfield      #81                 // Field ofbV:[B
     102: arraylength
     103: aload_0
     104: getfield      #77                 // Field blockSize:I
     107: isub
     108: aload_0
     109: getfield      #77                 // Field blockSize:I
     112: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     115: iload_2
     116: ireturn
}
