public class org.bouncycastle.crypto.modes.SICBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher implements org.bouncycastle.crypto.SkippingStreamCipher {
  private final org.bouncycastle.crypto.BlockCipher cipher;

  private final int blockSize;

  private byte[] IV;

  private byte[] counter;

  private byte[] counterOut;

  private int byteCount;

  public org.bouncycastle.crypto.modes.SICBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #112                // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: aload_1
       7: putfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      10: aload_0
      11: aload_0
      12: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      15: invokeinterface #122,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      20: putfield      #100                // Field blockSize:I
      23: aload_0
      24: aload_0
      25: getfield      #100                // Field blockSize:I
      28: newarray       byte
      30: putfield      #102                // Field IV:[B
      33: aload_0
      34: aload_0
      35: getfield      #100                // Field blockSize:I
      38: newarray       byte
      40: putfield      #103                // Field counter:[B
      43: aload_0
      44: aload_0
      45: getfield      #100                // Field blockSize:I
      48: newarray       byte
      50: putfield      #104                // Field counterOut:[B
      53: aload_0
      54: iconst_0
      55: putfield      #101                // Field byteCount:I
      58: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #65                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifeq          62
       7: aload_2
       8: checkcast     #65                 // class org/bouncycastle/crypto/params/ParametersWithIV
      11: astore_3
      12: aload_3
      13: invokevirtual #119                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      16: astore        4
      18: aload         4
      20: iconst_0
      21: aload_0
      22: getfield      #102                // Field IV:[B
      25: iconst_0
      26: aload_0
      27: getfield      #102                // Field IV:[B
      30: arraylength
      31: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_3
      35: invokevirtual #120                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      38: ifnull        55
      41: aload_0
      42: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      45: iconst_1
      46: aload_3
      47: invokevirtual #120                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      50: invokeinterface #126,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      55: aload_0
      56: invokevirtual #115                // Method reset:()V
      59: goto          72
      62: new           #56                 // class java/lang/IllegalArgumentException
      65: dup
      66: ldc           #2                  // String SIC mode requires ParametersWithIV
      68: invokespecial #106                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #125,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /SIC
      21: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #109                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #122,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
       9: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #100                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #118                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #100                // Field blockSize:I
      18: ireturn

  protected byte calculateByte(byte) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #101                // Field byteCount:I
       4: ifne          47
       7: aload_0
       8: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: aload_0
      12: getfield      #103                // Field counter:[B
      15: iconst_0
      16: aload_0
      17: getfield      #104                // Field counterOut:[B
      20: iconst_0
      21: invokeinterface #124,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      26: pop
      27: aload_0
      28: getfield      #104                // Field counterOut:[B
      31: aload_0
      32: dup
      33: getfield      #101                // Field byteCount:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #101                // Field byteCount:I
      42: baload
      43: iload_1
      44: ixor
      45: i2b
      46: ireturn
      47: aload_0
      48: getfield      #104                // Field counterOut:[B
      51: aload_0
      52: dup
      53: getfield      #101                // Field byteCount:I
      56: dup_x1
      57: iconst_1
      58: iadd
      59: putfield      #101                // Field byteCount:I
      62: baload
      63: iload_1
      64: ixor
      65: i2b
      66: istore_2
      67: aload_0
      68: getfield      #101                // Field byteCount:I
      71: aload_0
      72: getfield      #103                // Field counter:[B
      75: arraylength
      76: if_icmpne     88
      79: aload_0
      80: iconst_0
      81: putfield      #101                // Field byteCount:I
      84: aload_0
      85: invokespecial #114                // Method incrementCounter:()V
      88: iload_2
      89: ireturn

  private void incrementCounter();
    Code:
       0: aload_0
       1: getfield      #103                // Field counter:[B
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_1
       8: iload_1
       9: iflt          33
      12: aload_0
      13: getfield      #103                // Field counter:[B
      16: iload_1
      17: dup2
      18: baload
      19: iconst_1
      20: iadd
      21: i2b
      22: dup_x2
      23: bastore
      24: ifne          33
      27: iinc          1, -1
      30: goto          8
      33: return

  private void decrementCounter();
    Code:
       0: aload_0
       1: getfield      #103                // Field counter:[B
       4: iconst_0
       5: baload
       6: ifne          54
       9: iconst_0
      10: istore_1
      11: aload_0
      12: getfield      #103                // Field counter:[B
      15: arraylength
      16: iconst_1
      17: isub
      18: istore_2
      19: iload_2
      20: ifle          40
      23: aload_0
      24: getfield      #103                // Field counter:[B
      27: iload_2
      28: baload
      29: ifeq          34
      32: iconst_1
      33: istore_1
      34: iinc          2, -1
      37: goto          19
      40: iload_1
      41: ifne          54
      44: new           #57                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #3                  // String attempt to reduce counter past zero.
      50: invokespecial #107                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: getfield      #103                // Field counter:[B
      58: arraylength
      59: iconst_1
      60: isub
      61: istore_1
      62: iload_1
      63: iflt          88
      66: aload_0
      67: getfield      #103                // Field counter:[B
      70: iload_1
      71: dup2
      72: baload
      73: iconst_1
      74: isub
      75: i2b
      76: dup_x2
      77: bastore
      78: iconst_m1
      79: if_icmpne     88
      82: iinc          1, -1
      85: goto          62
      88: return

  private void adjustCounter(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          66
       6: lload_1
       7: aload_0
       8: getfield      #101                // Field byteCount:I
      11: i2l
      12: ladd
      13: aload_0
      14: getfield      #100                // Field blockSize:I
      17: i2l
      18: ldiv
      19: lstore_3
      20: lconst_0
      21: lstore        5
      23: lload         5
      25: lload_3
      26: lcmp
      27: ifeq          43
      30: aload_0
      31: invokespecial #114                // Method incrementCounter:()V
      34: lload         5
      36: lconst_1
      37: ladd
      38: lstore        5
      40: goto          23
      43: aload_0
      44: lload_1
      45: aload_0
      46: getfield      #101                // Field byteCount:I
      49: i2l
      50: ladd
      51: aload_0
      52: getfield      #100                // Field blockSize:I
      55: i2l
      56: lload_3
      57: lmul
      58: lsub
      59: l2i
      60: putfield      #101                // Field byteCount:I
      63: goto          150
      66: lload_1
      67: lneg
      68: aload_0
      69: getfield      #101                // Field byteCount:I
      72: i2l
      73: lsub
      74: aload_0
      75: getfield      #100                // Field blockSize:I
      78: i2l
      79: ldiv
      80: lstore_3
      81: lconst_0
      82: lstore        5
      84: lload         5
      86: lload_3
      87: lcmp
      88: ifeq          104
      91: aload_0
      92: invokespecial #113                // Method decrementCounter:()V
      95: lload         5
      97: lconst_1
      98: ladd
      99: lstore        5
     101: goto          84
     104: aload_0
     105: getfield      #101                // Field byteCount:I
     108: i2l
     109: lload_1
     110: ladd
     111: aload_0
     112: getfield      #100                // Field blockSize:I
     115: i2l
     116: lload_3
     117: lmul
     118: ladd
     119: l2i
     120: istore        5
     122: iload         5
     124: iflt          135
     127: aload_0
     128: iconst_0
     129: putfield      #101                // Field byteCount:I
     132: goto          150
     135: aload_0
     136: invokespecial #113                // Method decrementCounter:()V
     139: aload_0
     140: aload_0
     141: getfield      #100                // Field blockSize:I
     144: iload         5
     146: iadd
     147: putfield      #101                // Field byteCount:I
     150: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #102                // Field IV:[B
       4: iconst_0
       5: aload_0
       6: getfield      #103                // Field counter:[B
       9: iconst_0
      10: aload_0
      11: getfield      #103                // Field counter:[B
      14: arraylength
      15: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_0
      19: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      22: invokeinterface #123,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      27: aload_0
      28: iconst_0
      29: putfield      #101                // Field byteCount:I
      32: return

  public long skip(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #117                // Method adjustCounter:(J)V
       5: aload_0
       6: getfield      #105                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       9: aload_0
      10: getfield      #103                // Field counter:[B
      13: iconst_0
      14: aload_0
      15: getfield      #104                // Field counterOut:[B
      18: iconst_0
      19: invokeinterface #124,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      24: pop
      25: lload_1
      26: lreturn

  public long seekTo(long);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method reset:()V
       4: aload_0
       5: lload_1
       6: invokevirtual #116                // Method skip:(J)J
       9: lreturn

  public long getPosition();
    Code:
       0: aload_0
       1: getfield      #102                // Field IV:[B
       4: arraylength
       5: newarray       byte
       7: astore_1
       8: aload_0
       9: getfield      #103                // Field counter:[B
      12: iconst_0
      13: aload_1
      14: iconst_0
      15: aload_1
      16: arraylength
      17: invokestatic  #111                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_1
      21: arraylength
      22: iconst_1
      23: isub
      24: istore_2
      25: iload_2
      26: iconst_1
      27: if_icmplt     72
      30: aload_1
      31: iload_2
      32: baload
      33: aload_0
      34: getfield      #102                // Field IV:[B
      37: iload_2
      38: baload
      39: isub
      40: istore_3
      41: iload_3
      42: ifge          61
      45: aload_1
      46: iload_2
      47: iconst_1
      48: isub
      49: dup2
      50: baload
      51: iconst_1
      52: isub
      53: i2b
      54: bastore
      55: iinc_w        3, 256
      61: aload_1
      62: iload_2
      63: iload_3
      64: i2b
      65: bastore
      66: iinc          2, -1
      69: goto          25
      72: aload_1
      73: aload_1
      74: arraylength
      75: bipush        8
      77: isub
      78: invokestatic  #121                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      81: aload_0
      82: getfield      #100                // Field blockSize:I
      85: i2l
      86: lmul
      87: aload_0
      88: getfield      #101                // Field byteCount:I
      91: i2l
      92: ladd
      93: lreturn
}
