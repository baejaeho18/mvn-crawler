class org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1 implements org.bouncycastle.crypto.prng.EntropySource {
  final int val$bitsRequired;

  final org.bouncycastle.crypto.prng.BasicEntropySourceProvider this$0;

  org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1(org.bouncycastle.crypto.prng.BasicEntropySourceProvider, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
       5: aload_0
       6: iload_2
       7: putfield      #39                 // Field val$bitsRequired:I
      10: aload_0
      11: invokespecial #41                 // Method java/lang/Object."<init>":()V
      14: return

  public boolean isPredictionResistant();
    Code:
       0: aload_0
       1: getfield      #40                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
       4: invokestatic  #43                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$000:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Z
       7: ireturn

  public byte[] getEntropy();
    Code:
       0: aload_0
       1: getfield      #40                 // Field this$0:Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;
       4: invokestatic  #44                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider.access$100:(Lorg/bouncycastle/crypto/prng/BasicEntropySourceProvider;)Ljava/security/SecureRandom;
       7: aload_0
       8: getfield      #39                 // Field val$bitsRequired:I
      11: bipush        7
      13: iadd
      14: bipush        8
      16: idiv
      17: invokevirtual #42                 // Method java/security/SecureRandom.generateSeed:(I)[B
      20: areturn

  public int entropySize();
    Code:
       0: aload_0
       1: getfield      #39                 // Field val$bitsRequired:I
       4: ireturn
}
