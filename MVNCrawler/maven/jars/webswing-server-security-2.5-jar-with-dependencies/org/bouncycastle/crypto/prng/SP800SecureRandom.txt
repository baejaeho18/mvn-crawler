public class org.bouncycastle.crypto.prng.SP800SecureRandom extends java.security.SecureRandom {
  private final org.bouncycastle.crypto.prng.DRBGProvider drbgProvider;

  private final boolean predictionResistant;

  private final java.security.SecureRandom randomSource;

  private final org.bouncycastle.crypto.prng.EntropySource entropySource;

  private org.bouncycastle.crypto.prng.drbg.SP80090DRBG drbg;

  org.bouncycastle.crypto.prng.SP800SecureRandom(java.security.SecureRandom, org.bouncycastle.crypto.prng.EntropySource, org.bouncycastle.crypto.prng.DRBGProvider, boolean);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method java/security/SecureRandom."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #51                 // Field randomSource:Ljava/security/SecureRandom;
       9: aload_0
      10: aload_2
      11: putfield      #53                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
      14: aload_0
      15: aload_3
      16: putfield      #52                 // Field drbgProvider:Lorg/bouncycastle/crypto/prng/DRBGProvider;
      19: aload_0
      20: iload         4
      22: putfield      #50                 // Field predictionResistant:Z
      25: return

  public void setSeed(byte[]);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #51                 // Field randomSource:Ljava/security/SecureRandom;
       8: ifnull        19
      11: aload_0
      12: getfield      #51                 // Field randomSource:Ljava/security/SecureRandom;
      15: aload_1
      16: invokevirtual #57                 // Method java/security/SecureRandom.setSeed:([B)V
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
           4    21    24   any
          24    27    24   any

  public void setSeed(long);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #51                 // Field randomSource:Ljava/security/SecureRandom;
       8: ifnull        19
      11: aload_0
      12: getfield      #51                 // Field randomSource:Ljava/security/SecureRandom;
      15: lload_1
      16: invokevirtual #56                 // Method java/security/SecureRandom.setSeed:(J)V
      19: aload_3
      20: monitorexit
      21: goto          31
      24: astore        4
      26: aload_3
      27: monitorexit
      28: aload         4
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    21    24   any
          24    28    24   any

  public void nextBytes(byte[]);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #54                 // Field drbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
       8: ifnonnull     28
      11: aload_0
      12: aload_0
      13: getfield      #52                 // Field drbgProvider:Lorg/bouncycastle/crypto/prng/DRBGProvider;
      16: aload_0
      17: getfield      #53                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
      20: invokeinterface #59,  2           // InterfaceMethod org/bouncycastle/crypto/prng/DRBGProvider.get:(Lorg/bouncycastle/crypto/prng/EntropySource;)Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      25: putfield      #54                 // Field drbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      28: aload_0
      29: getfield      #54                 // Field drbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      32: aload_1
      33: aconst_null
      34: aload_0
      35: getfield      #50                 // Field predictionResistant:Z
      38: invokeinterface #62,  4           // InterfaceMethod org/bouncycastle/crypto/prng/drbg/SP80090DRBG.generate:([B[BZ)I
      43: ifge          80
      46: aload_0
      47: getfield      #54                 // Field drbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      50: aload_0
      51: getfield      #53                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
      54: invokeinterface #60,  1           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySource.getEntropy:()[B
      59: invokeinterface #61,  2           // InterfaceMethod org/bouncycastle/crypto/prng/drbg/SP80090DRBG.reseed:([B)V
      64: aload_0
      65: getfield      #54                 // Field drbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      68: aload_1
      69: aconst_null
      70: aload_0
      71: getfield      #50                 // Field predictionResistant:Z
      74: invokeinterface #62,  4           // InterfaceMethod org/bouncycastle/crypto/prng/drbg/SP80090DRBG.generate:([B[BZ)I
      79: pop
      80: aload_2
      81: monitorexit
      82: goto          90
      85: astore_3
      86: aload_2
      87: monitorexit
      88: aload_3
      89: athrow
      90: return
    Exception table:
       from    to  target type
           4    82    85   any
          85    88    85   any

  public byte[] generateSeed(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokevirtual #58                 // Method nextBytes:([B)V
       9: aload_2
      10: areturn
}
