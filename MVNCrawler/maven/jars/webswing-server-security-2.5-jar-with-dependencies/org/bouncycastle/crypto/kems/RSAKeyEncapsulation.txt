public class org.bouncycastle.crypto.kems.RSAKeyEncapsulation implements org.bouncycastle.crypto.KeyEncapsulation {
  private static final java.math.BigInteger ZERO;

  private static final java.math.BigInteger ONE;

  private org.bouncycastle.crypto.DerivationFunction kdf;

  private java.security.SecureRandom rnd;

  private org.bouncycastle.crypto.params.RSAKeyParameters key;

  public org.bouncycastle.crypto.kems.RSAKeyEncapsulation(org.bouncycastle.crypto.DerivationFunction, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #105                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
       9: aload_0
      10: aload_2
      11: putfield      #104                // Field rnd:Ljava/security/SecureRandom;
      14: return

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: instanceof    #56                 // class org/bouncycastle/crypto/params/RSAKeyParameters
       4: ifne          17
       7: new           #47                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #3                  // String RSA key required
      13: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #56                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      22: putfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      25: return

  public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: invokevirtual #120                // Method org/bouncycastle/crypto/params/RSAKeyParameters.isPrivate:()Z
       7: ifeq          20
      10: new           #47                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #2                  // String Public key required for encryption
      16: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      24: invokevirtual #122                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
      27: astore        4
      29: aload_0
      30: getfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      33: invokevirtual #121                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getExponent:()Ljava/math/BigInteger;
      36: astore        5
      38: getstatic     #103                // Field ZERO:Ljava/math/BigInteger;
      41: aload         4
      43: getstatic     #102                // Field ONE:Ljava/math/BigInteger;
      46: invokevirtual #113                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      49: aload_0
      50: getfield      #104                // Field rnd:Ljava/security/SecureRandom;
      53: invokestatic  #124                // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      56: astore        6
      58: aload         6
      60: aload         5
      62: aload         4
      64: invokevirtual #114                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      67: astore        7
      69: aload         4
      71: invokevirtual #110                // Method java/math/BigInteger.bitLength:()I
      74: bipush        7
      76: iadd
      77: bipush        8
      79: idiv
      80: aload         7
      82: invokestatic  #123                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(ILjava/math/BigInteger;)[B
      85: astore        8
      87: aload         8
      89: iconst_0
      90: aload_1
      91: iload_2
      92: aload         8
      94: arraylength
      95: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload_0
      99: aload         4
     101: aload         6
     103: iload_3
     104: invokevirtual #117                // Method generateKey:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Lorg/bouncycastle/crypto/params/KeyParameter;
     107: areturn

  public org.bouncycastle.crypto.CipherParameters encrypt(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iload_2
       4: invokevirtual #115                // Method encrypt:([BII)Lorg/bouncycastle/crypto/CipherParameters;
       7: areturn

  public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int, int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: invokevirtual #120                // Method org/bouncycastle/crypto/params/RSAKeyParameters.isPrivate:()Z
       7: ifne          20
      10: new           #47                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #1                  // String Private key required for decryption
      16: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      24: invokevirtual #122                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
      27: astore        5
      29: aload_0
      30: getfield      #106                // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      33: invokevirtual #121                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getExponent:()Ljava/math/BigInteger;
      36: astore        6
      38: iload_3
      39: newarray       byte
      41: astore        7
      43: aload_1
      44: iload_2
      45: aload         7
      47: iconst_0
      48: aload         7
      50: arraylength
      51: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: new           #50                 // class java/math/BigInteger
      57: dup
      58: iconst_1
      59: aload         7
      61: invokespecial #111                // Method java/math/BigInteger."<init>":(I[B)V
      64: astore        8
      66: aload         8
      68: aload         6
      70: aload         5
      72: invokevirtual #114                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      75: astore        9
      77: aload_0
      78: aload         5
      80: aload         9
      82: iload         4
      84: invokevirtual #117                // Method generateKey:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Lorg/bouncycastle/crypto/params/KeyParameter;
      87: areturn

  public org.bouncycastle.crypto.CipherParameters decrypt(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: iload_2
       6: invokevirtual #116                // Method decrypt:([BIII)Lorg/bouncycastle/crypto/CipherParameters;
       9: areturn

  protected org.bouncycastle.crypto.params.KeyParameter generateKey(java.math.BigInteger, java.math.BigInteger, int);
    Code:
       0: aload_1
       1: invokevirtual #110                // Method java/math/BigInteger.bitLength:()I
       4: bipush        7
       6: iadd
       7: bipush        8
       9: idiv
      10: aload_2
      11: invokestatic  #123                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(ILjava/math/BigInteger;)[B
      14: astore        4
      16: aload_0
      17: getfield      #105                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
      20: new           #54                 // class org/bouncycastle/crypto/params/KDFParameters
      23: dup
      24: aload         4
      26: aconst_null
      27: invokespecial #118                // Method org/bouncycastle/crypto/params/KDFParameters."<init>":([B[B)V
      30: invokeinterface #126,  2          // InterfaceMethod org/bouncycastle/crypto/DerivationFunction.init:(Lorg/bouncycastle/crypto/DerivationParameters;)V
      35: iload_3
      36: newarray       byte
      38: astore        5
      40: aload_0
      41: getfield      #105                // Field kdf:Lorg/bouncycastle/crypto/DerivationFunction;
      44: aload         5
      46: iconst_0
      47: aload         5
      49: arraylength
      50: invokeinterface #125,  4          // InterfaceMethod org/bouncycastle/crypto/DerivationFunction.generateBytes:([BII)I
      55: pop
      56: new           #55                 // class org/bouncycastle/crypto/params/KeyParameter
      59: dup
      60: aload         5
      62: invokespecial #119                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      65: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #103                // Field ZERO:Ljava/math/BigInteger;
       7: lconst_1
       8: invokestatic  #112                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      11: putstatic     #102                // Field ONE:Ljava/math/BigInteger;
      14: return
}
