public class org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator implements org.bouncycastle.crypto.MacDerivationFunction {
  private static final java.math.BigInteger INTEGER_MAX;

  private static final java.math.BigInteger TWO;

  private final org.bouncycastle.crypto.Mac prf;

  private final int h;

  private byte[] fixedInputData;

  private int maxSizeExcl;

  private byte[] ios;

  private boolean useCounter;

  private int generatedBytes;

  private byte[] a;

  private byte[] k;

  public org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator(org.bouncycastle.crypto.Mac);
    Code:
       0: aload_0
       1: invokespecial #146                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
       9: aload_0
      10: aload_1
      11: invokeinterface #164,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      16: putfield      #133                // Field h:I
      19: aload_0
      20: aload_0
      21: getfield      #133                // Field h:I
      24: newarray       byte
      26: putfield      #136                // Field a:[B
      29: aload_0
      30: aload_0
      31: getfield      #133                // Field h:I
      34: newarray       byte
      36: putfield      #139                // Field k:[B
      39: return

  public void init(org.bouncycastle.crypto.DerivationParameters);
    Code:
       0: aload_1
       1: instanceof    #82                 // class org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters
       4: ifne          17
       7: new           #71                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #5                  // String Wrong type of arguments given
      13: invokespecial #143                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #82                 // class org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters
      21: astore_2
      22: aload_0
      23: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
      26: new           #83                 // class org/bouncycastle/crypto/params/KeyParameter
      29: dup
      30: aload_2
      31: invokevirtual #162                // Method org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters.getKI:()[B
      34: invokespecial #163                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      37: invokeinterface #167,  2          // InterfaceMethod org/bouncycastle/crypto/Mac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      42: aload_0
      43: aload_2
      44: invokevirtual #161                // Method org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters.getFixedInputData:()[B
      47: putfield      #137                // Field fixedInputData:[B
      50: aload_2
      51: invokevirtual #159                // Method org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters.getR:()I
      54: istore_3
      55: aload_0
      56: iload_3
      57: bipush        8
      59: idiv
      60: newarray       byte
      62: putfield      #138                // Field ios:[B
      65: aload_2
      66: invokevirtual #160                // Method org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters.useCounter:()Z
      69: ifeq          121
      72: getstatic     #141                // Field TWO:Ljava/math/BigInteger;
      75: iload_3
      76: invokevirtual #153                // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
      79: aload_0
      80: getfield      #133                // Field h:I
      83: i2l
      84: invokestatic  #154                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      87: invokevirtual #156                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      90: astore        4
      92: aload_0
      93: aload         4
      95: getstatic     #140                // Field INTEGER_MAX:Ljava/math/BigInteger;
      98: invokevirtual #155                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     101: iconst_1
     102: if_icmpne     110
     105: ldc           #1                  // int 2147483647
     107: goto          115
     110: aload         4
     112: invokevirtual #152                // Method java/math/BigInteger.intValue:()I
     115: putfield      #134                // Field maxSizeExcl:I
     118: goto          127
     121: aload_0
     122: ldc           #1                  // int 2147483647
     124: putfield      #134                // Field maxSizeExcl:I
     127: aload_0
     128: aload_2
     129: invokevirtual #160                // Method org/bouncycastle/crypto/params/KDFDoublePipelineIterationParameters.useCounter:()Z
     132: putfield      #135                // Field useCounter:Z
     135: aload_0
     136: iconst_0
     137: putfield      #132                // Field generatedBytes:I
     140: return

  public org.bouncycastle.crypto.Mac getMac();
    Code:
       0: aload_0
       1: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
       4: areturn

  public int generateBytes(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #132                // Field generatedBytes:I
       4: iload_3
       5: iadd
       6: istore        4
       8: iload         4
      10: iflt          22
      13: iload         4
      15: aload_0
      16: getfield      #134                // Field maxSizeExcl:I
      19: if_icmplt     57
      22: new           #78                 // class org/bouncycastle/crypto/DataLengthException
      25: dup
      26: new           #75                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #147                // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #3                  // String Current KDFCTR may only be used for
      35: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #134                // Field maxSizeExcl:I
      42: invokevirtual #149                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #2                  // String  bytes
      47: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #148                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #157                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #132                // Field generatedBytes:I
      61: aload_0
      62: getfield      #133                // Field h:I
      65: irem
      66: ifne          73
      69: aload_0
      70: invokespecial #158                // Method generateNext:()V
      73: iload_3
      74: istore        5
      76: aload_0
      77: getfield      #132                // Field generatedBytes:I
      80: aload_0
      81: getfield      #133                // Field h:I
      84: irem
      85: istore        6
      87: aload_0
      88: getfield      #133                // Field h:I
      91: aload_0
      92: getfield      #132                // Field generatedBytes:I
      95: aload_0
      96: getfield      #133                // Field h:I
      99: irem
     100: isub
     101: istore        7
     103: iload         7
     105: iload         5
     107: invokestatic  #145                // Method java/lang/Math.min:(II)I
     110: istore        8
     112: aload_0
     113: getfield      #139                // Field k:[B
     116: iload         6
     118: aload_1
     119: iload_2
     120: iload         8
     122: invokestatic  #151                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: aload_0
     126: dup
     127: getfield      #132                // Field generatedBytes:I
     130: iload         8
     132: iadd
     133: putfield      #132                // Field generatedBytes:I
     136: iload         5
     138: iload         8
     140: isub
     141: istore        5
     143: iload_2
     144: iload         8
     146: iadd
     147: istore_2
     148: iload         5
     150: ifle          206
     153: aload_0
     154: invokespecial #158                // Method generateNext:()V
     157: aload_0
     158: getfield      #133                // Field h:I
     161: iload         5
     163: invokestatic  #145                // Method java/lang/Math.min:(II)I
     166: istore        8
     168: aload_0
     169: getfield      #139                // Field k:[B
     172: iconst_0
     173: aload_1
     174: iload_2
     175: iload         8
     177: invokestatic  #151                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     180: aload_0
     181: dup
     182: getfield      #132                // Field generatedBytes:I
     185: iload         8
     187: iadd
     188: putfield      #132                // Field generatedBytes:I
     191: iload         5
     193: iload         8
     195: isub
     196: istore        5
     198: iload_2
     199: iload         8
     201: iadd
     202: istore_2
     203: goto          148
     206: iload_3
     207: ireturn

  private void generateNext();
    Code:
       0: aload_0
       1: getfield      #132                // Field generatedBytes:I
       4: ifne          44
       7: aload_0
       8: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
      11: aload_0
      12: getfield      #137                // Field fixedInputData:[B
      15: iconst_0
      16: aload_0
      17: getfield      #137                // Field fixedInputData:[B
      20: arraylength
      21: invokeinterface #166,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      26: aload_0
      27: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
      30: aload_0
      31: getfield      #136                // Field a:[B
      34: iconst_0
      35: invokeinterface #165,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
      40: pop
      41: goto          78
      44: aload_0
      45: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
      48: aload_0
      49: getfield      #136                // Field a:[B
      52: iconst_0
      53: aload_0
      54: getfield      #136                // Field a:[B
      57: arraylength
      58: invokeinterface #166,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      63: aload_0
      64: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
      67: aload_0
      68: getfield      #136                // Field a:[B
      71: iconst_0
      72: invokeinterface #165,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
      77: pop
      78: aload_0
      79: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
      82: aload_0
      83: getfield      #136                // Field a:[B
      86: iconst_0
      87: aload_0
      88: getfield      #136                // Field a:[B
      91: arraylength
      92: invokeinterface #166,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      97: aload_0
      98: getfield      #135                // Field useCounter:Z
     101: ifeq          243
     104: aload_0
     105: getfield      #132                // Field generatedBytes:I
     108: aload_0
     109: getfield      #133                // Field h:I
     112: idiv
     113: iconst_1
     114: iadd
     115: istore_1
     116: aload_0
     117: getfield      #138                // Field ios:[B
     120: arraylength
     121: tableswitch   { // 1 to 4
                     1: 197
                     2: 180
                     3: 163
                     4: 152
               default: 214
          }
     152: aload_0
     153: getfield      #138                // Field ios:[B
     156: iconst_0
     157: iload_1
     158: bipush        24
     160: iushr
     161: i2b
     162: bastore
     163: aload_0
     164: getfield      #138                // Field ios:[B
     167: aload_0
     168: getfield      #138                // Field ios:[B
     171: arraylength
     172: iconst_3
     173: isub
     174: iload_1
     175: bipush        16
     177: iushr
     178: i2b
     179: bastore
     180: aload_0
     181: getfield      #138                // Field ios:[B
     184: aload_0
     185: getfield      #138                // Field ios:[B
     188: arraylength
     189: iconst_2
     190: isub
     191: iload_1
     192: bipush        8
     194: iushr
     195: i2b
     196: bastore
     197: aload_0
     198: getfield      #138                // Field ios:[B
     201: aload_0
     202: getfield      #138                // Field ios:[B
     205: arraylength
     206: iconst_1
     207: isub
     208: iload_1
     209: i2b
     210: bastore
     211: goto          224
     214: new           #72                 // class java/lang/IllegalStateException
     217: dup
     218: ldc           #4                  // String Unsupported size of counter i
     220: invokespecial #144                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: aload_0
     225: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
     228: aload_0
     229: getfield      #138                // Field ios:[B
     232: iconst_0
     233: aload_0
     234: getfield      #138                // Field ios:[B
     237: arraylength
     238: invokeinterface #166,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     243: aload_0
     244: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
     247: aload_0
     248: getfield      #137                // Field fixedInputData:[B
     251: iconst_0
     252: aload_0
     253: getfield      #137                // Field fixedInputData:[B
     256: arraylength
     257: invokeinterface #166,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     262: aload_0
     263: getfield      #142                // Field prf:Lorg/bouncycastle/crypto/Mac;
     266: aload_0
     267: getfield      #139                // Field k:[B
     270: iconst_0
     271: invokeinterface #165,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
     276: pop
     277: return

  static {};
    Code:
       0: ldc2_w        #69                 // long 2147483647l
       3: invokestatic  #154                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #140                // Field INTEGER_MAX:Ljava/math/BigInteger;
       9: ldc2_w        #67                 // long 2l
      12: invokestatic  #154                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      15: putstatic     #141                // Field TWO:Ljava/math/BigInteger;
      18: return
}
