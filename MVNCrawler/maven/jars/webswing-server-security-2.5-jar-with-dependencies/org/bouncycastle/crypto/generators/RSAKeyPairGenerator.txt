public class org.bouncycastle.crypto.generators.RSAKeyPairGenerator implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator {
  private static final java.math.BigInteger ONE;

  private org.bouncycastle.crypto.params.RSAKeyGenerationParameters param;

  public org.bouncycastle.crypto.generators.RSAKeyPairGenerator();
    Code:
       0: aload_0
       1: invokespecial #90                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.KeyGenerationParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #43                 // class org/bouncycastle/crypto/params/RSAKeyGenerationParameters
       5: putfield      #89                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
       8: return

  public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair();
    Code:
       0: aload_0
       1: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
       4: invokevirtual #108                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters.getStrength:()I
       7: istore        9
       9: iload         9
      11: iconst_1
      12: iushr
      13: istore        10
      15: iload         9
      17: iload         10
      19: isub
      20: istore        11
      22: iload         9
      24: iconst_3
      25: idiv
      26: istore        12
      28: iload         9
      30: iconst_2
      31: iushr
      32: istore        13
      34: aload_0
      35: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      38: invokevirtual #109                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters.getPublicExponent:()Ljava/math/BigInteger;
      41: astore        5
      43: aload_0
      44: iload         11
      46: aload         5
      48: invokevirtual #106                // Method chooseRandomPrime:(ILjava/math/BigInteger;)Ljava/math/BigInteger;
      51: astore_1
      52: aload_0
      53: iload         10
      55: aload         5
      57: invokevirtual #106                // Method chooseRandomPrime:(ILjava/math/BigInteger;)Ljava/math/BigInteger;
      60: astore_2
      61: aload_2
      62: aload_1
      63: invokevirtual #104                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      66: invokevirtual #94                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      69: astore        14
      71: aload         14
      73: invokevirtual #91                 // Method java/math/BigInteger.bitLength:()I
      76: iload         12
      78: if_icmpge     84
      81: goto          52
      84: aload_1
      85: aload_2
      86: invokevirtual #102                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      89: astore_3
      90: aload_3
      91: invokevirtual #91                 // Method java/math/BigInteger.bitLength:()I
      94: iload         9
      96: if_icmpeq     108
      99: aload_1
     100: aload_2
     101: invokevirtual #99                 // Method java/math/BigInteger.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     104: astore_1
     105: goto          52
     108: aload_3
     109: invokestatic  #113                // Method org/bouncycastle/math/ec/WNafUtil.getNafWeight:(Ljava/math/BigInteger;)I
     112: iload         13
     114: if_icmpge     129
     117: aload_0
     118: iload         11
     120: aload         5
     122: invokevirtual #106                // Method chooseRandomPrime:(ILjava/math/BigInteger;)Ljava/math/BigInteger;
     125: astore_1
     126: goto          52
     129: aload_1
     130: aload_2
     131: invokevirtual #96                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     134: ifge          145
     137: aload_1
     138: astore        8
     140: aload_2
     141: astore_1
     142: aload         8
     144: astore_2
     145: aload_1
     146: getstatic     #88                 // Field ONE:Ljava/math/BigInteger;
     149: invokevirtual #104                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     152: astore        6
     154: aload_2
     155: getstatic     #88                 // Field ONE:Ljava/math/BigInteger;
     158: invokevirtual #104                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     161: astore        7
     163: aload         6
     165: aload         7
     167: invokevirtual #102                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     170: astore        8
     172: aload         5
     174: aload         8
     176: invokevirtual #101                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     179: astore        4
     181: aload         4
     183: aload         6
     185: invokevirtual #103                // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     188: astore        14
     190: aload         4
     192: aload         7
     194: invokevirtual #103                // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     197: astore        15
     199: aload_2
     200: aload_1
     201: invokevirtual #101                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     204: astore        16
     206: new           #40                 // class org/bouncycastle/crypto/AsymmetricCipherKeyPair
     209: dup
     210: new           #44                 // class org/bouncycastle/crypto/params/RSAKeyParameters
     213: dup
     214: iconst_0
     215: aload_3
     216: aload         5
     218: invokespecial #111                // Method org/bouncycastle/crypto/params/RSAKeyParameters."<init>":(ZLjava/math/BigInteger;Ljava/math/BigInteger;)V
     221: new           #45                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
     224: dup
     225: aload_3
     226: aload         5
     228: aload         4
     230: aload_1
     231: aload_2
     232: aload         14
     234: aload         15
     236: aload         16
     238: invokespecial #112                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     241: invokespecial #105                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair."<init>":(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V
     244: areturn

  protected java.math.BigInteger chooseRandomPrime(int, java.math.BigInteger);
    Code:
       0: new           #39                 // class java/math/BigInteger
       3: dup
       4: iload_1
       5: iconst_1
       6: aload_0
       7: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      10: invokevirtual #110                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters.getRandom:()Ljava/security/SecureRandom;
      13: invokespecial #97                 // Method java/math/BigInteger."<init>":(IILjava/util/Random;)V
      16: astore_3
      17: aload_3
      18: aload_2
      19: invokevirtual #100                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      22: getstatic     #88                 // Field ONE:Ljava/math/BigInteger;
      25: invokevirtual #93                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      28: ifeq          34
      31: goto          0
      34: aload_3
      35: aload_0
      36: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/params/RSAKeyGenerationParameters;
      39: invokevirtual #107                // Method org/bouncycastle/crypto/params/RSAKeyGenerationParameters.getCertainty:()I
      42: invokevirtual #92                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      45: ifne          51
      48: goto          0
      51: aload_2
      52: aload_3
      53: getstatic     #88                 // Field ONE:Ljava/math/BigInteger;
      56: invokevirtual #104                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      59: invokevirtual #98                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      62: getstatic     #88                 // Field ONE:Ljava/math/BigInteger;
      65: invokevirtual #93                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      68: ifne          74
      71: goto          0
      74: aload_3
      75: areturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #95                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #88                 // Field ONE:Ljava/math/BigInteger;
       7: return
}
