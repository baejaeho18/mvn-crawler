public class org.bouncycastle.crypto.generators.SCrypt {
  public org.bouncycastle.crypto.generators.SCrypt();
    Code:
       0: aload_0
       1: invokespecial #116                // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] generate(byte[], byte[], int, int, int, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #72                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String Passphrase P must be provided.
      10: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #72                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #11                 // String Salt S must be provided.
      24: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iload_2
      29: iconst_1
      30: if_icmpgt     43
      33: new           #72                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #7                  // String Cost parameter N must be > 1.
      39: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_3
      44: iconst_1
      45: if_icmpne     64
      48: iload_2
      49: ldc           #1                  // int 65536
      51: if_icmple     64
      54: new           #72                 // class java/lang/IllegalArgumentException
      57: dup
      58: ldc           #6                  // String Cost parameter N must be > 1 and < 65536.
      60: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iload_3
      65: iconst_1
      66: if_icmpge     79
      69: new           #72                 // class java/lang/IllegalArgumentException
      72: dup
      73: ldc           #5                  // String Block size r must be >= 1.
      75: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: ldc           #2                  // int 2147483647
      81: sipush        128
      84: iload_3
      85: imul
      86: bipush        8
      88: imul
      89: idiv
      90: istore        6
      92: iload         4
      94: iconst_1
      95: if_icmplt     105
      98: iload         4
     100: iload         6
     102: if_icmple     147
     105: new           #72                 // class java/lang/IllegalArgumentException
     108: dup
     109: new           #74                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #117                // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #9                  // String Parallelisation parameter p must be >= 1 and <=
     118: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: iload         6
     123: invokevirtual #119                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     126: ldc           #3                  // String  (based on block size r of
     128: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: iload_3
     132: invokevirtual #119                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: ldc           #4                  // String )
     137: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: iload         5
     149: iconst_1
     150: if_icmpge     163
     153: new           #72                 // class java/lang/IllegalArgumentException
     156: dup
     157: ldc           #8                  // String Generated key length dkLen must be >= 1.
     159: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     162: athrow
     163: aload_0
     164: aload_1
     165: iload_2
     166: iload_3
     167: iload         4
     169: iload         5
     171: invokestatic  #129                // Method MFcrypt:([B[BIIII)[B
     174: areturn

  private static byte[] MFcrypt(byte[], byte[], int, int, int, int);
    Code:
       0: iload_3
       1: sipush        128
       4: imul
       5: istore        6
       7: aload_0
       8: aload_1
       9: iload         4
      11: iload         6
      13: imul
      14: invokestatic  #128                // Method SingleIterationPBKDF2:([B[BI)[B
      17: astore        7
      19: aconst_null
      20: astore        8
      22: aload         7
      24: arraylength
      25: iconst_2
      26: iushr
      27: istore        9
      29: iload         9
      31: newarray       int
      33: astore        8
      35: aload         7
      37: iconst_0
      38: aload         8
      40: invokestatic  #139                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[I)V
      43: iload         6
      45: iconst_2
      46: iushr
      47: istore        10
      49: iconst_0
      50: istore        11
      52: iload         11
      54: iload         9
      56: if_icmpge     78
      59: aload         8
      61: iload         11
      63: iload_2
      64: iload_3
      65: invokestatic  #131                // Method SMix:([IIII)V
      68: iload         11
      70: iload         10
      72: iadd
      73: istore        11
      75: goto          52
      78: aload         8
      80: aload         7
      82: iconst_0
      83: invokestatic  #140                // Method org/bouncycastle/util/Pack.intToLittleEndian:([I[BI)V
      86: aload_0
      87: aload         7
      89: iload         5
      91: invokestatic  #128                // Method SingleIterationPBKDF2:([B[BI)[B
      94: astore        11
      96: aload         7
      98: invokestatic  #127                // Method Clear:([B)V
     101: aload         8
     103: invokestatic  #130                // Method Clear:([I)V
     106: aload         11
     108: areturn
     109: astore        12
     111: aload         7
     113: invokestatic  #127                // Method Clear:([B)V
     116: aload         8
     118: invokestatic  #130                // Method Clear:([I)V
     121: aload         12
     123: athrow
    Exception table:
       from    to  target type
          22    96   109   any
         109   111   109   any

  private static byte[] SingleIterationPBKDF2(byte[], byte[], int);
    Code:
       0: new           #79                 // class org/bouncycastle/crypto/generators/PKCS5S2ParametersGenerator
       3: dup
       4: new           #77                 // class org/bouncycastle/crypto/digests/SHA256Digest
       7: dup
       8: invokespecial #124                // Method org/bouncycastle/crypto/digests/SHA256Digest."<init>":()V
      11: invokespecial #126                // Method org/bouncycastle/crypto/generators/PKCS5S2ParametersGenerator."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      14: astore_3
      15: aload_3
      16: aload_0
      17: aload_1
      18: iconst_1
      19: invokevirtual #122                // Method org/bouncycastle/crypto/PBEParametersGenerator.init:([B[BI)V
      22: aload_3
      23: iload_2
      24: bipush        8
      26: imul
      27: invokevirtual #123                // Method org/bouncycastle/crypto/PBEParametersGenerator.generateDerivedMacParameters:(I)Lorg/bouncycastle/crypto/CipherParameters;
      30: checkcast     #81                 // class org/bouncycastle/crypto/params/KeyParameter
      33: astore        4
      35: aload         4
      37: invokevirtual #135                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      40: areturn

  private static void SMix(int[], int, int, int);
    Code:
       0: iload_3
       1: bipush        32
       3: imul
       4: istore        4
       6: bipush        16
       8: newarray       int
      10: astore        5
      12: bipush        16
      14: newarray       int
      16: astore        6
      18: iload         4
      20: newarray       int
      22: astore        7
      24: iload         4
      26: newarray       int
      28: astore        8
      30: iload_2
      31: anewarray     #71                 // class "[I"
      34: astore        9
      36: aload_0
      37: iload_1
      38: aload         8
      40: iconst_0
      41: iload         4
      43: invokestatic  #121                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: iconst_0
      47: istore        10
      49: iload         10
      51: iload_2
      52: if_icmpge     83
      55: aload         9
      57: iload         10
      59: aload         8
      61: invokestatic  #137                // Method org/bouncycastle/util/Arrays.clone:([I)[I
      64: aastore
      65: aload         8
      67: aload         5
      69: aload         6
      71: aload         7
      73: iload_3
      74: invokestatic  #133                // Method BlockMix:([I[I[I[II)V
      77: iinc          10, 1
      80: goto          49
      83: iload_2
      84: iconst_1
      85: isub
      86: istore        10
      88: iconst_0
      89: istore        11
      91: iload         11
      93: iload_2
      94: if_icmpge     141
      97: aload         8
      99: iload         4
     101: bipush        16
     103: isub
     104: iaload
     105: iload         10
     107: iand
     108: istore        12
     110: aload         8
     112: aload         9
     114: iload         12
     116: aaload
     117: iconst_0
     118: aload         8
     120: invokestatic  #132                // Method Xor:([I[II[I)V
     123: aload         8
     125: aload         5
     127: aload         6
     129: aload         7
     131: iload_3
     132: invokestatic  #133                // Method BlockMix:([I[I[I[II)V
     135: iinc          11, 1
     138: goto          91
     141: aload         8
     143: iconst_0
     144: aload_0
     145: iload_1
     146: iload         4
     148: invokestatic  #121                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     151: aload         9
     153: invokestatic  #134                // Method ClearAll:([[I)V
     156: iconst_4
     157: anewarray     #71                 // class "[I"
     160: dup
     161: iconst_0
     162: aload         8
     164: aastore
     165: dup
     166: iconst_1
     167: aload         5
     169: aastore
     170: dup
     171: iconst_2
     172: aload         6
     174: aastore
     175: dup
     176: iconst_3
     177: aload         7
     179: aastore
     180: invokestatic  #134                // Method ClearAll:([[I)V
     183: goto          223
     186: astore        13
     188: aload         9
     190: invokestatic  #134                // Method ClearAll:([[I)V
     193: iconst_4
     194: anewarray     #71                 // class "[I"
     197: dup
     198: iconst_0
     199: aload         8
     201: aastore
     202: dup
     203: iconst_1
     204: aload         5
     206: aastore
     207: dup
     208: iconst_2
     209: aload         6
     211: aastore
     212: dup
     213: iconst_3
     214: aload         7
     216: aastore
     217: invokestatic  #134                // Method ClearAll:([[I)V
     220: aload         13
     222: athrow
     223: return
    Exception table:
       from    to  target type
          36   151   186   any
         186   188   186   any

  private static void BlockMix(int[], int[], int[], int[], int);
    Code:
       0: aload_0
       1: aload_0
       2: arraylength
       3: bipush        16
       5: isub
       6: aload_1
       7: iconst_0
       8: bipush        16
      10: invokestatic  #121                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      13: iconst_0
      14: istore        5
      16: iconst_0
      17: istore        6
      19: aload_0
      20: arraylength
      21: iconst_1
      22: iushr
      23: istore        7
      25: iconst_2
      26: iload         4
      28: imul
      29: istore        8
      31: iload         8
      33: ifle          80
      36: aload_1
      37: aload_0
      38: iload         5
      40: aload_2
      41: invokestatic  #132                // Method Xor:([I[II[I)V
      44: bipush        8
      46: aload_2
      47: aload_1
      48: invokestatic  #125                // Method org/bouncycastle/crypto/engines/Salsa20Engine.salsaCore:(I[I[I)V
      51: aload_1
      52: iconst_0
      53: aload_3
      54: iload         6
      56: bipush        16
      58: invokestatic  #121                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: iload         7
      63: iload         5
      65: iadd
      66: iload         6
      68: isub
      69: istore        6
      71: iinc          5, 16
      74: iinc          8, -1
      77: goto          31
      80: aload_3
      81: iconst_0
      82: aload_0
      83: iconst_0
      84: aload_3
      85: arraylength
      86: invokestatic  #121                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: return

  private static void Xor(int[], int[], int, int[]);
    Code:
       0: aload_3
       1: arraylength
       2: iconst_1
       3: isub
       4: istore        4
       6: iload         4
       8: iflt          32
      11: aload_3
      12: iload         4
      14: aload_0
      15: iload         4
      17: iaload
      18: aload_1
      19: iload_2
      20: iload         4
      22: iadd
      23: iaload
      24: ixor
      25: iastore
      26: iinc          4, -1
      29: goto          6
      32: return

  private static void Clear(byte[]);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: iconst_0
       6: invokestatic  #136                // Method org/bouncycastle/util/Arrays.fill:([BB)V
       9: return

  private static void Clear(int[]);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: iconst_0
       6: invokestatic  #138                // Method org/bouncycastle/util/Arrays.fill:([II)V
       9: return

  private static void ClearAll(int[][]);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: if_icmpge     20
       8: aload_0
       9: iload_1
      10: aaload
      11: invokestatic  #130                // Method Clear:([I)V
      14: iinc          1, 1
      17: goto          2
      20: return
}
