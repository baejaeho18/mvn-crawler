class org.bouncycastle.crypto.tls.RecordStream {
  private static int DEFAULT_PLAINTEXT_LIMIT;

  private org.bouncycastle.crypto.tls.TlsProtocol handler;

  private java.io.InputStream input;

  private java.io.OutputStream output;

  private org.bouncycastle.crypto.tls.TlsCompression pendingCompression;

  private org.bouncycastle.crypto.tls.TlsCompression readCompression;

  private org.bouncycastle.crypto.tls.TlsCompression writeCompression;

  private org.bouncycastle.crypto.tls.TlsCipher pendingCipher;

  private org.bouncycastle.crypto.tls.TlsCipher readCipher;

  private org.bouncycastle.crypto.tls.TlsCipher writeCipher;

  private long readSeqNo;

  private long writeSeqNo;

  private java.io.ByteArrayOutputStream buffer;

  private org.bouncycastle.crypto.tls.TlsContext context;

  private org.bouncycastle.crypto.tls.TlsHandshakeHash handshakeHash;

  private org.bouncycastle.crypto.tls.ProtocolVersion readVersion;

  private org.bouncycastle.crypto.tls.ProtocolVersion writeVersion;

  private boolean restrictReadVersion;

  private int plaintextLimit;

  private int compressedLimit;

  private int ciphertextLimit;

  org.bouncycastle.crypto.tls.RecordStream(org.bouncycastle.crypto.tls.TlsProtocol, java.io.InputStream, java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #229                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       9: aload_0
      10: aconst_null
      11: putfield      #216                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      14: aload_0
      15: aconst_null
      16: putfield      #217                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      19: aload_0
      20: aconst_null
      21: putfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      24: aload_0
      25: aconst_null
      26: putfield      #213                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      29: aload_0
      30: aconst_null
      31: putfield      #214                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      34: aload_0
      35: lconst_0
      36: putfield      #204                // Field readSeqNo:J
      39: aload_0
      40: lconst_0
      41: putfield      #205                // Field writeSeqNo:J
      44: aload_0
      45: new           #105                // class java/io/ByteArrayOutputStream
      48: dup
      49: invokespecial #221                // Method java/io/ByteArrayOutputStream."<init>":()V
      52: putfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
      55: aload_0
      56: aconst_null
      57: putfield      #218                // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
      60: aload_0
      61: aconst_null
      62: putfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      65: aload_0
      66: aconst_null
      67: putfield      #210                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      70: aload_0
      71: aconst_null
      72: putfield      #211                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      75: aload_0
      76: iconst_1
      77: putfield      #206                // Field restrictReadVersion:Z
      80: aload_0
      81: aload_1
      82: putfield      #220                // Field handler:Lorg/bouncycastle/crypto/tls/TlsProtocol;
      85: aload_0
      86: aload_2
      87: putfield      #208                // Field input:Ljava/io/InputStream;
      90: aload_0
      91: aload_3
      92: putfield      #209                // Field output:Ljava/io/OutputStream;
      95: aload_0
      96: new           #119                // class org/bouncycastle/crypto/tls/TlsNullCompression
      99: dup
     100: invokespecial #241                // Method org/bouncycastle/crypto/tls/TlsNullCompression."<init>":()V
     103: putfield      #216                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
     106: aload_0
     107: aload_0
     108: getfield      #216                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
     111: putfield      #217                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
     114: aload_0
     115: new           #118                // class org/bouncycastle/crypto/tls/TlsNullCipher
     118: dup
     119: aload_0
     120: getfield      #218                // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
     123: invokespecial #240                // Method org/bouncycastle/crypto/tls/TlsNullCipher."<init>":(Lorg/bouncycastle/crypto/tls/TlsContext;)V
     126: putfield      #213                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
     129: aload_0
     130: aload_0
     131: getfield      #213                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
     134: putfield      #214                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
     137: aload_0
     138: getstatic     #200                // Field DEFAULT_PLAINTEXT_LIMIT:I
     141: invokevirtual #234                // Method setPlaintextLimit:(I)V
     144: return

  void init(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #218                // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
       5: aload_0
       6: new           #111                // class org/bouncycastle/crypto/tls/DeferredHash
       9: dup
      10: invokespecial #231                // Method org/bouncycastle/crypto/tls/DeferredHash."<init>":()V
      13: putfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      16: aload_0
      17: getfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      20: aload_1
      21: invokeinterface #257,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V
      26: return

  int getPlaintextLimit();
    Code:
       0: aload_0
       1: getfield      #203                // Field plaintextLimit:I
       4: ireturn

  void setPlaintextLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #203                // Field plaintextLimit:I
       5: aload_0
       6: aload_0
       7: getfield      #203                // Field plaintextLimit:I
      10: sipush        1024
      13: iadd
      14: putfield      #202                // Field compressedLimit:I
      17: aload_0
      18: aload_0
      19: getfield      #202                // Field compressedLimit:I
      22: sipush        1024
      25: iadd
      26: putfield      #201                // Field ciphertextLimit:I
      29: return

  org.bouncycastle.crypto.tls.ProtocolVersion getReadVersion();
    Code:
       0: aload_0
       1: getfield      #210                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: areturn

  void setReadVersion(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #210                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       5: return

  void setWriteVersion(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #211                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       5: return

  void setRestrictReadVersion(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #206                // Field restrictReadVersion:Z
       5: return

  void setPendingConnectionState(org.bouncycastle.crypto.tls.TlsCompression, org.bouncycastle.crypto.tls.TlsCipher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       5: aload_0
       6: aload_2
       7: putfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      10: return

  void sentWriteCipherSpec() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       4: ifnull        14
       7: aload_0
       8: getfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      11: ifnonnull     24
      14: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      17: dup
      18: bipush        40
      20: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      23: athrow
      24: aload_0
      25: aload_0
      26: getfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      29: putfield      #217                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      32: aload_0
      33: aload_0
      34: getfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      37: putfield      #214                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      40: aload_0
      41: lconst_0
      42: putfield      #205                // Field writeSeqNo:J
      45: return

  void receivedReadCipherSpec() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       4: ifnull        14
       7: aload_0
       8: getfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      11: ifnonnull     24
      14: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      17: dup
      18: bipush        40
      20: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      23: athrow
      24: aload_0
      25: aload_0
      26: getfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      29: putfield      #216                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      32: aload_0
      33: aload_0
      34: getfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      37: putfield      #213                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      40: aload_0
      41: lconst_0
      42: putfield      #204                // Field readSeqNo:J
      45: return

  void finaliseHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #216                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       4: aload_0
       5: getfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
       8: if_acmpne     44
      11: aload_0
      12: getfield      #217                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      15: aload_0
      16: getfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      19: if_acmpne     44
      22: aload_0
      23: getfield      #213                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      26: aload_0
      27: getfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      30: if_acmpne     44
      33: aload_0
      34: getfield      #214                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      37: aload_0
      38: getfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      41: if_acmpeq     54
      44: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      47: dup
      48: bipush        40
      50: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      53: athrow
      54: aload_0
      55: aconst_null
      56: putfield      #215                // Field pendingCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      59: aload_0
      60: aconst_null
      61: putfield      #212                // Field pendingCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      64: return

  public boolean readRecord() throws java.io.IOException;
    Code:
       0: iconst_5
       1: aload_0
       2: getfield      #208                // Field input:Ljava/io/InputStream;
       5: invokestatic  #248                // Method org/bouncycastle/crypto/tls/TlsUtils.readAllOrNothing:(ILjava/io/InputStream;)[B
       8: astore_1
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: iconst_0
      17: invokestatic  #247                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      20: istore_2
      21: iload_2
      22: bipush        10
      24: invokestatic  #236                // Method checkType:(SS)V
      27: aload_0
      28: getfield      #206                // Field restrictReadVersion:Z
      31: ifne          64
      34: aload_1
      35: iconst_1
      36: invokestatic  #246                // Method org/bouncycastle/crypto/tls/TlsUtils.readVersionRaw:([BI)I
      39: istore_3
      40: iload_3
      41: sipush        -256
      44: iand
      45: sipush        768
      48: if_icmpeq     61
      51: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      54: dup
      55: bipush        47
      57: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      60: athrow
      61: goto          106
      64: aload_1
      65: iconst_1
      66: invokestatic  #251                // Method org/bouncycastle/crypto/tls/TlsUtils.readVersion:([BI)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      69: astore_3
      70: aload_0
      71: getfield      #210                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      74: ifnonnull     85
      77: aload_0
      78: aload_3
      79: putfield      #210                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      82: goto          106
      85: aload_3
      86: aload_0
      87: getfield      #210                // Field readVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      90: invokevirtual #232                // Method org/bouncycastle/crypto/tls/ProtocolVersion.equals:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      93: ifne          106
      96: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      99: dup
     100: bipush        47
     102: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     105: athrow
     106: aload_1
     107: iconst_3
     108: invokestatic  #245                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
     111: istore_3
     112: aload_0
     113: iload_2
     114: aload_0
     115: getfield      #208                // Field input:Ljava/io/InputStream;
     118: iload_3
     119: invokevirtual #238                // Method decodeAndVerify:(SLjava/io/InputStream;I)[B
     122: astore        4
     124: aload_0
     125: getfield      #220                // Field handler:Lorg/bouncycastle/crypto/tls/TlsProtocol;
     128: iload_2
     129: aload         4
     131: iconst_0
     132: aload         4
     134: arraylength
     135: invokevirtual #242                // Method org/bouncycastle/crypto/tls/TlsProtocol.processRecord:(S[BII)V
     138: iconst_1
     139: ireturn

  protected byte[] decodeAndVerify(short, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #201                // Field ciphertextLimit:I
       5: bipush        22
       7: invokestatic  #235                // Method checkLength:(IIS)V
      10: iload_3
      11: aload_2
      12: invokestatic  #249                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      15: astore        4
      17: aload_0
      18: getfield      #213                // Field readCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      21: aload_0
      22: dup
      23: getfield      #204                // Field readSeqNo:J
      26: dup2_x1
      27: lconst_1
      28: ladd
      29: putfield      #204                // Field readSeqNo:J
      32: iload_1
      33: aload         4
      35: iconst_0
      36: aload         4
      38: arraylength
      39: invokeinterface #252,  7          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCipher.decodeCiphertext:(JS[BII)[B
      44: astore        5
      46: aload         5
      48: arraylength
      49: aload_0
      50: getfield      #202                // Field compressedLimit:I
      53: bipush        22
      55: invokestatic  #235                // Method checkLength:(IIS)V
      58: aload_0
      59: getfield      #216                // Field readCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      62: aload_0
      63: getfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
      66: invokeinterface #255,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCompression.decompress:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      71: astore        6
      73: aload         6
      75: aload_0
      76: getfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
      79: if_acmpeq     104
      82: aload         6
      84: aload         5
      86: iconst_0
      87: aload         5
      89: arraylength
      90: invokevirtual #228                // Method java/io/OutputStream.write:([BII)V
      93: aload         6
      95: invokevirtual #226                // Method java/io/OutputStream.flush:()V
      98: aload_0
      99: invokespecial #233                // Method getBufferContents:()[B
     102: astore        5
     104: aload         5
     106: arraylength
     107: aload_0
     108: getfield      #203                // Field plaintextLimit:I
     111: bipush        30
     113: invokestatic  #235                // Method checkLength:(IIS)V
     116: aload         5
     118: arraylength
     119: iconst_1
     120: if_icmpge     139
     123: iload_1
     124: bipush        23
     126: if_icmpeq     139
     129: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     132: dup
     133: bipush        47
     135: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     138: athrow
     139: aload         5
     141: areturn

  protected void writeRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #211                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: ifnonnull     8
       7: return
       8: iload_1
       9: bipush        80
      11: invokestatic  #236                // Method checkType:(SS)V
      14: iload         4
      16: aload_0
      17: getfield      #203                // Field plaintextLimit:I
      20: bipush        80
      22: invokestatic  #235                // Method checkLength:(IIS)V
      25: iload         4
      27: iconst_1
      28: if_icmpge     47
      31: iload_1
      32: bipush        23
      34: if_icmpeq     47
      37: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      40: dup
      41: bipush        80
      43: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      46: athrow
      47: iload_1
      48: bipush        22
      50: if_icmpne     61
      53: aload_0
      54: aload_2
      55: iload_3
      56: iload         4
      58: invokevirtual #237                // Method updateHandshakeData:([BII)V
      61: aload_0
      62: getfield      #217                // Field writeCompression:Lorg/bouncycastle/crypto/tls/TlsCompression;
      65: aload_0
      66: getfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
      69: invokeinterface #254,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCompression.compress:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      74: astore        5
      76: aload         5
      78: aload_0
      79: getfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
      82: if_acmpne     115
      85: aload_0
      86: getfield      #214                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
      89: aload_0
      90: dup
      91: getfield      #205                // Field writeSeqNo:J
      94: dup2_x1
      95: lconst_1
      96: ladd
      97: putfield      #205                // Field writeSeqNo:J
     100: iload_1
     101: aload_2
     102: iload_3
     103: iload         4
     105: invokeinterface #253,  7          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCipher.encodePlaintext:(JS[BII)[B
     110: astore        6
     112: goto          178
     115: aload         5
     117: aload_2
     118: iload_3
     119: iload         4
     121: invokevirtual #228                // Method java/io/OutputStream.write:([BII)V
     124: aload         5
     126: invokevirtual #226                // Method java/io/OutputStream.flush:()V
     129: aload_0
     130: invokespecial #233                // Method getBufferContents:()[B
     133: astore        7
     135: aload         7
     137: arraylength
     138: iload         4
     140: sipush        1024
     143: iadd
     144: bipush        80
     146: invokestatic  #235                // Method checkLength:(IIS)V
     149: aload_0
     150: getfield      #214                // Field writeCipher:Lorg/bouncycastle/crypto/tls/TlsCipher;
     153: aload_0
     154: dup
     155: getfield      #205                // Field writeSeqNo:J
     158: dup2_x1
     159: lconst_1
     160: ladd
     161: putfield      #205                // Field writeSeqNo:J
     164: iload_1
     165: aload         7
     167: iconst_0
     168: aload         7
     170: arraylength
     171: invokeinterface #253,  7          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCipher.encodePlaintext:(JS[BII)[B
     176: astore        6
     178: aload         6
     180: arraylength
     181: aload_0
     182: getfield      #201                // Field ciphertextLimit:I
     185: bipush        80
     187: invokestatic  #235                // Method checkLength:(IIS)V
     190: aload         6
     192: arraylength
     193: iconst_5
     194: iadd
     195: newarray       byte
     197: astore        7
     199: iload_1
     200: aload         7
     202: iconst_0
     203: invokestatic  #244                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(S[BI)V
     206: aload_0
     207: getfield      #211                // Field writeVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
     210: aload         7
     212: iconst_1
     213: invokestatic  #250                // Method org/bouncycastle/crypto/tls/TlsUtils.writeVersion:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;[BI)V
     216: aload         6
     218: arraylength
     219: aload         7
     221: iconst_3
     222: invokestatic  #243                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(I[BI)V
     225: aload         6
     227: iconst_0
     228: aload         7
     230: iconst_5
     231: aload         6
     233: arraylength
     234: invokestatic  #230                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     237: aload_0
     238: getfield      #209                // Field output:Ljava/io/OutputStream;
     241: aload         7
     243: invokevirtual #227                // Method java/io/OutputStream.write:([B)V
     246: aload_0
     247: getfield      #209                // Field output:Ljava/io/OutputStream;
     250: invokevirtual #226                // Method java/io/OutputStream.flush:()V
     253: return

  void notifyHelloComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       5: invokeinterface #258,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.notifyPRFDetermined:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: putfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      13: return

  org.bouncycastle.crypto.tls.TlsHandshakeHash getHandshakeHash();
    Code:
       0: aload_0
       1: getfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: areturn

  org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish();
    Code:
       0: aload_0
       1: getfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: invokeinterface #259,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.stopTracking:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      15: putfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      18: aload_1
      19: areturn

  void updateHandshakeData(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #219                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #256,  4          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.update:([BII)V
      12: return

  protected void safeClose();
    Code:
       0: aload_0
       1: getfield      #208                // Field input:Ljava/io/InputStream;
       4: invokevirtual #224                // Method java/io/InputStream.close:()V
       7: goto          11
      10: astore_1
      11: aload_0
      12: getfield      #209                // Field output:Ljava/io/OutputStream;
      15: invokevirtual #225                // Method java/io/OutputStream.close:()V
      18: goto          22
      21: astore_1
      22: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException
          11    18    21   Class java/io/IOException

  protected void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #209                // Field output:Ljava/io/OutputStream;
       4: invokevirtual #226                // Method java/io/OutputStream.flush:()V
       7: return

  private byte[] getBufferContents();
    Code:
       0: aload_0
       1: getfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #223                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       7: astore_1
       8: aload_0
       9: getfield      #207                // Field buffer:Ljava/io/ByteArrayOutputStream;
      12: invokevirtual #222                // Method java/io/ByteArrayOutputStream.reset:()V
      15: aload_1
      16: areturn

  private static void checkType(short, short) throws java.io.IOException;
    Code:
       0: iload_0
       1: tableswitch   { // 20 to 24
                    20: 36
                    21: 36
                    22: 36
                    23: 36
                    24: 36
               default: 39
          }
      36: goto          48
      39: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      42: dup
      43: iload_1
      44: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      47: athrow
      48: return

  private static void checkLength(int, int, short) throws java.io.IOException;
    Code:
       0: iload_0
       1: iload_1
       2: if_icmple     14
       5: new           #116                // class org/bouncycastle/crypto/tls/TlsFatalAlert
       8: dup
       9: iload_2
      10: invokespecial #239                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      13: athrow
      14: return

  static {};
    Code:
       0: sipush        16384
       3: putstatic     #200                // Field DEFAULT_PLAINTEXT_LIMIT:I
       6: return
}
