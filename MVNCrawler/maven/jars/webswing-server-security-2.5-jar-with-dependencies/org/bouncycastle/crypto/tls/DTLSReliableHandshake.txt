class org.bouncycastle.crypto.tls.DTLSReliableHandshake {
  private static final int MAX_RECEIVE_AHEAD;

  private final org.bouncycastle.crypto.tls.DTLSRecordLayer recordLayer;

  private org.bouncycastle.crypto.tls.TlsHandshakeHash handshakeHash;

  private java.util.Hashtable currentInboundFlight;

  private java.util.Hashtable previousInboundFlight;

  private java.util.Vector outboundFlight;

  private boolean sending;

  private int message_seq;

  private int next_receive_seq;

  org.bouncycastle.crypto.tls.DTLSReliableHandshake(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.DTLSRecordLayer);
    Code:
       0: aload_0
       1: invokespecial #228                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #114                // class java/util/Hashtable
       8: dup
       9: invokespecial #229                // Method java/util/Hashtable."<init>":()V
      12: putfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
      15: aload_0
      16: aconst_null
      17: putfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
      20: aload_0
      21: new           #115                // class java/util/Vector
      24: dup
      25: invokespecial #235                // Method java/util/Vector."<init>":()V
      28: putfield      #223                // Field outboundFlight:Ljava/util/Vector;
      31: aload_0
      32: iconst_1
      33: putfield      #220                // Field sending:Z
      36: aload_0
      37: iconst_0
      38: putfield      #218                // Field message_seq:I
      41: aload_0
      42: iconst_0
      43: putfield      #219                // Field next_receive_seq:I
      46: aload_0
      47: aload_2
      48: putfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      51: aload_0
      52: new           #122                // class org/bouncycastle/crypto/tls/DeferredHash
      55: dup
      56: invokespecial #266                // Method org/bouncycastle/crypto/tls/DeferredHash."<init>":()V
      59: putfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      62: aload_0
      63: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      66: aload_1
      67: invokeinterface #283,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.init:(Lorg/bouncycastle/crypto/tls/TlsContext;)V
      72: return

  void notifyHelloComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       5: invokeinterface #284,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.notifyPRFDetermined:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: putfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      13: return

  org.bouncycastle.crypto.tls.TlsHandshakeHash getHandshakeHash();
    Code:
       0: aload_0
       1: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: areturn

  org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish();
    Code:
       0: aload_0
       1: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      10: invokeinterface #285,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.stopTracking:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      15: putfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      18: aload_1
      19: areturn

  void sendMessage(short, byte[]) throws java.io.IOException;
    Code:
       0: aload_2
       1: arraylength
       2: invokestatic  #268                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint24:(I)V
       5: aload_0
       6: getfield      #220                // Field sending:Z
       9: ifne          28
      12: aload_0
      13: invokespecial #249                // Method checkInboundFlight:()V
      16: aload_0
      17: iconst_1
      18: putfield      #220                // Field sending:Z
      21: aload_0
      22: getfield      #223                // Field outboundFlight:Ljava/util/Vector;
      25: invokevirtual #236                // Method java/util/Vector.removeAllElements:()V
      28: new           #120                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
      31: dup
      32: aload_0
      33: dup
      34: getfield      #218                // Field message_seq:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #218                // Field message_seq:I
      43: iload_1
      44: aload_2
      45: aconst_null
      46: invokespecial #262                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message."<init>":(IS[BLorg/bouncycastle/crypto/tls/DTLSReliableHandshake$1;)V
      49: astore_3
      50: aload_0
      51: getfield      #223                // Field outboundFlight:Ljava/util/Vector;
      54: aload_3
      55: invokevirtual #238                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      58: aload_0
      59: aload_3
      60: invokespecial #255                // Method writeMessage:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)V
      63: aload_0
      64: aload_3
      65: invokespecial #257                // Method updateHandshakeMessagesDigest:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
      68: pop
      69: return

  byte[] receiveMessageBody(short) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #254                // Method receiveMessage:()Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
       4: astore_2
       5: aload_2
       6: invokevirtual #260                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
       9: iload_1
      10: if_icmpeq     23
      13: new           #123                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      16: dup
      17: bipush        10
      19: invokespecial #267                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      22: athrow
      23: aload_2
      24: invokevirtual #261                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      27: areturn

  org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #220                // Field sending:Z
       4: ifeq          16
       7: aload_0
       8: iconst_0
       9: putfield      #220                // Field sending:Z
      12: aload_0
      13: invokespecial #250                // Method prepareInboundFlight:()V
      16: aload_0
      17: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
      20: aload_0
      21: getfield      #219                // Field next_receive_seq:I
      24: invokestatic  #278                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      27: invokevirtual #232                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #116                // class org/bouncycastle/crypto/tls/DTLSReassembler
      33: astore_1
      34: aload_1
      35: ifnull        81
      38: aload_1
      39: invokevirtual #241                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getBodyIfComplete:()[B
      42: astore_2
      43: aload_2
      44: ifnull        81
      47: aload_0
      48: aconst_null
      49: putfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
      52: aload_0
      53: new           #120                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
      56: dup
      57: aload_0
      58: dup
      59: getfield      #219                // Field next_receive_seq:I
      62: dup_x1
      63: iconst_1
      64: iadd
      65: putfield      #219                // Field next_receive_seq:I
      68: aload_1
      69: invokevirtual #239                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getType:()S
      72: aload_2
      73: aconst_null
      74: invokespecial #262                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message."<init>":(IS[BLorg/bouncycastle/crypto/tls/DTLSReliableHandshake$1;)V
      77: invokespecial #257                // Method updateHandshakeMessagesDigest:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
      80: areturn
      81: aconst_null
      82: astore_1
      83: sipush        1000
      86: istore_2
      87: aload_0
      88: getfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      91: invokevirtual #244                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.getReceiveLimit:()I
      94: istore_3
      95: aload_1
      96: ifnull        105
      99: aload_1
     100: arraylength
     101: iload_3
     102: if_icmpge     109
     105: iload_3
     106: newarray       byte
     108: astore_1
     109: aload_0
     110: getfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
     113: aload_1
     114: iconst_0
     115: iload_3
     116: iload_2
     117: invokevirtual #247                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.receive:([BIII)I
     120: istore        4
     122: iload         4
     124: ifge          130
     127: goto          431
     130: iload         4
     132: bipush        12
     134: if_icmpge     140
     137: goto          109
     140: aload_1
     141: bipush        9
     143: invokestatic  #273                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
     146: istore        5
     148: iload         4
     150: iload         5
     152: bipush        12
     154: iadd
     155: if_icmpeq     161
     158: goto          109
     161: aload_1
     162: iconst_4
     163: invokestatic  #272                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
     166: istore        6
     168: iload         6
     170: aload_0
     171: getfield      #219                // Field next_receive_seq:I
     174: bipush        10
     176: iadd
     177: if_icmple     183
     180: goto          109
     183: aload_1
     184: iconst_0
     185: invokestatic  #274                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
     188: istore        7
     190: aload_1
     191: iconst_1
     192: invokestatic  #273                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
     195: istore        8
     197: aload_1
     198: bipush        6
     200: invokestatic  #273                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
     203: istore        9
     205: iload         9
     207: iload         5
     209: iadd
     210: iload         8
     212: if_icmple     218
     215: goto          109
     218: iload         6
     220: aload_0
     221: getfield      #219                // Field next_receive_seq:I
     224: if_icmpge     305
     227: aload_0
     228: getfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
     231: ifnull        428
     234: aload_0
     235: getfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
     238: iload         6
     240: invokestatic  #278                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
     243: invokevirtual #232                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
     246: checkcast     #116                // class org/bouncycastle/crypto/tls/DTLSReassembler
     249: astore        10
     251: aload         10
     253: ifnull        302
     256: aload         10
     258: iload         7
     260: iload         8
     262: aload_1
     263: bipush        12
     265: iload         9
     267: iload         5
     269: invokevirtual #243                // Method org/bouncycastle/crypto/tls/DTLSReassembler.contributeFragment:(SI[BIII)V
     272: aload_0
     273: getfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
     276: invokestatic  #253                // Method checkAll:(Ljava/util/Hashtable;)Z
     279: ifeq          302
     282: aload_0
     283: invokespecial #251                // Method resendOutboundFlight:()V
     286: iload_2
     287: iconst_2
     288: imul
     289: ldc           #1                  // int 60000
     291: invokestatic  #227                // Method java/lang/Math.min:(II)I
     294: istore_2
     295: aload_0
     296: getfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
     299: invokestatic  #252                // Method resetAll:(Ljava/util/Hashtable;)V
     302: goto          428
     305: aload_0
     306: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
     309: iload         6
     311: invokestatic  #278                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
     314: invokevirtual #232                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
     317: checkcast     #116                // class org/bouncycastle/crypto/tls/DTLSReassembler
     320: astore        10
     322: aload         10
     324: ifnonnull     355
     327: new           #116                // class org/bouncycastle/crypto/tls/DTLSReassembler
     330: dup
     331: iload         7
     333: iload         8
     335: invokespecial #242                // Method org/bouncycastle/crypto/tls/DTLSReassembler."<init>":(SI)V
     338: astore        10
     340: aload_0
     341: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
     344: iload         6
     346: invokestatic  #278                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
     349: aload         10
     351: invokevirtual #233                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     354: pop
     355: aload         10
     357: iload         7
     359: iload         8
     361: aload_1
     362: bipush        12
     364: iload         9
     366: iload         5
     368: invokevirtual #243                // Method org/bouncycastle/crypto/tls/DTLSReassembler.contributeFragment:(SI[BIII)V
     371: iload         6
     373: aload_0
     374: getfield      #219                // Field next_receive_seq:I
     377: if_icmpne     428
     380: aload         10
     382: invokevirtual #241                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getBodyIfComplete:()[B
     385: astore        11
     387: aload         11
     389: ifnull        428
     392: aload_0
     393: aconst_null
     394: putfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
     397: aload_0
     398: new           #120                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
     401: dup
     402: aload_0
     403: dup
     404: getfield      #219                // Field next_receive_seq:I
     407: dup_x1
     408: iconst_1
     409: iadd
     410: putfield      #219                // Field next_receive_seq:I
     413: aload         10
     415: invokevirtual #239                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getType:()S
     418: aload         11
     420: aconst_null
     421: invokespecial #262                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message."<init>":(IS[BLorg/bouncycastle/crypto/tls/DTLSReliableHandshake$1;)V
     424: invokespecial #257                // Method updateHandshakeMessagesDigest:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;
     427: areturn
     428: goto          109
     431: goto          436
     434: astore        4
     436: aload_0
     437: invokespecial #251                // Method resendOutboundFlight:()V
     440: iload_2
     441: iconst_2
     442: imul
     443: ldc           #1                  // int 60000
     445: invokestatic  #227                // Method java/lang/Math.min:(II)I
     448: istore_2
     449: goto          87
    Exception table:
       from    to  target type
         109   427   434   Class java/io/IOException
         428   431   434   Class java/io/IOException

  void finish();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #220                // Field sending:Z
       6: ifne          16
       9: aload_0
      10: invokespecial #249                // Method checkInboundFlight:()V
      13: goto          32
      16: aload_0
      17: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
      20: ifnull        32
      23: new           #119                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$1
      26: dup
      27: aload_0
      28: invokespecial #258                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$1."<init>":(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake;)V
      31: astore_1
      32: aload_0
      33: getfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      36: aload_1
      37: invokevirtual #248                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.handshakeSuccessful:(Lorg/bouncycastle/crypto/tls/DTLSHandshakeRetransmit;)V
      40: return

  void resetHandshakeMessagesDigest();
    Code:
       0: aload_0
       1: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
       4: invokeinterface #281,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.reset:()V
       9: return

  private void checkInboundFlight();
    Code:
       0: aload_0
       1: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
       4: invokevirtual #231                // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       7: astore_1
       8: aload_1
       9: invokeinterface #279,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      14: ifeq          41
      17: aload_1
      18: invokeinterface #280,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      23: checkcast     #110                // class java/lang/Integer
      26: astore_2
      27: aload_2
      28: invokevirtual #226                // Method java/lang/Integer.intValue:()I
      31: aload_0
      32: getfield      #219                // Field next_receive_seq:I
      35: if_icmplt     38
      38: goto          8
      41: return

  private void prepareInboundFlight();
    Code:
       0: aload_0
       1: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
       4: invokestatic  #252                // Method resetAll:(Ljava/util/Hashtable;)V
       7: aload_0
       8: aload_0
       9: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
      12: putfield      #222                // Field previousInboundFlight:Ljava/util/Hashtable;
      15: aload_0
      16: new           #114                // class java/util/Hashtable
      19: dup
      20: invokespecial #229                // Method java/util/Hashtable."<init>":()V
      23: putfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
      26: return

  private void resendOutboundFlight() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
       4: invokevirtual #246                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.resetWriteEpoch:()V
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #223                // Field outboundFlight:Ljava/util/Vector;
      14: invokevirtual #234                // Method java/util/Vector.size:()I
      17: if_icmpge     41
      20: aload_0
      21: aload_0
      22: getfield      #223                // Field outboundFlight:Ljava/util/Vector;
      25: iload_1
      26: invokevirtual #237                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      29: checkcast     #120                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message
      32: invokespecial #255                // Method writeMessage:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;)V
      35: iinc          1, 1
      38: goto          9
      41: return

  private org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message updateHandshakeMessagesDigest(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #260                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
       4: ifeq          83
       7: aload_1
       8: invokevirtual #261                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      11: astore_2
      12: bipush        12
      14: newarray       byte
      16: astore_3
      17: aload_1
      18: invokevirtual #260                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
      21: aload_3
      22: iconst_0
      23: invokestatic  #271                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(S[BI)V
      26: aload_2
      27: arraylength
      28: aload_3
      29: iconst_1
      30: invokestatic  #270                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(I[BI)V
      33: aload_1
      34: invokevirtual #259                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getSeq:()I
      37: aload_3
      38: iconst_4
      39: invokestatic  #269                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(I[BI)V
      42: iconst_0
      43: aload_3
      44: bipush        6
      46: invokestatic  #270                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(I[BI)V
      49: aload_2
      50: arraylength
      51: aload_3
      52: bipush        9
      54: invokestatic  #270                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(I[BI)V
      57: aload_0
      58: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      61: aload_3
      62: iconst_0
      63: aload_3
      64: arraylength
      65: invokeinterface #282,  4          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.update:([BII)V
      70: aload_0
      71: getfield      #225                // Field handshakeHash:Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      74: aload_2
      75: iconst_0
      76: aload_2
      77: arraylength
      78: invokeinterface #282,  4          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.update:([BII)V
      83: aload_1
      84: areturn

  private void writeMessage(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
       4: invokevirtual #245                // Method org/bouncycastle/crypto/tls/DTLSRecordLayer.getSendLimit:()I
       7: istore_2
       8: iload_2
       9: bipush        12
      11: isub
      12: istore_3
      13: iload_3
      14: iconst_1
      15: if_icmpge     28
      18: new           #123                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      21: dup
      22: bipush        80
      24: invokespecial #267                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      27: athrow
      28: aload_1
      29: invokevirtual #261                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      32: arraylength
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         4
      40: iload         5
      42: isub
      43: iload_3
      44: invokestatic  #227                // Method java/lang/Math.min:(II)I
      47: istore        6
      49: aload_0
      50: aload_1
      51: iload         5
      53: iload         6
      55: invokespecial #256                // Method writeHandshakeFragment:(Lorg/bouncycastle/crypto/tls/DTLSReliableHandshake$Message;II)V
      58: iload         5
      60: iload         6
      62: iadd
      63: istore        5
      65: iload         5
      67: iload         4
      69: if_icmplt     38
      72: return

  private void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message, int, int) throws java.io.IOException;
    Code:
       0: new           #121                // class org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer
       3: dup
       4: bipush        12
       6: iload_3
       7: iadd
       8: invokespecial #263                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer."<init>":(I)V
      11: astore        4
      13: aload_1
      14: invokevirtual #260                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getType:()S
      17: aload         4
      19: invokestatic  #277                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(SLjava/io/OutputStream;)V
      22: aload_1
      23: invokevirtual #261                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      26: arraylength
      27: aload         4
      29: invokestatic  #276                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(ILjava/io/OutputStream;)V
      32: aload_1
      33: invokevirtual #259                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getSeq:()I
      36: aload         4
      38: invokestatic  #275                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      41: iload_2
      42: aload         4
      44: invokestatic  #276                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(ILjava/io/OutputStream;)V
      47: iload_3
      48: aload         4
      50: invokestatic  #276                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint24:(ILjava/io/OutputStream;)V
      53: aload         4
      55: aload_1
      56: invokevirtual #261                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$Message.getBody:()[B
      59: iload_2
      60: iload_3
      61: invokevirtual #264                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer.write:([BII)V
      64: aload         4
      66: aload_0
      67: getfield      #224                // Field recordLayer:Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;
      70: invokevirtual #265                // Method org/bouncycastle/crypto/tls/DTLSReliableHandshake$RecordLayerBuffer.sendToRecordLayer:(Lorg/bouncycastle/crypto/tls/DTLSRecordLayer;)V
      73: return

  private static boolean checkAll(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokevirtual #230                // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_1
       6: invokeinterface #279,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          31
      14: aload_1
      15: invokeinterface #280,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #116                // class org/bouncycastle/crypto/tls/DTLSReassembler
      23: invokevirtual #241                // Method org/bouncycastle/crypto/tls/DTLSReassembler.getBodyIfComplete:()[B
      26: ifnonnull     5
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  private static void resetAll(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokevirtual #230                // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_1
       6: invokeinterface #279,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          29
      14: aload_1
      15: invokeinterface #280,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #116                // class org/bouncycastle/crypto/tls/DTLSReassembler
      23: invokevirtual #240                // Method org/bouncycastle/crypto/tls/DTLSReassembler.reset:()V
      26: goto          5
      29: return

  static int access$100(org.bouncycastle.crypto.tls.DTLSReliableHandshake);
    Code:
       0: aload_0
       1: getfield      #219                // Field next_receive_seq:I
       4: ireturn

  static java.util.Hashtable access$200(org.bouncycastle.crypto.tls.DTLSReliableHandshake);
    Code:
       0: aload_0
       1: getfield      #221                // Field currentInboundFlight:Ljava/util/Hashtable;
       4: areturn

  static boolean access$300(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokestatic  #253                // Method checkAll:(Ljava/util/Hashtable;)Z
       4: ireturn

  static void access$400(org.bouncycastle.crypto.tls.DTLSReliableHandshake) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #251                // Method resendOutboundFlight:()V
       4: return

  static void access$500(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokestatic  #252                // Method resetAll:(Ljava/util/Hashtable;)V
       4: return
}
