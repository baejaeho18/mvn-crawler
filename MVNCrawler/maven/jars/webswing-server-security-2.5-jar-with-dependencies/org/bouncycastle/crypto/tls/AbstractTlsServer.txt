public abstract class org.bouncycastle.crypto.tls.AbstractTlsServer extends org.bouncycastle.crypto.tls.AbstractTlsPeer implements org.bouncycastle.crypto.tls.TlsServer {
  protected org.bouncycastle.crypto.tls.TlsCipherFactory cipherFactory;

  protected org.bouncycastle.crypto.tls.TlsServerContext context;

  protected org.bouncycastle.crypto.tls.ProtocolVersion clientVersion;

  protected int[] offeredCipherSuites;

  protected short[] offeredCompressionMethods;

  protected java.util.Hashtable clientExtensions;

  protected boolean encryptThenMACOffered;

  protected short maxFragmentLengthOffered;

  protected boolean truncatedHMacOffered;

  protected java.util.Vector supportedSignatureAlgorithms;

  protected boolean eccCipherSuitesOffered;

  protected int[] namedCurves;

  protected short[] clientECPointFormats;

  protected short[] serverECPointFormats;

  protected org.bouncycastle.crypto.tls.ProtocolVersion serverVersion;

  protected int selectedCipherSuite;

  protected short selectedCompressionMethod;

  protected java.util.Hashtable serverExtensions;

  public org.bouncycastle.crypto.tls.AbstractTlsServer();
    Code:
       0: aload_0
       1: new           #108                // class org/bouncycastle/crypto/tls/DefaultTlsCipherFactory
       4: dup
       5: invokespecial #235                // Method org/bouncycastle/crypto/tls/DefaultTlsCipherFactory."<init>":()V
       8: invokespecial #234                // Method "<init>":(Lorg/bouncycastle/crypto/tls/TlsCipherFactory;)V
      11: return

  public org.bouncycastle.crypto.tls.AbstractTlsServer(org.bouncycastle.crypto.tls.TlsCipherFactory);
    Code:
       0: aload_0
       1: invokespecial #225                // Method org/bouncycastle/crypto/tls/AbstractTlsPeer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #220                // Field cipherFactory:Lorg/bouncycastle/crypto/tls/TlsCipherFactory;
       9: return

  protected boolean allowEncryptThenMAC();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean allowTruncatedHMac();
    Code:
       0: iconst_0
       1: ireturn

  protected java.util.Hashtable checkServerExtensions();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #216                // Field serverExtensions:Ljava/util/Hashtable;
       5: invokestatic  #254                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.ensureExtensionsInitialised:(Ljava/util/Hashtable;)Ljava/util/Hashtable;
       8: dup_x1
       9: putfield      #216                // Field serverExtensions:Ljava/util/Hashtable;
      12: areturn

  protected abstract int[] getCipherSuites();

  protected short[] getCompressionMethods();
    Code:
       0: iconst_1
       1: newarray       short
       3: dup
       4: iconst_0
       5: iconst_0
       6: sastore
       7: areturn

  protected org.bouncycastle.crypto.tls.ProtocolVersion getMaximumVersion();
    Code:
       0: getstatic     #223                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv11:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: areturn

  protected org.bouncycastle.crypto.tls.ProtocolVersion getMinimumVersion();
    Code:
       0: getstatic     #222                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv10:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: areturn

  protected boolean supportsClientECCCapabilities(int[], short[]);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #241                // Method org/bouncycastle/crypto/tls/TlsECCUtils.hasAnySupportedNamedCurves:()Z
       7: ireturn
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: arraylength
      13: if_icmpge     53
      16: aload_1
      17: iload_3
      18: iaload
      19: istore        4
      21: iload         4
      23: invokestatic  #236                // Method org/bouncycastle/crypto/tls/NamedCurve.isValid:(I)Z
      26: ifeq          47
      29: iload         4
      31: invokestatic  #237                // Method org/bouncycastle/crypto/tls/NamedCurve.refersToASpecificNamedCurve:(I)Z
      34: ifeq          45
      37: iload         4
      39: invokestatic  #243                // Method org/bouncycastle/crypto/tls/TlsECCUtils.isSupportedNamedCurve:(I)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iinc          3, 1
      50: goto          10
      53: iconst_0
      54: ireturn

  public void init(org.bouncycastle.crypto.tls.TlsServerContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #221                // Field context:Lorg/bouncycastle/crypto/tls/TlsServerContext;
       5: return

  public void notifyClientVersion(org.bouncycastle.crypto.tls.ProtocolVersion) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #218                // Field clientVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       5: return

  public void notifyOfferedCipherSuites(int[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #211                // Field offeredCipherSuites:[I
       5: aload_0
       6: aload_0
       7: getfield      #211                // Field offeredCipherSuites:[I
      10: invokestatic  #244                // Method org/bouncycastle/crypto/tls/TlsECCUtils.containsECCCipherSuites:([I)Z
      13: putfield      #207                // Field eccCipherSuitesOffered:Z
      16: return

  public void notifyOfferedCompressionMethods(short[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #213                // Field offeredCompressionMethods:[S
       5: return

  public void processClientExtensions(java.util.Hashtable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #215                // Field clientExtensions:Ljava/util/Hashtable;
       5: aload_1
       6: ifnull        84
       9: aload_0
      10: aload_1
      11: invokestatic  #251                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.hasEncryptThenMACExtension:(Ljava/util/Hashtable;)Z
      14: putfield      #208                // Field encryptThenMACOffered:Z
      17: aload_0
      18: aload_1
      19: invokestatic  #248                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
      22: putfield      #205                // Field maxFragmentLengthOffered:S
      25: aload_0
      26: aload_1
      27: invokestatic  #252                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.hasTruncatedHMacExtension:(Ljava/util/Hashtable;)Z
      30: putfield      #209                // Field truncatedHMacOffered:Z
      33: aload_0
      34: aload_1
      35: invokestatic  #260                // Method org/bouncycastle/crypto/tls/TlsUtils.getSignatureAlgorithmsExtension:(Ljava/util/Hashtable;)Ljava/util/Vector;
      38: putfield      #217                // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      41: aload_0
      42: getfield      #217                // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      45: ifnull        68
      48: aload_0
      49: getfield      #218                // Field clientVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      52: invokestatic  #259                // Method org/bouncycastle/crypto/tls/TlsUtils.isSignatureAlgorithmsExtensionAllowed:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      55: ifne          68
      58: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      61: dup
      62: bipush        47
      64: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      67: athrow
      68: aload_0
      69: aload_1
      70: invokestatic  #245                // Method org/bouncycastle/crypto/tls/TlsECCUtils.getSupportedEllipticCurvesExtension:(Ljava/util/Hashtable;)[I
      73: putfield      #210                // Field namedCurves:[I
      76: aload_0
      77: aload_1
      78: invokestatic  #246                // Method org/bouncycastle/crypto/tls/TlsECCUtils.getSupportedPointFormatsExtension:(Ljava/util/Hashtable;)[S
      81: putfield      #212                // Field clientECPointFormats:[S
      84: aload_0
      85: getfield      #207                // Field eccCipherSuitesOffered:Z
      88: ifne          115
      91: aload_0
      92: getfield      #210                // Field namedCurves:[I
      95: ifnonnull     105
      98: aload_0
      99: getfield      #212                // Field clientECPointFormats:[S
     102: ifnull        115
     105: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     108: dup
     109: bipush        47
     111: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     114: athrow
     115: return

  public org.bouncycastle.crypto.tls.ProtocolVersion getServerVersion() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #233                // Method getMinimumVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: aload_0
       5: getfield      #218                // Field clientVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       8: invokevirtual #239                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      11: ifeq          58
      14: aload_0
      15: invokevirtual #232                // Method getMaximumVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      18: astore_1
      19: aload_0
      20: getfield      #218                // Field clientVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      23: aload_1
      24: invokevirtual #239                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      27: ifeq          40
      30: aload_0
      31: aload_0
      32: getfield      #218                // Field clientVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      35: dup_x1
      36: putfield      #219                // Field serverVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      39: areturn
      40: aload_0
      41: getfield      #218                // Field clientVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      44: aload_1
      45: invokevirtual #240                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isLaterVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      48: ifeq          58
      51: aload_0
      52: aload_1
      53: dup_x1
      54: putfield      #219                // Field serverVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      57: areturn
      58: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      61: dup
      62: bipush        70
      64: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      67: athrow

  public int getSelectedCipherSuite() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #210                // Field namedCurves:[I
       5: aload_0
       6: getfield      #212                // Field clientECPointFormats:[S
       9: invokevirtual #230                // Method supportsClientECCCapabilities:([I[S)Z
      12: istore_1
      13: aload_0
      14: invokevirtual #228                // Method getCipherSuites:()[I
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_2
      22: arraylength
      23: if_icmpge     81
      26: aload_2
      27: iload_3
      28: iaload
      29: istore        4
      31: aload_0
      32: getfield      #211                // Field offeredCipherSuites:[I
      35: iload         4
      37: invokestatic  #261                // Method org/bouncycastle/util/Arrays.contains:([II)Z
      40: ifeq          75
      43: iload_1
      44: ifne          55
      47: iload         4
      49: invokestatic  #242                // Method org/bouncycastle/crypto/tls/TlsECCUtils.isECCCipherSuite:(I)Z
      52: ifne          75
      55: iload         4
      57: aload_0
      58: getfield      #219                // Field serverVersion:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      61: invokestatic  #258                // Method org/bouncycastle/crypto/tls/TlsUtils.isValidCipherSuiteForVersion:(ILorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      64: ifeq          75
      67: aload_0
      68: iload         4
      70: dup_x1
      71: putfield      #204                // Field selectedCipherSuite:I
      74: ireturn
      75: iinc          3, 1
      78: goto          20
      81: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      84: dup
      85: bipush        40
      87: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      90: athrow

  public short getSelectedCompressionMethod() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #229                // Method getCompressionMethods:()[S
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     41
      13: aload_0
      14: getfield      #213                // Field offeredCompressionMethods:[S
      17: aload_1
      18: iload_2
      19: saload
      20: invokestatic  #262                // Method org/bouncycastle/util/Arrays.contains:([SS)Z
      23: ifeq          35
      26: aload_0
      27: aload_1
      28: iload_2
      29: saload
      30: dup_x1
      31: putfield      #206                // Field selectedCompressionMethod:S
      34: ireturn
      35: iinc          2, 1
      38: goto          7
      41: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      44: dup
      45: bipush        40
      47: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      50: athrow

  public java.util.Hashtable getServerExtensions() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #208                // Field encryptThenMACOffered:Z
       4: ifeq          31
       7: aload_0
       8: invokevirtual #226                // Method allowEncryptThenMAC:()Z
      11: ifeq          31
      14: aload_0
      15: getfield      #204                // Field selectedCipherSuite:I
      18: invokestatic  #257                // Method org/bouncycastle/crypto/tls/TlsUtils.isBlockCipherSuite:(I)Z
      21: ifeq          31
      24: aload_0
      25: invokevirtual #231                // Method checkServerExtensions:()Ljava/util/Hashtable;
      28: invokestatic  #249                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.addEncryptThenMACExtension:(Ljava/util/Hashtable;)V
      31: aload_0
      32: getfield      #205                // Field maxFragmentLengthOffered:S
      35: iflt          49
      38: aload_0
      39: invokevirtual #231                // Method checkServerExtensions:()Ljava/util/Hashtable;
      42: aload_0
      43: getfield      #205                // Field maxFragmentLengthOffered:S
      46: invokestatic  #253                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.addMaxFragmentLengthExtension:(Ljava/util/Hashtable;S)V
      49: aload_0
      50: getfield      #209                // Field truncatedHMacOffered:Z
      53: ifeq          70
      56: aload_0
      57: invokevirtual #227                // Method allowTruncatedHMac:()Z
      60: ifeq          70
      63: aload_0
      64: invokevirtual #231                // Method checkServerExtensions:()Ljava/util/Hashtable;
      67: invokestatic  #250                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.addTruncatedHMacExtension:(Ljava/util/Hashtable;)V
      70: aload_0
      71: getfield      #212                // Field clientECPointFormats:[S
      74: ifnull        117
      77: aload_0
      78: getfield      #204                // Field selectedCipherSuite:I
      81: invokestatic  #242                // Method org/bouncycastle/crypto/tls/TlsECCUtils.isECCCipherSuite:(I)Z
      84: ifeq          117
      87: aload_0
      88: iconst_3
      89: newarray       short
      91: dup
      92: iconst_0
      93: iconst_0
      94: sastore
      95: dup
      96: iconst_1
      97: iconst_1
      98: sastore
      99: dup
     100: iconst_2
     101: iconst_2
     102: sastore
     103: putfield      #214                // Field serverECPointFormats:[S
     106: aload_0
     107: invokevirtual #231                // Method checkServerExtensions:()Ljava/util/Hashtable;
     110: aload_0
     111: getfield      #214                // Field serverECPointFormats:[S
     114: invokestatic  #247                // Method org/bouncycastle/crypto/tls/TlsECCUtils.addSupportedPointFormatsExtension:(Ljava/util/Hashtable;[S)V
     117: aload_0
     118: getfield      #216                // Field serverExtensions:Ljava/util/Hashtable;
     121: areturn

  public java.util.Vector getServerSupplementalData() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public org.bouncycastle.crypto.tls.CertificateStatus getCertificateStatus() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public org.bouncycastle.crypto.tls.CertificateRequest getCertificateRequest() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public void processClientSupplementalData(java.util.Vector) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        14
       4: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
       7: dup
       8: bipush        10
      10: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      13: athrow
      14: return

  public void notifyClientCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
       3: dup
       4: bipush        80
       6: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
       9: athrow

  public org.bouncycastle.crypto.tls.TlsCompression getCompression() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #206                // Field selectedCompressionMethod:S
       4: lookupswitch  { // 1
                     0: 24
               default: 32
          }
      24: new           #115                // class org/bouncycastle/crypto/tls/TlsNullCompression
      27: dup
      28: invokespecial #256                // Method org/bouncycastle/crypto/tls/TlsNullCompression."<init>":()V
      31: areturn
      32: new           #114                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      35: dup
      36: bipush        80
      38: invokespecial #255                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      41: athrow

  public org.bouncycastle.crypto.tls.NewSessionTicket getNewSessionTicket() throws java.io.IOException;
    Code:
       0: new           #110                // class org/bouncycastle/crypto/tls/NewSessionTicket
       3: dup
       4: lconst_0
       5: getstatic     #224                // Field org/bouncycastle/crypto/tls/TlsUtils.EMPTY_BYTES:[B
       8: invokespecial #238                // Method org/bouncycastle/crypto/tls/NewSessionTicket."<init>":(J[B)V
      11: areturn
}
