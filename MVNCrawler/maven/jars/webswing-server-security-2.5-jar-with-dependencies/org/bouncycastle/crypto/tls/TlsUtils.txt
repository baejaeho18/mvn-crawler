public class org.bouncycastle.crypto.tls.TlsUtils {
  public static final byte[] EMPTY_BYTES;

  public static final java.lang.Integer EXT_signature_algorithms;

  static final byte[] SSL_CLIENT;

  static final byte[] SSL_SERVER;

  static final byte[][] SSL3_CONST;

  public org.bouncycastle.crypto.tls.TlsUtils();
    Code:
       0: aload_0
       1: invokespecial #585                // Method java/lang/Object."<init>":()V
       4: return

  public static void checkUint8(short) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #665                // Method isValidUint8:(S)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint8(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #656                // Method isValidUint8:(I)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint8(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #664                // Method isValidUint8:(J)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint16(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #654                // Method isValidUint16:(I)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint16(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #659                // Method isValidUint16:(J)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint24(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #655                // Method isValidUint24:(I)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint24(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #660                // Method isValidUint24:(J)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint32(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #661                // Method isValidUint32:(J)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint48(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #662                // Method isValidUint48:(J)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static void checkUint64(long) throws java.io.IOException;
    Code:
       0: lload_0
       1: invokestatic  #663                // Method isValidUint64:(J)Z
       4: ifne          17
       7: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public static boolean isValidUint8(short);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: iload_0
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isValidUint8(int);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: iload_0
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isValidUint8(long);
    Code:
       0: lload_0
       1: ldc2_w        #274                // long 255l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint16(int);
    Code:
       0: iload_0
       1: ldc           #2                  // int 65535
       3: iand
       4: iload_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isValidUint16(long);
    Code:
       0: lload_0
       1: ldc2_w        #278                // long 65535l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint24(int);
    Code:
       0: iload_0
       1: ldc           #3                  // int 16777215
       3: iand
       4: iload_0
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isValidUint24(long);
    Code:
       0: lload_0
       1: ldc2_w        #280                // long 16777215l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint32(long);
    Code:
       0: lload_0
       1: ldc2_w        #282                // long 4294967295l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint48(long);
    Code:
       0: lload_0
       1: ldc2_w        #284                // long 281474976710655l
       4: land
       5: lload_0
       6: lcmp
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isValidUint64(long);
    Code:
       0: iconst_1
       1: ireturn

  public static boolean isSSL(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: invokeinterface #711,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       6: invokevirtual #627                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
       9: ireturn

  public static boolean isTLSv11(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: getstatic     #568                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv11:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: aload_0
       4: invokeinterface #711,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       9: invokevirtual #628                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      12: invokevirtual #630                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      15: ireturn

  public static boolean isTLSv12(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: getstatic     #569                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: aload_0
       4: invokeinterface #711,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       9: invokevirtual #628                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      12: invokevirtual #630                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      15: ireturn

  public static void writeUint8(short, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
       5: return

  public static void writeUint8(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
       5: return

  public static void writeUint8(short, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: i2b
       4: bastore
       5: return

  public static void writeUint8(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: i2b
       4: bastore
       5: return

  public static void writeUint16(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: bipush        8
       4: iushr
       5: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
       8: aload_1
       9: iload_0
      10: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      13: return

  public static void writeUint16(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: bipush        8
       5: iushr
       6: i2b
       7: bastore
       8: aload_1
       9: iload_2
      10: iconst_1
      11: iadd
      12: iload_0
      13: i2b
      14: bastore
      15: return

  public static void writeUint24(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_0
       2: bipush        16
       4: iushr
       5: i2b
       6: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
       9: aload_1
      10: iload_0
      11: bipush        8
      13: iushr
      14: i2b
      15: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      18: aload_1
      19: iload_0
      20: i2b
      21: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      24: return

  public static void writeUint24(int, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_0
       3: bipush        16
       5: iushr
       6: i2b
       7: bastore
       8: aload_1
       9: iload_2
      10: iconst_1
      11: iadd
      12: iload_0
      13: bipush        8
      15: iushr
      16: i2b
      17: bastore
      18: aload_1
      19: iload_2
      20: iconst_2
      21: iadd
      22: iload_0
      23: i2b
      24: bastore
      25: return

  public static void writeUint32(long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: lload_0
       2: bipush        24
       4: lushr
       5: l2i
       6: i2b
       7: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      10: aload_2
      11: lload_0
      12: bipush        16
      14: lushr
      15: l2i
      16: i2b
      17: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      20: aload_2
      21: lload_0
      22: bipush        8
      24: lushr
      25: l2i
      26: i2b
      27: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      30: aload_2
      31: lload_0
      32: l2i
      33: i2b
      34: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      37: return

  public static void writeUint32(long, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: lload_0
       3: bipush        24
       5: lushr
       6: l2i
       7: i2b
       8: bastore
       9: aload_2
      10: iload_3
      11: iconst_1
      12: iadd
      13: lload_0
      14: bipush        16
      16: lushr
      17: l2i
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_2
      23: iadd
      24: lload_0
      25: bipush        8
      27: lushr
      28: l2i
      29: i2b
      30: bastore
      31: aload_2
      32: iload_3
      33: iconst_3
      34: iadd
      35: lload_0
      36: l2i
      37: i2b
      38: bastore
      39: return

  public static void writeUint48(long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: lload_0
       2: bipush        40
       4: lushr
       5: l2i
       6: i2b
       7: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      10: aload_2
      11: lload_0
      12: bipush        32
      14: lushr
      15: l2i
      16: i2b
      17: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      20: aload_2
      21: lload_0
      22: bipush        24
      24: lushr
      25: l2i
      26: i2b
      27: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      30: aload_2
      31: lload_0
      32: bipush        16
      34: lushr
      35: l2i
      36: i2b
      37: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      40: aload_2
      41: lload_0
      42: bipush        8
      44: lushr
      45: l2i
      46: i2b
      47: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      50: aload_2
      51: lload_0
      52: l2i
      53: i2b
      54: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      57: return

  public static void writeUint48(long, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: lload_0
       3: bipush        40
       5: lushr
       6: l2i
       7: i2b
       8: bastore
       9: aload_2
      10: iload_3
      11: iconst_1
      12: iadd
      13: lload_0
      14: bipush        32
      16: lushr
      17: l2i
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_2
      23: iadd
      24: lload_0
      25: bipush        24
      27: lushr
      28: l2i
      29: i2b
      30: bastore
      31: aload_2
      32: iload_3
      33: iconst_3
      34: iadd
      35: lload_0
      36: bipush        16
      38: lushr
      39: l2i
      40: i2b
      41: bastore
      42: aload_2
      43: iload_3
      44: iconst_4
      45: iadd
      46: lload_0
      47: bipush        8
      49: lushr
      50: l2i
      51: i2b
      52: bastore
      53: aload_2
      54: iload_3
      55: iconst_5
      56: iadd
      57: lload_0
      58: l2i
      59: i2b
      60: bastore
      61: return

  public static void writeUint64(long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_2
       1: lload_0
       2: bipush        56
       4: lushr
       5: l2i
       6: i2b
       7: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      10: aload_2
      11: lload_0
      12: bipush        48
      14: lushr
      15: l2i
      16: i2b
      17: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      20: aload_2
      21: lload_0
      22: bipush        40
      24: lushr
      25: l2i
      26: i2b
      27: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      30: aload_2
      31: lload_0
      32: bipush        32
      34: lushr
      35: l2i
      36: i2b
      37: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      40: aload_2
      41: lload_0
      42: bipush        24
      44: lushr
      45: l2i
      46: i2b
      47: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      50: aload_2
      51: lload_0
      52: bipush        16
      54: lushr
      55: l2i
      56: i2b
      57: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      60: aload_2
      61: lload_0
      62: bipush        8
      64: lushr
      65: l2i
      66: i2b
      67: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      70: aload_2
      71: lload_0
      72: l2i
      73: i2b
      74: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      77: return

  public static void writeUint64(long, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: lload_0
       3: bipush        56
       5: lushr
       6: l2i
       7: i2b
       8: bastore
       9: aload_2
      10: iload_3
      11: iconst_1
      12: iadd
      13: lload_0
      14: bipush        48
      16: lushr
      17: l2i
      18: i2b
      19: bastore
      20: aload_2
      21: iload_3
      22: iconst_2
      23: iadd
      24: lload_0
      25: bipush        40
      27: lushr
      28: l2i
      29: i2b
      30: bastore
      31: aload_2
      32: iload_3
      33: iconst_3
      34: iadd
      35: lload_0
      36: bipush        32
      38: lushr
      39: l2i
      40: i2b
      41: bastore
      42: aload_2
      43: iload_3
      44: iconst_4
      45: iadd
      46: lload_0
      47: bipush        24
      49: lushr
      50: l2i
      51: i2b
      52: bastore
      53: aload_2
      54: iload_3
      55: iconst_5
      56: iadd
      57: lload_0
      58: bipush        16
      60: lushr
      61: l2i
      62: i2b
      63: bastore
      64: aload_2
      65: iload_3
      66: bipush        6
      68: iadd
      69: lload_0
      70: bipush        8
      72: lushr
      73: l2i
      74: i2b
      75: bastore
      76: aload_2
      77: iload_3
      78: bipush        7
      80: iadd
      81: lload_0
      82: l2i
      83: i2b
      84: bastore
      85: return

  public static void writeOpaque8(byte[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #653                // Method checkUint8:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #682                // Method writeUint8:(ILjava/io/OutputStream;)V
      11: aload_1
      12: aload_0
      13: invokevirtual #581                // Method java/io/OutputStream.write:([B)V
      16: return

  public static void writeOpaque16(byte[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #651                // Method checkUint16:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #680                // Method writeUint16:(ILjava/io/OutputStream;)V
      11: aload_1
      12: aload_0
      13: invokevirtual #581                // Method java/io/OutputStream.write:([B)V
      16: return

  public static void writeOpaque24(byte[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #652                // Method checkUint24:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #681                // Method writeUint24:(ILjava/io/OutputStream;)V
      11: aload_1
      12: aload_0
      13: invokevirtual #581                // Method java/io/OutputStream.write:([B)V
      16: return

  public static void writeUint8Array(short[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: arraylength
       5: if_icmpge     21
       8: aload_0
       9: iload_2
      10: saload
      11: aload_1
      12: invokestatic  #683                // Method writeUint8:(SLjava/io/OutputStream;)V
      15: iinc          2, 1
      18: goto          2
      21: return

  public static void writeUint8Array(short[], byte[], int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: arraylength
       5: if_icmpge     25
       8: aload_0
       9: iload_3
      10: saload
      11: aload_1
      12: iload_2
      13: invokestatic  #666                // Method writeUint8:(S[BI)V
      16: iinc          2, 1
      19: iinc          3, 1
      22: goto          2
      25: return

  public static void writeUint8ArrayWithUint8Length(short[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #653                // Method checkUint8:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: invokestatic  #682                // Method writeUint8:(ILjava/io/OutputStream;)V
      11: aload_0
      12: aload_1
      13: invokestatic  #685                // Method writeUint8Array:([SLjava/io/OutputStream;)V
      16: return

  public static void writeUint8ArrayWithUint8Length(short[], byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #653                // Method checkUint8:(I)V
       5: aload_0
       6: arraylength
       7: aload_1
       8: iload_2
       9: invokestatic  #658                // Method writeUint8:(I[BI)V
      12: aload_0
      13: aload_1
      14: iload_2
      15: iconst_1
      16: iadd
      17: invokestatic  #674                // Method writeUint8Array:([S[BI)V
      20: return

  public static void writeUint16Array(int[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: arraylength
       5: if_icmpge     21
       8: aload_0
       9: iload_2
      10: iaload
      11: aload_1
      12: invokestatic  #680                // Method writeUint16:(ILjava/io/OutputStream;)V
      15: iinc          2, 1
      18: goto          2
      21: return

  public static void writeUint16Array(int[], byte[], int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: arraylength
       5: if_icmpge     25
       8: aload_0
       9: iload_3
      10: iaload
      11: aload_1
      12: iload_2
      13: invokestatic  #657                // Method writeUint16:(I[BI)V
      16: iinc          2, 2
      19: iinc          3, 1
      22: goto          2
      25: return

  public static void writeUint16ArrayWithUint16Length(int[], java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_2
       1: aload_0
       2: arraylength
       3: imul
       4: istore_2
       5: iload_2
       6: invokestatic  #651                // Method checkUint16:(I)V
       9: iload_2
      10: aload_1
      11: invokestatic  #680                // Method writeUint16:(ILjava/io/OutputStream;)V
      14: aload_0
      15: aload_1
      16: invokestatic  #684                // Method writeUint16Array:([ILjava/io/OutputStream;)V
      19: return

  public static void writeUint16ArrayWithUint16Length(int[], byte[], int) throws java.io.IOException;
    Code:
       0: iconst_2
       1: aload_0
       2: arraylength
       3: imul
       4: istore_3
       5: iload_3
       6: invokestatic  #651                // Method checkUint16:(I)V
       9: iload_3
      10: aload_1
      11: iload_2
      12: invokestatic  #657                // Method writeUint16:(I[BI)V
      15: aload_0
      16: aload_1
      17: iload_2
      18: iconst_2
      19: iadd
      20: invokestatic  #672                // Method writeUint16Array:([I[BI)V
      23: return

  public static byte[] encodeOpaque8(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #653                // Method checkUint8:(I)V
       5: aload_0
       6: aload_0
       7: arraylength
       8: i2b
       9: invokestatic  #703                // Method org/bouncycastle/util/Arrays.prepend:([BB)[B
      12: areturn

  public static byte[] encodeUint8ArrayWithUint8Length(short[]) throws java.io.IOException;
    Code:
       0: iconst_1
       1: aload_0
       2: arraylength
       3: iadd
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #675                // Method writeUint8ArrayWithUint8Length:([S[BI)V
      13: aload_1
      14: areturn

  public static byte[] encodeUint16ArrayWithUint16Length(int[]) throws java.io.IOException;
    Code:
       0: iconst_2
       1: aload_0
       2: arraylength
       3: imul
       4: istore_1
       5: iconst_2
       6: iload_1
       7: iadd
       8: newarray       byte
      10: astore_2
      11: aload_0
      12: aload_2
      13: iconst_0
      14: invokestatic  #673                // Method writeUint16ArrayWithUint16Length:([I[BI)V
      17: aload_2
      18: areturn

  public static short readUint8(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/InputStream.read:()I
       4: istore_1
       5: iload_1
       6: ifge          17
       9: new           #289                // class java/io/EOFException
      12: dup
      13: invokespecial #578                // Method java/io/EOFException."<init>":()V
      16: athrow
      17: iload_1
      18: i2s
      19: ireturn

  public static short readUint8(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: i2s
       4: ireturn

  public static int readUint16(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #579                // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: ifge          22
      14: new           #289                // class java/io/EOFException
      17: dup
      18: invokespecial #578                // Method java/io/EOFException."<init>":()V
      21: athrow
      22: iload_1
      23: bipush        8
      25: ishl
      26: iload_2
      27: ior
      28: ireturn

  public static int readUint16(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        8
       9: ishl
      10: istore_2
      11: iload_2
      12: aload_0
      13: iinc          1, 1
      16: iload_1
      17: baload
      18: sipush        255
      21: iand
      22: ior
      23: istore_2
      24: iload_2
      25: ireturn

  public static int readUint24(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #579                // Method java/io/InputStream.read:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #579                // Method java/io/InputStream.read:()I
      14: istore_3
      15: iload_3
      16: ifge          27
      19: new           #289                // class java/io/EOFException
      22: dup
      23: invokespecial #578                // Method java/io/EOFException."<init>":()V
      26: athrow
      27: iload_1
      28: bipush        16
      30: ishl
      31: iload_2
      32: bipush        8
      34: ishl
      35: ior
      36: iload_3
      37: ior
      38: ireturn

  public static int readUint24(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        16
       9: ishl
      10: istore_2
      11: iload_2
      12: aload_0
      13: iinc          1, 1
      16: iload_1
      17: baload
      18: sipush        255
      21: iand
      22: bipush        8
      24: ishl
      25: ior
      26: istore_2
      27: iload_2
      28: aload_0
      29: iinc          1, 1
      32: iload_1
      33: baload
      34: sipush        255
      37: iand
      38: ior
      39: istore_2
      40: iload_2
      41: ireturn

  public static long readUint32(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #579                // Method java/io/InputStream.read:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #579                // Method java/io/InputStream.read:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #579                // Method java/io/InputStream.read:()I
      19: istore        4
      21: iload         4
      23: ifge          34
      26: new           #289                // class java/io/EOFException
      29: dup
      30: invokespecial #578                // Method java/io/EOFException."<init>":()V
      33: athrow
      34: iload_1
      35: iconst_2
      36: ishl
      37: iload_2
      38: bipush        16
      40: ishl
      41: ior
      42: iload_3
      43: bipush        8
      45: ishl
      46: ior
      47: iload         4
      49: ior
      50: i2l
      51: ldc2_w        #282                // long 4294967295l
      54: land
      55: lreturn

  public static long readUint32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: istore_2
      11: iload_2
      12: aload_0
      13: iinc          1, 1
      16: iload_1
      17: baload
      18: sipush        255
      21: iand
      22: bipush        16
      24: ishl
      25: ior
      26: istore_2
      27: iload_2
      28: aload_0
      29: iinc          1, 1
      32: iload_1
      33: baload
      34: sipush        255
      37: iand
      38: bipush        8
      40: ishl
      41: ior
      42: istore_2
      43: iload_2
      44: aload_0
      45: iinc          1, 1
      48: iload_1
      49: baload
      50: sipush        255
      53: iand
      54: ior
      55: istore_2
      56: iload_2
      57: i2l
      58: ldc2_w        #282                // long 4294967295l
      61: land
      62: lreturn

  public static long readUint48(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #678                // Method readUint24:(Ljava/io/InputStream;)I
       4: istore_1
       5: aload_0
       6: invokestatic  #678                // Method readUint24:(Ljava/io/InputStream;)I
       9: istore_2
      10: iload_1
      11: i2l
      12: ldc2_w        #282                // long 4294967295l
      15: land
      16: bipush        24
      18: lshl
      19: iload_2
      20: i2l
      21: ldc2_w        #282                // long 4294967295l
      24: land
      25: lor
      26: lreturn

  public static long readUint48(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #667                // Method readUint24:([BI)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iconst_3
       9: iadd
      10: invokestatic  #667                // Method readUint24:([BI)I
      13: istore_3
      14: iload_2
      15: i2l
      16: ldc2_w        #282                // long 4294967295l
      19: land
      20: bipush        24
      22: lshl
      23: iload_3
      24: i2l
      25: ldc2_w        #282                // long 4294967295l
      28: land
      29: lor
      30: lreturn

  public static byte[] readAllOrNothing(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     9
       5: getstatic     #570                // Field EMPTY_BYTES:[B
       8: areturn
       9: iload_0
      10: newarray       byte
      12: astore_2
      13: aload_1
      14: aload_2
      15: invokestatic  #707                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      18: istore_3
      19: iload_3
      20: ifne          25
      23: aconst_null
      24: areturn
      25: iload_3
      26: iload_0
      27: if_icmpeq     38
      30: new           #289                // class java/io/EOFException
      33: dup
      34: invokespecial #578                // Method java/io/EOFException."<init>":()V
      37: athrow
      38: aload_2
      39: areturn

  public static byte[] readFully(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     9
       5: getstatic     #570                // Field EMPTY_BYTES:[B
       8: areturn
       9: iload_0
      10: newarray       byte
      12: astore_2
      13: iload_0
      14: aload_1
      15: aload_2
      16: invokestatic  #707                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      19: if_icmpeq     30
      22: new           #289                // class java/io/EOFException
      25: dup
      26: invokespecial #578                // Method java/io/EOFException."<init>":()V
      29: athrow
      30: aload_2
      31: areturn

  public static void readFully(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iload_2
       4: ifle          24
       7: iload_2
       8: aload_1
       9: aload_0
      10: invokestatic  #707                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      13: if_icmpeq     24
      16: new           #289                // class java/io/EOFException
      19: dup
      20: invokespecial #578                // Method java/io/EOFException."<init>":()V
      23: athrow
      24: return

  public static byte[] readOpaque8(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #679                // Method readUint8:(Ljava/io/InputStream;)S
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokestatic  #676                // Method readFully:(ILjava/io/InputStream;)[B
      10: areturn

  public static byte[] readOpaque16(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #677                // Method readUint16:(Ljava/io/InputStream;)I
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokestatic  #676                // Method readFully:(ILjava/io/InputStream;)[B
      10: areturn

  public static byte[] readOpaque24(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #678                // Method readUint24:(Ljava/io/InputStream;)I
       4: istore_1
       5: iload_1
       6: aload_0
       7: invokestatic  #676                // Method readFully:(ILjava/io/InputStream;)[B
      10: areturn

  public static short[] readUint8Array(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: newarray       short
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_0
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_1
      14: invokestatic  #679                // Method readUint8:(Ljava/io/InputStream;)S
      17: sastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public static int[] readUint16Array(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: newarray       int
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_0
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_1
      14: invokestatic  #677                // Method readUint16:(Ljava/io/InputStream;)I
      17: iastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public static org.bouncycastle.crypto.tls.ProtocolVersion readVersion(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: baload
      12: sipush        255
      15: iand
      16: invokestatic  #629                // Method org/bouncycastle/crypto/tls/ProtocolVersion.get:(II)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      19: areturn

  public static org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #579                // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: ifge          22
      14: new           #289                // class java/io/EOFException
      17: dup
      18: invokespecial #578                // Method java/io/EOFException."<init>":()V
      21: athrow
      22: iload_1
      23: iload_2
      24: invokestatic  #629                // Method org/bouncycastle/crypto/tls/ProtocolVersion.get:(II)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      27: areturn

  public static int readVersionRaw(byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: bipush        8
       5: ishl
       6: aload_0
       7: iload_1
       8: iconst_1
       9: iadd
      10: baload
      11: ior
      12: ireturn

  public static int readVersionRaw(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/InputStream.read:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #579                // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: ifge          22
      14: new           #289                // class java/io/EOFException
      17: dup
      18: invokespecial #578                // Method java/io/EOFException."<init>":()V
      21: athrow
      22: iload_1
      23: bipush        8
      25: ishl
      26: iload_2
      27: ior
      28: ireturn

  public static org.bouncycastle.asn1.ASN1Primitive readASN1Object(byte[]) throws java.io.IOException;
    Code:
       0: new           #301                // class org/bouncycastle/asn1/ASN1InputStream
       3: dup
       4: aload_0
       5: invokespecial #594                // Method org/bouncycastle/asn1/ASN1InputStream."<init>":([B)V
       8: astore_1
       9: aload_1
      10: invokevirtual #595                // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      13: astore_2
      14: aconst_null
      15: aload_2
      16: if_acmpne     29
      19: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      22: dup
      23: bipush        50
      25: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      28: athrow
      29: aconst_null
      30: aload_1
      31: invokevirtual #595                // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      34: if_acmpeq     47
      37: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      40: dup
      41: bipush        50
      43: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      46: athrow
      47: aload_2
      48: areturn

  public static org.bouncycastle.asn1.ASN1Primitive readDERObject(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #688                // Method readASN1Object:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       4: astore_1
       5: aload_1
       6: ldc           #7                  // String DER
       8: invokevirtual #596                // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:(Ljava/lang/String;)[B
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokestatic  #704                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      17: ifne          30
      20: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      23: dup
      24: bipush        50
      26: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      29: athrow
      30: aload_1
      31: areturn

  public static void writeGMTUnixTime(byte[], int);
    Code:
       0: invokestatic  #586                // Method java/lang/System.currentTimeMillis:()J
       3: ldc2_w        #276                // long 1000l
       6: ldiv
       7: l2i
       8: istore_2
       9: aload_0
      10: iload_1
      11: iload_2
      12: bipush        24
      14: iushr
      15: i2b
      16: bastore
      17: aload_0
      18: iload_1
      19: iconst_1
      20: iadd
      21: iload_2
      22: bipush        16
      24: iushr
      25: i2b
      26: bastore
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: iload_2
      32: bipush        8
      34: iushr
      35: i2b
      36: bastore
      37: aload_0
      38: iload_1
      39: iconst_3
      40: iadd
      41: iload_2
      42: i2b
      43: bastore
      44: return

  public static void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #625                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMajorVersion:()I
       5: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
       8: aload_1
       9: aload_0
      10: invokevirtual #626                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMinorVersion:()I
      13: invokevirtual #580                // Method java/io/OutputStream.write:(I)V
      16: return

  public static void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion, byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: invokevirtual #625                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMajorVersion:()I
       6: i2b
       7: bastore
       8: aload_1
       9: iload_2
      10: iconst_1
      11: iadd
      12: aload_0
      13: invokevirtual #626                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getMinorVersion:()I
      16: i2b
      17: bastore
      18: return

  public static java.util.Vector getDefaultDSSSignatureAlgorithms();
    Code:
       0: new           #326                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       3: dup
       4: iconst_2
       5: iconst_2
       6: invokespecial #638                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
       9: invokestatic  #699                // Method vectorOfOne:(Ljava/lang/Object;)Ljava/util/Vector;
      12: areturn

  public static java.util.Vector getDefaultECDSASignatureAlgorithms();
    Code:
       0: new           #326                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       3: dup
       4: iconst_2
       5: iconst_3
       6: invokespecial #638                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
       9: invokestatic  #699                // Method vectorOfOne:(Ljava/lang/Object;)Ljava/util/Vector;
      12: areturn

  public static java.util.Vector getDefaultRSASignatureAlgorithms();
    Code:
       0: new           #326                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
       3: dup
       4: iconst_2
       5: iconst_1
       6: invokespecial #638                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm."<init>":(SS)V
       9: invokestatic  #699                // Method vectorOfOne:(Ljava/lang/Object;)Ljava/util/Vector;
      12: areturn

  public static byte[] getExtensionData(java.util.Hashtable, java.lang.Integer);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          19
       8: aload_0
       9: aload_1
      10: invokevirtual #588                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #286                // class "[B"
      16: checkcast     #286                // class "[B"
      19: areturn

  public static boolean hasExpectedEmptyExtensionData(java.util.Hashtable, java.lang.Integer, short) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #696                // Method getExtensionData:(Ljava/util/Hashtable;Ljava/lang/Integer;)[B
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_3
      13: arraylength
      14: ifeq          26
      17: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      20: dup
      21: iload_2
      22: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      25: athrow
      26: iconst_1
      27: ireturn

  public static org.bouncycastle.crypto.tls.TlsSession importSession(byte[], org.bouncycastle.crypto.tls.SessionParameters);
    Code:
       0: new           #334                // class org/bouncycastle/crypto/tls/TlsSessionImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #646                // Method org/bouncycastle/crypto/tls/TlsSessionImpl."<init>":([BLorg/bouncycastle/crypto/tls/SessionParameters;)V
       9: areturn

  public static boolean isSignatureAlgorithmsExtensionAllowed(org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: getstatic     #569                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: aload_0
       4: invokevirtual #628                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       7: invokevirtual #630                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      10: ireturn

  public static void addSignatureAlgorithmsExtension(java.util.Hashtable, java.util.Vector) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #574                // Field EXT_signature_algorithms:Ljava/lang/Integer;
       4: aload_1
       5: invokestatic  #686                // Method createSignatureAlgorithmsExtension:(Ljava/util/Vector;)[B
       8: invokevirtual #589                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public static java.util.Vector getSignatureAlgorithmsExtension(java.util.Hashtable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #574                // Field EXT_signature_algorithms:Ljava/lang/Integer;
       4: invokestatic  #696                // Method getExtensionData:(Ljava/util/Hashtable;Ljava/lang/Integer;)[B
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: invokestatic  #687                // Method readSignatureAlgorithmsExtension:([B)Ljava/util/Vector;
      20: areturn

  public static byte[] createSignatureAlgorithmsExtension(java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #288                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #576                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: iconst_0
      10: aload_1
      11: invokestatic  #695                // Method encodeSupportedSignatureAlgorithms:(Ljava/util/Vector;ZLjava/io/OutputStream;)V
      14: aload_1
      15: invokevirtual #577                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      18: areturn

  public static java.util.Vector readSignatureAlgorithmsExtension(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #294                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #5                  // String \'extensionData\' cannot be null
      10: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #287                // class java/io/ByteArrayInputStream
      17: dup
      18: aload_0
      19: invokespecial #575                // Method java/io/ByteArrayInputStream."<init>":([B)V
      22: astore_1
      23: iconst_0
      24: aload_1
      25: invokestatic  #698                // Method parseSupportedSignatureAlgorithms:(ZLjava/io/InputStream;)Ljava/util/Vector;
      28: astore_2
      29: aload_1
      30: invokestatic  #644                // Method org/bouncycastle/crypto/tls/TlsProtocol.assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      33: aload_2
      34: areturn

  public static void encodeSupportedSignatureAlgorithms(java.util.Vector, boolean, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: invokevirtual #590                // Method java/util/Vector.size:()I
       8: iconst_1
       9: if_icmplt     21
      12: aload_0
      13: invokevirtual #590                // Method java/util/Vector.size:()I
      16: ldc           #1                  // int 32768
      18: if_icmplt     31
      21: new           #294                // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #6                  // String \'supportedSignatureAlgorithms\' must have length from 1 to (2^15 - 1)
      27: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iconst_2
      32: aload_0
      33: invokevirtual #590                // Method java/util/Vector.size:()I
      36: imul
      37: istore_3
      38: iload_3
      39: invokestatic  #651                // Method checkUint16:(I)V
      42: iload_3
      43: aload_2
      44: invokestatic  #680                // Method writeUint16:(ILjava/io/OutputStream;)V
      47: iconst_0
      48: istore        4
      50: iload         4
      52: aload_0
      53: invokevirtual #590                // Method java/util/Vector.size:()I
      56: if_icmpge     104
      59: aload_0
      60: iload         4
      62: invokevirtual #592                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      65: checkcast     #326                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      68: astore        5
      70: iload_1
      71: ifne          92
      74: aload         5
      76: invokevirtual #637                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      79: ifne          92
      82: new           #294                // class java/lang/IllegalArgumentException
      85: dup
      86: ldc           #9                  // String SignatureAlgorithm.anonymous MUST NOT appear in the signature_algorithms extension
      88: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload         5
      94: aload_2
      95: invokevirtual #639                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.encode:(Ljava/io/OutputStream;)V
      98: iinc          4, 1
     101: goto          50
     104: return

  public static java.util.Vector parseSupportedSignatureAlgorithms(boolean, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #677                // Method readUint16:(Ljava/io/InputStream;)I
       4: istore_2
       5: iload_2
       6: iconst_2
       7: if_icmplt     16
      10: iload_2
      11: iconst_1
      12: iand
      13: ifeq          26
      16: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      19: dup
      20: bipush        50
      22: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      25: athrow
      26: iload_2
      27: iconst_2
      28: idiv
      29: istore_3
      30: new           #300                // class java/util/Vector
      33: dup
      34: iload_3
      35: invokespecial #591                // Method java/util/Vector."<init>":(I)V
      38: astore        4
      40: iconst_0
      41: istore        5
      43: iload         5
      45: iload_3
      46: if_icmpge     90
      49: aload_1
      50: invokestatic  #640                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.parse:(Ljava/io/InputStream;)Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;
      53: astore        6
      55: iload_0
      56: ifne          77
      59: aload         6
      61: invokevirtual #637                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      64: ifne          77
      67: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      70: dup
      71: bipush        47
      73: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      76: athrow
      77: aload         4
      79: aload         6
      81: invokevirtual #593                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      84: iinc          5, 1
      87: goto          43
      90: aload         4
      92: areturn

  public static byte[] PRF(org.bouncycastle.crypto.tls.TlsContext, byte[], java.lang.String, byte[], int);
    Code:
       0: aload_0
       1: invokeinterface #711,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       6: astore        5
       8: aload         5
      10: invokevirtual #627                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
      13: ifeq          26
      16: new           #295                // class java/lang/IllegalStateException
      19: dup
      20: ldc           #8                  // String No PRF available for SSLv3 session
      22: invokespecial #583                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_2
      27: invokestatic  #706                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
      30: astore        6
      32: aload         6
      34: aload_3
      35: invokestatic  #669                // Method concat:([B[B)[B
      38: astore        7
      40: aload_0
      41: invokeinterface #712,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      46: invokevirtual #631                // Method org/bouncycastle/crypto/tls/SecurityParameters.getPrfAlgorithm:()I
      49: istore        8
      51: iload         8
      53: ifne          67
      56: aload_1
      57: aload         6
      59: aload         7
      61: iload         4
      63: invokestatic  #671                // Method PRF_legacy:([B[B[BI)[B
      66: areturn
      67: iload         8
      69: invokestatic  #690                // Method createPRFHash:(I)Lorg/bouncycastle/crypto/Digest;
      72: astore        9
      74: iload         4
      76: newarray       byte
      78: astore        10
      80: aload         9
      82: aload_1
      83: aload         7
      85: aload         10
      87: invokestatic  #691                // Method hmac_hash:(Lorg/bouncycastle/crypto/Digest;[B[B[B)V
      90: aload         10
      92: areturn

  public static byte[] PRF_legacy(byte[], java.lang.String, byte[], int);
    Code:
       0: aload_1
       1: invokestatic  #706                // Method org/bouncycastle/util/Strings.toByteArray:(Ljava/lang/String;)[B
       4: astore        4
       6: aload         4
       8: aload_2
       9: invokestatic  #669                // Method concat:([B[B)[B
      12: astore        5
      14: aload_0
      15: aload         4
      17: aload         5
      19: iload_3
      20: invokestatic  #671                // Method PRF_legacy:([B[B[BI)[B
      23: areturn

  static byte[] PRF_legacy(byte[], byte[], byte[], int);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: iadd
       4: iconst_2
       5: idiv
       6: istore        4
       8: iload         4
      10: newarray       byte
      12: astore        5
      14: iload         4
      16: newarray       byte
      18: astore        6
      20: aload_0
      21: iconst_0
      22: aload         5
      24: iconst_0
      25: iload         4
      27: invokestatic  #587                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: aload_0
      31: aload_0
      32: arraylength
      33: iload         4
      35: isub
      36: aload         6
      38: iconst_0
      39: iload         4
      41: invokestatic  #587                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: iload_3
      45: newarray       byte
      47: astore        7
      49: iload_3
      50: newarray       byte
      52: astore        8
      54: iconst_1
      55: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      58: aload         5
      60: aload_2
      61: aload         7
      63: invokestatic  #691                // Method hmac_hash:(Lorg/bouncycastle/crypto/Digest;[B[B[B)V
      66: iconst_2
      67: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      70: aload         6
      72: aload_2
      73: aload         8
      75: invokestatic  #691                // Method hmac_hash:(Lorg/bouncycastle/crypto/Digest;[B[B[B)V
      78: iconst_0
      79: istore        9
      81: iload         9
      83: iload_3
      84: if_icmpge     107
      87: aload         7
      89: iload         9
      91: dup2
      92: baload
      93: aload         8
      95: iload         9
      97: baload
      98: ixor
      99: i2b
     100: bastore
     101: iinc          9, 1
     104: goto          81
     107: aload         7
     109: areturn

  static byte[] concat(byte[], byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: aload_1
       3: arraylength
       4: iadd
       5: newarray       byte
       7: astore_2
       8: aload_0
       9: iconst_0
      10: aload_2
      11: iconst_0
      12: aload_0
      13: arraylength
      14: invokestatic  #587                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_1
      18: iconst_0
      19: aload_2
      20: aload_0
      21: arraylength
      22: aload_1
      23: arraylength
      24: invokestatic  #587                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_2
      28: areturn

  static void hmac_hash(org.bouncycastle.crypto.Digest, byte[], byte[], byte[]);
    Code:
       0: new           #316                // class org/bouncycastle/crypto/macs/HMac
       3: dup
       4: aload_0
       5: invokespecial #618                // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
       8: astore        4
      10: aload         4
      12: new           #320                // class org/bouncycastle/crypto/params/KeyParameter
      15: dup
      16: aload_1
      17: invokespecial #620                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      20: invokevirtual #617                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      23: aload_2
      24: astore        5
      26: aload_0
      27: invokeinterface #708,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      32: istore        6
      34: aload_3
      35: arraylength
      36: iload         6
      38: iadd
      39: iconst_1
      40: isub
      41: iload         6
      43: idiv
      44: istore        7
      46: aload         4
      48: invokevirtual #614                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      51: newarray       byte
      53: astore        8
      55: aload         4
      57: invokevirtual #614                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      60: newarray       byte
      62: astore        9
      64: iconst_0
      65: istore        10
      67: iload         10
      69: iload         7
      71: if_icmpge     158
      74: aload         4
      76: aload         5
      78: iconst_0
      79: aload         5
      81: arraylength
      82: invokevirtual #616                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
      85: aload         4
      87: aload         8
      89: iconst_0
      90: invokevirtual #615                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
      93: pop
      94: aload         8
      96: astore        5
      98: aload         4
     100: aload         5
     102: iconst_0
     103: aload         5
     105: arraylength
     106: invokevirtual #616                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     109: aload         4
     111: aload_2
     112: iconst_0
     113: aload_2
     114: arraylength
     115: invokevirtual #616                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     118: aload         4
     120: aload         9
     122: iconst_0
     123: invokevirtual #615                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     126: pop
     127: aload         9
     129: iconst_0
     130: aload_3
     131: iload         6
     133: iload         10
     135: imul
     136: iload         6
     138: aload_3
     139: arraylength
     140: iload         6
     142: iload         10
     144: imul
     145: isub
     146: invokestatic  #584                // Method java/lang/Math.min:(II)I
     149: invokestatic  #587                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     152: iinc          10, 1
     155: goto          67
     158: return

  static void validateKeyUsage(org.bouncycastle.asn1.x509.Certificate, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #598                // Method org/bouncycastle/asn1/x509/Certificate.getTBSCertificate:()Lorg/bouncycastle/asn1/x509/TBSCertificate;
       4: invokevirtual #601                // Method org/bouncycastle/asn1/x509/TBSCertificate.getExtensions:()Lorg/bouncycastle/asn1/x509/Extensions;
       7: astore_2
       8: aload_2
       9: ifnull        51
      12: aload_2
      13: invokestatic  #600                // Method org/bouncycastle/asn1/x509/KeyUsage.fromExtensions:(Lorg/bouncycastle/asn1/x509/Extensions;)Lorg/bouncycastle/asn1/x509/KeyUsage;
      16: astore_3
      17: aload_3
      18: ifnull        51
      21: aload_3
      22: invokevirtual #599                // Method org/bouncycastle/asn1/x509/KeyUsage.getBytes:()[B
      25: iconst_0
      26: baload
      27: sipush        255
      30: iand
      31: istore        4
      33: iload         4
      35: iload_1
      36: iand
      37: iload_1
      38: if_icmpeq     51
      41: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      44: dup
      45: bipush        46
      47: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      50: athrow
      51: return

  static byte[] calculateKeyBlock(org.bouncycastle.crypto.tls.TlsContext, int);
    Code:
       0: aload_0
       1: invokeinterface #712,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
       6: astore_2
       7: aload_2
       8: invokevirtual #634                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
      11: astore_3
      12: aload_2
      13: invokevirtual #635                // Method org/bouncycastle/crypto/tls/SecurityParameters.getServerRandom:()[B
      16: aload_2
      17: invokevirtual #633                // Method org/bouncycastle/crypto/tls/SecurityParameters.getClientRandom:()[B
      20: invokestatic  #669                // Method concat:([B[B)[B
      23: astore        4
      25: aload_0
      26: invokestatic  #694                // Method isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      29: ifeq          40
      32: aload_3
      33: aload         4
      35: iload_1
      36: invokestatic  #670                // Method calculateKeyBlock_SSL:([B[BI)[B
      39: areturn
      40: aload_0
      41: aload_3
      42: ldc           #10                 // String key expansion
      44: aload         4
      46: iload_1
      47: invokestatic  #697                // Method PRF:(Lorg/bouncycastle/crypto/tls/TlsContext;[BLjava/lang/String;[BI)[B
      50: areturn

  static byte[] calculateKeyBlock_SSL(byte[], byte[], int);
    Code:
       0: iconst_1
       1: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       4: astore_3
       5: iconst_2
       6: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       9: astore        4
      11: aload_3
      12: invokeinterface #708,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      17: istore        5
      19: aload         4
      21: invokeinterface #708,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      26: newarray       byte
      28: astore        6
      30: iload_2
      31: iload         5
      33: iadd
      34: newarray       byte
      36: astore        7
      38: iconst_0
      39: istore        8
      41: iconst_0
      42: istore        9
      44: iload         9
      46: iload_2
      47: if_icmpge     150
      50: getstatic     #573                // Field SSL3_CONST:[[B
      53: iload         8
      55: aaload
      56: astore        10
      58: aload         4
      60: aload         10
      62: iconst_0
      63: aload         10
      65: arraylength
      66: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      71: aload         4
      73: aload_0
      74: iconst_0
      75: aload_0
      76: arraylength
      77: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      82: aload         4
      84: aload_1
      85: iconst_0
      86: aload_1
      87: arraylength
      88: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      93: aload         4
      95: aload         6
      97: iconst_0
      98: invokeinterface #709,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     103: pop
     104: aload_3
     105: aload_0
     106: iconst_0
     107: aload_0
     108: arraylength
     109: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     114: aload_3
     115: aload         6
     117: iconst_0
     118: aload         6
     120: arraylength
     121: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     126: aload_3
     127: aload         7
     129: iload         9
     131: invokeinterface #709,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     136: pop
     137: iload         9
     139: iload         5
     141: iadd
     142: istore        9
     144: iinc          8, 1
     147: goto          44
     150: iload_2
     151: newarray       byte
     153: astore        10
     155: aload         7
     157: iconst_0
     158: aload         10
     160: iconst_0
     161: iload_2
     162: invokestatic  #587                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     165: aload         10
     167: areturn

  static byte[] calculateMasterSecret(org.bouncycastle.crypto.tls.TlsContext, byte[]);
    Code:
       0: aload_0
       1: invokeinterface #712,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
       6: astore_2
       7: aload_2
       8: invokevirtual #633                // Method org/bouncycastle/crypto/tls/SecurityParameters.getClientRandom:()[B
      11: aload_2
      12: invokevirtual #635                // Method org/bouncycastle/crypto/tls/SecurityParameters.getServerRandom:()[B
      15: invokestatic  #669                // Method concat:([B[B)[B
      18: astore_3
      19: aload_0
      20: invokestatic  #694                // Method isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      23: ifeq          32
      26: aload_1
      27: aload_3
      28: invokestatic  #668                // Method calculateMasterSecret_SSL:([B[B)[B
      31: areturn
      32: aload_0
      33: aload_1
      34: ldc           #12                 // String master secret
      36: aload_3
      37: bipush        48
      39: invokestatic  #697                // Method PRF:(Lorg/bouncycastle/crypto/tls/TlsContext;[BLjava/lang/String;[BI)[B
      42: areturn

  static byte[] calculateMasterSecret_SSL(byte[], byte[]);
    Code:
       0: iconst_1
       1: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       4: astore_2
       5: iconst_2
       6: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
       9: astore_3
      10: aload_2
      11: invokeinterface #708,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      16: istore        4
      18: aload_3
      19: invokeinterface #708,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      24: newarray       byte
      26: astore        5
      28: iload         4
      30: iconst_3
      31: imul
      32: newarray       byte
      34: astore        6
      36: iconst_0
      37: istore        7
      39: iconst_0
      40: istore        8
      42: iload         8
      44: iconst_3
      45: if_icmpge     144
      48: getstatic     #573                // Field SSL3_CONST:[[B
      51: iload         8
      53: aaload
      54: astore        9
      56: aload_3
      57: aload         9
      59: iconst_0
      60: aload         9
      62: arraylength
      63: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      68: aload_3
      69: aload_0
      70: iconst_0
      71: aload_0
      72: arraylength
      73: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      78: aload_3
      79: aload_1
      80: iconst_0
      81: aload_1
      82: arraylength
      83: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      88: aload_3
      89: aload         5
      91: iconst_0
      92: invokeinterface #709,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      97: pop
      98: aload_2
      99: aload_0
     100: iconst_0
     101: aload_0
     102: arraylength
     103: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     108: aload_2
     109: aload         5
     111: iconst_0
     112: aload         5
     114: arraylength
     115: invokeinterface #710,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     120: aload_2
     121: aload         6
     123: iload         7
     125: invokeinterface #709,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     130: pop
     131: iload         7
     133: iload         4
     135: iadd
     136: istore        7
     138: iinc          8, 1
     141: goto          42
     144: aload         6
     146: areturn

  static byte[] calculateVerifyData(org.bouncycastle.crypto.tls.TlsContext, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: invokestatic  #694                // Method isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       4: ifeq          9
       7: aload_2
       8: areturn
       9: aload_0
      10: invokeinterface #712,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      15: astore_3
      16: aload_3
      17: invokevirtual #634                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
      20: astore        4
      22: aload_3
      23: invokevirtual #632                // Method org/bouncycastle/crypto/tls/SecurityParameters.getVerifyDataLength:()I
      26: istore        5
      28: aload_0
      29: aload         4
      31: aload_1
      32: aload_2
      33: iload         5
      35: invokestatic  #697                // Method PRF:(Lorg/bouncycastle/crypto/tls/TlsContext;[BLjava/lang/String;[BI)[B
      38: areturn

  public static org.bouncycastle.crypto.Digest createHash(short);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 48
                     3: 56
                     4: 64
                     5: 72
                     6: 80
               default: 88
          }
      40: new           #310                // class org/bouncycastle/crypto/digests/MD5Digest
      43: dup
      44: invokespecial #602                // Method org/bouncycastle/crypto/digests/MD5Digest."<init>":()V
      47: areturn
      48: new           #311                // class org/bouncycastle/crypto/digests/SHA1Digest
      51: dup
      52: invokespecial #604                // Method org/bouncycastle/crypto/digests/SHA1Digest."<init>":()V
      55: areturn
      56: new           #312                // class org/bouncycastle/crypto/digests/SHA224Digest
      59: dup
      60: invokespecial #606                // Method org/bouncycastle/crypto/digests/SHA224Digest."<init>":()V
      63: areturn
      64: new           #313                // class org/bouncycastle/crypto/digests/SHA256Digest
      67: dup
      68: invokespecial #608                // Method org/bouncycastle/crypto/digests/SHA256Digest."<init>":()V
      71: areturn
      72: new           #314                // class org/bouncycastle/crypto/digests/SHA384Digest
      75: dup
      76: invokespecial #610                // Method org/bouncycastle/crypto/digests/SHA384Digest."<init>":()V
      79: areturn
      80: new           #315                // class org/bouncycastle/crypto/digests/SHA512Digest
      83: dup
      84: invokespecial #612                // Method org/bouncycastle/crypto/digests/SHA512Digest."<init>":()V
      87: areturn
      88: new           #294                // class java/lang/IllegalArgumentException
      91: dup
      92: ldc           #13                 // String unknown HashAlgorithm
      94: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow

  public static org.bouncycastle.crypto.Digest cloneHash(short, org.bouncycastle.crypto.Digest);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 52
                     3: 64
                     4: 76
                     5: 88
                     6: 100
               default: 112
          }
      40: new           #310                // class org/bouncycastle/crypto/digests/MD5Digest
      43: dup
      44: aload_1
      45: checkcast     #310                // class org/bouncycastle/crypto/digests/MD5Digest
      48: invokespecial #603                // Method org/bouncycastle/crypto/digests/MD5Digest."<init>":(Lorg/bouncycastle/crypto/digests/MD5Digest;)V
      51: areturn
      52: new           #311                // class org/bouncycastle/crypto/digests/SHA1Digest
      55: dup
      56: aload_1
      57: checkcast     #311                // class org/bouncycastle/crypto/digests/SHA1Digest
      60: invokespecial #605                // Method org/bouncycastle/crypto/digests/SHA1Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA1Digest;)V
      63: areturn
      64: new           #312                // class org/bouncycastle/crypto/digests/SHA224Digest
      67: dup
      68: aload_1
      69: checkcast     #312                // class org/bouncycastle/crypto/digests/SHA224Digest
      72: invokespecial #607                // Method org/bouncycastle/crypto/digests/SHA224Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA224Digest;)V
      75: areturn
      76: new           #313                // class org/bouncycastle/crypto/digests/SHA256Digest
      79: dup
      80: aload_1
      81: checkcast     #313                // class org/bouncycastle/crypto/digests/SHA256Digest
      84: invokespecial #609                // Method org/bouncycastle/crypto/digests/SHA256Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA256Digest;)V
      87: areturn
      88: new           #314                // class org/bouncycastle/crypto/digests/SHA384Digest
      91: dup
      92: aload_1
      93: checkcast     #314                // class org/bouncycastle/crypto/digests/SHA384Digest
      96: invokespecial #611                // Method org/bouncycastle/crypto/digests/SHA384Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA384Digest;)V
      99: areturn
     100: new           #315                // class org/bouncycastle/crypto/digests/SHA512Digest
     103: dup
     104: aload_1
     105: checkcast     #315                // class org/bouncycastle/crypto/digests/SHA512Digest
     108: invokespecial #613                // Method org/bouncycastle/crypto/digests/SHA512Digest."<init>":(Lorg/bouncycastle/crypto/digests/SHA512Digest;)V
     111: areturn
     112: new           #294                // class java/lang/IllegalArgumentException
     115: dup
     116: ldc           #13                 // String unknown HashAlgorithm
     118: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow

  public static org.bouncycastle.crypto.Digest createPRFHash(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 1
                     0: 20
               default: 28
          }
      20: new           #323                // class org/bouncycastle/crypto/tls/CombinedHash
      23: dup
      24: invokespecial #623                // Method org/bouncycastle/crypto/tls/CombinedHash."<init>":()V
      27: areturn
      28: iload_0
      29: invokestatic  #650                // Method getHashAlgorithmForPRFAlgorithm:(I)S
      32: invokestatic  #692                // Method createHash:(S)Lorg/bouncycastle/crypto/Digest;
      35: areturn

  public static org.bouncycastle.crypto.Digest clonePRFHash(int, org.bouncycastle.crypto.Digest);
    Code:
       0: iload_0
       1: lookupswitch  { // 1
                     0: 20
               default: 32
          }
      20: new           #323                // class org/bouncycastle/crypto/tls/CombinedHash
      23: dup
      24: aload_1
      25: checkcast     #323                // class org/bouncycastle/crypto/tls/CombinedHash
      28: invokespecial #624                // Method org/bouncycastle/crypto/tls/CombinedHash."<init>":(Lorg/bouncycastle/crypto/tls/CombinedHash;)V
      31: areturn
      32: iload_0
      33: invokestatic  #650                // Method getHashAlgorithmForPRFAlgorithm:(I)S
      36: aload_1
      37: invokestatic  #700                // Method cloneHash:(SLorg/bouncycastle/crypto/Digest;)Lorg/bouncycastle/crypto/Digest;
      40: areturn

  public static short getHashAlgorithmForPRFAlgorithm(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 38
                     2: 40
               default: 42
          }
      28: new           #294                // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #11                 // String legacy PRF not a valid algorithm
      34: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iconst_4
      39: ireturn
      40: iconst_5
      41: ireturn
      42: new           #294                // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #14                 // String unknown PRFAlgorithm
      48: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow

  public static org.bouncycastle.asn1.ASN1ObjectIdentifier getOIDForHashAlgorithm(short);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 44
                     3: 48
                     4: 52
                     5: 56
                     6: 60
               default: 64
          }
      40: getstatic     #565                // Field org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.md5:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      43: areturn
      44: getstatic     #566                // Field org/bouncycastle/asn1/x509/X509ObjectIdentifiers.id_SHA1:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      47: areturn
      48: getstatic     #561                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha224:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      51: areturn
      52: getstatic     #562                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha256:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      55: areturn
      56: getstatic     #563                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha384:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      59: areturn
      60: getstatic     #564                // Field org/bouncycastle/asn1/nist/NISTObjectIdentifiers.id_sha512:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      63: areturn
      64: new           #294                // class java/lang/IllegalArgumentException
      67: dup
      68: ldc           #13                 // String unknown HashAlgorithm
      70: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow

  static short getClientCertificateType(org.bouncycastle.crypto.tls.Certificate, org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #621                // Method org/bouncycastle/crypto/tls/Certificate.isEmpty:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: iconst_0
      11: invokevirtual #622                // Method org/bouncycastle/crypto/tls/Certificate.getCertificateAt:(I)Lorg/bouncycastle/asn1/x509/Certificate;
      14: astore_2
      15: aload_2
      16: invokevirtual #597                // Method org/bouncycastle/asn1/x509/Certificate.getSubjectPublicKeyInfo:()Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      19: astore_3
      20: aload_3
      21: invokestatic  #701                // Method org/bouncycastle/crypto/util/PublicKeyFactory.createKey:(Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      24: astore        4
      26: aload         4
      28: invokevirtual #619                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      31: ifeq          44
      34: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      37: dup
      38: bipush        80
      40: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      43: athrow
      44: aload         4
      46: instanceof    #321                // class org/bouncycastle/crypto/params/RSAKeyParameters
      49: ifeq          61
      52: aload_2
      53: sipush        128
      56: invokestatic  #689                // Method validateKeyUsage:(Lorg/bouncycastle/asn1/x509/Certificate;I)V
      59: iconst_1
      60: ireturn
      61: aload         4
      63: instanceof    #318                // class org/bouncycastle/crypto/params/DSAPublicKeyParameters
      66: ifeq          78
      69: aload_2
      70: sipush        128
      73: invokestatic  #689                // Method validateKeyUsage:(Lorg/bouncycastle/asn1/x509/Certificate;I)V
      76: iconst_2
      77: ireturn
      78: aload         4
      80: instanceof    #319                // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      83: ifeq          96
      86: aload_2
      87: sipush        128
      90: invokestatic  #689                // Method validateKeyUsage:(Lorg/bouncycastle/asn1/x509/Certificate;I)V
      93: bipush        64
      95: ireturn
      96: goto          101
      99: astore        4
     101: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     104: dup
     105: bipush        43
     107: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     110: athrow
    Exception table:
       from    to  target type
          20    60    99   Class java/lang/Exception
          61    77    99   Class java/lang/Exception
          78    95    99   Class java/lang/Exception

  static void trackHashAlgorithms(org.bouncycastle.crypto.tls.TlsHandshakeHash, java.util.Vector);
    Code:
       0: aload_1
       1: ifnull        43
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: invokevirtual #590                // Method java/util/Vector.size:()I
      11: if_icmpge     43
      14: aload_1
      15: iload_2
      16: invokevirtual #592                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      19: checkcast     #326                // class org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm
      22: astore_3
      23: aload_3
      24: invokevirtual #636                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      27: istore        4
      29: aload_0
      30: iload         4
      32: invokeinterface #713,  2          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.trackHashAlgorithm:(S)V
      37: iinc          2, 1
      40: goto          6
      43: return

  public static boolean hasSigningCapability(short);
    Code:
       0: iload_0
       1: lookupswitch  { // 3
                     1: 36
                     2: 36
                    64: 36
               default: 38
          }
      36: iconst_1
      37: ireturn
      38: iconst_0
      39: ireturn

  public static org.bouncycastle.crypto.tls.TlsSigner createTlsSigner(short);
    Code:
       0: iload_0
       1: lookupswitch  { // 3
                     1: 52
                     2: 36
                    64: 44
               default: 60
          }
      36: new           #328                // class org/bouncycastle/crypto/tls/TlsDSSSigner
      39: dup
      40: invokespecial #641                // Method org/bouncycastle/crypto/tls/TlsDSSSigner."<init>":()V
      43: areturn
      44: new           #329                // class org/bouncycastle/crypto/tls/TlsECDSASigner
      47: dup
      48: invokespecial #642                // Method org/bouncycastle/crypto/tls/TlsECDSASigner."<init>":()V
      51: areturn
      52: new           #333                // class org/bouncycastle/crypto/tls/TlsRSASigner
      55: dup
      56: invokespecial #645                // Method org/bouncycastle/crypto/tls/TlsRSASigner."<init>":()V
      59: areturn
      60: new           #294                // class java/lang/IllegalArgumentException
      63: dup
      64: ldc           #4                  // String \'clientCertificateType\' is not a type with signing capability
      66: invokespecial #582                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow

  private static byte[][] genConst();
    Code:
       0: bipush        10
       2: istore_0
       3: iload_0
       4: anewarray     #286                // class "[B"
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: iload_0
      12: if_icmpge     40
      15: iload_2
      16: iconst_1
      17: iadd
      18: newarray       byte
      20: astore_3
      21: aload_3
      22: bipush        65
      24: iload_2
      25: iadd
      26: i2b
      27: invokestatic  #702                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      30: aload_1
      31: iload_2
      32: aload_3
      33: aastore
      34: iinc          2, 1
      37: goto          10
      40: aload_1
      41: areturn

  private static java.util.Vector vectorOfOne(java.lang.Object);
    Code:
       0: new           #300                // class java/util/Vector
       3: dup
       4: iconst_1
       5: invokespecial #591                // Method java/util/Vector."<init>":(I)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #593                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      14: aload_1
      15: areturn

  public static int getCipherType(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: invokestatic  #649                // Method getEncryptionAlgorithm:(I)I
       4: tableswitch   { // 1 to 102
                     1: 432
                     2: 432
                     3: 430
                     4: 430
                     5: 430
                     6: 430
                     7: 430
                     8: 430
                     9: 430
                    10: 428
                    11: 428
                    12: 430
                    13: 430
                    14: 430
                    15: 428
                    16: 428
                    17: 428
                    18: 428
                    19: 428
                    20: 428
                    21: 434
                    22: 434
                    23: 434
                    24: 434
                    25: 434
                    26: 434
                    27: 434
                    28: 434
                    29: 434
                    30: 434
                    31: 434
                    32: 434
                    33: 434
                    34: 434
                    35: 434
                    36: 434
                    37: 434
                    38: 434
                    39: 434
                    40: 434
                    41: 434
                    42: 434
                    43: 434
                    44: 434
                    45: 434
                    46: 434
                    47: 434
                    48: 434
                    49: 434
                    50: 434
                    51: 434
                    52: 434
                    53: 434
                    54: 434
                    55: 434
                    56: 434
                    57: 434
                    58: 434
                    59: 434
                    60: 434
                    61: 434
                    62: 434
                    63: 434
                    64: 434
                    65: 434
                    66: 434
                    67: 434
                    68: 434
                    69: 434
                    70: 434
                    71: 434
                    72: 434
                    73: 434
                    74: 434
                    75: 434
                    76: 434
                    77: 434
                    78: 434
                    79: 434
                    80: 434
                    81: 434
                    82: 434
                    83: 434
                    84: 434
                    85: 434
                    86: 434
                    87: 434
                    88: 434
                    89: 434
                    90: 434
                    91: 434
                    92: 434
                    93: 434
                    94: 434
                    95: 434
                    96: 434
                    97: 434
                    98: 434
                    99: 434
                   100: 432
                   101: 432
                   102: 428
               default: 434
          }
     428: iconst_2
     429: ireturn
     430: iconst_1
     431: ireturn
     432: iconst_0
     433: ireturn
     434: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     437: dup
     438: bipush        80
     440: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     443: athrow

  public static int getEncryptionAlgorithm(int) throws java.io.IOException;
    Code:
       0: iload_0
       1: lookupswitch  { // 229
                     1: 1907
                     2: 1909
                     4: 1915
                     5: 1917
                    10: 1844
                    13: 1844
                    16: 1844
                    19: 1844
                    22: 1844
                    24: 1915
                    44: 1909
                    45: 1909
                    46: 1909
                    47: 1850
                    48: 1850
                    49: 1850
                    50: 1850
                    51: 1850
                    53: 1865
                    54: 1865
                    55: 1865
                    56: 1865
                    57: 1865
                    59: 1911
                    60: 1853
                    61: 1868
                    62: 1853
                    63: 1853
                    64: 1853
                    65: 1883
                    66: 1883
                    67: 1883
                    68: 1883
                    69: 1883
                   103: 1853
                   104: 1868
                   105: 1868
                   106: 1868
                   107: 1868
                   132: 1892
                   133: 1892
                   134: 1892
                   135: 1892
                   136: 1892
                   138: 1917
                   139: 1844
                   140: 1850
                   141: 1865
                   142: 1917
                   143: 1844
                   144: 1850
                   145: 1865
                   146: 1917
                   147: 1844
                   148: 1850
                   149: 1865
                   150: 1922
                   151: 1922
                   152: 1922
                   153: 1922
                   154: 1922
                   156: 1862
                   157: 1880
                   158: 1862
                   159: 1880
                   160: 1862
                   161: 1880
                   162: 1862
                   163: 1880
                   164: 1862
                   165: 1880
                   168: 1862
                   169: 1880
                   170: 1862
                   171: 1880
                   172: 1862
                   173: 1880
                   174: 1853
                   175: 1871
                   176: 1911
                   177: 1913
                   178: 1853
                   179: 1871
                   180: 1911
                   181: 1913
                   182: 1853
                   183: 1871
                   184: 1911
                   185: 1913
                   186: 1886
                   187: 1886
                   188: 1886
                   189: 1886
                   190: 1886
                   192: 1895
                   193: 1895
                   194: 1895
                   195: 1895
                   196: 1895
                 49153: 1909
                 49154: 1917
                 49155: 1844
                 49156: 1850
                 49157: 1865
                 49158: 1909
                 49159: 1917
                 49160: 1844
                 49161: 1850
                 49162: 1865
                 49163: 1909
                 49164: 1917
                 49165: 1844
                 49166: 1850
                 49167: 1865
                 49168: 1909
                 49169: 1917
                 49170: 1844
                 49171: 1850
                 49172: 1865
                 49174: 1917
                 49178: 1844
                 49179: 1844
                 49180: 1844
                 49181: 1850
                 49182: 1850
                 49183: 1850
                 49184: 1865
                 49185: 1865
                 49186: 1865
                 49187: 1853
                 49188: 1871
                 49189: 1853
                 49190: 1871
                 49191: 1853
                 49192: 1871
                 49193: 1853
                 49194: 1871
                 49195: 1862
                 49196: 1880
                 49197: 1862
                 49198: 1880
                 49199: 1862
                 49200: 1880
                 49201: 1862
                 49202: 1880
                 49203: 1917
                 49204: 1844
                 49205: 1850
                 49206: 1865
                 49207: 1853
                 49208: 1871
                 49209: 1909
                 49210: 1911
                 49211: 1913
                 49266: 1886
                 49267: 1898
                 49268: 1886
                 49269: 1898
                 49270: 1886
                 49271: 1898
                 49272: 1886
                 49273: 1898
                 49274: 1889
                 49275: 1901
                 49276: 1889
                 49277: 1901
                 49278: 1889
                 49279: 1901
                 49280: 1889
                 49281: 1901
                 49282: 1889
                 49283: 1901
                 49286: 1889
                 49287: 1901
                 49288: 1889
                 49289: 1901
                 49290: 1889
                 49291: 1901
                 49292: 1889
                 49293: 1901
                 49294: 1889
                 49295: 1901
                 49296: 1889
                 49297: 1901
                 49298: 1889
                 49299: 1901
                 49300: 1886
                 49301: 1898
                 49302: 1886
                 49303: 1898
                 49304: 1886
                 49305: 1898
                 49306: 1886
                 49307: 1898
                 49308: 1856
                 49309: 1874
                 49310: 1856
                 49311: 1874
                 49312: 1859
                 49313: 1877
                 49314: 1859
                 49315: 1877
                 49316: 1856
                 49317: 1874
                 49318: 1856
                 49319: 1874
                 49320: 1859
                 49321: 1877
                 49322: 1859
                 49323: 1877
                 52243: 1847
                 52244: 1847
                 52245: 1847
                 58384: 1904
                 58385: 1919
                 58386: 1904
                 58387: 1919
                 58388: 1904
                 58389: 1919
                 58390: 1904
                 58391: 1919
                 58392: 1904
                 58393: 1919
                 58394: 1904
                 58395: 1919
                 58396: 1904
                 58397: 1919
                 58398: 1904
                 58399: 1919
               default: 1925
          }
    1844: bipush        7
    1846: ireturn
    1847: bipush        102
    1849: ireturn
    1850: bipush        8
    1852: ireturn
    1853: bipush        8
    1855: ireturn
    1856: bipush        15
    1858: ireturn
    1859: bipush        16
    1861: ireturn
    1862: bipush        10
    1864: ireturn
    1865: bipush        9
    1867: ireturn
    1868: bipush        9
    1870: ireturn
    1871: bipush        9
    1873: ireturn
    1874: bipush        17
    1876: ireturn
    1877: bipush        18
    1879: ireturn
    1880: bipush        11
    1882: ireturn
    1883: bipush        12
    1885: ireturn
    1886: bipush        12
    1888: ireturn
    1889: bipush        19
    1891: ireturn
    1892: bipush        13
    1894: ireturn
    1895: bipush        13
    1897: ireturn
    1898: bipush        13
    1900: ireturn
    1901: bipush        20
    1903: ireturn
    1904: bipush        100
    1906: ireturn
    1907: iconst_0
    1908: ireturn
    1909: iconst_0
    1910: ireturn
    1911: iconst_0
    1912: ireturn
    1913: iconst_0
    1914: ireturn
    1915: iconst_2
    1916: ireturn
    1917: iconst_2
    1918: ireturn
    1919: bipush        101
    1921: ireturn
    1922: bipush        14
    1924: ireturn
    1925: new           #330                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1928: dup
    1929: bipush        80
    1931: invokespecial #643                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1934: athrow

  public static org.bouncycastle.crypto.tls.ProtocolVersion getMinimumVersion(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 108
                    59: 876
                    60: 876
                    61: 876
                    62: 876
                    63: 876
                    64: 876
                   103: 876
                   104: 876
                   105: 876
                   106: 876
                   107: 876
                   156: 876
                   157: 876
                   158: 876
                   159: 876
                   160: 876
                   161: 876
                   162: 876
                   163: 876
                   164: 876
                   165: 876
                   168: 876
                   169: 876
                   170: 876
                   171: 876
                   172: 876
                   173: 876
                   186: 876
                   187: 876
                   188: 876
                   189: 876
                   190: 876
                   191: 876
                   192: 876
                   193: 876
                   194: 876
                   195: 876
                   196: 876
                   197: 876
                 49187: 876
                 49188: 876
                 49189: 876
                 49190: 876
                 49191: 876
                 49192: 876
                 49193: 876
                 49194: 876
                 49195: 876
                 49196: 876
                 49197: 876
                 49198: 876
                 49199: 876
                 49200: 876
                 49201: 876
                 49202: 876
                 49266: 876
                 49267: 876
                 49268: 876
                 49269: 876
                 49270: 876
                 49271: 876
                 49272: 876
                 49273: 876
                 49274: 876
                 49275: 876
                 49276: 876
                 49277: 876
                 49278: 876
                 49279: 876
                 49280: 876
                 49281: 876
                 49282: 876
                 49283: 876
                 49284: 876
                 49285: 876
                 49286: 876
                 49287: 876
                 49288: 876
                 49289: 876
                 49290: 876
                 49291: 876
                 49292: 876
                 49293: 876
                 49294: 876
                 49295: 876
                 49296: 876
                 49297: 876
                 49298: 876
                 49299: 876
                 49308: 876
                 49309: 876
                 49310: 876
                 49311: 876
                 49312: 876
                 49313: 876
                 49314: 876
                 49315: 876
                 49316: 876
                 49317: 876
                 49318: 876
                 49319: 876
                 49320: 876
                 49321: 876
                 49322: 876
                 49323: 876
                 52243: 876
                 52244: 876
                 52245: 876
               default: 880
          }
     876: getstatic     #569                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
     879: areturn
     880: getstatic     #567                // Field org/bouncycastle/crypto/tls/ProtocolVersion.SSLv3:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
     883: areturn

  public static boolean isAEADCipherSuite(int) throws java.io.IOException;
    Code:
       0: iconst_2
       1: iload_0
       2: invokestatic  #648                // Method getCipherType:(I)I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isBlockCipherSuite(int) throws java.io.IOException;
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #648                // Method getCipherType:(I)I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isStreamCipherSuite(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: iload_0
       2: invokestatic  #648                // Method getCipherType:(I)I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isValidCipherSuiteForVersion(int, org.bouncycastle.crypto.tls.ProtocolVersion);
    Code:
       0: iload_0
       1: invokestatic  #693                // Method getMinimumVersion:(I)Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: aload_1
       5: invokevirtual #628                // Method org/bouncycastle/crypto/tls/ProtocolVersion.getEquivalentTLSVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       8: invokevirtual #630                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      11: ireturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #570                // Field EMPTY_BYTES:[B
       6: bipush        13
       8: invokestatic  #705                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      11: putstatic     #574                // Field EXT_signature_algorithms:Ljava/lang/Integer;
      14: iconst_4
      15: newarray       byte
      17: dup
      18: iconst_0
      19: bipush        67
      21: bastore
      22: dup
      23: iconst_1
      24: bipush        76
      26: bastore
      27: dup
      28: iconst_2
      29: bipush        78
      31: bastore
      32: dup
      33: iconst_3
      34: bipush        84
      36: bastore
      37: putstatic     #571                // Field SSL_CLIENT:[B
      40: iconst_4
      41: newarray       byte
      43: dup
      44: iconst_0
      45: bipush        83
      47: bastore
      48: dup
      49: iconst_1
      50: bipush        82
      52: bastore
      53: dup
      54: iconst_2
      55: bipush        86
      57: bastore
      58: dup
      59: iconst_3
      60: bipush        82
      62: bastore
      63: putstatic     #572                // Field SSL_SERVER:[B
      66: invokestatic  #647                // Method genConst:()[[B
      69: putstatic     #573                // Field SSL3_CONST:[[B
      72: return
}
