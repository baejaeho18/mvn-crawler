public abstract class org.bouncycastle.crypto.tls.AbstractTlsKeyExchange implements org.bouncycastle.crypto.tls.TlsKeyExchange {
  protected int keyExchange;

  protected java.util.Vector supportedSignatureAlgorithms;

  protected org.bouncycastle.crypto.tls.TlsContext context;

  protected org.bouncycastle.crypto.tls.AbstractTlsKeyExchange(int, java.util.Vector);
    Code:
       0: aload_0
       1: invokespecial #88                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #84                 // Field keyExchange:I
       9: aload_0
      10: aload_2
      11: putfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      14: return

  public void init(org.bouncycastle.crypto.tls.TlsContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
       5: aload_1
       6: invokeinterface #100,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getClientVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      11: astore_2
      12: aload_2
      13: invokestatic  #99                 // Method org/bouncycastle/crypto/tls/TlsUtils.isSignatureAlgorithmsExtensionAllowed:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      16: ifeq          183
      19: aload_0
      20: getfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      23: ifnonnull     217
      26: aload_0
      27: getfield      #84                 // Field keyExchange:I
      30: tableswitch   { // 1 to 24
                     1: 160
                     2: 173
                     3: 140
                     4: 173
                     5: 160
                     6: 173
                     7: 140
                     8: 173
                     9: 160
                    10: 173
                    11: 173
                    12: 173
                    13: 170
                    14: 170
                    15: 160
                    16: 150
                    17: 150
                    18: 160
                    19: 160
                    20: 173
                    21: 170
                    22: 140
                    23: 160
                    24: 170
               default: 173
          }
     140: aload_0
     141: invokestatic  #96                 // Method org/bouncycastle/crypto/tls/TlsUtils.getDefaultDSSSignatureAlgorithms:()Ljava/util/Vector;
     144: putfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
     147: goto          217
     150: aload_0
     151: invokestatic  #97                 // Method org/bouncycastle/crypto/tls/TlsUtils.getDefaultECDSASignatureAlgorithms:()Ljava/util/Vector;
     154: putfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
     157: goto          217
     160: aload_0
     161: invokestatic  #98                 // Method org/bouncycastle/crypto/tls/TlsUtils.getDefaultRSASignatureAlgorithms:()Ljava/util/Vector;
     164: putfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
     167: goto          217
     170: goto          217
     173: new           #43                 // class java/lang/IllegalStateException
     176: dup
     177: ldc           #2                  // String unsupported key exchange algorithm
     179: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     182: athrow
     183: aload_0
     184: getfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
     187: ifnull        217
     190: new           #43                 // class java/lang/IllegalStateException
     193: dup
     194: new           #45                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #1                  // String supported_signature_algorithms not allowed for
     203: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_2
     207: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     216: athrow
     217: return

  public void processServerCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #85                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
       4: ifnonnull     7
       7: return

  public void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #101,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsCredentials.getCertificate:()Lorg/bouncycastle/crypto/tls/Certificate;
       7: invokevirtual #94                 // Method processServerCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)V
      10: return

  public boolean requiresServerKeyExchange();
    Code:
       0: iconst_0
       1: ireturn

  public byte[] generateServerKeyExchange() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method requiresServerKeyExchange:()Z
       4: ifeq          17
       7: new           #49                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #95                 // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: aconst_null
      18: areturn

  public void skipServerKeyExchange() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method requiresServerKeyExchange:()Z
       4: ifeq          17
       7: new           #49                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        10
      13: invokespecial #95                 // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public void processServerKeyExchange(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method requiresServerKeyExchange:()Z
       4: ifne          17
       7: new           #49                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        10
      13: invokespecial #95                 // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  public void skipClientCredentials() throws java.io.IOException;
    Code:
       0: return

  public void processClientCertificate(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: return

  public void processClientKeyExchange(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #49                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
       3: dup
       4: bipush        80
       6: invokespecial #95                 // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
       9: athrow
}
