public class org.bouncycastle.crypto.tls.TlsRSASigner extends org.bouncycastle.crypto.tls.AbstractTlsSigner {
  public org.bouncycastle.crypto.tls.TlsRSASigner();
    Code:
       0: aload_0
       1: invokespecial #105                // Method org/bouncycastle/crypto/tls/AbstractTlsSigner."<init>":()V
       4: return

  public byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: new           #51                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       7: dup
       8: aload_2
       9: aload_0
      10: getfield      #96                 // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
      13: invokeinterface #118,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecureRandom:()Ljava/security/SecureRandom;
      18: invokespecial #102                // Method org/bouncycastle/crypto/params/ParametersWithRandom."<init>":(Lorg/bouncycastle/crypto/CipherParameters;Ljava/security/SecureRandom;)V
      21: invokevirtual #110                // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
      24: astore        4
      26: aload         4
      28: aload_3
      29: iconst_0
      30: aload_3
      31: arraylength
      32: invokeinterface #116,  4          // InterfaceMethod org/bouncycastle/crypto/Signer.update:([BII)V
      37: aload         4
      39: invokeinterface #114,  1          // InterfaceMethod org/bouncycastle/crypto/Signer.generateSignature:()[B
      44: areturn

  public boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.bouncycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_0
       4: aload_3
       5: invokevirtual #110                // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
       8: astore        5
      10: aload         5
      12: aload         4
      14: iconst_0
      15: aload         4
      17: arraylength
      18: invokeinterface #116,  4          // InterfaceMethod org/bouncycastle/crypto/Signer.update:([BII)V
      23: aload         5
      25: aload_2
      26: invokeinterface #115,  2          // InterfaceMethod org/bouncycastle/crypto/Signer.verifySignature:([B)Z
      31: ireturn

  public org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_1
       4: new           #51                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       7: dup
       8: aload_2
       9: aload_0
      10: getfield      #96                 // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
      13: invokeinterface #118,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecureRandom:()Ljava/security/SecureRandom;
      18: invokespecial #102                // Method org/bouncycastle/crypto/params/ParametersWithRandom."<init>":(Lorg/bouncycastle/crypto/CipherParameters;Ljava/security/SecureRandom;)V
      21: invokevirtual #110                // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
      24: areturn

  public org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: aload_2
       5: invokevirtual #110                // Method makeSigner:(Lorg/bouncycastle/crypto/tls/SignatureAndHashAlgorithm;ZZLorg/bouncycastle/crypto/CipherParameters;)Lorg/bouncycastle/crypto/Signer;
       8: areturn

  public boolean isValidPublicKey(org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_1
       1: instanceof    #52                 // class org/bouncycastle/crypto/params/RSAKeyParameters
       4: ifeq          18
       7: aload_1
       8: invokevirtual #101                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm, boolean, boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: aload_0
      10: getfield      #96                 // Field context:Lorg/bouncycastle/crypto/tls/TlsContext;
      13: invokestatic  #113                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      16: if_icmpeq     27
      19: new           #44                 // class java/lang/IllegalStateException
      22: dup
      23: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":()V
      26: athrow
      27: aload_1
      28: ifnull        47
      31: aload_1
      32: invokevirtual #108                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getSignature:()S
      35: iconst_1
      36: if_icmpeq     47
      39: new           #44                 // class java/lang/IllegalStateException
      42: dup
      43: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":()V
      46: athrow
      47: iload_2
      48: ifeq          63
      51: new           #47                 // class org/bouncycastle/crypto/digests/NullDigest
      54: dup
      55: invokespecial #98                 // Method org/bouncycastle/crypto/digests/NullDigest."<init>":()V
      58: astore        5
      60: goto          88
      63: aload_1
      64: ifnonnull     79
      67: new           #56                 // class org/bouncycastle/crypto/tls/CombinedHash
      70: dup
      71: invokespecial #106                // Method org/bouncycastle/crypto/tls/CombinedHash."<init>":()V
      74: astore        5
      76: goto          88
      79: aload_1
      80: invokevirtual #107                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
      83: invokestatic  #112                // Method org/bouncycastle/crypto/tls/TlsUtils.createHash:(S)Lorg/bouncycastle/crypto/Digest;
      86: astore        5
      88: aload_1
      89: ifnull        113
      92: new           #54                 // class org/bouncycastle/crypto/signers/RSADigestSigner
      95: dup
      96: aload         5
      98: aload_1
      99: invokevirtual #107                // Method org/bouncycastle/crypto/tls/SignatureAndHashAlgorithm.getHash:()S
     102: invokestatic  #111                // Method org/bouncycastle/crypto/tls/TlsUtils.getOIDForHashAlgorithm:(S)Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
     105: invokespecial #104                // Method org/bouncycastle/crypto/signers/RSADigestSigner."<init>":(Lorg/bouncycastle/crypto/Digest;Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)V
     108: astore        6
     110: goto          128
     113: new           #53                 // class org/bouncycastle/crypto/signers/GenericSigner
     116: dup
     117: aload_0
     118: invokevirtual #109                // Method createRSAImpl:()Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
     121: aload         5
     123: invokespecial #103                // Method org/bouncycastle/crypto/signers/GenericSigner."<init>":(Lorg/bouncycastle/crypto/AsymmetricBlockCipher;Lorg/bouncycastle/crypto/Digest;)V
     126: astore        6
     128: aload         6
     130: iload_3
     131: aload         4
     133: invokeinterface #117,  3          // InterfaceMethod org/bouncycastle/crypto/Signer.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     138: aload         6
     140: areturn

  protected org.bouncycastle.crypto.AsymmetricBlockCipher createRSAImpl();
    Code:
       0: new           #48                 // class org/bouncycastle/crypto/encodings/PKCS1Encoding
       3: dup
       4: new           #49                 // class org/bouncycastle/crypto/engines/RSABlindedEngine
       7: dup
       8: invokespecial #100                // Method org/bouncycastle/crypto/engines/RSABlindedEngine."<init>":()V
      11: invokespecial #99                 // Method org/bouncycastle/crypto/encodings/PKCS1Encoding."<init>":(Lorg/bouncycastle/crypto/AsymmetricBlockCipher;)V
      14: areturn
}
