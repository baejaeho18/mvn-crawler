public class org.bouncycastle.crypto.tls.SSL3Mac implements org.bouncycastle.crypto.Mac {
  private static final byte IPAD_BYTE;

  private static final byte OPAD_BYTE;

  static final byte[] IPAD;

  static final byte[] OPAD;

  private org.bouncycastle.crypto.Digest digest;

  private byte[] secret;

  private int padLength;

  public org.bouncycastle.crypto.tls.SSL3Mac(org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       9: aload_1
      10: invokeinterface #92,  1           // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      15: bipush        20
      17: if_icmpne     29
      20: aload_0
      21: bipush        40
      23: putfield      #78                 // Field padLength:I
      26: goto          35
      29: aload_0
      30: bipush        48
      32: putfield      #78                 // Field padLength:I
      35: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      11: invokeinterface #97,  1           // InterfaceMethod org/bouncycastle/crypto/Digest.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /SSL3MAC
      21: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.bouncycastle.crypto.Digest getUnderlyingDigest();
    Code:
       0: aload_0
       1: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: areturn

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #51                 // class org/bouncycastle/crypto/params/KeyParameter
       5: invokevirtual #87                 // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
       8: invokestatic  #90                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      11: putfield      #81                 // Field secret:[B
      14: aload_0
      15: invokevirtual #88                 // Method reset:()V
      18: return

  public int getMacSize();
    Code:
       0: aload_0
       1: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #92,  1           // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
       9: ireturn

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: iload_1
       5: invokeinterface #94,  2           // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      10: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #96,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      12: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #92,  1           // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
       9: newarray       byte
      11: astore_3
      12: aload_0
      13: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      16: aload_3
      17: iconst_0
      18: invokeinterface #95,  3           // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      23: pop
      24: aload_0
      25: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      28: aload_0
      29: getfield      #81                 // Field secret:[B
      32: iconst_0
      33: aload_0
      34: getfield      #81                 // Field secret:[B
      37: arraylength
      38: invokeinterface #96,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      43: aload_0
      44: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      47: getstatic     #80                 // Field OPAD:[B
      50: iconst_0
      51: aload_0
      52: getfield      #78                 // Field padLength:I
      55: invokeinterface #96,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      60: aload_0
      61: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      64: aload_3
      65: iconst_0
      66: aload_3
      67: arraylength
      68: invokeinterface #96,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      73: aload_0
      74: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      77: aload_1
      78: iload_2
      79: invokeinterface #95,  3           // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      84: istore        4
      86: aload_0
      87: invokevirtual #88                 // Method reset:()V
      90: iload         4
      92: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #93,  1           // InterfaceMethod org/bouncycastle/crypto/Digest.reset:()V
       9: aload_0
      10: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      13: aload_0
      14: getfield      #81                 // Field secret:[B
      17: iconst_0
      18: aload_0
      19: getfield      #81                 // Field secret:[B
      22: arraylength
      23: invokeinterface #96,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      28: aload_0
      29: getfield      #82                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      32: getstatic     #79                 // Field IPAD:[B
      35: iconst_0
      36: aload_0
      37: getfield      #78                 // Field padLength:I
      40: invokeinterface #96,  4           // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      45: return

  private static byte[] genPad(byte, int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: iload_0
       6: invokestatic  #91                 // Method org/bouncycastle/util/Arrays.fill:([BB)V
       9: aload_2
      10: areturn

  static {};
    Code:
       0: bipush        54
       2: bipush        48
       4: invokestatic  #89                 // Method genPad:(BI)[B
       7: putstatic     #79                 // Field IPAD:[B
      10: bipush        92
      12: bipush        48
      14: invokestatic  #89                 // Method genPad:(BI)[B
      17: putstatic     #80                 // Field OPAD:[B
      20: return
}
