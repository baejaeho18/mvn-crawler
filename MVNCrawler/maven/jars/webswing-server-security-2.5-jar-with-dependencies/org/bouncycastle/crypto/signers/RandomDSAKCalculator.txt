class org.bouncycastle.crypto.signers.RandomDSAKCalculator implements org.bouncycastle.crypto.signers.DSAKCalculator {
  private static final java.math.BigInteger ZERO;

  private java.math.BigInteger q;

  private java.security.SecureRandom random;

  org.bouncycastle.crypto.signers.RandomDSAKCalculator();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: return

  public boolean isDeterministic();
    Code:
       0: iconst_0
       1: ireturn

  public void init(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field q:Ljava/math/BigInteger;
       5: aload_0
       6: aload_2
       7: putfield      #50                 // Field random:Ljava/security/SecureRandom;
      10: return

  public void init(java.math.BigInteger, java.math.BigInteger, byte[]);
    Code:
       0: new           #23                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #1                  // String Operation not supported
       6: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.math.BigInteger nextK();
    Code:
       0: aload_0
       1: getfield      #49                 // Field q:Ljava/math/BigInteger;
       4: invokevirtual #53                 // Method java/math/BigInteger.bitLength:()I
       7: istore_1
       8: new           #25                 // class java/math/BigInteger
      11: dup
      12: iload_1
      13: aload_0
      14: getfield      #50                 // Field random:Ljava/security/SecureRandom;
      17: invokespecial #57                 // Method java/math/BigInteger."<init>":(ILjava/util/Random;)V
      20: astore_2
      21: aload_2
      22: getstatic     #48                 // Field ZERO:Ljava/math/BigInteger;
      25: invokevirtual #54                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      28: ifne          8
      31: aload_2
      32: aload_0
      33: getfield      #49                 // Field q:Ljava/math/BigInteger;
      36: invokevirtual #56                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      39: ifge          8
      42: aload_2
      43: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #55                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #48                 // Field ZERO:Ljava/math/BigInteger;
       7: return
}
