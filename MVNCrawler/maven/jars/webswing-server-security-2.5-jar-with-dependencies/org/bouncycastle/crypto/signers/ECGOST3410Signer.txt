public class org.bouncycastle.crypto.signers.ECGOST3410Signer implements org.bouncycastle.crypto.DSA {
  org.bouncycastle.crypto.params.ECKeyParameters key;

  java.security.SecureRandom random;

  public org.bouncycastle.crypto.signers.ECGOST3410Signer();
    Code:
       0: aload_0
       1: invokespecial #117                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: iload_1
       1: ifeq          60
       4: aload_2
       5: instanceof    #57                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       8: ifeq          38
      11: aload_2
      12: checkcast     #57                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #134                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      21: putfield      #113                // Field random:Ljava/security/SecureRandom;
      24: aload_0
      25: aload_3
      26: invokevirtual #135                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      29: checkcast     #55                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      32: putfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      35: goto          68
      38: aload_0
      39: new           #51                 // class java/security/SecureRandom
      42: dup
      43: invokespecial #128                // Method java/security/SecureRandom."<init>":()V
      46: putfield      #113                // Field random:Ljava/security/SecureRandom;
      49: aload_0
      50: aload_2
      51: checkcast     #55                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      54: putfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      57: goto          68
      60: aload_0
      61: aload_2
      62: checkcast     #56                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      65: putfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      68: return

  public java.math.BigInteger[] generateSignature(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: newarray       byte
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_2
       9: arraylength
      10: if_icmpeq     30
      13: aload_2
      14: iload_3
      15: aload_1
      16: aload_2
      17: arraylength
      18: iconst_1
      19: isub
      20: iload_3
      21: isub
      22: baload
      23: bastore
      24: iinc          3, 1
      27: goto          7
      30: new           #50                 // class java/math/BigInteger
      33: dup
      34: iconst_1
      35: aload_2
      36: invokespecial #119                // Method java/math/BigInteger."<init>":(I[B)V
      39: astore_3
      40: aload_0
      41: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      44: invokevirtual #131                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      47: astore        4
      49: aload         4
      51: invokevirtual #129                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      54: astore        5
      56: aload_0
      57: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      60: checkcast     #55                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      63: invokevirtual #132                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      66: astore        6
      68: aload_0
      69: invokevirtual #136                // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      72: astore        9
      74: new           #50                 // class java/math/BigInteger
      77: dup
      78: aload         5
      80: invokevirtual #118                // Method java/math/BigInteger.bitLength:()I
      83: aload_0
      84: getfield      #113                // Field random:Ljava/security/SecureRandom;
      87: invokespecial #122                // Method java/math/BigInteger."<init>":(ILjava/util/Random;)V
      90: astore        10
      92: aload         10
      94: getstatic     #116                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      97: invokevirtual #120                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     100: ifne          74
     103: aload         9
     105: aload         4
     107: invokevirtual #130                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     110: aload         10
     112: invokeinterface #143,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     117: invokevirtual #141                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     120: astore        11
     122: aload         11
     124: invokevirtual #140                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     127: invokevirtual #138                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     130: aload         5
     132: invokevirtual #124                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     135: astore        7
     137: aload         7
     139: getstatic     #116                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     142: invokevirtual #120                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     145: ifne          74
     148: aload         10
     150: aload_3
     151: invokevirtual #126                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     154: aload         6
     156: aload         7
     158: invokevirtual #126                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     161: invokevirtual #123                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     164: aload         5
     166: invokevirtual #124                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     169: astore        8
     171: aload         8
     173: getstatic     #116                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     176: invokevirtual #120                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     179: ifne          74
     182: iconst_2
     183: anewarray     #50                 // class java/math/BigInteger
     186: dup
     187: iconst_0
     188: aload         7
     190: aastore
     191: dup
     192: iconst_1
     193: aload         8
     195: aastore
     196: areturn

  public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: arraylength
       2: newarray       byte
       4: astore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: aload         4
      13: arraylength
      14: if_icmpeq     38
      17: aload         4
      19: iload         5
      21: aload_1
      22: aload         4
      24: arraylength
      25: iconst_1
      26: isub
      27: iload         5
      29: isub
      30: baload
      31: bastore
      32: iinc          5, 1
      35: goto          9
      38: new           #50                 // class java/math/BigInteger
      41: dup
      42: iconst_1
      43: aload         4
      45: invokespecial #119                // Method java/math/BigInteger."<init>":(I[B)V
      48: astore        5
      50: aload_0
      51: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      54: invokevirtual #131                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      57: invokevirtual #129                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      60: astore        6
      62: aload_2
      63: getstatic     #115                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      66: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      69: iflt          81
      72: aload_2
      73: aload         6
      75: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      78: iflt          83
      81: iconst_0
      82: ireturn
      83: aload_3
      84: getstatic     #115                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      87: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      90: iflt          102
      93: aload_3
      94: aload         6
      96: invokevirtual #121                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      99: iflt          104
     102: iconst_0
     103: ireturn
     104: aload         5
     106: aload         6
     108: invokevirtual #125                // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     111: astore        7
     113: aload_3
     114: aload         7
     116: invokevirtual #126                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     119: aload         6
     121: invokevirtual #124                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     124: astore        8
     126: aload         6
     128: aload_2
     129: invokevirtual #127                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     132: aload         7
     134: invokevirtual #126                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     137: aload         6
     139: invokevirtual #124                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     142: astore        9
     144: aload_0
     145: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
     148: invokevirtual #131                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
     151: invokevirtual #130                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     154: astore        10
     156: aload_0
     157: getfield      #114                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
     160: checkcast     #56                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
     163: invokevirtual #133                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     166: astore        11
     168: aload         10
     170: aload         8
     172: aload         11
     174: aload         9
     176: invokestatic  #137                // Method org/bouncycastle/math/ec/ECAlgorithms.sumOfTwoMultiplies:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     179: invokevirtual #141                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     182: astore        12
     184: aload         12
     186: invokevirtual #139                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     189: ifeq          194
     192: iconst_0
     193: ireturn
     194: aload         12
     196: invokevirtual #140                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     199: invokevirtual #138                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     202: aload         6
     204: invokevirtual #124                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     207: astore        13
     209: aload         13
     211: aload_2
     212: invokevirtual #120                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     215: ireturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #64                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #142                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn
}
