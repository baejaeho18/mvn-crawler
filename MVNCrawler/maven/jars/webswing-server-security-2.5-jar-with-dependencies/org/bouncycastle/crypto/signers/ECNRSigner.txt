public class org.bouncycastle.crypto.signers.ECNRSigner implements org.bouncycastle.crypto.DSA {
  private boolean forSigning;

  private org.bouncycastle.crypto.params.ECKeyParameters key;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.signers.ECNRSigner();
    Code:
       0: aload_0
       1: invokespecial #137                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #131                // Field forSigning:Z
       5: iload_1
       6: ifeq          65
       9: aload_2
      10: instanceof    #72                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      13: ifeq          43
      16: aload_2
      17: checkcast     #72                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokevirtual #160                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      26: putfield      #132                // Field random:Ljava/security/SecureRandom;
      29: aload_0
      30: aload_3
      31: invokevirtual #161                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      34: checkcast     #70                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      37: putfield      #133                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      40: goto          73
      43: aload_0
      44: new           #63                 // class java/security/SecureRandom
      47: dup
      48: invokespecial #146                // Method java/security/SecureRandom."<init>":()V
      51: putfield      #132                // Field random:Ljava/security/SecureRandom;
      54: aload_0
      55: aload_2
      56: checkcast     #70                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      59: putfield      #133                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      62: goto          73
      65: aload_0
      66: aload_2
      67: checkcast     #71                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      70: putfield      #133                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      73: return

  public java.math.BigInteger[] generateSignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #131                // Field forSigning:Z
       4: ifne          17
       7: new           #60                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String not initialised for signing
      13: invokespecial #136                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #133                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      21: checkcast     #70                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      24: invokevirtual #157                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      27: invokevirtual #153                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      30: astore_2
      31: aload_2
      32: invokevirtual #138                // Method java/math/BigInteger.bitLength:()I
      35: istore_3
      36: new           #62                 // class java/math/BigInteger
      39: dup
      40: iconst_1
      41: aload_1
      42: invokespecial #139                // Method java/math/BigInteger."<init>":(I[B)V
      45: astore        4
      47: aload         4
      49: invokevirtual #138                // Method java/math/BigInteger.bitLength:()I
      52: istore        5
      54: aload_0
      55: getfield      #133                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      58: checkcast     #70                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      61: astore        6
      63: iload         5
      65: iload_3
      66: if_icmple     79
      69: new           #66                 // class org/bouncycastle/crypto/DataLengthException
      72: dup
      73: ldc           #1                  // String input too large for ECNR key.
      75: invokespecial #149                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aconst_null
      80: astore        7
      82: aconst_null
      83: astore        8
      85: new           #67                 // class org/bouncycastle/crypto/generators/ECKeyPairGenerator
      88: dup
      89: invokespecial #150                // Method org/bouncycastle/crypto/generators/ECKeyPairGenerator."<init>":()V
      92: astore        10
      94: aload         10
      96: new           #69                 // class org/bouncycastle/crypto/params/ECKeyGenerationParameters
      99: dup
     100: aload         6
     102: invokevirtual #157                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
     105: aload_0
     106: getfield      #132                // Field random:Ljava/security/SecureRandom;
     109: invokespecial #155                // Method org/bouncycastle/crypto/params/ECKeyGenerationParameters."<init>":(Lorg/bouncycastle/crypto/params/ECDomainParameters;Ljava/security/SecureRandom;)V
     112: invokevirtual #152                // Method org/bouncycastle/crypto/generators/ECKeyPairGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
     115: aload         10
     117: invokevirtual #151                // Method org/bouncycastle/crypto/generators/ECKeyPairGenerator.generateKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
     120: astore        9
     122: aload         9
     124: invokevirtual #148                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPublic:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
     127: checkcast     #71                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
     130: astore        11
     132: aload         11
     134: invokevirtual #159                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     137: invokevirtual #165                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     140: invokevirtual #163                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     143: astore        12
     145: aload         12
     147: aload         4
     149: invokevirtual #142                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     152: aload_2
     153: invokevirtual #143                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     156: astore        7
     158: aload         7
     160: getstatic     #135                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     163: invokevirtual #140                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     166: ifne          85
     169: aload         6
     171: invokevirtual #156                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
     174: astore        10
     176: aload         9
     178: invokevirtual #147                // Method org/bouncycastle/crypto/AsymmetricCipherKeyPair.getPrivate:()Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
     181: checkcast     #70                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
     184: invokevirtual #156                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
     187: astore        11
     189: aload         11
     191: aload         7
     193: aload         10
     195: invokevirtual #144                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     198: invokevirtual #145                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     201: aload_2
     202: invokevirtual #143                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     205: astore        8
     207: iconst_2
     208: anewarray     #62                 // class java/math/BigInteger
     211: astore        12
     213: aload         12
     215: iconst_0
     216: aload         7
     218: aastore
     219: aload         12
     221: iconst_1
     222: aload         8
     224: aastore
     225: aload         12
     227: areturn

  public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #131                // Field forSigning:Z
       4: ifeq          17
       7: new           #60                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String not initialised for verifying
      13: invokespecial #136                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #133                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      21: checkcast     #71                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      24: astore        4
      26: aload         4
      28: invokevirtual #158                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      31: invokevirtual #153                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      34: astore        5
      36: aload         5
      38: invokevirtual #138                // Method java/math/BigInteger.bitLength:()I
      41: istore        6
      43: new           #62                 // class java/math/BigInteger
      46: dup
      47: iconst_1
      48: aload_1
      49: invokespecial #139                // Method java/math/BigInteger."<init>":(I[B)V
      52: astore        7
      54: aload         7
      56: invokevirtual #138                // Method java/math/BigInteger.bitLength:()I
      59: istore        8
      61: iload         8
      63: iload         6
      65: if_icmple     78
      68: new           #66                 // class org/bouncycastle/crypto/DataLengthException
      71: dup
      72: ldc           #1                  // String input too large for ECNR key.
      74: invokespecial #149                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_2
      79: getstatic     #134                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      82: invokevirtual #141                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      85: iflt          97
      88: aload_2
      89: aload         5
      91: invokevirtual #141                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      94: iflt          99
      97: iconst_0
      98: ireturn
      99: aload_3
     100: getstatic     #135                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
     103: invokevirtual #141                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     106: iflt          118
     109: aload_3
     110: aload         5
     112: invokevirtual #141                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     115: iflt          120
     118: iconst_0
     119: ireturn
     120: aload         4
     122: invokevirtual #158                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
     125: invokevirtual #154                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     128: astore        9
     130: aload         4
     132: invokevirtual #159                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     135: astore        10
     137: aload         9
     139: aload_3
     140: aload         10
     142: aload_2
     143: invokestatic  #162                // Method org/bouncycastle/math/ec/ECAlgorithms.sumOfTwoMultiplies:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     146: invokevirtual #166                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     149: astore        11
     151: aload         11
     153: invokevirtual #164                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     156: ifeq          161
     159: iconst_0
     160: ireturn
     161: aload         11
     163: invokevirtual #165                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     166: invokevirtual #163                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     169: astore        12
     171: aload_2
     172: aload         12
     174: invokevirtual #145                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     177: aload         5
     179: invokevirtual #143                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     182: astore        13
     184: aload         13
     186: aload         7
     188: invokevirtual #140                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     191: ireturn
}
