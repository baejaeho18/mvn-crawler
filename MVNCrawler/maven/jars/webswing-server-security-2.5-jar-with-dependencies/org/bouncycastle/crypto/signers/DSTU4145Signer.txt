public class org.bouncycastle.crypto.signers.DSTU4145Signer implements org.bouncycastle.crypto.DSA {
  private static final java.math.BigInteger ONE;

  private org.bouncycastle.crypto.params.ECKeyParameters key;

  private java.security.SecureRandom random;

  public org.bouncycastle.crypto.signers.DSTU4145Signer();
    Code:
       0: aload_0
       1: invokespecial #145                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: iload_1
       1: ifeq          54
       4: aload_2
       5: instanceof    #68                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       8: ifeq          32
      11: aload_2
      12: checkcast     #68                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #163                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      21: putfield      #143                // Field random:Ljava/security/SecureRandom;
      24: aload_3
      25: invokevirtual #164                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      28: astore_2
      29: goto          43
      32: aload_0
      33: new           #62                 // class java/security/SecureRandom
      36: dup
      37: invokespecial #156                // Method java/security/SecureRandom."<init>":()V
      40: putfield      #143                // Field random:Ljava/security/SecureRandom;
      43: aload_0
      44: aload_2
      45: checkcast     #66                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      48: putfield      #144                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      51: goto          62
      54: aload_0
      55: aload_2
      56: checkcast     #67                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      59: putfield      #144                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      62: return

  public java.math.BigInteger[] generateSignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #144                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
       4: invokevirtual #160                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       7: astore_2
       8: aload_2
       9: invokevirtual #158                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      12: astore_3
      13: aload_3
      14: aload_1
      15: invokestatic  #167                // Method hash2FieldElement:(Lorg/bouncycastle/math/ec/ECCurve;[B)Lorg/bouncycastle/math/ec/ECFieldElement;
      18: astore        4
      20: aload         4
      22: invokevirtual #173                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      25: ifeq          37
      28: aload_3
      29: getstatic     #142                // Field ONE:Ljava/math/BigInteger;
      32: invokevirtual #172                // Method org/bouncycastle/math/ec/ECCurve.fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      35: astore        4
      37: aload_2
      38: invokevirtual #157                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      41: astore        5
      43: aload_0
      44: getfield      #144                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      47: checkcast     #66                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      50: invokevirtual #161                // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      53: astore        11
      55: aload_0
      56: invokevirtual #165                // Method createBasePointMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      59: astore        12
      61: aload         5
      63: aload_0
      64: getfield      #143                // Field random:Ljava/security/SecureRandom;
      67: invokestatic  #168                // Method generateRandomInteger:(Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      70: astore        6
      72: aload         12
      74: aload_2
      75: invokevirtual #159                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      78: aload         6
      80: invokeinterface #181,  3          // InterfaceMethod org/bouncycastle/math/ec/ECMultiplier.multiply:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      85: invokevirtual #178                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      88: invokevirtual #177                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      91: astore        9
      93: aload         9
      95: invokevirtual #173                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      98: ifne          61
     101: aload         4
     103: aload         9
     105: invokevirtual #175                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
     108: astore        10
     110: aload         5
     112: aload         10
     114: invokestatic  #169                // Method fieldElement2Integer:(Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECFieldElement;)Ljava/math/BigInteger;
     117: astore        7
     119: aload         7
     121: invokevirtual #147                // Method java/math/BigInteger.signum:()I
     124: ifeq          61
     127: aload         7
     129: aload         11
     131: invokevirtual #155                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     134: aload         6
     136: invokevirtual #153                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     139: aload         5
     141: invokevirtual #154                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     144: astore        8
     146: aload         8
     148: invokevirtual #147                // Method java/math/BigInteger.signum:()I
     151: ifeq          61
     154: iconst_2
     155: anewarray     #61                 // class java/math/BigInteger
     158: dup
     159: iconst_0
     160: aload         7
     162: aastore
     163: dup
     164: iconst_1
     165: aload         8
     167: aastore
     168: areturn

  public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_2
       1: invokevirtual #147                // Method java/math/BigInteger.signum:()I
       4: ifle          14
       7: aload_3
       8: invokevirtual #147                // Method java/math/BigInteger.signum:()I
      11: ifgt          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #144                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      20: invokevirtual #160                // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      23: astore        4
      25: aload         4
      27: invokevirtual #157                // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      30: astore        5
      32: aload_2
      33: aload         5
      35: invokevirtual #151                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      38: ifge          50
      41: aload_3
      42: aload         5
      44: invokevirtual #151                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      47: iflt          52
      50: iconst_0
      51: ireturn
      52: aload         4
      54: invokevirtual #158                // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      57: astore        6
      59: aload         6
      61: aload_1
      62: invokestatic  #167                // Method hash2FieldElement:(Lorg/bouncycastle/math/ec/ECCurve;[B)Lorg/bouncycastle/math/ec/ECFieldElement;
      65: astore        7
      67: aload         7
      69: invokevirtual #173                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      72: ifeq          85
      75: aload         6
      77: getstatic     #142                // Field ONE:Ljava/math/BigInteger;
      80: invokevirtual #172                // Method org/bouncycastle/math/ec/ECCurve.fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      83: astore        7
      85: aload         4
      87: invokevirtual #159                // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      90: aload_3
      91: aload_0
      92: getfield      #144                // Field key:Lorg/bouncycastle/crypto/params/ECKeyParameters;
      95: checkcast     #67                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
      98: invokevirtual #162                // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
     101: aload_2
     102: invokestatic  #170                // Method org/bouncycastle/math/ec/ECAlgorithms.sumOfTwoMultiplies:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     105: invokevirtual #178                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
     108: astore        8
     110: aload         8
     112: invokevirtual #176                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     115: ifeq          120
     118: iconst_0
     119: ireturn
     120: aload         7
     122: aload         8
     124: invokevirtual #177                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     127: invokevirtual #175                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
     130: astore        9
     132: aload         5
     134: aload         9
     136: invokestatic  #169                // Method fieldElement2Integer:(Ljava/math/BigInteger;Lorg/bouncycastle/math/ec/ECFieldElement;)Ljava/math/BigInteger;
     139: aload_2
     140: invokevirtual #151                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     143: ifne          150
     146: iconst_1
     147: goto          151
     150: iconst_0
     151: ireturn

  protected org.bouncycastle.math.ec.ECMultiplier createBasePointMultiplier();
    Code:
       0: new           #75                 // class org/bouncycastle/math/ec/FixedPointCombMultiplier
       3: dup
       4: invokespecial #179                // Method org/bouncycastle/math/ec/FixedPointCombMultiplier."<init>":()V
       7: areturn

  private static java.math.BigInteger generateRandomInteger(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: new           #61                 // class java/math/BigInteger
       3: dup
       4: aload_0
       5: invokevirtual #146                // Method java/math/BigInteger.bitLength:()I
       8: iconst_1
       9: isub
      10: aload_1
      11: invokespecial #152                // Method java/math/BigInteger."<init>":(ILjava/util/Random;)V
      14: areturn

  private static org.bouncycastle.math.ec.ECFieldElement hash2FieldElement(org.bouncycastle.math.ec.ECCurve, byte[]);
    Code:
       0: aload_1
       1: invokestatic  #180                // Method org/bouncycastle/util/Arrays.reverse:([B)[B
       4: astore_2
       5: aload_0
       6: new           #61                 // class java/math/BigInteger
       9: dup
      10: iconst_1
      11: aload_2
      12: invokespecial #148                // Method java/math/BigInteger."<init>":(I[B)V
      15: aload_0
      16: invokevirtual #171                // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      19: invokestatic  #166                // Method truncate:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
      22: invokevirtual #172                // Method org/bouncycastle/math/ec/ECCurve.fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      25: areturn

  private static java.math.BigInteger fieldElement2Integer(java.math.BigInteger, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_1
       1: invokevirtual #174                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
       4: aload_0
       5: invokevirtual #146                // Method java/math/BigInteger.bitLength:()I
       8: iconst_1
       9: isub
      10: invokestatic  #166                // Method truncate:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
      13: areturn

  private static java.math.BigInteger truncate(java.math.BigInteger, int);
    Code:
       0: aload_0
       1: invokevirtual #146                // Method java/math/BigInteger.bitLength:()I
       4: iload_1
       5: if_icmple     20
       8: aload_0
       9: getstatic     #142                // Field ONE:Ljava/math/BigInteger;
      12: iload_1
      13: invokevirtual #149                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      16: invokevirtual #154                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: astore_0
      20: aload_0
      21: areturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #150                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #142                // Field ONE:Ljava/math/BigInteger;
       7: return
}
