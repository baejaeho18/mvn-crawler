public class org.bouncycastle.crypto.agreement.srp.SRP6Client {
  protected java.math.BigInteger N;

  protected java.math.BigInteger g;

  protected java.math.BigInteger a;

  protected java.math.BigInteger A;

  protected java.math.BigInteger B;

  protected java.math.BigInteger x;

  protected java.math.BigInteger u;

  protected java.math.BigInteger S;

  protected java.math.BigInteger M1;

  protected java.math.BigInteger M2;

  protected java.math.BigInteger Key;

  protected org.bouncycastle.crypto.Digest digest;

  protected java.security.SecureRandom random;

  public org.bouncycastle.crypto.agreement.srp.SRP6Client();
    Code:
       0: aload_0
       1: invokespecial #114                // Method java/lang/Object."<init>":()V
       4: return

  public void init(java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field N:Ljava/math/BigInteger;
       5: aload_0
       6: aload_2
       7: putfield      #109                // Field g:Ljava/math/BigInteger;
      10: aload_0
      11: aload_3
      12: putfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
      15: aload_0
      16: aload         4
      18: putfield      #112                // Field random:Ljava/security/SecureRandom;
      21: return

  public java.math.BigInteger generateClientCredentials(byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
       5: aload_0
       6: getfield      #106                // Field N:Ljava/math/BigInteger;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #125                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateX:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;[B[B[B)Ljava/math/BigInteger;
      15: putfield      #111                // Field x:Ljava/math/BigInteger;
      18: aload_0
      19: aload_0
      20: invokevirtual #123                // Method selectPrivateValue:()Ljava/math/BigInteger;
      23: putfield      #108                // Field a:Ljava/math/BigInteger;
      26: aload_0
      27: aload_0
      28: getfield      #109                // Field g:Ljava/math/BigInteger;
      31: aload_0
      32: getfield      #108                // Field a:Ljava/math/BigInteger;
      35: aload_0
      36: getfield      #106                // Field N:Ljava/math/BigInteger;
      39: invokevirtual #120                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      42: putfield      #101                // Field A:Ljava/math/BigInteger;
      45: aload_0
      46: getfield      #101                // Field A:Ljava/math/BigInteger;
      49: areturn

  public java.math.BigInteger calculateSecret(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #106                // Field N:Ljava/math/BigInteger;
       5: aload_1
       6: invokestatic  #124                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.validatePublicValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       9: putfield      #102                // Field B:Ljava/math/BigInteger;
      12: aload_0
      13: aload_0
      14: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
      17: aload_0
      18: getfield      #106                // Field N:Ljava/math/BigInteger;
      21: aload_0
      22: getfield      #101                // Field A:Ljava/math/BigInteger;
      25: aload_0
      26: getfield      #102                // Field B:Ljava/math/BigInteger;
      29: invokestatic  #128                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateU:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      32: putfield      #110                // Field u:Ljava/math/BigInteger;
      35: aload_0
      36: aload_0
      37: invokespecial #122                // Method calculateS:()Ljava/math/BigInteger;
      40: putfield      #107                // Field S:Ljava/math/BigInteger;
      43: aload_0
      44: getfield      #107                // Field S:Ljava/math/BigInteger;
      47: areturn

  protected java.math.BigInteger selectPrivateValue();
    Code:
       0: aload_0
       1: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_0
       5: getfield      #106                // Field N:Ljava/math/BigInteger;
       8: aload_0
       9: getfield      #109                // Field g:Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #112                // Field random:Ljava/security/SecureRandom;
      16: invokestatic  #129                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.generatePrivateValue:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      19: areturn

  private java.math.BigInteger calculateS();
    Code:
       0: aload_0
       1: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_0
       5: getfield      #106                // Field N:Ljava/math/BigInteger;
       8: aload_0
       9: getfield      #109                // Field g:Ljava/math/BigInteger;
      12: invokestatic  #126                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateK:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      15: astore_1
      16: aload_0
      17: getfield      #110                // Field u:Ljava/math/BigInteger;
      20: aload_0
      21: getfield      #111                // Field x:Ljava/math/BigInteger;
      24: invokevirtual #118                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      27: aload_0
      28: getfield      #108                // Field a:Ljava/math/BigInteger;
      31: invokevirtual #116                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      34: astore_2
      35: aload_0
      36: getfield      #109                // Field g:Ljava/math/BigInteger;
      39: aload_0
      40: getfield      #111                // Field x:Ljava/math/BigInteger;
      43: aload_0
      44: getfield      #106                // Field N:Ljava/math/BigInteger;
      47: invokevirtual #120                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      50: aload_1
      51: invokevirtual #118                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      54: aload_0
      55: getfield      #106                // Field N:Ljava/math/BigInteger;
      58: invokevirtual #117                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      61: astore_3
      62: aload_0
      63: getfield      #102                // Field B:Ljava/math/BigInteger;
      66: aload_3
      67: invokevirtual #119                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      70: aload_0
      71: getfield      #106                // Field N:Ljava/math/BigInteger;
      74: invokevirtual #117                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      77: aload_2
      78: aload_0
      79: getfield      #106                // Field N:Ljava/math/BigInteger;
      82: invokevirtual #120                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      85: areturn

  public java.math.BigInteger calculateClientEvidenceMessage() throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getfield      #101                // Field A:Ljava/math/BigInteger;
       4: ifnull        21
       7: aload_0
       8: getfield      #102                // Field B:Ljava/math/BigInteger;
      11: ifnull        21
      14: aload_0
      15: getfield      #107                // Field S:Ljava/math/BigInteger;
      18: ifnonnull     31
      21: new           #51                 // class org/bouncycastle/crypto/CryptoException
      24: dup
      25: ldc           #2                  // String Impossible to compute M1: some data are missing from the previous operations (A,B,S)
      27: invokespecial #121                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_0
      33: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
      36: aload_0
      37: getfield      #106                // Field N:Ljava/math/BigInteger;
      40: aload_0
      41: getfield      #101                // Field A:Ljava/math/BigInteger;
      44: aload_0
      45: getfield      #102                // Field B:Ljava/math/BigInteger;
      48: aload_0
      49: getfield      #107                // Field S:Ljava/math/BigInteger;
      52: invokestatic  #130                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateM1:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: putfield      #104                // Field M1:Ljava/math/BigInteger;
      58: aload_0
      59: getfield      #104                // Field M1:Ljava/math/BigInteger;
      62: areturn

  public boolean verifyServerEvidenceMessage(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getfield      #101                // Field A:Ljava/math/BigInteger;
       4: ifnull        21
       7: aload_0
       8: getfield      #104                // Field M1:Ljava/math/BigInteger;
      11: ifnull        21
      14: aload_0
      15: getfield      #107                // Field S:Ljava/math/BigInteger;
      18: ifnonnull     31
      21: new           #51                 // class org/bouncycastle/crypto/CryptoException
      24: dup
      25: ldc           #3                  // String Impossible to compute and verify M2: some data are missing from the previous operations (A,M1,S)
      27: invokespecial #121                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
      35: aload_0
      36: getfield      #106                // Field N:Ljava/math/BigInteger;
      39: aload_0
      40: getfield      #101                // Field A:Ljava/math/BigInteger;
      43: aload_0
      44: getfield      #104                // Field M1:Ljava/math/BigInteger;
      47: aload_0
      48: getfield      #107                // Field S:Ljava/math/BigInteger;
      51: invokestatic  #131                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateM2:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      54: astore_2
      55: aload_2
      56: aload_1
      57: invokevirtual #115                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      60: ifeq          70
      63: aload_0
      64: aload_1
      65: putfield      #105                // Field M2:Ljava/math/BigInteger;
      68: iconst_1
      69: ireturn
      70: iconst_0
      71: ireturn

  public java.math.BigInteger calculateSessionKey() throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getfield      #107                // Field S:Ljava/math/BigInteger;
       4: ifnull        21
       7: aload_0
       8: getfield      #104                // Field M1:Ljava/math/BigInteger;
      11: ifnull        21
      14: aload_0
      15: getfield      #105                // Field M2:Ljava/math/BigInteger;
      18: ifnonnull     31
      21: new           #51                 // class org/bouncycastle/crypto/CryptoException
      24: dup
      25: ldc           #1                  // String Impossible to compute Key: some data are missing from the previous operations (S,M1,M2)
      27: invokespecial #121                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_0
      33: getfield      #113                // Field digest:Lorg/bouncycastle/crypto/Digest;
      36: aload_0
      37: getfield      #106                // Field N:Ljava/math/BigInteger;
      40: aload_0
      41: getfield      #107                // Field S:Ljava/math/BigInteger;
      44: invokestatic  #127                // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateKey:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      47: putfield      #103                // Field Key:Ljava/math/BigInteger;
      50: aload_0
      51: getfield      #103                // Field Key:Ljava/math/BigInteger;
      54: areturn
}
