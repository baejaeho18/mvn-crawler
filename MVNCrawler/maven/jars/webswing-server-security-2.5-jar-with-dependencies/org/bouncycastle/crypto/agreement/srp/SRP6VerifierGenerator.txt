public class org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator {
  protected java.math.BigInteger N;

  protected java.math.BigInteger g;

  protected org.bouncycastle.crypto.Digest digest;

  public org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field N:Ljava/math/BigInteger;
       5: aload_0
       6: aload_2
       7: putfield      #31                 // Field g:Ljava/math/BigInteger;
      10: aload_0
      11: aload_3
      12: putfield      #32                 // Field digest:Lorg/bouncycastle/crypto/Digest;
      15: return

  public java.math.BigInteger generateVerifier(byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: getfield      #32                 // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_0
       5: getfield      #30                 // Field N:Ljava/math/BigInteger;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokestatic  #35                 // Method org/bouncycastle/crypto/agreement/srp/SRP6Util.calculateX:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;[B[B[B)Ljava/math/BigInteger;
      14: astore        4
      16: aload_0
      17: getfield      #31                 // Field g:Ljava/math/BigInteger;
      20: aload         4
      22: aload_0
      23: getfield      #30                 // Field N:Ljava/math/BigInteger;
      26: invokevirtual #34                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      29: areturn
}
