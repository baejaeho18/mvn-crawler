public class org.bouncycastle.crypto.engines.RC4Engine implements org.bouncycastle.crypto.StreamCipher {
  private static final int STATE_LENGTH;

  private byte[] engineState;

  private int x;

  private int y;

  private byte[] workingKey;

  public org.bouncycastle.crypto.engines.RC4Engine();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #71                 // Field engineState:[B
       9: aload_0
      10: iconst_0
      11: putfield      #69                 // Field x:I
      14: aload_0
      15: iconst_0
      16: putfield      #70                 // Field y:I
      19: aload_0
      20: aconst_null
      21: putfield      #72                 // Field workingKey:[B
      24: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #51                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifeq          27
       7: aload_0
       8: aload_2
       9: checkcast     #51                 // class org/bouncycastle/crypto/params/KeyParameter
      12: invokevirtual #83                 // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      15: putfield      #72                 // Field workingKey:[B
      18: aload_0
      19: aload_0
      20: getfield      #72                 // Field workingKey:[B
      23: invokespecial #82                 // Method setKey:([B)V
      26: return
      27: new           #44                 // class java/lang/IllegalArgumentException
      30: dup
      31: new           #46                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #3                  // String invalid parameter passed to RC4 init -
      40: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_2
      44: invokevirtual #76                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokevirtual #73                 // Method java/lang/Class.getName:()Ljava/lang/String;
      50: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #74                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String RC4
       2: areturn

  public byte returnByte(byte);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #69                 // Field x:I
       5: iconst_1
       6: iadd
       7: sipush        255
      10: iand
      11: putfield      #69                 // Field x:I
      14: aload_0
      15: aload_0
      16: getfield      #71                 // Field engineState:[B
      19: aload_0
      20: getfield      #69                 // Field x:I
      23: baload
      24: aload_0
      25: getfield      #70                 // Field y:I
      28: iadd
      29: sipush        255
      32: iand
      33: putfield      #70                 // Field y:I
      36: aload_0
      37: getfield      #71                 // Field engineState:[B
      40: aload_0
      41: getfield      #69                 // Field x:I
      44: baload
      45: istore_2
      46: aload_0
      47: getfield      #71                 // Field engineState:[B
      50: aload_0
      51: getfield      #69                 // Field x:I
      54: aload_0
      55: getfield      #71                 // Field engineState:[B
      58: aload_0
      59: getfield      #70                 // Field y:I
      62: baload
      63: bastore
      64: aload_0
      65: getfield      #71                 // Field engineState:[B
      68: aload_0
      69: getfield      #70                 // Field y:I
      72: iload_2
      73: bastore
      74: iload_1
      75: aload_0
      76: getfield      #71                 // Field engineState:[B
      79: aload_0
      80: getfield      #71                 // Field engineState:[B
      83: aload_0
      84: getfield      #69                 // Field x:I
      87: baload
      88: aload_0
      89: getfield      #71                 // Field engineState:[B
      92: aload_0
      93: getfield      #70                 // Field y:I
      96: baload
      97: iadd
      98: sipush        255
     101: iand
     102: baload
     103: ixor
     104: i2b
     105: ireturn

  public int processBytes(byte[], int, int, byte[], int);
    Code:
       0: iload_2
       1: iload_3
       2: iadd
       3: aload_1
       4: arraylength
       5: if_icmple     18
       8: new           #47                 // class org/bouncycastle/crypto/DataLengthException
      11: dup
      12: ldc           #2                  // String input buffer too short
      14: invokespecial #80                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload         5
      20: iload_3
      21: iadd
      22: aload         4
      24: arraylength
      25: if_icmple     38
      28: new           #48                 // class org/bouncycastle/crypto/OutputLengthException
      31: dup
      32: ldc           #4                  // String output buffer too short
      34: invokespecial #81                 // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iconst_0
      39: istore        6
      41: iload         6
      43: iload_3
      44: if_icmpge     173
      47: aload_0
      48: aload_0
      49: getfield      #69                 // Field x:I
      52: iconst_1
      53: iadd
      54: sipush        255
      57: iand
      58: putfield      #69                 // Field x:I
      61: aload_0
      62: aload_0
      63: getfield      #71                 // Field engineState:[B
      66: aload_0
      67: getfield      #69                 // Field x:I
      70: baload
      71: aload_0
      72: getfield      #70                 // Field y:I
      75: iadd
      76: sipush        255
      79: iand
      80: putfield      #70                 // Field y:I
      83: aload_0
      84: getfield      #71                 // Field engineState:[B
      87: aload_0
      88: getfield      #69                 // Field x:I
      91: baload
      92: istore        7
      94: aload_0
      95: getfield      #71                 // Field engineState:[B
      98: aload_0
      99: getfield      #69                 // Field x:I
     102: aload_0
     103: getfield      #71                 // Field engineState:[B
     106: aload_0
     107: getfield      #70                 // Field y:I
     110: baload
     111: bastore
     112: aload_0
     113: getfield      #71                 // Field engineState:[B
     116: aload_0
     117: getfield      #70                 // Field y:I
     120: iload         7
     122: bastore
     123: aload         4
     125: iload         6
     127: iload         5
     129: iadd
     130: aload_1
     131: iload         6
     133: iload_2
     134: iadd
     135: baload
     136: aload_0
     137: getfield      #71                 // Field engineState:[B
     140: aload_0
     141: getfield      #71                 // Field engineState:[B
     144: aload_0
     145: getfield      #69                 // Field x:I
     148: baload
     149: aload_0
     150: getfield      #71                 // Field engineState:[B
     153: aload_0
     154: getfield      #70                 // Field y:I
     157: baload
     158: iadd
     159: sipush        255
     162: iand
     163: baload
     164: ixor
     165: i2b
     166: bastore
     167: iinc          6, 1
     170: goto          41
     173: iload_3
     174: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #72                 // Field workingKey:[B
       5: invokespecial #82                 // Method setKey:([B)V
       8: return

  private void setKey(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field workingKey:[B
       5: aload_0
       6: iconst_0
       7: putfield      #69                 // Field x:I
      10: aload_0
      11: iconst_0
      12: putfield      #70                 // Field y:I
      15: aload_0
      16: getfield      #71                 // Field engineState:[B
      19: ifnonnull     31
      22: aload_0
      23: sipush        256
      26: newarray       byte
      28: putfield      #71                 // Field engineState:[B
      31: iconst_0
      32: istore_2
      33: iload_2
      34: sipush        256
      37: if_icmpge     54
      40: aload_0
      41: getfield      #71                 // Field engineState:[B
      44: iload_2
      45: iload_2
      46: i2b
      47: bastore
      48: iinc          2, 1
      51: goto          33
      54: iconst_0
      55: istore_2
      56: iconst_0
      57: istore_3
      58: iconst_0
      59: istore        4
      61: iload         4
      63: sipush        256
      66: if_icmpge     134
      69: aload_1
      70: iload_2
      71: baload
      72: sipush        255
      75: iand
      76: aload_0
      77: getfield      #71                 // Field engineState:[B
      80: iload         4
      82: baload
      83: iadd
      84: iload_3
      85: iadd
      86: sipush        255
      89: iand
      90: istore_3
      91: aload_0
      92: getfield      #71                 // Field engineState:[B
      95: iload         4
      97: baload
      98: istore        5
     100: aload_0
     101: getfield      #71                 // Field engineState:[B
     104: iload         4
     106: aload_0
     107: getfield      #71                 // Field engineState:[B
     110: iload_3
     111: baload
     112: bastore
     113: aload_0
     114: getfield      #71                 // Field engineState:[B
     117: iload_3
     118: iload         5
     120: bastore
     121: iload_2
     122: iconst_1
     123: iadd
     124: aload_1
     125: arraylength
     126: irem
     127: istore_2
     128: iinc          4, 1
     131: goto          61
     134: return
}
