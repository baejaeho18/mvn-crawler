class org.bouncycastle.crypto.engines.RSACoreEngine {
  private org.bouncycastle.crypto.params.RSAKeyParameters key;

  private boolean forEncryption;

  org.bouncycastle.crypto.engines.RSACoreEngine();
    Code:
       0: aload_0
       1: invokespecial #89                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #48                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          26
       7: aload_2
       8: checkcast     #48                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokevirtual #104                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      17: checkcast     #49                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      20: putfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      23: goto          34
      26: aload_0
      27: aload_2
      28: checkcast     #49                 // class org/bouncycastle/crypto/params/RSAKeyParameters
      31: putfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      34: aload_0
      35: iload_1
      36: putfield      #87                 // Field forEncryption:Z
      39: return

  public int getInputBlockSize();
    Code:
       0: aload_0
       1: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: invokevirtual #106                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
       7: invokevirtual #91                 // Method java/math/BigInteger.bitLength:()I
      10: istore_1
      11: aload_0
      12: getfield      #87                 // Field forEncryption:Z
      15: ifeq          28
      18: iload_1
      19: bipush        7
      21: iadd
      22: bipush        8
      24: idiv
      25: iconst_1
      26: isub
      27: ireturn
      28: iload_1
      29: bipush        7
      31: iadd
      32: bipush        8
      34: idiv
      35: ireturn

  public int getOutputBlockSize();
    Code:
       0: aload_0
       1: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: invokevirtual #106                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
       7: invokevirtual #91                 // Method java/math/BigInteger.bitLength:()I
      10: istore_1
      11: aload_0
      12: getfield      #87                 // Field forEncryption:Z
      15: ifeq          26
      18: iload_1
      19: bipush        7
      21: iadd
      22: bipush        8
      24: idiv
      25: ireturn
      26: iload_1
      27: bipush        7
      29: iadd
      30: bipush        8
      32: idiv
      33: iconst_1
      34: isub
      35: ireturn

  public java.math.BigInteger convertInput(byte[], int, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #102                // Method getInputBlockSize:()I
       5: iconst_1
       6: iadd
       7: if_icmple     20
      10: new           #46                 // class org/bouncycastle/crypto/DataLengthException
      13: dup
      14: ldc           #1                  // String input too large for RSA cipher.
      16: invokespecial #101                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iload_3
      21: aload_0
      22: invokevirtual #102                // Method getInputBlockSize:()I
      25: iconst_1
      26: iadd
      27: if_icmpne     47
      30: aload_0
      31: getfield      #87                 // Field forEncryption:Z
      34: ifne          47
      37: new           #46                 // class org/bouncycastle/crypto/DataLengthException
      40: dup
      41: ldc           #1                  // String input too large for RSA cipher.
      43: invokespecial #101                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: iload_2
      48: ifne          57
      51: iload_3
      52: aload_1
      53: arraylength
      54: if_icmpeq     74
      57: iload_3
      58: newarray       byte
      60: astore        4
      62: aload_1
      63: iload_2
      64: aload         4
      66: iconst_0
      67: iload_3
      68: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: goto          77
      74: aload_1
      75: astore        4
      77: new           #45                 // class java/math/BigInteger
      80: dup
      81: iconst_1
      82: aload         4
      84: invokespecial #93                 // Method java/math/BigInteger."<init>":(I[B)V
      87: astore        5
      89: aload         5
      91: aload_0
      92: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      95: invokevirtual #106                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
      98: invokevirtual #94                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     101: iflt          114
     104: new           #46                 // class org/bouncycastle/crypto/DataLengthException
     107: dup
     108: ldc           #1                  // String input too large for RSA cipher.
     110: invokespecial #101                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload         5
     116: areturn

  public byte[] convertOutput(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method java/math/BigInteger.toByteArray:()[B
       4: astore_2
       5: aload_0
       6: getfield      #87                 // Field forEncryption:Z
       9: ifeq          76
      12: aload_2
      13: iconst_0
      14: baload
      15: ifne          45
      18: aload_2
      19: arraylength
      20: aload_0
      21: invokevirtual #103                // Method getOutputBlockSize:()I
      24: if_icmple     45
      27: aload_2
      28: arraylength
      29: iconst_1
      30: isub
      31: newarray       byte
      33: astore_3
      34: aload_2
      35: iconst_1
      36: aload_3
      37: iconst_0
      38: aload_3
      39: arraylength
      40: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_3
      44: areturn
      45: aload_2
      46: arraylength
      47: aload_0
      48: invokevirtual #103                // Method getOutputBlockSize:()I
      51: if_icmpge     100
      54: aload_0
      55: invokevirtual #103                // Method getOutputBlockSize:()I
      58: newarray       byte
      60: astore_3
      61: aload_2
      62: iconst_0
      63: aload_3
      64: aload_3
      65: arraylength
      66: aload_2
      67: arraylength
      68: isub
      69: aload_2
      70: arraylength
      71: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_3
      75: areturn
      76: aload_2
      77: iconst_0
      78: baload
      79: ifne          100
      82: aload_2
      83: arraylength
      84: iconst_1
      85: isub
      86: newarray       byte
      88: astore_3
      89: aload_2
      90: iconst_1
      91: aload_3
      92: iconst_0
      93: aload_3
      94: arraylength
      95: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload_3
      99: areturn
     100: aload_2
     101: areturn

  public java.math.BigInteger processBlock(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
       4: instanceof    #50                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: ifeq          122
      10: aload_0
      11: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
      14: checkcast     #50                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
      17: astore_2
      18: aload_2
      19: invokevirtual #109                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getP:()Ljava/math/BigInteger;
      22: astore_3
      23: aload_2
      24: invokevirtual #110                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getQ:()Ljava/math/BigInteger;
      27: astore        4
      29: aload_2
      30: invokevirtual #107                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getDP:()Ljava/math/BigInteger;
      33: astore        5
      35: aload_2
      36: invokevirtual #108                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getDQ:()Ljava/math/BigInteger;
      39: astore        6
      41: aload_2
      42: invokevirtual #111                // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getQInv:()Ljava/math/BigInteger;
      45: astore        7
      47: aload_1
      48: aload_3
      49: invokevirtual #98                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      52: aload         5
      54: aload_3
      55: invokevirtual #100                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      58: astore        8
      60: aload_1
      61: aload         4
      63: invokevirtual #98                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      66: aload         6
      68: aload         4
      70: invokevirtual #100                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      73: astore        9
      75: aload         8
      77: aload         9
      79: invokevirtual #99                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      82: astore        10
      84: aload         10
      86: aload         7
      88: invokevirtual #97                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      91: astore        10
      93: aload         10
      95: aload_3
      96: invokevirtual #96                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      99: astore        10
     101: aload         10
     103: aload         4
     105: invokevirtual #97                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     108: astore        11
     110: aload         11
     112: aload         9
     114: invokevirtual #95                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     117: astore        11
     119: aload         11
     121: areturn
     122: aload_1
     123: aload_0
     124: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
     127: invokevirtual #105                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getExponent:()Ljava/math/BigInteger;
     130: aload_0
     131: getfield      #88                 // Field key:Lorg/bouncycastle/crypto/params/RSAKeyParameters;
     134: invokevirtual #106                // Method org/bouncycastle/crypto/params/RSAKeyParameters.getModulus:()Ljava/math/BigInteger;
     137: invokevirtual #100                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     140: areturn
}
