public class org.bouncycastle.util.test.FixedSecureRandom extends java.security.SecureRandom {
  private byte[] _data;

  private int _index;

  private int _intPad;

  public org.bouncycastle.util.test.FixedSecureRandom(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: anewarray     #32                 // class "[B"
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: invokespecial #61                 // Method "<init>":(Z[[B)V
      13: return

  public org.bouncycastle.util.test.FixedSecureRandom(byte[][]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokespecial #61                 // Method "<init>":(Z[[B)V
       6: return

  public org.bouncycastle.util.test.FixedSecureRandom(boolean, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: anewarray     #32                 // class "[B"
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: invokespecial #61                 // Method "<init>":(Z[[B)V
      13: return

  public org.bouncycastle.util.test.FixedSecureRandom(boolean, byte[][]);
    Code:
       0: aload_0
       1: invokespecial #59                 // Method java/security/SecureRandom."<init>":()V
       4: new           #33                 // class java/io/ByteArrayOutputStream
       7: dup
       8: invokespecial #54                 // Method java/io/ByteArrayOutputStream."<init>":()V
      11: astore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: aload_2
      18: arraylength
      19: if_icmpeq     51
      22: aload_3
      23: aload_2
      24: iload         4
      26: aaload
      27: invokevirtual #56                 // Method java/io/ByteArrayOutputStream.write:([B)V
      30: goto          45
      33: astore        5
      35: new           #35                 // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #1                  // String can\'t save value array.
      41: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: iinc          4, 1
      48: goto          15
      51: aload_0
      52: aload_3
      53: invokevirtual #55                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      56: putfield      #53                 // Field _data:[B
      59: iload_1
      60: ifeq          74
      63: aload_0
      64: aload_0
      65: getfield      #53                 // Field _data:[B
      68: arraylength
      69: iconst_4
      70: irem
      71: putfield      #52                 // Field _intPad:I
      74: return
    Exception table:
       from    to  target type
          22    30    33   Class java/io/IOException

  public void nextBytes(byte[]);
    Code:
       0: aload_0
       1: getfield      #53                 // Field _data:[B
       4: aload_0
       5: getfield      #51                 // Field _index:I
       8: aload_1
       9: iconst_0
      10: aload_1
      11: arraylength
      12: invokestatic  #58                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      15: aload_0
      16: dup
      17: getfield      #51                 // Field _index:I
      20: aload_1
      21: arraylength
      22: iadd
      23: putfield      #51                 // Field _index:I
      26: return

  public int nextInt();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokespecial #60                 // Method nextValue:()I
       7: bipush        24
       9: ishl
      10: ior
      11: istore_1
      12: iload_1
      13: aload_0
      14: invokespecial #60                 // Method nextValue:()I
      17: bipush        16
      19: ishl
      20: ior
      21: istore_1
      22: aload_0
      23: getfield      #52                 // Field _intPad:I
      26: iconst_2
      27: if_icmpne     43
      30: aload_0
      31: dup
      32: getfield      #52                 // Field _intPad:I
      35: iconst_1
      36: isub
      37: putfield      #52                 // Field _intPad:I
      40: goto          53
      43: iload_1
      44: aload_0
      45: invokespecial #60                 // Method nextValue:()I
      48: bipush        8
      50: ishl
      51: ior
      52: istore_1
      53: aload_0
      54: getfield      #52                 // Field _intPad:I
      57: iconst_1
      58: if_icmpne     74
      61: aload_0
      62: dup
      63: getfield      #52                 // Field _intPad:I
      66: iconst_1
      67: isub
      68: putfield      #52                 // Field _intPad:I
      71: goto          81
      74: iload_1
      75: aload_0
      76: invokespecial #60                 // Method nextValue:()I
      79: ior
      80: istore_1
      81: iload_1
      82: ireturn

  public long nextLong();
    Code:
       0: lconst_0
       1: lstore_1
       2: lload_1
       3: aload_0
       4: invokespecial #60                 // Method nextValue:()I
       7: i2l
       8: bipush        56
      10: lshl
      11: lor
      12: lstore_1
      13: lload_1
      14: aload_0
      15: invokespecial #60                 // Method nextValue:()I
      18: i2l
      19: bipush        48
      21: lshl
      22: lor
      23: lstore_1
      24: lload_1
      25: aload_0
      26: invokespecial #60                 // Method nextValue:()I
      29: i2l
      30: bipush        40
      32: lshl
      33: lor
      34: lstore_1
      35: lload_1
      36: aload_0
      37: invokespecial #60                 // Method nextValue:()I
      40: i2l
      41: bipush        32
      43: lshl
      44: lor
      45: lstore_1
      46: lload_1
      47: aload_0
      48: invokespecial #60                 // Method nextValue:()I
      51: i2l
      52: bipush        24
      54: lshl
      55: lor
      56: lstore_1
      57: lload_1
      58: aload_0
      59: invokespecial #60                 // Method nextValue:()I
      62: i2l
      63: bipush        16
      65: lshl
      66: lor
      67: lstore_1
      68: lload_1
      69: aload_0
      70: invokespecial #60                 // Method nextValue:()I
      73: i2l
      74: bipush        8
      76: lshl
      77: lor
      78: lstore_1
      79: lload_1
      80: aload_0
      81: invokespecial #60                 // Method nextValue:()I
      84: i2l
      85: lor
      86: lstore_1
      87: lload_1
      88: lreturn

  public boolean isExhausted();
    Code:
       0: aload_0
       1: getfield      #51                 // Field _index:I
       4: aload_0
       5: getfield      #53                 // Field _data:[B
       8: arraylength
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private int nextValue();
    Code:
       0: aload_0
       1: getfield      #53                 // Field _data:[B
       4: aload_0
       5: dup
       6: getfield      #51                 // Field _index:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #51                 // Field _index:I
      15: baload
      16: sipush        255
      19: iand
      20: ireturn
}
