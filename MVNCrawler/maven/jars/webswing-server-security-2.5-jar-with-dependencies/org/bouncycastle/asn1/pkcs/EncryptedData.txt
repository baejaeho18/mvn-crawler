public class org.bouncycastle.asn1.pkcs.EncryptedData extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.ASN1Sequence data;

  org.bouncycastle.asn1.ASN1ObjectIdentifier bagId;

  org.bouncycastle.asn1.ASN1Primitive bagValue;

  public static org.bouncycastle.asn1.pkcs.EncryptedData getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #44                 // class org/bouncycastle/asn1/pkcs/EncryptedData
       4: ifeq          12
       7: aload_0
       8: checkcast     #44                 // class org/bouncycastle/asn1/pkcs/EncryptedData
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #44                 // class org/bouncycastle/asn1/pkcs/EncryptedData
      19: dup
      20: aload_0
      21: invokestatic  #97                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #101                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  private org.bouncycastle.asn1.pkcs.EncryptedData(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: iconst_0
       6: invokevirtual #96                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
       9: checkcast     #36                 // class org/bouncycastle/asn1/ASN1Integer
      12: invokevirtual #91                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      15: invokevirtual #87                 // Method java/math/BigInteger.intValue:()I
      18: istore_2
      19: iload_2
      20: ifeq          33
      23: new           #33                 // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #1                  // String sequence not version 0
      29: invokespecial #86                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: aload_1
      35: iconst_1
      36: invokevirtual #96                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      39: invokestatic  #97                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      42: putfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
      45: return

  public org.bouncycastle.asn1.pkcs.EncryptedData(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.ASN1Encodable);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: new           #35                 // class org/bouncycastle/asn1/ASN1EncodableVector
       7: dup
       8: invokespecial #88                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      11: astore        4
      13: aload         4
      15: aload_1
      16: invokevirtual #89                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      19: aload         4
      21: aload_2
      22: invokevirtual #102                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      25: invokevirtual #89                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      28: aload         4
      30: new           #43                 // class org/bouncycastle/asn1/BERTaggedObject
      33: dup
      34: iconst_0
      35: iconst_0
      36: aload_3
      37: invokespecial #100                // Method org/bouncycastle/asn1/BERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      40: invokevirtual #89                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      43: aload_0
      44: new           #42                 // class org/bouncycastle/asn1/BERSequence
      47: dup
      48: aload         4
      50: invokespecial #99                 // Method org/bouncycastle/asn1/BERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      53: putfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
      56: return

  public org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType();
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: iconst_0
       5: invokevirtual #96                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
       8: invokestatic  #93                 // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      11: areturn

  public org.bouncycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm();
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: iconst_1
       5: invokevirtual #96                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
       8: invokestatic  #103                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      11: areturn

  public org.bouncycastle.asn1.ASN1OctetString getContent();
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #95                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       7: iconst_3
       8: if_icmpne     29
      11: aload_0
      12: getfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
      15: iconst_2
      16: invokevirtual #96                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      19: invokestatic  #98                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
      22: astore_1
      23: aload_1
      24: iconst_0
      25: invokestatic  #94                 // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1OctetString;
      28: areturn
      29: aconst_null
      30: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #35                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #88                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #36                 // class org/bouncycastle/asn1/ASN1Integer
      12: dup
      13: lconst_0
      14: invokespecial #90                 // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      17: invokevirtual #89                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      20: aload_1
      21: aload_0
      22: getfield      #85                 // Field data:Lorg/bouncycastle/asn1/ASN1Sequence;
      25: invokevirtual #89                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      28: new           #42                 // class org/bouncycastle/asn1/BERSequence
      31: dup
      32: aload_1
      33: invokespecial #99                 // Method org/bouncycastle/asn1/BERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      36: areturn
}
