public class org.bouncycastle.asn1.pkcs.CertificationRequestInfo extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.ASN1Integer version;

  org.bouncycastle.asn1.x500.X500Name subject;

  org.bouncycastle.asn1.x509.SubjectPublicKeyInfo subjectPKInfo;

  org.bouncycastle.asn1.ASN1Set attributes;

  public static org.bouncycastle.asn1.pkcs.CertificationRequestInfo getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #40                 // class org/bouncycastle/asn1/pkcs/CertificationRequestInfo
       4: ifeq          12
       7: aload_0
       8: checkcast     #40                 // class org/bouncycastle/asn1/pkcs/CertificationRequestInfo
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #40                 // class org/bouncycastle/asn1/pkcs/CertificationRequestInfo
      19: dup
      20: aload_0
      21: invokestatic  #95                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #99                 // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #34                 // class org/bouncycastle/asn1/ASN1Integer
       8: dup
       9: lconst_0
      10: invokespecial #91                 // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      13: putfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aconst_null
      18: putfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      21: aload_0
      22: aload_1
      23: putfield      #86                 // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      26: aload_0
      27: aload_2
      28: putfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      31: aload_0
      32: aload_3
      33: putfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      36: aload_1
      37: ifnull        54
      40: aload_0
      41: getfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      44: ifnull        54
      47: aload_0
      48: getfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      51: ifnonnull     64
      54: new           #32                 // class java/lang/IllegalArgumentException
      57: dup
      58: ldc           #1                  // String Not all mandatory fields set in CertificationRequestInfo generator.
      60: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.x509.X509Name, org.bouncycastle.asn1.x509.SubjectPublicKeyInfo, org.bouncycastle.asn1.ASN1Set);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #34                 // class org/bouncycastle/asn1/ASN1Integer
       8: dup
       9: lconst_0
      10: invokespecial #91                 // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      13: putfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aconst_null
      18: putfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      21: aload_0
      22: aload_1
      23: invokevirtual #102                // Method org/bouncycastle/asn1/x509/X509Name.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      26: invokestatic  #100                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
      29: putfield      #86                 // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      32: aload_0
      33: aload_2
      34: putfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      37: aload_0
      38: aload_3
      39: putfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      42: aload_1
      43: ifnull        60
      46: aload_0
      47: getfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      50: ifnull        60
      53: aload_0
      54: getfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      57: ifnonnull     70
      60: new           #32                 // class java/lang/IllegalArgumentException
      63: dup
      64: ldc           #1                  // String Not all mandatory fields set in CertificationRequestInfo generator.
      66: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  public org.bouncycastle.asn1.pkcs.CertificationRequestInfo(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #34                 // class org/bouncycastle/asn1/ASN1Integer
       8: dup
       9: lconst_0
      10: invokespecial #91                 // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      13: putfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aconst_null
      18: putfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      21: aload_0
      22: aload_1
      23: iconst_0
      24: invokevirtual #94                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      27: checkcast     #34                 // class org/bouncycastle/asn1/ASN1Integer
      30: putfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      33: aload_0
      34: aload_1
      35: iconst_1
      36: invokevirtual #94                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      39: invokestatic  #100                // Method org/bouncycastle/asn1/x500/X500Name.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x500/X500Name;
      42: putfield      #86                 // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      45: aload_0
      46: aload_1
      47: iconst_2
      48: invokevirtual #94                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      51: invokestatic  #101                // Method org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      54: putfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      57: aload_1
      58: invokevirtual #93                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      61: iconst_3
      62: if_icmple     83
      65: aload_1
      66: iconst_3
      67: invokevirtual #94                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      70: checkcast     #39                 // class org/bouncycastle/asn1/DERTaggedObject
      73: astore_2
      74: aload_0
      75: aload_2
      76: iconst_0
      77: invokestatic  #96                 // Method org/bouncycastle/asn1/ASN1Set.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Set;
      80: putfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      83: aload_0
      84: getfield      #86                 // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      87: ifnull        104
      90: aload_0
      91: getfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      94: ifnull        104
      97: aload_0
      98: getfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
     101: ifnonnull     114
     104: new           #32                 // class java/lang/IllegalArgumentException
     107: dup
     108: ldc           #1                  // String Not all mandatory fields set in CertificationRequestInfo generator.
     110: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: return

  public org.bouncycastle.asn1.ASN1Integer getVersion();
    Code:
       0: aload_0
       1: getfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  public org.bouncycastle.asn1.x500.X500Name getSubject();
    Code:
       0: aload_0
       1: getfield      #86                 // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
       4: areturn

  public org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo();
    Code:
       0: aload_0
       1: getfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
       4: areturn

  public org.bouncycastle.asn1.ASN1Set getAttributes();
    Code:
       0: aload_0
       1: getfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #33                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #89                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #84                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      13: invokevirtual #90                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      16: aload_1
      17: aload_0
      18: getfield      #86                 // Field subject:Lorg/bouncycastle/asn1/x500/X500Name;
      21: invokevirtual #90                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      24: aload_1
      25: aload_0
      26: getfield      #87                 // Field subjectPKInfo:Lorg/bouncycastle/asn1/x509/SubjectPublicKeyInfo;
      29: invokevirtual #90                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      32: aload_0
      33: getfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      36: ifnull        56
      39: aload_1
      40: new           #39                 // class org/bouncycastle/asn1/DERTaggedObject
      43: dup
      44: iconst_0
      45: iconst_0
      46: aload_0
      47: getfield      #85                 // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      50: invokespecial #98                 // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      53: invokevirtual #90                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      56: new           #38                 // class org/bouncycastle/asn1/DERSequence
      59: dup
      60: aload_1
      61: invokespecial #97                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      64: areturn
}
