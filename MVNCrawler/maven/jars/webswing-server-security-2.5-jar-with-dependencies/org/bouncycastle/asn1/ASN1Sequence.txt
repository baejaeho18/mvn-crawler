public abstract class org.bouncycastle.asn1.ASN1Sequence extends org.bouncycastle.asn1.ASN1Primitive {
  protected java.util.Vector seq;

  public static org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #71                 // class org/bouncycastle/asn1/ASN1Sequence
       8: ifeq          16
      11: aload_0
      12: checkcast     #71                 // class org/bouncycastle/asn1/ASN1Sequence
      15: areturn
      16: aload_0
      17: instanceof    #73                 // class org/bouncycastle/asn1/ASN1SequenceParser
      20: ifeq          36
      23: aload_0
      24: checkcast     #73                 // class org/bouncycastle/asn1/ASN1SequenceParser
      27: invokeinterface #166,  1          // InterfaceMethod org/bouncycastle/asn1/ASN1SequenceParser.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      32: invokestatic  #155                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      35: areturn
      36: aload_0
      37: instanceof    #60                 // class "[B"
      40: ifeq          88
      43: aload_0
      44: checkcast     #60                 // class "[B"
      47: checkcast     #60                 // class "[B"
      50: invokestatic  #153                // Method fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      53: invokestatic  #155                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      56: areturn
      57: astore_1
      58: new           #63                 // class java/lang/IllegalArgumentException
      61: dup
      62: new           #65                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #136                // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #1                  // String failed to construct sequence from byte[]:
      71: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_1
      75: invokevirtual #131                // Method java/io/IOException.getMessage:()Ljava/lang/String;
      78: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: instanceof    #68                 // class org/bouncycastle/asn1/ASN1Encodable
      92: ifeq          117
      95: aload_0
      96: checkcast     #68                 // class org/bouncycastle/asn1/ASN1Encodable
      99: invokeinterface #165,  1          // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
     104: astore_1
     105: aload_1
     106: instanceof    #71                 // class org/bouncycastle/asn1/ASN1Sequence
     109: ifeq          117
     112: aload_1
     113: checkcast     #71                 // class org/bouncycastle/asn1/ASN1Sequence
     116: areturn
     117: new           #63                 // class java/lang/IllegalArgumentException
     120: dup
     121: new           #65                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #136                // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #3                  // String unknown object in getInstance:
     130: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: invokevirtual #135                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     137: invokevirtual #132                // Method java/lang/Class.getName:()Ljava/lang/String;
     140: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     149: athrow
    Exception table:
       from    to  target type
          43    56    57   Class java/io/IOException

  public static org.bouncycastle.asn1.ASN1Sequence getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: iload_1
       1: ifeq          32
       4: aload_0
       5: invokevirtual #157                // Method org/bouncycastle/asn1/ASN1TaggedObject.isExplicit:()Z
       8: ifne          21
      11: new           #63                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #2                  // String object implicit - explicit expected.
      17: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: invokevirtual #158                // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      25: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1Primitive.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      28: invokestatic  #155                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      31: areturn
      32: aload_0
      33: invokevirtual #157                // Method org/bouncycastle/asn1/ASN1TaggedObject.isExplicit:()Z
      36: ifeq          70
      39: aload_0
      40: instanceof    #76                 // class org/bouncycastle/asn1/BERTaggedObject
      43: ifeq          58
      46: new           #75                 // class org/bouncycastle/asn1/BERSequence
      49: dup
      50: aload_0
      51: invokevirtual #158                // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      54: invokespecial #159                // Method org/bouncycastle/asn1/BERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      57: areturn
      58: new           #78                 // class org/bouncycastle/asn1/DLSequence
      61: dup
      62: aload_0
      63: invokevirtual #158                // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      66: invokespecial #162                // Method org/bouncycastle/asn1/DLSequence."<init>":(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      69: areturn
      70: aload_0
      71: invokevirtual #158                // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      74: instanceof    #71                 // class org/bouncycastle/asn1/ASN1Sequence
      77: ifeq          88
      80: aload_0
      81: invokevirtual #158                // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      84: checkcast     #71                 // class org/bouncycastle/asn1/ASN1Sequence
      87: areturn
      88: new           #63                 // class java/lang/IllegalArgumentException
      91: dup
      92: new           #65                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #136                // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #3                  // String unknown object in getInstance:
     101: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: invokevirtual #135                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     108: invokevirtual #132                // Method java/lang/Class.getName:()Ljava/lang/String;
     111: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #133                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow

  protected org.bouncycastle.asn1.ASN1Sequence();
    Code:
       0: aload_0
       1: invokespecial #147                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: new           #67                 // class java/util/Vector
       8: dup
       9: invokespecial #140                // Method java/util/Vector."<init>":()V
      12: putfield      #130                // Field seq:Ljava/util/Vector;
      15: return

  protected org.bouncycastle.asn1.ASN1Sequence(org.bouncycastle.asn1.ASN1Encodable);
    Code:
       0: aload_0
       1: invokespecial #147                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: new           #67                 // class java/util/Vector
       8: dup
       9: invokespecial #140                // Method java/util/Vector."<init>":()V
      12: putfield      #130                // Field seq:Ljava/util/Vector;
      15: aload_0
      16: getfield      #130                // Field seq:Ljava/util/Vector;
      19: aload_1
      20: invokevirtual #142                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      23: return

  protected org.bouncycastle.asn1.ASN1Sequence(org.bouncycastle.asn1.ASN1EncodableVector);
    Code:
       0: aload_0
       1: invokespecial #147                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: new           #67                 // class java/util/Vector
       8: dup
       9: invokespecial #140                // Method java/util/Vector."<init>":()V
      12: putfield      #130                // Field seq:Ljava/util/Vector;
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: invokevirtual #145                // Method org/bouncycastle/asn1/ASN1EncodableVector.size:()I
      22: if_icmpeq     43
      25: aload_0
      26: getfield      #130                // Field seq:Ljava/util/Vector;
      29: aload_1
      30: iload_2
      31: invokevirtual #146                // Method org/bouncycastle/asn1/ASN1EncodableVector.get:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      34: invokevirtual #142                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      37: iinc          2, 1
      40: goto          17
      43: return

  protected org.bouncycastle.asn1.ASN1Sequence(org.bouncycastle.asn1.ASN1Encodable[]);
    Code:
       0: aload_0
       1: invokespecial #147                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: new           #67                 // class java/util/Vector
       8: dup
       9: invokespecial #140                // Method java/util/Vector."<init>":()V
      12: putfield      #130                // Field seq:Ljava/util/Vector;
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: arraylength
      20: if_icmpeq     39
      23: aload_0
      24: getfield      #130                // Field seq:Ljava/util/Vector;
      27: aload_1
      28: iload_2
      29: aaload
      30: invokevirtual #142                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      33: iinc          2, 1
      36: goto          17
      39: return

  public org.bouncycastle.asn1.ASN1Encodable[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method size:()I
       4: anewarray     #68                 // class org/bouncycastle/asn1/ASN1Encodable
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: invokevirtual #150                // Method size:()I
      15: if_icmpeq     32
      18: aload_1
      19: iload_2
      20: aload_0
      21: iload_2
      22: invokevirtual #152                // Method getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      25: aastore
      26: iinc          2, 1
      29: goto          10
      32: aload_1
      33: areturn

  public java.util.Enumeration getObjects();
    Code:
       0: aload_0
       1: getfield      #130                // Field seq:Ljava/util/Vector;
       4: invokevirtual #144                // Method java/util/Vector.elements:()Ljava/util/Enumeration;
       7: areturn

  public org.bouncycastle.asn1.ASN1SequenceParser parser();
    Code:
       0: aload_0
       1: astore_1
       2: new           #72                 // class org/bouncycastle/asn1/ASN1Sequence$1
       5: dup
       6: aload_0
       7: aload_1
       8: invokespecial #156                // Method org/bouncycastle/asn1/ASN1Sequence$1."<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;Lorg/bouncycastle/asn1/ASN1Sequence;)V
      11: areturn

  public org.bouncycastle.asn1.ASN1Encodable getObjectAt(int);
    Code:
       0: aload_0
       1: getfield      #130                // Field seq:Ljava/util/Vector;
       4: iload_1
       5: invokevirtual #141                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
       8: checkcast     #68                 // class org/bouncycastle/asn1/ASN1Encodable
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #130                // Field seq:Ljava/util/Vector;
       4: invokevirtual #139                // Method java/util/Vector.size:()I
       7: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #151                // Method getObjects:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_0
       6: invokevirtual #150                // Method size:()I
       9: istore_2
      10: aload_1
      11: invokeinterface #163,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      16: ifeq          40
      19: aload_0
      20: aload_1
      21: invokespecial #154                // Method getNext:(Ljava/util/Enumeration;)Lorg/bouncycastle/asn1/ASN1Encodable;
      24: astore_3
      25: iload_2
      26: bipush        17
      28: imul
      29: istore_2
      30: iload_2
      31: aload_3
      32: invokevirtual #134                // Method java/lang/Object.hashCode:()I
      35: ixor
      36: istore_2
      37: goto          10
      40: iload_2
      41: ireturn

  boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_1
       1: instanceof    #71                 // class org/bouncycastle/asn1/ASN1Sequence
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #71                 // class org/bouncycastle/asn1/ASN1Sequence
      13: astore_2
      14: aload_0
      15: invokevirtual #150                // Method size:()I
      18: aload_2
      19: invokevirtual #150                // Method size:()I
      22: if_icmpeq     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #151                // Method getObjects:()Ljava/util/Enumeration;
      31: astore_3
      32: aload_2
      33: invokevirtual #151                // Method getObjects:()Ljava/util/Enumeration;
      36: astore        4
      38: aload_3
      39: invokeinterface #163,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      44: ifeq          102
      47: aload_0
      48: aload_3
      49: invokespecial #154                // Method getNext:(Ljava/util/Enumeration;)Lorg/bouncycastle/asn1/ASN1Encodable;
      52: astore        5
      54: aload_0
      55: aload         4
      57: invokespecial #154                // Method getNext:(Ljava/util/Enumeration;)Lorg/bouncycastle/asn1/ASN1Encodable;
      60: astore        6
      62: aload         5
      64: invokeinterface #165,  1          // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      69: astore        7
      71: aload         6
      73: invokeinterface #165,  1          // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      78: astore        8
      80: aload         7
      82: aload         8
      84: if_acmpeq     38
      87: aload         7
      89: aload         8
      91: invokevirtual #148                // Method org/bouncycastle/asn1/ASN1Primitive.equals:(Ljava/lang/Object;)Z
      94: ifeq          100
      97: goto          38
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn

  private org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration);
    Code:
       0: aload_1
       1: invokeinterface #164,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
       6: checkcast     #68                 // class org/bouncycastle/asn1/ASN1Encodable
       9: astore_2
      10: aload_2
      11: areturn

  org.bouncycastle.asn1.ASN1Primitive toDERObject();
    Code:
       0: new           #77                 // class org/bouncycastle/asn1/DERSequence
       3: dup
       4: invokespecial #160                // Method org/bouncycastle/asn1/DERSequence."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #130                // Field seq:Ljava/util/Vector;
      13: putfield      #130                // Field seq:Ljava/util/Vector;
      16: aload_1
      17: areturn

  org.bouncycastle.asn1.ASN1Primitive toDLObject();
    Code:
       0: new           #78                 // class org/bouncycastle/asn1/DLSequence
       3: dup
       4: invokespecial #161                // Method org/bouncycastle/asn1/DLSequence."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #130                // Field seq:Ljava/util/Vector;
      13: putfield      #130                // Field seq:Ljava/util/Vector;
      16: aload_1
      17: areturn

  boolean isConstructed();
    Code:
       0: iconst_1
       1: ireturn

  abstract void encode(org.bouncycastle.asn1.ASN1OutputStream) throws java.io.IOException;

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #130                // Field seq:Ljava/util/Vector;
       4: invokevirtual #143                // Method java/util/Vector.toString:()Ljava/lang/String;
       7: areturn
}
