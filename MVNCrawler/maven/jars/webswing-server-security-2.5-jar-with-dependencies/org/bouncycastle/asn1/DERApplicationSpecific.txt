public class org.bouncycastle.asn1.DERApplicationSpecific extends org.bouncycastle.asn1.ASN1Primitive {
  private final boolean isConstructed;

  private final int tag;

  private final byte[] octets;

  org.bouncycastle.asn1.DERApplicationSpecific(boolean, int, byte[]);
    Code:
       0: aload_0
       1: invokespecial #183                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #158                // Field isConstructed:Z
       9: aload_0
      10: iload_2
      11: putfield      #157                // Field tag:I
      14: aload_0
      15: aload_3
      16: putfield      #159                // Field octets:[B
      19: return

  public org.bouncycastle.asn1.DERApplicationSpecific(int, byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: aload_2
       4: invokespecial #189                // Method "<init>":(ZI[B)V
       7: return

  public org.bouncycastle.asn1.DERApplicationSpecific(int, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: aload_2
       4: invokespecial #191                // Method "<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
       7: return

  public org.bouncycastle.asn1.DERApplicationSpecific(boolean, int, org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #183                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_3
       5: invokeinterface #197,  1          // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
      10: astore        4
      12: aload         4
      14: ldc           #1                  // String DER
      16: invokevirtual #184                // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:(Ljava/lang/String;)[B
      19: astore        5
      21: aload_0
      22: iload_1
      23: ifne          42
      26: aload         4
      28: instanceof    #99                 // class org/bouncycastle/asn1/ASN1Set
      31: ifne          42
      34: aload         4
      36: instanceof    #98                 // class org/bouncycastle/asn1/ASN1Sequence
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: putfield      #158                // Field isConstructed:Z
      50: aload_0
      51: iload_2
      52: putfield      #157                // Field tag:I
      55: iload_1
      56: ifeq          68
      59: aload_0
      60: aload         5
      62: putfield      #159                // Field octets:[B
      65: goto          105
      68: aload_0
      69: aload         5
      71: invokespecial #190                // Method getLengthOfHeader:([B)I
      74: istore        6
      76: aload         5
      78: arraylength
      79: iload         6
      81: isub
      82: newarray       byte
      84: astore        7
      86: aload         5
      88: iload         6
      90: aload         7
      92: iconst_0
      93: aload         7
      95: arraylength
      96: invokestatic  #174                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: aload_0
     100: aload         7
     102: putfield      #159                // Field octets:[B
     105: return

  public org.bouncycastle.asn1.DERApplicationSpecific(int, org.bouncycastle.asn1.ASN1EncodableVector);
    Code:
       0: aload_0
       1: invokespecial #183                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #157                // Field tag:I
       9: aload_0
      10: iconst_1
      11: putfield      #158                // Field isConstructed:Z
      14: new           #83                 // class java/io/ByteArrayOutputStream
      17: dup
      18: invokespecial #160                // Method java/io/ByteArrayOutputStream."<init>":()V
      21: astore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_2
      28: invokevirtual #175                // Method org/bouncycastle/asn1/ASN1EncodableVector.size:()I
      31: if_icmpeq     93
      34: aload_3
      35: aload_2
      36: iload         4
      38: invokevirtual #176                // Method org/bouncycastle/asn1/ASN1EncodableVector.get:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      41: checkcast     #94                 // class org/bouncycastle/asn1/ASN1Object
      44: ldc           #1                  // String DER
      46: invokevirtual #179                // Method org/bouncycastle/asn1/ASN1Object.getEncoded:(Ljava/lang/String;)[B
      49: invokevirtual #162                // Method java/io/ByteArrayOutputStream.write:([B)V
      52: goto          87
      55: astore        5
      57: new           #96                 // class org/bouncycastle/asn1/ASN1ParsingException
      60: dup
      61: new           #89                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #169                // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #5                  // String malformed object:
      70: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload         5
      75: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: aload         5
      83: invokespecial #182                // Method org/bouncycastle/asn1/ASN1ParsingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      86: athrow
      87: iinc          4, 1
      90: goto          25
      93: aload_0
      94: aload_3
      95: invokevirtual #161                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      98: putfield      #159                // Field octets:[B
     101: return
    Exception table:
       from    to  target type
          34    52    55   Class java/io/IOException

  public static org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #100                // class org/bouncycastle/asn1/DERApplicationSpecific
       8: ifeq          16
      11: aload_0
      12: checkcast     #100                // class org/bouncycastle/asn1/DERApplicationSpecific
      15: areturn
      16: aload_0
      17: instanceof    #82                 // class "[B"
      20: ifeq          68
      23: aload_0
      24: checkcast     #82                 // class "[B"
      27: checkcast     #82                 // class "[B"
      30: invokestatic  #185                // Method org/bouncycastle/asn1/ASN1Primitive.fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      33: invokestatic  #192                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/DERApplicationSpecific;
      36: areturn
      37: astore_1
      38: new           #86                 // class java/lang/IllegalArgumentException
      41: dup
      42: new           #89                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #169                // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #4                  // String failed to construct object from byte[]:
      51: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #163                // Method java/io/IOException.getMessage:()Ljava/lang/String;
      58: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #166                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: new           #86                 // class java/lang/IllegalArgumentException
      71: dup
      72: new           #89                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #169                // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #6                  // String unknown object in getInstance:
      81: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #168                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      88: invokevirtual #165                // Method java/lang/Class.getName:()Ljava/lang/String;
      91: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #166                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
    Exception table:
       from    to  target type
          23    36    37   Class java/io/IOException

  private int getLengthOfHeader(byte[]);
    Code:
       0: aload_1
       1: iconst_1
       2: baload
       3: sipush        255
       6: iand
       7: istore_2
       8: iload_2
       9: sipush        128
      12: if_icmpne     17
      15: iconst_2
      16: ireturn
      17: iload_2
      18: bipush        127
      20: if_icmple     64
      23: iload_2
      24: bipush        127
      26: iand
      27: istore_3
      28: iload_3
      29: iconst_4
      30: if_icmple     60
      33: new           #87                 // class java/lang/IllegalStateException
      36: dup
      37: new           #89                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #169                // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #2                  // String DER length more than 4 bytes:
      46: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_3
      50: invokevirtual #171                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #170                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #167                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: iload_3
      61: iconst_2
      62: iadd
      63: ireturn
      64: iconst_2
      65: ireturn

  public boolean isConstructed();
    Code:
       0: aload_0
       1: getfield      #158                // Field isConstructed:Z
       4: ireturn

  public byte[] getContents();
    Code:
       0: aload_0
       1: getfield      #159                // Field octets:[B
       4: areturn

  public int getApplicationTag();
    Code:
       0: aload_0
       1: getfield      #157                // Field tag:I
       4: ireturn

  public org.bouncycastle.asn1.ASN1Primitive getObject() throws java.io.IOException;
    Code:
       0: new           #93                 // class org/bouncycastle/asn1/ASN1InputStream
       3: dup
       4: aload_0
       5: invokevirtual #186                // Method getContents:()[B
       8: invokespecial #177                // Method org/bouncycastle/asn1/ASN1InputStream."<init>":([B)V
      11: invokevirtual #178                // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      14: areturn

  public org.bouncycastle.asn1.ASN1Primitive getObject(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        31
       3: if_icmplt     16
       6: new           #84                 // class java/io/IOException
       9: dup
      10: ldc           #7                  // String unsupported tag number
      12: invokespecial #164                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: invokevirtual #187                // Method getEncoded:()[B
      20: astore_2
      21: aload_0
      22: iload_1
      23: aload_2
      24: invokespecial #188                // Method replaceTagNumber:(I[B)[B
      27: astore_3
      28: aload_2
      29: iconst_0
      30: baload
      31: bipush        32
      33: iand
      34: ifeq          46
      37: aload_3
      38: iconst_0
      39: dup2
      40: baload
      41: bipush        32
      43: ior
      44: i2b
      45: bastore
      46: new           #93                 // class org/bouncycastle/asn1/ASN1InputStream
      49: dup
      50: aload_3
      51: invokespecial #177                // Method org/bouncycastle/asn1/ASN1InputStream."<init>":([B)V
      54: invokevirtual #178                // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      57: areturn

  int encodedLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #157                // Field tag:I
       4: invokestatic  #194                // Method org/bouncycastle/asn1/StreamUtil.calculateTagLength:(I)I
       7: aload_0
       8: getfield      #159                // Field octets:[B
      11: arraylength
      12: invokestatic  #193                // Method org/bouncycastle/asn1/StreamUtil.calculateBodyLength:(I)I
      15: iadd
      16: aload_0
      17: getfield      #159                // Field octets:[B
      20: arraylength
      21: iadd
      22: ireturn

  void encode(org.bouncycastle.asn1.ASN1OutputStream) throws java.io.IOException;
    Code:
       0: bipush        64
       2: istore_2
       3: aload_0
       4: getfield      #158                // Field isConstructed:Z
       7: ifeq          15
      10: iload_2
      11: bipush        32
      13: ior
      14: istore_2
      15: aload_1
      16: iload_2
      17: aload_0
      18: getfield      #157                // Field tag:I
      21: aload_0
      22: getfield      #159                // Field octets:[B
      25: invokevirtual #180                // Method org/bouncycastle/asn1/ASN1OutputStream.writeEncoded:(II[B)V
      28: return

  boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_1
       1: instanceof    #100                // class org/bouncycastle/asn1/DERApplicationSpecific
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #100                // class org/bouncycastle/asn1/DERApplicationSpecific
      13: astore_2
      14: aload_0
      15: getfield      #158                // Field isConstructed:Z
      18: aload_2
      19: getfield      #158                // Field isConstructed:Z
      22: if_icmpne     54
      25: aload_0
      26: getfield      #157                // Field tag:I
      29: aload_2
      30: getfield      #157                // Field tag:I
      33: if_icmpne     54
      36: aload_0
      37: getfield      #159                // Field octets:[B
      40: aload_2
      41: getfield      #159                // Field octets:[B
      44: invokestatic  #196                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #158                // Field isConstructed:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: aload_0
      13: getfield      #157                // Field tag:I
      16: ixor
      17: aload_0
      18: getfield      #159                // Field octets:[B
      21: invokestatic  #195                // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      24: ixor
      25: ireturn

  private byte[] replaceTagNumber(int, byte[]) throws java.io.IOException;
    Code:
       0: aload_2
       1: iconst_0
       2: baload
       3: bipush        31
       5: iand
       6: istore_3
       7: iconst_1
       8: istore        4
      10: iload_3
      11: bipush        31
      13: if_icmpne     100
      16: iconst_0
      17: istore_3
      18: aload_2
      19: iload         4
      21: iinc          4, 1
      24: baload
      25: sipush        255
      28: iand
      29: istore        5
      31: iload         5
      33: bipush        127
      35: iand
      36: ifne          49
      39: new           #96                 // class org/bouncycastle/asn1/ASN1ParsingException
      42: dup
      43: ldc           #3                  // String corrupted stream - invalid high tag number found
      45: invokespecial #181                // Method org/bouncycastle/asn1/ASN1ParsingException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: iload         5
      51: iflt          92
      54: iload         5
      56: sipush        128
      59: iand
      60: ifeq          92
      63: iload_3
      64: iload         5
      66: bipush        127
      68: iand
      69: ior
      70: istore_3
      71: iload_3
      72: bipush        7
      74: ishl
      75: istore_3
      76: aload_2
      77: iload         4
      79: iinc          4, 1
      82: baload
      83: sipush        255
      86: iand
      87: istore        5
      89: goto          49
      92: iload_3
      93: iload         5
      95: bipush        127
      97: iand
      98: ior
      99: istore_3
     100: aload_2
     101: arraylength
     102: iload         4
     104: isub
     105: iconst_1
     106: iadd
     107: newarray       byte
     109: astore        5
     111: aload_2
     112: iload         4
     114: aload         5
     116: iconst_1
     117: aload         5
     119: arraylength
     120: iconst_1
     121: isub
     122: invokestatic  #174                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: aload         5
     127: iconst_0
     128: iload_1
     129: i2b
     130: bastore
     131: aload         5
     133: areturn
}
