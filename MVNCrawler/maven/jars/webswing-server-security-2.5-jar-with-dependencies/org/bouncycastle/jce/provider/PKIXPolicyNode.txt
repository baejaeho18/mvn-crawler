public class org.bouncycastle.jce.provider.PKIXPolicyNode implements java.security.cert.PolicyNode {
  protected java.util.List children;

  protected int depth;

  protected java.util.Set expectedPolicies;

  protected java.security.cert.PolicyNode parent;

  protected java.util.Set policyQualifiers;

  protected java.lang.String validPolicy;

  protected boolean critical;

  public org.bouncycastle.jce.provider.PKIXPolicyNode(java.util.List, int, java.util.Set, java.security.cert.PolicyNode, java.util.Set, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #119                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #116                // Field children:Ljava/util/List;
       9: aload_0
      10: iload_2
      11: putfield      #112                // Field depth:I
      14: aload_0
      15: aload_3
      16: putfield      #117                // Field expectedPolicies:Ljava/util/Set;
      19: aload_0
      20: aload         4
      22: putfield      #115                // Field parent:Ljava/security/cert/PolicyNode;
      25: aload_0
      26: aload         5
      28: putfield      #118                // Field policyQualifiers:Ljava/util/Set;
      31: aload_0
      32: aload         6
      34: putfield      #114                // Field validPolicy:Ljava/lang/String;
      37: aload_0
      38: iload         7
      40: putfield      #113                // Field critical:Z
      43: return

  public void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode);
    Code:
       0: aload_0
       1: getfield      #116                // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #139,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: invokevirtual #131                // Method setParent:(Lorg/bouncycastle/jce/provider/PKIXPolicyNode;)V
      16: return

  public java.util.Iterator getChildren();
    Code:
       0: aload_0
       1: getfield      #116                // Field children:Ljava/util/List;
       4: invokeinterface #141,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public int getDepth();
    Code:
       0: aload_0
       1: getfield      #112                // Field depth:I
       4: ireturn

  public java.util.Set getExpectedPolicies();
    Code:
       0: aload_0
       1: getfield      #117                // Field expectedPolicies:Ljava/util/Set;
       4: areturn

  public java.security.cert.PolicyNode getParent();
    Code:
       0: aload_0
       1: getfield      #115                // Field parent:Ljava/security/cert/PolicyNode;
       4: areturn

  public java.util.Set getPolicyQualifiers();
    Code:
       0: aload_0
       1: getfield      #118                // Field policyQualifiers:Ljava/util/Set;
       4: areturn

  public java.lang.String getValidPolicy();
    Code:
       0: aload_0
       1: getfield      #114                // Field validPolicy:Ljava/lang/String;
       4: areturn

  public boolean hasChildren();
    Code:
       0: aload_0
       1: getfield      #116                // Field children:Ljava/util/List;
       4: invokeinterface #137,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isCritical();
    Code:
       0: aload_0
       1: getfield      #113                // Field critical:Z
       4: ireturn

  public void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode);
    Code:
       0: aload_0
       1: getfield      #116                // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #140,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void setCritical(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #113                // Field critical:Z
       5: return

  public void setParent(org.bouncycastle.jce.provider.PKIXPolicyNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field parent:Ljava/security/cert/PolicyNode;
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: ldc           #1                  // String
       3: invokevirtual #132                // Method toString:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public java.lang.String toString(java.lang.String);
    Code:
       0: new           #60                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #121                // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #123                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      13: pop
      14: aload_2
      15: aload_0
      16: getfield      #114                // Field validPolicy:Ljava/lang/String;
      19: invokevirtual #123                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: pop
      23: aload_2
      24: ldc           #3                  // String  {\n
      26: invokevirtual #123                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: iconst_0
      31: istore_3
      32: iload_3
      33: aload_0
      34: getfield      #116                // Field children:Ljava/util/List;
      37: invokeinterface #136,  1          // InterfaceMethod java/util/List.size:()I
      42: if_icmpge     91
      45: aload_2
      46: aload_0
      47: getfield      #116                // Field children:Ljava/util/List;
      50: iload_3
      51: invokeinterface #138,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: checkcast     #68                 // class org/bouncycastle/jce/provider/PKIXPolicyNode
      59: new           #61                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #124                // Method java/lang/StringBuilder."<init>":()V
      66: aload_1
      67: invokevirtual #126                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #2                  // String
      72: invokevirtual #126                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokevirtual #132                // Method toString:(Ljava/lang/String;)Ljava/lang/String;
      81: invokevirtual #123                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: pop
      85: iinc          3, 1
      88: goto          32
      91: aload_2
      92: aload_1
      93: invokevirtual #123                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: pop
      97: aload_2
      98: ldc           #4                  // String }\n
     100: invokevirtual #123                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     103: pop
     104: aload_2
     105: invokevirtual #122                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     108: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #129                // Method copy:()Lorg/bouncycastle/jce/provider/PKIXPolicyNode;
       4: areturn

  public org.bouncycastle.jce.provider.PKIXPolicyNode copy();
    Code:
       0: new           #64                 // class java/util/HashSet
       3: dup
       4: invokespecial #128                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #117                // Field expectedPolicies:Ljava/util/Set;
      12: invokeinterface #143,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #134,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          53
      27: aload_1
      28: new           #59                 // class java/lang/String
      31: dup
      32: aload_2
      33: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #59                 // class java/lang/String
      41: invokespecial #120                // Method java/lang/String."<init>":(Ljava/lang/String;)V
      44: invokeinterface #142,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          18
      53: new           #64                 // class java/util/HashSet
      56: dup
      57: invokespecial #128                // Method java/util/HashSet."<init>":()V
      60: astore_3
      61: aload_0
      62: getfield      #118                // Field policyQualifiers:Ljava/util/Set;
      65: invokeinterface #143,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      70: astore_2
      71: aload_2
      72: invokeinterface #134,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          106
      80: aload_3
      81: new           #59                 // class java/lang/String
      84: dup
      85: aload_2
      86: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #59                 // class java/lang/String
      94: invokespecial #120                // Method java/lang/String."<init>":(Ljava/lang/String;)V
      97: invokeinterface #142,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     102: pop
     103: goto          71
     106: new           #68                 // class org/bouncycastle/jce/provider/PKIXPolicyNode
     109: dup
     110: new           #63                 // class java/util/ArrayList
     113: dup
     114: invokespecial #127                // Method java/util/ArrayList."<init>":()V
     117: aload_0
     118: getfield      #112                // Field depth:I
     121: aload_1
     122: aconst_null
     123: aload_3
     124: new           #59                 // class java/lang/String
     127: dup
     128: aload_0
     129: getfield      #114                // Field validPolicy:Ljava/lang/String;
     132: invokespecial #120                // Method java/lang/String."<init>":(Ljava/lang/String;)V
     135: aload_0
     136: getfield      #113                // Field critical:Z
     139: invokespecial #133                // Method "<init>":(Ljava/util/List;ILjava/util/Set;Ljava/security/cert/PolicyNode;Ljava/util/Set;Ljava/lang/String;Z)V
     142: astore        4
     144: aload_0
     145: getfield      #116                // Field children:Ljava/util/List;
     148: invokeinterface #141,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     153: astore_2
     154: aload_2
     155: invokeinterface #134,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     160: ifeq          194
     163: aload_2
     164: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #68                 // class org/bouncycastle/jce/provider/PKIXPolicyNode
     172: invokevirtual #129                // Method copy:()Lorg/bouncycastle/jce/provider/PKIXPolicyNode;
     175: astore        5
     177: aload         5
     179: aload         4
     181: invokevirtual #131                // Method setParent:(Lorg/bouncycastle/jce/provider/PKIXPolicyNode;)V
     184: aload         4
     186: aload         5
     188: invokevirtual #130                // Method addChild:(Lorg/bouncycastle/jce/provider/PKIXPolicyNode;)V
     191: goto          154
     194: aload         4
     196: areturn
}
