class org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher implements org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher {
  private static final java.lang.reflect.Constructor aeadBadTagConstructor;

  private org.bouncycastle.crypto.modes.AEADBlockCipher cipher;

  private static java.lang.reflect.Constructor findExceptionConstructor(java.lang.Class);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #45                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: ldc_w         #50                 // class java/lang/String
      10: aastore
      11: invokevirtual #91                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      14: areturn
      15: astore_1
      16: aconst_null
      17: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher(org.bouncycastle.crypto.modes.AEADBlockCipher);
    Code:
       0: aload_0
       1: invokespecial #92                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       9: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: iload_1
       5: aload_2
       6: invokeinterface #106,  3          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      11: return

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: invokeinterface #105,  1          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;
       9: invokeinterface #98,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      14: areturn

  public boolean wrapOnNoPadding();
    Code:
       0: iconst_0
       1: ireturn

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: invokeinterface #105,  1          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;
       9: areturn

  public int getOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: iload_1
       5: invokeinterface #100,  2          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getOutputSize:(I)I
      10: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: iload_1
       5: invokeinterface #101,  2          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.getUpdateOutputSize:(I)I
      10: ireturn

  public void updateAAD(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #103,  4          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.processAADBytes:([BII)V
      12: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #99,  4           // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.processByte:(B[BI)I
      12: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: iload         5
      11: invokeinterface #104,  6          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.processBytes:([BII[BI)I
      16: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field cipher:Lorg/bouncycastle/crypto/modes/AEADBlockCipher;
       4: aload_1
       5: iload_2
       6: invokeinterface #102,  3          // InterfaceMethod org/bouncycastle/crypto/modes/AEADBlockCipher.doFinal:([BI)I
      11: ireturn
      12: astore_3
      13: getstatic     #89                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      16: ifnull        57
      19: aconst_null
      20: astore        4
      22: getstatic     #89                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      25: iconst_1
      26: anewarray     #49                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_3
      32: invokevirtual #95                 // Method org/bouncycastle/crypto/InvalidCipherTextException.getMessage:()Ljava/lang/String;
      35: aastore
      36: invokevirtual #93                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #52                 // class javax/crypto/BadPaddingException
      42: astore        4
      44: goto          49
      47: astore        5
      49: aload         4
      51: ifnull        57
      54: aload         4
      56: athrow
      57: new           #52                 // class javax/crypto/BadPaddingException
      60: dup
      61: aload_3
      62: invokevirtual #95                 // Method org/bouncycastle/crypto/InvalidCipherTextException.getMessage:()Ljava/lang/String;
      65: invokespecial #94                 // Method javax/crypto/BadPaddingException."<init>":(Ljava/lang/String;)V
      68: athrow
    Exception table:
       from    to  target type
           0    11    12   Class org/bouncycastle/crypto/InvalidCipherTextException
          22    44    47   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #1                  // String javax.crypto.AEADBadTagException
       2: invokestatic  #96                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher.access$000:(Ljava/lang/String;)Ljava/lang/Class;
       5: astore_0
       6: aload_0
       7: ifnull        20
      10: aload_0
      11: invokestatic  #97                 // Method findExceptionConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      14: putstatic     #89                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      17: goto          24
      20: aconst_null
      21: putstatic     #89                 // Field aeadBadTagConstructor:Ljava/lang/reflect/Constructor;
      24: return
}
