Compiled from "AbstractHttpServerConnection.java"
public abstract class org.apache.http.impl.AbstractHttpServerConnection implements org.apache.http.HttpServerConnection {
  private final org.apache.http.impl.entity.EntitySerializer entityserializer;

  private final org.apache.http.impl.entity.EntityDeserializer entitydeserializer;

  private org.apache.http.io.SessionInputBuffer inbuffer;

  private org.apache.http.io.SessionOutputBuffer outbuffer;

  private org.apache.http.io.EofSensor eofSensor;

  private org.apache.http.io.HttpMessageParser requestParser;

  private org.apache.http.io.HttpMessageWriter responseWriter;

  private org.apache.http.impl.HttpConnectionMetricsImpl metrics;

  public org.apache.http.impl.AbstractHttpServerConnection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field inbuffer:Lorg/apache/http/io/SessionInputBuffer;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field outbuffer:Lorg/apache/http/io/SessionOutputBuffer;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field eofSensor:Lorg/apache/http/io/EofSensor;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field requestParser:Lorg/apache/http/io/HttpMessageParser;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field responseWriter:Lorg/apache/http/io/HttpMessageWriter;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field metrics:Lorg/apache/http/impl/HttpConnectionMetricsImpl;
      34: aload_0
      35: aload_0
      36: invokevirtual #8                  // Method createEntitySerializer:()Lorg/apache/http/impl/entity/EntitySerializer;
      39: putfield      #9                  // Field entityserializer:Lorg/apache/http/impl/entity/EntitySerializer;
      42: aload_0
      43: aload_0
      44: invokevirtual #10                 // Method createEntityDeserializer:()Lorg/apache/http/impl/entity/EntityDeserializer;
      47: putfield      #11                 // Field entitydeserializer:Lorg/apache/http/impl/entity/EntityDeserializer;
      50: return

  protected abstract void assertOpen() throws java.lang.IllegalStateException;

  protected org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer();
    Code:
       0: new           #12                 // class org/apache/http/impl/entity/EntityDeserializer
       3: dup
       4: new           #13                 // class org/apache/http/impl/entity/LaxContentLengthStrategy
       7: dup
       8: invokespecial #14                 // Method org/apache/http/impl/entity/LaxContentLengthStrategy."<init>":()V
      11: invokespecial #15                 // Method org/apache/http/impl/entity/EntityDeserializer."<init>":(Lorg/apache/http/entity/ContentLengthStrategy;)V
      14: areturn

  protected org.apache.http.impl.entity.EntitySerializer createEntitySerializer();
    Code:
       0: new           #16                 // class org/apache/http/impl/entity/EntitySerializer
       3: dup
       4: new           #17                 // class org/apache/http/impl/entity/StrictContentLengthStrategy
       7: dup
       8: invokespecial #18                 // Method org/apache/http/impl/entity/StrictContentLengthStrategy."<init>":()V
      11: invokespecial #19                 // Method org/apache/http/impl/entity/EntitySerializer."<init>":(Lorg/apache/http/entity/ContentLengthStrategy;)V
      14: areturn

  protected org.apache.http.HttpRequestFactory createHttpRequestFactory();
    Code:
       0: new           #20                 // class org/apache/http/impl/DefaultHttpRequestFactory
       3: dup
       4: invokespecial #21                 // Method org/apache/http/impl/DefaultHttpRequestFactory."<init>":()V
       7: areturn

  protected org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer, org.apache.http.HttpRequestFactory, org.apache.http.params.HttpParams);
    Code:
       0: new           #22                 // class org/apache/http/impl/io/HttpRequestParser
       3: dup
       4: aload_1
       5: aconst_null
       6: aload_2
       7: aload_3
       8: invokespecial #23                 // Method org/apache/http/impl/io/HttpRequestParser."<init>":(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)V
      11: areturn

  protected org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer, org.apache.http.params.HttpParams);
    Code:
       0: new           #24                 // class org/apache/http/impl/io/HttpResponseWriter
       3: dup
       4: aload_1
       5: aconst_null
       6: aload_2
       7: invokespecial #25                 // Method org/apache/http/impl/io/HttpResponseWriter."<init>":(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/message/LineFormatter;Lorg/apache/http/params/HttpParams;)V
      10: areturn

  protected void init(org.apache.http.io.SessionInputBuffer, org.apache.http.io.SessionOutputBuffer, org.apache.http.params.HttpParams);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #26                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #27                 // String Input session buffer may not be null
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #26                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #29                 // String Output session buffer may not be null
      24: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #2                  // Field inbuffer:Lorg/apache/http/io/SessionInputBuffer;
      33: aload_0
      34: aload_2
      35: putfield      #3                  // Field outbuffer:Lorg/apache/http/io/SessionOutputBuffer;
      38: aload_1
      39: instanceof    #30                 // class org/apache/http/io/EofSensor
      42: ifeq          53
      45: aload_0
      46: aload_1
      47: checkcast     #30                 // class org/apache/http/io/EofSensor
      50: putfield      #4                  // Field eofSensor:Lorg/apache/http/io/EofSensor;
      53: aload_0
      54: aload_0
      55: aload_1
      56: aload_0
      57: invokevirtual #31                 // Method createHttpRequestFactory:()Lorg/apache/http/HttpRequestFactory;
      60: aload_3
      61: invokevirtual #32                 // Method createRequestParser:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;
      64: putfield      #5                  // Field requestParser:Lorg/apache/http/io/HttpMessageParser;
      67: aload_0
      68: aload_0
      69: aload_2
      70: aload_3
      71: invokevirtual #33                 // Method createResponseWriter:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;
      74: putfield      #6                  // Field responseWriter:Lorg/apache/http/io/HttpMessageWriter;
      77: aload_0
      78: new           #34                 // class org/apache/http/impl/HttpConnectionMetricsImpl
      81: dup
      82: aload_1
      83: invokeinterface #35,  1           // InterfaceMethod org/apache/http/io/SessionInputBuffer.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;
      88: aload_2
      89: invokeinterface #36,  1           // InterfaceMethod org/apache/http/io/SessionOutputBuffer.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;
      94: invokespecial #37                 // Method org/apache/http/impl/HttpConnectionMetricsImpl."<init>":(Lorg/apache/http/io/HttpTransportMetrics;Lorg/apache/http/io/HttpTransportMetrics;)V
      97: putfield      #7                  // Field metrics:Lorg/apache/http/impl/HttpConnectionMetricsImpl;
     100: return

  public org.apache.http.HttpRequest receiveRequestHeader() throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method assertOpen:()V
       4: aload_0
       5: getfield      #5                  // Field requestParser:Lorg/apache/http/io/HttpMessageParser;
       8: invokeinterface #39,  1           // InterfaceMethod org/apache/http/io/HttpMessageParser.parse:()Lorg/apache/http/HttpMessage;
      13: checkcast     #40                 // class org/apache/http/HttpRequest
      16: astore_1
      17: aload_0
      18: getfield      #7                  // Field metrics:Lorg/apache/http/impl/HttpConnectionMetricsImpl;
      21: invokevirtual #41                 // Method org/apache/http/impl/HttpConnectionMetricsImpl.incrementRequestCount:()V
      24: aload_1
      25: areturn

  public void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #26                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #42                 // String HTTP request may not be null
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #38                 // Method assertOpen:()V
      18: aload_0
      19: getfield      #11                 // Field entitydeserializer:Lorg/apache/http/impl/entity/EntityDeserializer;
      22: aload_0
      23: getfield      #2                  // Field inbuffer:Lorg/apache/http/io/SessionInputBuffer;
      26: aload_1
      27: invokevirtual #43                 // Method org/apache/http/impl/entity/EntityDeserializer.deserialize:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/HttpEntity;
      30: astore_2
      31: aload_1
      32: aload_2
      33: invokeinterface #44,  2           // InterfaceMethod org/apache/http/HttpEntityEnclosingRequest.setEntity:(Lorg/apache/http/HttpEntity;)V
      38: return

  protected void doFlush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field outbuffer:Lorg/apache/http/io/SessionOutputBuffer;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/http/io/SessionOutputBuffer.flush:()V
       9: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method assertOpen:()V
       4: aload_0
       5: invokevirtual #46                 // Method doFlush:()V
       8: return

  public void sendResponseHeader(org.apache.http.HttpResponse) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #26                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #47                 // String HTTP response may not be null
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #38                 // Method assertOpen:()V
      18: aload_0
      19: getfield      #6                  // Field responseWriter:Lorg/apache/http/io/HttpMessageWriter;
      22: aload_1
      23: invokeinterface #48,  2           // InterfaceMethod org/apache/http/io/HttpMessageWriter.write:(Lorg/apache/http/HttpMessage;)V
      28: aload_1
      29: invokeinterface #49,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      34: invokeinterface #50,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      39: sipush        200
      42: if_icmplt     52
      45: aload_0
      46: getfield      #7                  // Field metrics:Lorg/apache/http/impl/HttpConnectionMetricsImpl;
      49: invokevirtual #51                 // Method org/apache/http/impl/HttpConnectionMetricsImpl.incrementResponseCount:()V
      52: return

  public void sendResponseEntity(org.apache.http.HttpResponse) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
       6: ifnonnull     10
       9: return
      10: aload_0
      11: getfield      #9                  // Field entityserializer:Lorg/apache/http/impl/entity/EntitySerializer;
      14: aload_0
      15: getfield      #3                  // Field outbuffer:Lorg/apache/http/io/SessionOutputBuffer;
      18: aload_1
      19: aload_1
      20: invokeinterface #52,  1           // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
      25: invokevirtual #53                 // Method org/apache/http/impl/entity/EntitySerializer.serialize:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;Lorg/apache/http/HttpEntity;)V
      28: return

  protected boolean isEof();
    Code:
       0: aload_0
       1: getfield      #4                  // Field eofSensor:Lorg/apache/http/io/EofSensor;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field eofSensor:Lorg/apache/http/io/EofSensor;
      11: invokeinterface #54,  1           // InterfaceMethod org/apache/http/io/EofSensor.isEof:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isStale();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method isOpen:()Z
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: invokevirtual #56                 // Method isEof:()Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #2                  // Field inbuffer:Lorg/apache/http/io/SessionInputBuffer;
      22: iconst_1
      23: invokeinterface #57,  2           // InterfaceMethod org/apache/http/io/SessionInputBuffer.isDataAvailable:(I)Z
      28: pop
      29: aload_0
      30: invokevirtual #56                 // Method isEof:()Z
      33: ireturn
      34: astore_1
      35: iconst_1
      36: ireturn
    Exception table:
       from    to  target type
          18    33    34   Class java/io/IOException

  public org.apache.http.HttpConnectionMetrics getMetrics();
    Code:
       0: aload_0
       1: getfield      #7                  // Field metrics:Lorg/apache/http/impl/HttpConnectionMetricsImpl;
       4: areturn
}
