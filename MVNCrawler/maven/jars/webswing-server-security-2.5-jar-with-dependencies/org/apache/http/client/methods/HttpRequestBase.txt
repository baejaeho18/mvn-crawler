Compiled from "HttpRequestBase.java"
public abstract class org.apache.http.client.methods.HttpRequestBase extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable {
  private java.util.concurrent.locks.Lock abortLock;

  private boolean aborted;

  private java.net.URI uri;

  private org.apache.http.conn.ClientConnectionRequest connRequest;

  private org.apache.http.conn.ConnectionReleaseTrigger releaseTrigger;

  public org.apache.http.client.methods.HttpRequestBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/http/message/AbstractHttpMessage."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      15: return

  public abstract java.lang.String getMethod();

  public org.apache.http.ProtocolVersion getProtocolVersion();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getParams:()Lorg/apache/http/params/HttpParams;
       4: invokestatic  #6                  // Method org/apache/http/params/HttpProtocolParams.getVersion:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/ProtocolVersion;
       7: areturn

  public java.net.URI getURI();
    Code:
       0: aload_0
       1: getfield      #7                  // Field uri:Ljava/net/URI;
       4: areturn

  public org.apache.http.RequestLine getRequestLine();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getMethod:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: invokevirtual #9                  // Method getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
       9: astore_2
      10: aload_0
      11: invokevirtual #10                 // Method getURI:()Ljava/net/URI;
      14: astore_3
      15: aconst_null
      16: astore        4
      18: aload_3
      19: ifnull        28
      22: aload_3
      23: invokevirtual #11                 // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      26: astore        4
      28: aload         4
      30: ifnull        41
      33: aload         4
      35: invokevirtual #12                 // Method java/lang/String.length:()I
      38: ifne          45
      41: ldc           #13                 // String /
      43: astore        4
      45: new           #14                 // class org/apache/http/message/BasicRequestLine
      48: dup
      49: aload_1
      50: aload         4
      52: aload_2
      53: invokespecial #15                 // Method org/apache/http/message/BasicRequestLine."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V
      56: areturn

  public void setURI(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field uri:Ljava/net/URI;
       5: return

  public void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #17                 // Field aborted:Z
      13: ifeq          26
      16: new           #18                 // class java/io/IOException
      19: dup
      20: ldc           #19                 // String Request already aborted
      22: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aconst_null
      28: putfield      #21                 // Field releaseTrigger:Lorg/apache/http/conn/ConnectionReleaseTrigger;
      31: aload_0
      32: aload_1
      33: putfield      #22                 // Field connRequest:Lorg/apache/http/conn/ClientConnectionRequest;
      36: aload_0
      37: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      40: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      45: goto          60
      48: astore_2
      49: aload_0
      50: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      53: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      58: aload_2
      59: athrow
      60: return
    Exception table:
       from    to  target type
           9    36    48   any
          48    49    48   any

  public void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #17                 // Field aborted:Z
      13: ifeq          26
      16: new           #18                 // class java/io/IOException
      19: dup
      20: ldc           #19                 // String Request already aborted
      22: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: aconst_null
      28: putfield      #22                 // Field connRequest:Lorg/apache/http/conn/ClientConnectionRequest;
      31: aload_0
      32: aload_1
      33: putfield      #21                 // Field releaseTrigger:Lorg/apache/http/conn/ConnectionReleaseTrigger;
      36: aload_0
      37: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      40: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      45: goto          60
      48: astore_2
      49: aload_0
      50: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      53: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      58: aload_2
      59: athrow
      60: return
    Exception table:
       from    to  target type
           9    36    48   any
          48    49    48   any

  public void abort();
    Code:
       0: aload_0
       1: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #17                 // Field aborted:Z
      13: ifeq          26
      16: aload_0
      17: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: return
      26: aload_0
      27: iconst_1
      28: putfield      #17                 // Field aborted:Z
      31: aload_0
      32: getfield      #22                 // Field connRequest:Lorg/apache/http/conn/ClientConnectionRequest;
      35: astore_1
      36: aload_0
      37: getfield      #21                 // Field releaseTrigger:Lorg/apache/http/conn/ConnectionReleaseTrigger;
      40: astore_2
      41: aload_0
      42: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: goto          65
      53: astore_3
      54: aload_0
      55: getfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      58: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      63: aload_3
      64: athrow
      65: aload_1
      66: ifnull        75
      69: aload_1
      70: invokeinterface #24,  1           // InterfaceMethod org/apache/http/conn/ClientConnectionRequest.abortRequest:()V
      75: aload_2
      76: ifnull        89
      79: aload_2
      80: invokeinterface #25,  1           // InterfaceMethod org/apache/http/conn/ConnectionReleaseTrigger.abortConnection:()V
      85: goto          89
      88: astore_3
      89: return
    Exception table:
       from    to  target type
           9    16    53   any
          26    41    53   any
          53    54    53   any
          79    85    88   Class java/io/IOException

  public boolean isAborted();
    Code:
       0: aload_0
       1: getfield      #17                 // Field aborted:Z
       4: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #27                 // class org/apache/http/client/methods/HttpRequestBase
       7: astore_1
       8: aload_1
       9: new           #2                  // class java/util/concurrent/locks/ReentrantLock
      12: dup
      13: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      16: putfield      #4                  // Field abortLock:Ljava/util/concurrent/locks/Lock;
      19: aload_1
      20: iconst_0
      21: putfield      #17                 // Field aborted:Z
      24: aload_1
      25: aconst_null
      26: putfield      #21                 // Field releaseTrigger:Lorg/apache/http/conn/ConnectionReleaseTrigger;
      29: aload_1
      30: aconst_null
      31: putfield      #22                 // Field connRequest:Lorg/apache/http/conn/ClientConnectionRequest;
      34: aload_1
      35: aload_0
      36: getfield      #28                 // Field headergroup:Lorg/apache/http/message/HeaderGroup;
      39: invokestatic  #29                 // Method org/apache/http/client/utils/CloneUtils.clone:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #30                 // class org/apache/http/message/HeaderGroup
      45: putfield      #28                 // Field headergroup:Lorg/apache/http/message/HeaderGroup;
      48: aload_1
      49: aload_0
      50: getfield      #31                 // Field params:Lorg/apache/http/params/HttpParams;
      53: invokestatic  #29                 // Method org/apache/http/client/utils/CloneUtils.clone:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #32                 // class org/apache/http/params/HttpParams
      59: putfield      #31                 // Field params:Lorg/apache/http/params/HttpParams;
      62: aload_1
      63: areturn
}
