Compiled from "ProtocolVersion.java"
public class org.apache.http.ProtocolVersion implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  protected final java.lang.String protocol;

  protected final int major;

  protected final int minor;

  public org.apache.http.ProtocolVersion(java.lang.String, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Protocol name must not be null.
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_2
      19: ifge          32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String Protocol major version number must not be negative.
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_3
      33: ifge          46
      36: new           #2                  // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #6                  // String Protocol minor version number may not be negative
      42: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #7                  // Field protocol:Ljava/lang/String;
      51: aload_0
      52: iload_2
      53: putfield      #8                  // Field major:I
      56: aload_0
      57: iload_3
      58: putfield      #9                  // Field minor:I
      61: return

  public final java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #7                  // Field protocol:Ljava/lang/String;
       4: areturn

  public final int getMajor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field major:I
       4: ireturn

  public final int getMinor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field minor:I
       4: ireturn

  public org.apache.http.ProtocolVersion forVersion(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #8                  // Field major:I
       5: if_icmpne     18
       8: iload_2
       9: aload_0
      10: getfield      #9                  // Field minor:I
      13: if_icmpne     18
      16: aload_0
      17: areturn
      18: new           #10                 // class org/apache/http/ProtocolVersion
      21: dup
      22: aload_0
      23: getfield      #7                  // Field protocol:Ljava/lang/String;
      26: iload_1
      27: iload_2
      28: invokespecial #11                 // Method "<init>":(Ljava/lang/String;II)V
      31: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field protocol:Ljava/lang/String;
       4: invokevirtual #12                 // Method java/lang/String.hashCode:()I
       7: aload_0
       8: getfield      #8                  // Field major:I
      11: ldc           #13                 // int 100000
      13: imul
      14: ixor
      15: aload_0
      16: getfield      #9                  // Field minor:I
      19: ixor
      20: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class org/apache/http/ProtocolVersion
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #10                 // class org/apache/http/ProtocolVersion
      20: astore_2
      21: aload_0
      22: getfield      #7                  // Field protocol:Ljava/lang/String;
      25: aload_2
      26: getfield      #7                  // Field protocol:Ljava/lang/String;
      29: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          61
      35: aload_0
      36: getfield      #8                  // Field major:I
      39: aload_2
      40: getfield      #8                  // Field major:I
      43: if_icmpne     61
      46: aload_0
      47: getfield      #9                  // Field minor:I
      50: aload_2
      51: getfield      #9                  // Field minor:I
      54: if_icmpne     61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public boolean isComparable(org.apache.http.ProtocolVersion);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_0
       5: getfield      #7                  // Field protocol:Ljava/lang/String;
       8: aload_1
       9: getfield      #7                  // Field protocol:Ljava/lang/String;
      12: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int compareToVersion(org.apache.http.ProtocolVersion);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Protocol version must not be null.
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #7                  // Field protocol:Ljava/lang/String;
      18: aload_1
      19: getfield      #7                  // Field protocol:Ljava/lang/String;
      22: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          64
      28: new           #2                  // class java/lang/IllegalArgumentException
      31: dup
      32: new           #16                 // class java/lang/StringBuffer
      35: dup
      36: invokespecial #17                 // Method java/lang/StringBuffer."<init>":()V
      39: ldc           #18                 // String Versions for different protocols cannot be compared.
      41: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: aload_0
      45: invokevirtual #20                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      48: ldc           #21                 // String
      50: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: aload_1
      54: invokevirtual #20                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      57: invokevirtual #22                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      60: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokevirtual #23                 // Method getMajor:()I
      68: aload_1
      69: invokevirtual #23                 // Method getMajor:()I
      72: isub
      73: istore_2
      74: iload_2
      75: ifne          88
      78: aload_0
      79: invokevirtual #24                 // Method getMinor:()I
      82: aload_1
      83: invokevirtual #24                 // Method getMinor:()I
      86: isub
      87: istore_2
      88: iload_2
      89: ireturn

  public final boolean greaterEquals(org.apache.http.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isComparable:(Lorg/apache/http/ProtocolVersion;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokevirtual #26                 // Method compareToVersion:(Lorg/apache/http/ProtocolVersion;)I
      13: iflt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public final boolean lessEquals(org.apache.http.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method isComparable:(Lorg/apache/http/ProtocolVersion;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokevirtual #26                 // Method compareToVersion:(Lorg/apache/http/ProtocolVersion;)I
      13: ifgt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class org/apache/http/util/CharArrayBuffer
       3: dup
       4: bipush        16
       6: invokespecial #28                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #7                  // Field protocol:Ljava/lang/String;
      15: invokevirtual #29                 // Method org/apache/http/util/CharArrayBuffer.append:(Ljava/lang/String;)V
      18: aload_1
      19: bipush        47
      21: invokevirtual #30                 // Method org/apache/http/util/CharArrayBuffer.append:(C)V
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field major:I
      29: invokestatic  #31                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      32: invokevirtual #29                 // Method org/apache/http/util/CharArrayBuffer.append:(Ljava/lang/String;)V
      35: aload_1
      36: bipush        46
      38: invokevirtual #30                 // Method org/apache/http/util/CharArrayBuffer.append:(C)V
      41: aload_1
      42: aload_0
      43: getfield      #9                  // Field minor:I
      46: invokestatic  #31                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      49: invokevirtual #29                 // Method org/apache/http/util/CharArrayBuffer.append:(Ljava/lang/String;)V
      52: aload_1
      53: invokevirtual #32                 // Method org/apache/http/util/CharArrayBuffer.toString:()Ljava/lang/String;
      56: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn
}
