Compiled from "DEREnumerated.java"
public class org.apache.commons.ssl.asn1.DEREnumerated extends org.apache.commons.ssl.asn1.ASN1Object {
  byte[] bytes;

  public static org.apache.commons.ssl.asn1.DEREnumerated getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #1                  // class org/apache/commons/ssl/asn1/DEREnumerated
       8: ifeq          16
      11: aload_0
      12: checkcast     #1                  // class org/apache/commons/ssl/asn1/DEREnumerated
      15: areturn
      16: aload_0
      17: instanceof    #2                  // class org/apache/commons/ssl/asn1/ASN1OctetString
      20: ifeq          38
      23: new           #1                  // class org/apache/commons/ssl/asn1/DEREnumerated
      26: dup
      27: aload_0
      28: checkcast     #2                  // class org/apache/commons/ssl/asn1/ASN1OctetString
      31: invokevirtual #3                  // Method org/apache/commons/ssl/asn1/ASN1OctetString.getOctets:()[B
      34: invokespecial #4                  // Method "<init>":([B)V
      37: areturn
      38: aload_0
      39: instanceof    #5                  // class org/apache/commons/ssl/asn1/ASN1TaggedObject
      42: ifeq          56
      45: aload_0
      46: checkcast     #5                  // class org/apache/commons/ssl/asn1/ASN1TaggedObject
      49: invokevirtual #6                  // Method org/apache/commons/ssl/asn1/ASN1TaggedObject.getObject:()Lorg/apache/commons/ssl/asn1/DERObject;
      52: invokestatic  #7                  // Method getInstance:(Ljava/lang/Object;)Lorg/apache/commons/ssl/asn1/DEREnumerated;
      55: areturn
      56: new           #8                  // class java/lang/IllegalArgumentException
      59: dup
      60: new           #9                  // class java/lang/StringBuffer
      63: dup
      64: invokespecial #10                 // Method java/lang/StringBuffer."<init>":()V
      67: ldc           #11                 // String illegal object in getInstance:
      69: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      72: aload_0
      73: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      76: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      79: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      82: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      85: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow

  public static org.apache.commons.ssl.asn1.DEREnumerated getInstance(org.apache.commons.ssl.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method org/apache/commons/ssl/asn1/ASN1TaggedObject.getObject:()Lorg/apache/commons/ssl/asn1/DERObject;
       4: invokestatic  #7                  // Method getInstance:(Ljava/lang/Object;)Lorg/apache/commons/ssl/asn1/DEREnumerated;
       7: areturn

  public org.apache.commons.ssl.asn1.DEREnumerated(int);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/commons/ssl/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: iload_1
       6: i2l
       7: invokestatic  #18                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      10: invokevirtual #19                 // Method java/math/BigInteger.toByteArray:()[B
      13: putfield      #20                 // Field bytes:[B
      16: return

  public org.apache.commons.ssl.asn1.DEREnumerated(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/commons/ssl/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #19                 // Method java/math/BigInteger.toByteArray:()[B
       9: putfield      #20                 // Field bytes:[B
      12: return

  public org.apache.commons.ssl.asn1.DEREnumerated(byte[]);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/commons/ssl/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field bytes:[B
       9: return

  public java.math.BigInteger getValue();
    Code:
       0: new           #21                 // class java/math/BigInteger
       3: dup
       4: aload_0
       5: getfield      #20                 // Field bytes:[B
       8: invokespecial #22                 // Method java/math/BigInteger."<init>":([B)V
      11: areturn

  void encode(org.apache.commons.ssl.asn1.DEROutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        10
       3: aload_0
       4: getfield      #20                 // Field bytes:[B
       7: invokevirtual #23                 // Method org/apache/commons/ssl/asn1/DEROutputStream.writeEncoded:(I[B)V
      10: return

  boolean asn1Equals(org.apache.commons.ssl.asn1.DERObject);
    Code:
       0: aload_1
       1: instanceof    #1                  // class org/apache/commons/ssl/asn1/DEREnumerated
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #1                  // class org/apache/commons/ssl/asn1/DEREnumerated
      13: astore_2
      14: aload_0
      15: getfield      #20                 // Field bytes:[B
      18: arraylength
      19: aload_2
      20: getfield      #20                 // Field bytes:[B
      23: arraylength
      24: if_icmpeq     29
      27: iconst_0
      28: ireturn
      29: iconst_0
      30: istore_3
      31: iload_3
      32: aload_0
      33: getfield      #20                 // Field bytes:[B
      36: arraylength
      37: if_icmpeq     63
      40: aload_0
      41: getfield      #20                 // Field bytes:[B
      44: iload_3
      45: baload
      46: aload_2
      47: getfield      #20                 // Field bytes:[B
      50: iload_3
      51: baload
      52: if_icmpeq     57
      55: iconst_0
      56: ireturn
      57: iinc          3, 1
      60: goto          31
      63: iconst_1
      64: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getValue:()Ljava/math/BigInteger;
       4: invokevirtual #25                 // Method java/math/BigInteger.hashCode:()I
       7: ireturn
}
