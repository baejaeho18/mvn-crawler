Compiled from "SSLServer.java"
public class org.apache.commons.ssl.SSLServer extends javax.net.ssl.SSLServerSocketFactory {
  protected final org.apache.commons.ssl.SSL ssl;

  public org.apache.commons.ssl.SSLServer() throws java.security.GeneralSecurityException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/net/ssl/SSLServerSocketFactory."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/ssl/SSL
       8: dup
       9: invokespecial #3                  // Method org/apache/commons/ssl/SSL."<init>":()V
      12: putfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
      15: aload_0
      16: iconst_0
      17: invokevirtual #5                  // Method setCheckHostname:(Z)V
      20: aload_0
      21: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
      24: getfield      #6                  // Field org/apache/commons/ssl/SSL.usingSystemProperties:Z
      27: ifne          35
      30: aload_0
      31: invokespecial #7                  // Method useDefaultKeyMaterial:()Z
      34: pop
      35: return

  public boolean useTomcatSSLMaterial() throws java.security.GeneralSecurityException, java.io.IOException;
    Code:
       0: new           #8                  // class java/lang/Integer
       3: dup
       4: sipush        8443
       7: invokespecial #9                  // Method java/lang/Integer."<init>":(I)V
      10: astore_1
      11: getstatic     #10                 // Field org/apache/commons/ssl/TomcatServerXML.KEY_MATERIAL_BY_PORT:Ljava/util/SortedMap;
      14: aload_1
      15: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #12                 // class org/apache/commons/ssl/KeyMaterial
      23: astore_2
      24: getstatic     #13                 // Field org/apache/commons/ssl/TomcatServerXML.TRUST_MATERIAL_BY_PORT:Ljava/util/SortedMap;
      27: aload_1
      28: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #14                 // class org/apache/commons/ssl/TrustMaterial
      36: astore_3
      37: aload_2
      38: ifnonnull     47
      41: getstatic     #15                 // Field org/apache/commons/ssl/TomcatServerXML.KEY_MATERIAL:Lorg/apache/commons/ssl/KeyMaterial;
      44: goto          48
      47: aload_2
      48: astore_2
      49: aload_3
      50: ifnonnull     59
      53: getstatic     #16                 // Field org/apache/commons/ssl/TomcatServerXML.TRUST_MATERIAL:Lorg/apache/commons/ssl/TrustMaterial;
      56: goto          60
      59: aload_3
      60: astore_3
      61: iconst_0
      62: istore        4
      64: aload_2
      65: ifnull        95
      68: aload_0
      69: aload_2
      70: invokevirtual #17                 // Method setKeyMaterial:(Lorg/apache/commons/ssl/KeyMaterial;)V
      73: iconst_1
      74: istore        4
      76: aload_3
      77: ifnull        95
      80: getstatic     #18                 // Field org/apache/commons/ssl/TrustMaterial.DEFAULT:Lorg/apache/commons/ssl/TrustMaterial;
      83: aload_3
      84: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          95
      90: aload_0
      91: aload_3
      92: invokevirtual #20                 // Method setTrustMaterial:(Lorg/apache/commons/ssl/TrustChain;)V
      95: iload         4
      97: ireturn

  private boolean useDefaultKeyMaterial() throws java.security.GeneralSecurityException, java.io.IOException;
    Code:
       0: invokestatic  #21                 // Method java/lang/System.getProperties:()Ljava/util/Properties;
       3: astore_1
       4: aload_1
       5: ldc           #22                 // String javax.net.ssl.keyStorePassword
       7: invokevirtual #23                 // Method java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
      10: istore_2
      11: aload_1
      12: ldc           #22                 // String javax.net.ssl.keyStorePassword
      14: invokevirtual #24                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_3
      18: iload_2
      19: ifeq          26
      22: aload_3
      23: goto          28
      26: ldc           #25                 // String changeit
      28: astore_3
      29: ldc           #26                 // String user.home
      31: invokestatic  #27                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      34: astore        4
      36: new           #28                 // class java/lang/StringBuffer
      39: dup
      40: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
      43: aload         4
      45: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: ldc           #31                 // String /.keystore
      50: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: invokevirtual #32                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      56: astore        5
      58: new           #33                 // class java/io/File
      61: dup
      62: aload         5
      64: invokespecial #34                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      67: astore        6
      69: iconst_0
      70: istore        7
      72: aload         6
      74: invokevirtual #35                 // Method java/io/File.exists:()Z
      77: ifeq          160
      80: aconst_null
      81: astore        8
      83: new           #12                 // class org/apache/commons/ssl/KeyMaterial
      86: dup
      87: aload         5
      89: aload_3
      90: invokevirtual #36                 // Method java/lang/String.toCharArray:()[C
      93: invokespecial #37                 // Method org/apache/commons/ssl/KeyMaterial."<init>":(Ljava/lang/String;[C)V
      96: astore        8
      98: goto          146
     101: astore        9
     103: iload_2
     104: ifeq          146
     107: getstatic     #39                 // Field java/lang/System.err:Ljava/io/PrintStream;
     110: new           #28                 // class java/lang/StringBuffer
     113: dup
     114: invokespecial #29                 // Method java/lang/StringBuffer."<init>":()V
     117: ldc           #40                 // String commons-ssl automatic loading of [
     119: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     122: aload         5
     124: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     127: ldc           #41                 // String ] failed.
     129: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     132: invokevirtual #32                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     135: invokevirtual #42                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     138: getstatic     #39                 // Field java/lang/System.err:Ljava/io/PrintStream;
     141: aload         9
     143: invokevirtual #43                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
     146: aload         8
     148: ifnull        160
     151: aload_0
     152: aload         8
     154: invokevirtual #17                 // Method setKeyMaterial:(Lorg/apache/commons/ssl/KeyMaterial;)V
     157: iconst_1
     158: istore        7
     160: iload         7
     162: ireturn
    Exception table:
       from    to  target type
          83    98   101   Class java/lang/Exception

  public void addTrustMaterial(org.apache.commons.ssl.TrustChain) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.KeyManagementException, java.io.IOException, java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #44                 // Method org/apache/commons/ssl/SSL.addTrustMaterial:(Lorg/apache/commons/ssl/TrustChain;)V
       8: return

  public void setTrustMaterial(org.apache.commons.ssl.TrustChain) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.KeyManagementException, java.io.IOException, java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #45                 // Method org/apache/commons/ssl/SSL.setTrustMaterial:(Lorg/apache/commons/ssl/TrustChain;)V
       8: return

  public void setKeyMaterial(org.apache.commons.ssl.KeyMaterial) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.KeyManagementException, java.io.IOException, java.security.cert.CertificateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #46                 // Method org/apache/commons/ssl/SSL.setKeyMaterial:(Lorg/apache/commons/ssl/KeyMaterial;)V
       8: return

  public void addAllowedName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #47                 // Method org/apache/commons/ssl/SSL.addAllowedName:(Ljava/lang/String;)V
       8: return

  public void addAllowedNames(java.util.Collection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #48                 // Method org/apache/commons/ssl/SSL.addAllowedNames:(Ljava/util/Collection;)V
       8: return

  public void clearAllowedNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #49                 // Method org/apache/commons/ssl/SSL.clearAllowedNames:()V
       7: return

  public void setCheckCRL(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #50                 // Method org/apache/commons/ssl/SSL.setCheckCRL:(Z)V
       8: return

  public void setCheckExpiry(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #51                 // Method org/apache/commons/ssl/SSL.setCheckExpiry:(Z)V
       8: return

  public void setCheckHostname(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #52                 // Method org/apache/commons/ssl/SSL.setCheckHostname:(Z)V
       8: return

  public void setConnectTimeout(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #53                 // Method org/apache/commons/ssl/SSL.setConnectTimeout:(I)V
       8: return

  public void setDefaultProtocol(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #54                 // Method org/apache/commons/ssl/SSL.setDefaultProtocol:(Ljava/lang/String;)V
       8: return

  public void useDefaultJavaCiphers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #55                 // Method org/apache/commons/ssl/SSL.useDefaultJavaCiphers:()V
       7: return

  public void useStrongCiphers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #56                 // Method org/apache/commons/ssl/SSL.useStrongCiphers:()V
       7: return

  public void setEnabledCiphers(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #57                 // Method org/apache/commons/ssl/SSL.setEnabledCiphers:([Ljava/lang/String;)V
       8: return

  public void setEnabledProtocols(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #58                 // Method org/apache/commons/ssl/SSL.setEnabledProtocols:([Ljava/lang/String;)V
       8: return

  public void setHostnameVerifier(org.apache.commons.ssl.HostnameVerifier);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #59                 // Method org/apache/commons/ssl/SSL.setHostnameVerifier:(Lorg/apache/commons/ssl/HostnameVerifier;)V
       8: return

  public void setSoTimeout(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #60                 // Method org/apache/commons/ssl/SSL.setSoTimeout:(I)V
       8: return

  public void setSSLWrapperFactory(org.apache.commons.ssl.SSLWrapperFactory);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: aload_1
       5: invokevirtual #61                 // Method org/apache/commons/ssl/SSL.setSSLWrapperFactory:(Lorg/apache/commons/ssl/SSLWrapperFactory;)V
       8: return

  public void setNeedClientAuth(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #62                 // Method org/apache/commons/ssl/SSL.setNeedClientAuth:(Z)V
       8: return

  public void setWantClientAuth(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #63                 // Method org/apache/commons/ssl/SSL.setWantClientAuth:(Z)V
       8: return

  public void setUseClientMode(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: invokevirtual #64                 // Method org/apache/commons/ssl/SSL.setUseClientMode:(Z)V
       8: return

  public java.util.List getAllowedNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #65                 // Method org/apache/commons/ssl/SSL.getAllowedNames:()Ljava/util/List;
       7: areturn

  public java.security.cert.X509Certificate[] getAssociatedCertificateChain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #66                 // Method org/apache/commons/ssl/SSL.getAssociatedCertificateChain:()[Ljava/security/cert/X509Certificate;
       7: areturn

  public boolean getCheckCRL();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #67                 // Method org/apache/commons/ssl/SSL.getCheckCRL:()Z
       7: ireturn

  public boolean getCheckExpiry();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #68                 // Method org/apache/commons/ssl/SSL.getCheckExpiry:()Z
       7: ireturn

  public boolean getCheckHostname();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #69                 // Method org/apache/commons/ssl/SSL.getCheckHostname:()Z
       7: ireturn

  public int getConnectTimeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #70                 // Method org/apache/commons/ssl/SSL.getConnectTimeout:()I
       7: ireturn

  public java.lang.String getDefaultProtocol();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #71                 // Method org/apache/commons/ssl/SSL.getDefaultProtocol:()Ljava/lang/String;
       7: areturn

  public java.lang.String[] getEnabledCiphers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #72                 // Method org/apache/commons/ssl/SSL.getEnabledCiphers:()[Ljava/lang/String;
       7: areturn

  public java.lang.String[] getEnabledProtocols();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #73                 // Method org/apache/commons/ssl/SSL.getEnabledProtocols:()[Ljava/lang/String;
       7: areturn

  public org.apache.commons.ssl.HostnameVerifier getHostnameVerifier();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #74                 // Method org/apache/commons/ssl/SSL.getHostnameVerifier:()Lorg/apache/commons/ssl/HostnameVerifier;
       7: areturn

  public int getSoTimeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #75                 // Method org/apache/commons/ssl/SSL.getSoTimeout:()I
       7: ireturn

  public org.apache.commons.ssl.SSLWrapperFactory getSSLWrapperFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #76                 // Method org/apache/commons/ssl/SSL.getSSLWrapperFactory:()Lorg/apache/commons/ssl/SSLWrapperFactory;
       7: areturn

  public boolean getNeedClientAuth();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #77                 // Method org/apache/commons/ssl/SSL.getNeedClientAuth:()Z
       7: ireturn

  public boolean getWantClientAuth();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #78                 // Method org/apache/commons/ssl/SSL.getWantClientAuth:()Z
       7: ireturn

  public boolean getUseClientMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #79                 // Method org/apache/commons/ssl/SSL.getUseClientModeDefault:()Z
       7: ifne          24
      10: aload_0
      11: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
      14: invokevirtual #80                 // Method org/apache/commons/ssl/SSL.getUseClientMode:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public javax.net.ssl.SSLContext getSSLContext() throws java.security.GeneralSecurityException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #81                 // Method org/apache/commons/ssl/SSL.getSSLContext:()Ljavax/net/ssl/SSLContext;
       7: areturn

  public org.apache.commons.ssl.TrustChain getTrustChain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #82                 // Method org/apache/commons/ssl/SSL.getTrustChain:()Lorg/apache/commons/ssl/TrustChain;
       7: areturn

  public java.security.cert.X509Certificate[] getCurrentClientChain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #83                 // Method org/apache/commons/ssl/SSL.getCurrentClientChain:()[Ljava/security/cert/X509Certificate;
       7: areturn

  public java.lang.String[] getDefaultCipherSuites();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #84                 // Method org/apache/commons/ssl/SSL.getDefaultCipherSuites:()[Ljava/lang/String;
       7: areturn

  public java.lang.String[] getSupportedCipherSuites();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #85                 // Method org/apache/commons/ssl/SSL.getSupportedCipherSuites:()[Ljava/lang/String;
       7: areturn

  public java.net.ServerSocket createServerSocket() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: invokevirtual #86                 // Method org/apache/commons/ssl/SSL.createServerSocket:()Ljava/net/ServerSocket;
       7: areturn

  public java.net.ServerSocket createServerSocket(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: bipush        50
       4: invokevirtual #87                 // Method createServerSocket:(II)Ljava/net/ServerSocket;
       7: areturn

  public java.net.ServerSocket createServerSocket(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #88                 // Method createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;
       7: areturn

  public java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/apache/commons/ssl/SSL;
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #89                 // Method org/apache/commons/ssl/SSL.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;
      10: areturn
}
