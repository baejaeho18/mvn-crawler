Compiled from "JavaImpl.java"
public abstract class org.apache.commons.ssl.JavaImpl {
  private static org.apache.commons.ssl.JavaImpl HANDLER;

  public org.apache.commons.ssl.JavaImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void downgrade();
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: instanceof    #3                  // class org/apache/commons/ssl/Java14
       6: ifeq          15
       9: invokestatic  #4                  // Method org/apache/commons/ssl/Java13.getInstance:()Lorg/apache/commons/ssl/Java13;
      12: putstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
      15: return

  public static boolean isJava13();
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: instanceof    #5                  // class org/apache/commons/ssl/Java13
       6: ireturn

  public static void uprade();
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: instanceof    #5                  // class org/apache/commons/ssl/Java13
       6: ifeq          15
       9: invokestatic  #6                  // Method org/apache/commons/ssl/Java14.getInstance:()Lorg/apache/commons/ssl/Java14;
      12: putstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
      15: return

  public abstract java.lang.String getVersion();

  protected abstract java.lang.Object buildKeyManagerFactory(java.security.KeyStore, char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;

  protected abstract java.lang.Object[] retrieveKeyManagers(java.lang.Object);

  protected abstract java.lang.Object buildTrustManagerFactory(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException;

  protected abstract java.lang.Object[] retrieveTrustManagers(java.lang.Object);

  protected abstract java.lang.String retrieveSubjectX500(java.security.cert.X509Certificate);

  protected abstract java.lang.String retrieveIssuerX500(java.security.cert.X509Certificate);

  protected abstract java.security.cert.Certificate[] retrievePeerCerts(javax.net.ssl.SSLSession) throws javax.net.ssl.SSLPeerUnverifiedException;

  protected abstract javax.net.ssl.SSLSocketFactory buildSSLSocketFactory(java.lang.Object);

  protected abstract javax.net.ssl.SSLServerSocketFactory buildSSLServerSocketFactory(java.lang.Object);

  protected abstract javax.net.ssl.SSLSocket buildSocket(org.apache.commons.ssl.SSL) throws java.io.IOException;

  protected abstract javax.net.ssl.SSLSocket buildSocket(org.apache.commons.ssl.SSL, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException;

  protected abstract java.net.Socket connectSocket(java.net.Socket, javax.net.SocketFactory, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException;

  protected abstract javax.net.ssl.SSLServerSocket buildServerSocket(org.apache.commons.ssl.SSL) throws java.io.IOException;

  protected abstract void wantClientAuth(java.lang.Object, boolean);

  protected abstract void enabledProtocols(java.lang.Object, java.lang.String[]);

  protected abstract java.lang.RuntimeException buildRuntimeException(java.lang.Exception);

  protected abstract java.lang.Object initSSL(org.apache.commons.ssl.SSL, org.apache.commons.ssl.TrustChain, org.apache.commons.ssl.KeyMaterial) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.security.KeyManagementException, java.io.IOException;

  protected abstract void checkTrusted(java.lang.Object, java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException;

  public static java.lang.Object init(org.apache.commons.ssl.SSL, org.apache.commons.ssl.TrustChain, org.apache.commons.ssl.KeyMaterial) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.cert.CertificateException, java.security.KeyManagementException, java.io.IOException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #7                  // Method initSSL:(Lorg/apache/commons/ssl/SSL;Lorg/apache/commons/ssl/TrustChain;Lorg/apache/commons/ssl/KeyMaterial;)Ljava/lang/Object;
       9: areturn

  public static java.lang.RuntimeException newRuntimeException(java.lang.Exception);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #8                  // Method buildRuntimeException:(Ljava/lang/Exception;)Ljava/lang/RuntimeException;
       7: areturn

  public static javax.net.ssl.SSLSocketFactory getSSLSocketFactory(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #9                  // Method buildSSLSocketFactory:(Ljava/lang/Object;)Ljavax/net/ssl/SSLSocketFactory;
       7: areturn

  public static javax.net.ssl.SSLServerSocketFactory getSSLServerSocketFactory(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #10                 // Method buildSSLServerSocketFactory:(Ljava/lang/Object;)Ljavax/net/ssl/SSLServerSocketFactory;
       7: areturn

  public static java.lang.String getSubjectX500(java.security.cert.X509Certificate);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #11                 // Method retrieveSubjectX500:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
       7: areturn

  public static java.lang.String getIssuerX500(java.security.cert.X509Certificate);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #12                 // Method retrieveIssuerX500:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
       7: areturn

  public static java.lang.Object newKeyManagerFactory(java.security.KeyStore, char[]) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.UnrecoverableKeyException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: aload_1
       5: invokevirtual #13                 // Method buildKeyManagerFactory:(Ljava/security/KeyStore;[C)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object[] getKeyManagers(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #14                 // Method retrieveKeyManagers:(Ljava/lang/Object;)[Ljava/lang/Object;
       7: areturn

  public static java.lang.Object newTrustManagerFactory(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #15                 // Method buildTrustManagerFactory:(Ljava/security/KeyStore;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object[] getTrustManagers(java.lang.Object);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #16                 // Method retrieveTrustManagers:(Ljava/lang/Object;)[Ljava/lang/Object;
       7: areturn

  public static javax.net.ssl.SSLSocket createSocket(org.apache.commons.ssl.SSL) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #17                 // Method buildSocket:(Lorg/apache/commons/ssl/SSL;)Ljavax/net/ssl/SSLSocket;
       7: areturn

  public static javax.net.ssl.SSLSocket createSocket(org.apache.commons.ssl.SSL, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: aload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: iload         5
      11: invokevirtual #18                 // Method buildSocket:(Lorg/apache/commons/ssl/SSL;Ljava/lang/String;ILjava/net/InetAddress;II)Ljavax/net/ssl/SSLSocket;
      14: areturn

  protected static java.net.Socket connect(java.net.Socket, javax.net.SocketFactory, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: iload         5
      11: iload         6
      13: invokevirtual #19                 // Method connectSocket:(Ljava/net/Socket;Ljavax/net/SocketFactory;Ljava/lang/String;ILjava/net/InetAddress;II)Ljava/net/Socket;
      16: areturn

  public static javax.net.ssl.SSLServerSocket createServerSocket(org.apache.commons.ssl.SSL) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #20                 // Method buildServerSocket:(Lorg/apache/commons/ssl/SSL;)Ljavax/net/ssl/SSLServerSocket;
       7: areturn

  public static void setWantClientAuth(java.lang.Object, boolean);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: iload_1
       5: invokevirtual #21                 // Method wantClientAuth:(Ljava/lang/Object;Z)V
       8: return

  public static void setEnabledProtocols(java.lang.Object, java.lang.String[]);
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: aload_1
       5: invokevirtual #22                 // Method enabledProtocols:(Ljava/lang/Object;[Ljava/lang/String;)V
       8: return

  public static java.security.cert.Certificate[] getPeerCertificates(javax.net.ssl.SSLSession) throws javax.net.ssl.SSLPeerUnverifiedException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: invokevirtual #23                 // Method retrievePeerCerts:(Ljavax/net/ssl/SSLSession;)[Ljava/security/cert/Certificate;
       7: areturn

  public static void testTrust(java.lang.Object, java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException;
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #24                 // Method checkTrusted:(Ljava/lang/Object;[Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
       9: return

  public static void load();
    Code:
       0: getstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
       3: invokevirtual #25                 // Method java/lang/Object.hashCode:()I
       6: pop
       7: return

  static {};
    Code:
       0: aconst_null
       1: astore_0
       2: invokestatic  #6                  // Method org/apache/commons/ssl/Java14.getInstance:()Lorg/apache/commons/ssl/Java14;
       5: astore_0
       6: goto          18
       9: astore_1
      10: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
      13: ldc           #28                 // String commons-ssl reverting to: Java 1.3 + jsse.jar
      15: invokevirtual #29                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      18: aload_0
      19: ifnonnull     26
      22: invokestatic  #4                  // Method org/apache/commons/ssl/Java13.getInstance:()Lorg/apache/commons/ssl/Java13;
      25: astore_0
      26: aload_0
      27: putstatic     #2                  // Field HANDLER:Lorg/apache/commons/ssl/JavaImpl;
      30: return
    Exception table:
       from    to  target type
           2     6     9   Class java/lang/Throwable
}
