Compiled from "IndefiniteLengthInputStream.java"
class org.apache.commons.ssl.asn1.IndefiniteLengthInputStream extends org.apache.commons.ssl.asn1.LimitedInputStream {
  private int _b1;

  private int _b2;

  private boolean _eofReached;

  private boolean _eofOn00;

  org.apache.commons.ssl.asn1.IndefiniteLengthInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/ssl/asn1/LimitedInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field _eofReached:Z
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field _eofOn00:Z
      15: aload_0
      16: aload_1
      17: invokevirtual #4                  // Method java/io/InputStream.read:()I
      20: putfield      #5                  // Field _b1:I
      23: aload_0
      24: aload_1
      25: invokevirtual #4                  // Method java/io/InputStream.read:()I
      28: putfield      #6                  // Field _b2:I
      31: aload_0
      32: aload_0
      33: getfield      #6                  // Field _b2:I
      36: ifge          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: putfield      #2                  // Field _eofReached:Z
      47: return

  void setEofOn00(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field _eofOn00:Z
       5: return

  boolean checkForEof();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _eofOn00:Z
       4: ifeq          31
       7: aload_0
       8: getfield      #5                  // Field _b1:I
      11: ifne          31
      14: aload_0
      15: getfield      #6                  // Field _b2:I
      18: ifne          31
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field _eofReached:Z
      26: aload_0
      27: iconst_1
      28: invokevirtual #7                  // Method org/apache/commons/ssl/asn1/LimitedInputStream.setParentEofDetect:(Z)V
      31: aload_0
      32: getfield      #2                  // Field _eofReached:Z
      35: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _eofOn00:Z
       4: ifne          12
       7: iload_3
       8: iconst_3
       9: if_icmpge     20
      12: aload_0
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokespecial #8                  // Method java/io/InputStream.read:([BII)I
      19: ireturn
      20: aload_0
      21: getfield      #2                  // Field _eofReached:Z
      24: ifeq          29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: getfield      #9                  // Field org/apache/commons/ssl/asn1/LimitedInputStream._in:Ljava/io/InputStream;
      33: aload_1
      34: iload_2
      35: iconst_2
      36: iadd
      37: iload_3
      38: iconst_2
      39: isub
      40: invokevirtual #8                  // Method java/io/InputStream.read:([BII)I
      43: istore        4
      45: iload         4
      47: ifge          57
      50: aload_0
      51: iconst_1
      52: putfield      #2                  // Field _eofReached:Z
      55: iconst_m1
      56: ireturn
      57: aload_1
      58: iload_2
      59: aload_0
      60: getfield      #5                  // Field _b1:I
      63: i2b
      64: bastore
      65: aload_1
      66: iload_2
      67: iconst_1
      68: iadd
      69: aload_0
      70: getfield      #6                  // Field _b2:I
      73: i2b
      74: bastore
      75: aload_0
      76: aload_0
      77: getfield      #9                  // Field org/apache/commons/ssl/asn1/LimitedInputStream._in:Ljava/io/InputStream;
      80: invokevirtual #4                  // Method java/io/InputStream.read:()I
      83: putfield      #5                  // Field _b1:I
      86: aload_0
      87: aload_0
      88: getfield      #9                  // Field org/apache/commons/ssl/asn1/LimitedInputStream._in:Ljava/io/InputStream;
      91: invokevirtual #4                  // Method java/io/InputStream.read:()I
      94: putfield      #6                  // Field _b2:I
      97: aload_0
      98: getfield      #6                  // Field _b2:I
     101: ifge          109
     104: aload_0
     105: iconst_1
     106: putfield      #2                  // Field _eofReached:Z
     109: iload         4
     111: iconst_2
     112: iadd
     113: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method checkForEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #9                  // Field org/apache/commons/ssl/asn1/LimitedInputStream._in:Ljava/io/InputStream;
      13: invokevirtual #4                  // Method java/io/InputStream.read:()I
      16: istore_1
      17: iload_1
      18: ifge          28
      21: aload_0
      22: iconst_1
      23: putfield      #2                  // Field _eofReached:Z
      26: iconst_m1
      27: ireturn
      28: aload_0
      29: getfield      #5                  // Field _b1:I
      32: istore_2
      33: aload_0
      34: aload_0
      35: getfield      #6                  // Field _b2:I
      38: putfield      #5                  // Field _b1:I
      41: aload_0
      42: iload_1
      43: putfield      #6                  // Field _b2:I
      46: iload_2
      47: ireturn
}
