Compiled from "AbstractReferenceMap.java"
public abstract class org.apache.commons.collections.map.AbstractReferenceMap extends org.apache.commons.collections.map.AbstractHashedMap {
  public static final int HARD;

  public static final int SOFT;

  public static final int WEAK;

  protected int keyType;

  protected int valueType;

  protected boolean purgeValues;

  private transient java.lang.ref.ReferenceQueue queue;

  protected org.apache.commons.collections.map.AbstractReferenceMap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/collections/map/AbstractHashedMap."<init>":()V
       4: return

  protected org.apache.commons.collections.map.AbstractReferenceMap(int, int, int, float, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: fload         4
       4: invokespecial #3                  // Method org/apache/commons/collections/map/AbstractHashedMap."<init>":(IF)V
       7: ldc           #4                  // String keyType
       9: iload_1
      10: invokestatic  #5                  // Method verify:(Ljava/lang/String;I)V
      13: ldc           #6                  // String valueType
      15: iload_2
      16: invokestatic  #5                  // Method verify:(Ljava/lang/String;I)V
      19: aload_0
      20: iload_1
      21: putfield      #7                  // Field keyType:I
      24: aload_0
      25: iload_2
      26: putfield      #8                  // Field valueType:I
      29: aload_0
      30: iload         5
      32: putfield      #9                  // Field purgeValues:Z
      35: return

  protected void init();
    Code:
       0: aload_0
       1: new           #10                 // class java/lang/ref/ReferenceQueue
       4: dup
       5: invokespecial #11                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       8: putfield      #1                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      11: return

  private static void verify(java.lang.String, int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_1
       5: iconst_2
       6: if_icmple     36
       9: new           #12                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #13                 // class java/lang/StringBuffer
      16: dup
      17: invokespecial #14                 // Method java/lang/StringBuffer."<init>":()V
      20: aload_0
      21: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: ldc           #16                 // String  must be HARD, SOFT, WEAK.
      26: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      32: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method purgeBeforeRead:()V
       4: aload_0
       5: invokespecial #20                 // Method org/apache/commons/collections/map/AbstractHashedMap.size:()I
       8: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method purgeBeforeRead:()V
       4: aload_0
       5: invokespecial #21                 // Method org/apache/commons/collections/map/AbstractHashedMap.isEmpty:()Z
       8: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method purgeBeforeRead:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #22                 // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_2
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      22: ifnull        29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method purgeBeforeRead:()V
       4: aload_1
       5: ifnonnull     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: invokespecial #24                 // Method org/apache/commons/collections/map/AbstractHashedMap.containsValue:(Ljava/lang/Object;)Z
      15: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method purgeBeforeRead:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #22                 // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_2
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      22: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #25                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #26                 // String null keys not allowed
      10: invokespecial #27                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #25                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #28                 // String null values not allowed
      24: invokespecial #27                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokevirtual #29                 // Method purgeBeforeWrite:()V
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #30                 // Method org/apache/commons/collections/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #29                 // Method purgeBeforeWrite:()V
      10: aload_0
      11: aload_1
      12: invokespecial #31                 // Method org/apache/commons/collections/map/AbstractHashedMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/apache/commons/collections/map/AbstractHashedMap.clear:()V
       4: aload_0
       5: getfield      #1                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       8: invokevirtual #33                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      11: ifnull        17
      14: goto          4
      17: return

  public org.apache.commons.collections.MapIterator mapIterator();
    Code:
       0: new           #34                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceMapIterator
       3: dup
       4: aload_0
       5: invokespecial #35                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceMapIterator."<init>":(Lorg/apache/commons/collections/map/AbstractReferenceMap;)V
       8: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #36                 // Field entrySet:Lorg/apache/commons/collections/map/AbstractHashedMap$EntrySet;
       4: ifnonnull     19
       7: aload_0
       8: new           #37                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntrySet
      11: dup
      12: aload_0
      13: invokespecial #38                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntrySet."<init>":(Lorg/apache/commons/collections/map/AbstractHashedMap;)V
      16: putfield      #36                 // Field entrySet:Lorg/apache/commons/collections/map/AbstractHashedMap$EntrySet;
      19: aload_0
      20: getfield      #36                 // Field entrySet:Lorg/apache/commons/collections/map/AbstractHashedMap$EntrySet;
      23: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #39                 // Field keySet:Lorg/apache/commons/collections/map/AbstractHashedMap$KeySet;
       4: ifnonnull     19
       7: aload_0
       8: new           #40                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceKeySet
      11: dup
      12: aload_0
      13: invokespecial #41                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceKeySet."<init>":(Lorg/apache/commons/collections/map/AbstractHashedMap;)V
      16: putfield      #39                 // Field keySet:Lorg/apache/commons/collections/map/AbstractHashedMap$KeySet;
      19: aload_0
      20: getfield      #39                 // Field keySet:Lorg/apache/commons/collections/map/AbstractHashedMap$KeySet;
      23: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #42                 // Field values:Lorg/apache/commons/collections/map/AbstractHashedMap$Values;
       4: ifnonnull     19
       7: aload_0
       8: new           #43                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceValues
      11: dup
      12: aload_0
      13: invokespecial #44                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceValues."<init>":(Lorg/apache/commons/collections/map/AbstractHashedMap;)V
      16: putfield      #42                 // Field values:Lorg/apache/commons/collections/map/AbstractHashedMap$Values;
      19: aload_0
      20: getfield      #42                 // Field values:Lorg/apache/commons/collections/map/AbstractHashedMap$Values;
      23: areturn

  protected void purgeBeforeRead();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method purge:()V
       4: return

  protected void purgeBeforeWrite();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method purge:()V
       4: return

  protected void purge();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #33                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: astore_1
       8: aload_1
       9: ifnull        28
      12: aload_0
      13: aload_1
      14: invokevirtual #46                 // Method purge:(Ljava/lang/ref/Reference;)V
      17: aload_0
      18: getfield      #1                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      21: invokevirtual #33                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      24: astore_1
      25: goto          8
      28: return

  protected void purge(java.lang.ref.Reference);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/lang/Object.hashCode:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: aload_0
       8: getfield      #48                 // Field data:[Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      11: arraylength
      12: invokevirtual #49                 // Method hashIndex:(II)I
      15: istore_3
      16: aconst_null
      17: astore        4
      19: aload_0
      20: getfield      #48                 // Field data:[Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      23: iload_3
      24: aaload
      25: astore        5
      27: aload         5
      29: ifnull        98
      32: aload         5
      34: checkcast     #50                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntry
      37: aload_1
      38: invokevirtual #51                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntry.purge:(Ljava/lang/ref/Reference;)Z
      41: ifeq          84
      44: aload         4
      46: ifnonnull     63
      49: aload_0
      50: getfield      #48                 // Field data:[Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      53: iload_3
      54: aload         5
      56: getfield      #52                 // Field org/apache/commons/collections/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      59: aastore
      60: goto          73
      63: aload         4
      65: aload         5
      67: getfield      #52                 // Field org/apache/commons/collections/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      70: putfield      #52                 // Field org/apache/commons/collections/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      73: aload_0
      74: dup
      75: getfield      #53                 // Field size:I
      78: iconst_1
      79: isub
      80: putfield      #53                 // Field size:I
      83: return
      84: aload         5
      86: astore        4
      88: aload         5
      90: getfield      #52                 // Field org/apache/commons/collections/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      93: astore        5
      95: goto          27
      98: return

  protected org.apache.commons.collections.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokespecial #54                 // Method org/apache/commons/collections/map/AbstractHashedMap.getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      11: areturn

  protected int hashEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: goto          12
       8: aload_1
       9: invokevirtual #47                 // Method java/lang/Object.hashCode:()I
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #47                 // Method java/lang/Object.hashCode:()I
      24: ixor
      25: ireturn

  protected boolean isEqualKey(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyType:I
       4: ifle          17
       7: aload_2
       8: checkcast     #55                 // class java/lang/ref/Reference
      11: invokevirtual #56                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      14: goto          18
      17: aload_2
      18: astore_2
      19: aload_1
      20: aload_2
      21: if_acmpeq     32
      24: aload_1
      25: aload_2
      26: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  protected org.apache.commons.collections.map.AbstractHashedMap$HashEntry createEntry(org.apache.commons.collections.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object);
    Code:
       0: new           #50                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntry
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: invokespecial #58                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntry."<init>":(Lorg/apache/commons/collections/map/AbstractReferenceMap;Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)V
      13: areturn

  protected java.util.Iterator createEntrySetIterator();
    Code:
       0: new           #59                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntrySetIterator
       3: dup
       4: aload_0
       5: invokespecial #60                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceEntrySetIterator."<init>":(Lorg/apache/commons/collections/map/AbstractReferenceMap;)V
       8: areturn

  protected java.util.Iterator createKeySetIterator();
    Code:
       0: new           #61                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceKeySetIterator
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceKeySetIterator."<init>":(Lorg/apache/commons/collections/map/AbstractReferenceMap;)V
       8: areturn

  protected java.util.Iterator createValuesIterator();
    Code:
       0: new           #63                 // class org/apache/commons/collections/map/AbstractReferenceMap$ReferenceValuesIterator
       3: dup
       4: aload_0
       5: invokespecial #64                 // Method org/apache/commons/collections/map/AbstractReferenceMap$ReferenceValuesIterator."<init>":(Lorg/apache/commons/collections/map/AbstractReferenceMap;)V
       8: areturn

  protected void doWriteObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field keyType:I
       5: invokevirtual #65                 // Method java/io/ObjectOutputStream.writeInt:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field valueType:I
      13: invokevirtual #65                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #9                  // Field purgeValues:Z
      21: invokevirtual #66                 // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
      24: aload_1
      25: aload_0
      26: getfield      #67                 // Field loadFactor:F
      29: invokevirtual #68                 // Method java/io/ObjectOutputStream.writeFloat:(F)V
      32: aload_1
      33: aload_0
      34: getfield      #48                 // Field data:[Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      37: arraylength
      38: invokevirtual #65                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      41: aload_0
      42: invokevirtual #69                 // Method mapIterator:()Lorg/apache/commons/collections/MapIterator;
      45: astore_2
      46: aload_2
      47: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/collections/MapIterator.hasNext:()Z
      52: ifeq          78
      55: aload_1
      56: aload_2
      57: invokeinterface #71,  1           // InterfaceMethod org/apache/commons/collections/MapIterator.next:()Ljava/lang/Object;
      62: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      65: aload_1
      66: aload_2
      67: invokeinterface #73,  1           // InterfaceMethod org/apache/commons/collections/MapIterator.getValue:()Ljava/lang/Object;
      72: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      75: goto          46
      78: aload_1
      79: aconst_null
      80: invokevirtual #72                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      83: return

  protected void doReadObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method java/io/ObjectInputStream.readInt:()I
       5: putfield      #7                  // Field keyType:I
       8: aload_0
       9: aload_1
      10: invokevirtual #74                 // Method java/io/ObjectInputStream.readInt:()I
      13: putfield      #8                  // Field valueType:I
      16: aload_0
      17: aload_1
      18: invokevirtual #75                 // Method java/io/ObjectInputStream.readBoolean:()Z
      21: putfield      #9                  // Field purgeValues:Z
      24: aload_0
      25: aload_1
      26: invokevirtual #76                 // Method java/io/ObjectInputStream.readFloat:()F
      29: putfield      #67                 // Field loadFactor:F
      32: aload_1
      33: invokevirtual #74                 // Method java/io/ObjectInputStream.readInt:()I
      36: istore_2
      37: aload_0
      38: invokevirtual #77                 // Method init:()V
      41: aload_0
      42: iload_2
      43: anewarray     #78                 // class org/apache/commons/collections/map/AbstractHashedMap$HashEntry
      46: putfield      #48                 // Field data:[Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      49: aload_1
      50: invokevirtual #79                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      53: astore_3
      54: aload_3
      55: ifnonnull     61
      58: goto          78
      61: aload_1
      62: invokevirtual #79                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      65: astore        4
      67: aload_0
      68: aload_3
      69: aload         4
      71: invokevirtual #80                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: goto          49
      78: aload_0
      79: aload_0
      80: aload_0
      81: getfield      #48                 // Field data:[Lorg/apache/commons/collections/map/AbstractHashedMap$HashEntry;
      84: arraylength
      85: aload_0
      86: getfield      #67                 // Field loadFactor:F
      89: invokevirtual #81                 // Method calculateThreshold:(IF)I
      92: putfield      #82                 // Field threshold:I
      95: return

  static java.lang.ref.ReferenceQueue access$000(org.apache.commons.collections.map.AbstractReferenceMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: areturn
}
