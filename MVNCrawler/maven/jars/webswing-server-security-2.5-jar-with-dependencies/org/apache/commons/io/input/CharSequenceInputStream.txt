Compiled from "CharSequenceInputStream.java"
public class org.apache.commons.io.input.CharSequenceInputStream extends java.io.InputStream {
  private final java.nio.charset.CharsetEncoder encoder;

  private final java.nio.CharBuffer cbuf;

  private final java.nio.ByteBuffer bbuf;

  private int mark;

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_2
       6: invokevirtual #2                  // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       9: getstatic     #3                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      12: invokevirtual #4                  // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      15: getstatic     #3                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      18: invokevirtual #5                  // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      21: putfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      24: aload_0
      25: iload_3
      26: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      29: putfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      32: aload_0
      33: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      36: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: aload_1
      42: invokestatic  #10                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      45: putfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      48: aload_0
      49: iconst_m1
      50: putfield      #12                 // Field mark:I
      53: return

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: invokespecial #14                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
      10: return

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        2048
       6: invokespecial #14                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
       9: return

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        2048
       6: invokespecial #15                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/String;I)V
       9: return

  private void fillBuffer() throws java.nio.charset.CharacterCodingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       7: pop
       8: aload_0
       9: getfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      12: aload_0
      13: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      16: aload_0
      17: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      20: iconst_1
      21: invokevirtual #17                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      24: astore_1
      25: aload_1
      26: invokevirtual #18                 // Method java/nio/charset/CoderResult.isError:()Z
      29: ifeq          36
      32: aload_1
      33: invokevirtual #19                 // Method java/nio/charset/CoderResult.throwException:()V
      36: aload_0
      37: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      40: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      43: pop
      44: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #20                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #21                 // String Byte array is null
      10: invokespecial #22                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_3
      15: iflt          26
      18: iload_2
      19: iload_3
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     72
      26: new           #23                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: new           #24                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #26                 // String Array Size=
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: arraylength
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #29                 // String , offset=
      49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #30                 // String , length=
      58: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_3
      62: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #32                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload_3
      73: ifne          78
      76: iconst_0
      77: ireturn
      78: aload_0
      79: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      82: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      85: ifne          100
      88: aload_0
      89: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      92: invokevirtual #34                 // Method java/nio/CharBuffer.hasRemaining:()Z
      95: ifne          100
      98: iconst_m1
      99: ireturn
     100: iconst_0
     101: istore        4
     103: iload_3
     104: ifle          189
     107: aload_0
     108: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
     111: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     114: ifeq          162
     117: aload_0
     118: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
     121: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
     124: iload_3
     125: invokestatic  #36                 // Method java/lang/Math.min:(II)I
     128: istore        5
     130: aload_0
     131: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
     134: aload_1
     135: iload_2
     136: iload         5
     138: invokevirtual #37                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     141: pop
     142: iload_2
     143: iload         5
     145: iadd
     146: istore_2
     147: iload_3
     148: iload         5
     150: isub
     151: istore_3
     152: iload         4
     154: iload         5
     156: iadd
     157: istore        4
     159: goto          103
     162: aload_0
     163: invokespecial #38                 // Method fillBuffer:()V
     166: aload_0
     167: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
     170: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     173: ifne          103
     176: aload_0
     177: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
     180: invokevirtual #34                 // Method java/nio/CharBuffer.hasRemaining:()Z
     183: ifne          103
     186: goto          189
     189: iload         4
     191: ifne          208
     194: aload_0
     195: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
     198: invokevirtual #34                 // Method java/nio/CharBuffer.hasRemaining:()Z
     201: ifne          208
     204: iconst_m1
     205: goto          210
     208: iload         4
     210: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      14: invokevirtual #39                 // Method java/nio/ByteBuffer.get:()B
      17: sipush        255
      20: iand
      21: ireturn
      22: aload_0
      23: invokespecial #38                 // Method fillBuffer:()V
      26: aload_0
      27: getfield      #8                  // Field bbuf:Ljava/nio/ByteBuffer;
      30: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifne          0
      36: aload_0
      37: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      40: invokevirtual #34                 // Method java/nio/CharBuffer.hasRemaining:()Z
      43: ifne          0
      46: iconst_m1
      47: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #40                 // Method read:([BII)I
       8: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: lload_1
       3: lconst_0
       4: lcmp
       5: ifle          36
       8: aload_0
       9: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      12: invokevirtual #34                 // Method java/nio/CharBuffer.hasRemaining:()Z
      15: ifeq          36
      18: aload_0
      19: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      22: invokevirtual #41                 // Method java/nio/CharBuffer.get:()C
      25: pop
      26: lload_1
      27: lconst_1
      28: lsub
      29: lstore_1
      30: iinc          3, 1
      33: goto          2
      36: iload_3
      37: i2l
      38: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
       4: invokevirtual #42                 // Method java/nio/CharBuffer.remaining:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: return

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
       5: invokevirtual #43                 // Method java/nio/CharBuffer.position:()I
       8: putfield      #12                 // Field mark:I
      11: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field mark:I
       4: iconst_m1
       5: if_icmpeq     25
       8: aload_0
       9: getfield      #11                 // Field cbuf:Ljava/nio/CharBuffer;
      12: aload_0
      13: getfield      #12                 // Field mark:I
      16: invokevirtual #44                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      19: pop
      20: aload_0
      21: iconst_m1
      22: putfield      #12                 // Field mark:I
      25: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn
}
