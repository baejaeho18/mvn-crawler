Compiled from "SizeFileFilter.java"
public class org.apache.commons.io.filefilter.SizeFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable {
  private final long size;

  private final boolean acceptLarger;

  public org.apache.commons.io.filefilter.SizeFileFilter(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: invokespecial #1                  // Method "<init>":(JZ)V
       6: return

  public org.apache.commons.io.filefilter.SizeFileFilter(long, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
       4: lload_1
       5: lconst_0
       6: lcmp
       7: ifge          20
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #4                  // String The size must be non-negative
      16: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: lload_1
      22: putfield      #6                  // Field size:J
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field acceptLarger:Z
      30: return

  public boolean accept(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/io/File.length:()J
       4: aload_0
       5: getfield      #6                  // Field size:J
       8: lcmp
       9: ifge          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_2
      18: aload_0
      19: getfield      #7                  // Field acceptLarger:Z
      22: ifeq          37
      25: iload_2
      26: ifne          33
      29: iconst_1
      30: goto          38
      33: iconst_0
      34: goto          38
      37: iload_2
      38: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field acceptLarger:Z
       4: ifeq          12
       7: ldc           #9                  // String >=
       9: goto          14
      12: ldc           #10                 // String <
      14: astore_1
      15: new           #11                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_0
      23: invokespecial #13                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
      26: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #15                 // String (
      31: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #6                  // Field size:J
      42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      45: ldc           #17                 // String )
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: areturn
}
