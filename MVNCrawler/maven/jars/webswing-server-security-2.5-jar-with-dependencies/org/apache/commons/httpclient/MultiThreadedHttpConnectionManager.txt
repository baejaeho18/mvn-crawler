Compiled from "MultiThreadedHttpConnectionManager.java"
public class org.apache.commons.httpclient.MultiThreadedHttpConnectionManager implements org.apache.commons.httpclient.HttpConnectionManager {
  private static final org.apache.commons.logging.Log LOG;

  public static final int DEFAULT_MAX_HOST_CONNECTIONS;

  public static final int DEFAULT_MAX_TOTAL_CONNECTIONS;

  private static final java.util.Map REFERENCE_TO_CONNECTION_SOURCE;

  private static final java.lang.ref.ReferenceQueue REFERENCE_QUEUE;

  private static org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread REFERENCE_QUEUE_THREAD;

  private static java.util.WeakHashMap ALL_CONNECTION_MANAGERS;

  private org.apache.commons.httpclient.params.HttpConnectionManagerParams params;

  private org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool connectionPool;

  private volatile boolean shutdown;

  static java.lang.Class class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager;

  public static void shutdownAll();
    Code:
       0: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
       3: dup
       4: astore_0
       5: monitorenter
       6: getstatic     #15                 // Field ALL_CONNECTION_MANAGERS:Ljava/util/WeakHashMap;
       9: dup
      10: astore_1
      11: monitorenter
      12: getstatic     #15                 // Field ALL_CONNECTION_MANAGERS:Ljava/util/WeakHashMap;
      15: invokevirtual #16                 // Method java/util/WeakHashMap.keySet:()Ljava/util/Set;
      18: getstatic     #15                 // Field ALL_CONNECTION_MANAGERS:Ljava/util/WeakHashMap;
      21: invokevirtual #17                 // Method java/util/WeakHashMap.size:()I
      24: anewarray     #18                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager
      27: invokeinterface #19,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      32: checkcast     #20                 // class "[Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager;"
      35: checkcast     #20                 // class "[Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager;"
      38: astore_2
      39: iconst_0
      40: istore_3
      41: iload_3
      42: aload_2
      43: arraylength
      44: if_icmpge     65
      47: aload_2
      48: iload_3
      49: aaload
      50: ifnull        59
      53: aload_2
      54: iload_3
      55: aaload
      56: invokevirtual #21                 // Method shutdown:()V
      59: iinc          3, 1
      62: goto          41
      65: aload_1
      66: monitorexit
      67: goto          77
      70: astore        4
      72: aload_1
      73: monitorexit
      74: aload         4
      76: athrow
      77: getstatic     #22                 // Field REFERENCE_QUEUE_THREAD:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread;
      80: ifnull        93
      83: getstatic     #22                 // Field REFERENCE_QUEUE_THREAD:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread;
      86: invokevirtual #23                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread.shutdown:()V
      89: aconst_null
      90: putstatic     #22                 // Field REFERENCE_QUEUE_THREAD:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread;
      93: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      96: invokeinterface #24,  1           // InterfaceMethod java/util/Map.clear:()V
     101: aload_0
     102: monitorexit
     103: goto          113
     106: astore        5
     108: aload_0
     109: monitorexit
     110: aload         5
     112: athrow
     113: return
    Exception table:
       from    to  target type
          12    67    70   any
          70    74    70   any
           6   103   106   any
         106   110   106   any

  private static void storeReferenceToConnection(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference, org.apache.commons.httpclient.HostConfiguration, org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool);
    Code:
       0: new           #25                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource
       3: dup
       4: aconst_null
       5: invokespecial #26                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource."<init>":(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$1;)V
       8: astore_3
       9: aload_3
      10: aload_2
      11: putfield      #27                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource.connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      14: aload_3
      15: aload_1
      16: putfield      #28                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource.hostConfiguration:Lorg/apache/commons/httpclient/HostConfiguration;
      19: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      22: dup
      23: astore        4
      25: monitorenter
      26: getstatic     #22                 // Field REFERENCE_QUEUE_THREAD:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread;
      29: ifnonnull     48
      32: new           #29                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread
      35: dup
      36: invokespecial #30                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread."<init>":()V
      39: putstatic     #22                 // Field REFERENCE_QUEUE_THREAD:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread;
      42: getstatic     #22                 // Field REFERENCE_QUEUE_THREAD:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread;
      45: invokevirtual #31                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ReferenceQueueThread.start:()V
      48: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      51: aload_0
      52: getfield      #32                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionWithReference.reference:Ljava/lang/ref/WeakReference;
      55: aload_3
      56: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload         4
      64: monitorexit
      65: goto          76
      68: astore        5
      70: aload         4
      72: monitorexit
      73: aload         5
      75: athrow
      76: return
    Exception table:
       from    to  target type
          26    65    68   any
          68    73    68   any

  private static void shutdownCheckedOutConnections(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool);
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      11: dup
      12: astore_2
      13: monitorenter
      14: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      17: invokeinterface #36,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          103
      37: aload_3
      38: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #40                 // class java/lang/ref/Reference
      46: astore        4
      48: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      51: aload         4
      53: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #25                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource
      61: astore        5
      63: aload         5
      65: getfield      #27                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource.connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      68: aload_0
      69: if_acmpne     100
      72: aload_3
      73: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.remove:()V
      78: aload         4
      80: invokevirtual #43                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      83: checkcast     #44                 // class org/apache/commons/httpclient/HttpConnection
      86: astore        6
      88: aload         6
      90: ifnull        100
      93: aload_1
      94: aload         6
      96: invokevirtual #45                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          28
     103: aload_2
     104: monitorexit
     105: goto          115
     108: astore        7
     110: aload_2
     111: monitorexit
     112: aload         7
     114: athrow
     115: aload_1
     116: invokevirtual #46                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     119: astore_2
     120: aload_2
     121: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     126: ifeq          155
     129: aload_2
     130: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #44                 // class org/apache/commons/httpclient/HttpConnection
     138: astore_3
     139: aload_3
     140: invokevirtual #47                 // Method org/apache/commons/httpclient/HttpConnection.close:()V
     143: aload_3
     144: aconst_null
     145: invokevirtual #48                 // Method org/apache/commons/httpclient/HttpConnection.setHttpConnectionManager:(Lorg/apache/commons/httpclient/HttpConnectionManager;)V
     148: aload_3
     149: invokevirtual #49                 // Method org/apache/commons/httpclient/HttpConnection.releaseConnection:()V
     152: goto          120
     155: return
    Exception table:
       from    to  target type
          14   105   108   any
         108   112   108   any

  private static void removeReferenceToConnection(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference);
    Code:
       0: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
       3: dup
       4: astore_1
       5: monitorenter
       6: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
       9: aload_0
      10: getfield      #32                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionWithReference.reference:Ljava/lang/ref/WeakReference;
      13: invokeinterface #50,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: monitorexit
      21: goto          29
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
      29: return
    Exception table:
       from    to  target type
           6    21    24   any
          24    27    24   any

  public org.apache.commons.httpclient.MultiThreadedHttpConnectionManager();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #52                 // class org/apache/commons/httpclient/params/HttpConnectionManagerParams
       8: dup
       9: invokespecial #53                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams."<init>":()V
      12: putfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field shutdown:Z
      20: aload_0
      21: new           #54                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool
      24: dup
      25: aload_0
      26: aconst_null
      27: invokespecial #55                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool."<init>":(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager;Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$1;)V
      30: putfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      33: getstatic     #15                 // Field ALL_CONNECTION_MANAGERS:Ljava/util/WeakHashMap;
      36: dup
      37: astore_1
      38: monitorenter
      39: getstatic     #15                 // Field ALL_CONNECTION_MANAGERS:Ljava/util/WeakHashMap;
      42: aload_0
      43: aconst_null
      44: invokevirtual #57                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_1
      49: monitorexit
      50: goto          58
      53: astore_2
      54: aload_1
      55: monitorexit
      56: aload_2
      57: athrow
      58: return
    Exception table:
       from    to  target type
          39    50    53   any
          53    56    53   any

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field shutdown:Z
      11: ifne          26
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field shutdown:Z
      19: aload_0
      20: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      23: invokevirtual #58                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.shutdown:()V
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: return
    Exception table:
       from    to  target type
           7    28    31   any
          31    34    31   any

  public boolean isConnectionStaleCheckingEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: invokevirtual #59                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.isStaleCheckingEnabled:()Z
       7: ireturn

  public void setConnectionStaleCheckingEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: iload_1
       5: invokevirtual #60                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.setStaleCheckingEnabled:(Z)V
       8: return

  public void setMaxConnectionsPerHost(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: iload_1
       5: invokevirtual #61                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.setDefaultMaxConnectionsPerHost:(I)V
       8: return

  public int getMaxConnectionsPerHost();
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: invokevirtual #62                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.getDefaultMaxConnectionsPerHost:()I
       7: ireturn

  public void setMaxTotalConnections(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: iload_1
       5: invokevirtual #63                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.setMaxTotalConnections:(I)V
       8: return

  public int getMaxTotalConnections();
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: invokevirtual #64                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.getMaxTotalConnections:()I
       7: ireturn

  public org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokevirtual #65                 // Method getConnectionWithTimeout:(Lorg/apache/commons/httpclient/HostConfiguration;J)Lorg/apache/commons/httpclient/HttpConnection;
       6: areturn
       7: astore_2
       8: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
      11: ldc           #67                 // String Unexpected exception while waiting for connection
      13: aload_2
      14: invokeinterface #68,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      19: goto          0
    Exception table:
       from    to  target type
           0     6     7   Class org/apache/commons/httpclient/ConnectionPoolTimeoutException

  public org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.ConnectionPoolTimeoutException;
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #69                 // String enter HttpConnectionManager.getConnectionWithTimeout(HostConfiguration, long)
       5: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_1
      11: ifnonnull     24
      14: new           #71                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #72                 // String hostConfiguration is null
      20: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
      27: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          71
      35: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
      38: new           #75                 // class java/lang/StringBuffer
      41: dup
      42: invokespecial #76                 // Method java/lang/StringBuffer."<init>":()V
      45: ldc           #77                 // String HttpConnectionManager.getConnection:  config =
      47: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      50: aload_1
      51: invokevirtual #79                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      54: ldc           #80                 // String , timeout =
      56: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      59: lload_2
      60: invokevirtual #81                 // Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
      63: invokevirtual #82                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      66: invokeinterface #83,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      71: aload_0
      72: aload_1
      73: lload_2
      74: invokespecial #84                 // Method doGetConnection:(Lorg/apache/commons/httpclient/HostConfiguration;J)Lorg/apache/commons/httpclient/HttpConnection;
      77: astore        4
      79: new           #85                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionAdapter
      82: dup
      83: aload         4
      85: invokespecial #86                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionAdapter."<init>":(Lorg/apache/commons/httpclient/HttpConnection;)V
      88: areturn

  public org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.HttpException;
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #87                 // String enter HttpConnectionManager.getConnection(HostConfiguration, long)
       5: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: lload_2
      13: invokevirtual #65                 // Method getConnectionWithTimeout:(Lorg/apache/commons/httpclient/HostConfiguration;J)Lorg/apache/commons/httpclient/HttpConnection;
      16: areturn
      17: astore        4
      19: new           #88                 // class org/apache/commons/httpclient/HttpException
      22: dup
      23: aload         4
      25: invokevirtual #89                 // Method org/apache/commons/httpclient/ConnectionPoolTimeoutException.getMessage:()Ljava/lang/String;
      28: invokespecial #90                 // Method org/apache/commons/httpclient/HttpException."<init>":(Ljava/lang/String;)V
      31: athrow
    Exception table:
       from    to  target type
          10    16    17   Class org/apache/commons/httpclient/ConnectionPoolTimeoutException

  private org.apache.commons.httpclient.HttpConnection doGetConnection(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.ConnectionPoolTimeoutException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       7: aload_1
       8: invokevirtual #91                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.getMaxConnectionsPerHost:(Lorg/apache/commons/httpclient/HostConfiguration;)I
      11: istore        5
      13: aload_0
      14: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
      17: invokevirtual #64                 // Method org/apache/commons/httpclient/params/HttpConnectionManagerParams.getMaxTotalConnections:()I
      20: istore        6
      22: aload_0
      23: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      26: dup
      27: astore        7
      29: monitorenter
      30: new           #92                 // class org/apache/commons/httpclient/HostConfiguration
      33: dup
      34: aload_1
      35: invokespecial #93                 // Method org/apache/commons/httpclient/HostConfiguration."<init>":(Lorg/apache/commons/httpclient/HostConfiguration;)V
      38: astore_1
      39: aload_0
      40: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      43: aload_1
      44: iconst_1
      45: invokevirtual #94                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.getHostPool:(Lorg/apache/commons/httpclient/HostConfiguration;Z)Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool;
      48: astore        8
      50: aconst_null
      51: astore        9
      53: lload_2
      54: lconst_0
      55: lcmp
      56: ifle          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore        10
      66: lload_2
      67: lstore        11
      69: lconst_0
      70: lstore        13
      72: lconst_0
      73: lstore        15
      75: aload         4
      77: ifnonnull     541
      80: aload_0
      81: getfield      #4                  // Field shutdown:Z
      84: ifeq          97
      87: new           #95                 // class java/lang/IllegalStateException
      90: dup
      91: ldc           #96                 // String Connection factory has been shutdown.
      93: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload         8
      99: getfield      #98                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.freeConnections:Ljava/util/LinkedList;
     102: invokevirtual #99                 // Method java/util/LinkedList.size:()I
     105: ifle          121
     108: aload_0
     109: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     112: aload_1
     113: invokevirtual #100                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.getFreeConnection:(Lorg/apache/commons/httpclient/HostConfiguration;)Lorg/apache/commons/httpclient/HttpConnection;
     116: astore        4
     118: goto          75
     121: aload         8
     123: getfield      #101                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.numConnections:I
     126: iload         5
     128: if_icmpge     156
     131: aload_0
     132: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     135: invokestatic  #102                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$200:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)I
     138: iload         6
     140: if_icmpge     156
     143: aload_0
     144: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     147: aload_1
     148: invokevirtual #103                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.createConnection:(Lorg/apache/commons/httpclient/HostConfiguration;)Lorg/apache/commons/httpclient/HttpConnection;
     151: astore        4
     153: goto          75
     156: aload         8
     158: getfield      #101                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.numConnections:I
     161: iload         5
     163: if_icmpge     199
     166: aload_0
     167: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     170: invokestatic  #104                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$300:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)Ljava/util/LinkedList;
     173: invokevirtual #99                 // Method java/util/LinkedList.size:()I
     176: ifle          199
     179: aload_0
     180: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     183: invokevirtual #105                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.deleteLeastUsedConnection:()V
     186: aload_0
     187: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     190: aload_1
     191: invokevirtual #103                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.createConnection:(Lorg/apache/commons/httpclient/HostConfiguration;)Lorg/apache/commons/httpclient/HttpConnection;
     194: astore        4
     196: goto          75
     199: iload         10
     201: ifeq          221
     204: lload         11
     206: lconst_0
     207: lcmp
     208: ifgt          221
     211: new           #66                 // class org/apache/commons/httpclient/ConnectionPoolTimeoutException
     214: dup
     215: ldc           #106                // String Timeout waiting for connection
     217: invokespecial #107                // Method org/apache/commons/httpclient/ConnectionPoolTimeoutException."<init>":(Ljava/lang/String;)V
     220: athrow
     221: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
     224: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     229: ifeq          259
     232: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
     235: new           #75                 // class java/lang/StringBuffer
     238: dup
     239: invokespecial #76                 // Method java/lang/StringBuffer."<init>":()V
     242: ldc           #108                // String Unable to get a connection, waiting..., hostConfig=
     244: invokevirtual #78                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     247: aload_1
     248: invokevirtual #79                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     251: invokevirtual #82                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     254: invokeinterface #83,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     259: aload         9
     261: ifnonnull     292
     264: new           #109                // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread
     267: dup
     268: aconst_null
     269: invokespecial #110                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread."<init>":(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$1;)V
     272: astore        9
     274: aload         9
     276: aload         8
     278: putfield      #111                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.hostConnectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool;
     281: aload         9
     283: invokestatic  #112                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     286: putfield      #113                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.thread:Ljava/lang/Thread;
     289: goto          298
     292: aload         9
     294: iconst_0
     295: putfield      #114                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.interruptedByConnectionPool:Z
     298: iload         10
     300: ifeq          308
     303: invokestatic  #115                // Method java/lang/System.currentTimeMillis:()J
     306: lstore        13
     308: aload         8
     310: getfield      #116                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.waitingThreads:Ljava/util/LinkedList;
     313: aload         9
     315: invokevirtual #117                // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
     318: aload_0
     319: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     322: invokestatic  #118                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$500:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)Ljava/util/LinkedList;
     325: aload         9
     327: invokevirtual #117                // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
     330: aload_0
     331: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     334: lload         11
     336: invokevirtual #119                // Method java/lang/Object.wait:(J)V
     339: aload         9
     341: getfield      #114                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.interruptedByConnectionPool:Z
     344: ifne          371
     347: aload         8
     349: getfield      #116                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.waitingThreads:Ljava/util/LinkedList;
     352: aload         9
     354: invokevirtual #120                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     357: pop
     358: aload_0
     359: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     362: invokestatic  #118                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$500:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)Ljava/util/LinkedList;
     365: aload         9
     367: invokevirtual #120                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     370: pop
     371: iload         10
     373: ifeq          538
     376: invokestatic  #115                // Method java/lang/System.currentTimeMillis:()J
     379: lstore        15
     381: lload         11
     383: lload         15
     385: lload         13
     387: lsub
     388: lsub
     389: lstore        11
     391: goto          538
     394: astore        17
     396: aload         9
     398: getfield      #114                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.interruptedByConnectionPool:Z
     401: ifne          426
     404: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
     407: ldc           #122                // String Interrupted while waiting for connection
     409: aload         17
     411: invokeinterface #68,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     416: new           #123                // class java/lang/IllegalThreadStateException
     419: dup
     420: ldc           #124                // String Interrupted while waiting in MultiThreadedHttpConnectionManager
     422: invokespecial #125                // Method java/lang/IllegalThreadStateException."<init>":(Ljava/lang/String;)V
     425: athrow
     426: aload         9
     428: getfield      #114                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.interruptedByConnectionPool:Z
     431: ifne          458
     434: aload         8
     436: getfield      #116                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.waitingThreads:Ljava/util/LinkedList;
     439: aload         9
     441: invokevirtual #120                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     444: pop
     445: aload_0
     446: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     449: invokestatic  #118                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$500:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)Ljava/util/LinkedList;
     452: aload         9
     454: invokevirtual #120                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     457: pop
     458: iload         10
     460: ifeq          538
     463: invokestatic  #115                // Method java/lang/System.currentTimeMillis:()J
     466: lstore        15
     468: lload         11
     470: lload         15
     472: lload         13
     474: lsub
     475: lsub
     476: lstore        11
     478: goto          538
     481: astore        18
     483: aload         9
     485: getfield      #114                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$WaitingThread.interruptedByConnectionPool:Z
     488: ifne          515
     491: aload         8
     493: getfield      #116                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.waitingThreads:Ljava/util/LinkedList;
     496: aload         9
     498: invokevirtual #120                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     501: pop
     502: aload_0
     503: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
     506: invokestatic  #118                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$500:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)Ljava/util/LinkedList;
     509: aload         9
     511: invokevirtual #120                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     514: pop
     515: iload         10
     517: ifeq          535
     520: invokestatic  #115                // Method java/lang/System.currentTimeMillis:()J
     523: lstore        15
     525: lload         11
     527: lload         15
     529: lload         13
     531: lsub
     532: lsub
     533: lstore        11
     535: aload         18
     537: athrow
     538: goto          75
     541: aload         7
     543: monitorexit
     544: goto          555
     547: astore        19
     549: aload         7
     551: monitorexit
     552: aload         19
     554: athrow
     555: aload         4
     557: areturn
    Exception table:
       from    to  target type
         199   339   394   Class java/lang/InterruptedException
         199   339   481   any
         394   426   481   any
         481   483   481   any
          30   544   547   any
         547   552   547   any

  public int getConnectionsInPool(org.apache.commons.httpclient.HostConfiguration);
    Code:
       0: aload_0
       1: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      11: aload_1
      12: iconst_0
      13: invokevirtual #94                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.getHostPool:(Lorg/apache/commons/httpclient/HostConfiguration;Z)Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool;
      16: astore_3
      17: aload_3
      18: ifnull        28
      21: aload_3
      22: getfield      #101                // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HostConnectionPool.numConnections:I
      25: goto          29
      28: iconst_0
      29: aload_2
      30: monitorexit
      31: ireturn
      32: astore        4
      34: aload_2
      35: monitorexit
      36: aload         4
      38: athrow
    Exception table:
       from    to  target type
           7    31    32   any
          32    36    32   any

  public int getConnectionsInPool();
    Code:
       0: aload_0
       1: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      11: invokestatic  #102                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.access$200:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)I
      14: aload_1
      15: monitorexit
      16: ireturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
           7    16    17   any
          17    20    17   any

  public int getConnectionsInUse(org.apache.commons.httpclient.HostConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #126                // Method getConnectionsInPool:(Lorg/apache/commons/httpclient/HostConfiguration;)I
       5: ireturn

  public int getConnectionsInUse();
    Code:
       0: aload_0
       1: invokevirtual #127                // Method getConnectionsInPool:()I
       4: ireturn

  public void deleteClosedConnections();
    Code:
       0: aload_0
       1: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
       4: invokevirtual #128                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.deleteClosedConnections:()V
       7: return

  public void closeIdleConnections(long);
    Code:
       0: aload_0
       1: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
       4: lload_1
       5: invokevirtual #129                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.closeIdleConnections:(J)V
       8: aload_0
       9: invokevirtual #130                // Method deleteClosedConnections:()V
      12: return

  public void releaseConnection(org.apache.commons.httpclient.HttpConnection);
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #131                // String enter HttpConnectionManager.releaseConnection(HttpConnection)
       5: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_1
      11: instanceof    #85                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionAdapter
      14: ifeq          25
      17: aload_1
      18: checkcast     #85                 // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionAdapter
      21: invokevirtual #132                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionAdapter.getWrappedConnection:()Lorg/apache/commons/httpclient/HttpConnection;
      24: astore_1
      25: aload_1
      26: invokestatic  #133                // Method org/apache/commons/httpclient/SimpleHttpConnectionManager.finishLastResponse:(Lorg/apache/commons/httpclient/HttpConnection;)V
      29: aload_0
      30: getfield      #56                 // Field connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      33: aload_1
      34: invokevirtual #134                // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.freeConnection:(Lorg/apache/commons/httpclient/HttpConnection;)V
      37: return

  private org.apache.commons.httpclient.HostConfiguration configurationForConnection(org.apache.commons.httpclient.HttpConnection);
    Code:
       0: new           #92                 // class org/apache/commons/httpclient/HostConfiguration
       3: dup
       4: invokespecial #135                // Method org/apache/commons/httpclient/HostConfiguration."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #136                // Method org/apache/commons/httpclient/HttpConnection.getHost:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #137                // Method org/apache/commons/httpclient/HttpConnection.getPort:()I
      17: aload_1
      18: invokevirtual #138                // Method org/apache/commons/httpclient/HttpConnection.getProtocol:()Lorg/apache/commons/httpclient/protocol/Protocol;
      21: invokevirtual #139                // Method org/apache/commons/httpclient/HostConfiguration.setHost:(Ljava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      24: aload_1
      25: invokevirtual #140                // Method org/apache/commons/httpclient/HttpConnection.getLocalAddress:()Ljava/net/InetAddress;
      28: ifnull        39
      31: aload_2
      32: aload_1
      33: invokevirtual #140                // Method org/apache/commons/httpclient/HttpConnection.getLocalAddress:()Ljava/net/InetAddress;
      36: invokevirtual #141                // Method org/apache/commons/httpclient/HostConfiguration.setLocalAddress:(Ljava/net/InetAddress;)V
      39: aload_1
      40: invokevirtual #142                // Method org/apache/commons/httpclient/HttpConnection.getProxyHost:()Ljava/lang/String;
      43: ifnull        58
      46: aload_2
      47: aload_1
      48: invokevirtual #142                // Method org/apache/commons/httpclient/HttpConnection.getProxyHost:()Ljava/lang/String;
      51: aload_1
      52: invokevirtual #143                // Method org/apache/commons/httpclient/HttpConnection.getProxyPort:()I
      55: invokevirtual #144                // Method org/apache/commons/httpclient/HostConfiguration.setProxy:(Ljava/lang/String;I)V
      58: aload_2
      59: areturn

  public org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams();
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: areturn

  public void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #71                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #145                // String Parameters may not be null
      10: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
      19: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #12                 // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #13                 // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #14                 // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static void access$600(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method shutdownCheckedOutConnections:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)V
       4: return

  static org.apache.commons.logging.Log access$700();
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
       3: areturn

  static org.apache.commons.httpclient.params.HttpConnectionManagerParams access$800(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager);
    Code:
       0: aload_0
       1: getfield      #7                  // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionManagerParams;
       4: areturn

  static void access$900(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference, org.apache.commons.httpclient.HostConfiguration, org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #6                  // Method storeReferenceToConnection:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionWithReference;Lorg/apache/commons/httpclient/HostConfiguration;Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;)V
       6: return

  static org.apache.commons.httpclient.HostConfiguration access$1100(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager, org.apache.commons.httpclient.HttpConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method configurationForConnection:(Lorg/apache/commons/httpclient/HttpConnection;)Lorg/apache/commons/httpclient/HostConfiguration;
       5: areturn

  static boolean access$1200(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager);
    Code:
       0: aload_0
       1: getfield      #4                  // Field shutdown:Z
       4: ireturn

  static void access$1300(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method removeReferenceToConnection:(Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$HttpConnectionWithReference;)V
       4: return

  static java.util.Map access$1400();
    Code:
       0: getstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
       3: areturn

  static java.lang.ref.ReferenceQueue access$1500();
    Code:
       0: getstatic     #1                  // Field REFERENCE_QUEUE:Ljava/lang/ref/ReferenceQueue;
       3: areturn

  static {};
    Code:
       0: getstatic     #146                // Field class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #147                // String org.apache.commons.httpclient.MultiThreadedHttpConnectionManager
       8: invokestatic  #148                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #146                // Field class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #146                // Field class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager:Ljava/lang/Class;
      21: invokestatic  #149                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      24: putstatic     #8                  // Field LOG:Lorg/apache/commons/logging/Log;
      27: new           #150                // class java/util/HashMap
      30: dup
      31: invokespecial #151                // Method java/util/HashMap."<init>":()V
      34: putstatic     #2                  // Field REFERENCE_TO_CONNECTION_SOURCE:Ljava/util/Map;
      37: new           #152                // class java/lang/ref/ReferenceQueue
      40: dup
      41: invokespecial #153                // Method java/lang/ref/ReferenceQueue."<init>":()V
      44: putstatic     #1                  // Field REFERENCE_QUEUE:Ljava/lang/ref/ReferenceQueue;
      47: new           #154                // class java/util/WeakHashMap
      50: dup
      51: invokespecial #155                // Method java/util/WeakHashMap."<init>":()V
      54: putstatic     #15                 // Field ALL_CONNECTION_MANAGERS:Ljava/util/WeakHashMap;
      57: return
}
