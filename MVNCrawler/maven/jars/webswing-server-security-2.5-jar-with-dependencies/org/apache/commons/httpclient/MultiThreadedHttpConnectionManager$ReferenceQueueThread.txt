Compiled from "MultiThreadedHttpConnectionManager.java"
class org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread extends java.lang.Thread {
  private volatile boolean shutdown;

  public org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field shutdown:Z
       9: aload_0
      10: iconst_1
      11: invokevirtual #3                  // Method setDaemon:(Z)V
      14: aload_0
      15: ldc           #4                  // String MultiThreadedHttpConnectionManager cleanup
      17: invokevirtual #5                  // Method setName:(Ljava/lang/String;)V
      20: return

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field shutdown:Z
       5: aload_0
       6: invokevirtual #6                  // Method interrupt:()V
       9: return

  private void handleReference(java.lang.ref.Reference);
    Code:
       0: aconst_null
       1: astore_2
       2: invokestatic  #7                  // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.access$1400:()Ljava/util/Map;
       5: dup
       6: astore_3
       7: monitorenter
       8: invokestatic  #7                  // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.access$1400:()Ljava/util/Map;
      11: aload_1
      12: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #9                  // class org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource
      20: astore_2
      21: aload_3
      22: monitorexit
      23: goto          33
      26: astore        4
      28: aload_3
      29: monitorexit
      30: aload         4
      32: athrow
      33: aload_2
      34: ifnull        89
      37: invokestatic  #10                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.access$700:()Lorg/apache/commons/logging/Log;
      40: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      45: ifeq          78
      48: invokestatic  #10                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.access$700:()Lorg/apache/commons/logging/Log;
      51: new           #12                 // class java/lang/StringBuffer
      54: dup
      55: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      58: ldc           #14                 // String Connection reclaimed by garbage collector, hostConfig=
      60: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: aload_2
      64: getfield      #16                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource.hostConfiguration:Lorg/apache/commons/httpclient/HostConfiguration;
      67: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      70: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      73: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      78: aload_2
      79: getfield      #20                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource.connectionPool:Lorg/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool;
      82: aload_2
      83: getfield      #16                 // Field org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionSource.hostConfiguration:Lorg/apache/commons/httpclient/HostConfiguration;
      86: invokevirtual #21                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager$ConnectionPool.handleLostConnection:(Lorg/apache/commons/httpclient/HostConfiguration;)V
      89: return
    Exception table:
       from    to  target type
           8    23    26   any
          26    30    26   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field shutdown:Z
       4: ifne          41
       7: invokestatic  #22                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.access$1500:()Ljava/lang/ref/ReferenceQueue;
      10: invokevirtual #23                 // Method java/lang/ref/ReferenceQueue.remove:()Ljava/lang/ref/Reference;
      13: astore_1
      14: aload_1
      15: ifnull        23
      18: aload_0
      19: aload_1
      20: invokespecial #24                 // Method handleReference:(Ljava/lang/ref/Reference;)V
      23: goto          0
      26: astore_1
      27: invokestatic  #10                 // Method org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.access$700:()Lorg/apache/commons/logging/Log;
      30: ldc           #26                 // String ReferenceQueueThread interrupted
      32: aload_1
      33: invokeinterface #27,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      38: goto          0
      41: return
    Exception table:
       from    to  target type
           7    23    26   Class java/lang/InterruptedException
}
