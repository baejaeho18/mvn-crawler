Compiled from "HttpMethodParams.java"
public class org.apache.commons.httpclient.params.HttpMethodParams extends org.apache.commons.httpclient.params.DefaultHttpParams {
  private static final org.apache.commons.logging.Log LOG;

  public static final java.lang.String USER_AGENT;

  public static final java.lang.String PROTOCOL_VERSION;

  public static final java.lang.String UNAMBIGUOUS_STATUS_LINE;

  public static final java.lang.String SINGLE_COOKIE_HEADER;

  public static final java.lang.String STRICT_TRANSFER_ENCODING;

  public static final java.lang.String REJECT_HEAD_BODY;

  public static final java.lang.String HEAD_BODY_CHECK_TIMEOUT;

  public static final java.lang.String USE_EXPECT_CONTINUE;

  public static final java.lang.String CREDENTIAL_CHARSET;

  public static final java.lang.String HTTP_ELEMENT_CHARSET;

  public static final java.lang.String HTTP_URI_CHARSET;

  public static final java.lang.String HTTP_CONTENT_CHARSET;

  public static final java.lang.String COOKIE_POLICY;

  public static final java.lang.String WARN_EXTRA_INPUT;

  public static final java.lang.String STATUS_LINE_GARBAGE_LIMIT;

  public static final java.lang.String SO_TIMEOUT;

  public static final java.lang.String DATE_PATTERNS;

  public static final java.lang.String RETRY_HANDLER;

  public static final java.lang.String BUFFER_WARN_TRIGGER_LIMIT;

  public static final java.lang.String VIRTUAL_HOST;

  public static final java.lang.String MULTIPART_BOUNDARY;

  private static final java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS;

  static java.lang.Class class$org$apache$commons$httpclient$params$HttpMethodParams;

  public org.apache.commons.httpclient.params.HttpMethodParams();
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method getDefaultParams:()Lorg/apache/commons/httpclient/params/HttpParams;
       4: invokespecial #7                  // Method org/apache/commons/httpclient/params/DefaultHttpParams."<init>":(Lorg/apache/commons/httpclient/params/HttpParams;)V
       7: return

  public org.apache.commons.httpclient.params.HttpMethodParams(org.apache.commons.httpclient.params.HttpParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/apache/commons/httpclient/params/DefaultHttpParams."<init>":(Lorg/apache/commons/httpclient/params/HttpParams;)V
       5: return

  public java.lang.String getHttpElementCharset();
    Code:
       0: aload_0
       1: ldc           #8                  // String http.protocol.element-charset
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/String
       9: astore_1
      10: aload_1
      11: ifnonnull     27
      14: getstatic     #11                 // Field LOG:Lorg/apache/commons/logging/Log;
      17: ldc           #12                 // String HTTP element charset not configured, using US-ASCII
      19: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      24: ldc           #14                 // String US-ASCII
      26: astore_1
      27: aload_1
      28: areturn

  public void setHttpElementCharset(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // String http.protocol.element-charset
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getContentCharset();
    Code:
       0: aload_0
       1: ldc           #16                 // String http.protocol.content-charset
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/String
       9: astore_1
      10: aload_1
      11: ifnonnull     27
      14: getstatic     #11                 // Field LOG:Lorg/apache/commons/logging/Log;
      17: ldc           #17                 // String Default content charset not configured, using ISO-8859-1
      19: invokeinterface #13,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      24: ldc           #18                 // String ISO-8859-1
      26: astore_1
      27: aload_1
      28: areturn

  public void setUriCharset(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #19                 // String http.protocol.uri-charset
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getUriCharset();
    Code:
       0: aload_0
       1: ldc           #19                 // String http.protocol.uri-charset
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/String
       9: astore_1
      10: aload_1
      11: ifnonnull     17
      14: ldc           #20                 // String UTF-8
      16: astore_1
      17: aload_1
      18: areturn

  public void setContentCharset(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #16                 // String http.protocol.content-charset
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getCredentialCharset();
    Code:
       0: aload_0
       1: ldc           #21                 // String http.protocol.credential-charset
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/String
       9: astore_1
      10: aload_1
      11: ifnonnull     29
      14: getstatic     #11                 // Field LOG:Lorg/apache/commons/logging/Log;
      17: ldc           #22                 // String Credential charset not configured, using HTTP element charset
      19: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      24: aload_0
      25: invokevirtual #24                 // Method getHttpElementCharset:()Ljava/lang/String;
      28: astore_1
      29: aload_1
      30: areturn

  public void setCredentialCharset(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #21                 // String http.protocol.credential-charset
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public org.apache.commons.httpclient.HttpVersion getVersion();
    Code:
       0: aload_0
       1: ldc           #25                 // String http.protocol.version
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: ifnonnull     15
      11: getstatic     #26                 // Field org/apache/commons/httpclient/HttpVersion.HTTP_1_1:Lorg/apache/commons/httpclient/HttpVersion;
      14: areturn
      15: aload_1
      16: checkcast     #27                 // class org/apache/commons/httpclient/HttpVersion
      19: areturn

  public void setVersion(org.apache.commons.httpclient.HttpVersion);
    Code:
       0: aload_0
       1: ldc           #25                 // String http.protocol.version
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getCookiePolicy();
    Code:
       0: aload_0
       1: ldc           #28                 // String http.protocol.cookie-policy
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: ifnonnull     14
      11: ldc           #29                 // String default
      13: areturn
      14: aload_1
      15: checkcast     #10                 // class java/lang/String
      18: areturn

  public void setCookiePolicy(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #28                 // String http.protocol.cookie-policy
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public int getSoTimeout();
    Code:
       0: aload_0
       1: ldc           #30                 // String http.socket.timeout
       3: iconst_0
       4: invokevirtual #31                 // Method getIntParameter:(Ljava/lang/String;I)I
       7: ireturn

  public void setSoTimeout(int);
    Code:
       0: aload_0
       1: ldc           #30                 // String http.socket.timeout
       3: iload_1
       4: invokevirtual #32                 // Method setIntParameter:(Ljava/lang/String;I)V
       7: return

  public void setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #33                 // String http.virtual-host
       3: aload_1
       4: invokevirtual #15                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: ldc           #33                 // String http.virtual-host
       3: invokevirtual #9                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/String
       9: areturn

  public void makeStrict();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field PROTOCOL_STRICTNESS_PARAMETERS:[Ljava/lang/String;
       4: getstatic     #35                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       7: invokevirtual #36                 // Method setParameters:([Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: ldc           #37                 // String http.protocol.status-line-garbage-limit
      13: iconst_0
      14: invokevirtual #32                 // Method setIntParameter:(Ljava/lang/String;I)V
      17: return

  public void makeLenient();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field PROTOCOL_STRICTNESS_PARAMETERS:[Ljava/lang/String;
       4: getstatic     #38                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       7: invokevirtual #36                 // Method setParameters:([Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: ldc           #37                 // String http.protocol.status-line-garbage-limit
      13: ldc           #39                 // int 2147483647
      15: invokevirtual #32                 // Method setIntParameter:(Ljava/lang/String;I)V
      18: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: getstatic     #40                 // Field class$org$apache$commons$httpclient$params$HttpMethodParams:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #41                 // String org.apache.commons.httpclient.params.HttpMethodParams
       8: invokestatic  #42                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #40                 // Field class$org$apache$commons$httpclient$params$HttpMethodParams:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #40                 // Field class$org$apache$commons$httpclient$params$HttpMethodParams:Ljava/lang/Class;
      21: invokestatic  #43                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      24: putstatic     #11                 // Field LOG:Lorg/apache/commons/logging/Log;
      27: iconst_5
      28: anewarray     #10                 // class java/lang/String
      31: dup
      32: iconst_0
      33: ldc           #44                 // String http.protocol.unambiguous-statusline
      35: aastore
      36: dup
      37: iconst_1
      38: ldc           #45                 // String http.protocol.single-cookie-header
      40: aastore
      41: dup
      42: iconst_2
      43: ldc           #46                 // String http.protocol.strict-transfer-encoding
      45: aastore
      46: dup
      47: iconst_3
      48: ldc           #47                 // String http.protocol.reject-head-body
      50: aastore
      51: dup
      52: iconst_4
      53: ldc           #48                 // String http.protocol.warn-extra-input
      55: aastore
      56: putstatic     #34                 // Field PROTOCOL_STRICTNESS_PARAMETERS:[Ljava/lang/String;
      59: return
}
