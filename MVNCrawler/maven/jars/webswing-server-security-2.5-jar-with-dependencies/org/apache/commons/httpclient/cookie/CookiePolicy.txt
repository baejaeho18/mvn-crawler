Compiled from "CookiePolicy.java"
public abstract class org.apache.commons.httpclient.cookie.CookiePolicy {
  private static java.util.Map SPECS;

  public static final java.lang.String BROWSER_COMPATIBILITY;

  public static final java.lang.String NETSCAPE;

  public static final java.lang.String RFC_2109;

  public static final java.lang.String RFC_2965;

  public static final java.lang.String IGNORE_COOKIES;

  public static final java.lang.String DEFAULT;

  public static final int COMPATIBILITY;

  public static final int NETSCAPE_DRAFT;

  public static final int RFC2109;

  public static final int RFC2965;

  private static int defaultPolicy;

  protected static final org.apache.commons.logging.Log LOG;

  static java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec;

  static java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2965Spec;

  static java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase;

  static java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec;

  static java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec;

  static java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy;

  public org.apache.commons.httpclient.cookie.CookiePolicy();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public static void registerCookieSpec(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String Id may not be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #7                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #10                 // String Cookie spec class may not be null
      24: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: getstatic     #11                 // Field SPECS:Ljava/util/Map;
      31: aload_0
      32: invokevirtual #12                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      35: aload_1
      36: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: return

  public static void unregisterCookieSpec(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String Id may not be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #11                 // Field SPECS:Ljava/util/Map;
      17: aload_0
      18: invokevirtual #12                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      21: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return

  public static org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String Id may not be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #11                 // Field SPECS:Ljava/util/Map;
      17: aload_0
      18: invokevirtual #12                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      21: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #16                 // class java/lang/Class
      29: astore_1
      30: aload_1
      31: ifnull        110
      34: aload_1
      35: invokevirtual #17                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      38: checkcast     #18                 // class org/apache/commons/httpclient/cookie/CookieSpec
      41: areturn
      42: astore_2
      43: getstatic     #20                 // Field LOG:Lorg/apache/commons/logging/Log;
      46: new           #21                 // class java/lang/StringBuffer
      49: dup
      50: invokespecial #22                 // Method java/lang/StringBuffer."<init>":()V
      53: ldc           #23                 // String Error initializing cookie spec:
      55: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: aload_0
      59: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      65: aload_2
      66: invokeinterface #26,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      71: new           #27                 // class java/lang/IllegalStateException
      74: dup
      75: new           #21                 // class java/lang/StringBuffer
      78: dup
      79: invokespecial #22                 // Method java/lang/StringBuffer."<init>":()V
      82: aload_0
      83: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      86: ldc           #28                 // String  cookie spec implemented by
      88: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: aload_1
      92: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: ldc           #30                 // String  could not be initialized
     100: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     103: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     106: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: new           #27                 // class java/lang/IllegalStateException
     113: dup
     114: new           #21                 // class java/lang/StringBuffer
     117: dup
     118: invokespecial #22                 // Method java/lang/StringBuffer."<init>":()V
     121: ldc           #32                 // String Unsupported cookie spec
     123: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     126: aload_0
     127: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     130: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     133: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     136: athrow
    Exception table:
       from    to  target type
          34    41    42   Class java/lang/Exception

  public static int getDefaultPolicy();
    Code:
       0: getstatic     #33                 // Field defaultPolicy:I
       3: ireturn

  public static void setDefaultPolicy(int);
    Code:
       0: iload_0
       1: putstatic     #33                 // Field defaultPolicy:I
       4: return

  public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 40
                     2: 48
                     3: 56
               default: 64
          }
      32: new           #34                 // class org/apache/commons/httpclient/cookie/CookieSpecBase
      35: dup
      36: invokespecial #35                 // Method org/apache/commons/httpclient/cookie/CookieSpecBase."<init>":()V
      39: areturn
      40: new           #36                 // class org/apache/commons/httpclient/cookie/NetscapeDraftSpec
      43: dup
      44: invokespecial #37                 // Method org/apache/commons/httpclient/cookie/NetscapeDraftSpec."<init>":()V
      47: areturn
      48: new           #38                 // class org/apache/commons/httpclient/cookie/RFC2109Spec
      51: dup
      52: invokespecial #39                 // Method org/apache/commons/httpclient/cookie/RFC2109Spec."<init>":()V
      55: areturn
      56: new           #40                 // class org/apache/commons/httpclient/cookie/RFC2965Spec
      59: dup
      60: invokespecial #41                 // Method org/apache/commons/httpclient/cookie/RFC2965Spec."<init>":()V
      63: areturn
      64: invokestatic  #42                 // Method getDefaultSpec:()Lorg/apache/commons/httpclient/cookie/CookieSpec;
      67: areturn

  public static org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec();
    Code:
       0: ldc           #43                 // String default
       2: invokestatic  #44                 // Method getCookieSpec:(Ljava/lang/String;)Lorg/apache/commons/httpclient/cookie/CookieSpec;
       5: areturn
       6: astore_0
       7: getstatic     #20                 // Field LOG:Lorg/apache/commons/logging/Log;
      10: ldc           #45                 // String Default cookie policy is not registered
      12: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      17: new           #38                 // class org/apache/commons/httpclient/cookie/RFC2109Spec
      20: dup
      21: invokespecial #39                 // Method org/apache/commons/httpclient/cookie/RFC2109Spec."<init>":()V
      24: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/IllegalStateException

  public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByVersion(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 2
                     0: 28
                     1: 36
               default: 44
          }
      28: new           #36                 // class org/apache/commons/httpclient/cookie/NetscapeDraftSpec
      31: dup
      32: invokespecial #37                 // Method org/apache/commons/httpclient/cookie/NetscapeDraftSpec."<init>":()V
      35: areturn
      36: new           #38                 // class org/apache/commons/httpclient/cookie/RFC2109Spec
      39: dup
      40: invokespecial #39                 // Method org/apache/commons/httpclient/cookie/RFC2109Spec."<init>":()V
      43: areturn
      44: invokestatic  #42                 // Method getDefaultSpec:()Lorg/apache/commons/httpclient/cookie/CookieSpec;
      47: areturn

  public static org.apache.commons.httpclient.cookie.CookieSpec getCompatibilitySpec();
    Code:
       0: iconst_0
       1: invokestatic  #47                 // Method getSpecByPolicy:(I)Lorg/apache/commons/httpclient/cookie/CookieSpec;
       4: areturn

  public static java.lang.String[] getRegisteredCookieSpecs();
    Code:
       0: getstatic     #11                 // Field SPECS:Ljava/util/Map;
       3: invokeinterface #48,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       8: getstatic     #11                 // Field SPECS:Ljava/util/Map;
      11: invokeinterface #49,  1           // InterfaceMethod java/util/Map.size:()I
      16: anewarray     #50                 // class java/lang/String
      19: invokeinterface #51,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      24: checkcast     #52                 // class "[Ljava/lang/String;"
      27: checkcast     #52                 // class "[Ljava/lang/String;"
      30: areturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: new           #53                 // class java/util/HashMap
       3: dup
       4: invokespecial #54                 // Method java/util/HashMap."<init>":()V
       7: invokestatic  #55                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #11                 // Field SPECS:Ljava/util/Map;
      13: ldc           #43                 // String default
      15: getstatic     #56                 // Field class$org$apache$commons$httpclient$cookie$RFC2109Spec:Ljava/lang/Class;
      18: ifnonnull     33
      21: ldc           #57                 // String org.apache.commons.httpclient.cookie.RFC2109Spec
      23: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      26: dup
      27: putstatic     #56                 // Field class$org$apache$commons$httpclient$cookie$RFC2109Spec:Ljava/lang/Class;
      30: goto          36
      33: getstatic     #56                 // Field class$org$apache$commons$httpclient$cookie$RFC2109Spec:Ljava/lang/Class;
      36: invokestatic  #59                 // Method registerCookieSpec:(Ljava/lang/String;Ljava/lang/Class;)V
      39: ldc           #60                 // String rfc2109
      41: getstatic     #56                 // Field class$org$apache$commons$httpclient$cookie$RFC2109Spec:Ljava/lang/Class;
      44: ifnonnull     59
      47: ldc           #57                 // String org.apache.commons.httpclient.cookie.RFC2109Spec
      49: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      52: dup
      53: putstatic     #56                 // Field class$org$apache$commons$httpclient$cookie$RFC2109Spec:Ljava/lang/Class;
      56: goto          62
      59: getstatic     #56                 // Field class$org$apache$commons$httpclient$cookie$RFC2109Spec:Ljava/lang/Class;
      62: invokestatic  #59                 // Method registerCookieSpec:(Ljava/lang/String;Ljava/lang/Class;)V
      65: ldc           #61                 // String rfc2965
      67: getstatic     #62                 // Field class$org$apache$commons$httpclient$cookie$RFC2965Spec:Ljava/lang/Class;
      70: ifnonnull     85
      73: ldc           #63                 // String org.apache.commons.httpclient.cookie.RFC2965Spec
      75: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      78: dup
      79: putstatic     #62                 // Field class$org$apache$commons$httpclient$cookie$RFC2965Spec:Ljava/lang/Class;
      82: goto          88
      85: getstatic     #62                 // Field class$org$apache$commons$httpclient$cookie$RFC2965Spec:Ljava/lang/Class;
      88: invokestatic  #59                 // Method registerCookieSpec:(Ljava/lang/String;Ljava/lang/Class;)V
      91: ldc           #64                 // String compatibility
      93: getstatic     #65                 // Field class$org$apache$commons$httpclient$cookie$CookieSpecBase:Ljava/lang/Class;
      96: ifnonnull     111
      99: ldc           #66                 // String org.apache.commons.httpclient.cookie.CookieSpecBase
     101: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     104: dup
     105: putstatic     #65                 // Field class$org$apache$commons$httpclient$cookie$CookieSpecBase:Ljava/lang/Class;
     108: goto          114
     111: getstatic     #65                 // Field class$org$apache$commons$httpclient$cookie$CookieSpecBase:Ljava/lang/Class;
     114: invokestatic  #59                 // Method registerCookieSpec:(Ljava/lang/String;Ljava/lang/Class;)V
     117: ldc           #67                 // String netscape
     119: getstatic     #68                 // Field class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec:Ljava/lang/Class;
     122: ifnonnull     137
     125: ldc           #69                 // String org.apache.commons.httpclient.cookie.NetscapeDraftSpec
     127: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     130: dup
     131: putstatic     #68                 // Field class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec:Ljava/lang/Class;
     134: goto          140
     137: getstatic     #68                 // Field class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec:Ljava/lang/Class;
     140: invokestatic  #59                 // Method registerCookieSpec:(Ljava/lang/String;Ljava/lang/Class;)V
     143: ldc           #70                 // String ignoreCookies
     145: getstatic     #71                 // Field class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec:Ljava/lang/Class;
     148: ifnonnull     163
     151: ldc           #72                 // String org.apache.commons.httpclient.cookie.IgnoreCookiesSpec
     153: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     156: dup
     157: putstatic     #71                 // Field class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec:Ljava/lang/Class;
     160: goto          166
     163: getstatic     #71                 // Field class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec:Ljava/lang/Class;
     166: invokestatic  #59                 // Method registerCookieSpec:(Ljava/lang/String;Ljava/lang/Class;)V
     169: iconst_2
     170: putstatic     #33                 // Field defaultPolicy:I
     173: getstatic     #73                 // Field class$org$apache$commons$httpclient$cookie$CookiePolicy:Ljava/lang/Class;
     176: ifnonnull     191
     179: ldc           #74                 // String org.apache.commons.httpclient.cookie.CookiePolicy
     181: invokestatic  #58                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     184: dup
     185: putstatic     #73                 // Field class$org$apache$commons$httpclient$cookie$CookiePolicy:Ljava/lang/Class;
     188: goto          194
     191: getstatic     #73                 // Field class$org$apache$commons$httpclient$cookie$CookiePolicy:Ljava/lang/Class;
     194: invokestatic  #75                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
     197: putstatic     #20                 // Field LOG:Lorg/apache/commons/logging/Log;
     200: return
}
