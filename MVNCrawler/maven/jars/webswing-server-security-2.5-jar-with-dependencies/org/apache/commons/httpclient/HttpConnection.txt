Compiled from "HttpConnection.java"
public class org.apache.commons.httpclient.HttpConnection {
  private static final byte[] CRLF;

  private static final org.apache.commons.logging.Log LOG;

  private java.lang.String hostName;

  private int portNumber;

  private java.lang.String proxyHostName;

  private int proxyPortNumber;

  private java.net.Socket socket;

  private java.io.InputStream inputStream;

  private java.io.OutputStream outputStream;

  private java.io.InputStream lastResponseInputStream;

  protected boolean isOpen;

  private org.apache.commons.httpclient.protocol.Protocol protocolInUse;

  private org.apache.commons.httpclient.params.HttpConnectionParams params;

  private boolean locked;

  private boolean usingSecureSocket;

  private boolean tunnelEstablished;

  private org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager;

  private java.net.InetAddress localAddress;

  static java.lang.Class class$org$apache$commons$httpclient$HttpConnection;

  public org.apache.commons.httpclient.HttpConnection(java.lang.String, int);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_m1
       3: aload_1
       4: aconst_null
       5: iload_2
       6: ldc           #6                  // String http
       8: invokestatic  #7                  // Method org/apache/commons/httpclient/protocol/Protocol.getProtocol:(Ljava/lang/String;)Lorg/apache/commons/httpclient/protocol/Protocol;
      11: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      14: return

  public org.apache.commons.httpclient.HttpConnection(java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_m1
       3: aload_1
       4: aconst_null
       5: iload_2
       6: aload_3
       7: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      10: return

  public org.apache.commons.httpclient.HttpConnection(java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_m1
       3: aload_1
       4: aload_2
       5: iload_3
       6: aload         4
       8: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      11: return

  public org.apache.commons.httpclient.HttpConnection(java.lang.String, int, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: iload         4
       7: ldc           #6                  // String http
       9: invokestatic  #7                  // Method org/apache/commons/httpclient/protocol/Protocol.getProtocol:(Ljava/lang/String;)Lorg/apache/commons/httpclient/protocol/Protocol;
      12: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      15: return

  public org.apache.commons.httpclient.HttpConnection(org.apache.commons.httpclient.HostConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method org/apache/commons/httpclient/HostConfiguration.getProxyHost:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #10                 // Method org/apache/commons/httpclient/HostConfiguration.getProxyPort:()I
       9: aload_1
      10: invokevirtual #11                 // Method org/apache/commons/httpclient/HostConfiguration.getHost:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #12                 // Method org/apache/commons/httpclient/HostConfiguration.getPort:()I
      17: aload_1
      18: invokevirtual #13                 // Method org/apache/commons/httpclient/HostConfiguration.getProtocol:()Lorg/apache/commons/httpclient/protocol/Protocol;
      21: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      24: aload_0
      25: aload_1
      26: invokevirtual #15                 // Method org/apache/commons/httpclient/HostConfiguration.getLocalAddress:()Ljava/net/InetAddress;
      29: putfield      #16                 // Field localAddress:Ljava/net/InetAddress;
      32: return

  public org.apache.commons.httpclient.HttpConnection(java.lang.String, int, java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         5
       6: aload         6
       8: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;ILorg/apache/commons/httpclient/protocol/Protocol;)V
      11: return

  public org.apache.commons.httpclient.HttpConnection(java.lang.String, int, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #18                 // Field hostName:Ljava/lang/String;
       9: aload_0
      10: iconst_m1
      11: putfield      #19                 // Field portNumber:I
      14: aload_0
      15: aconst_null
      16: putfield      #20                 // Field proxyHostName:Ljava/lang/String;
      19: aload_0
      20: iconst_m1
      21: putfield      #21                 // Field proxyPortNumber:I
      24: aload_0
      25: aconst_null
      26: putfield      #22                 // Field socket:Ljava/net/Socket;
      29: aload_0
      30: aconst_null
      31: putfield      #23                 // Field inputStream:Ljava/io/InputStream;
      34: aload_0
      35: aconst_null
      36: putfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      39: aload_0
      40: aconst_null
      41: putfield      #25                 // Field lastResponseInputStream:Ljava/io/InputStream;
      44: aload_0
      45: iconst_0
      46: putfield      #26                 // Field isOpen:Z
      49: aload_0
      50: new           #27                 // class org/apache/commons/httpclient/params/HttpConnectionParams
      53: dup
      54: invokespecial #28                 // Method org/apache/commons/httpclient/params/HttpConnectionParams."<init>":()V
      57: putfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
      60: aload_0
      61: iconst_0
      62: putfield      #30                 // Field locked:Z
      65: aload_0
      66: iconst_0
      67: putfield      #31                 // Field usingSecureSocket:Z
      70: aload_0
      71: iconst_0
      72: putfield      #32                 // Field tunnelEstablished:Z
      75: aload_3
      76: ifnonnull     89
      79: new           #33                 // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #34                 // String host parameter is null
      85: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload         5
      91: ifnonnull     104
      94: new           #33                 // class java/lang/IllegalArgumentException
      97: dup
      98: ldc           #36                 // String protocol is null
     100: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_0
     105: aload_1
     106: putfield      #20                 // Field proxyHostName:Ljava/lang/String;
     109: aload_0
     110: iload_2
     111: putfield      #21                 // Field proxyPortNumber:I
     114: aload_0
     115: aload_3
     116: putfield      #18                 // Field hostName:Ljava/lang/String;
     119: aload_0
     120: aload         5
     122: iload         4
     124: invokevirtual #37                 // Method org/apache/commons/httpclient/protocol/Protocol.resolvePort:(I)I
     127: putfield      #19                 // Field portNumber:I
     130: aload_0
     131: aload         5
     133: putfield      #38                 // Field protocolInUse:Lorg/apache/commons/httpclient/protocol/Protocol;
     136: return

  protected java.net.Socket getSocket();
    Code:
       0: aload_0
       1: getfield      #22                 // Field socket:Ljava/net/Socket;
       4: areturn

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #18                 // Field hostName:Ljava/lang/String;
       4: areturn

  public void setHost(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #34                 // String host parameter is null
      10: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #39                 // Method assertNotOpen:()V
      18: aload_0
      19: aload_1
      20: putfield      #18                 // Field hostName:Ljava/lang/String;
      23: return

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: getfield      #18                 // Field hostName:Ljava/lang/String;
       4: areturn

  public void setVirtualHost(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method assertNotOpen:()V
       4: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #19                 // Field portNumber:I
       4: ifge          23
       7: aload_0
       8: invokevirtual #40                 // Method isSecure:()Z
      11: ifeq          20
      14: sipush        443
      17: goto          22
      20: bipush        80
      22: ireturn
      23: aload_0
      24: getfield      #19                 // Field portNumber:I
      27: ireturn

  public void setPort(int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method assertNotOpen:()V
       4: aload_0
       5: iload_1
       6: putfield      #19                 // Field portNumber:I
       9: return

  public java.lang.String getProxyHost();
    Code:
       0: aload_0
       1: getfield      #20                 // Field proxyHostName:Ljava/lang/String;
       4: areturn

  public void setProxyHost(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method assertNotOpen:()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field proxyHostName:Ljava/lang/String;
       9: return

  public int getProxyPort();
    Code:
       0: aload_0
       1: getfield      #21                 // Field proxyPortNumber:I
       4: ireturn

  public void setProxyPort(int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method assertNotOpen:()V
       4: aload_0
       5: iload_1
       6: putfield      #21                 // Field proxyPortNumber:I
       9: return

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #38                 // Field protocolInUse:Lorg/apache/commons/httpclient/protocol/Protocol;
       4: invokevirtual #41                 // Method org/apache/commons/httpclient/protocol/Protocol.isSecure:()Z
       7: ireturn

  public org.apache.commons.httpclient.protocol.Protocol getProtocol();
    Code:
       0: aload_0
       1: getfield      #38                 // Field protocolInUse:Lorg/apache/commons/httpclient/protocol/Protocol;
       4: areturn

  public void setProtocol(org.apache.commons.httpclient.protocol.Protocol);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method assertNotOpen:()V
       4: aload_1
       5: ifnonnull     18
       8: new           #33                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #36                 // String protocol is null
      14: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #38                 // Field protocolInUse:Lorg/apache/commons/httpclient/protocol/Protocol;
      23: return

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #16                 // Field localAddress:Ljava/net/InetAddress;
       4: areturn

  public void setLocalAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method assertNotOpen:()V
       4: aload_0
       5: aload_1
       6: putfield      #16                 // Field localAddress:Ljava/net/InetAddress;
       9: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #26                 // Field isOpen:Z
       4: ireturn

  public boolean closeIfStale() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field isOpen:Z
       4: ifeq          30
       7: aload_0
       8: invokevirtual #42                 // Method isStale:()Z
      11: ifeq          30
      14: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      17: ldc           #44                 // String Connection is stale, closing...
      19: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      24: aload_0
      25: invokevirtual #46                 // Method close:()V
      28: iconst_1
      29: ireturn
      30: iconst_0
      31: ireturn

  public boolean isStaleCheckingEnabled();
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: invokevirtual #47                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.isStaleCheckingEnabled:()Z
       7: ireturn

  public void setStaleCheckingEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: iload_1
       5: invokevirtual #48                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.setStaleCheckingEnabled:(Z)V
       8: return

  protected boolean isStale() throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #26                 // Field isOpen:Z
       6: ifeq          126
       9: iconst_0
      10: istore_1
      11: aload_0
      12: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      15: invokevirtual #49                 // Method java/io/InputStream.available:()I
      18: ifgt          96
      21: aload_0
      22: getfield      #22                 // Field socket:Ljava/net/Socket;
      25: iconst_1
      26: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
      29: aload_0
      30: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      33: iconst_1
      34: invokevirtual #51                 // Method java/io/InputStream.mark:(I)V
      37: aload_0
      38: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      41: invokevirtual #52                 // Method java/io/InputStream.read:()I
      44: istore_2
      45: iload_2
      46: iconst_m1
      47: if_icmpne     55
      50: iconst_1
      51: istore_1
      52: goto          62
      55: aload_0
      56: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      59: invokevirtual #53                 // Method java/io/InputStream.reset:()V
      62: aload_0
      63: getfield      #22                 // Field socket:Ljava/net/Socket;
      66: aload_0
      67: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
      70: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
      73: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
      76: goto          96
      79: astore_3
      80: aload_0
      81: getfield      #22                 // Field socket:Ljava/net/Socket;
      84: aload_0
      85: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
      88: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
      91: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
      94: aload_3
      95: athrow
      96: goto          126
      99: astore_2
     100: aload_2
     101: invokestatic  #56                 // Method org/apache/commons/httpclient/util/ExceptionUtil.isSocketTimeoutException:(Ljava/io/InterruptedIOException;)Z
     104: ifne          109
     107: aload_2
     108: athrow
     109: goto          126
     112: astore_2
     113: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     116: ldc           #58                 // String An error occurred while reading from the socket, is appears to be stale
     118: aload_2
     119: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     124: iconst_1
     125: istore_1
     126: iload_1
     127: ireturn
    Exception table:
       from    to  target type
          21    62    79   any
          79    80    79   any
          11    96    99   Class java/io/InterruptedIOException
          11    96   112   Class java/io/IOException

  public boolean isProxied();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #20                 // Field proxyHostName:Ljava/lang/String;
       5: if_acmpeq     20
       8: iconst_0
       9: aload_0
      10: getfield      #21                 // Field proxyPortNumber:I
      13: if_icmpge     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void setLastResponseInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field lastResponseInputStream:Ljava/io/InputStream;
       5: return

  public java.io.InputStream getLastResponseInputStream();
    Code:
       0: aload_0
       1: getfield      #25                 // Field lastResponseInputStream:Ljava/io/InputStream;
       4: areturn

  public org.apache.commons.httpclient.params.HttpConnectionParams getParams();
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: areturn

  public void setParams(org.apache.commons.httpclient.params.HttpConnectionParams);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #60                 // String Parameters may not be null
      10: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
      19: return

  public void setSoTimeout(int) throws java.net.SocketException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: iload_1
       5: invokevirtual #61                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.setSoTimeout:(I)V
       8: aload_0
       9: getfield      #22                 // Field socket:Ljava/net/Socket;
      12: ifnull        23
      15: aload_0
      16: getfield      #22                 // Field socket:Ljava/net/Socket;
      19: iload_1
      20: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
      23: return

  public void setSocketTimeout(int) throws java.net.SocketException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method assertOpen:()V
       4: aload_0
       5: getfield      #22                 // Field socket:Ljava/net/Socket;
       8: ifnull        19
      11: aload_0
      12: getfield      #22                 // Field socket:Ljava/net/Socket;
      15: iload_1
      16: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
      19: return

  public int getSoTimeout() throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
       7: ireturn

  public void setConnectionTimeout(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: iload_1
       5: invokevirtual #63                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.setConnectionTimeout:(I)V
       8: return

  public void open() throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #64                 // String enter HttpConnection.open()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #20                 // Field proxyHostName:Ljava/lang/String;
      14: ifnonnull     24
      17: aload_0
      18: getfield      #18                 // Field hostName:Ljava/lang/String;
      21: goto          28
      24: aload_0
      25: getfield      #20                 // Field proxyHostName:Ljava/lang/String;
      28: astore_1
      29: aload_0
      30: getfield      #20                 // Field proxyHostName:Ljava/lang/String;
      33: ifnonnull     43
      36: aload_0
      37: getfield      #19                 // Field portNumber:I
      40: goto          47
      43: aload_0
      44: getfield      #21                 // Field proxyPortNumber:I
      47: istore_2
      48: aload_0
      49: invokevirtual #39                 // Method assertNotOpen:()V
      52: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      55: invokeinterface #66,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      60: ifeq          99
      63: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      66: new           #67                 // class java/lang/StringBuffer
      69: dup
      70: invokespecial #68                 // Method java/lang/StringBuffer."<init>":()V
      73: ldc           #69                 // String Open connection to
      75: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: aload_1
      79: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      82: ldc           #71                 // String :
      84: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: iload_2
      88: invokevirtual #72                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      91: invokevirtual #73                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      94: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      99: aload_0
     100: getfield      #22                 // Field socket:Ljava/net/Socket;
     103: ifnonnull     190
     106: aload_0
     107: aload_0
     108: invokevirtual #40                 // Method isSecure:()Z
     111: ifeq          125
     114: aload_0
     115: invokevirtual #74                 // Method isProxied:()Z
     118: ifne          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: putfield      #31                 // Field usingSecureSocket:Z
     129: aconst_null
     130: astore_3
     131: aload_0
     132: invokevirtual #40                 // Method isSecure:()Z
     135: ifeq          161
     138: aload_0
     139: invokevirtual #74                 // Method isProxied:()Z
     142: ifeq          161
     145: ldc           #6                  // String http
     147: invokestatic  #7                  // Method org/apache/commons/httpclient/protocol/Protocol.getProtocol:(Ljava/lang/String;)Lorg/apache/commons/httpclient/protocol/Protocol;
     150: astore        4
     152: aload         4
     154: invokevirtual #75                 // Method org/apache/commons/httpclient/protocol/Protocol.getSocketFactory:()Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
     157: astore_3
     158: goto          169
     161: aload_0
     162: getfield      #38                 // Field protocolInUse:Lorg/apache/commons/httpclient/protocol/Protocol;
     165: invokevirtual #75                 // Method org/apache/commons/httpclient/protocol/Protocol.getSocketFactory:()Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
     168: astore_3
     169: aload_0
     170: aload_3
     171: aload_1
     172: iload_2
     173: aload_0
     174: getfield      #16                 // Field localAddress:Ljava/net/InetAddress;
     177: iconst_0
     178: aload_0
     179: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     182: invokeinterface #76,  6           // InterfaceMethod org/apache/commons/httpclient/protocol/ProtocolSocketFactory.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/commons/httpclient/params/HttpConnectionParams;)Ljava/net/Socket;
     187: putfield      #22                 // Field socket:Ljava/net/Socket;
     190: aload_0
     191: getfield      #22                 // Field socket:Ljava/net/Socket;
     194: aload_0
     195: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     198: invokevirtual #77                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getTcpNoDelay:()Z
     201: invokevirtual #78                 // Method java/net/Socket.setTcpNoDelay:(Z)V
     204: aload_0
     205: getfield      #22                 // Field socket:Ljava/net/Socket;
     208: aload_0
     209: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     212: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
     215: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
     218: aload_0
     219: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     222: invokevirtual #79                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getLinger:()I
     225: istore_3
     226: iload_3
     227: iflt          247
     230: aload_0
     231: getfield      #22                 // Field socket:Ljava/net/Socket;
     234: iload_3
     235: ifle          242
     238: iconst_1
     239: goto          243
     242: iconst_0
     243: iload_3
     244: invokevirtual #80                 // Method java/net/Socket.setSoLinger:(ZI)V
     247: aload_0
     248: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     251: invokevirtual #81                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSendBufferSize:()I
     254: istore        4
     256: iload         4
     258: iflt          270
     261: aload_0
     262: getfield      #22                 // Field socket:Ljava/net/Socket;
     265: iload         4
     267: invokevirtual #82                 // Method java/net/Socket.setSendBufferSize:(I)V
     270: aload_0
     271: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     274: invokevirtual #83                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getReceiveBufferSize:()I
     277: istore        5
     279: iload         5
     281: iflt          293
     284: aload_0
     285: getfield      #22                 // Field socket:Ljava/net/Socket;
     288: iload         5
     290: invokevirtual #84                 // Method java/net/Socket.setReceiveBufferSize:(I)V
     293: aload_0
     294: getfield      #22                 // Field socket:Ljava/net/Socket;
     297: invokevirtual #85                 // Method java/net/Socket.getSendBufferSize:()I
     300: istore        6
     302: iload         6
     304: sipush        2048
     307: if_icmpgt     315
     310: iload         6
     312: ifgt          320
     315: sipush        2048
     318: istore        6
     320: aload_0
     321: getfield      #22                 // Field socket:Ljava/net/Socket;
     324: invokevirtual #86                 // Method java/net/Socket.getReceiveBufferSize:()I
     327: istore        7
     329: iload         7
     331: sipush        2048
     334: if_icmpgt     342
     337: iload         7
     339: ifgt          347
     342: sipush        2048
     345: istore        7
     347: aload_0
     348: new           #87                 // class java/io/BufferedInputStream
     351: dup
     352: aload_0
     353: getfield      #22                 // Field socket:Ljava/net/Socket;
     356: invokevirtual #88                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
     359: iload         7
     361: invokespecial #89                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
     364: putfield      #23                 // Field inputStream:Ljava/io/InputStream;
     367: aload_0
     368: new           #90                 // class java/io/BufferedOutputStream
     371: dup
     372: aload_0
     373: getfield      #22                 // Field socket:Ljava/net/Socket;
     376: invokevirtual #91                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
     379: iload         6
     381: invokespecial #92                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
     384: putfield      #24                 // Field outputStream:Ljava/io/OutputStream;
     387: aload_0
     388: iconst_1
     389: putfield      #26                 // Field isOpen:Z
     392: goto          402
     395: astore_3
     396: aload_0
     397: invokevirtual #93                 // Method closeSocketAndStreams:()V
     400: aload_3
     401: athrow
     402: return
    Exception table:
       from    to  target type
          99   392   395   Class java/io/IOException

  public void tunnelCreated() throws java.lang.IllegalStateException, java.io.IOException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #94                 // String enter HttpConnection.tunnelCreated()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #40                 // Method isSecure:()Z
      14: ifeq          24
      17: aload_0
      18: invokevirtual #74                 // Method isProxied:()Z
      21: ifne          34
      24: new           #95                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #96                 // String Connection must be secure and proxied to use this feature
      30: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #31                 // Field usingSecureSocket:Z
      38: ifeq          51
      41: new           #95                 // class java/lang/IllegalStateException
      44: dup
      45: ldc           #98                 // String Already using a secure socket
      47: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      54: invokeinterface #66,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      59: ifeq          104
      62: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      65: new           #67                 // class java/lang/StringBuffer
      68: dup
      69: invokespecial #68                 // Method java/lang/StringBuffer."<init>":()V
      72: ldc           #99                 // String Secure tunnel to
      74: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      77: aload_0
      78: getfield      #18                 // Field hostName:Ljava/lang/String;
      81: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: ldc           #71                 // String :
      86: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      89: aload_0
      90: getfield      #19                 // Field portNumber:I
      93: invokevirtual #72                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      96: invokevirtual #73                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      99: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     104: aload_0
     105: getfield      #38                 // Field protocolInUse:Lorg/apache/commons/httpclient/protocol/Protocol;
     108: invokevirtual #75                 // Method org/apache/commons/httpclient/protocol/Protocol.getSocketFactory:()Lorg/apache/commons/httpclient/protocol/ProtocolSocketFactory;
     111: checkcast     #100                // class org/apache/commons/httpclient/protocol/SecureProtocolSocketFactory
     114: astore_1
     115: aload_0
     116: aload_1
     117: aload_0
     118: getfield      #22                 // Field socket:Ljava/net/Socket;
     121: aload_0
     122: getfield      #18                 // Field hostName:Ljava/lang/String;
     125: aload_0
     126: getfield      #19                 // Field portNumber:I
     129: iconst_1
     130: invokeinterface #101,  5          // InterfaceMethod org/apache/commons/httpclient/protocol/SecureProtocolSocketFactory.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;
     135: putfield      #22                 // Field socket:Ljava/net/Socket;
     138: aload_0
     139: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     142: invokevirtual #81                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSendBufferSize:()I
     145: istore_2
     146: iload_2
     147: iflt          158
     150: aload_0
     151: getfield      #22                 // Field socket:Ljava/net/Socket;
     154: iload_2
     155: invokevirtual #82                 // Method java/net/Socket.setSendBufferSize:(I)V
     158: aload_0
     159: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     162: invokevirtual #83                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getReceiveBufferSize:()I
     165: istore_3
     166: iload_3
     167: iflt          178
     170: aload_0
     171: getfield      #22                 // Field socket:Ljava/net/Socket;
     174: iload_3
     175: invokevirtual #84                 // Method java/net/Socket.setReceiveBufferSize:(I)V
     178: aload_0
     179: getfield      #22                 // Field socket:Ljava/net/Socket;
     182: invokevirtual #85                 // Method java/net/Socket.getSendBufferSize:()I
     185: istore        4
     187: iload         4
     189: sipush        2048
     192: if_icmple     200
     195: sipush        2048
     198: istore        4
     200: aload_0
     201: getfield      #22                 // Field socket:Ljava/net/Socket;
     204: invokevirtual #86                 // Method java/net/Socket.getReceiveBufferSize:()I
     207: istore        5
     209: iload         5
     211: sipush        2048
     214: if_icmple     222
     217: sipush        2048
     220: istore        5
     222: aload_0
     223: new           #87                 // class java/io/BufferedInputStream
     226: dup
     227: aload_0
     228: getfield      #22                 // Field socket:Ljava/net/Socket;
     231: invokevirtual #88                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
     234: iload         5
     236: invokespecial #89                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
     239: putfield      #23                 // Field inputStream:Ljava/io/InputStream;
     242: aload_0
     243: new           #90                 // class java/io/BufferedOutputStream
     246: dup
     247: aload_0
     248: getfield      #22                 // Field socket:Ljava/net/Socket;
     251: invokevirtual #91                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
     254: iload         4
     256: invokespecial #92                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
     259: putfield      #24                 // Field outputStream:Ljava/io/OutputStream;
     262: aload_0
     263: iconst_1
     264: putfield      #31                 // Field usingSecureSocket:Z
     267: aload_0
     268: iconst_1
     269: putfield      #32                 // Field tunnelEstablished:Z
     272: return

  public boolean isTransparent();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isProxied:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #32                 // Field tunnelEstablished:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void flushRequestOutputStream() throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #102                // String enter HttpConnection.flushRequestOutputStream()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #62                 // Method assertOpen:()V
      14: aload_0
      15: getfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      18: invokevirtual #103                // Method java/io/OutputStream.flush:()V
      21: return

  public java.io.OutputStream getRequestOutputStream() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #104                // String enter HttpConnection.getRequestOutputStream()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #62                 // Method assertOpen:()V
      14: aload_0
      15: getfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      18: astore_1
      19: getstatic     #105                // Field org/apache/commons/httpclient/Wire.CONTENT_WIRE:Lorg/apache/commons/httpclient/Wire;
      22: invokevirtual #106                // Method org/apache/commons/httpclient/Wire.enabled:()Z
      25: ifeq          40
      28: new           #107                // class org/apache/commons/httpclient/WireLogOutputStream
      31: dup
      32: aload_1
      33: getstatic     #105                // Field org/apache/commons/httpclient/Wire.CONTENT_WIRE:Lorg/apache/commons/httpclient/Wire;
      36: invokespecial #108                // Method org/apache/commons/httpclient/WireLogOutputStream."<init>":(Ljava/io/OutputStream;Lorg/apache/commons/httpclient/Wire;)V
      39: astore_1
      40: aload_1
      41: areturn

  public java.io.InputStream getResponseInputStream() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #109                // String enter HttpConnection.getResponseInputStream()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #62                 // Method assertOpen:()V
      14: aload_0
      15: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      18: areturn

  public boolean isResponseAvailable() throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #110                // String enter HttpConnection.isResponseAvailable()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #26                 // Field isOpen:Z
      14: ifeq          33
      17: aload_0
      18: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      21: invokevirtual #49                 // Method java/io/InputStream.available:()I
      24: ifle          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: iconst_0
      34: ireturn

  public boolean isResponseAvailable(int) throws java.io.IOException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #111                // String enter HttpConnection.isResponseAvailable(int)
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #62                 // Method assertOpen:()V
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      20: invokevirtual #49                 // Method java/io/InputStream.available:()I
      23: ifle          31
      26: iconst_1
      27: istore_2
      28: goto          251
      31: aload_0
      32: getfield      #22                 // Field socket:Ljava/net/Socket;
      35: iload_1
      36: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
      39: aload_0
      40: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      43: iconst_1
      44: invokevirtual #51                 // Method java/io/InputStream.mark:(I)V
      47: aload_0
      48: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      51: invokevirtual #52                 // Method java/io/InputStream.read:()I
      54: istore_3
      55: iload_3
      56: iconst_m1
      57: if_icmpeq     82
      60: aload_0
      61: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      64: invokevirtual #53                 // Method java/io/InputStream.reset:()V
      67: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      70: ldc           #112                // String Input data available
      72: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      77: iconst_1
      78: istore_2
      79: goto          92
      82: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      85: ldc           #113                // String Input data not available
      87: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      92: aload_0
      93: getfield      #22                 // Field socket:Ljava/net/Socket;
      96: aload_0
      97: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     100: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
     103: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
     106: goto          251
     109: astore_3
     110: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     113: ldc           #114                // String An error ocurred while resetting soTimeout, we will assume that no response is available.
     115: aload_3
     116: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     121: iconst_0
     122: istore_2
     123: goto          251
     126: astore_3
     127: aload_3
     128: invokestatic  #56                 // Method org/apache/commons/httpclient/util/ExceptionUtil.isSocketTimeoutException:(Ljava/io/InterruptedIOException;)Z
     131: ifne          136
     134: aload_3
     135: athrow
     136: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     139: invokeinterface #66,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     144: ifeq          179
     147: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     150: new           #67                 // class java/lang/StringBuffer
     153: dup
     154: invokespecial #68                 // Method java/lang/StringBuffer."<init>":()V
     157: ldc           #115                // String Input data not available after
     159: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     162: iload_1
     163: invokevirtual #72                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     166: ldc           #116                // String  ms
     168: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     171: invokevirtual #73                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     174: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     179: aload_0
     180: getfield      #22                 // Field socket:Ljava/net/Socket;
     183: aload_0
     184: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     187: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
     190: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
     193: goto          251
     196: astore_3
     197: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     200: ldc           #114                // String An error ocurred while resetting soTimeout, we will assume that no response is available.
     202: aload_3
     203: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     208: iconst_0
     209: istore_2
     210: goto          251
     213: astore        4
     215: aload_0
     216: getfield      #22                 // Field socket:Ljava/net/Socket;
     219: aload_0
     220: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
     223: invokevirtual #54                 // Method org/apache/commons/httpclient/params/HttpConnectionParams.getSoTimeout:()I
     226: invokevirtual #50                 // Method java/net/Socket.setSoTimeout:(I)V
     229: goto          248
     232: astore        5
     234: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     237: ldc           #114                // String An error ocurred while resetting soTimeout, we will assume that no response is available.
     239: aload         5
     241: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     246: iconst_0
     247: istore_2
     248: aload         4
     250: athrow
     251: iload_2
     252: ireturn
    Exception table:
       from    to  target type
          92   106   109   Class java/io/IOException
          31    92   126   Class java/io/InterruptedIOException
         179   193   196   Class java/io/IOException
          31    92   213   any
         126   179   213   any
         215   229   232   Class java/io/IOException
         213   215   213   any

  public void write(byte[]) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #117                // String enter HttpConnection.write(byte[])
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokevirtual #118                // Method write:([BII)V
      18: return

  public void write(byte[], int, int) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #119                // String enter HttpConnection.write(byte[], int, int)
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: iload_2
      11: ifge          24
      14: new           #33                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #120                // String Array offset may not be negative
      20: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: iload_3
      25: ifge          38
      28: new           #33                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #121                // String Array length may not be negative
      34: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_2
      39: iload_3
      40: iadd
      41: aload_1
      42: arraylength
      43: if_icmple     56
      46: new           #33                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #122                // String Given offset and length exceed the array length
      52: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: invokevirtual #62                 // Method assertOpen:()V
      60: aload_0
      61: getfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      64: aload_1
      65: iload_2
      66: iload_3
      67: invokevirtual #123                // Method java/io/OutputStream.write:([BII)V
      70: return

  public void writeLine(byte[]) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #124                // String enter HttpConnection.writeLine(byte[])
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #125                // Method write:([B)V
      15: aload_0
      16: invokevirtual #126                // Method writeLine:()V
      19: return

  public void writeLine() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #127                // String enter HttpConnection.writeLine()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: getstatic     #128                // Field CRLF:[B
      14: invokevirtual #125                // Method write:([B)V
      17: return

  public void print(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #129                // String enter HttpConnection.print(String)
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: ldc           #130                // String ISO-8859-1
      14: invokestatic  #131                // Method org/apache/commons/httpclient/util/EncodingUtil.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
      17: invokevirtual #125                // Method write:([B)V
      20: return

  public void print(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #129                // String enter HttpConnection.print(String)
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokestatic  #131                // Method org/apache/commons/httpclient/util/EncodingUtil.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
      16: invokevirtual #125                // Method write:([B)V
      19: return

  public void printLine(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #132                // String enter HttpConnection.printLine(String)
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: ldc           #130                // String ISO-8859-1
      14: invokestatic  #131                // Method org/apache/commons/httpclient/util/EncodingUtil.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
      17: invokevirtual #133                // Method writeLine:([B)V
      20: return

  public void printLine(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #132                // String enter HttpConnection.printLine(String)
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokestatic  #131                // Method org/apache/commons/httpclient/util/EncodingUtil.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
      16: invokevirtual #133                // Method writeLine:([B)V
      19: return

  public void printLine() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #134                // String enter HttpConnection.printLine()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #126                // Method writeLine:()V
      14: return

  public java.lang.String readLine() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #135                // String enter HttpConnection.readLine()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #62                 // Method assertOpen:()V
      14: aload_0
      15: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      18: invokestatic  #136                // Method org/apache/commons/httpclient/HttpParser.readLine:(Ljava/io/InputStream;)Ljava/lang/String;
      21: areturn

  public java.lang.String readLine(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #135                // String enter HttpConnection.readLine()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #62                 // Method assertOpen:()V
      14: aload_0
      15: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      18: aload_1
      19: invokestatic  #137                // Method org/apache/commons/httpclient/HttpParser.readLine:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;
      22: areturn

  public void shutdownOutput();
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #138                // String enter HttpConnection.shutdownOutput()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: iconst_0
      11: anewarray     #139                // class java/lang/Class
      14: astore_1
      15: aload_0
      16: getfield      #22                 // Field socket:Ljava/net/Socket;
      19: invokevirtual #140                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: ldc           #141                // String shutdownOutput
      24: aload_1
      25: invokevirtual #142                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      28: astore_2
      29: iconst_0
      30: anewarray     #143                // class java/lang/Object
      33: astore_3
      34: aload_2
      35: aload_0
      36: getfield      #22                 // Field socket:Ljava/net/Socket;
      39: aload_3
      40: invokevirtual #144                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: goto          59
      47: astore_1
      48: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      51: ldc           #146                // String Unexpected Exception caught
      53: aload_1
      54: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      59: return
    Exception table:
       from    to  target type
          10    44    47   Class java/lang/Exception

  public void close();
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #147                // String enter HttpConnection.close()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #93                 // Method closeSocketAndStreams:()V
      14: return

  public org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager();
    Code:
       0: aload_0
       1: getfield      #148                // Field httpConnectionManager:Lorg/apache/commons/httpclient/HttpConnectionManager;
       4: areturn

  public void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field httpConnectionManager:Lorg/apache/commons/httpclient/HttpConnectionManager;
       5: return

  public void releaseConnection();
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #149                // String enter HttpConnection.releaseConnection()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #30                 // Field locked:Z
      14: ifeq          30
      17: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      20: ldc           #150                // String Connection is locked.  Call to releaseConnection() ignored.
      22: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      27: goto          70
      30: aload_0
      31: getfield      #148                // Field httpConnectionManager:Lorg/apache/commons/httpclient/HttpConnectionManager;
      34: ifnull        60
      37: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      40: ldc           #151                // String Releasing connection back to connection manager.
      42: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #148                // Field httpConnectionManager:Lorg/apache/commons/httpclient/HttpConnectionManager;
      51: aload_0
      52: invokeinterface #152,  2          // InterfaceMethod org/apache/commons/httpclient/HttpConnectionManager.releaseConnection:(Lorg/apache/commons/httpclient/HttpConnection;)V
      57: goto          70
      60: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      63: ldc           #153                // String HttpConnectionManager is null.  Connection cannot be released.
      65: invokeinterface #154,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      70: return

  protected boolean isLocked();
    Code:
       0: aload_0
       1: getfield      #30                 // Field locked:Z
       4: ireturn

  protected void setLocked(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field locked:Z
       5: return

  protected void closeSocketAndStreams();
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
       3: ldc           #155                // String enter HttpConnection.closeSockedAndStreams()
       5: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: aload_0
      11: iconst_0
      12: putfield      #26                 // Field isOpen:Z
      15: aload_0
      16: aconst_null
      17: putfield      #25                 // Field lastResponseInputStream:Ljava/io/InputStream;
      20: aconst_null
      21: aload_0
      22: getfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      25: if_acmpeq     57
      28: aload_0
      29: getfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      32: astore_1
      33: aload_0
      34: aconst_null
      35: putfield      #24                 // Field outputStream:Ljava/io/OutputStream;
      38: aload_1
      39: invokevirtual #156                // Method java/io/OutputStream.close:()V
      42: goto          57
      45: astore_2
      46: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      49: ldc           #157                // String Exception caught when closing output
      51: aload_2
      52: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      57: aconst_null
      58: aload_0
      59: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      62: if_acmpeq     94
      65: aload_0
      66: getfield      #23                 // Field inputStream:Ljava/io/InputStream;
      69: astore_1
      70: aload_0
      71: aconst_null
      72: putfield      #23                 // Field inputStream:Ljava/io/InputStream;
      75: aload_1
      76: invokevirtual #158                // Method java/io/InputStream.close:()V
      79: goto          94
      82: astore_2
      83: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      86: ldc           #159                // String Exception caught when closing input
      88: aload_2
      89: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      94: aconst_null
      95: aload_0
      96: getfield      #22                 // Field socket:Ljava/net/Socket;
      99: if_acmpeq     131
     102: aload_0
     103: getfield      #22                 // Field socket:Ljava/net/Socket;
     106: astore_1
     107: aload_0
     108: aconst_null
     109: putfield      #22                 // Field socket:Ljava/net/Socket;
     112: aload_1
     113: invokevirtual #160                // Method java/net/Socket.close:()V
     116: goto          131
     119: astore_2
     120: getstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
     123: ldc           #161                // String Exception caught when closing socket
     125: aload_2
     126: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     131: aload_0
     132: iconst_0
     133: putfield      #32                 // Field tunnelEstablished:Z
     136: aload_0
     137: iconst_0
     138: putfield      #31                 // Field usingSecureSocket:Z
     141: return
    Exception table:
       from    to  target type
          38    42    45   Class java/lang/Exception
          75    79    82   Class java/lang/Exception
         112   116   119   Class java/lang/Exception

  protected void assertNotOpen() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field isOpen:Z
       4: ifeq          17
       7: new           #95                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #162                // String Connection is open
      13: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected void assertOpen() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field isOpen:Z
       4: ifne          17
       7: new           #95                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #163                // String Connection is not open
      13: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public int getSendBufferSize() throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field socket:Ljava/net/Socket;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #22                 // Field socket:Ljava/net/Socket;
      13: invokevirtual #85                 // Method java/net/Socket.getSendBufferSize:()I
      16: ireturn

  public void setSendBufferSize(int) throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field params:Lorg/apache/commons/httpclient/params/HttpConnectionParams;
       4: iload_1
       5: invokevirtual #164                // Method org/apache/commons/httpclient/params/HttpConnectionParams.setSendBufferSize:(I)V
       8: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: iconst_2
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        13
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        10
      12: bastore
      13: putstatic     #128                // Field CRLF:[B
      16: getstatic     #165                // Field class$org$apache$commons$httpclient$HttpConnection:Ljava/lang/Class;
      19: ifnonnull     34
      22: ldc           #166                // String org.apache.commons.httpclient.HttpConnection
      24: invokestatic  #167                // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      27: dup
      28: putstatic     #165                // Field class$org$apache$commons$httpclient$HttpConnection:Ljava/lang/Class;
      31: goto          37
      34: getstatic     #165                // Field class$org$apache$commons$httpclient$HttpConnection:Ljava/lang/Class;
      37: invokestatic  #168                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      40: putstatic     #43                 // Field LOG:Lorg/apache/commons/logging/Log;
      43: return
}
