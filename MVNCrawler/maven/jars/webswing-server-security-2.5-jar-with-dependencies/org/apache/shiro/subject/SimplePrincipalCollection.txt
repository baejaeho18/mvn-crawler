Compiled from "SimplePrincipalCollection.java"
public class org.apache.shiro.subject.SimplePrincipalCollection implements org.apache.shiro.subject.MutablePrincipalCollection {
  private static final long serialVersionUID;

  private java.util.Map<java.lang.String, java.util.Set> realmPrincipals;

  private transient java.lang.String cachedToString;

  public org.apache.shiro.subject.SimplePrincipalCollection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.shiro.subject.SimplePrincipalCollection(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: instanceof    #2                  // class java/util/Collection
       8: ifeq          23
      11: aload_0
      12: aload_1
      13: checkcast     #2                  // class java/util/Collection
      16: aload_2
      17: invokevirtual #3                  // Method addAll:(Ljava/util/Collection;Ljava/lang/String;)V
      20: goto          29
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokevirtual #4                  // Method add:(Ljava/lang/Object;Ljava/lang/String;)V
      29: return

  public org.apache.shiro.subject.SimplePrincipalCollection(java.util.Collection, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #3                  // Method addAll:(Ljava/util/Collection;Ljava/lang/String;)V
      10: return

  public org.apache.shiro.subject.SimplePrincipalCollection(org.apache.shiro.subject.PrincipalCollection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #5                  // Method addAll:(Lorg/apache/shiro/subject/PrincipalCollection;)V
       9: return

  protected java.util.Collection getPrincipalsLazy(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #7                  // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      18: aload_0
      19: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #10                 // class java/util/Set
      31: astore_2
      32: aload_2
      33: ifnonnull     56
      36: new           #11                 // class java/util/LinkedHashSet
      39: dup
      40: invokespecial #12                 // Method java/util/LinkedHashSet."<init>":()V
      43: astore_2
      44: aload_0
      45: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      48: aload_1
      49: aload_2
      50: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_2
      57: areturn

  public java.lang.Object getPrimaryPrincipal();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isEmpty:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #15                 // Method iterator:()Ljava/util/Iterator;
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      18: areturn

  public void add(java.lang.Object, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #17                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #18                 // String realmName argument cannot be null.
      10: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #17                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #20                 // String principal argument cannot be null.
      24: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aconst_null
      30: putfield      #21                 // Field cachedToString:Ljava/lang/String;
      33: aload_0
      34: aload_2
      35: invokevirtual #22                 // Method getPrincipalsLazy:(Ljava/lang/String;)Ljava/util/Collection;
      38: aload_1
      39: invokeinterface #23,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      44: pop
      45: return

  public void addAll(java.util.Collection, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #17                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #18                 // String realmName argument cannot be null.
      10: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #17                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #24                 // String principals argument cannot be null.
      24: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      34: ifeq          47
      37: new           #17                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #26                 // String principals argument cannot be an empty collection.
      43: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aconst_null
      49: putfield      #21                 // Field cachedToString:Ljava/lang/String;
      52: aload_0
      53: aload_2
      54: invokevirtual #22                 // Method getPrincipalsLazy:(Ljava/lang/String;)Ljava/util/Collection;
      57: aload_1
      58: invokeinterface #27,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      63: pop
      64: return

  public void addAll(org.apache.shiro.subject.PrincipalCollection);
    Code:
       0: aload_1
       1: invokeinterface #28,  1           // InterfaceMethod org/apache/shiro/subject/PrincipalCollection.getRealmNames:()Ljava/util/Set;
       6: ifnull        86
       9: aload_1
      10: invokeinterface #28,  1           // InterfaceMethod org/apache/shiro/subject/PrincipalCollection.getRealmNames:()Ljava/util/Set;
      15: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          86
      30: aload_2
      31: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #31                 // class java/lang/String
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokeinterface #32,  2           // InterfaceMethod org/apache/shiro/subject/PrincipalCollection.fromRealm:(Ljava/lang/String;)Ljava/util/Collection;
      47: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          83
      64: aload         4
      66: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: astore        5
      73: aload_0
      74: aload         5
      76: aload_3
      77: invokevirtual #4                  // Method add:(Ljava/lang/Object;Ljava/lang/String;)V
      80: goto          54
      83: goto          21
      86: return

  public <T> T oneByType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      30: astore_2
      31: aload_2
      32: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      37: astore_3
      38: aload_3
      39: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          107
      47: aload_3
      48: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #10                 // class java/util/Set
      56: astore        4
      58: aload         4
      60: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore        5
      67: aload         5
      69: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          104
      77: aload         5
      79: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: astore        6
      86: aload_1
      87: aload         6
      89: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #37                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      95: ifeq          101
      98: aload         6
     100: areturn
     101: goto          67
     104: goto          38
     107: aconst_null
     108: areturn

  public <T> java.util.Collection<T> byType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          23
      19: getstatic     #38                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      22: areturn
      23: new           #11                 // class java/util/LinkedHashSet
      26: dup
      27: invokespecial #12                 // Method java/util/LinkedHashSet."<init>":()V
      30: astore_2
      31: aload_0
      32: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      35: invokeinterface #35,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      40: astore_3
      41: aload_3
      42: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore        4
      49: aload         4
      51: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          126
      59: aload         4
      61: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #10                 // class java/util/Set
      69: astore        5
      71: aload         5
      73: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      78: astore        6
      80: aload         6
      82: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          123
      90: aload         6
      92: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: astore        7
      99: aload_1
     100: aload         7
     102: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     105: invokevirtual #37                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     108: ifeq          120
     111: aload_2
     112: aload         7
     114: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     119: pop
     120: goto          80
     123: goto          49
     126: aload_2
     127: invokeinterface #40,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     132: ifeq          139
     135: getstatic     #38                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
     138: areturn
     139: aload_2
     140: invokestatic  #41                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     143: areturn

  public java.util.List asList();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method asSet:()Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: invokeinterface #40,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifeq          18
      14: getstatic     #43                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      17: areturn
      18: new           #44                 // class java/util/ArrayList
      21: dup
      22: aload_1
      23: invokespecial #45                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      26: invokestatic  #46                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      29: areturn

  public java.util.Set asSet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          23
      19: getstatic     #38                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      22: areturn
      23: new           #11                 // class java/util/LinkedHashSet
      26: dup
      27: invokespecial #12                 // Method java/util/LinkedHashSet."<init>":()V
      30: astore_1
      31: aload_0
      32: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      35: invokeinterface #35,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      40: astore_2
      41: aload_2
      42: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore_3
      48: aload_3
      49: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          80
      57: aload_3
      58: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #10                 // class java/util/Set
      66: astore        4
      68: aload_1
      69: aload         4
      71: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      76: pop
      77: goto          48
      80: aload_1
      81: invokeinterface #40,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      86: ifeq          93
      89: getstatic     #38                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      92: areturn
      93: aload_1
      94: invokestatic  #41                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      97: areturn

  public java.util.Collection fromRealm(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          23
      19: getstatic     #38                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      22: areturn
      23: aload_0
      24: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #10                 // class java/util/Set
      36: astore_2
      37: aload_2
      38: ifnull        50
      41: aload_2
      42: invokeinterface #40,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      47: ifeq          54
      50: getstatic     #38                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      53: astore_2
      54: aload_2
      55: invokestatic  #41                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      58: areturn

  public java.util.Set<java.lang.String> getRealmNames();
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      13: invokeinterface #48,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      18: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #21                 // Field cachedToString:Ljava/lang/String;
       5: aload_0
       6: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       9: ifnull        26
      12: aload_0
      13: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      16: invokeinterface #49,  1           // InterfaceMethod java/util/Map.clear:()V
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      26: return

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method asSet:()Ljava/util/Set;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #51                 // class org/apache/shiro/subject/SimplePrincipalCollection
      11: ifeq          55
      14: aload_1
      15: checkcast     #51                 // class org/apache/shiro/subject/SimplePrincipalCollection
      18: astore_2
      19: aload_0
      20: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      23: ifnull        42
      26: aload_0
      27: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      30: aload_2
      31: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      34: invokeinterface #52,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      39: goto          54
      42: aload_2
      43: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      46: ifnonnull     53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn
      55: iconst_0
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       4: ifnull        29
       7: aload_0
       8: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifne          29
      19: aload_0
      20: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      23: invokeinterface #53,  1           // InterfaceMethod java/util/Map.hashCode:()I
      28: ireturn
      29: aload_0
      30: invokespecial #54                 // Method java/lang/Object.hashCode:()I
      33: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #21                 // Field cachedToString:Ljava/lang/String;
       4: ifnonnull     41
       7: aload_0
       8: invokevirtual #42                 // Method asSet:()Ljava/util/Set;
      11: astore_1
      12: aload_1
      13: invokestatic  #55                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      16: ifne          35
      19: aload_0
      20: aload_1
      21: invokeinterface #56,  1           // InterfaceMethod java/util/Set.toArray:()[Ljava/lang/Object;
      26: invokestatic  #57                 // Method org/apache/shiro/util/StringUtils.toString:([Ljava/lang/Object;)Ljava/lang/String;
      29: putfield      #21                 // Field cachedToString:Ljava/lang/String;
      32: goto          41
      35: aload_0
      36: ldc           #58                 // String empty
      38: putfield      #21                 // Field cachedToString:Ljava/lang/String;
      41: aload_0
      42: getfield      #21                 // Field cachedToString:Ljava/lang/String;
      45: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
       8: invokestatic  #60                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_2
      20: aload_1
      21: iload_2
      22: invokevirtual #61                 // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
      25: iload_2
      26: ifeq          37
      29: aload_1
      30: aload_0
      31: getfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      34: invokevirtual #62                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      37: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #64                 // Method java/io/ObjectInputStream.readBoolean:()Z
       8: istore_2
       9: iload_2
      10: ifeq          24
      13: aload_0
      14: aload_1
      15: invokevirtual #65                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      18: checkcast     #66                 // class java/util/Map
      21: putfield      #6                  // Field realmPrincipals:Ljava/util/Map;
      24: return
}
