Compiled from "DelegatingSubject.java"
public class org.apache.shiro.subject.support.DelegatingSubject implements org.apache.shiro.subject.Subject {
  private static final org.slf4j.Logger log;

  private static final java.lang.String RUN_AS_PRINCIPALS_SESSION_KEY;

  protected org.apache.shiro.subject.PrincipalCollection principals;

  protected boolean authenticated;

  protected java.lang.String host;

  protected org.apache.shiro.session.Session session;

  protected boolean sessionCreationEnabled;

  protected transient org.apache.shiro.mgt.SecurityManager securityManager;

  static final boolean $assertionsDisabled;

  public org.apache.shiro.subject.support.DelegatingSubject(org.apache.shiro.mgt.SecurityManager);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: aconst_null
       4: aconst_null
       5: aload_1
       6: invokespecial #2                  // Method "<init>":(Lorg/apache/shiro/subject/PrincipalCollection;ZLjava/lang/String;Lorg/apache/shiro/session/Session;Lorg/apache/shiro/mgt/SecurityManager;)V
       9: return

  public org.apache.shiro.subject.support.DelegatingSubject(org.apache.shiro.subject.PrincipalCollection, boolean, java.lang.String, org.apache.shiro.session.Session, org.apache.shiro.mgt.SecurityManager);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: iconst_1
       7: aload         5
       9: invokespecial #3                  // Method "<init>":(Lorg/apache/shiro/subject/PrincipalCollection;ZLjava/lang/String;Lorg/apache/shiro/session/Session;ZLorg/apache/shiro/mgt/SecurityManager;)V
      12: return

  public org.apache.shiro.subject.support.DelegatingSubject(org.apache.shiro.subject.PrincipalCollection, boolean, java.lang.String, org.apache.shiro.session.Session, boolean, org.apache.shiro.mgt.SecurityManager);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload         6
       6: ifnonnull     19
       9: new           #5                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #6                  // String SecurityManager argument cannot be null.
      15: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload         6
      22: putfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      25: aload_0
      26: aload_1
      27: putfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      30: aload_0
      31: iload_2
      32: putfield      #10                 // Field authenticated:Z
      35: aload_0
      36: aload_3
      37: putfield      #11                 // Field host:Ljava/lang/String;
      40: aload         4
      42: ifnull        55
      45: aload_0
      46: aload_0
      47: aload         4
      49: invokevirtual #12                 // Method decorate:(Lorg/apache/shiro/session/Session;)Lorg/apache/shiro/session/Session;
      52: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      55: aload_0
      56: iload         5
      58: putfield      #14                 // Field sessionCreationEnabled:Z
      61: return

  protected org.apache.shiro.session.Session decorate(org.apache.shiro.session.Session);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String session cannot be null
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #16                 // class org/apache/shiro/subject/support/DelegatingSubject$StoppingAwareProxiedSession
      17: dup
      18: aload_0
      19: aload_1
      20: aload_0
      21: aconst_null
      22: invokespecial #17                 // Method org/apache/shiro/subject/support/DelegatingSubject$StoppingAwareProxiedSession."<init>":(Lorg/apache/shiro/subject/support/DelegatingSubject;Lorg/apache/shiro/session/Session;Lorg/apache/shiro/subject/support/DelegatingSubject;Lorg/apache/shiro/subject/support/DelegatingSubject$1;)V
      25: areturn

  public org.apache.shiro.mgt.SecurityManager getSecurityManager();
    Code:
       0: aload_0
       1: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       4: areturn

  protected boolean hasPrincipals();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
       4: invokestatic  #19                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Lorg/apache/shiro/subject/PrincipalCollection;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #11                 // Field host:Ljava/lang/String;
       4: areturn

  private java.lang.Object getPrimaryPrincipal(org.apache.shiro.subject.PrincipalCollection);
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Lorg/apache/shiro/subject/PrincipalCollection;)Z
       4: ifne          14
       7: aload_1
       8: invokeinterface #20,  1           // InterfaceMethod org/apache/shiro/subject/PrincipalCollection.getPrimaryPrincipal:()Ljava/lang/Object;
      13: areturn
      14: aconst_null
      15: areturn

  public java.lang.Object getPrincipal();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
       5: invokespecial #21                 // Method getPrimaryPrincipal:(Lorg/apache/shiro/subject/PrincipalCollection;)Ljava/lang/Object;
       8: areturn

  public org.apache.shiro.subject.PrincipalCollection getPrincipals();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method getRunAsPrincipalsStack:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokestatic  #23                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       9: ifeq          19
      12: aload_0
      13: getfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      16: goto          29
      19: aload_1
      20: iconst_0
      21: invokeinterface #24,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      26: checkcast     #25                 // class org/apache/shiro/subject/PrincipalCollection
      29: areturn

  public boolean isPermitted(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #27,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.isPermitted:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean isPermitted(org.apache.shiro.authz.Permission);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #28,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.isPermitted:(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean[] isPermitted(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          22
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #29,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.isPermitted:(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)[Z
      21: areturn
      22: aload_1
      23: arraylength
      24: newarray       boolean
      26: areturn

  public boolean[] isPermitted(java.util.List<org.apache.shiro.authz.Permission>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          22
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #30,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.isPermitted:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
      21: areturn
      22: aload_1
      23: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      28: newarray       boolean
      30: areturn

  public boolean isPermittedAll(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #32,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.isPermittedAll:(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean isPermittedAll(java.util.Collection<org.apache.shiro.authz.Permission>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #33,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.isPermittedAll:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  protected void assertAuthzCheckPossible() throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifne          66
       7: new           #34                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #36                 // String This subject is anonymous - it does not have any identifying principals and authorization operations require an identity to check against.  A Subject instance will acquire these identifying principals automatically after a successful login is performed be executing
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc_w         #38                 // class org/apache/shiro/subject/Subject
      22: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      25: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #40                 // String .login(AuthenticationToken) or when \'Remember Me\'
      30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #41                 // String functionality is enabled by the SecurityManager.  This exception can also occur when a
      35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #42                 // String previously logged-in Subject has logged out which
      40: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #43                 // String makes it anonymous again.  Because an identity is currently not known due to any of these
      45: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #44                 // String conditions, authorization is denied.
      50: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: astore_1
      57: new           #46                 // class org/apache/shiro/authz/UnauthenticatedException
      60: dup
      61: aload_1
      62: invokespecial #47                 // Method org/apache/shiro/authz/UnauthenticatedException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: return

  public void checkPermission(java.lang.String) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #49,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkPermission:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
      18: return

  public void checkPermission(org.apache.shiro.authz.Permission) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #50,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkPermission:(Lorg/apache/shiro/subject/PrincipalCollection;Lorg/apache/shiro/authz/Permission;)V
      18: return

  public void checkPermissions(java.lang.String...) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #51,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkPermissions:(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
      18: return

  public void checkPermissions(java.util.Collection<org.apache.shiro.authz.Permission>) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #52,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkPermissions:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
      18: return

  public boolean hasRole(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #53,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.hasRole:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean[] hasRoles(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          22
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #54,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.hasRoles:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/List;)[Z
      21: areturn
      22: aload_1
      23: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      28: newarray       boolean
      30: areturn

  public boolean hasAllRoles(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
      11: aload_0
      12: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      15: aload_1
      16: invokeinterface #55,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.hasAllRoles:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void checkRole(java.lang.String) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #56,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkRole:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/lang/String;)V
      18: return

  public void checkRoles(java.lang.String...) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #57,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkRoles:(Lorg/apache/shiro/subject/PrincipalCollection;[Ljava/lang/String;)V
      18: return

  public void checkRoles(java.util.Collection<java.lang.String>) throws org.apache.shiro.authz.AuthorizationException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertAuthzCheckPossible:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      12: aload_1
      13: invokeinterface #58,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.checkRoles:(Lorg/apache/shiro/subject/PrincipalCollection;Ljava/util/Collection;)V
      18: return

  public void login(org.apache.shiro.authc.AuthenticationToken) throws org.apache.shiro.authc.AuthenticationException;
    Code:
       0: aload_0
       1: invokespecial #59                 // Method clearRunAsIdentitiesInternal:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: aload_1
      10: invokeinterface #60,  3           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.login:(Lorg/apache/shiro/subject/Subject;Lorg/apache/shiro/authc/AuthenticationToken;)Lorg/apache/shiro/subject/Subject;
      15: astore_2
      16: aconst_null
      17: astore        4
      19: aload_2
      20: instanceof    #61                 // class org/apache/shiro/subject/support/DelegatingSubject
      23: ifeq          48
      26: aload_2
      27: checkcast     #61                 // class org/apache/shiro/subject/support/DelegatingSubject
      30: astore        5
      32: aload         5
      34: getfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      37: astore_3
      38: aload         5
      40: getfield      #11                 // Field host:Ljava/lang/String;
      43: astore        4
      45: goto          55
      48: aload_2
      49: invokeinterface #62,  1           // InterfaceMethod org/apache/shiro/subject/Subject.getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
      54: astore_3
      55: aload_3
      56: ifnull        68
      59: aload_3
      60: invokeinterface #63,  1           // InterfaceMethod org/apache/shiro/subject/PrincipalCollection.isEmpty:()Z
      65: ifeq          82
      68: ldc           #64                 // String Principals returned from securityManager.login( token ) returned a null or empty value.  This value must be non null and populated with one or more elements.
      70: astore        5
      72: new           #65                 // class java/lang/IllegalStateException
      75: dup
      76: aload         5
      78: invokespecial #66                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: aload_3
      84: putfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      87: aload_0
      88: iconst_1
      89: putfield      #10                 // Field authenticated:Z
      92: aload_1
      93: instanceof    #67                 // class org/apache/shiro/authc/HostAuthenticationToken
      96: ifeq          110
      99: aload_1
     100: checkcast     #67                 // class org/apache/shiro/authc/HostAuthenticationToken
     103: invokeinterface #68,  1           // InterfaceMethod org/apache/shiro/authc/HostAuthenticationToken.getHost:()Ljava/lang/String;
     108: astore        4
     110: aload         4
     112: ifnull        121
     115: aload_0
     116: aload         4
     118: putfield      #11                 // Field host:Ljava/lang/String;
     121: aload_2
     122: iconst_0
     123: invokeinterface #69,  2           // InterfaceMethod org/apache/shiro/subject/Subject.getSession:(Z)Lorg/apache/shiro/session/Session;
     128: astore        5
     130: aload         5
     132: ifnull        148
     135: aload_0
     136: aload_0
     137: aload         5
     139: invokevirtual #12                 // Method decorate:(Lorg/apache/shiro/session/Session;)Lorg/apache/shiro/session/Session;
     142: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
     145: goto          153
     148: aload_0
     149: aconst_null
     150: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
     153: return

  public boolean isAuthenticated();
    Code:
       0: aload_0
       1: getfield      #10                 // Field authenticated:Z
       4: ireturn

  public boolean isRemembered();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getPrincipals:()Lorg/apache/shiro/subject/PrincipalCollection;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: invokeinterface #63,  1           // InterfaceMethod org/apache/shiro/subject/PrincipalCollection.isEmpty:()Z
      15: ifne          29
      18: aload_0
      19: invokevirtual #70                 // Method isAuthenticated:()Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  protected boolean isSessionCreationEnabled();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sessionCreationEnabled:Z
       4: ireturn

  public org.apache.shiro.session.Session getSession();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #71                 // Method getSession:(Z)Lorg/apache/shiro/session/Session;
       5: areturn

  public org.apache.shiro.session.Session getSession(boolean);
    Code:
       0: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
       3: invokeinterface #73,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          90
      11: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
      14: new           #34                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #74                 // String attempting to get session; create =
      23: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      30: ldc           #76                 // String ; session is null =
      32: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      39: ifnonnull     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      50: ldc           #77                 // String ; session has id =
      52: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      59: ifnull        78
      62: aload_0
      63: getfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      66: invokeinterface #78,  1           // InterfaceMethod org/apache/shiro/session/Session.getId:()Ljava/io/Serializable;
      71: ifnull        78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      82: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #79,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      90: aload_0
      91: getfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      94: ifnonnull     191
      97: iload_1
      98: ifeq          191
     101: aload_0
     102: invokevirtual #80                 // Method isSessionCreationEnabled:()Z
     105: ifne          152
     108: new           #34                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #81                 // String Session creation has been disabled for the current subject.  This exception indicates that there is either a programming error (using a session when it should never be used) or that Shiro\'s configuration needs to be adjusted to allow Sessions to be created for the current Subject.  See the
     117: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc_w         #82                 // class org/apache/shiro/subject/support/DisabledSessionException
     123: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
     126: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #83                 // String  JavaDoc
     131: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: ldc           #84                 // String for more.
     136: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: astore_2
     143: new           #82                 // class org/apache/shiro/subject/support/DisabledSessionException
     146: dup
     147: aload_2
     148: invokespecial #85                 // Method org/apache/shiro/subject/support/DisabledSessionException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
     155: ldc           #86                 // String Starting session for host {}
     157: aload_0
     158: invokevirtual #87                 // Method getHost:()Ljava/lang/String;
     161: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     166: aload_0
     167: invokevirtual #89                 // Method createSessionContext:()Lorg/apache/shiro/session/mgt/SessionContext;
     170: astore_2
     171: aload_0
     172: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
     175: aload_2
     176: invokeinterface #90,  2           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.start:(Lorg/apache/shiro/session/mgt/SessionContext;)Lorg/apache/shiro/session/Session;
     181: astore_3
     182: aload_0
     183: aload_0
     184: aload_3
     185: invokevirtual #12                 // Method decorate:(Lorg/apache/shiro/session/Session;)Lorg/apache/shiro/session/Session;
     188: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
     191: aload_0
     192: getfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
     195: areturn

  protected org.apache.shiro.session.mgt.SessionContext createSessionContext();
    Code:
       0: new           #91                 // class org/apache/shiro/session/mgt/DefaultSessionContext
       3: dup
       4: invokespecial #92                 // Method org/apache/shiro/session/mgt/DefaultSessionContext."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #11                 // Field host:Ljava/lang/String;
      12: invokestatic  #93                 // Method org/apache/shiro/util/StringUtils.hasText:(Ljava/lang/String;)Z
      15: ifeq          28
      18: aload_1
      19: aload_0
      20: getfield      #11                 // Field host:Ljava/lang/String;
      23: invokeinterface #94,  2           // InterfaceMethod org/apache/shiro/session/mgt/SessionContext.setHost:(Ljava/lang/String;)V
      28: aload_1
      29: areturn

  private void clearRunAsIdentitiesInternal();
    Code:
       0: aload_0
       1: invokespecial #95                 // Method clearRunAsIdentities:()V
       4: goto          19
       7: astore_1
       8: getstatic     #72                 // Field log:Lorg/slf4j/Logger;
      11: ldc           #97                 // String Encountered session exception trying to clear \'runAs\' identities during logout.  This can generally safely be ignored.
      13: aload_1
      14: invokeinterface #98,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: return
    Exception table:
       from    to  target type
           0     4     7   Class org/apache/shiro/session/SessionException

  public void logout();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method clearRunAsIdentitiesInternal:()V
       4: aload_0
       5: getfield      #8                  // Field securityManager:Lorg/apache/shiro/mgt/SecurityManager;
       8: aload_0
       9: invokeinterface #99,  2           // InterfaceMethod org/apache/shiro/mgt/SecurityManager.logout:(Lorg/apache/shiro/subject/Subject;)V
      14: aload_0
      15: aconst_null
      16: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      19: aload_0
      20: aconst_null
      21: putfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field authenticated:Z
      29: goto          50
      32: astore_1
      33: aload_0
      34: aconst_null
      35: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
      38: aload_0
      39: aconst_null
      40: putfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      43: aload_0
      44: iconst_0
      45: putfield      #10                 // Field authenticated:Z
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
           0    14    32   any
          32    33    32   any

  private void sessionStopped();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #13                 // Field session:Lorg/apache/shiro/session/Session;
       5: return

  public <V> V execute(java.util.concurrent.Callable<V>) throws org.apache.shiro.subject.ExecutionException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #100                // Method associateWith:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
       5: astore_2
       6: aload_2
       7: invokeinterface #101,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      12: areturn
      13: astore_3
      14: new           #103                // class org/apache/shiro/subject/ExecutionException
      17: dup
      18: aload_3
      19: invokespecial #104                // Method org/apache/shiro/subject/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           6    12    13   Class java/lang/Throwable

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #105                // Method associateWith:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       5: astore_2
       6: aload_2
       7: invokeinterface #106,  1          // InterfaceMethod java/lang/Runnable.run:()V
      12: return

  public <V> java.util.concurrent.Callable<V> associateWith(java.util.concurrent.Callable<V>);
    Code:
       0: new           #107                // class org/apache/shiro/subject/support/SubjectCallable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #108                // Method org/apache/shiro/subject/support/SubjectCallable."<init>":(Lorg/apache/shiro/subject/Subject;Ljava/util/concurrent/Callable;)V
       9: areturn

  public java.lang.Runnable associateWith(java.lang.Runnable);
    Code:
       0: aload_1
       1: instanceof    #109                // class java/lang/Thread
       4: ifeq          19
       7: ldc           #110                // String This implementation does not support Thread arguments because of JDK ThreadLocal inheritance mechanisms required by Shiro.  Instead, the method argument should be a non-Thread Runnable and the return value from this method can then be given to an ExecutorService or another Thread.
       9: astore_2
      10: new           #111                // class java/lang/UnsupportedOperationException
      13: dup
      14: aload_2
      15: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #113                // class org/apache/shiro/subject/support/SubjectRunnable
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #114                // Method org/apache/shiro/subject/support/SubjectRunnable."<init>":(Lorg/apache/shiro/subject/Subject;Ljava/lang/Runnable;)V
      28: areturn

  public void runAs(org.apache.shiro.subject.PrincipalCollection);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method hasPrincipals:()Z
       4: ifne          51
       7: new           #34                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #115                // String This subject does not yet have an identity.  Assuming the identity of another Subject is only allowed for Subjects with an existing identity.  Try logging this subject in first, or using the
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc_w         #116                // class org/apache/shiro/subject/Subject$Builder
      22: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      25: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #117                // String  to build ad hoc Subject instances
      30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #118                // String with identities as necessary.
      35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: astore_2
      42: new           #65                 // class java/lang/IllegalStateException
      45: dup
      46: aload_2
      47: invokespecial #66                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: aload_1
      53: invokespecial #119                // Method pushIdentity:(Lorg/apache/shiro/subject/PrincipalCollection;)V
      56: return

  public boolean isRunAs();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method getRunAsPrincipalsStack:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokestatic  #23                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public org.apache.shiro.subject.PrincipalCollection getPreviousPrincipals();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokespecial #22                 // Method getRunAsPrincipalsStack:()Ljava/util/List;
       6: astore_2
       7: aload_2
       8: ifnull        20
      11: aload_2
      12: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      17: goto          21
      20: iconst_0
      21: istore_3
      22: iload_3
      23: ifle          68
      26: iload_3
      27: iconst_1
      28: if_icmpne     39
      31: aload_0
      32: getfield      #9                  // Field principals:Lorg/apache/shiro/subject/PrincipalCollection;
      35: astore_1
      36: goto          68
      39: getstatic     #120                // Field $assertionsDisabled:Z
      42: ifne          57
      45: aload_2
      46: ifnonnull     57
      49: new           #121                // class java/lang/AssertionError
      52: dup
      53: invokespecial #122                // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: aload_2
      58: iconst_1
      59: invokeinterface #24,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      64: checkcast     #25                 // class org/apache/shiro/subject/PrincipalCollection
      67: astore_1
      68: aload_1
      69: areturn

  public org.apache.shiro.subject.PrincipalCollection releaseRunAs();
    Code:
       0: aload_0
       1: invokespecial #123                // Method popIdentity:()Lorg/apache/shiro/subject/PrincipalCollection;
       4: areturn

  private java.util.List<org.apache.shiro.subject.PrincipalCollection> getRunAsPrincipalsStack();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #71                 // Method getSession:(Z)Lorg/apache/shiro/session/Session;
       5: astore_1
       6: aload_1
       7: ifnull        23
      10: aload_1
      11: getstatic     #124                // Field RUN_AS_PRINCIPALS_SESSION_KEY:Ljava/lang/String;
      14: invokeinterface #125,  2          // InterfaceMethod org/apache/shiro/session/Session.getAttribute:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #126                // class java/util/List
      22: areturn
      23: aconst_null
      24: areturn

  private void clearRunAsIdentities();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #71                 // Method getSession:(Z)Lorg/apache/shiro/session/Session;
       5: astore_1
       6: aload_1
       7: ifnull        20
      10: aload_1
      11: getstatic     #124                // Field RUN_AS_PRINCIPALS_SESSION_KEY:Ljava/lang/String;
      14: invokeinterface #127,  2          // InterfaceMethod org/apache/shiro/session/Session.removeAttribute:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  private void pushIdentity(org.apache.shiro.subject.PrincipalCollection) throws java.lang.NullPointerException;
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Lorg/apache/shiro/subject/PrincipalCollection;)Z
       4: ifeq          19
       7: ldc           #128                // String Specified Subject principals cannot be null or empty for \'run as\' functionality.
       9: astore_2
      10: new           #129                // class java/lang/NullPointerException
      13: dup
      14: aload_2
      15: invokespecial #130                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokespecial #22                 // Method getRunAsPrincipalsStack:()Ljava/util/List;
      23: astore_2
      24: aload_2
      25: ifnonnull     36
      28: new           #131                // class java/util/concurrent/CopyOnWriteArrayList
      31: dup
      32: invokespecial #132                // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      35: astore_2
      36: aload_2
      37: iconst_0
      38: aload_1
      39: invokeinterface #133,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      44: aload_0
      45: invokevirtual #134                // Method getSession:()Lorg/apache/shiro/session/Session;
      48: astore_3
      49: aload_3
      50: getstatic     #124                // Field RUN_AS_PRINCIPALS_SESSION_KEY:Ljava/lang/String;
      53: aload_2
      54: invokeinterface #135,  3          // InterfaceMethod org/apache/shiro/session/Session.setAttribute:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: return

  private org.apache.shiro.subject.PrincipalCollection popIdentity();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokespecial #22                 // Method getRunAsPrincipalsStack:()Ljava/util/List;
       6: astore_2
       7: aload_2
       8: invokestatic  #23                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      11: ifne          54
      14: aload_2
      15: iconst_0
      16: invokeinterface #136,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      21: checkcast     #25                 // class org/apache/shiro/subject/PrincipalCollection
      24: astore_1
      25: aload_2
      26: invokestatic  #23                 // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      29: ifne          50
      32: aload_0
      33: invokevirtual #134                // Method getSession:()Lorg/apache/shiro/session/Session;
      36: astore_3
      37: aload_3
      38: getstatic     #124                // Field RUN_AS_PRINCIPALS_SESSION_KEY:Ljava/lang/String;
      41: aload_2
      42: invokeinterface #135,  3          // InterfaceMethod org/apache/shiro/session/Session.setAttribute:(Ljava/lang/Object;Ljava/lang/Object;)V
      47: goto          54
      50: aload_0
      51: invokespecial #95                 // Method clearRunAsIdentities:()V
      54: aload_1
      55: areturn

  static void access$100(org.apache.shiro.subject.support.DelegatingSubject);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method sessionStopped:()V
       4: return

  static {};
    Code:
       0: ldc_w         #61                 // class org/apache/shiro/subject/support/DelegatingSubject
       3: invokevirtual #137                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #120                // Field $assertionsDisabled:Z
      17: ldc_w         #61                 // class org/apache/shiro/subject/support/DelegatingSubject
      20: invokestatic  #138                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      23: putstatic     #72                 // Field log:Lorg/slf4j/Logger;
      26: new           #34                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc_w         #61                 // class org/apache/shiro/subject/support/DelegatingSubject
      36: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #139                // String .RUN_AS_PRINCIPALS_SESSION_KEY
      44: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: putstatic     #124                // Field RUN_AS_PRINCIPALS_SESSION_KEY:Ljava/lang/String;
      53: return
}
