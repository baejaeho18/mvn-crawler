Compiled from "MapContext.java"
public class org.apache.shiro.util.MapContext implements java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable {
  private static final long serialVersionUID;

  private final java.util.Map<java.lang.String, java.lang.Object> backingMap;

  public org.apache.shiro.util.MapContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field backingMap:Ljava/util/Map;
      15: return

  public org.apache.shiro.util.MapContext(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method "<init>":()V
       4: aload_1
       5: invokestatic  #6                  // Method org/apache/shiro/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       8: ifne          21
      11: aload_0
      12: getfield      #4                  // Field backingMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #7,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      21: return

  protected <E> E getTypedValue(java.lang.String, java.lang.Class<E>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #4                  // Field backingMap:Ljava/util/Map;
       6: aload_1
       7: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore        4
      14: aload         4
      16: ifnull        108
      19: aload_2
      20: aload         4
      22: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: ifne          105
      31: new           #11                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #13                 // String Invalid object found in SubjectContext Map under key [
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #15                 // String ].  Expected type
      49: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #16                 // String was [
      54: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      61: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #18                 // String ], but the object under that key is of type
      66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #19                 // String [
      71: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         4
      76: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      82: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #20                 // String ].
      87: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: astore        5
      95: new           #22                 // class java/lang/IllegalArgumentException
      98: dup
      99: aload         5
     101: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload         4
     107: astore_3
     108: aload_3
     109: areturn

  protected void nullSafePut(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #24                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #33                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.util.Collection<java.lang.Object> values();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokestatic  #35                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> entrySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokestatic  #33                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class java/lang/String
       5: aload_2
       6: invokevirtual #24                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
