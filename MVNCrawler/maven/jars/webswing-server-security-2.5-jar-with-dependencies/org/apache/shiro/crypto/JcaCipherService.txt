Compiled from "JcaCipherService.java"
public abstract class org.apache.shiro.crypto.JcaCipherService implements org.apache.shiro.crypto.CipherService {
  private static final org.slf4j.Logger log;

  private static final int DEFAULT_KEY_SIZE;

  private static final int DEFAULT_STREAMING_BUFFER_SIZE;

  private static final int BITS_PER_BYTE;

  private static final java.lang.String RANDOM_NUM_GENERATOR_ALGORITHM_NAME;

  private java.lang.String algorithmName;

  private int keySize;

  private int streamingBufferSize;

  private boolean generateInitializationVectors;

  private int initializationVectorSize;

  private java.security.SecureRandom secureRandom;

  protected org.apache.shiro.crypto.JcaCipherService(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method org/apache/shiro/util/StringUtils.hasText:(Ljava/lang/String;)Z
       8: ifne          21
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String algorithmName argument cannot be null or empty.
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field algorithmName:Ljava/lang/String;
      26: aload_0
      27: sipush        128
      30: putfield      #7                  // Field keySize:I
      33: aload_0
      34: sipush        128
      37: putfield      #8                  // Field initializationVectorSize:I
      40: aload_0
      41: sipush        512
      44: putfield      #9                  // Field streamingBufferSize:I
      47: aload_0
      48: iconst_1
      49: putfield      #10                 // Field generateInitializationVectors:Z
      52: return

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field algorithmName:Ljava/lang/String;
       4: areturn

  public int getKeySize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keySize:I
       4: ireturn

  public void setKeySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field keySize:I
       5: return

  public boolean isGenerateInitializationVectors();
    Code:
       0: aload_0
       1: getfield      #10                 // Field generateInitializationVectors:Z
       4: ireturn

  public void setGenerateInitializationVectors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field generateInitializationVectors:Z
       5: return

  public int getInitializationVectorSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field initializationVectorSize:I
       4: ireturn

  public void setInitializationVectorSize(int) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_1
       1: bipush        8
       3: irem
       4: ifeq          19
       7: ldc           #11                 // String Initialization vector sizes are specified in bits, but must be a multiple of 8 so they can be easily represented as a byte array.
       9: astore_2
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: aload_2
      15: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iload_1
      21: putfield      #8                  // Field initializationVectorSize:I
      24: return

  protected boolean isGenerateInitializationVectors(boolean);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isGenerateInitializationVectors:()Z
       4: ireturn

  public int getStreamingBufferSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field streamingBufferSize:I
       4: ireturn

  public void setStreamingBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field streamingBufferSize:I
       5: return

  public java.security.SecureRandom getSecureRandom();
    Code:
       0: aload_0
       1: getfield      #13                 // Field secureRandom:Ljava/security/SecureRandom;
       4: areturn

  public void setSecureRandom(java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field secureRandom:Ljava/security/SecureRandom;
       5: return

  protected static java.security.SecureRandom getDefaultSecureRandom();
    Code:
       0: ldc           #14                 // String SHA1PRNG
       2: invokestatic  #15                 // Method java/security/SecureRandom.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;
       5: areturn
       6: astore_0
       7: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
      10: ldc           #18                 // String The SecureRandom SHA1PRNG algorithm is not available on the current platform.  Using the platform\'s default SecureRandom algorithm.
      12: aload_0
      13: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      18: new           #20                 // class java/security/SecureRandom
      21: dup
      22: invokespecial #21                 // Method java/security/SecureRandom."<init>":()V
      25: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/security/NoSuchAlgorithmException

  protected java.security.SecureRandom ensureSecureRandom();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getSecureRandom:()Ljava/security/SecureRandom;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: invokestatic  #23                 // Method getDefaultSecureRandom:()Ljava/security/SecureRandom;
      12: astore_1
      13: aload_1
      14: areturn

  protected java.lang.String getTransformationString(boolean);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getAlgorithmName:()Ljava/lang/String;
       4: areturn

  protected byte[] generateInitializationVector(boolean);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getInitializationVectorSize:()I
       4: istore_2
       5: iload_2
       6: ifgt          53
       9: new           #26                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #28                 // String initializationVectorSize property must be greater than zero.  This number is typically set in the
      18: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #30                 // class org/apache/shiro/crypto/CipherService
      24: invokevirtual #31                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #32                 // String  subclass constructor.
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #33                 // String Also check your configuration to ensure that if you are setting a value, it is positive.
      37: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_3
      44: new           #35                 // class java/lang/IllegalStateException
      47: dup
      48: aload_3
      49: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: iload_2
      54: bipush        8
      56: irem
      57: ifeq          72
      60: ldc           #37                 // String initializationVectorSize property must be a multiple of 8 to represent as a byte array.
      62: astore_3
      63: new           #35                 // class java/lang/IllegalStateException
      66: dup
      67: aload_3
      68: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload_2
      73: bipush        8
      75: idiv
      76: istore_3
      77: iload_3
      78: newarray       byte
      80: astore        4
      82: aload_0
      83: invokevirtual #38                 // Method ensureSecureRandom:()Ljava/security/SecureRandom;
      86: astore        5
      88: aload         5
      90: aload         4
      92: invokevirtual #39                 // Method java/security/SecureRandom.nextBytes:([B)V
      95: aload         4
      97: areturn

  public org.apache.shiro.util.ByteSource encrypt(byte[], byte[]);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: iconst_0
       4: invokevirtual #40                 // Method isGenerateInitializationVectors:(Z)Z
       7: istore        4
       9: iload         4
      11: ifeq          39
      14: aload_0
      15: iconst_0
      16: invokevirtual #41                 // Method generateInitializationVector:(Z)[B
      19: astore_3
      20: aload_3
      21: ifnull        29
      24: aload_3
      25: arraylength
      26: ifne          39
      29: new           #35                 // class java/lang/IllegalStateException
      32: dup
      33: ldc           #42                 // String Initialization vector generation is enabled - generated vectorcannot be null or empty.
      35: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: iload         4
      45: invokespecial #43                 // Method encrypt:([B[B[BZ)Lorg/apache/shiro/util/ByteSource;
      48: areturn

  private org.apache.shiro.util.ByteSource encrypt(byte[], byte[], byte[], boolean) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: iconst_1
       1: istore        5
       3: iload         4
       5: ifeq          63
       8: aload_3
       9: ifnull        63
      12: aload_3
      13: arraylength
      14: ifle          63
      17: aload_0
      18: aload_1
      19: aload_2
      20: aload_3
      21: iconst_1
      22: invokespecial #44                 // Method crypt:([B[B[BI)[B
      25: astore        7
      27: aload_3
      28: arraylength
      29: aload         7
      31: arraylength
      32: iadd
      33: newarray       byte
      35: astore        6
      37: aload_3
      38: iconst_0
      39: aload         6
      41: iconst_0
      42: aload_3
      43: arraylength
      44: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: aload         7
      49: iconst_0
      50: aload         6
      52: aload_3
      53: arraylength
      54: aload         7
      56: arraylength
      57: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: goto          73
      63: aload_0
      64: aload_1
      65: aload_2
      66: aload_3
      67: iconst_1
      68: invokespecial #44                 // Method crypt:([B[B[BI)[B
      71: astore        6
      73: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
      76: invokeinterface #46,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      81: ifeq          145
      84: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
      87: new           #26                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #47                 // String Incoming plaintext of size
      96: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_1
     100: ifnull        108
     103: aload_1
     104: arraylength
     105: goto          109
     108: iconst_0
     109: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     112: ldc           #49                 // String .  Ciphertext
     114: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #50                 // String byte array is size
     119: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         6
     124: ifnull        133
     127: aload         6
     129: arraylength
     130: goto          134
     133: iconst_0
     134: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     137: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokeinterface #51,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
     145: aload         6
     147: invokestatic  #52                 // Method org/apache/shiro/util/ByteSource$Util.bytes:([B)Lorg/apache/shiro/util/ByteSource;
     150: areturn

  public org.apache.shiro.util.ByteSource decrypt(byte[], byte[]) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_1
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_0
       6: iconst_0
       7: invokevirtual #40                 // Method isGenerateInitializationVectors:(Z)Z
      10: ifeq          85
      13: aload_0
      14: invokevirtual #25                 // Method getInitializationVectorSize:()I
      17: istore        5
      19: iload         5
      21: bipush        8
      23: idiv
      24: istore        6
      26: iload         6
      28: newarray       byte
      30: astore        4
      32: aload_1
      33: iconst_0
      34: aload         4
      36: iconst_0
      37: iload         6
      39: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      42: aload_1
      43: arraylength
      44: iload         6
      46: isub
      47: istore        7
      49: iload         7
      51: newarray       byte
      53: astore_3
      54: aload_1
      55: iload         6
      57: aload_3
      58: iconst_0
      59: iload         7
      61: invokestatic  #45                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      64: goto          85
      67: astore        5
      69: ldc           #54                 // String Unable to correctly extract the Initialization Vector or ciphertext.
      71: astore        6
      73: new           #55                 // class org/apache/shiro/crypto/CryptoException
      76: dup
      77: aload         6
      79: aload         5
      81: invokespecial #56                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: athrow
      85: aload_0
      86: aload_3
      87: aload_2
      88: aload         4
      90: invokespecial #57                 // Method decrypt:([B[B[B)Lorg/apache/shiro/util/ByteSource;
      93: areturn
    Exception table:
       from    to  target type
          13    64    67   Class java/lang/Exception

  private org.apache.shiro.util.ByteSource decrypt(byte[], byte[], byte[]) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
       3: invokeinterface #46,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          47
      11: getstatic     #17                 // Field log:Lorg/slf4j/Logger;
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #58                 // String Attempting to decrypt incoming byte array of length
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: ifnull        35
      30: aload_1
      31: arraylength
      32: goto          36
      35: iconst_0
      36: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #51,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      47: aload_0
      48: aload_1
      49: aload_2
      50: aload_3
      51: iconst_2
      52: invokespecial #44                 // Method crypt:([B[B[BI)[B
      55: astore        4
      57: aload         4
      59: ifnonnull     66
      62: aconst_null
      63: goto          71
      66: aload         4
      68: invokestatic  #52                 // Method org/apache/shiro/util/ByteSource$Util.bytes:([B)Lorg/apache/shiro/util/ByteSource;
      71: areturn

  private javax.crypto.Cipher newCipherInstance(boolean) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method getTransformationString:(Z)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #60                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      10: areturn
      11: astore_3
      12: new           #26                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #61                 // String Unable to acquire a Java JCA Cipher instance using
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc_w         #62                 // class javax/crypto/Cipher
      27: invokevirtual #63                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #64                 // String .getInstance( \"
      35: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #65                 // String \" ).
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #24                 // Method getAlgorithmName:()Ljava/lang/String;
      51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #66                 // String  under this configuration is required for the
      56: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #67                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: invokevirtual #63                 // Method java/lang/Class.getName:()Ljava/lang/String;
      66: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #68                 // String  instance to function.
      71: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: astore        4
      79: new           #55                 // class org/apache/shiro/crypto/CryptoException
      82: dup
      83: aload         4
      85: aload_3
      86: invokespecial #56                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: athrow
    Exception table:
       from    to  target type
           6    10    11   Class java/lang/Exception

  private byte[] crypt(byte[], byte[], byte[], int) throws java.lang.IllegalArgumentException, org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          19
       9: new           #3                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #69                 // String key argument cannot be null or empty.
      15: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iload         4
      22: aload_2
      23: aload_3
      24: iconst_0
      25: invokespecial #70                 // Method initNewCipher:(I[B[BZ)Ljavax/crypto/Cipher;
      28: astore        5
      30: aload_0
      31: aload         5
      33: aload_1
      34: invokespecial #71                 // Method crypt:(Ljavax/crypto/Cipher;[B)[B
      37: areturn

  private byte[] crypt(javax.crypto.Cipher, byte[]) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #72                 // Method javax/crypto/Cipher.doFinal:([B)[B
       5: areturn
       6: astore_3
       7: new           #26                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #73                 // String Unable to execute \'doFinal\' with cipher instance [
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc           #75                 // String ].
      25: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore        4
      33: new           #55                 // class org/apache/shiro/crypto/CryptoException
      36: dup
      37: aload         4
      39: aload_3
      40: invokespecial #56                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/Exception

  private void init(javax.crypto.Cipher, int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload         5
       2: ifnull        34
       5: aload         4
       7: ifnull        23
      10: aload_1
      11: iload_2
      12: aload_3
      13: aload         4
      15: aload         5
      17: invokevirtual #76                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V
      20: goto          56
      23: aload_1
      24: iload_2
      25: aload_3
      26: aload         5
      28: invokevirtual #77                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;Ljava/security/SecureRandom;)V
      31: goto          56
      34: aload         4
      36: ifnull        50
      39: aload_1
      40: iload_2
      41: aload_3
      42: aload         4
      44: invokevirtual #78                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V
      47: goto          56
      50: aload_1
      51: iload_2
      52: aload_3
      53: invokevirtual #79                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      56: goto          77
      59: astore        6
      61: ldc           #80                 // String Unable to init cipher instance.
      63: astore        7
      65: new           #55                 // class org/apache/shiro/crypto/CryptoException
      68: dup
      69: aload         7
      71: aload         6
      73: invokespecial #56                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: athrow
      77: return
    Exception table:
       from    to  target type
           0    56    59   Class java/lang/Exception

  public void encrypt(java.io.InputStream, java.io.OutputStream, byte[]) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: iconst_1
       5: invokevirtual #40                 // Method isGenerateInitializationVectors:(Z)Z
       8: istore        5
      10: iload         5
      12: ifeq          43
      15: aload_0
      16: iconst_1
      17: invokevirtual #41                 // Method generateInitializationVector:(Z)[B
      20: astore        4
      22: aload         4
      24: ifnull        33
      27: aload         4
      29: arraylength
      30: ifne          43
      33: new           #35                 // class java/lang/IllegalStateException
      36: dup
      37: ldc           #42                 // String Initialization vector generation is enabled - generated vectorcannot be null or empty.
      39: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: aload_1
      45: aload_2
      46: aload_3
      47: aload         4
      49: iload         5
      51: invokespecial #81                 // Method encrypt:(Ljava/io/InputStream;Ljava/io/OutputStream;[B[BZ)V
      54: return

  private void encrypt(java.io.InputStream, java.io.OutputStream, byte[], byte[], boolean) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: iload         5
       2: ifeq          37
       5: aload         4
       7: ifnull        37
      10: aload         4
      12: arraylength
      13: ifle          37
      16: aload_2
      17: aload         4
      19: invokevirtual #82                 // Method java/io/OutputStream.write:([B)V
      22: goto          37
      25: astore        6
      27: new           #55                 // class org/apache/shiro/crypto/CryptoException
      30: dup
      31: aload         6
      33: invokespecial #84                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/Throwable;)V
      36: athrow
      37: aload_0
      38: aload_1
      39: aload_2
      40: aload_3
      41: aload         4
      43: iconst_1
      44: invokespecial #85                 // Method crypt:(Ljava/io/InputStream;Ljava/io/OutputStream;[B[BI)V
      47: return
    Exception table:
       from    to  target type
          16    22    25   Class java/io/IOException

  public void decrypt(java.io.InputStream, java.io.OutputStream, byte[]) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_0
       5: iconst_1
       6: invokevirtual #40                 // Method isGenerateInitializationVectors:(Z)Z
       9: invokespecial #86                 // Method decrypt:(Ljava/io/InputStream;Ljava/io/OutputStream;[BZ)V
      12: return

  private void decrypt(java.io.InputStream, java.io.OutputStream, byte[], boolean) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aconst_null
       1: astore        5
       3: iload         4
       5: ifeq          73
       8: aload_0
       9: invokevirtual #25                 // Method getInitializationVectorSize:()I
      12: istore        6
      14: iload         6
      16: bipush        8
      18: idiv
      19: istore        7
      21: iload         7
      23: newarray       byte
      25: astore        5
      27: aload_1
      28: aload         5
      30: invokevirtual #87                 // Method java/io/InputStream.read:([B)I
      33: istore        8
      35: goto          56
      38: astore        9
      40: ldc           #88                 // String Unable to correctly read the Initialization Vector from the input stream.
      42: astore        10
      44: new           #55                 // class org/apache/shiro/crypto/CryptoException
      47: dup
      48: aload         10
      50: aload         9
      52: invokespecial #56                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: iload         8
      58: iload         7
      60: if_icmpeq     73
      63: new           #55                 // class org/apache/shiro/crypto/CryptoException
      66: dup
      67: ldc           #89                 // String Unable to read initialization vector bytes from the InputStream.  This is required when initialization vectors are autogenerated during an encryption operation.
      69: invokespecial #90                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: aload_1
      75: aload_2
      76: aload_3
      77: aload         5
      79: invokespecial #91                 // Method decrypt:(Ljava/io/InputStream;Ljava/io/OutputStream;[B[B)V
      82: return
    Exception table:
       from    to  target type
          27    35    38   Class java/io/IOException

  private void decrypt(java.io.InputStream, java.io.OutputStream, byte[], byte[]) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iconst_2
       7: invokespecial #85                 // Method crypt:(Ljava/io/InputStream;Ljava/io/OutputStream;[B[BI)V
      10: return

  private void crypt(java.io.InputStream, java.io.OutputStream, byte[], byte[], int) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #92                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #93                 // String InputStream argument cannot be null.
      10: invokespecial #94                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #92                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #95                 // String OutputStream argument cannot be null.
      24: invokespecial #94                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: iload         5
      31: aload_3
      32: aload         4
      34: iconst_1
      35: invokespecial #70                 // Method initNewCipher:(I[B[BZ)Ljavax/crypto/Cipher;
      38: astore        6
      40: new           #96                 // class javax/crypto/CipherInputStream
      43: dup
      44: aload_1
      45: aload         6
      47: invokespecial #97                 // Method javax/crypto/CipherInputStream."<init>":(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V
      50: astore        7
      52: aload_0
      53: invokevirtual #98                 // Method getStreamingBufferSize:()I
      56: istore        8
      58: iload         8
      60: newarray       byte
      62: astore        9
      64: aload         7
      66: aload         9
      68: invokevirtual #99                 // Method javax/crypto/CipherInputStream.read:([B)I
      71: dup
      72: istore        10
      74: iconst_m1
      75: if_icmpeq     90
      78: aload_2
      79: aload         9
      81: iconst_0
      82: iload         10
      84: invokevirtual #100                // Method java/io/OutputStream.write:([BII)V
      87: goto          64
      90: goto          105
      93: astore        11
      95: new           #55                 // class org/apache/shiro/crypto/CryptoException
      98: dup
      99: aload         11
     101: invokespecial #84                 // Method org/apache/shiro/crypto/CryptoException."<init>":(Ljava/lang/Throwable;)V
     104: athrow
     105: return
    Exception table:
       from    to  target type
          64    90    93   Class java/io/IOException

  private javax.crypto.Cipher initNewCipher(int, byte[], byte[], boolean) throws org.apache.shiro.crypto.CryptoException;
    Code:
       0: aload_0
       1: iload         4
       3: invokespecial #101                // Method newCipherInstance:(Z)Ljavax/crypto/Cipher;
       6: astore        5
       8: new           #102                // class javax/crypto/spec/SecretKeySpec
      11: dup
      12: aload_2
      13: aload_0
      14: invokevirtual #24                 // Method getAlgorithmName:()Ljava/lang/String;
      17: invokespecial #103                // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      20: astore        6
      22: aconst_null
      23: astore        7
      25: aload_3
      26: ifnull        44
      29: aload_3
      30: arraylength
      31: ifle          44
      34: new           #104                // class javax/crypto/spec/IvParameterSpec
      37: dup
      38: aload_3
      39: invokespecial #105                // Method javax/crypto/spec/IvParameterSpec."<init>":([B)V
      42: astore        7
      44: aload_0
      45: aload         5
      47: iload_1
      48: aload         6
      50: aload         7
      52: aload_0
      53: invokevirtual #22                 // Method getSecureRandom:()Ljava/security/SecureRandom;
      56: invokespecial #106                // Method init:(Ljavax/crypto/Cipher;ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V
      59: aload         5
      61: areturn

  static {};
    Code:
       0: ldc_w         #107                // class org/apache/shiro/crypto/JcaCipherService
       3: invokestatic  #108                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #17                 // Field log:Lorg/slf4j/Logger;
       9: return
}
