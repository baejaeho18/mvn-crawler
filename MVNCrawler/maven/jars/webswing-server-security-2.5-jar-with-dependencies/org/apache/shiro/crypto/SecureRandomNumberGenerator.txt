Compiled from "SecureRandomNumberGenerator.java"
public class org.apache.shiro.crypto.SecureRandomNumberGenerator implements org.apache.shiro.crypto.RandomNumberGenerator {
  protected static final int DEFAULT_NEXT_BYTES_SIZE;

  private int defaultNextBytesSize;

  private java.security.SecureRandom secureRandom;

  public org.apache.shiro.crypto.SecureRandomNumberGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #2                  // Field defaultNextBytesSize:I
      10: aload_0
      11: new           #3                  // class java/security/SecureRandom
      14: dup
      15: invokespecial #4                  // Method java/security/SecureRandom."<init>":()V
      18: putfield      #5                  // Field secureRandom:Ljava/security/SecureRandom;
      21: return

  public void setSeed(byte[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field secureRandom:Ljava/security/SecureRandom;
       4: aload_1
       5: invokevirtual #6                  // Method java/security/SecureRandom.setSeed:([B)V
       8: return

  public java.security.SecureRandom getSecureRandom();
    Code:
       0: aload_0
       1: getfield      #5                  // Field secureRandom:Ljava/security/SecureRandom;
       4: areturn

  public void setSecureRandom(java.security.SecureRandom) throws java.lang.NullPointerException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #8                  // String SecureRandom argument cannot be null.
      10: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field secureRandom:Ljava/security/SecureRandom;
      19: return

  public int getDefaultNextBytesSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultNextBytesSize:I
       4: ireturn

  public void setDefaultNextBytesSize(int) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String size value must be a positive integer (1 or larger)
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #2                  // Field defaultNextBytesSize:I
      19: return

  public org.apache.shiro.util.ByteSource nextBytes();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #13                 // Method getDefaultNextBytesSize:()I
       5: invokevirtual #14                 // Method nextBytes:(I)Lorg/apache/shiro/util/ByteSource;
       8: areturn

  public org.apache.shiro.util.ByteSource nextBytes(int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String numBytes argument must be a positive integer (1 or larger)
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: newarray       byte
      17: astore_2
      18: aload_0
      19: getfield      #5                  // Field secureRandom:Ljava/security/SecureRandom;
      22: aload_2
      23: invokevirtual #16                 // Method java/security/SecureRandom.nextBytes:([B)V
      26: aload_2
      27: invokestatic  #17                 // Method org/apache/shiro/util/ByteSource$Util.bytes:([B)Lorg/apache/shiro/util/ByteSource;
      30: areturn
}
