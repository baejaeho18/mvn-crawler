Compiled from "DefaultHashService.java"
public class org.apache.shiro.crypto.hash.DefaultHashService implements org.apache.shiro.crypto.hash.ConfigurableHashService {
  private org.apache.shiro.crypto.RandomNumberGenerator rng;

  private java.lang.String algorithmName;

  private org.apache.shiro.util.ByteSource privateSalt;

  private int iterations;

  private boolean generatePublicSalt;

  static final boolean $assertionsDisabled;

  public org.apache.shiro.crypto.hash.DefaultHashService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String SHA-512
       7: putfield      #3                  // Field algorithmName:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #4                  // Field iterations:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field generatePublicSalt:Z
      20: aload_0
      21: new           #6                  // class org/apache/shiro/crypto/SecureRandomNumberGenerator
      24: dup
      25: invokespecial #7                  // Method org/apache/shiro/crypto/SecureRandomNumberGenerator."<init>":()V
      28: putfield      #8                  // Field rng:Lorg/apache/shiro/crypto/RandomNumberGenerator;
      31: return

  public org.apache.shiro.crypto.hash.Hash computeHash(org.apache.shiro.crypto.hash.HashRequest);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_1
       5: invokeinterface #9,  1            // InterfaceMethod org/apache/shiro/crypto/hash/HashRequest.getSource:()Lorg/apache/shiro/util/ByteSource;
      10: ifnull        27
      13: aload_1
      14: invokeinterface #9,  1            // InterfaceMethod org/apache/shiro/crypto/hash/HashRequest.getSource:()Lorg/apache/shiro/util/ByteSource;
      19: invokeinterface #10,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      24: ifeq          29
      27: aconst_null
      28: areturn
      29: aload_0
      30: aload_1
      31: invokevirtual #11                 // Method getAlgorithmName:(Lorg/apache/shiro/crypto/hash/HashRequest;)Ljava/lang/String;
      34: astore_2
      35: aload_1
      36: invokeinterface #9,  1            // InterfaceMethod org/apache/shiro/crypto/hash/HashRequest.getSource:()Lorg/apache/shiro/util/ByteSource;
      41: astore_3
      42: aload_0
      43: aload_1
      44: invokevirtual #12                 // Method getIterations:(Lorg/apache/shiro/crypto/hash/HashRequest;)I
      47: istore        4
      49: aload_0
      50: aload_1
      51: invokevirtual #13                 // Method getPublicSalt:(Lorg/apache/shiro/crypto/hash/HashRequest;)Lorg/apache/shiro/util/ByteSource;
      54: astore        5
      56: aload_0
      57: invokevirtual #14                 // Method getPrivateSalt:()Lorg/apache/shiro/util/ByteSource;
      60: astore        6
      62: aload_0
      63: aload         6
      65: aload         5
      67: invokevirtual #15                 // Method combine:(Lorg/apache/shiro/util/ByteSource;Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/util/ByteSource;
      70: astore        7
      72: new           #16                 // class org/apache/shiro/crypto/hash/SimpleHash
      75: dup
      76: aload_2
      77: aload_3
      78: aload         7
      80: iload         4
      82: invokespecial #17                 // Method org/apache/shiro/crypto/hash/SimpleHash."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)V
      85: astore        8
      87: new           #16                 // class org/apache/shiro/crypto/hash/SimpleHash
      90: dup
      91: aload_2
      92: invokespecial #18                 // Method org/apache/shiro/crypto/hash/SimpleHash."<init>":(Ljava/lang/String;)V
      95: astore        9
      97: aload         9
      99: aload         8
     101: invokeinterface #19,  1           // InterfaceMethod org/apache/shiro/crypto/hash/Hash.getBytes:()[B
     106: invokevirtual #20                 // Method org/apache/shiro/crypto/hash/SimpleHash.setBytes:([B)V
     109: aload         9
     111: iload         4
     113: invokevirtual #21                 // Method org/apache/shiro/crypto/hash/SimpleHash.setIterations:(I)V
     116: aload         9
     118: aload         5
     120: invokevirtual #22                 // Method org/apache/shiro/crypto/hash/SimpleHash.setSalt:(Lorg/apache/shiro/util/ByteSource;)V
     123: aload         9
     125: areturn

  protected java.lang.String getAlgorithmName(org.apache.shiro.crypto.hash.HashRequest);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod org/apache/shiro/crypto/hash/HashRequest.getAlgorithmName:()Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnonnull     16
      11: aload_0
      12: invokevirtual #24                 // Method getHashAlgorithmName:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: areturn

  protected int getIterations(org.apache.shiro.crypto.hash.HashRequest);
    Code:
       0: iconst_0
       1: aload_1
       2: invokeinterface #25,  1           // InterfaceMethod org/apache/shiro/crypto/hash/HashRequest.getIterations:()I
       7: invokestatic  #26                 // Method java/lang/Math.max:(II)I
      10: istore_2
      11: iload_2
      12: iconst_1
      13: if_icmpge     25
      16: iconst_1
      17: aload_0
      18: invokevirtual #27                 // Method getHashIterations:()I
      21: invokestatic  #26                 // Method java/lang/Math.max:(II)I
      24: istore_2
      25: iload_2
      26: ireturn

  protected org.apache.shiro.util.ByteSource getPublicSalt(org.apache.shiro.crypto.hash.HashRequest);
    Code:
       0: aload_1
       1: invokeinterface #28,  1           // InterfaceMethod org/apache/shiro/crypto/hash/HashRequest.getSalt:()Lorg/apache/shiro/util/ByteSource;
       6: astore_2
       7: aload_2
       8: ifnull        22
      11: aload_2
      12: invokeinterface #10,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      17: ifne          22
      20: aload_2
      21: areturn
      22: aconst_null
      23: astore_2
      24: aload_0
      25: invokevirtual #14                 // Method getPrivateSalt:()Lorg/apache/shiro/util/ByteSource;
      28: astore_3
      29: aload_3
      30: ifnull        46
      33: aload_3
      34: invokeinterface #10,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      39: ifne          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore        4
      49: iload         4
      51: ifne          61
      54: aload_0
      55: invokevirtual #29                 // Method isGeneratePublicSalt:()Z
      58: ifeq          71
      61: aload_0
      62: invokevirtual #30                 // Method getRandomNumberGenerator:()Lorg/apache/shiro/crypto/RandomNumberGenerator;
      65: invokeinterface #31,  1           // InterfaceMethod org/apache/shiro/crypto/RandomNumberGenerator.nextBytes:()Lorg/apache/shiro/util/ByteSource;
      70: astore_2
      71: aload_2
      72: areturn

  protected org.apache.shiro.util.ByteSource combine(org.apache.shiro.util.ByteSource, org.apache.shiro.util.ByteSource);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #32,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.getBytes:()[B
      10: goto          14
      13: aconst_null
      14: astore_3
      15: aload_3
      16: ifnull        24
      19: aload_3
      20: arraylength
      21: goto          25
      24: iconst_0
      25: istore        4
      27: aload_2
      28: ifnull        40
      31: aload_2
      32: invokeinterface #32,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.getBytes:()[B
      37: goto          41
      40: aconst_null
      41: astore        5
      43: aload         5
      45: ifnull        54
      48: aload         5
      50: arraylength
      51: goto          55
      54: iconst_0
      55: istore        6
      57: iload         4
      59: iload         6
      61: iadd
      62: istore        7
      64: iload         7
      66: ifgt          71
      69: aconst_null
      70: areturn
      71: iload         7
      73: newarray       byte
      75: astore        8
      77: iconst_0
      78: istore        9
      80: iconst_0
      81: istore        10
      83: iload         10
      85: iload         4
      87: if_icmpge     126
      90: getstatic     #33                 // Field $assertionsDisabled:Z
      93: ifne          108
      96: aload_3
      97: ifnonnull     108
     100: new           #34                 // class java/lang/AssertionError
     103: dup
     104: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     107: athrow
     108: aload         8
     110: iload         9
     112: iinc          9, 1
     115: aload_3
     116: iload         10
     118: baload
     119: bastore
     120: iinc          10, 1
     123: goto          83
     126: iconst_0
     127: istore        10
     129: iload         10
     131: iload         6
     133: if_icmpge     174
     136: getstatic     #33                 // Field $assertionsDisabled:Z
     139: ifne          155
     142: aload         5
     144: ifnonnull     155
     147: new           #34                 // class java/lang/AssertionError
     150: dup
     151: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     154: athrow
     155: aload         8
     157: iload         9
     159: iinc          9, 1
     162: aload         5
     164: iload         10
     166: baload
     167: bastore
     168: iinc          10, 1
     171: goto          129
     174: aload         8
     176: invokestatic  #36                 // Method org/apache/shiro/util/ByteSource$Util.bytes:([B)Lorg/apache/shiro/util/ByteSource;
     179: areturn

  public void setHashAlgorithmName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field algorithmName:Ljava/lang/String;
       5: return

  public java.lang.String getHashAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field algorithmName:Ljava/lang/String;
       4: areturn

  public void setPrivateSalt(org.apache.shiro.util.ByteSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field privateSalt:Lorg/apache/shiro/util/ByteSource;
       5: return

  public org.apache.shiro.util.ByteSource getPrivateSalt();
    Code:
       0: aload_0
       1: getfield      #37                 // Field privateSalt:Lorg/apache/shiro/util/ByteSource;
       4: areturn

  public void setHashIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field iterations:I
       5: return

  public int getHashIterations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iterations:I
       4: ireturn

  public void setRandomNumberGenerator(org.apache.shiro.crypto.RandomNumberGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field rng:Lorg/apache/shiro/crypto/RandomNumberGenerator;
       5: return

  public org.apache.shiro.crypto.RandomNumberGenerator getRandomNumberGenerator();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rng:Lorg/apache/shiro/crypto/RandomNumberGenerator;
       4: areturn

  public boolean isGeneratePublicSalt();
    Code:
       0: aload_0
       1: getfield      #5                  // Field generatePublicSalt:Z
       4: ireturn

  public void setGeneratePublicSalt(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field generatePublicSalt:Z
       5: return

  static {};
    Code:
       0: ldc_w         #38                 // class org/apache/shiro/crypto/hash/DefaultHashService
       3: invokevirtual #39                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #33                 // Field $assertionsDisabled:Z
      17: return
}
