Compiled from "HashedCredentialsMatcher.java"
public class org.apache.shiro.authc.credential.HashedCredentialsMatcher extends org.apache.shiro.authc.credential.SimpleCredentialsMatcher {
  private java.lang.String hashAlgorithm;

  private int hashIterations;

  private boolean hashSalted;

  private boolean storedCredentialsHexEncoded;

  public org.apache.shiro.authc.credential.HashedCredentialsMatcher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/shiro/authc/credential/SimpleCredentialsMatcher."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field hashAlgorithm:Ljava/lang/String;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field hashSalted:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field hashIterations:I
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field storedCredentialsHexEncoded:Z
      24: return

  public org.apache.shiro.authc.credential.HashedCredentialsMatcher(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: aload_1
       5: invokestatic  #7                  // Method org/apache/shiro/util/StringUtils.hasText:(Ljava/lang/String;)Z
       8: ifne          21
      11: new           #8                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #9                  // String hashAlgorithmName cannot be null or empty.
      17: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #2                  // Field hashAlgorithm:Ljava/lang/String;
      26: return

  public java.lang.String getHashAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashAlgorithm:Ljava/lang/String;
       4: areturn

  public void setHashAlgorithmName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field hashAlgorithm:Ljava/lang/String;
       5: return

  public boolean isStoredCredentialsHexEncoded();
    Code:
       0: aload_0
       1: getfield      #5                  // Field storedCredentialsHexEncoded:Z
       4: ireturn

  public void setStoredCredentialsHexEncoded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field storedCredentialsHexEncoded:Z
       5: return

  public boolean isHashSalted();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashSalted:Z
       4: ireturn

  public void setHashSalted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field hashSalted:Z
       5: return

  public int getHashIterations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hashIterations:I
       4: ireturn

  public void setHashIterations(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     13
       5: aload_0
       6: iconst_1
       7: putfield      #4                  // Field hashIterations:I
      10: goto          18
      13: aload_0
      14: iload_1
      15: putfield      #4                  // Field hashIterations:I
      18: return

  protected java.lang.Object getSalt(org.apache.shiro.authc.AuthenticationToken);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod org/apache/shiro/authc/AuthenticationToken.getPrincipal:()Ljava/lang/Object;
       6: areturn

  protected java.lang.Object getCredentials(org.apache.shiro.authc.AuthenticationInfo);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/apache/shiro/authc/AuthenticationInfo.getCredentials:()Ljava/lang/Object;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokevirtual #13                 // Method toBytes:(Ljava/lang/Object;)[B
      12: astore_3
      13: aload_2
      14: instanceof    #14                 // class java/lang/String
      17: ifne          27
      20: aload_2
      21: instanceof    #15                 // class "[C"
      24: ifeq          47
      27: aload_0
      28: invokevirtual #16                 // Method isStoredCredentialsHexEncoded:()Z
      31: ifeq          42
      34: aload_3
      35: invokestatic  #17                 // Method org/apache/shiro/codec/Hex.decode:([B)[B
      38: astore_3
      39: goto          47
      42: aload_3
      43: invokestatic  #18                 // Method org/apache/shiro/codec/Base64.decode:([B)[B
      46: astore_3
      47: aload_0
      48: invokevirtual #19                 // Method newHashInstance:()Lorg/apache/shiro/crypto/hash/AbstractHash;
      51: astore        4
      53: aload         4
      55: aload_3
      56: invokevirtual #20                 // Method org/apache/shiro/crypto/hash/AbstractHash.setBytes:([B)V
      59: aload         4
      61: areturn

  public boolean doCredentialsMatch(org.apache.shiro.authc.AuthenticationToken, org.apache.shiro.authc.AuthenticationInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #21                 // Method hashProvidedCredentials:(Lorg/apache/shiro/authc/AuthenticationToken;Lorg/apache/shiro/authc/AuthenticationInfo;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: aload_2
       9: invokevirtual #22                 // Method getCredentials:(Lorg/apache/shiro/authc/AuthenticationInfo;)Ljava/lang/Object;
      12: astore        4
      14: aload_0
      15: aload_3
      16: aload         4
      18: invokevirtual #23                 // Method equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ireturn

  protected java.lang.Object hashProvidedCredentials(org.apache.shiro.authc.AuthenticationToken, org.apache.shiro.authc.AuthenticationInfo);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: instanceof    #24                 // class org/apache/shiro/authc/SaltedAuthenticationInfo
       6: ifeq          22
       9: aload_2
      10: checkcast     #24                 // class org/apache/shiro/authc/SaltedAuthenticationInfo
      13: invokeinterface #25,  1           // InterfaceMethod org/apache/shiro/authc/SaltedAuthenticationInfo.getCredentialsSalt:()Lorg/apache/shiro/util/ByteSource;
      18: astore_3
      19: goto          35
      22: aload_0
      23: invokevirtual #26                 // Method isHashSalted:()Z
      26: ifeq          35
      29: aload_0
      30: aload_1
      31: invokevirtual #27                 // Method getSalt:(Lorg/apache/shiro/authc/AuthenticationToken;)Ljava/lang/Object;
      34: astore_3
      35: aload_0
      36: aload_1
      37: invokeinterface #28,  1           // InterfaceMethod org/apache/shiro/authc/AuthenticationToken.getCredentials:()Ljava/lang/Object;
      42: aload_3
      43: aload_0
      44: invokevirtual #29                 // Method getHashIterations:()I
      47: invokevirtual #30                 // Method hashProvidedCredentials:(Ljava/lang/Object;Ljava/lang/Object;I)Lorg/apache/shiro/crypto/hash/Hash;
      50: areturn

  private java.lang.String assertHashAlgorithmName() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getHashAlgorithmName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: ldc           #32                 // String Required \'hashAlgorithmName\' property has not been set.  This is required to execute the hashing algorithm.
      11: astore_2
      12: new           #33                 // class java/lang/IllegalStateException
      15: dup
      16: aload_2
      17: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: areturn

  protected org.apache.shiro.crypto.hash.Hash hashProvidedCredentials(java.lang.Object, java.lang.Object, int);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method assertHashAlgorithmName:()Ljava/lang/String;
       4: astore        4
       6: new           #36                 // class org/apache/shiro/crypto/hash/SimpleHash
       9: dup
      10: aload         4
      12: aload_1
      13: aload_2
      14: iload_3
      15: invokespecial #37                 // Method org/apache/shiro/crypto/hash/SimpleHash."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)V
      18: areturn

  protected org.apache.shiro.crypto.hash.AbstractHash newHashInstance();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method assertHashAlgorithmName:()Ljava/lang/String;
       4: astore_1
       5: new           #36                 // class org/apache/shiro/crypto/hash/SimpleHash
       8: dup
       9: aload_1
      10: invokespecial #38                 // Method org/apache/shiro/crypto/hash/SimpleHash."<init>":(Ljava/lang/String;)V
      13: areturn
}
