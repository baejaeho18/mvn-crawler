Compiled from "DefaultPasswordService.java"
public class org.apache.shiro.authc.credential.DefaultPasswordService implements org.apache.shiro.authc.credential.HashingPasswordService {
  public static final java.lang.String DEFAULT_HASH_ALGORITHM;

  public static final int DEFAULT_HASH_ITERATIONS;

  private static final org.slf4j.Logger log;

  private org.apache.shiro.crypto.hash.HashService hashService;

  private org.apache.shiro.crypto.hash.format.HashFormat hashFormat;

  private org.apache.shiro.crypto.hash.format.HashFormatFactory hashFormatFactory;

  private volatile boolean hashFormatWarned;

  public org.apache.shiro.authc.credential.DefaultPasswordService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hashFormatWarned:Z
       9: new           #3                  // class org/apache/shiro/crypto/hash/DefaultHashService
      12: dup
      13: invokespecial #4                  // Method org/apache/shiro/crypto/hash/DefaultHashService."<init>":()V
      16: astore_1
      17: aload_1
      18: ldc           #5                  // String SHA-256
      20: invokevirtual #6                  // Method org/apache/shiro/crypto/hash/DefaultHashService.setHashAlgorithmName:(Ljava/lang/String;)V
      23: aload_1
      24: ldc           #7                  // int 500000
      26: invokevirtual #8                  // Method org/apache/shiro/crypto/hash/DefaultHashService.setHashIterations:(I)V
      29: aload_1
      30: iconst_1
      31: invokevirtual #9                  // Method org/apache/shiro/crypto/hash/DefaultHashService.setGeneratePublicSalt:(Z)V
      34: aload_0
      35: aload_1
      36: putfield      #10                 // Field hashService:Lorg/apache/shiro/crypto/hash/HashService;
      39: aload_0
      40: new           #11                 // class org/apache/shiro/crypto/hash/format/Shiro1CryptFormat
      43: dup
      44: invokespecial #12                 // Method org/apache/shiro/crypto/hash/format/Shiro1CryptFormat."<init>":()V
      47: putfield      #13                 // Field hashFormat:Lorg/apache/shiro/crypto/hash/format/HashFormat;
      50: aload_0
      51: new           #14                 // class org/apache/shiro/crypto/hash/format/DefaultHashFormatFactory
      54: dup
      55: invokespecial #15                 // Method org/apache/shiro/crypto/hash/format/DefaultHashFormatFactory."<init>":()V
      58: putfield      #16                 // Field hashFormatFactory:Lorg/apache/shiro/crypto/hash/format/HashFormatFactory;
      61: return

  public java.lang.String encryptPassword(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method hashPassword:(Ljava/lang/Object;)Lorg/apache/shiro/crypto/hash/Hash;
       5: astore_2
       6: aload_0
       7: invokevirtual #18                 // Method checkHashFormatDurability:()V
      10: aload_0
      11: getfield      #13                 // Field hashFormat:Lorg/apache/shiro/crypto/hash/format/HashFormat;
      14: aload_2
      15: invokeinterface #19,  2           // InterfaceMethod org/apache/shiro/crypto/hash/format/HashFormat.format:(Lorg/apache/shiro/crypto/hash/Hash;)Ljava/lang/String;
      20: areturn

  public org.apache.shiro.crypto.hash.Hash hashPassword(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method createByteSource:(Ljava/lang/Object;)Lorg/apache/shiro/util/ByteSource;
       5: astore_2
       6: aload_2
       7: ifnull        19
      10: aload_2
      11: invokeinterface #21,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: aload_0
      22: aload_2
      23: invokevirtual #22                 // Method createHashRequest:(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest;
      26: astore_3
      27: aload_0
      28: getfield      #10                 // Field hashService:Lorg/apache/shiro/crypto/hash/HashService;
      31: aload_3
      32: invokeinterface #23,  2           // InterfaceMethod org/apache/shiro/crypto/hash/HashService.computeHash:(Lorg/apache/shiro/crypto/hash/HashRequest;)Lorg/apache/shiro/crypto/hash/Hash;
      37: areturn

  public boolean passwordsMatch(java.lang.Object, org.apache.shiro.crypto.hash.Hash);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method createByteSource:(Ljava/lang/Object;)Lorg/apache/shiro/util/ByteSource;
       5: astore_3
       6: aload_2
       7: ifnull        19
      10: aload_2
      11: invokeinterface #24,  1           // InterfaceMethod org/apache/shiro/crypto/hash/Hash.isEmpty:()Z
      16: ifeq          38
      19: aload_3
      20: ifnull        32
      23: aload_3
      24: invokeinterface #21,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn
      38: aload_3
      39: ifnull        51
      42: aload_3
      43: invokeinterface #21,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      48: ifeq          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: aload_3
      55: aload_2
      56: invokevirtual #25                 // Method buildHashRequest:(Lorg/apache/shiro/util/ByteSource;Lorg/apache/shiro/crypto/hash/Hash;)Lorg/apache/shiro/crypto/hash/HashRequest;
      59: astore        4
      61: aload_0
      62: getfield      #10                 // Field hashService:Lorg/apache/shiro/crypto/hash/HashService;
      65: aload         4
      67: invokeinterface #23,  2           // InterfaceMethod org/apache/shiro/crypto/hash/HashService.computeHash:(Lorg/apache/shiro/crypto/hash/HashRequest;)Lorg/apache/shiro/crypto/hash/Hash;
      72: astore        5
      74: aload_2
      75: aload         5
      77: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      80: ireturn

  protected void checkHashFormatDurability();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashFormatWarned:Z
       4: ifne          118
       7: aload_0
       8: getfield      #13                 // Field hashFormat:Lorg/apache/shiro/crypto/hash/format/HashFormat;
      11: astore_1
      12: aload_1
      13: instanceof    #27                 // class org/apache/shiro/crypto/hash/format/ParsableHashFormat
      16: ifne          118
      19: getstatic     #28                 // Field log:Lorg/slf4j/Logger;
      22: invokeinterface #29,  1           // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
      27: ifeq          118
      30: new           #30                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #32                 // String The configured hashFormat instance [
      39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      49: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #36                 // String ] is not a
      54: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc_w         #27                 // class org/apache/shiro/crypto/hash/format/ParsableHashFormat
      60: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      63: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #37                 // String  implementation.  This is
      68: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #38                 // String required if you wish to support backwards compatibility for saved password checking (almost
      73: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #39                 // String always desirable).  Without a
      78: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc_w         #27                 // class org/apache/shiro/crypto/hash/format/ParsableHashFormat
      84: invokevirtual #40                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      87: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #41                 // String  instance,
      92: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #42                 // String any hashService configuration changes will break previously hashed/saved passwords.
      97: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: astore_2
     104: getstatic     #28                 // Field log:Lorg/slf4j/Logger;
     107: aload_2
     108: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     113: aload_0
     114: iconst_1
     115: putfield      #2                  // Field hashFormatWarned:Z
     118: return

  protected org.apache.shiro.crypto.hash.HashRequest createHashRequest(org.apache.shiro.util.ByteSource);
    Code:
       0: new           #45                 // class org/apache/shiro/crypto/hash/HashRequest$Builder
       3: dup
       4: invokespecial #46                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder."<init>":()V
       7: aload_1
       8: invokevirtual #47                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.setSource:(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
      11: invokevirtual #48                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.build:()Lorg/apache/shiro/crypto/hash/HashRequest;
      14: areturn

  protected org.apache.shiro.util.ByteSource createByteSource(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #49                 // Method org/apache/shiro/util/ByteSource$Util.bytes:(Ljava/lang/Object;)Lorg/apache/shiro/util/ByteSource;
       4: areturn

  public boolean passwordsMatch(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method createByteSource:(Ljava/lang/Object;)Lorg/apache/shiro/util/ByteSource;
       5: astore_3
       6: aload_2
       7: ifnull        17
      10: aload_2
      11: invokevirtual #50                 // Method java/lang/String.length:()I
      14: ifne          36
      17: aload_3
      18: ifnull        30
      21: aload_3
      22: invokeinterface #21,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
      36: aload_3
      37: ifnull        49
      40: aload_3
      41: invokeinterface #21,  1           // InterfaceMethod org/apache/shiro/util/ByteSource.isEmpty:()Z
      46: ifeq          51
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #16                 // Field hashFormatFactory:Lorg/apache/shiro/crypto/hash/format/HashFormatFactory;
      55: aload_2
      56: invokeinterface #51,  2           // InterfaceMethod org/apache/shiro/crypto/hash/format/HashFormatFactory.getInstance:(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/format/HashFormat;
      61: astore        4
      63: aload         4
      65: ifnull        101
      68: aload         4
      70: instanceof    #27                 // class org/apache/shiro/crypto/hash/format/ParsableHashFormat
      73: ifeq          101
      76: aload         4
      78: checkcast     #27                 // class org/apache/shiro/crypto/hash/format/ParsableHashFormat
      81: astore        5
      83: aload         5
      85: aload_2
      86: invokeinterface #52,  2           // InterfaceMethod org/apache/shiro/crypto/hash/format/ParsableHashFormat.parse:(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/Hash;
      91: astore        6
      93: aload_0
      94: aload_1
      95: aload         6
      97: invokevirtual #53                 // Method passwordsMatch:(Ljava/lang/Object;Lorg/apache/shiro/crypto/hash/Hash;)Z
     100: ireturn
     101: aload_0
     102: aload_3
     103: invokevirtual #22                 // Method createHashRequest:(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest;
     106: astore        5
     108: aload_0
     109: getfield      #10                 // Field hashService:Lorg/apache/shiro/crypto/hash/HashService;
     112: aload         5
     114: invokeinterface #23,  2           // InterfaceMethod org/apache/shiro/crypto/hash/HashService.computeHash:(Lorg/apache/shiro/crypto/hash/HashRequest;)Lorg/apache/shiro/crypto/hash/Hash;
     119: astore        6
     121: aload_0
     122: getfield      #13                 // Field hashFormat:Lorg/apache/shiro/crypto/hash/format/HashFormat;
     125: aload         6
     127: invokeinterface #19,  2           // InterfaceMethod org/apache/shiro/crypto/hash/format/HashFormat.format:(Lorg/apache/shiro/crypto/hash/Hash;)Ljava/lang/String;
     132: astore        7
     134: aload_2
     135: aload         7
     137: invokevirtual #54                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     140: ireturn

  protected org.apache.shiro.crypto.hash.HashRequest buildHashRequest(org.apache.shiro.util.ByteSource, org.apache.shiro.crypto.hash.Hash);
    Code:
       0: new           #45                 // class org/apache/shiro/crypto/hash/HashRequest$Builder
       3: dup
       4: invokespecial #46                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder."<init>":()V
       7: aload_1
       8: invokevirtual #47                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.setSource:(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
      11: aload_2
      12: invokeinterface #55,  1           // InterfaceMethod org/apache/shiro/crypto/hash/Hash.getAlgorithmName:()Ljava/lang/String;
      17: invokevirtual #56                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.setAlgorithmName:(Ljava/lang/String;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
      20: aload_2
      21: invokeinterface #57,  1           // InterfaceMethod org/apache/shiro/crypto/hash/Hash.getSalt:()Lorg/apache/shiro/util/ByteSource;
      26: invokevirtual #58                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.setSalt:(Lorg/apache/shiro/util/ByteSource;)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
      29: aload_2
      30: invokeinterface #59,  1           // InterfaceMethod org/apache/shiro/crypto/hash/Hash.getIterations:()I
      35: invokevirtual #60                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.setIterations:(I)Lorg/apache/shiro/crypto/hash/HashRequest$Builder;
      38: invokevirtual #48                 // Method org/apache/shiro/crypto/hash/HashRequest$Builder.build:()Lorg/apache/shiro/crypto/hash/HashRequest;
      41: areturn

  public org.apache.shiro.crypto.hash.HashService getHashService();
    Code:
       0: aload_0
       1: getfield      #10                 // Field hashService:Lorg/apache/shiro/crypto/hash/HashService;
       4: areturn

  public void setHashService(org.apache.shiro.crypto.hash.HashService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field hashService:Lorg/apache/shiro/crypto/hash/HashService;
       5: return

  public org.apache.shiro.crypto.hash.format.HashFormat getHashFormat();
    Code:
       0: aload_0
       1: getfield      #13                 // Field hashFormat:Lorg/apache/shiro/crypto/hash/format/HashFormat;
       4: areturn

  public void setHashFormat(org.apache.shiro.crypto.hash.format.HashFormat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field hashFormat:Lorg/apache/shiro/crypto/hash/format/HashFormat;
       5: return

  public org.apache.shiro.crypto.hash.format.HashFormatFactory getHashFormatFactory();
    Code:
       0: aload_0
       1: getfield      #16                 // Field hashFormatFactory:Lorg/apache/shiro/crypto/hash/format/HashFormatFactory;
       4: areturn

  public void setHashFormatFactory(org.apache.shiro.crypto.hash.format.HashFormatFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field hashFormatFactory:Lorg/apache/shiro/crypto/hash/format/HashFormatFactory;
       5: return

  static {};
    Code:
       0: ldc_w         #61                 // class org/apache/shiro/authc/credential/DefaultPasswordService
       3: invokestatic  #62                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #28                 // Field log:Lorg/slf4j/Logger;
       9: return
}
