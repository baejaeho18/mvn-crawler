Compiled from "JndiObjectFactory.java"
public class org.apache.shiro.jndi.JndiObjectFactory<T> extends org.apache.shiro.jndi.JndiLocator implements org.apache.shiro.util.Factory<T> {
  private java.lang.String resourceName;

  private java.lang.Class<? extends T> requiredType;

  public org.apache.shiro.jndi.JndiObjectFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/shiro/jndi/JndiLocator."<init>":()V
       4: return

  public T getInstance();
    Code:
       0: aload_0
       1: getfield      #2                  // Field requiredType:Ljava/lang/Class;
       4: ifnull        27
       7: aload_0
       8: getfield      #2                  // Field requiredType:Ljava/lang/Class;
      11: aload_0
      12: aload_0
      13: getfield      #3                  // Field resourceName:Ljava/lang/String;
      16: aload_0
      17: getfield      #2                  // Field requiredType:Ljava/lang/Class;
      20: invokevirtual #4                  // Method lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      23: invokevirtual #5                  // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn
      27: aload_0
      28: aload_0
      29: getfield      #3                  // Field resourceName:Ljava/lang/String;
      32: invokevirtual #6                  // Method lookup:(Ljava/lang/String;)Ljava/lang/Object;
      35: areturn
      36: astore_1
      37: aload_0
      38: getfield      #2                  // Field requiredType:Ljava/lang/Class;
      41: ifnull        54
      44: aload_0
      45: getfield      #2                  // Field requiredType:Ljava/lang/Class;
      48: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      51: goto          56
      54: ldc           #9                  // String object
      56: astore_2
      57: new           #10                 // class java/lang/IllegalStateException
      60: dup
      61: new           #11                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #13                 // String Unable to look up
      70: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_2
      74: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #15                 // String  with jndi name \'
      79: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #3                  // Field resourceName:Ljava/lang/String;
      86: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #16                 // String \'.
      91: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: aload_1
      98: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     101: athrow
    Exception table:
       from    to  target type
           0    26    36   Class javax/naming/NamingException
          27    35    36   Class javax/naming/NamingException

  public java.lang.String getResourceName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resourceName:Ljava/lang/String;
       4: areturn

  public void setResourceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field resourceName:Ljava/lang/String;
       5: return

  public java.lang.Class<? extends T> getRequiredType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field requiredType:Ljava/lang/Class;
       4: areturn

  public void setRequiredType(java.lang.Class<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field requiredType:Ljava/lang/Class;
       5: return
}
