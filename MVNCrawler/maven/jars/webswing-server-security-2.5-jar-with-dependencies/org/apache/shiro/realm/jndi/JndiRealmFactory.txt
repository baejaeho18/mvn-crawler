Compiled from "JndiRealmFactory.java"
public class org.apache.shiro.realm.jndi.JndiRealmFactory extends org.apache.shiro.jndi.JndiLocator implements org.apache.shiro.realm.RealmFactory {
  java.util.Collection<java.lang.String> jndiNames;

  public org.apache.shiro.realm.jndi.JndiRealmFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/shiro/jndi/JndiLocator."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field jndiNames:Ljava/util/Collection;
       9: return

  public java.util.Collection<java.lang.String> getJndiNames();
    Code:
       0: aload_0
       1: getfield      #2                  // Field jndiNames:Ljava/util/Collection;
       4: areturn

  public void setJndiNames(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field jndiNames:Ljava/util/Collection;
       5: return

  public void setJndiNames(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method org/apache/shiro/util/StringUtils.clean:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     49
       9: new           #4                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #6                  // String One or more comma-delimited jndi names must be specified for the
      18: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #10                 // String  to locate Realms.
      33: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: astore_3
      40: new           #12                 // class java/lang/IllegalStateException
      43: dup
      44: aload_3
      45: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_2
      50: ldc           #14                 // String ,
      52: invokestatic  #15                 // Method org/apache/shiro/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      55: astore_3
      56: aload_0
      57: aload_3
      58: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      61: invokevirtual #17                 // Method setJndiNames:(Ljava/util/Collection;)V
      64: return

  public java.util.Collection<org.apache.shiro.realm.Realm> getRealms() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getJndiNames:()Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      15: ifeq          58
      18: new           #4                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #20                 // String One or more jndi names must be specified for the
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #10                 // String  to locate Realms.
      42: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_2
      49: new           #12                 // class java/lang/IllegalStateException
      52: dup
      53: aload_2
      54: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: new           #21                 // class java/util/ArrayList
      61: dup
      62: aload_1
      63: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.size:()I
      68: invokespecial #23                 // Method java/util/ArrayList."<init>":(I)V
      71: astore_2
      72: aload_1
      73: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      78: astore_3
      79: aload_3
      80: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          165
      88: aload_3
      89: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #27                 // class java/lang/String
      97: astore        4
      99: aload_0
     100: aload         4
     102: ldc_w         #28                 // class org/apache/shiro/realm/Realm
     105: invokevirtual #29                 // Method lookup:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
     108: checkcast     #28                 // class org/apache/shiro/realm/Realm
     111: astore        5
     113: aload_2
     114: aload         5
     116: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     121: pop
     122: goto          162
     125: astore        5
     127: new           #12                 // class java/lang/IllegalStateException
     130: dup
     131: new           #4                  // class java/lang/StringBuilder
     134: dup
     135: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #32                 // String Unable to look up realm with jndi name \'
     140: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload         4
     145: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #33                 // String \'.
     150: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: aload         5
     158: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     161: athrow
     162: goto          79
     165: aload_2
     166: invokeinterface #35,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     171: ifeq          178
     174: aconst_null
     175: goto          179
     178: aload_2
     179: areturn
    Exception table:
       from    to  target type
          99   122   125   Class java/lang/Exception
}
