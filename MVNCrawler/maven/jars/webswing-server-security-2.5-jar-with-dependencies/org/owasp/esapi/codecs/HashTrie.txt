Compiled from "HashTrie.java"
public class org.owasp.esapi.codecs.HashTrie<T> implements org.owasp.esapi.codecs.Trie<T> {
  private org.owasp.esapi.codecs.HashTrie$Node<T> root;

  private int maxKeyLen;

  private int size;

  public org.owasp.esapi.codecs.HashTrie();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method clear:()V
       8: return

  public java.util.Map$Entry<java.lang.CharSequence, T> getLongestMatch(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
       4: ifnull        11
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      17: aload_1
      18: iconst_0
      19: invokevirtual #4                  // Method org/owasp/esapi/codecs/HashTrie$Node.getLongestMatch:(Ljava/lang/CharSequence;I)Lorg/owasp/esapi/codecs/HashTrie$Entry;
      22: areturn

  public java.util.Map$Entry<java.lang.CharSequence, T> getLongestMatch(java.io.PushbackReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
       4: ifnull        11
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      17: aload_1
      18: new           #5                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      25: invokevirtual #7                  // Method org/owasp/esapi/codecs/HashTrie$Node.getLongestMatch:(Ljava/io/PushbackReader;Ljava/lang/StringBuilder;)Lorg/owasp/esapi/codecs/HashTrie$Entry;
      28: areturn

  public int getMaxKeyLength();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxKeyLen:I
       4: ireturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
       5: aload_0
       6: iconst_m1
       7: putfield      #8                  // Field maxKeyLen:I
      10: aload_0
      11: iconst_0
      12: putfield      #9                  // Field size:I
      15: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      13: aload_1
      14: invokevirtual #11                 // Method org/owasp/esapi/codecs/HashTrie$Node.containsValue:(Ljava/lang/Object;)Z
      17: ireturn

  public T put(java.lang.CharSequence, T) throws java.lang.NullPointerException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #12                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #13                 // String Null keys are not handled
      10: invokespecial #14                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #12                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #15                 // String Null values are not handled
      24: invokespecial #14                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      32: ifnonnull     47
      35: aload_0
      36: new           #16                 // class org/owasp/esapi/codecs/HashTrie$Node
      39: dup
      40: aconst_null
      41: invokespecial #17                 // Method org/owasp/esapi/codecs/HashTrie$Node."<init>":(Lorg/owasp/esapi/codecs/HashTrie$1;)V
      44: putfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      47: aload_0
      48: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      51: aload_1
      52: iconst_0
      53: aload_2
      54: invokevirtual #18                 // Method org/owasp/esapi/codecs/HashTrie$Node.put:(Ljava/lang/CharSequence;ILjava/lang/Object;)Ljava/lang/Object;
      57: dup
      58: astore        4
      60: ifnull        66
      63: aload         4
      65: areturn
      66: aload_1
      67: invokeinterface #19,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      72: dup
      73: istore_3
      74: aload_0
      75: getfield      #8                  // Field maxKeyLen:I
      78: if_icmple     86
      81: aload_0
      82: iload_3
      83: putfield      #8                  // Field maxKeyLen:I
      86: aload_0
      87: dup
      88: getfield      #9                  // Field size:I
      91: iconst_1
      92: iadd
      93: putfield      #9                  // Field size:I
      96: aconst_null
      97: areturn

  public T remove(java.lang.Object) throws java.lang.UnsupportedOperationException;
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void putAll(java.util.Map<? extends java.lang.CharSequence, ? extends T>);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          54
      21: aload_2
      22: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #26                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #28                 // class java/lang/CharSequence
      41: aload_3
      42: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokevirtual #30                 // Method put:(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          12
      54: return

  public java.util.Set<java.lang.CharSequence> keySet();
    Code:
       0: new           #31                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #9                  // Field size:I
       8: invokespecial #32                 // Method java/util/HashSet."<init>":(I)V
      11: astore_1
      12: aload_0
      13: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      16: ifnonnull     21
      19: aload_1
      20: areturn
      21: aload_0
      22: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      25: new           #5                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      32: aload_1
      33: invokevirtual #33                 // Method org/owasp/esapi/codecs/HashTrie$Node.keySet:(Ljava/lang/StringBuilder;Ljava/util/Set;)Ljava/util/Set;
      36: areturn

  public java.util.Collection<T> values();
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method size:()I
       8: invokespecial #36                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_1
      12: aload_0
      13: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      16: ifnonnull     21
      19: aload_1
      20: areturn
      21: aload_0
      22: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      25: aload_1
      26: invokevirtual #37                 // Method org/owasp/esapi/codecs/HashTrie$Node.values:(Ljava/util/Collection;)Ljava/util/Collection;
      29: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.CharSequence, T>> entrySet();
    Code:
       0: new           #31                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method size:()I
       8: invokespecial #32                 // Method java/util/HashSet."<init>":(I)V
      11: astore_1
      12: aload_0
      13: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      16: ifnonnull     21
      19: aload_1
      20: areturn
      21: aload_0
      22: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      25: new           #5                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      32: aload_1
      33: invokevirtual #38                 // Method org/owasp/esapi/codecs/HashTrie$Node.entrySet:(Ljava/lang/StringBuilder;Ljava/util/Set;)Ljava/util/Set;
      36: areturn

  public T get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
       4: ifnull        11
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: instanceof    #28                 // class java/lang/CharSequence
      17: ifne          22
      20: aconst_null
      21: areturn
      22: aload_0
      23: getfield      #3                  // Field root:Lorg/owasp/esapi/codecs/HashTrie$Node;
      26: aload_1
      27: checkcast     #28                 // class java/lang/CharSequence
      30: iconst_0
      31: invokevirtual #39                 // Method org/owasp/esapi/codecs/HashTrie$Node.get:(Ljava/lang/CharSequence;I)Ljava/lang/Object;
      34: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #9                  // Field size:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: instanceof    #40                 // class java/util/Map
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: invokevirtual #41                 // Method entrySet:()Ljava/util/Set;
      19: aload_1
      20: checkcast     #40                 // class java/util/Map
      23: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      28: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method entrySet:()Ljava/util/Set;
       4: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method isEmpty:()Z
       4: ifeq          10
       7: ldc           #45                 // String {}
       9: areturn
      10: new           #5                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      17: astore_1
      18: iconst_1
      19: istore_2
      20: aload_1
      21: ldc           #46                 // String {
      23: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_0
      28: invokevirtual #41                 // Method entrySet:()Ljava/util/Set;
      31: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          86
      46: aload_3
      47: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #26                 // class java/util/Map$Entry
      55: astore        4
      57: iload_2
      58: ifeq          66
      61: iconst_0
      62: istore_2
      63: goto          73
      66: aload_1
      67: ldc           #48                 // String ,
      69: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: aload         4
      76: invokevirtual #49                 // Method java/lang/Object.toString:()Ljava/lang/String;
      79: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: goto          37
      86: aload_1
      87: ldc           #50                 // String  }
      89: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #30                 // Method put:(Ljava/lang/CharSequence;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
