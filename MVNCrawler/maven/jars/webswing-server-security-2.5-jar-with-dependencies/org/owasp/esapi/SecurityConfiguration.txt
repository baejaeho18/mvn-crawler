Compiled from "SecurityConfiguration.java"
public interface org.owasp.esapi.SecurityConfiguration {
  public abstract java.lang.String getApplicationName();

  public abstract java.lang.String getLogImplementation();

  public abstract java.lang.String getAuthenticationImplementation();

  public abstract java.lang.String getEncoderImplementation();

  public abstract java.lang.String getAccessControlImplementation();

  public abstract java.lang.String getIntrusionDetectionImplementation();

  public abstract java.lang.String getRandomizerImplementation();

  public abstract java.lang.String getEncryptionImplementation();

  public abstract java.lang.String getValidationImplementation();

  public abstract java.util.regex.Pattern getValidationPattern(java.lang.String);

  public abstract boolean getLenientDatesAccepted();

  public abstract java.lang.String getExecutorImplementation();

  public abstract java.lang.String getHTTPUtilitiesImplementation();

  public abstract byte[] getMasterKey();

  public abstract java.io.File getUploadDirectory();

  public abstract java.io.File getUploadTempDirectory();

  public abstract int getEncryptionKeyLength();

  public abstract byte[] getMasterSalt();

  public abstract java.util.List<java.lang.String> getAllowedExecutables();

  public abstract java.util.List<java.lang.String> getAllowedFileExtensions();

  public abstract int getAllowedFileUploadSize();

  public abstract java.lang.String getPasswordParameterName();

  public abstract java.lang.String getUsernameParameterName();

  public abstract java.lang.String getEncryptionAlgorithm();

  public abstract java.lang.String getCipherTransformation();

  public abstract java.lang.String setCipherTransformation(java.lang.String);

  public abstract java.lang.String getPreferredJCEProvider();

  public abstract boolean useMACforCipherText();

  public abstract boolean overwritePlainText();

  public abstract java.lang.String getIVType();

  public abstract java.lang.String getFixedIV();

  public abstract java.util.List<java.lang.String> getCombinedCipherModes();

  public abstract java.util.List<java.lang.String> getAdditionalAllowedCipherModes();

  public abstract java.lang.String getHashAlgorithm();

  public abstract int getHashIterations();

  public abstract java.lang.String getKDFPseudoRandomFunction();

  public abstract java.lang.String getCharacterEncoding();

  public abstract boolean getAllowMultipleEncoding();

  public abstract boolean getAllowMixedEncoding();

  public abstract java.util.List<java.lang.String> getDefaultCanonicalizationCodecs();

  public abstract java.lang.String getDigitalSignatureAlgorithm();

  public abstract int getDigitalSignatureKeyLength();

  public abstract java.lang.String getRandomAlgorithm();

  public abstract int getAllowedLoginAttempts();

  public abstract int getMaxOldPasswordHashes();

  public abstract boolean getDisableIntrusionDetection();

  public abstract org.owasp.esapi.SecurityConfiguration$Threshold getQuota(java.lang.String);

  public abstract java.io.File getResourceFile(java.lang.String);

  public abstract boolean getForceHttpOnlySession();

  public abstract boolean getForceSecureSession();

  public abstract boolean getForceHttpOnlyCookies();

  public abstract boolean getForceSecureCookies();

  public abstract int getMaxHttpHeaderSize();

  public abstract java.io.InputStream getResourceStream(java.lang.String) throws java.io.IOException;

  public abstract void setResourceDirectory(java.lang.String);

  public abstract java.lang.String getResponseContentType();

  public abstract java.lang.String getHttpSessionIdName();

  public abstract long getRememberTokenDuration();

  public abstract int getSessionIdleTimeoutLength();

  public abstract int getSessionAbsoluteTimeoutLength();

  public abstract boolean getLogEncodingRequired();

  public abstract boolean getLogApplicationName();

  public abstract boolean getLogServerIP();

  public abstract int getLogLevel();

  public abstract java.lang.String getLogFileName();

  public abstract int getMaxLogFileSize();

  public abstract java.io.File getWorkingDirectory();
}
