Compiled from "PermissionTest.java"
public class net.leanix.dropkit.oauth.PermissionTest {
  private net.leanix.dropkit.oauth.Permission permission;

  public net.leanix.dropkit.oauth.PermissionTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setup();
    Code:
       0: aload_0
       1: new           #2                  // class net/leanix/dropkit/oauth/Permission
       4: dup
       5: invokespecial #3                  // Method net/leanix/dropkit/oauth/Permission."<init>":()V
       8: putfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
      11: aload_0
      12: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
      15: getstatic     #5                  // Field net/leanix/dropkit/oauth/PermissionStatus.ACTIVE:Lnet/leanix/dropkit/oauth/PermissionStatus;
      18: invokevirtual #6                  // Method net/leanix/dropkit/oauth/Permission.setStatus:(Lnet/leanix/dropkit/oauth/PermissionStatus;)V
      21: aload_0
      22: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
      25: getstatic     #7                  // Field net/leanix/dropkit/oauth/PermissionRole.ADMIN:Lnet/leanix/dropkit/oauth/PermissionRole;
      28: invokevirtual #8                  // Method net/leanix/dropkit/oauth/Permission.setRole:(Lnet/leanix/dropkit/oauth/PermissionRole;)V
      31: return

  public void isActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
       4: invokevirtual #9                  // Method net/leanix/dropkit/oauth/Permission.isActive:()Z
       7: invokestatic  #10                 // Method org/junit/Assert.assertTrue:(Z)V
      10: return

  public void isNotActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
       4: getstatic     #11                 // Field net/leanix/dropkit/oauth/PermissionStatus.ARCHIVED:Lnet/leanix/dropkit/oauth/PermissionStatus;
       7: invokevirtual #6                  // Method net/leanix/dropkit/oauth/Permission.setStatus:(Lnet/leanix/dropkit/oauth/PermissionStatus;)V
      10: aload_0
      11: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
      14: invokevirtual #9                  // Method net/leanix/dropkit/oauth/Permission.isActive:()Z
      17: invokestatic  #12                 // Method org/junit/Assert.assertFalse:(Z)V
      20: return

  public void hasRole();
    Code:
       0: aload_0
       1: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
       4: getstatic     #7                  // Field net/leanix/dropkit/oauth/PermissionRole.ADMIN:Lnet/leanix/dropkit/oauth/PermissionRole;
       7: invokevirtual #13                 // Method net/leanix/dropkit/oauth/Permission.hasRole:(Lnet/leanix/dropkit/oauth/PermissionRole;)Z
      10: invokestatic  #10                 // Method org/junit/Assert.assertTrue:(Z)V
      13: return

  public void hasNotRole();
    Code:
       0: aload_0
       1: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
       4: getstatic     #14                 // Field net/leanix/dropkit/oauth/PermissionRole.CONTACT:Lnet/leanix/dropkit/oauth/PermissionRole;
       7: invokevirtual #13                 // Method net/leanix/dropkit/oauth/Permission.hasRole:(Lnet/leanix/dropkit/oauth/PermissionRole;)Z
      10: invokestatic  #12                 // Method org/junit/Assert.assertFalse:(Z)V
      13: return

  public void isActiveRole();
    Code:
       0: aload_0
       1: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
       4: getstatic     #7                  // Field net/leanix/dropkit/oauth/PermissionRole.ADMIN:Lnet/leanix/dropkit/oauth/PermissionRole;
       7: invokevirtual #15                 // Method net/leanix/dropkit/oauth/Permission.isActive:(Lnet/leanix/dropkit/oauth/PermissionRole;)Z
      10: invokestatic  #10                 // Method org/junit/Assert.assertTrue:(Z)V
      13: return

  public void isNotActiveRole();
    Code:
       0: aload_0
       1: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
       4: getstatic     #11                 // Field net/leanix/dropkit/oauth/PermissionStatus.ARCHIVED:Lnet/leanix/dropkit/oauth/PermissionStatus;
       7: invokevirtual #6                  // Method net/leanix/dropkit/oauth/Permission.setStatus:(Lnet/leanix/dropkit/oauth/PermissionStatus;)V
      10: aload_0
      11: getfield      #4                  // Field permission:Lnet/leanix/dropkit/oauth/Permission;
      14: getstatic     #7                  // Field net/leanix/dropkit/oauth/PermissionRole.ADMIN:Lnet/leanix/dropkit/oauth/PermissionRole;
      17: invokevirtual #15                 // Method net/leanix/dropkit/oauth/Permission.isActive:(Lnet/leanix/dropkit/oauth/PermissionRole;)Z
      20: invokestatic  #12                 // Method org/junit/Assert.assertFalse:(Z)V
      23: return
}
