Compiled from "WeakConcurrentMap.java"
class org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey<T> extends java.lang.ref.WeakReference<T> {
  private final int hashCode;

  org.mockito.internal.util.concurrent.WeakConcurrentMap$WeakKey(T, java.lang.ref.ReferenceQueue<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #2                  // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      11: putfield      #3                  // Field hashCode:I
      14: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashCode:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/mockito/internal/util/concurrent/WeakConcurrentMap$LatentKey
       4: ifeq          27
       7: aload_1
       8: checkcast     #4                  // class org/mockito/internal/util/concurrent/WeakConcurrentMap$LatentKey
      11: getfield      #5                  // Field org/mockito/internal/util/concurrent/WeakConcurrentMap$LatentKey.key:Ljava/lang/Object;
      14: aload_0
      15: invokevirtual #6                  // Method get:()Ljava/lang/Object;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: aload_1
      28: checkcast     #7                  // class org/mockito/internal/util/concurrent/WeakConcurrentMap$WeakKey
      31: invokevirtual #6                  // Method get:()Ljava/lang/Object;
      34: aload_0
      35: invokevirtual #6                  // Method get:()Ljava/lang/Object;
      38: if_acmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn
}
