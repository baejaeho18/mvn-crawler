Compiled from "BoardPrinter.java"
abstract class nl.mauritssilvis.darts.java.core.boards.output.BoardPrinter {
  private final java.util.List<nl.mauritssilvis.darts.java.api.boards.FieldType> fieldTypes;

  private final java.util.Map<nl.mauritssilvis.darts.java.api.boards.FieldType, java.util.List<nl.mauritssilvis.darts.java.api.boards.Field>> fieldsMap;

  private final int numFields;

  private final int fieldWidth;

  nl.mauritssilvis.darts.java.core.boards.output.BoardPrinter(nl.mauritssilvis.darts.java.api.boards.Board);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method nl/mauritssilvis/darts/java/api/boards/FieldType.values:()[Lnl/mauritssilvis/darts/java/api/boards/FieldType;
       8: invokestatic  #13                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      11: aload_1
      12: invokedynamic #19,  0             // InvokeDynamic #0:test:(Lnl/mauritssilvis/darts/java/api/boards/Board;)Ljava/util/function/Predicate;
      17: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      22: invokeinterface #29,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      27: putfield      #33                 // Field fieldTypes:Ljava/util/List;
      30: aload_0
      31: aload_0
      32: getfield      #33                 // Field fieldTypes:Ljava/util/List;
      35: invokeinterface #39,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      40: invokestatic  #44                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      43: aload_1
      44: dup
      45: invokestatic  #50                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: invokedynamic #56,  0             // InvokeDynamic #1:apply:(Lnl/mauritssilvis/darts/java/api/boards/Board;)Ljava/util/function/Function;
      54: invokedynamic #60,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
      59: invokedynamic #63,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      64: invokestatic  #67                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      67: invokeinterface #73,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      72: checkcast     #77                 // class java/util/Map
      75: putfield      #79                 // Field fieldsMap:Ljava/util/Map;
      78: aload_0
      79: aload_0
      80: getfield      #79                 // Field fieldsMap:Ljava/util/Map;
      83: invokeinterface #83,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      88: invokestatic  #86                 // Method getMaxNumFields:(Ljava/util/Collection;)I
      91: putfield      #90                 // Field numFields:I
      94: aload_0
      95: aload_0
      96: getfield      #79                 // Field fieldsMap:Ljava/util/Map;
      99: invokeinterface #83,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     104: invokestatic  #94                 // Method getMaxFieldWidth:(Ljava/util/Collection;)I
     107: putfield      #97                 // Field fieldWidth:I
     110: return

  int getNumFields();
    Code:
       0: aload_0
       1: getfield      #90                 // Field numFields:I
       4: ireturn

  int getFieldWidth();
    Code:
       0: aload_0
       1: getfield      #97                 // Field fieldWidth:I
       4: ireturn

  java.lang.String print();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method startBoard:()V
       4: aload_0
       5: invokevirtual #103                // Method processTypes:()V
       8: aload_0
       9: invokevirtual #106                // Method endBoard:()V
      12: aload_0
      13: invokevirtual #109                // Method getString:()Ljava/lang/String;
      16: areturn

  abstract void startBoard();

  abstract void endBoard();

  abstract void startType(nl.mauritssilvis.darts.java.api.boards.FieldType);

  abstract void endType();

  abstract void separateType();

  abstract void startField();

  abstract void addField(java.lang.String);

  abstract void endField();

  abstract void separateField();

  abstract void startEmptyField();

  abstract void addEmptyField();

  abstract void endEmptyField();

  abstract java.lang.String getString();

  private static int getMaxNumFields(java.util.Collection<? extends java.util.Collection<? extends nl.mauritssilvis.darts.java.api.boards.Field>>);
    Code:
       0: aload_0
       1: invokeinterface #113,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #116,  0            // InvokeDynamic #4:applyAsInt:()Ljava/util/function/ToIntFunction;
      11: invokeinterface #120,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      16: invokeinterface #124,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      21: iconst_0
      22: invokevirtual #130                // Method java/util/OptionalInt.orElse:(I)I
      25: ireturn

  private static int getMaxFieldWidth(java.util.Collection<? extends java.util.Collection<? extends nl.mauritssilvis.darts.java.api.boards.Field>>);
    Code:
       0: aload_0
       1: invokeinterface #113,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #136,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      11: invokeinterface #138,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #142,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      21: invokeinterface #143,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokedynamic #146,  0            // InvokeDynamic #7:applyAsInt:()Ljava/util/function/ToIntFunction;
      31: invokeinterface #120,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      36: invokeinterface #124,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      41: iconst_0
      42: invokevirtual #130                // Method java/util/OptionalInt.orElse:(I)I
      45: ireturn

  private void processTypes();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #33                 // Field fieldTypes:Ljava/util/List;
       7: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      12: if_icmpge     59
      15: aload_0
      16: getfield      #33                 // Field fieldTypes:Ljava/util/List;
      19: iload_1
      20: invokeinterface #151,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #8                  // class nl/mauritssilvis/darts/java/api/boards/FieldType
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #154                // Method processType:(Lnl/mauritssilvis/darts/java/api/boards/FieldType;)V
      34: iload_1
      35: aload_0
      36: getfield      #33                 // Field fieldTypes:Ljava/util/List;
      39: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      44: iconst_1
      45: isub
      46: if_icmpeq     53
      49: aload_0
      50: invokevirtual #158                // Method separateType:()V
      53: iinc          1, 1
      56: goto          2
      59: return

  private void processType(nl.mauritssilvis.darts.java.api.boards.FieldType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #161                // Method startType:(Lnl/mauritssilvis/darts/java/api/boards/FieldType;)V
       5: aload_0
       6: aload_0
       7: getfield      #79                 // Field fieldsMap:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #164,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #40                 // class java/util/List
      19: invokevirtual #166                // Method processFields:(Ljava/util/List;)V
      22: aload_0
      23: invokevirtual #170                // Method endType:()V
      26: return

  private void processFields(java.util.List<? extends nl.mauritssilvis.darts.java.api.boards.Field>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
       9: if_icmpge     50
      12: aload_1
      13: iload_2
      14: invokeinterface #151,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #173                // class nl/mauritssilvis/darts/java/api/boards/Field
      22: astore_3
      23: aload_0
      24: aload_3
      25: invokevirtual #175                // Method processField:(Lnl/mauritssilvis/darts/java/api/boards/Field;)V
      28: iload_2
      29: aload_1
      30: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      35: iconst_1
      36: isub
      37: if_icmpeq     44
      40: aload_0
      41: invokevirtual #179                // Method separateField:()V
      44: iinc          2, 1
      47: goto          2
      50: aload_1
      51: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      56: istore_2
      57: iload_2
      58: aload_0
      59: getfield      #90                 // Field numFields:I
      62: if_icmpge     75
      65: aload_0
      66: invokevirtual #182                // Method processEmptyField:()V
      69: iinc          2, 1
      72: goto          57
      75: return

  private void processField(nl.mauritssilvis.darts.java.api.boards.Field);
    Code:
       0: aload_0
       1: invokevirtual #185                // Method startField:()V
       4: aload_0
       5: aload_1
       6: invokeinterface #188,  1          // InterfaceMethod nl/mauritssilvis/darts/java/api/boards/Field.getName:()Ljava/lang/String;
      11: invokevirtual #191                // Method addField:(Ljava/lang/String;)V
      14: aload_0
      15: invokevirtual #195                // Method endField:()V
      18: return

  private void processEmptyField();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method startEmptyField:()V
       4: aload_0
       5: invokevirtual #201                // Method addEmptyField:()V
       8: aload_0
       9: invokevirtual #204                // Method endEmptyField:()V
      12: return

  private static java.util.List lambda$new$1(java.util.List, java.util.List);
    Code:
       0: aload_0
       1: areturn

  private static boolean lambda$new$0(nl.mauritssilvis.darts.java.api.boards.Board, nl.mauritssilvis.darts.java.api.boards.FieldType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #207,  2          // InterfaceMethod nl/mauritssilvis/darts/java/api/boards/Board.getFields:(Lnl/mauritssilvis/darts/java/api/boards/FieldType;)Ljava/util/List;
       7: invokeinterface #213,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn
}
