Compiled from "CartesianPathfinder.java"
class nl.mauritssilvis.darts.java.core.finders.paths.CartesianPathfinder$Finder {
  private final java.util.List<? extends nl.mauritssilvis.darts.java.core.finders.paths.Node> nodes;

  private final int maxLevel;

  private final int length;

  private final java.util.List<nl.mauritssilvis.darts.java.api.finders.paths.Path> paths;

  nl.mauritssilvis.darts.java.core.finders.paths.CartesianPathfinder$Finder(java.util.List<? extends nl.mauritssilvis.darts.java.core.finders.paths.Node>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field nodes:Ljava/util/List;
       9: aload_0
      10: aload_1
      11: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      16: putfield      #19                 // Field maxLevel:I
      19: aload_0
      20: iload_2
      21: putfield      #23                 // Field length:I
      24: aload_0
      25: new           #26                 // class java/util/ArrayList
      28: dup
      29: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      32: putfield      #29                 // Field paths:Ljava/util/List;
      35: return

  java.util.List<nl.mauritssilvis.darts.java.api.finders.paths.Path> find();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: new           #26                 // class java/util/ArrayList
       7: dup
       8: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      11: astore_3
      12: iconst_0
      13: aload_0
      14: getfield      #19                 // Field maxLevel:I
      17: invokestatic  #32                 // InterfaceMethod java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
      20: aload_3
      21: invokedynamic #38,  0             // InvokeDynamic #0:accept:(Ljava/util/List;)Ljava/util/function/IntConsumer;
      26: invokeinterface #42,  2           // InterfaceMethod java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
      31: aload_0
      32: iload_1
      33: iload_2
      34: aload_3
      35: invokevirtual #46                 // Method findRecursively:(IILjava/util/List;)V
      38: aload_0
      39: getfield      #29                 // Field paths:Ljava/util/List;
      42: invokestatic  #50                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      45: areturn

  void findRecursively(int, int, java.util.List<java.lang.Integer>);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #19                 // Field maxLevel:I
       5: if_icmpne     31
       8: iload_2
       9: aload_0
      10: getfield      #23                 // Field length:I
      13: if_icmpne     30
      16: aload_0
      17: getfield      #29                 // Field paths:Ljava/util/List;
      20: aload_3
      21: invokestatic  #56                 // Method nl/mauritssilvis/darts/java/core/finders/paths/SimplePath.of:(Ljava/util/Collection;)Lnl/mauritssilvis/darts/java/api/finders/paths/Path;
      24: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: return
      31: aload_0
      32: getfield      #7                  // Field nodes:Ljava/util/List;
      35: iload_1
      36: invokeinterface #66,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      41: checkcast     #70                 // class nl/mauritssilvis/darts/java/core/finders/paths/Node
      44: astore        4
      46: aload         4
      48: invokeinterface #72,  1           // InterfaceMethod nl/mauritssilvis/darts/java/core/finders/paths/Node.getWeights:()Ljava/util/List;
      53: astore        5
      55: aload         5
      57: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore        6
      64: aload         6
      66: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          117
      74: aload         6
      76: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #90                 // class java/lang/Integer
      84: invokevirtual #92                 // Method java/lang/Integer.intValue:()I
      87: istore        7
      89: aload_3
      90: iload_1
      91: iload         7
      93: invokestatic  #95                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: invokeinterface #99,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload_0
     103: iload_1
     104: iconst_1
     105: iadd
     106: iload_2
     107: iload         7
     109: iadd
     110: aload_3
     111: invokevirtual #46                 // Method findRecursively:(IILjava/util/List;)V
     114: goto          64
     117: return

  private static void lambda$find$0(java.util.List, int);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #95                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return
}
