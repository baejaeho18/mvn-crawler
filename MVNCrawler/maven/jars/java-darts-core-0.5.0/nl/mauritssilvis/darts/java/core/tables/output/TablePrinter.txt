Compiled from "TablePrinter.java"
abstract class nl.mauritssilvis.darts.java.core.tables.output.TablePrinter {
  private final java.util.Map<java.lang.Integer, java.util.List<nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>> checkoutMap;

  private final java.util.Map<java.lang.Integer, java.lang.Long> multiplicityMap;

  private final int scoreWidth;

  private final int numCheckouts;

  private final int numThrows;

  private final int throwSize;

  private final int fieldWidth;

  private final int multiplicityWidth;

  nl.mauritssilvis.darts.java.core.tables.output.TablePrinter(nl.mauritssilvis.darts.java.api.tables.Table);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #7,  1            // InterfaceMethod nl/mauritssilvis/darts/java/api/tables/Table.getCheckoutMap:()Ljava/util/Map;
      11: putfield      #13                 // Field checkoutMap:Ljava/util/Map;
      14: aload_0
      15: aload_0
      16: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
      19: invokestatic  #19                 // Method getMultiplicityMap:(Ljava/util/Map;)Ljava/util/Map;
      22: putfield      #23                 // Field multiplicityMap:Ljava/util/Map;
      25: aload_0
      26: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
      29: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      34: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      39: invokedynamic #38,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      44: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      49: invokeinterface #48,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      54: astore_2
      55: aload_0
      56: aload_0
      57: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
      60: invokeinterface #52,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      65: invokestatic  #56                 // Method getMaxScoreWidth:(Ljava/util/Collection;)I
      68: putfield      #60                 // Field scoreWidth:I
      71: aload_0
      72: aload_0
      73: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
      76: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      81: invokestatic  #64                 // Method getMaxNumCheckouts:(Ljava/util/Collection;)I
      84: putfield      #67                 // Field numCheckouts:I
      87: aload_1
      88: invokeinterface #70,  1           // InterfaceMethod nl/mauritssilvis/darts/java/api/tables/Table.getSettings:()Lnl/mauritssilvis/darts/java/api/settings/Settings;
      93: astore_3
      94: aload_3
      95: invokeinterface #74,  1           // InterfaceMethod nl/mauritssilvis/darts/java/api/settings/Settings.hasFixedNumThrows:()Z
     100: ifeq          149
     103: aload_0
     104: aload_3
     105: invokeinterface #80,  1           // InterfaceMethod nl/mauritssilvis/darts/java/api/settings/Settings.getNumThrows:()I
     110: putfield      #84                 // Field numThrows:I
     113: aload_0
     114: aload_2
     115: invokestatic  #87                 // Method getMaxThrowSize:(Ljava/util/Collection;)I
     118: iconst_1
     119: invokestatic  #90                 // Method java/lang/Math.max:(II)I
     122: putfield      #96                 // Field throwSize:I
     125: aload_0
     126: aload_2
     127: invokestatic  #99                 // Method getMaxFieldWidth:(Ljava/util/Collection;)I
     130: aload_0
     131: getfield      #84                 // Field numThrows:I
     134: invokestatic  #102                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     137: invokevirtual #108                // Method java/lang/String.length:()I
     140: invokestatic  #90                 // Method java/lang/Math.max:(II)I
     143: putfield      #111                // Field fieldWidth:I
     146: goto          173
     149: aload_0
     150: aload_2
     151: invokestatic  #114                // Method getMaxNumThrows:(Ljava/util/Collection;)I
     154: putfield      #84                 // Field numThrows:I
     157: aload_0
     158: aload_2
     159: invokestatic  #87                 // Method getMaxThrowSize:(Ljava/util/Collection;)I
     162: putfield      #96                 // Field throwSize:I
     165: aload_0
     166: aload_2
     167: invokestatic  #99                 // Method getMaxFieldWidth:(Ljava/util/Collection;)I
     170: putfield      #111                // Field fieldWidth:I
     173: aload_0
     174: aload_0
     175: getfield      #23                 // Field multiplicityMap:Ljava/util/Map;
     178: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     183: invokestatic  #117                // Method getMaxMultiplicityWidth:(Ljava/util/Collection;)I
     186: putfield      #120                // Field multiplicityWidth:I
     189: return

  int getScoreWidth();
    Code:
       0: aload_0
       1: getfield      #60                 // Field scoreWidth:I
       4: ireturn

  int getNumCheckouts();
    Code:
       0: aload_0
       1: getfield      #67                 // Field numCheckouts:I
       4: ireturn

  int getNumThrows();
    Code:
       0: aload_0
       1: getfield      #84                 // Field numThrows:I
       4: ireturn

  int getThrowSize();
    Code:
       0: aload_0
       1: getfield      #96                 // Field throwSize:I
       4: ireturn

  int getFieldWidth();
    Code:
       0: aload_0
       1: getfield      #111                // Field fieldWidth:I
       4: ireturn

  int getMultiplicityWidth();
    Code:
       0: aload_0
       1: getfield      #120                // Field multiplicityWidth:I
       4: ireturn

  java.lang.String print();
    Code:
       0: aload_0
       1: invokevirtual #123                // Method startTable:()V
       4: aload_0
       5: invokevirtual #126                // Method processScores:()V
       8: aload_0
       9: invokevirtual #129                // Method endTable:()V
      12: aload_0
      13: invokevirtual #132                // Method getString:()Ljava/lang/String;
      16: areturn

  abstract void startTable();

  abstract void endTable();

  abstract void startScore(int, int);

  abstract void endScore();

  abstract void separateScore();

  abstract void startCheckouts();

  abstract void endCheckouts();

  abstract void startCheckout();

  abstract void endCheckout();

  abstract void separateCheckout();

  abstract void startCheckoutScore();

  abstract void addCheckoutScore(int);

  abstract void endCheckoutScore();

  abstract void startThrows();

  abstract void endThrows();

  abstract void startThrow();

  abstract void endThrow();

  abstract void separateThrow();

  abstract void addEmptyThrowAfter();

  abstract void addEmptyFieldBefore();

  abstract void startField();

  abstract void addField(java.lang.String);

  abstract void endField();

  abstract void separateField();

  abstract void startCheckoutMultiplicity();

  abstract void addCheckoutMultiplicity(long);

  abstract void endCheckoutMultiplicity();

  abstract void startMultiplicity();

  abstract void addMultiplicity(long);

  abstract void endMultiplicity();

  abstract java.lang.String getString();

  private static java.util.Map<java.lang.Integer, java.lang.Long> getMultiplicityMap(java.util.Map<java.lang.Integer, ? extends java.util.Collection<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>>);
    Code:
       0: aload_0
       1: invokeinterface #136,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #139,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      11: invokedynamic #142,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      16: invokedynamic #143,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      21: invokestatic  #144                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      24: invokeinterface #150,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      29: checkcast     #27                 // class java/util/Map
      32: areturn

  private static int getMaxScoreWidth(java.util.Collection<java.lang.Integer>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #154,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      11: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #158,  0            // InvokeDynamic #4:applyAsInt:()Ljava/util/function/ToIntFunction;
      21: invokeinterface #162,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      26: invokeinterface #166,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      31: iconst_0
      32: invokevirtual #171                // Method java/util/OptionalInt.orElse:(I)I
      35: ireturn

  private static int getMaxNumCheckouts(java.util.Collection<? extends java.util.Collection<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #177,  0            // InvokeDynamic #5:applyAsInt:()Ljava/util/function/ToIntFunction;
      11: invokeinterface #162,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      16: invokeinterface #166,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      21: iconst_0
      22: invokevirtual #171                // Method java/util/OptionalInt.orElse:(I)I
      25: ireturn

  private static int getMaxNumThrows(java.util.Collection<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #178,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      11: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #179,  0            // InvokeDynamic #7:applyAsInt:()Ljava/util/function/ToIntFunction;
      21: invokeinterface #162,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      26: invokeinterface #166,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      31: iconst_0
      32: invokevirtual #171                // Method java/util/OptionalInt.orElse:(I)I
      35: ireturn

  private static int getMaxThrowSize(java.util.Collection<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #178,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      11: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #38,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      21: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokedynamic #180,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      31: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokedynamic #179,  0            // InvokeDynamic #7:applyAsInt:()Ljava/util/function/ToIntFunction;
      41: invokeinterface #162,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      46: invokeinterface #166,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      51: iconst_0
      52: invokevirtual #171                // Method java/util/OptionalInt.orElse:(I)I
      55: ireturn

  private static int getMaxFieldWidth(java.util.Collection<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #178,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      11: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #38,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      21: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokedynamic #180,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      31: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokedynamic #38,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      41: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      46: invokedynamic #181,  0            // InvokeDynamic #9:apply:()Ljava/util/function/Function;
      51: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      56: invokedynamic #158,  0            // InvokeDynamic #4:applyAsInt:()Ljava/util/function/ToIntFunction;
      61: invokeinterface #162,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      66: invokeinterface #166,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      71: iconst_0
      72: invokevirtual #171                // Method java/util/OptionalInt.orElse:(I)I
      75: ireturn

  private static int getMaxMultiplicityWidth(java.util.Collection<java.lang.Long>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #182,  0            // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      11: invokeinterface #155,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #158,  0            // InvokeDynamic #4:applyAsInt:()Ljava/util/function/ToIntFunction;
      21: invokeinterface #162,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      26: invokeinterface #166,  1          // InterfaceMethod java/util/stream/IntStream.max:()Ljava/util/OptionalInt;
      31: iconst_0
      32: invokevirtual #171                // Method java/util/OptionalInt.orElse:(I)I
      35: ireturn

  private void processScores();
    Code:
       0: aload_0
       1: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #139,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: invokeinterface #48,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      19: astore_1
      20: iconst_0
      21: istore_2
      22: iload_2
      23: aload_1
      24: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      29: if_icmpge     73
      32: aload_1
      33: iload_2
      34: invokeinterface #188,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #192                // class java/lang/Integer
      42: invokevirtual #194                // Method java/lang/Integer.intValue:()I
      45: istore_3
      46: aload_0
      47: iload_3
      48: invokevirtual #197                // Method processScore:(I)V
      51: iload_2
      52: aload_1
      53: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      58: iconst_1
      59: isub
      60: if_icmpeq     67
      63: aload_0
      64: invokevirtual #201                // Method separateScore:()V
      67: iinc          2, 1
      70: goto          22
      73: return

  private void processScore(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
       6: iload_1
       7: invokestatic  #204                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokeinterface #207,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #184                // class java/util/List
      18: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      23: invokevirtual #210                // Method startScore:(II)V
      26: aload_0
      27: invokevirtual #214                // Method startMultiplicity:()V
      30: aload_0
      31: aload_0
      32: getfield      #23                 // Field multiplicityMap:Ljava/util/Map;
      35: iload_1
      36: invokestatic  #204                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #207,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #217                // class java/lang/Long
      47: invokevirtual #219                // Method java/lang/Long.longValue:()J
      50: invokevirtual #223                // Method addMultiplicity:(J)V
      53: aload_0
      54: invokevirtual #227                // Method endMultiplicity:()V
      57: aload_0
      58: aload_0
      59: getfield      #13                 // Field checkoutMap:Ljava/util/Map;
      62: iload_1
      63: invokestatic  #204                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: invokeinterface #207,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #184                // class java/util/List
      74: invokevirtual #230                // Method processCheckouts:(Ljava/util/List;)V
      77: aload_0
      78: invokevirtual #234                // Method endScore:()V
      81: return

  private void processCheckouts(java.util.List<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout>);
    Code:
       0: aload_0
       1: invokevirtual #237                // Method startCheckouts:()V
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      13: if_icmpge     54
      16: aload_1
      17: iload_2
      18: invokeinterface #188,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #240                // class nl/mauritssilvis/darts/java/api/finders/checkouts/Checkout
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokevirtual #242                // Method processCheckout:(Lnl/mauritssilvis/darts/java/api/finders/checkouts/Checkout;)V
      32: iload_2
      33: aload_1
      34: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      39: iconst_1
      40: isub
      41: if_icmpeq     48
      44: aload_0
      45: invokevirtual #246                // Method separateCheckout:()V
      48: iinc          2, 1
      51: goto          6
      54: aload_0
      55: invokevirtual #249                // Method endCheckouts:()V
      58: return

  private void processCheckout(nl.mauritssilvis.darts.java.api.finders.checkouts.Checkout);
    Code:
       0: aload_0
       1: invokevirtual #252                // Method startCheckout:()V
       4: aload_0
       5: invokevirtual #255                // Method startCheckoutScore:()V
       8: aload_0
       9: aload_1
      10: invokeinterface #258,  1          // InterfaceMethod nl/mauritssilvis/darts/java/api/finders/checkouts/Checkout.getScore:()I
      15: invokevirtual #261                // Method addCheckoutScore:(I)V
      18: aload_0
      19: invokevirtual #264                // Method endCheckoutScore:()V
      22: aload_0
      23: aload_1
      24: invokeinterface #267,  1          // InterfaceMethod nl/mauritssilvis/darts/java/api/finders/checkouts/Checkout.getThrows:()Ljava/util/List;
      29: invokevirtual #270                // Method processThrows:(Ljava/util/List;)V
      32: aload_0
      33: aload_1
      34: invokeinterface #273,  1          // InterfaceMethod nl/mauritssilvis/darts/java/api/finders/checkouts/Checkout.getMultiplicity:()J
      39: invokevirtual #276                // Method processCheckoutMultiplicity:(J)V
      42: aload_0
      43: invokevirtual #279                // Method endCheckout:()V
      46: return

  private void processThrows(java.util.List<? extends nl.mauritssilvis.darts.java.api.finders.checkouts.Throw>);
    Code:
       0: aload_0
       1: invokevirtual #282                // Method startThrows:()V
       4: iconst_0
       5: istore_2
       6: iload_2
       7: aload_1
       8: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      13: if_icmpge     54
      16: aload_1
      17: iload_2
      18: invokeinterface #188,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #285                // class nl/mauritssilvis/darts/java/api/finders/checkouts/Throw
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokevirtual #287                // Method processThrow:(Lnl/mauritssilvis/darts/java/api/finders/checkouts/Throw;)V
      32: iload_2
      33: aload_1
      34: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      39: iconst_1
      40: isub
      41: if_icmpeq     48
      44: aload_0
      45: invokevirtual #291                // Method separateThrow:()V
      48: iinc          2, 1
      51: goto          6
      54: iconst_0
      55: aload_0
      56: getfield      #84                 // Field numThrows:I
      59: aload_1
      60: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      65: isub
      66: invokestatic  #294                // InterfaceMethod java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
      69: aload_0
      70: invokedynamic #298,  0            // InvokeDynamic #11:accept:(Lnl/mauritssilvis/darts/java/core/tables/output/TablePrinter;)Ljava/util/function/IntConsumer;
      75: invokeinterface #302,  2          // InterfaceMethod java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
      80: aload_0
      81: invokevirtual #306                // Method endThrows:()V
      84: return

  private void processThrow(nl.mauritssilvis.darts.java.api.finders.checkouts.Throw);
    Code:
       0: aload_0
       1: invokevirtual #309                // Method startThrow:()V
       4: aload_0
       5: aload_1
       6: invokeinterface #312,  1          // InterfaceMethod nl/mauritssilvis/darts/java/api/finders/checkouts/Throw.getFields:()Ljava/util/List;
      11: invokevirtual #315                // Method processFields:(Ljava/util/List;)V
      14: aload_0
      15: invokevirtual #318                // Method endThrow:()V
      18: return

  private void processFields(java.util.List<? extends nl.mauritssilvis.darts.java.api.boards.Field>);
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #96                 // Field throwSize:I
       5: aload_1
       6: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      11: isub
      12: invokestatic  #294                // InterfaceMethod java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
      15: aload_0
      16: invokedynamic #321,  0            // InvokeDynamic #12:accept:(Lnl/mauritssilvis/darts/java/core/tables/output/TablePrinter;)Ljava/util/function/IntConsumer;
      21: invokeinterface #302,  2          // InterfaceMethod java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
      26: iconst_0
      27: istore_2
      28: iload_2
      29: aload_1
      30: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      35: if_icmpge     76
      38: aload_1
      39: iload_2
      40: invokeinterface #188,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      45: checkcast     #322                // class nl/mauritssilvis/darts/java/api/boards/Field
      48: astore_3
      49: aload_0
      50: aload_3
      51: invokevirtual #324                // Method processField:(Lnl/mauritssilvis/darts/java/api/boards/Field;)V
      54: iload_2
      55: aload_1
      56: invokeinterface #183,  1          // InterfaceMethod java/util/List.size:()I
      61: iconst_1
      62: isub
      63: if_icmpeq     70
      66: aload_0
      67: invokevirtual #328                // Method separateField:()V
      70: iinc          2, 1
      73: goto          28
      76: return

  private void processField(nl.mauritssilvis.darts.java.api.boards.Field);
    Code:
       0: aload_0
       1: invokevirtual #331                // Method startField:()V
       4: aload_0
       5: aload_1
       6: invokeinterface #334,  1          // InterfaceMethod nl/mauritssilvis/darts/java/api/boards/Field.getName:()Ljava/lang/String;
      11: invokevirtual #337                // Method addField:(Ljava/lang/String;)V
      14: aload_0
      15: invokevirtual #341                // Method endField:()V
      18: return

  private void processCheckoutMultiplicity(long);
    Code:
       0: aload_0
       1: invokevirtual #344                // Method startCheckoutMultiplicity:()V
       4: aload_0
       5: lload_1
       6: invokevirtual #347                // Method addCheckoutMultiplicity:(J)V
       9: aload_0
      10: invokevirtual #350                // Method endCheckoutMultiplicity:()V
      13: return

  private void lambda$processFields$2(int);
    Code:
       0: aload_0
       1: invokevirtual #353                // Method addEmptyFieldBefore:()V
       4: return

  private void lambda$processThrows$1(int);
    Code:
       0: aload_0
       1: invokevirtual #356                // Method addEmptyThrowAfter:()V
       4: return

  private static java.lang.Long lambda$getMultiplicityMap$0(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #359,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #33                 // class java/util/Collection
       9: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #365,  0            // InvokeDynamic #13:applyAsLong:()Ljava/util/function/ToLongFunction;
      19: invokeinterface #369,  2          // InterfaceMethod java/util/stream/Stream.mapToLong:(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;
      24: invokeinterface #373,  1          // InterfaceMethod java/util/stream/LongStream.sum:()J
      29: invokestatic  #378                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: areturn
}
