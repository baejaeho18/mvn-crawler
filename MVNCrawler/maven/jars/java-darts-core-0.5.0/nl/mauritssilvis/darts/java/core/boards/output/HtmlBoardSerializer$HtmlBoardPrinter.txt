Compiled from "HtmlBoardSerializer.java"
class nl.mauritssilvis.darts.java.core.boards.output.HtmlBoardSerializer$HtmlBoardPrinter extends nl.mauritssilvis.darts.java.core.boards.output.BoardPrinter {
  private final java.util.Map<java.lang.Integer, java.lang.StringBuilder> builderMap;

  private final java.lang.String columnFormat;

  private int row;

  nl.mauritssilvis.darts.java.core.boards.output.HtmlBoardSerializer$HtmlBoardPrinter(nl.mauritssilvis.darts.java.api.boards.Board);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method nl/mauritssilvis/darts/java/core/boards/output/BoardPrinter."<init>":(Lnl/mauritssilvis/darts/java/api/boards/Board;)V
       5: aload_0
       6: new           #7                  // class java/util/HashMap
       9: dup
      10: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      13: putfield      #12                 // Field builderMap:Ljava/util/Map;
      16: iconst_0
      17: aload_0
      18: invokevirtual #18                 // Method getNumFields:()I
      21: iconst_1
      22: iadd
      23: invokestatic  #22                 // InterfaceMethod java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
      26: aload_0
      27: invokedynamic #28,  0             // InvokeDynamic #0:accept:(Lnl/mauritssilvis/darts/java/core/boards/output/HtmlBoardSerializer$HtmlBoardPrinter;)Ljava/util/function/IntConsumer;
      32: invokeinterface #32,  2           // InterfaceMethod java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
      37: aload_0
      38: aload_0
      39: invokevirtual #36                 // Method getFieldWidth:()I
      42: invokedynamic #39,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;
      47: putfield      #43                 // Field columnFormat:Ljava/lang/String;
      50: return

  void startBoard();
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #53,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #56,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  void endBoard();
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #61,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #56,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  void startType(nl.mauritssilvis.darts.java.api.boards.FieldType);
    Code:
       0: aload_1
       1: invokestatic  #62                 // Method getTypeInitial:(Lnl/mauritssilvis/darts/java/api/boards/FieldType;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #12                 // Field builderMap:Ljava/util/Map;
       9: aload_0
      10: getfield      #66                 // Field row:I
      13: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #80                 // class java/lang/StringBuilder
      24: ldc           #82                 // String <th>
      26: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #43                 // Field columnFormat:Ljava/lang/String;
      33: iconst_1
      34: anewarray     #88                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_2
      40: aastore
      41: invokevirtual #90                 // Method java/lang/String.formatted:([Ljava/lang/Object;)Ljava/lang/String;
      44: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #96                 // String </th>
      49: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_0
      54: invokevirtual #98                 // Method nextRow:()V
      57: return

  void endType();
    Code:
       0: return

  void separateType();
    Code:
       0: return

  void startField();
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: aload_0
       5: getfield      #66                 // Field row:I
       8: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #80                 // class java/lang/StringBuilder
      19: ldc           #101                // String <td>
      21: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: return

  void addField(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: aload_0
       5: getfield      #66                 // Field row:I
       8: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #80                 // class java/lang/StringBuilder
      19: aload_0
      20: getfield      #43                 // Field columnFormat:Ljava/lang/String;
      23: iconst_1
      24: anewarray     #88                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: aastore
      31: invokevirtual #90                 // Method java/lang/String.formatted:([Ljava/lang/Object;)Ljava/lang/String;
      34: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: return

  void endField();
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: aload_0
       5: getfield      #66                 // Field row:I
       8: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #80                 // class java/lang/StringBuilder
      19: ldc           #103                // String </td>
      21: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: invokevirtual #98                 // Method nextRow:()V
      29: return

  void separateField();
    Code:
       0: return

  void startEmptyField();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method startField:()V
       4: return

  void addEmptyField();
    Code:
       0: aload_0
       1: ldc           #108                // String -
       3: invokevirtual #110                // Method addField:(Ljava/lang/String;)V
       6: return

  void endEmptyField();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method endField:()V
       4: return

  java.lang.String getString();
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: invokeinterface #117,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #121,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #127,  0            // InvokeDynamic #4:applyAsInt:()Ljava/util/function/ToIntFunction;
      19: invokestatic  #131                // InterfaceMethod java/util/Comparator.comparingInt:(Ljava/util/function/ToIntFunction;)Ljava/util/Comparator;
      22: invokeinterface #137,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      27: invokedynamic #143,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      32: invokeinterface #147,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: invokedynamic #151,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      42: invokeinterface #147,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      47: invokestatic  #152                // Method java/util/stream/Collectors.joining:()Ljava/util/stream/Collector;
      50: invokeinterface #158,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      55: checkcast     #91                 // class java/lang/String
      58: invokedynamic #162,  0            // InvokeDynamic #7:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      63: areturn

  private void nextRow();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #66                 // Field row:I
       5: iconst_1
       6: iadd
       7: aload_0
       8: getfield      #12                 // Field builderMap:Ljava/util/Map;
      11: invokeinterface #165,  1          // InterfaceMethod java/util/Map.size:()I
      16: irem
      17: putfield      #66                 // Field row:I
      20: return

  private static java.lang.String getTypeInitial(nl.mauritssilvis.darts.java.api.boards.FieldType);
    Code:
       0: aload_0
       1: invokevirtual #168                // Method nl/mauritssilvis/darts/java/api/boards/FieldType.toString:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #174                // String \\.
       8: invokevirtual #176                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      11: iconst_1
      12: aaload
      13: astore_2
      14: aload_2
      15: iconst_0
      16: iconst_1
      17: invokevirtual #180                // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: areturn

  private static void lambda$endBoard$2(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: ldc           #184                // String </tr>\n
       3: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: pop
       7: return

  private static void lambda$startBoard$1(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: ldc           #186                // String   <tr>
       3: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: pop
       7: return

  private void lambda$new$0(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field builderMap:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: new           #80                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #188                // Method java/lang/StringBuilder."<init>":()V
      15: invokeinterface #189,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return
}
