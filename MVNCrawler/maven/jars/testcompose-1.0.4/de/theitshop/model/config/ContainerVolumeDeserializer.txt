Compiled from "ContainerVolumeDeserializer.java"
public class de.theitshop.model.config.ContainerVolumeDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer<de.theitshop.model.config.ContainerVolume> {
  private static final java.lang.String HOST;

  private static final java.lang.String SOURCE;

  private static final java.lang.String CONTAINER;

  private static final java.lang.String MODE;

  private static final java.lang.String VOLUME_RW_ACCESS;

  private static final java.lang.String VOLUME_RO_ACCESS;

  private static final java.lang.String FILE_MOUNT_SRC;

  private static final java.lang.String RESOURCE_MOUNT_SRC;

  public de.theitshop.model.config.ContainerVolumeDeserializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/JsonDeserializer."<init>":()V
       4: return

  public de.theitshop.model.config.ContainerVolume deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method com/fasterxml/jackson/core/JsonParser.getCodec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: aload_1
       5: invokevirtual #3                  // Method com/fasterxml/jackson/core/ObjectCodec.readTree:(Lcom/fasterxml/jackson/core/JsonParser;)Lcom/fasterxml/jackson/core/TreeNode;
       8: checkcast     #4                  // class com/fasterxml/jackson/databind/JsonNode
      11: astore_3
      12: aload_0
      13: aload_3
      14: ldc           #6                  // String host
      16: invokevirtual #7                  // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      19: aload_3
      20: ldc           #8                  // String source
      22: invokevirtual #7                  // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      25: invokevirtual #9                  // Method checkHostPath:(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/lang/String;
      28: astore        4
      30: aload_3
      31: ldc           #10                 // String container
      33: invokevirtual #7                  // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      36: ifnull        51
      39: aload_3
      40: ldc           #10                 // String container
      42: invokevirtual #7                  // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      45: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      48: goto          53
      51: ldc           #12                 // String /
      53: astore        5
      55: aload_0
      56: aload_3
      57: ldc           #13                 // String mode
      59: invokevirtual #7                  // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      62: invokevirtual #14                 // Method checkFileMode:(Lcom/fasterxml/jackson/databind/JsonNode;)Lorg/testcontainers/containers/BindMode;
      65: astore        6
      67: aload_0
      68: aload_3
      69: ldc           #8                  // String source
      71: invokevirtual #7                  // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      74: invokevirtual #15                 // Method checkFileSources:(Lcom/fasterxml/jackson/databind/JsonNode;)Lde/theitshop/model/config/VolumeSourceType;
      77: astore        7
      79: new           #16                 // class de/theitshop/model/config/ContainerVolume
      82: dup
      83: invokespecial #17                 // Method de/theitshop/model/config/ContainerVolume."<init>":()V
      86: astore        8
      88: aload         8
      90: aload         4
      92: invokevirtual #18                 // Method de/theitshop/model/config/ContainerVolume.setHost:(Ljava/lang/String;)V
      95: aload         8
      97: aload         5
      99: invokevirtual #19                 // Method de/theitshop/model/config/ContainerVolume.setContainer:(Ljava/lang/String;)V
     102: aload         8
     104: aload         6
     106: invokevirtual #20                 // Method de/theitshop/model/config/ContainerVolume.setMode:(Lorg/testcontainers/containers/BindMode;)V
     109: aload         8
     111: aload         7
     113: invokevirtual #21                 // Method de/theitshop/model/config/ContainerVolume.setSource:(Lde/theitshop/model/config/VolumeSourceType;)V
     116: aload         8
     118: areturn

  private java.lang.String checkHostPath(com.fasterxml.jackson.databind.JsonNode, com.fasterxml.jackson.databind.JsonNode) throws java.io.FileNotFoundException;
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
       4: ldc           #22                 // String filesystem
       6: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       9: ifeq          51
      12: new           #24                 // class java/io/File
      15: dup
      16: aload_1
      17: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      20: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      23: invokevirtual #26                 // Method java/io/File.exists:()Z
      26: ifeq          34
      29: aload_1
      30: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      33: areturn
      34: new           #27                 // class java/io/FileNotFoundException
      37: dup
      38: aload_1
      39: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      42: invokedynamic #28,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      47: invokespecial #29                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: invokevirtual #31                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      58: aload_1
      59: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      62: invokevirtual #32                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      65: astore_3
      66: aload_3
      67: ifnonnull     87
      70: new           #27                 // class java/io/FileNotFoundException
      73: dup
      74: aload_1
      75: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      78: invokedynamic #28,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      83: invokespecial #29                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_1
      88: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      91: areturn

  private de.theitshop.model.config.VolumeSourceType checkFileSources(com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #33                 // Field de/theitshop/model/config/VolumeSourceType.FILESYSTEM_PATH:Lde/theitshop/model/config/VolumeSourceType;
       7: areturn
       8: aload_1
       9: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      12: ldc           #34                 // String resources
      14: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      17: ifeq          24
      20: getstatic     #35                 // Field de/theitshop/model/config/VolumeSourceType.RESOURCE_PATH:Lde/theitshop/model/config/VolumeSourceType;
      23: areturn
      24: getstatic     #33                 // Field de/theitshop/model/config/VolumeSourceType.FILESYSTEM_PATH:Lde/theitshop/model/config/VolumeSourceType;
      27: areturn

  private org.testcontainers.containers.BindMode checkFileMode(com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: getstatic     #36                 // Field de/theitshop/model/config/VolumeMode.READ_ONLY:Lde/theitshop/model/config/VolumeMode;
       7: getfield      #37                 // Field de/theitshop/model/config/VolumeMode.mode:Lorg/testcontainers/containers/BindMode;
      10: areturn
      11: aload_1
      12: invokevirtual #11                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      15: ldc           #38                 // String rw
      17: invokevirtual #23                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          30
      23: getstatic     #39                 // Field de/theitshop/model/config/VolumeMode.READ_WRITE:Lde/theitshop/model/config/VolumeMode;
      26: getfield      #37                 // Field de/theitshop/model/config/VolumeMode.mode:Lorg/testcontainers/containers/BindMode;
      29: areturn
      30: getstatic     #36                 // Field de/theitshop/model/config/VolumeMode.READ_ONLY:Lde/theitshop/model/config/VolumeMode;
      33: getfield      #37                 // Field de/theitshop/model/config/VolumeMode.mode:Lorg/testcontainers/containers/BindMode;
      36: areturn

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #40                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lde/theitshop/model/config/ContainerVolume;
       6: areturn
}
