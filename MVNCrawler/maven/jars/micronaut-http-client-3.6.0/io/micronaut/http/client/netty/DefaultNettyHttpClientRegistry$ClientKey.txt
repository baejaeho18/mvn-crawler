Compiled from "DefaultNettyHttpClientRegistry.java"
final class io.micronaut.http.client.netty.DefaultNettyHttpClientRegistry$ClientKey {
  final io.micronaut.http.HttpVersion httpVersion;

  final java.lang.String clientId;

  final java.util.List<java.lang.String> filterAnnotations;

  final java.lang.String path;

  final java.lang.Class<?> configurationClass;

  final io.micronaut.json.JsonFeatures jsonFeatures;

  io.micronaut.http.client.netty.DefaultNettyHttpClientRegistry$ClientKey(io.micronaut.http.HttpVersion, java.lang.String, java.util.List<java.lang.String>, java.lang.String, java.lang.Class<?>, io.micronaut.json.JsonFeatures);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field httpVersion:Lio/micronaut/http/HttpVersion;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field clientId:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field filterAnnotations:Ljava/util/List;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field path:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field configurationClass:Ljava/lang/Class;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field jsonFeatures:Lio/micronaut/json/JsonFeatures;
      37: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #9                  // class io/micronaut/http/client/netty/DefaultNettyHttpClientRegistry$ClientKey
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field httpVersion:Lio/micronaut/http/HttpVersion;
      33: aload_2
      34: getfield      #2                  // Field httpVersion:Lio/micronaut/http/HttpVersion;
      37: if_acmpne     114
      40: aload_0
      41: getfield      #3                  // Field clientId:Ljava/lang/String;
      44: aload_2
      45: getfield      #3                  // Field clientId:Ljava/lang/String;
      48: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          114
      54: aload_0
      55: getfield      #4                  // Field filterAnnotations:Ljava/util/List;
      58: aload_2
      59: getfield      #4                  // Field filterAnnotations:Ljava/util/List;
      62: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      65: ifeq          114
      68: aload_0
      69: getfield      #5                  // Field path:Ljava/lang/String;
      72: aload_2
      73: getfield      #5                  // Field path:Ljava/lang/String;
      76: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      79: ifeq          114
      82: aload_0
      83: getfield      #6                  // Field configurationClass:Ljava/lang/Class;
      86: aload_2
      87: getfield      #6                  // Field configurationClass:Ljava/lang/Class;
      90: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifeq          114
      96: aload_0
      97: getfield      #7                  // Field jsonFeatures:Lio/micronaut/json/JsonFeatures;
     100: aload_2
     101: getfield      #7                  // Field jsonFeatures:Lio/micronaut/json/JsonFeatures;
     104: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: ireturn

  public int hashCode();
    Code:
       0: bipush        6
       2: anewarray     #11                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #2                  // Field httpVersion:Lio/micronaut/http/HttpVersion;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #3                  // Field clientId:Ljava/lang/String;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #4                  // Field filterAnnotations:Ljava/util/List;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_0
      29: getfield      #5                  // Field path:Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_4
      35: aload_0
      36: getfield      #6                  // Field configurationClass:Ljava/lang/Class;
      39: aastore
      40: dup
      41: iconst_5
      42: aload_0
      43: getfield      #7                  // Field jsonFeatures:Lio/micronaut/json/JsonFeatures;
      46: aastore
      47: invokestatic  #12                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      50: ireturn
}
