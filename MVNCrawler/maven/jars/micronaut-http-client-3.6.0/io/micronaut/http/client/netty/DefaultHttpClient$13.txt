Compiled from "DefaultHttpClient.java"
class io.micronaut.http.client.netty.DefaultHttpClient$13 extends io.netty.channel.pool.AbstractChannelPoolHandler {
  final io.micronaut.http.client.netty.DefaultHttpClient$RequestKey val$key;

  final io.micronaut.http.client.netty.DefaultHttpClient this$0;

  io.micronaut.http.client.netty.DefaultHttpClient$13(io.micronaut.http.client.netty.DefaultHttpClient, io.micronaut.http.client.netty.DefaultHttpClient$RequestKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field val$key:Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;
      10: aload_0
      11: invokespecial #4                  // Method io/netty/channel/pool/AbstractChannelPoolHandler."<init>":()V
      14: return

  public void channelCreated(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
       6: astore_2
       7: aload_1
       8: invokestatic  #6                  // Method io/micronaut/http/client/netty/DefaultHttpClient.access$800:()Lio/netty/util/AttributeKey;
      11: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      16: aload_2
      17: invokeinterface #8,  2            // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      22: new           #9                  // class io/micronaut/http/client/netty/DefaultHttpClient$13$1
      25: dup
      26: aload_0
      27: aload_2
      28: invokespecial #10                 // Method io/micronaut/http/client/netty/DefaultHttpClient$13$1."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient$13;Lio/netty/util/concurrent/Promise;)V
      31: astore_3
      32: aload_1
      33: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      38: iconst_1
      39: anewarray     #12                 // class io/netty/channel/ChannelHandler
      42: dup
      43: iconst_0
      44: aload_3
      45: aastore
      46: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      51: pop
      52: aload_1
      53: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      58: ldc           #14                 // String http-client-init
      60: new           #15                 // class io/micronaut/http/client/netty/DefaultHttpClient$13$2
      63: dup
      64: aload_0
      65: aload_0
      66: getfield      #3                  // Field val$key:Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;
      69: invokevirtual #16                 // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.isSecure:()Z
      72: ifeq          85
      75: aload_0
      76: getfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      79: invokestatic  #17                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$900:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Lio/netty/handler/ssl/SslContext;
      82: goto          86
      85: aconst_null
      86: aload_0
      87: getfield      #3                  // Field val$key:Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;
      90: invokevirtual #18                 // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
      93: aload_0
      94: getfield      #3                  // Field val$key:Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;
      97: invokevirtual #19                 // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
     100: iconst_0
     101: iconst_0
     102: iconst_0
     103: aconst_null
     104: aload_2
     105: aload_1
     106: aload_3
     107: invokespecial #20                 // Method io/micronaut/http/client/netty/DefaultHttpClient$13$2."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient$13;Lio/netty/handler/ssl/SslContext;Ljava/lang/String;IZZZLjava/util/function/Consumer;Lio/netty/util/concurrent/Promise;Lio/netty/channel/Channel;Lio/netty/channel/ChannelHandler;)V
     110: invokeinterface #21,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     115: pop
     116: aload_0
     117: getfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
     120: invokestatic  #22                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$1000:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Ljava/lang/Long;
     123: ifnull        154
     126: aload_1
     127: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
     132: ldc           #23                 // String connect-ttl
     134: new           #24                 // class io/micronaut/http/client/netty/ConnectTTLHandler
     137: dup
     138: aload_0
     139: getfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
     142: invokestatic  #22                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$1000:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Ljava/lang/Long;
     145: invokespecial #25                 // Method io/micronaut/http/client/netty/ConnectTTLHandler."<init>":(Ljava/lang/Long;)V
     148: invokeinterface #21,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     153: pop
     154: return

  public void channelReleased(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       4: invokestatic  #26                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$1100:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Lio/micronaut/http/client/HttpClientConfiguration;
       7: invokevirtual #27                 // Method io/micronaut/http/client/HttpClientConfiguration.getConnectionPoolIdleTimeout:()Ljava/util/Optional;
      10: lconst_0
      11: invokestatic  #28                 // Method java/time/Duration.ofNanos:(J)Ljava/time/Duration;
      14: invokevirtual #29                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #30                 // class java/time/Duration
      20: astore_2
      21: aload_1
      22: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      27: astore_3
      28: aload_1
      29: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      34: ifeq          121
      37: aload_1
      38: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      43: iconst_1
      44: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
      49: pop
      50: aload_3
      51: iconst_1
      52: anewarray     #12                 // class io/netty/channel/ChannelHandler
      55: dup
      56: iconst_0
      57: getstatic     #34                 // Field io/micronaut/http/client/netty/IdlingConnectionHandler.INSTANCE:Lio/netty/channel/ChannelInboundHandler;
      60: aastore
      61: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      66: pop
      67: aload_2
      68: invokevirtual #35                 // Method java/time/Duration.toNanos:()J
      71: lconst_0
      72: lcmp
      73: ifle          121
      76: aload_3
      77: ldc           #36                 // String idle-state
      79: new           #37                 // class io/netty/handler/timeout/IdleStateHandler
      82: dup
      83: aload_2
      84: invokevirtual #35                 // Method java/time/Duration.toNanos:()J
      87: aload_2
      88: invokevirtual #35                 // Method java/time/Duration.toNanos:()J
      91: lconst_0
      92: getstatic     #38                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      95: invokespecial #39                 // Method io/netty/handler/timeout/IdleStateHandler."<init>":(JJJLjava/util/concurrent/TimeUnit;)V
      98: invokeinterface #21,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     103: pop
     104: aload_3
     105: iconst_1
     106: anewarray     #12                 // class io/netty/channel/ChannelHandler
     109: dup
     110: iconst_0
     111: getstatic     #40                 // Field io/micronaut/http/client/netty/IdleTimeoutHandler.INSTANCE:Lio/netty/channel/ChannelInboundHandler;
     114: aastore
     115: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     120: pop
     121: aload_0
     122: getfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
     125: invokestatic  #22                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$1000:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Ljava/lang/Long;
     128: ifnull        188
     131: getstatic     #41                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     134: aload_1
     135: getstatic     #42                 // Field io/micronaut/http/client/netty/ConnectTTLHandler.RELEASE_CHANNEL:Lio/netty/util/AttributeKey;
     138: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     143: invokeinterface #43,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     148: invokevirtual #44                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     151: istore        4
     153: iload         4
     155: ifeq          188
     158: aload_1
     159: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
     164: ifeq          188
     167: aload_1
     168: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
     173: invokeinterface #46,  1           // InterfaceMethod io/netty/channel/EventLoop.isShuttingDown:()Z
     178: ifne          188
     181: aload_1
     182: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
     187: pop
     188: aload_0
     189: getfield      #2                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
     192: aload_3
     193: invokestatic  #48                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$1200:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/channel/ChannelPipeline;)V
     196: return

  public void channelAcquired(io.netty.channel.Channel) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: astore_2
       7: aload_2
       8: getstatic     #34                 // Field io/micronaut/http/client/netty/IdlingConnectionHandler.INSTANCE:Lio/netty/channel/ChannelInboundHandler;
      11: invokeinterface #49,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandlerContext;
      16: ifnull        29
      19: aload_2
      20: getstatic     #34                 // Field io/micronaut/http/client/netty/IdlingConnectionHandler.INSTANCE:Lio/netty/channel/ChannelInboundHandler;
      23: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      28: pop
      29: aload_2
      30: ldc           #36                 // String idle-state
      32: invokeinterface #51,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Ljava/lang/String;)Lio/netty/channel/ChannelHandlerContext;
      37: ifnull        49
      40: aload_2
      41: ldc           #36                 // String idle-state
      43: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      48: pop
      49: aload_2
      50: getstatic     #40                 // Field io/micronaut/http/client/netty/IdleTimeoutHandler.INSTANCE:Lio/netty/channel/ChannelInboundHandler;
      53: invokeinterface #49,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandlerContext;
      58: ifnull        71
      61: aload_2
      62: getstatic     #40                 // Field io/micronaut/http/client/netty/IdleTimeoutHandler.INSTANCE:Lio/netty/channel/ChannelInboundHandler;
      65: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      70: pop
      71: return
}
