Compiled from "NettyWebSocketClientHandler.java"
public class io.micronaut.http.client.netty.websocket.NettyWebSocketClientHandler<T> extends io.micronaut.http.netty.websocket.AbstractNettyWebSocketHandler {
  private final io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker;

  private final io.micronaut.websocket.context.WebSocketBean<T> genericWebSocketBean;

  private final reactor.core.publisher.FluxSink<T> emitter;

  private final io.micronaut.http.uri.UriMatchInfo matchInfo;

  private final io.micronaut.http.codec.MediaTypeCodecRegistry codecRegistry;

  private io.netty.channel.ChannelPromise handshakeFuture;

  private io.micronaut.http.netty.websocket.NettyWebSocketSession clientSession;

  private final io.micronaut.websocket.bind.WebSocketStateBinderRegistry webSocketStateBinderRegistry;

  private io.netty.handler.codec.http.FullHttpResponse handshakeResponse;

  private io.micronaut.core.type.Argument<?> clientBodyArgument;

  private io.micronaut.core.type.Argument<?> clientPongArgument;

  public io.micronaut.http.client.netty.websocket.NettyWebSocketClientHandler(io.micronaut.http.MutableHttpRequest<?>, io.micronaut.websocket.context.WebSocketBean<T>, io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, io.micronaut.http.bind.RequestBinderRegistry, io.micronaut.http.codec.MediaTypeCodecRegistry, reactor.core.publisher.FluxSink<T>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload         4
       4: aload         5
       6: aload_2
       7: aload_1
       8: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      11: aload_3
      12: invokevirtual #3                  // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.version:()Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
      15: aload_3
      16: invokevirtual #4                  // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.actualSubprotocol:()Ljava/lang/String;
      19: aconst_null
      20: invokespecial #5                  // Method io/micronaut/http/netty/websocket/AbstractNettyWebSocketHandler."<init>":(Lio/netty/channel/ChannelHandlerContext;Lio/micronaut/http/bind/RequestBinderRegistry;Lio/micronaut/http/codec/MediaTypeCodecRegistry;Lio/micronaut/websocket/context/WebSocketBean;Lio/micronaut/http/HttpRequest;Ljava/util/Map;Lio/netty/handler/codec/http/websocketx/WebSocketVersion;Ljava/lang/String;Lio/micronaut/http/netty/websocket/WebSocketSessionRepository;)V
      23: aload_0
      24: aload         5
      26: putfield      #6                  // Field codecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      29: aload_0
      30: aload_3
      31: putfield      #7                  // Field handshaker:Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
      34: aload_0
      35: aload_2
      36: putfield      #8                  // Field genericWebSocketBean:Lio/micronaut/websocket/context/WebSocketBean;
      39: aload_0
      40: aload         6
      42: putfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
      45: aload_0
      46: new           #10                 // class io/micronaut/websocket/bind/WebSocketStateBinderRegistry
      49: dup
      50: aload         4
      52: ifnull        60
      55: aload         4
      57: goto          74
      60: new           #11                 // class io/micronaut/http/bind/DefaultRequestBinderRegistry
      63: dup
      64: getstatic     #12                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
      67: iconst_0
      68: anewarray     #13                 // class io/micronaut/http/bind/binders/RequestArgumentBinder
      71: invokespecial #14                 // Method io/micronaut/http/bind/DefaultRequestBinderRegistry."<init>":(Lio/micronaut/core/convert/ConversionService;[Lio/micronaut/http/bind/binders/RequestArgumentBinder;)V
      74: invokespecial #15                 // Method io/micronaut/websocket/bind/WebSocketStateBinderRegistry."<init>":(Lio/micronaut/http/bind/RequestBinderRegistry;)V
      77: putfield      #16                 // Field webSocketStateBinderRegistry:Lio/micronaut/websocket/bind/WebSocketStateBinderRegistry;
      80: aload_2
      81: invokeinterface #17,  1           // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.getBeanDefinition:()Lio/micronaut/inject/BeanDefinition;
      86: ldc           #18                 // class io/micronaut/websocket/annotation/ClientWebSocket
      88: invokeinterface #19,  2           // InterfaceMethod io/micronaut/inject/BeanDefinition.stringValue:(Ljava/lang/Class;)Ljava/util/Optional;
      93: ldc           #20                 // String
      95: invokevirtual #21                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #22                 // class java/lang/String
     101: astore        7
     103: aload         7
     105: invokestatic  #23                 // Method io/micronaut/http/uri/UriMatchTemplate.of:(Ljava/lang/String;)Lio/micronaut/http/uri/UriMatchTemplate;
     108: astore        8
     110: aload_0
     111: aload         8
     113: aload_1
     114: invokeinterface #24,  1           // InterfaceMethod io/micronaut/http/MutableHttpRequest.getPath:()Ljava/lang/String;
     119: invokevirtual #25                 // Method io/micronaut/http/uri/UriMatchTemplate.match:(Ljava/lang/String;)Ljava/util/Optional;
     122: aconst_null
     123: invokevirtual #21                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     126: checkcast     #26                 // class io/micronaut/http/uri/UriMatchInfo
     129: putfield      #1                  // Field matchInfo:Lio/micronaut/http/uri/UriMatchInfo;
     132: aload_0
     133: aconst_null
     134: invokevirtual #27                 // Method callOpenMethod:(Lio/netty/channel/ChannelHandlerContext;)V
     137: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #28                 // class io/netty/handler/timeout/IdleStateEvent
       4: ifeq          52
       7: aload_2
       8: checkcast     #28                 // class io/netty/handler/timeout/IdleStateEvent
      11: astore_3
      12: aload_3
      13: invokevirtual #29                 // Method io/netty/handler/timeout/IdleStateEvent.state:()Lio/netty/handler/timeout/IdleState;
      16: getstatic     #30                 // Field io/netty/handler/timeout/IdleState.ALL_IDLE:Lio/netty/handler/timeout/IdleState;
      19: if_acmpne     49
      22: aload_0
      23: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
      26: ifnull        49
      29: aload_0
      30: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
      33: invokevirtual #32                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.isOpen:()Z
      36: ifeq          49
      39: aload_0
      40: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
      43: getstatic     #33                 // Field io/micronaut/websocket/CloseReason.NORMAL:Lio/micronaut/websocket/CloseReason;
      46: invokevirtual #34                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.close:(Lio/micronaut/websocket/CloseReason;)V
      49: goto          58
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokespecial #35                 // Method io/micronaut/http/netty/websocket/AbstractNettyWebSocketHandler.userEventTriggered:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      58: return

  public io.micronaut.core.type.Argument<?> getBodyArgument();
    Code:
       0: aload_0
       1: getfield      #36                 // Field clientBodyArgument:Lio/micronaut/core/type/Argument;
       4: areturn

  public io.micronaut.core.type.Argument<?> getPongArgument();
    Code:
       0: aload_0
       1: getfield      #37                 // Field clientPongArgument:Lio/micronaut/core/type/Argument;
       4: areturn

  public io.micronaut.http.netty.websocket.NettyWebSocketSession getSession();
    Code:
       0: aload_0
       1: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
       4: areturn

  public void handlerAdded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
       7: putfield      #39                 // Field handshakeFuture:Lio/netty/channel/ChannelPromise;
      10: return

  public void channelActive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field handshaker:Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
       4: aload_1
       5: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      10: invokevirtual #41                 // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.handshake:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
      13: pop
      14: return

  protected void channelRead0(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: astore_3
       7: aload_0
       8: getfield      #7                  // Field handshaker:Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
      11: invokevirtual #42                 // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.isHandshakeComplete:()Z
      14: ifne          900
      17: aload_2
      18: checkcast     #43                 // class io/netty/handler/codec/http/FullHttpResponse
      21: astore        4
      23: aload_0
      24: aload         4
      26: putfield      #44                 // Field handshakeResponse:Lio/netty/handler/codec/http/FullHttpResponse;
      29: aload_0
      30: getfield      #7                  // Field handshaker:Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
      33: aload_3
      34: aload         4
      36: invokevirtual #45                 // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.finishHandshake:(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/FullHttpResponse;)V
      39: goto          160
      42: astore        5
      44: aload_0
      45: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
      48: new           #47                 // class io/micronaut/websocket/exceptions/WebSocketClientException
      51: dup
      52: new           #48                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #50                 // String Error finishing WebSocket handshake:
      61: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload         5
      66: invokevirtual #52                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      69: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: aload         5
      77: invokespecial #54                 // Method io/micronaut/websocket/exceptions/WebSocketClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: invokeinterface #55,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      85: aload_3
      86: new           #56                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
      89: dup
      90: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
      93: invokevirtual #58                 // Method io/micronaut/websocket/CloseReason.getCode:()I
      96: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
      99: invokevirtual #59                 // Method io/micronaut/websocket/CloseReason.getReason:()Ljava/lang/String;
     102: invokespecial #60                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame."<init>":(ILjava/lang/String;)V
     105: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     110: pop
     111: aload_3
     112: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
     117: pop
     118: goto          159
     121: astore        6
     123: aload_3
     124: new           #56                 // class io/netty/handler/codec/http/websocketx/CloseWebSocketFrame
     127: dup
     128: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     131: invokevirtual #58                 // Method io/micronaut/websocket/CloseReason.getCode:()I
     134: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     137: invokevirtual #59                 // Method io/micronaut/websocket/CloseReason.getReason:()Ljava/lang/String;
     140: invokespecial #60                 // Method io/netty/handler/codec/http/websocketx/CloseWebSocketFrame."<init>":(ILjava/lang/String;)V
     143: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     148: pop
     149: aload_3
     150: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
     155: pop
     156: aload         6
     158: athrow
     159: return
     160: aload_0
     161: getfield      #39                 // Field handshakeFuture:Lio/netty/channel/ChannelPromise;
     164: invokeinterface #63,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
     169: pop
     170: aload_0
     171: aload_0
     172: aload_1
     173: invokevirtual #64                 // Method createWebSocketSession:(Lio/netty/channel/ChannelHandlerContext;)Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     176: putfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     179: aload_0
     180: getfield      #8                  // Field genericWebSocketBean:Lio/micronaut/websocket/context/WebSocketBean;
     183: invokeinterface #65,  1           // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.getTarget:()Ljava/lang/Object;
     188: astore        5
     190: aload         5
     192: instanceof    #66                 // class io/micronaut/websocket/interceptor/WebSocketSessionAware
     195: ifeq          212
     198: aload         5
     200: checkcast     #66                 // class io/micronaut/websocket/interceptor/WebSocketSessionAware
     203: aload_0
     204: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     207: invokeinterface #67,  2           // InterfaceMethod io/micronaut/websocket/interceptor/WebSocketSessionAware.setWebSocketSession:(Lio/micronaut/websocket/WebSocketSession;)V
     212: new           #68                 // class io/micronaut/core/bind/DefaultExecutableBinder
     215: dup
     216: invokespecial #69                 // Method io/micronaut/core/bind/DefaultExecutableBinder."<init>":()V
     219: astore        6
     221: aload         6
     223: aload_0
     224: getfield      #70                 // Field messageHandler:Lio/micronaut/inject/MethodExecutionHandle;
     227: invokeinterface #71,  1           // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.getExecutableMethod:()Lio/micronaut/inject/ExecutableMethod;
     232: aload_0
     233: getfield      #72                 // Field webSocketBinder:Lio/micronaut/core/bind/ArgumentBinderRegistry;
     236: new           #73                 // class io/micronaut/websocket/bind/WebSocketState
     239: dup
     240: aload_0
     241: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     244: aload_0
     245: getfield      #74                 // Field originatingRequest:Lio/micronaut/http/HttpRequest;
     248: invokespecial #75                 // Method io/micronaut/websocket/bind/WebSocketState."<init>":(Lio/micronaut/websocket/WebSocketSession;Lio/micronaut/http/HttpRequest;)V
     251: invokeinterface #76,  4           // InterfaceMethod io/micronaut/core/bind/ExecutableBinder.tryBind:(Lio/micronaut/core/type/Executable;Lio/micronaut/core/bind/ArgumentBinderRegistry;Ljava/lang/Object;)Lio/micronaut/core/bind/BoundExecutable;
     256: astore        7
     258: aload         7
     260: invokeinterface #77,  1           // InterfaceMethod io/micronaut/core/bind/BoundExecutable.getUnboundArguments:()Ljava/util/List;
     265: astore        8
     267: aload         8
     269: invokeinterface #78,  1           // InterfaceMethod java/util/List.size:()I
     274: iconst_1
     275: if_icmpne     300
     278: aload_0
     279: aload         8
     281: invokeinterface #79,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     286: invokeinterface #80,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     291: checkcast     #81                 // class io/micronaut/core/type/Argument
     294: putfield      #36                 // Field clientBodyArgument:Lio/micronaut/core/type/Argument;
     297: goto          423
     300: aload_0
     301: aconst_null
     302: putfield      #36                 // Field clientBodyArgument:Lio/micronaut/core/type/Argument;
     305: aload_0
     306: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     309: new           #47                 // class io/micronaut/websocket/exceptions/WebSocketClientException
     312: dup
     313: new           #48                 // class java/lang/StringBuilder
     316: dup
     317: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     320: ldc           #82                 // String WebSocket @OnMessage method
     322: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     325: aload         5
     327: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     330: invokevirtual #84                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     333: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: ldc           #85                 // String .
     338: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: aload_0
     342: getfield      #70                 // Field messageHandler:Lio/micronaut/inject/MethodExecutionHandle;
     345: invokeinterface #71,  1           // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.getExecutableMethod:()Lio/micronaut/inject/ExecutableMethod;
     350: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     353: ldc           #87                 // String  should define exactly 1 message parameter, but found 2 possible candidates:
     355: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     358: aload         8
     360: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     363: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     366: invokespecial #88                 // Method io/micronaut/websocket/exceptions/WebSocketClientException."<init>":(Ljava/lang/String;)V
     369: invokeinterface #55,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     374: aload_0
     375: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     378: invokevirtual #32                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.isOpen:()Z
     381: ifeq          422
     384: aload_0
     385: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     388: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     391: invokevirtual #34                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.close:(Lio/micronaut/websocket/CloseReason;)V
     394: goto          422
     397: astore        9
     399: aload_0
     400: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     403: invokevirtual #32                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.isOpen:()Z
     406: ifeq          419
     409: aload_0
     410: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     413: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     416: invokevirtual #34                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.close:(Lio/micronaut/websocket/CloseReason;)V
     419: aload         9
     421: athrow
     422: return
     423: aload_0
     424: getfield      #90                 // Field pongHandler:Lio/micronaut/inject/MethodExecutionHandle;
     427: ifnull        649
     430: aload         6
     432: aload_0
     433: getfield      #90                 // Field pongHandler:Lio/micronaut/inject/MethodExecutionHandle;
     436: invokeinterface #71,  1           // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.getExecutableMethod:()Lio/micronaut/inject/ExecutableMethod;
     441: aload_0
     442: getfield      #72                 // Field webSocketBinder:Lio/micronaut/core/bind/ArgumentBinderRegistry;
     445: new           #73                 // class io/micronaut/websocket/bind/WebSocketState
     448: dup
     449: aload_0
     450: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     453: aload_0
     454: getfield      #74                 // Field originatingRequest:Lio/micronaut/http/HttpRequest;
     457: invokespecial #75                 // Method io/micronaut/websocket/bind/WebSocketState."<init>":(Lio/micronaut/websocket/WebSocketSession;Lio/micronaut/http/HttpRequest;)V
     460: invokeinterface #76,  4           // InterfaceMethod io/micronaut/core/bind/ExecutableBinder.tryBind:(Lio/micronaut/core/type/Executable;Lio/micronaut/core/bind/ArgumentBinderRegistry;Ljava/lang/Object;)Lio/micronaut/core/bind/BoundExecutable;
     465: astore        9
     467: aload         9
     469: invokeinterface #77,  1           // InterfaceMethod io/micronaut/core/bind/BoundExecutable.getUnboundArguments:()Ljava/util/List;
     474: astore        10
     476: aload         10
     478: invokeinterface #78,  1           // InterfaceMethod java/util/List.size:()I
     483: iconst_1
     484: if_icmpne     526
     487: aload         10
     489: iconst_0
     490: invokeinterface #91,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     495: checkcast     #81                 // class io/micronaut/core/type/Argument
     498: ldc           #92                 // class io/micronaut/websocket/WebSocketPongMessage
     500: invokeinterface #93,  2           // InterfaceMethod io/micronaut/core/type/Argument.isAssignableFrom:(Ljava/lang/Class;)Z
     505: ifeq          526
     508: aload_0
     509: aload         10
     511: iconst_0
     512: invokeinterface #91,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     517: checkcast     #81                 // class io/micronaut/core/type/Argument
     520: putfield      #37                 // Field clientPongArgument:Lio/micronaut/core/type/Argument;
     523: goto          649
     526: aload_0
     527: aconst_null
     528: putfield      #37                 // Field clientPongArgument:Lio/micronaut/core/type/Argument;
     531: aload_0
     532: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     535: new           #47                 // class io/micronaut/websocket/exceptions/WebSocketClientException
     538: dup
     539: new           #48                 // class java/lang/StringBuilder
     542: dup
     543: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     546: ldc           #94                 // String WebSocket @OnMessage pong handler method
     548: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     551: aload         5
     553: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     556: invokevirtual #84                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     559: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     562: ldc           #85                 // String .
     564: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     567: aload_0
     568: getfield      #70                 // Field messageHandler:Lio/micronaut/inject/MethodExecutionHandle;
     571: invokeinterface #71,  1           // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.getExecutableMethod:()Lio/micronaut/inject/ExecutableMethod;
     576: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     579: ldc           #95                 // String  should define exactly 1 pong message parameter, but found:
     581: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     584: aload         8
     586: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     589: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     592: invokespecial #88                 // Method io/micronaut/websocket/exceptions/WebSocketClientException."<init>":(Ljava/lang/String;)V
     595: invokeinterface #55,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     600: aload_0
     601: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     604: invokevirtual #32                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.isOpen:()Z
     607: ifeq          648
     610: aload_0
     611: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     614: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     617: invokevirtual #34                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.close:(Lio/micronaut/websocket/CloseReason;)V
     620: goto          648
     623: astore        11
     625: aload_0
     626: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     629: invokevirtual #32                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.isOpen:()Z
     632: ifeq          645
     635: aload_0
     636: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     639: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     642: invokevirtual #34                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.close:(Lio/micronaut/websocket/CloseReason;)V
     645: aload         11
     647: athrow
     648: return
     649: aload_0
     650: getfield      #96                 // Field webSocketBean:Lio/micronaut/websocket/context/WebSocketBean;
     653: invokeinterface #97,  1           // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.openMethod:()Ljava/util/Optional;
     658: astore        9
     660: aload         9
     662: invokevirtual #98                 // Method java/util/Optional.isPresent:()Z
     665: ifeq          878
     668: aload         9
     670: invokevirtual #99                 // Method java/util/Optional.get:()Ljava/lang/Object;
     673: checkcast     #100                // class io/micronaut/inject/MethodExecutionHandle
     676: astore        10
     678: new           #73                 // class io/micronaut/websocket/bind/WebSocketState
     681: dup
     682: aload_0
     683: getfield      #31                 // Field clientSession:Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     686: aload_0
     687: getfield      #74                 // Field originatingRequest:Lio/micronaut/http/HttpRequest;
     690: invokespecial #75                 // Method io/micronaut/websocket/bind/WebSocketState."<init>":(Lio/micronaut/websocket/WebSocketSession;Lio/micronaut/http/HttpRequest;)V
     693: astore        11
     695: aload         6
     697: aload         10
     699: invokeinterface #71,  1           // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.getExecutableMethod:()Lio/micronaut/inject/ExecutableMethod;
     704: aload_0
     705: getfield      #16                 // Field webSocketStateBinderRegistry:Lio/micronaut/websocket/bind/WebSocketStateBinderRegistry;
     708: aload         11
     710: invokeinterface #101,  4          // InterfaceMethod io/micronaut/core/bind/ExecutableBinder.bind:(Lio/micronaut/core/type/Executable;Lio/micronaut/core/bind/ArgumentBinderRegistry;Ljava/lang/Object;)Lio/micronaut/core/bind/BoundExecutable;
     715: astore        12
     717: aload         10
     719: invokeinterface #102,  1          // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.getTarget:()Ljava/lang/Object;
     724: astore        13
     726: aload         12
     728: aload         13
     730: invokeinterface #103,  2          // InterfaceMethod io/micronaut/core/bind/BoundExecutable.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
     735: astore        14
     737: aload         14
     739: invokestatic  #104                // Method io/micronaut/core/async/publisher/Publishers.isConvertibleToPublisher:(Ljava/lang/Object;)Z
     742: ifeq          788
     745: aload         14
     747: ldc           #105                // class org/reactivestreams/Publisher
     749: invokestatic  #106                // Method io/micronaut/core/async/publisher/Publishers.convertPublisher:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     752: checkcast     #105                // class org/reactivestreams/Publisher
     755: astore        15
     757: aload         15
     759: invokestatic  #107                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     762: invokedynamic #108,  0            // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
     767: aload_0
     768: invokedynamic #109,  0            // InvokeDynamic #1:accept:(Lio/micronaut/http/client/netty/websocket/NettyWebSocketClientHandler;)Ljava/util/function/Consumer;
     773: aload_0
     774: aload         5
     776: invokedynamic #110,  0            // InvokeDynamic #2:run:(Lio/micronaut/http/client/netty/websocket/NettyWebSocketClientHandler;Ljava/lang/Object;)Ljava/lang/Runnable;
     781: invokevirtual #111                // Method reactor/core/publisher/Flux.subscribe:(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Disposable;
     784: pop
     785: goto          809
     788: aload_0
     789: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     792: aload         5
     794: invokeinterface #112,  2          // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
     799: pop
     800: aload_0
     801: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     804: invokeinterface #113,  1          // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
     809: goto          875
     812: astore        12
     814: aload_0
     815: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     818: new           #47                 // class io/micronaut/websocket/exceptions/WebSocketClientException
     821: dup
     822: new           #48                 // class java/lang/StringBuilder
     825: dup
     826: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     829: ldc           #115                // String Error opening WebSocket client session:
     831: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     834: aload         12
     836: invokevirtual #116                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     839: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     842: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     845: aload         12
     847: invokespecial #54                 // Method io/micronaut/websocket/exceptions/WebSocketClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     850: invokeinterface #55,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     855: aload_0
     856: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     859: invokevirtual #32                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.isOpen:()Z
     862: ifeq          875
     865: aload_0
     866: invokevirtual #89                 // Method getSession:()Lio/micronaut/http/netty/websocket/NettyWebSocketSession;
     869: getstatic     #57                 // Field io/micronaut/websocket/CloseReason.INTERNAL_ERROR:Lio/micronaut/websocket/CloseReason;
     872: invokevirtual #34                 // Method io/micronaut/http/netty/websocket/NettyWebSocketSession.close:(Lio/micronaut/websocket/CloseReason;)V
     875: goto          899
     878: aload_0
     879: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     882: aload         5
     884: invokeinterface #112,  2          // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
     889: pop
     890: aload_0
     891: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
     894: invokeinterface #113,  1          // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
     899: return
     900: aload_2
     901: instanceof    #117                // class io/netty/handler/codec/http/websocketx/WebSocketFrame
     904: ifeq          919
     907: aload_0
     908: aload_1
     909: aload_2
     910: checkcast     #117                // class io/netty/handler/codec/http/websocketx/WebSocketFrame
     913: invokevirtual #118                // Method handleWebSocketFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/websocketx/WebSocketFrame;)V
     916: goto          927
     919: aload_1
     920: aload_2
     921: invokeinterface #119,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     926: pop
     927: return
    Exception table:
       from    to  target type
          29    39    42   Class java/lang/Exception
          44    85   121   any
         121   123   121   any
         305   374   397   any
         397   399   397   any
         531   600   623   any
         623   625   623   any
         695   809   812   Class java/lang/Throwable

  protected io.micronaut.http.netty.websocket.NettyWebSocketSession createWebSocketSession(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: ifnull        73
       4: new           #120                // class io/micronaut/http/client/netty/websocket/NettyWebSocketClientHandler$1
       7: dup
       8: aload_0
       9: aload_0
      10: getfield      #44                 // Field handshakeResponse:Lio/netty/handler/codec/http/FullHttpResponse;
      13: invokeinterface #121,  1          // InterfaceMethod io/netty/handler/codec/http/FullHttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      18: getstatic     #122                // Field io/netty/handler/codec/http/HttpHeaderNames.SEC_WEBSOCKET_ACCEPT:Lio/netty/util/AsciiString;
      21: invokevirtual #123                // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      24: aload_1
      25: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      30: aload_0
      31: getfield      #74                 // Field originatingRequest:Lio/micronaut/http/HttpRequest;
      34: aload_0
      35: getfield      #6                  // Field codecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      38: aload_0
      39: getfield      #7                  // Field handshaker:Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker;
      42: invokevirtual #3                  // Method io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.version:()Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
      45: invokevirtual #124                // Method io/netty/handler/codec/http/websocketx/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      48: aload_1
      49: invokeinterface #125,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      54: ldc           #126                // class io/netty/handler/ssl/SslHandler
      56: invokeinterface #127,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandler;
      61: ifnull        68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: invokespecial #128                // Method io/micronaut/http/client/netty/websocket/NettyWebSocketClientHandler$1."<init>":(Lio/micronaut/http/client/netty/websocket/NettyWebSocketClientHandler;Ljava/lang/String;Lio/netty/channel/Channel;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/codec/MediaTypeCodecRegistry;Ljava/lang/String;Z)V
      72: areturn
      73: aconst_null
      74: areturn

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #39                 // Field handshakeFuture:Lio/netty/channel/ChannelPromise;
       4: invokeinterface #129,  1          // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
       9: ifne          23
      12: aload_0
      13: getfield      #39                 // Field handshakeFuture:Lio/netty/channel/ChannelPromise;
      16: aload_2
      17: invokeinterface #130,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      22: pop
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #131                // Method io/micronaut/http/netty/websocket/AbstractNettyWebSocketHandler.exceptionCaught:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      29: return

  private void lambda$channelRead0$2(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
       4: aload_1
       5: invokeinterface #112,  2          // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
      10: pop
      11: aload_0
      12: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
      15: invokeinterface #113,  1          // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
      20: return

  private void lambda$channelRead0$1(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field emitter:Lreactor/core/publisher/FluxSink;
       4: new           #132                // class io/micronaut/websocket/exceptions/WebSocketSessionException
       7: dup
       8: new           #48                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #115                // String Error opening WebSocket client session:
      17: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #116                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      24: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: aload_1
      31: invokespecial #133                // Method io/micronaut/websocket/exceptions/WebSocketSessionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: invokeinterface #55,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      39: return

  private static void lambda$channelRead0$0(java.lang.Object);
    Code:
       0: return

  static io.micronaut.http.uri.UriMatchInfo access$000(io.micronaut.http.client.netty.websocket.NettyWebSocketClientHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field matchInfo:Lio/micronaut/http/uri/UriMatchInfo;
       4: areturn
}
