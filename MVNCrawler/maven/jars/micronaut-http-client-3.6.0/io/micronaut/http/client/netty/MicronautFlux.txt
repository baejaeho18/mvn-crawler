Compiled from "MicronautFlux.java"
class io.micronaut.http.client.netty.MicronautFlux<T> extends reactor.core.publisher.Flux<T> {
  private final reactor.core.publisher.Flux<T> flux;

  io.micronaut.http.client.netty.MicronautFlux(reactor.core.publisher.Flux<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field flux:Lreactor/core/publisher/Flux;
       9: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flux:Lreactor/core/publisher/Flux;
       4: aload_1
       5: invokevirtual #3                  // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
       8: return

  public reactor.core.publisher.Flux<T> doAfterNext(java.util.function.Consumer<? super T>);
    Code:
       0: new           #4                  // class io/micronaut/http/client/netty/MicronautFlux$AfterNextOperator
       3: dup
       4: aload_0
       5: getfield      #2                  // Field flux:Lreactor/core/publisher/Flux;
       8: aload_1
       9: invokespecial #5                  // Method io/micronaut/http/client/netty/MicronautFlux$AfterNextOperator."<init>":(Lreactor/core/publisher/Flux;Ljava/util/function/Consumer;)V
      12: invokestatic  #6                  // Method onAssembly:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
      15: areturn
}
