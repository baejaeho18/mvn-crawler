Compiled from "DefaultHttpClient.java"
class io.micronaut.http.client.netty.DefaultHttpClient$13$1 extends io.netty.channel.ChannelInboundHandlerAdapter {
  final io.netty.util.concurrent.Promise val$streamPipelineBuilt;

  final io.micronaut.http.client.netty.DefaultHttpClient$13 this$1;

  io.micronaut.http.client.netty.DefaultHttpClient$13$1(io.micronaut.http.client.netty.DefaultHttpClient$13, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/micronaut/http/client/netty/DefaultHttpClient$13;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$streamPipelineBuilt:Lio/netty/util/concurrent/Promise;
      10: aload_0
      11: invokespecial #3                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
      14: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$streamPipelineBuilt:Lio/netty/util/concurrent/Promise;
       4: aconst_null
       5: invokeinterface #4,  2            // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$streamPipelineBuilt:Lio/netty/util/concurrent/Promise;
       4: aconst_null
       5: invokeinterface #4,  2            // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      17: pop
      18: return
}
