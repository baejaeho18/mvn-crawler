Compiled from "DefaultHttpClient.java"
class io.micronaut.http.client.netty.DefaultHttpClient$2 extends io.netty.channel.pool.AbstractChannelPoolMap<io.micronaut.http.client.netty.DefaultHttpClient$RequestKey, io.netty.channel.pool.ChannelPool> {
  final io.micronaut.http.client.netty.DefaultHttpClient this$0;

  io.micronaut.http.client.netty.DefaultHttpClient$2(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       5: aload_0
       6: invokespecial #2                  // Method io/netty/channel/pool/AbstractChannelPoolMap."<init>":()V
       9: return

  protected io.netty.channel.pool.ChannelPool newPool(io.micronaut.http.client.netty.DefaultHttpClient$RequestKey);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       4: getfield      #3                  // Field io/micronaut/http/client/netty/DefaultHttpClient.bootstrap:Lio/netty/bootstrap/Bootstrap;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      11: getfield      #4                  // Field io/micronaut/http/client/netty/DefaultHttpClient.group:Lio/netty/channel/EventLoopGroup;
      14: invokevirtual #5                  // Method io/netty/bootstrap/Bootstrap.clone:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/Bootstrap;
      17: astore_2
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      22: aload_2
      23: aload_1
      24: invokevirtual #6                  // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.isSecure:()Z
      27: aload_1
      28: invokevirtual #7                  // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #8                  // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
      35: invokestatic  #9                  // Method io/micronaut/http/client/netty/DefaultHttpClient.access$000:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/bootstrap/Bootstrap;ZLjava/lang/String;I)V
      38: aload_2
      39: aload_1
      40: invokevirtual #10                 // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getRemoteAddress:()Ljava/net/InetSocketAddress;
      43: invokevirtual #11                 // Method io/netty/bootstrap/Bootstrap.remoteAddress:(Ljava/net/SocketAddress;)Lio/netty/bootstrap/Bootstrap;
      46: pop
      47: aload_0
      48: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      51: aload_1
      52: invokestatic  #12                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$100:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;)Lio/netty/channel/pool/AbstractChannelPoolHandler;
      55: astore_3
      56: new           #13                 // class io/netty/channel/pool/SimpleChannelPool
      59: dup
      60: aload_2
      61: aload_3
      62: invokespecial #14                 // Method io/netty/channel/pool/SimpleChannelPool."<init>":(Lio/netty/bootstrap/Bootstrap;Lio/netty/channel/pool/ChannelPoolHandler;)V
      65: areturn

  protected io.netty.channel.pool.ChannelPool newPool(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class io/micronaut/http/client/netty/DefaultHttpClient$RequestKey
       5: invokevirtual #16                 // Method newPool:(Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;)Lio/netty/channel/pool/ChannelPool;
       8: areturn
}
