Compiled from "NettyClientHttpRequest.java"
class io.micronaut.http.client.netty.NettyClientHttpRequest<B> implements io.micronaut.http.MutableHttpRequest<B>, io.micronaut.http.netty.NettyHttpRequestBuilder {
  static final java.lang.CharSequence CHANNEL;

  private final io.micronaut.http.netty.NettyHttpHeaders headers;

  private final io.micronaut.core.convert.value.MutableConvertibleValues<java.lang.Object> attributes;

  private final io.micronaut.http.HttpMethod httpMethod;

  private final java.lang.String httpMethodName;

  private final java.util.Map<java.lang.String, java.lang.String> cookies;

  private java.net.URI uri;

  private java.lang.Object body;

  private io.micronaut.http.netty.NettyHttpParameters httpParameters;

  io.micronaut.http.client.netty.NettyClientHttpRequest(io.micronaut.http.HttpMethod, java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/micronaut/http/netty/NettyHttpHeaders
       8: dup
       9: invokespecial #3                  // Method io/micronaut/http/netty/NettyHttpHeaders."<init>":()V
      12: putfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      15: aload_0
      16: new           #5                  // class io/micronaut/core/convert/value/MutableConvertibleValuesMap
      19: dup
      20: invokespecial #6                  // Method io/micronaut/core/convert/value/MutableConvertibleValuesMap."<init>":()V
      23: putfield      #7                  // Field attributes:Lio/micronaut/core/convert/value/MutableConvertibleValues;
      26: aload_0
      27: new           #8                  // class java/util/LinkedHashMap
      30: dup
      31: iconst_1
      32: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":(I)V
      35: putfield      #10                 // Field cookies:Ljava/util/Map;
      38: aload_0
      39: aload_1
      40: putfield      #11                 // Field httpMethod:Lio/micronaut/http/HttpMethod;
      43: aload_0
      44: aload_2
      45: putfield      #12                 // Field uri:Ljava/net/URI;
      48: aload_0
      49: aload_3
      50: putfield      #13                 // Field httpMethodName:Ljava/lang/String;
      53: return

  io.micronaut.http.client.netty.NettyClientHttpRequest(io.micronaut.http.HttpMethod, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokevirtual #14                 // Method io/micronaut/http/HttpMethod.name:()Ljava/lang/String;
       7: invokespecial #15                 // Method "<init>":(Lio/micronaut/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  io.micronaut.http.client.netty.NettyClientHttpRequest(io.micronaut.http.HttpMethod, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #16                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       6: aload_3
       7: invokespecial #17                 // Method "<init>":(Lio/micronaut/http/HttpMethod;Ljava/net/URI;Ljava/lang/String;)V
      10: return

  public io.micronaut.http.MutableHttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
       4: areturn

  public io.micronaut.core.convert.value.MutableConvertibleValues<java.lang.Object> getAttributes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field attributes:Lio/micronaut/core/convert/value/MutableConvertibleValues;
       4: areturn

  public io.micronaut.http.MutableHttpRequest<B> cookie(io.micronaut.http.cookie.Cookie);
    Code:
       0: aload_1
       1: instanceof    #18                 // class io/micronaut/http/netty/cookies/NettyCookie
       4: ifeq          91
       7: aload_1
       8: checkcast     #18                 // class io/micronaut/http/netty/cookies/NettyCookie
      11: astore_2
      12: getstatic     #19                 // Field io/netty/handler/codec/http/cookie/ClientCookieEncoder.LAX:Lio/netty/handler/codec/http/cookie/ClientCookieEncoder;
      15: aload_2
      16: invokevirtual #20                 // Method io/micronaut/http/netty/cookies/NettyCookie.getNettyCookie:()Lio/netty/handler/codec/http/cookie/Cookie;
      19: invokevirtual #21                 // Method io/netty/handler/codec/http/cookie/ClientCookieEncoder.encode:(Lio/netty/handler/codec/http/cookie/Cookie;)Ljava/lang/String;
      22: astore_3
      23: aload_0
      24: getfield      #10                 // Field cookies:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #22,  1           // InterfaceMethod io/micronaut/http/cookie/Cookie.getName:()Ljava/lang/String;
      33: aload_3
      34: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: getfield      #10                 // Field cookies:Ljava/util/Map;
      44: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
      49: iconst_1
      50: if_icmple     72
      53: ldc           #25                 // String ;
      55: aload_0
      56: getfield      #10                 // Field cookies:Ljava/util/Map;
      59: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      64: invokestatic  #27                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
      67: astore        4
      69: goto          75
      72: aload_3
      73: astore        4
      75: aload_0
      76: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      79: getstatic     #28                 // Field io/netty/handler/codec/http/HttpHeaderNames.COOKIE:Lio/netty/util/AsciiString;
      82: aload         4
      84: invokevirtual #29                 // Method io/micronaut/http/netty/NettyHttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/micronaut/core/type/MutableHeaders;
      87: pop
      88: goto          101
      91: new           #30                 // class java/lang/IllegalArgumentException
      94: dup
      95: ldc           #31                 // String Argument is not a Netty compatible Cookie
      97: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload_0
     102: areturn

  public io.micronaut.http.MutableHttpRequest<B> cookies(java.util.Set<io.micronaut.http.cookie.Cookie>);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Set.size:()I
       6: iconst_1
       7: if_icmple     124
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          96
      26: aload_2
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #37                 // class io/micronaut/http/cookie/Cookie
      35: astore_3
      36: aload_3
      37: instanceof    #18                 // class io/micronaut/http/netty/cookies/NettyCookie
      40: ifeq          83
      43: aload_3
      44: checkcast     #18                 // class io/micronaut/http/netty/cookies/NettyCookie
      47: astore        4
      49: getstatic     #19                 // Field io/netty/handler/codec/http/cookie/ClientCookieEncoder.LAX:Lio/netty/handler/codec/http/cookie/ClientCookieEncoder;
      52: aload         4
      54: invokevirtual #20                 // Method io/micronaut/http/netty/cookies/NettyCookie.getNettyCookie:()Lio/netty/handler/codec/http/cookie/Cookie;
      57: invokevirtual #21                 // Method io/netty/handler/codec/http/cookie/ClientCookieEncoder.encode:(Lio/netty/handler/codec/http/cookie/Cookie;)Ljava/lang/String;
      60: astore        5
      62: aload_0
      63: getfield      #10                 // Field cookies:Ljava/util/Map;
      66: aload_3
      67: invokeinterface #22,  1           // InterfaceMethod io/micronaut/http/cookie/Cookie.getName:()Ljava/lang/String;
      72: aload         5
      74: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          93
      83: new           #30                 // class java/lang/IllegalArgumentException
      86: dup
      87: ldc           #31                 // String Argument is not a Netty compatible Cookie
      89: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: goto          17
      96: aload_0
      97: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
     100: getstatic     #28                 // Field io/netty/handler/codec/http/HttpHeaderNames.COOKIE:Lio/netty/util/AsciiString;
     103: ldc           #25                 // String ;
     105: aload_0
     106: getfield      #10                 // Field cookies:Ljava/util/Map;
     109: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     114: invokestatic  #27                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
     117: invokevirtual #29                 // Method io/micronaut/http/netty/NettyHttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/micronaut/core/type/MutableHeaders;
     120: pop
     121: goto          152
     124: aload_1
     125: invokeinterface #38,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     130: ifne          152
     133: aload_0
     134: aload_1
     135: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     140: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #37                 // class io/micronaut/http/cookie/Cookie
     148: invokevirtual #39                 // Method cookie:(Lio/micronaut/http/cookie/Cookie;)Lio/micronaut/http/MutableHttpRequest;
     151: pop
     152: aload_0
     153: areturn

  public io.micronaut.http.MutableHttpRequest<B> uri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field uri:Ljava/net/URI;
       5: aload_0
       6: areturn

  public java.util.Optional<B> getBody();
    Code:
       0: aload_0
       1: getfield      #40                 // Field body:Ljava/lang/Object;
       4: invokestatic  #41                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public <T> java.util.Optional<T> getBody(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
       5: invokevirtual #43                 // Method getBody:(Lio/micronaut/core/type/Argument;)Ljava/util/Optional;
       8: areturn

  public <T> java.util.Optional<T> getBody(io.micronaut.core.type.Argument<T>);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getBody:()Ljava/util/Optional;
       4: aload_1
       5: invokedynamic #45,  0             // InvokeDynamic #0:apply:(Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      10: invokevirtual #46                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: areturn

  public <T> io.micronaut.http.MutableHttpRequest<T> body(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field body:Ljava/lang/Object;
       5: aload_0
       6: areturn

  public io.micronaut.http.cookie.Cookies getCookies();
    Code:
       0: new           #47                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #48                 // String not yet implemented
       6: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.micronaut.http.MutableHttpParameters getParameters();
    Code:
       0: aload_0
       1: getfield      #50                 // Field httpParameters:Lio/micronaut/http/netty/NettyHttpParameters;
       4: astore_1
       5: aload_1
       6: ifnonnull     46
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #50                 // Field httpParameters:Lio/micronaut/http/netty/NettyHttpParameters;
      17: astore_1
      18: aload_1
      19: ifnonnull     36
      22: aload_0
      23: aload_0
      24: invokevirtual #51                 // Method getUri:()Ljava/net/URI;
      27: invokespecial #52                 // Method decodeParameters:(Ljava/net/URI;)Lio/micronaut/http/netty/NettyHttpParameters;
      30: astore_1
      31: aload_0
      32: aload_1
      33: putfield      #50                 // Field httpParameters:Lio/micronaut/http/netty/NettyHttpParameters;
      36: aload_2
      37: monitorexit
      38: goto          46
      41: astore_3
      42: aload_2
      43: monitorexit
      44: aload_3
      45: athrow
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          13    38    41   any
          41    44    41   any

  public io.micronaut.http.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #11                 // Field httpMethod:Lio/micronaut/http/HttpMethod;
       4: areturn

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #12                 // Field uri:Ljava/net/URI;
       4: areturn

  private io.micronaut.http.netty.NettyHttpParameters decodeParameters(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method createDecoder:(Ljava/net/URI;)Lio/netty/handler/codec/http/QueryStringDecoder;
       5: astore_2
       6: new           #54                 // class io/micronaut/http/netty/NettyHttpParameters
       9: dup
      10: aload_2
      11: invokevirtual #55                 // Method io/netty/handler/codec/http/QueryStringDecoder.parameters:()Ljava/util/Map;
      14: getstatic     #56                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
      17: aload_0
      18: invokedynamic #57,  0             // InvokeDynamic #1:accept:(Lio/micronaut/http/client/netty/NettyClientHttpRequest;)Ljava/util/function/BiConsumer;
      23: invokespecial #58                 // Method io/micronaut/http/netty/NettyHttpParameters."<init>":(Ljava/util/Map;Lio/micronaut/core/convert/ConversionService;Ljava/util/function/BiConsumer;)V
      26: areturn

  protected io.netty.handler.codec.http.QueryStringDecoder createDecoder(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getCharacterEncoding:()Ljava/nio/charset/Charset;
       4: astore_2
       5: aload_2
       6: ifnull        21
       9: new           #60                 // class io/netty/handler/codec/http/QueryStringDecoder
      12: dup
      13: aload_1
      14: aload_2
      15: invokespecial #61                 // Method io/netty/handler/codec/http/QueryStringDecoder."<init>":(Ljava/net/URI;Ljava/nio/charset/Charset;)V
      18: goto          29
      21: new           #60                 // class io/netty/handler/codec/http/QueryStringDecoder
      24: dup
      25: aload_1
      26: invokespecial #62                 // Method io/netty/handler/codec/http/QueryStringDecoder."<init>":(Ljava/net/URI;)V
      29: areturn

  private static io.netty.handler.codec.http.HttpMethod getMethod(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method io/netty/handler/codec/http/HttpMethod.valueOf:(Ljava/lang/String;)Lio/netty/handler/codec/http/HttpMethod;
       4: areturn

  private java.lang.String resolveUriPath();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method getUri:()Ljava/net/URI;
       4: astore_1
       5: aload_1
       6: invokevirtual #64                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       9: invokestatic  #65                 // Method io/micronaut/core/util/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
      12: ifeq          43
      15: new           #66                 // class java/net/URI
      18: dup
      19: aconst_null
      20: aconst_null
      21: aconst_null
      22: iconst_m1
      23: aload_1
      24: invokevirtual #67                 // Method java/net/URI.getPath:()Ljava/lang/String;
      27: aload_1
      28: invokevirtual #68                 // Method java/net/URI.getQuery:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #69                 // Method java/net/URI.getFragment:()Ljava/lang/String;
      35: invokespecial #70                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      38: astore_1
      39: goto          43
      42: astore_2
      43: aload_1
      44: invokevirtual #72                 // Method java/net/URI.toString:()Ljava/lang/String;
      47: areturn
    Exception table:
       from    to  target type
          15    39    42   Class java/net/URISyntaxException

  public java.lang.String toString();
    Code:
       0: new           #73                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #75                 // Method getMethodName:()Ljava/lang/String;
      11: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #77                 // String
      16: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #12                 // Field uri:Ljava/net/URI;
      23: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.String getMethodName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field httpMethodName:Ljava/lang/String;
       4: areturn

  public io.netty.handler.codec.http.FullHttpRequest toFullHttpRequest();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method resolveUriPath:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field httpMethodName:Ljava/lang/String;
       9: invokestatic  #81                 // Method getMethod:(Ljava/lang/String;)Lio/netty/handler/codec/http/HttpMethod;
      12: astore_2
      13: aload_0
      14: getfield      #40                 // Field body:Ljava/lang/Object;
      17: ifnull        94
      20: aload_0
      21: getfield      #40                 // Field body:Ljava/lang/Object;
      24: instanceof    #82                 // class io/netty/buffer/ByteBuf
      27: ifeq          63
      30: new           #83                 // class io/netty/handler/codec/http/DefaultFullHttpRequest
      33: dup
      34: getstatic     #84                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
      37: aload_2
      38: aload_1
      39: aload_0
      40: getfield      #40                 // Field body:Ljava/lang/Object;
      43: checkcast     #82                 // class io/netty/buffer/ByteBuf
      46: aload_0
      47: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      50: invokevirtual #85                 // Method io/micronaut/http/netty/NettyHttpHeaders.getNettyHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      53: getstatic     #86                 // Field io/netty/handler/codec/http/EmptyHttpHeaders.INSTANCE:Lio/netty/handler/codec/http/EmptyHttpHeaders;
      56: invokespecial #87                 // Method io/netty/handler/codec/http/DefaultFullHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/handler/codec/http/HttpHeaders;)V
      59: astore_3
      60: goto          120
      63: new           #83                 // class io/netty/handler/codec/http/DefaultFullHttpRequest
      66: dup
      67: getstatic     #84                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
      70: aload_2
      71: aload_1
      72: invokespecial #88                 // Method io/netty/handler/codec/http/DefaultFullHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;)V
      75: astore_3
      76: aload_3
      77: invokevirtual #89                 // Method io/netty/handler/codec/http/DefaultFullHttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      80: aload_0
      81: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      84: invokevirtual #85                 // Method io/micronaut/http/netty/NettyHttpHeaders.getNettyHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      87: invokevirtual #90                 // Method io/netty/handler/codec/http/HttpHeaders.setAll:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      90: pop
      91: goto          120
      94: new           #83                 // class io/netty/handler/codec/http/DefaultFullHttpRequest
      97: dup
      98: getstatic     #84                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
     101: aload_2
     102: aload_1
     103: getstatic     #91                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
     106: aload_0
     107: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
     110: invokevirtual #85                 // Method io/micronaut/http/netty/NettyHttpHeaders.getNettyHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
     113: getstatic     #86                 // Field io/netty/handler/codec/http/EmptyHttpHeaders.INSTANCE:Lio/netty/handler/codec/http/EmptyHttpHeaders;
     116: invokespecial #87                 // Method io/netty/handler/codec/http/DefaultFullHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/handler/codec/http/HttpHeaders;)V
     119: astore_3
     120: aload_3
     121: areturn

  public io.micronaut.http.netty.stream.StreamedHttpRequest toStreamHttpRequest();
    Code:
       0: aload_0
       1: getfield      #40                 // Field body:Ljava/lang/Object;
       4: instanceof    #92                 // class org/reactivestreams/Publisher
       7: ifeq          60
      10: aload_0
      11: invokespecial #80                 // Method resolveUriPath:()Ljava/lang/String;
      14: astore_1
      15: aload_0
      16: getfield      #13                 // Field httpMethodName:Ljava/lang/String;
      19: invokestatic  #81                 // Method getMethod:(Ljava/lang/String;)Lio/netty/handler/codec/http/HttpMethod;
      22: astore_2
      23: new           #93                 // class io/micronaut/http/netty/stream/DefaultStreamedHttpRequest
      26: dup
      27: getstatic     #84                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
      30: aload_2
      31: aload_1
      32: aload_0
      33: getfield      #40                 // Field body:Ljava/lang/Object;
      36: checkcast     #92                 // class org/reactivestreams/Publisher
      39: invokespecial #94                 // Method io/micronaut/http/netty/stream/DefaultStreamedHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Lorg/reactivestreams/Publisher;)V
      42: astore_3
      43: aload_3
      44: invokevirtual #95                 // Method io/micronaut/http/netty/stream/DefaultStreamedHttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      47: aload_0
      48: getfield      #4                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      51: invokevirtual #85                 // Method io/micronaut/http/netty/NettyHttpHeaders.getNettyHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      54: invokevirtual #90                 // Method io/netty/handler/codec/http/HttpHeaders.setAll:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      57: pop
      58: aload_3
      59: areturn
      60: new           #96                 // class java/lang/IllegalStateException
      63: dup
      64: ldc           #97                 // String Body must be set to a publisher of HTTP content first!
      66: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      69: athrow

  public io.netty.handler.codec.http.HttpRequest toHttpRequest();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method isStream:()Z
       4: ifeq          12
       7: aload_0
       8: invokevirtual #100                // Method toStreamHttpRequest:()Lio/micronaut/http/netty/stream/StreamedHttpRequest;
      11: areturn
      12: aload_0
      13: invokevirtual #101                // Method toFullHttpRequest:()Lio/netty/handler/codec/http/FullHttpRequest;
      16: areturn

  public boolean isStream();
    Code:
       0: aload_0
       1: getfield      #40                 // Field body:Ljava/lang/Object;
       4: instanceof    #92                 // class org/reactivestreams/Publisher
       7: ireturn

  public io.micronaut.http.HttpParameters getParameters();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method getParameters:()Lio/micronaut/http/MutableHttpParameters;
       4: areturn

  public io.micronaut.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getHeaders:()Lio/micronaut/http/MutableHttpHeaders;
       4: areturn

  public io.micronaut.core.convert.value.ConvertibleValues getAttributes();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method getAttributes:()Lio/micronaut/core/convert/value/MutableConvertibleValues;
       4: areturn

  public io.micronaut.http.MutableHttpMessage body(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #105                // Method body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpRequest;
       5: areturn

  private void lambda$decodeParameters$1(java.lang.CharSequence, java.util.List);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method getUri:()Ljava/net/URI;
       4: invokestatic  #106                // InterfaceMethod io/micronaut/http/uri/UriBuilder.of:(Ljava/net/URI;)Lio/micronaut/http/uri/UriBuilder;
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokeinterface #107,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      15: aload_2
      16: invokeinterface #108,  1          // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      21: invokeinterface #109,  3          // InterfaceMethod io/micronaut/http/uri/UriBuilder.replaceQueryParam:(Ljava/lang/String;[Ljava/lang/Object;)Lio/micronaut/http/uri/UriBuilder;
      26: pop
      27: aload_0
      28: aload_3
      29: invokeinterface #110,  1          // InterfaceMethod io/micronaut/http/uri/UriBuilder.build:()Ljava/net/URI;
      34: invokevirtual #111                // Method uri:(Ljava/net/URI;)Lio/micronaut/http/MutableHttpRequest;
      37: pop
      38: return

  private static java.util.Optional lambda$getBody$0(io.micronaut.core.type.Argument, java.lang.Object);
    Code:
       0: getstatic     #56                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
       3: aload_1
       4: aload_0
       5: invokestatic  #112                // InterfaceMethod io/micronaut/core/convert/ConversionContext.of:(Lio/micronaut/core/type/Argument;)Lio/micronaut/core/convert/ArgumentConversionContext;
       8: invokeinterface #113,  3          // InterfaceMethod io/micronaut/core/convert/ConversionService.convert:(Ljava/lang/Object;Lio/micronaut/core/convert/ArgumentConversionContext;)Ljava/util/Optional;
      13: areturn

  static {};
    Code:
       0: ldc           #114                // String netty_channel
       2: putstatic     #115                // Field CHANNEL:Ljava/lang/CharSequence;
       5: return
}
