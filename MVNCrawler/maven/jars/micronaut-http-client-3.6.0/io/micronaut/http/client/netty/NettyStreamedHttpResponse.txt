Compiled from "NettyStreamedHttpResponse.java"
class io.micronaut.http.client.netty.NettyStreamedHttpResponse<B> implements io.micronaut.http.MutableHttpResponse<B>, io.micronaut.http.netty.NettyHttpResponseBuilder {
  private final io.micronaut.http.netty.stream.StreamedHttpResponse nettyResponse;

  private io.micronaut.http.HttpStatus status;

  private final io.micronaut.http.netty.NettyHttpHeaders headers;

  private final io.micronaut.http.netty.cookies.NettyCookies nettyCookies;

  private B body;

  private io.micronaut.core.convert.value.MutableConvertibleValues<java.lang.Object> attributes;

  io.micronaut.http.client.netty.NettyStreamedHttpResponse(io.micronaut.http.netty.stream.StreamedHttpResponse, io.micronaut.http.HttpStatus);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field nettyResponse:Lio/micronaut/http/netty/stream/StreamedHttpResponse;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field status:Lio/micronaut/http/HttpStatus;
      14: aload_0
      15: new           #4                  // class io/micronaut/http/netty/NettyHttpHeaders
      18: dup
      19: aload_1
      20: invokeinterface #5,  1            // InterfaceMethod io/micronaut/http/netty/stream/StreamedHttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      25: getstatic     #6                  // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
      28: invokespecial #7                  // Method io/micronaut/http/netty/NettyHttpHeaders."<init>":(Lio/netty/handler/codec/http/HttpHeaders;Lio/micronaut/core/convert/ConversionService;)V
      31: putfield      #8                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      34: aload_0
      35: new           #9                  // class io/micronaut/http/netty/cookies/NettyCookies
      38: dup
      39: aload_1
      40: invokeinterface #5,  1            // InterfaceMethod io/micronaut/http/netty/stream/StreamedHttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      45: getstatic     #6                  // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
      48: invokespecial #10                 // Method io/micronaut/http/netty/cookies/NettyCookies."<init>":(Lio/netty/handler/codec/http/HttpHeaders;Lio/micronaut/core/convert/ConversionService;)V
      51: putfield      #11                 // Field nettyCookies:Lio/micronaut/http/netty/cookies/NettyCookies;
      54: return

  public io.micronaut.http.netty.stream.StreamedHttpResponse getNettyResponse();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nettyResponse:Lio/micronaut/http/netty/stream/StreamedHttpResponse;
       4: areturn

  public java.lang.String reason();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nettyResponse:Lio/micronaut/http/netty/stream/StreamedHttpResponse;
       4: invokeinterface #12,  1           // InterfaceMethod io/micronaut/http/netty/stream/StreamedHttpResponse.status:()Lio/netty/handler/codec/http/HttpResponseStatus;
       9: invokevirtual #13                 // Method io/netty/handler/codec/http/HttpResponseStatus.reasonPhrase:()Ljava/lang/String;
      12: areturn

  public io.micronaut.http.HttpStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:Lio/micronaut/http/HttpStatus;
       4: areturn

  public io.micronaut.http.MutableHttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #8                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
       4: areturn

  public io.micronaut.core.convert.value.MutableConvertibleValues<java.lang.Object> getAttributes();
    Code:
       0: aload_0
       1: getfield      #14                 // Field attributes:Lio/micronaut/core/convert/value/MutableConvertibleValues;
       4: astore_1
       5: aload_1
       6: ifnonnull     45
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #14                 // Field attributes:Lio/micronaut/core/convert/value/MutableConvertibleValues;
      17: astore_1
      18: aload_1
      19: ifnonnull     35
      22: new           #15                 // class io/micronaut/core/convert/value/MutableConvertibleValuesMap
      25: dup
      26: invokespecial #16                 // Method io/micronaut/core/convert/value/MutableConvertibleValuesMap."<init>":()V
      29: astore_1
      30: aload_0
      31: aload_1
      32: putfield      #14                 // Field attributes:Lio/micronaut/core/convert/value/MutableConvertibleValues;
      35: aload_2
      36: monitorexit
      37: goto          45
      40: astore_3
      41: aload_2
      42: monitorexit
      43: aload_3
      44: athrow
      45: aload_1
      46: areturn
    Exception table:
       from    to  target type
          13    37    40   any
          40    43    40   any

  public void setBody(B);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field body:Ljava/lang/Object;
       5: return

  public java.util.Optional<B> getBody();
    Code:
       0: aload_0
       1: getfield      #17                 // Field body:Ljava/lang/Object;
       4: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public io.netty.handler.codec.http.FullHttpResponse toFullHttpResponse();
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #20                 // String Cannot convert a stream response to a full response
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public io.micronaut.http.netty.stream.StreamedHttpResponse toStreamHttpResponse();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nettyResponse:Lio/micronaut/http/netty/stream/StreamedHttpResponse;
       4: areturn

  public io.netty.handler.codec.http.HttpResponse toHttpResponse();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nettyResponse:Lio/micronaut/http/netty/stream/StreamedHttpResponse;
       4: areturn

  public boolean isStream();
    Code:
       0: iconst_1
       1: ireturn

  public io.micronaut.http.MutableHttpResponse<B> cookie(io.micronaut.http.cookie.Cookie);
    Code:
       0: aload_1
       1: instanceof    #22                 // class io/micronaut/http/netty/cookies/NettyCookie
       4: ifeq          38
       7: aload_1
       8: checkcast     #22                 // class io/micronaut/http/netty/cookies/NettyCookie
      11: astore_2
      12: getstatic     #23                 // Field io/netty/handler/codec/http/cookie/ClientCookieEncoder.STRICT:Lio/netty/handler/codec/http/cookie/ClientCookieEncoder;
      15: aload_2
      16: invokevirtual #24                 // Method io/micronaut/http/netty/cookies/NettyCookie.getNettyCookie:()Lio/netty/handler/codec/http/cookie/Cookie;
      19: invokevirtual #25                 // Method io/netty/handler/codec/http/cookie/ClientCookieEncoder.encode:(Lio/netty/handler/codec/http/cookie/Cookie;)Ljava/lang/String;
      22: astore_3
      23: aload_0
      24: getfield      #8                  // Field headers:Lio/micronaut/http/netty/NettyHttpHeaders;
      27: getstatic     #26                 // Field io/netty/handler/codec/http/HttpHeaderNames.SET_COOKIE:Lio/netty/util/AsciiString;
      30: aload_3
      31: invokevirtual #27                 // Method io/micronaut/http/netty/NettyHttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/micronaut/http/MutableHttpHeaders;
      34: pop
      35: goto          48
      38: new           #28                 // class java/lang/IllegalArgumentException
      41: dup
      42: ldc           #29                 // String Argument is not a Netty compatible Cookie
      44: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: areturn

  public io.micronaut.http.cookie.Cookies getCookies();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nettyCookies:Lio/micronaut/http/netty/cookies/NettyCookies;
       4: areturn

  public java.util.Optional<io.micronaut.http.cookie.Cookie> getCookie(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nettyCookies:Lio/micronaut/http/netty/cookies/NettyCookies;
       4: aload_1
       5: invokevirtual #31                 // Method io/micronaut/http/netty/cookies/NettyCookies.findCookie:(Ljava/lang/CharSequence;)Ljava/util/Optional;
       8: areturn

  public <T> io.micronaut.http.MutableHttpResponse<T> body(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field body:Ljava/lang/Object;
       5: aload_0
       6: areturn

  public io.micronaut.http.MutableHttpResponse<B> status(io.micronaut.http.HttpStatus, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #32                 // String Status is required
       4: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #34                 // class io/micronaut/http/HttpStatus
      10: putfield      #3                  // Field status:Lio/micronaut/http/HttpStatus;
      13: aload_0
      14: areturn

  public io.micronaut.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getHeaders:()Lio/micronaut/http/MutableHttpHeaders;
       4: areturn

  public io.micronaut.core.convert.value.ConvertibleValues getAttributes();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getAttributes:()Lio/micronaut/core/convert/value/MutableConvertibleValues;
       4: areturn

  public io.micronaut.http.MutableHttpMessage body(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpResponse;
       5: areturn
}
