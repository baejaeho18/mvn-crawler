Compiled from "DefaultHttpClient.java"
class io.micronaut.http.client.netty.DefaultHttpClient$3 implements io.micronaut.http.client.BlockingHttpClient {
  final io.micronaut.http.client.netty.DefaultHttpClient this$0;

  io.micronaut.http.client.netty.DefaultHttpClient$3(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       4: invokevirtual #3                  // Method io/micronaut/http/client/netty/DefaultHttpClient.close:()V
       7: return

  public <I, O, E> io.micronaut.http.HttpResponse<O> exchange(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<E>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #4                  // Method io/micronaut/http/client/netty/DefaultHttpClient.exchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
      10: invokestatic  #5                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      13: astore        4
      15: aload         4
      17: invokedynamic #6,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      22: invokevirtual #7                  // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      25: invokevirtual #8                  // Method reactor/core/publisher/Flux.blockFirst:()Ljava/lang/Object;
      28: checkcast     #9                  // class io/micronaut/http/HttpResponse
      31: areturn

  public <I, O, E> O retrieve(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #10                 // Method exchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lio/micronaut/http/HttpResponse;
       7: astore        4
       9: ldc           #11                 // class io/micronaut/http/HttpStatus
      11: aload_2
      12: invokeinterface #12,  1           // InterfaceMethod io/micronaut/core/type/Argument.getType:()Ljava/lang/Class;
      17: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          31
      23: aload         4
      25: invokeinterface #14,  1           // InterfaceMethod io/micronaut/http/HttpResponse.getStatus:()Lio/micronaut/http/HttpStatus;
      30: areturn
      31: aload         4
      33: invokeinterface #15,  1           // InterfaceMethod io/micronaut/http/HttpResponse.getBody:()Ljava/util/Optional;
      38: astore        5
      40: aload         5
      42: invokevirtual #16                 // Method java/util/Optional.isPresent:()Z
      45: ifne          109
      48: aload         4
      50: ldc           #17                 // class "[B"
      52: invokestatic  #18                 // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
      55: invokeinterface #19,  2           // InterfaceMethod io/micronaut/http/HttpResponse.getBody:(Lio/micronaut/core/type/Argument;)Ljava/util/Optional;
      60: invokevirtual #16                 // Method java/util/Optional.isPresent:()Z
      63: ifeq          109
      66: aload_0
      67: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      70: new           #20                 // class io/micronaut/http/client/exceptions/HttpClientResponseException
      73: dup
      74: ldc           #21                 // String Failed to decode the body for the given content type [%s]
      76: iconst_1
      77: anewarray     #22                 // class java/lang/Object
      80: dup
      81: iconst_0
      82: aload         4
      84: invokeinterface #23,  1           // InterfaceMethod io/micronaut/http/HttpResponse.getContentType:()Ljava/util/Optional;
      89: aconst_null
      90: invokevirtual #24                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      93: aastore
      94: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      97: aload         4
      99: invokespecial #26                 // Method io/micronaut/http/client/exceptions/HttpClientResponseException."<init>":(Ljava/lang/String;Lio/micronaut/http/HttpResponse;)V
     102: invokestatic  #27                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$200:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
     105: checkcast     #20                 // class io/micronaut/http/client/exceptions/HttpClientResponseException
     108: athrow
     109: aload         5
     111: aload_0
     112: aload         4
     114: invokedynamic #28,  0             // InvokeDynamic #1:get:(Lio/micronaut/http/client/netty/DefaultHttpClient$3;Lio/micronaut/http/HttpResponse;)Ljava/util/function/Supplier;
     119: invokevirtual #29                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     122: areturn

  private io.micronaut.http.client.exceptions.HttpClientResponseException lambda$retrieve$2(io.micronaut.http.HttpResponse);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       4: new           #20                 // class io/micronaut/http/client/exceptions/HttpClientResponseException
       7: dup
       8: ldc           #30                 // String Empty body
      10: aload_1
      11: invokespecial #26                 // Method io/micronaut/http/client/exceptions/HttpClientResponseException."<init>":(Ljava/lang/String;Lio/micronaut/http/HttpResponse;)V
      14: invokestatic  #27                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$200:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      17: checkcast     #20                 // class io/micronaut/http/client/exceptions/HttpClientResponseException
      20: areturn

  private static void lambda$exchange$1(io.micronaut.http.HttpResponse);
    Code:
       0: aload_0
       1: ldc           #31                 // class io/netty/buffer/ByteBuf
       3: invokeinterface #32,  2           // InterfaceMethod io/micronaut/http/HttpResponse.getBody:(Ljava/lang/Class;)Ljava/util/Optional;
       8: astore_1
       9: aload_1
      10: invokedynamic #33,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      15: invokevirtual #34                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      18: aload_0
      19: instanceof    #35                 // class io/micronaut/http/client/netty/FullNettyClientHttpResponse
      22: ifeq          32
      25: aload_0
      26: checkcast     #35                 // class io/micronaut/http/client/netty/FullNettyClientHttpResponse
      29: invokevirtual #36                 // Method io/micronaut/http/client/netty/FullNettyClientHttpResponse.onComplete:()V
      32: return

  private static void lambda$exchange$0(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.refCnt:()I
       4: ifle          11
       7: aload_0
       8: invokestatic  #38                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      11: return
}
