Compiled from "NettyFuturePublisher.java"
final class io.micronaut.http.client.netty.NettyFuturePublisher<T> implements org.reactivestreams.Publisher<T> {
  private final io.netty.util.concurrent.Future<T> future;

  private final boolean forwardCancel;

  io.micronaut.http.client.netty.NettyFuturePublisher(io.netty.util.concurrent.Future<T>, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field future:Lio/netty/util/concurrent/Future;
       9: aload_0
      10: iload_2
      11: putfield      #1                  // Field forwardCancel:Z
      14: return

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_1
       1: new           #4                  // class io/micronaut/http/client/netty/NettyFuturePublisher$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #5                  // Method io/micronaut/http/client/netty/NettyFuturePublisher$1."<init>":(Lio/micronaut/http/client/netty/NettyFuturePublisher;Lorg/reactivestreams/Subscriber;)V
      10: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      15: return

  static io.netty.util.concurrent.Future access$000(io.micronaut.http.client.netty.NettyFuturePublisher);
    Code:
       0: aload_0
       1: getfield      #2                  // Field future:Lio/netty/util/concurrent/Future;
       4: areturn

  static boolean access$100(io.micronaut.http.client.netty.NettyFuturePublisher);
    Code:
       0: aload_0
       1: getfield      #1                  // Field forwardCancel:Z
       4: ireturn
}
