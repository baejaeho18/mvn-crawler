Compiled from "DefaultHttpClient.java"
class io.micronaut.http.client.netty.DefaultHttpClient$6 extends io.netty.handler.ssl.ApplicationProtocolNegotiationHandler {
  final io.micronaut.http.client.netty.DefaultHttpClient$HttpClientInitializer val$httpClientInitializer;

  final io.netty.channel.socket.SocketChannel val$ch;

  final io.micronaut.http.client.netty.DefaultHttpClient this$0;

  io.micronaut.http.client.netty.DefaultHttpClient$6(io.micronaut.http.client.netty.DefaultHttpClient, java.lang.String, io.micronaut.http.client.netty.DefaultHttpClient$HttpClientInitializer, io.netty.channel.socket.SocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field val$ch:Lio/netty/channel/socket/SocketChannel;
      16: aload_0
      17: aload_2
      18: invokespecial #4                  // Method io/netty/handler/ssl/ApplicationProtocolNegotiationHandler."<init>":(Ljava/lang/String;)V
      21: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
       4: invokestatic  #5                  // Method io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.access$300:(Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;)Ljava/util/function/Consumer;
       7: astore_2
       8: aload_2
       9: ifnull        19
      12: aload_2
      13: aload_1
      14: invokeinterface #6,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      19: return

  protected void configurePipeline(io.netty.channel.ChannelHandlerContext, java.lang.String);
    Code:
       0: ldc           #8                  // String h2
       2: aload_2
       3: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          140
       9: aload_1
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      15: astore_3
      16: aload_0
      17: getfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
      20: getfield      #11                 // Field io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.stream:Z
      23: ifeq          44
      26: aload_1
      27: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      32: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      37: iconst_0
      38: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
      43: pop
      44: aload_3
      45: ldc           #16                 // String http2-settings
      47: new           #17                 // class io/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler
      50: dup
      51: aload_0
      52: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      55: aload_0
      56: getfield      #3                  // Field val$ch:Lio/netty/channel/socket/SocketChannel;
      59: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/socket/SocketChannel.newPromise:()Lio/netty/channel/ChannelPromise;
      64: invokespecial #19                 // Method io/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/channel/ChannelPromise;)V
      67: invokeinterface #20,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      72: pop
      73: aload_0
      74: getfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
      77: aload_3
      78: invokestatic  #21                 // Method io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.access$400:(Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;Lio/netty/channel/ChannelPipeline;)V
      81: aload_0
      82: getfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
      85: aload_3
      86: invokevirtual #22                 // Method io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.addFinalHandler:(Lio/netty/channel/ChannelPipeline;)V
      89: aload_0
      90: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      93: invokestatic  #23                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$500:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Ljava/util/Collection;
      96: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     101: astore        4
     103: aload         4
     105: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          137
     113: aload         4
     115: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #27                 // class io/micronaut/http/netty/channel/ChannelPipelineListener
     123: astore        5
     125: aload         5
     127: aload_3
     128: invokeinterface #28,  2           // InterfaceMethod io/micronaut/http/netty/channel/ChannelPipelineListener.onConnect:(Lio/netty/channel/ChannelPipeline;)Lio/netty/channel/ChannelPipeline;
     133: pop
     134: goto          103
     137: goto          208
     140: ldc           #29                 // String http/1.1
     142: aload_2
     143: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     146: ifeq          167
     149: aload_1
     150: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
     155: astore_3
     156: aload_0
     157: getfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
     160: aload_3
     161: invokestatic  #30                 // Method io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.access$600:(Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;Lio/netty/channel/ChannelPipeline;)V
     164: goto          208
     167: aload_1
     168: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
     173: pop
     174: aload_0
     175: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
     178: new           #32                 // class io/micronaut/http/client/exceptions/HttpClientException
     181: dup
     182: new           #33                 // class java/lang/StringBuilder
     185: dup
     186: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #35                 // String Unknown Protocol:
     191: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_2
     195: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokespecial #38                 // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;)V
     204: invokestatic  #39                 // Method io/micronaut/http/client/netty/DefaultHttpClient.access$200:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
     207: athrow
     208: aload_0
     209: getfield      #2                  // Field val$httpClientInitializer:Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;
     212: invokevirtual #40                 // Method io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.onStreamPipelineBuilt:()V
     215: return
}
