Compiled from "DefaultHttpClient.java"
public class io.micronaut.http.client.netty.DefaultHttpClient implements io.micronaut.websocket.WebSocketClient,io.micronaut.http.client.HttpClient,io.micronaut.http.client.StreamingHttpClient,io.micronaut.http.client.sse.SseClient,io.micronaut.http.client.ProxyHttpClient,java.io.Closeable,java.lang.AutoCloseable {
  private static final org.slf4j.Logger DEFAULT_LOG;

  private static final io.netty.util.AttributeKey<io.netty.handler.codec.http2.Http2Stream> STREAM_KEY;

  private static final io.netty.util.AttributeKey<io.micronaut.http.client.netty.NettyClientCustomizer> CHANNEL_CUSTOMIZER_KEY;

  private static final io.netty.util.AttributeKey<io.netty.util.concurrent.Future<?>> STREAM_CHANNEL_INITIALIZED;

  private static final int DEFAULT_HTTP_PORT;

  private static final int DEFAULT_HTTPS_PORT;

  private static final io.netty.handler.codec.http.HttpHeaders REDIRECT_HEADER_BLOCKLIST;

  protected final io.netty.bootstrap.Bootstrap bootstrap;

  protected io.netty.channel.EventLoopGroup group;

  protected io.micronaut.http.codec.MediaTypeCodecRegistry mediaTypeCodecRegistry;

  protected io.micronaut.core.io.buffer.ByteBufferFactory<io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf> byteBufferFactory;

  private final java.util.List<io.micronaut.http.filter.HttpFilterResolver$FilterEntry<io.micronaut.http.filter.HttpClientFilter>> clientFilterEntries;

  private final io.micronaut.http.HttpVersion httpVersion;

  private final reactor.core.scheduler.Scheduler scheduler;

  private final io.micronaut.http.client.LoadBalancer loadBalancer;

  private final io.micronaut.http.client.HttpClientConfiguration configuration;

  private final java.lang.String contextPath;

  private final io.netty.handler.ssl.SslContext sslContext;

  private final java.util.concurrent.ThreadFactory threadFactory;

  private final boolean shutdownGroup;

  private final java.nio.charset.Charset defaultCharset;

  private final io.netty.channel.pool.ChannelPoolMap<io.micronaut.http.client.netty.DefaultHttpClient$RequestKey, io.netty.channel.pool.ChannelPool> poolMap;

  private final org.slf4j.Logger log;

  private final java.lang.Long readTimeoutMillis;

  private final java.lang.Long connectionTimeAliveMillis;

  private final io.micronaut.http.filter.HttpClientFilterResolver<io.micronaut.http.client.filter.ClientFilterResolutionContext> filterResolver;

  private final io.micronaut.websocket.context.WebSocketBeanRegistry webSocketRegistry;

  private final io.micronaut.http.bind.RequestBinderRegistry requestBinderRegistry;

  private final java.util.Collection<io.micronaut.http.netty.channel.ChannelPipelineListener> pipelineListeners;

  private final io.micronaut.http.client.netty.NettyClientCustomizer clientCustomizer;

  private final java.util.List<io.micronaut.scheduling.instrument.InvocationInstrumenterFactory> invocationInstrumenterFactories;

  private final java.lang.String informationalServiceId;

  public io.micronaut.http.client.netty.DefaultHttpClient(io.micronaut.http.client.LoadBalancer, io.micronaut.http.client.HttpClientConfiguration, java.lang.String, java.util.concurrent.ThreadFactory, io.micronaut.http.client.netty.ssl.NettyClientSslBuilder, io.micronaut.http.codec.MediaTypeCodecRegistry, io.micronaut.core.annotation.AnnotationMetadataResolver, java.util.List<io.micronaut.scheduling.instrument.InvocationInstrumenterFactory>, io.micronaut.http.filter.HttpClientFilter...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #29                 // Method io/micronaut/http/client/HttpClientConfiguration.getHttpVersion:()Lio/micronaut/http/HttpVersion;
       6: aload_2
       7: aload_3
       8: new           #30                 // class io/micronaut/http/client/filter/DefaultHttpClientFilterResolver
      11: dup
      12: aload         7
      14: aload         9
      16: invokestatic  #31                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      19: invokespecial #32                 // Method io/micronaut/http/client/filter/DefaultHttpClientFilterResolver."<init>":(Lio/micronaut/core/annotation/AnnotationMetadataResolver;Ljava/util/List;)V
      22: aconst_null
      23: aload         4
      25: aload         5
      27: aload         6
      29: getstatic     #33                 // Field io/micronaut/websocket/context/WebSocketBeanRegistry.EMPTY:Lio/micronaut/websocket/context/WebSocketBeanRegistry;
      32: new           #34                 // class io/micronaut/http/bind/DefaultRequestBinderRegistry
      35: dup
      36: getstatic     #35                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
      39: iconst_0
      40: anewarray     #36                 // class io/micronaut/http/bind/binders/RequestArgumentBinder
      43: invokespecial #37                 // Method io/micronaut/http/bind/DefaultRequestBinderRegistry."<init>":(Lio/micronaut/core/convert/ConversionService;[Lio/micronaut/http/bind/binders/RequestArgumentBinder;)V
      46: aconst_null
      47: invokedynamic #38,  0             // InvokeDynamic #0:newChannel:()Lio/netty/channel/ChannelFactory;
      52: invokestatic  #39                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      55: getstatic     #40                 // Field io/micronaut/http/client/netty/CompositeNettyClientCustomizer.EMPTY:Lio/micronaut/http/client/netty/NettyClientCustomizer;
      58: aload         8
      60: aconst_null
      61: invokespecial #41                 // Method "<init>":(Lio/micronaut/http/client/LoadBalancer;Lio/micronaut/http/HttpVersion;Lio/micronaut/http/client/HttpClientConfiguration;Ljava/lang/String;Lio/micronaut/http/filter/HttpClientFilterResolver;Ljava/util/List;Ljava/util/concurrent/ThreadFactory;Lio/micronaut/http/client/netty/ssl/NettyClientSslBuilder;Lio/micronaut/http/codec/MediaTypeCodecRegistry;Lio/micronaut/websocket/context/WebSocketBeanRegistry;Lio/micronaut/http/bind/RequestBinderRegistry;Lio/netty/channel/EventLoopGroup;Lio/netty/channel/ChannelFactory;Ljava/util/Collection;Lio/micronaut/http/client/netty/NettyClientCustomizer;Ljava/util/List;Ljava/lang/String;)V
      64: return

  public io.micronaut.http.client.netty.DefaultHttpClient(io.micronaut.http.client.LoadBalancer, io.micronaut.http.HttpVersion, io.micronaut.http.client.HttpClientConfiguration, java.lang.String, io.micronaut.http.filter.HttpClientFilterResolver<io.micronaut.http.client.filter.ClientFilterResolutionContext>, java.util.List<io.micronaut.http.filter.HttpFilterResolver$FilterEntry<io.micronaut.http.filter.HttpClientFilter>>, java.util.concurrent.ThreadFactory, io.micronaut.http.client.netty.ssl.NettyClientSslBuilder, io.micronaut.http.codec.MediaTypeCodecRegistry, io.micronaut.websocket.context.WebSocketBeanRegistry, io.micronaut.http.bind.RequestBinderRegistry, io.netty.channel.EventLoopGroup, io.netty.channel.ChannelFactory, java.util.Collection<io.micronaut.http.netty.channel.ChannelPipelineListener>, io.micronaut.http.client.netty.NettyClientCustomizer, java.util.List<io.micronaut.scheduling.instrument.InvocationInstrumenterFactory>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #43                 // class io/micronaut/buffer/netty/NettyByteBufferFactory
       8: dup
       9: invokespecial #44                 // Method io/micronaut/buffer/netty/NettyByteBufferFactory."<init>":()V
      12: putfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      15: ldc           #46                 // String nettyClientSslBuilder
      17: aload         8
      19: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: ldc           #48                 // String codecRegistry
      25: aload         9
      27: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: ldc           #49                 // String webSocketBeanRegistry
      33: aload         10
      35: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: ldc           #50                 // String requestBinderRegistry
      41: aload         11
      43: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: ldc           #51                 // String configuration
      49: aload_3
      50: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: ldc           #52                 // String filterResolver
      56: aload         5
      58: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: ldc           #53                 // String socketChannelFactory
      64: aload         13
      66: invokestatic  #47                 // Method io/micronaut/core/util/ArgumentUtils.requireNonNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload_0
      71: aload_1
      72: putfield      #54                 // Field loadBalancer:Lio/micronaut/http/client/LoadBalancer;
      75: aload_0
      76: aload_2
      77: ifnull        84
      80: aload_2
      81: goto          88
      84: aload_3
      85: invokevirtual #29                 // Method io/micronaut/http/client/HttpClientConfiguration.getHttpVersion:()Lio/micronaut/http/HttpVersion;
      88: putfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
      91: aload_0
      92: aload_3
      93: invokevirtual #55                 // Method io/micronaut/http/client/HttpClientConfiguration.getDefaultCharset:()Ljava/nio/charset/Charset;
      96: putfield      #56                 // Field defaultCharset:Ljava/nio/charset/Charset;
      99: aload         4
     101: invokestatic  #57                 // Method io/micronaut/core/util/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
     104: ifeq          149
     107: aload         4
     109: iconst_0
     110: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
     113: bipush        47
     115: if_icmpeq     140
     118: new           #59                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     125: bipush        47
     127: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     130: aload         4
     132: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: astore        4
     140: aload_0
     141: aload         4
     143: putfield      #64                 // Field contextPath:Ljava/lang/String;
     146: goto          154
     149: aload_0
     150: aconst_null
     151: putfield      #64                 // Field contextPath:Ljava/lang/String;
     154: aload_0
     155: new           #65                 // class io/netty/bootstrap/Bootstrap
     158: dup
     159: invokespecial #66                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
     162: putfield      #67                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
     165: aload_0
     166: aload_3
     167: putfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
     170: aload_0
     171: aload         8
     173: aload_3
     174: invokevirtual #68                 // Method io/micronaut/http/client/HttpClientConfiguration.getSslConfiguration:()Lio/micronaut/http/ssl/SslConfiguration;
     177: aload_0
     178: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
     181: invokevirtual #69                 // Method io/micronaut/http/client/netty/ssl/NettyClientSslBuilder.build:(Lio/micronaut/http/ssl/SslConfiguration;Lio/micronaut/http/HttpVersion;)Ljava/util/Optional;
     184: aconst_null
     185: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     188: checkcast     #71                 // class io/netty/handler/ssl/SslContext
     191: putfield      #23                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
     194: aload         12
     196: ifnull        213
     199: aload_0
     200: aload         12
     202: putfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
     205: aload_0
     206: iconst_0
     207: putfield      #73                 // Field shutdownGroup:Z
     210: goto          229
     213: aload_0
     214: aload_0
     215: aload_3
     216: aload         7
     218: invokevirtual #74                 // Method createEventLoopGroup:(Lio/micronaut/http/client/HttpClientConfiguration;Ljava/util/concurrent/ThreadFactory;)Lio/netty/channel/nio/NioEventLoopGroup;
     221: putfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
     224: aload_0
     225: iconst_1
     226: putfield      #73                 // Field shutdownGroup:Z
     229: aload_0
     230: aload_0
     231: getfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
     234: invokestatic  #75                 // Method reactor/core/scheduler/Schedulers.fromExecutorService:(Ljava/util/concurrent/ExecutorService;)Lreactor/core/scheduler/Scheduler;
     237: putfield      #76                 // Field scheduler:Lreactor/core/scheduler/Scheduler;
     240: aload_0
     241: aload         7
     243: putfield      #77                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
     246: aload_0
     247: getfield      #67                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
     250: aload_0
     251: getfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
     254: invokevirtual #78                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
     257: checkcast     #65                 // class io/netty/bootstrap/Bootstrap
     260: aload         13
     262: invokevirtual #79                 // Method io/netty/bootstrap/Bootstrap.channelFactory:(Lio/netty/channel/ChannelFactory;)Lio/netty/bootstrap/AbstractBootstrap;
     265: checkcast     #65                 // class io/netty/bootstrap/Bootstrap
     268: getstatic     #80                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
     271: iconst_1
     272: invokestatic  #81                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     275: invokevirtual #82                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     278: pop
     279: aload_3
     280: invokevirtual #83                 // Method io/micronaut/http/client/HttpClientConfiguration.getReadTimeout:()Ljava/util/Optional;
     283: astore        18
     285: aload_0
     286: aload         18
     288: invokedynamic #84,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     293: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     296: aconst_null
     297: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     300: checkcast     #86                 // class java/lang/Long
     303: putfield      #87                 // Field readTimeoutMillis:Ljava/lang/Long;
     306: aload_3
     307: invokevirtual #88                 // Method io/micronaut/http/client/HttpClientConfiguration.getConnectTtl:()Ljava/util/Optional;
     310: astore        19
     312: aload_0
     313: aload         19
     315: invokedynamic #89,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     320: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     323: aconst_null
     324: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     327: checkcast     #86                 // class java/lang/Long
     330: putfield      #22                 // Field connectionTimeAliveMillis:Ljava/lang/Long;
     333: aload_0
     334: aload         16
     336: ifnonnull     345
     339: invokestatic  #90                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     342: goto          347
     345: aload         16
     347: putfield      #91                 // Field invocationInstrumenterFactories:Ljava/util/List;
     350: aload_3
     351: invokevirtual #92                 // Method io/micronaut/http/client/HttpClientConfiguration.getConnectionPoolConfiguration:()Lio/micronaut/http/client/HttpClientConfiguration$ConnectionPoolConfiguration;
     354: astore        20
     356: aload         20
     358: invokevirtual #93                 // Method io/micronaut/http/client/HttpClientConfiguration$ConnectionPoolConfiguration.isEnabled:()Z
     361: ifne          374
     364: aload_0
     365: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
     368: getstatic     #94                 // Field io/micronaut/http/HttpVersion.HTTP_2_0:Lio/micronaut/http/HttpVersion;
     371: if_acmpne     421
     374: aload         20
     376: invokevirtual #95                 // Method io/micronaut/http/client/HttpClientConfiguration$ConnectionPoolConfiguration.getMaxConnections:()I
     379: istore        21
     381: iload         21
     383: iconst_m1
     384: if_icmple     406
     387: aload_0
     388: new           #96                 // class io/micronaut/http/client/netty/DefaultHttpClient$1
     391: dup
     392: aload_0
     393: aload         20
     395: iload         21
     397: invokespecial #97                 // Method io/micronaut/http/client/netty/DefaultHttpClient$1."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/HttpClientConfiguration$ConnectionPoolConfiguration;I)V
     400: putfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
     403: goto          418
     406: aload_0
     407: new           #98                 // class io/micronaut/http/client/netty/DefaultHttpClient$2
     410: dup
     411: aload_0
     412: invokespecial #99                 // Method io/micronaut/http/client/netty/DefaultHttpClient$2."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;)V
     415: putfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
     418: goto          426
     421: aload_0
     422: aconst_null
     423: putfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
     426: aload_3
     427: invokevirtual #100                // Method io/micronaut/http/client/HttpClientConfiguration.getConnectTimeout:()Ljava/util/Optional;
     430: astore        21
     432: aload         21
     434: aload_0
     435: invokedynamic #101,  0            // InvokeDynamic #3:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Ljava/util/function/Consumer;
     440: invokevirtual #102                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     443: aload_3
     444: invokevirtual #103                // Method io/micronaut/http/client/HttpClientConfiguration.getChannelOptions:()Ljava/util/Map;
     447: invokeinterface #104,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     452: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     457: astore        22
     459: aload         22
     461: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     466: ifeq          525
     469: aload         22
     471: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     476: checkcast     #108                // class java/util/Map$Entry
     479: astore        23
     481: aload         23
     483: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     488: astore        24
     490: aload         24
     492: ifnull        522
     495: aload         23
     497: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     502: checkcast     #111                // class java/lang/String
     505: astore        25
     507: aload_0
     508: getfield      #67                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
     511: aload         25
     513: invokestatic  #112                // Method io/netty/channel/ChannelOption.valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     516: aload         24
     518: invokevirtual #82                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     521: pop
     522: goto          459
     525: aload_0
     526: aload         9
     528: putfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
     531: aload_0
     532: aload_3
     533: invokevirtual #114                // Method io/micronaut/http/client/HttpClientConfiguration.getLoggerName:()Ljava/util/Optional;
     536: invokedynamic #115,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
     541: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     544: getstatic     #116                // Field DEFAULT_LOG:Lorg/slf4j/Logger;
     547: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     550: checkcast     #117                // class org/slf4j/Logger
     553: putfield      #10                 // Field log:Lorg/slf4j/Logger;
     556: aload_0
     557: aload         5
     559: putfield      #118                // Field filterResolver:Lio/micronaut/http/filter/HttpClientFilterResolver;
     562: aload         6
     564: ifnull        576
     567: aload_0
     568: aload         6
     570: putfield      #119                // Field clientFilterEntries:Ljava/util/List;
     573: goto          598
     576: aload_0
     577: aload         5
     579: new           #120                // class io/micronaut/http/client/filter/ClientFilterResolutionContext
     582: dup
     583: aconst_null
     584: getstatic     #121                // Field io/micronaut/core/annotation/AnnotationMetadata.EMPTY_METADATA:Lio/micronaut/core/annotation/AnnotationMetadata;
     587: invokespecial #122                // Method io/micronaut/http/client/filter/ClientFilterResolutionContext."<init>":(Ljava/util/List;Lio/micronaut/core/annotation/AnnotationMetadata;)V
     590: invokeinterface #123,  2          // InterfaceMethod io/micronaut/http/filter/HttpClientFilterResolver.resolveFilterEntries:(Lio/micronaut/core/annotation/AnnotationMetadataProvider;)Ljava/util/List;
     595: putfield      #119                // Field clientFilterEntries:Ljava/util/List;
     598: aload_0
     599: aload         10
     601: ifnull        609
     604: aload         10
     606: goto          612
     609: getstatic     #33                 // Field io/micronaut/websocket/context/WebSocketBeanRegistry.EMPTY:Lio/micronaut/websocket/context/WebSocketBeanRegistry;
     612: putfield      #124                // Field webSocketRegistry:Lio/micronaut/websocket/context/WebSocketBeanRegistry;
     615: aload_0
     616: aload         11
     618: putfield      #3                  // Field requestBinderRegistry:Lio/micronaut/http/bind/RequestBinderRegistry;
     621: aload_0
     622: aload         14
     624: putfield      #25                 // Field pipelineListeners:Ljava/util/Collection;
     627: aload_0
     628: aload         15
     630: putfield      #19                 // Field clientCustomizer:Lio/micronaut/http/client/netty/NettyClientCustomizer;
     633: aload_0
     634: aload         17
     636: putfield      #125                // Field informationalServiceId:Ljava/lang/String;
     639: return

  public io.micronaut.http.client.netty.DefaultHttpClient(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: new           #126                // class io/micronaut/http/client/DefaultHttpClientConfiguration
       5: dup
       6: invokespecial #127                // Method io/micronaut/http/client/DefaultHttpClientConfiguration."<init>":()V
       9: invokespecial #128                // Method "<init>":(Ljava/net/URI;Lio/micronaut/http/client/HttpClientConfiguration;)V
      12: return

  public io.micronaut.http.client.netty.DefaultHttpClient();
    Code:
       0: aload_0
       1: aconst_null
       2: new           #126                // class io/micronaut/http/client/DefaultHttpClientConfiguration
       5: dup
       6: invokespecial #127                // Method io/micronaut/http/client/DefaultHttpClientConfiguration."<init>":()V
       9: invokestatic  #90                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: invokespecial #129                // Method "<init>":(Lio/micronaut/http/client/LoadBalancer;Lio/micronaut/http/client/HttpClientConfiguration;Ljava/util/List;)V
      15: return

  public io.micronaut.http.client.netty.DefaultHttpClient(java.net.URI, io.micronaut.http.client.HttpClientConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          13
       9: aload_1
      10: invokestatic  #130                // InterfaceMethod io/micronaut/http/client/LoadBalancer.fixed:(Ljava/net/URI;)Lio/micronaut/http/client/LoadBalancer;
      13: aload_2
      14: aconst_null
      15: new           #131                // class io/netty/util/concurrent/DefaultThreadFactory
      18: dup
      19: ldc           #132                // class io/netty/channel/MultithreadEventLoopGroup
      21: invokespecial #133                // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/Class;)V
      24: new           #134                // class io/micronaut/http/client/netty/ssl/NettyClientSslBuilder
      27: dup
      28: new           #135                // class io/micronaut/core/io/ResourceResolver
      31: dup
      32: invokespecial #136                // Method io/micronaut/core/io/ResourceResolver."<init>":()V
      35: invokespecial #137                // Method io/micronaut/http/client/netty/ssl/NettyClientSslBuilder."<init>":(Lio/micronaut/core/io/ResourceResolver;)V
      38: invokestatic  #138                // Method createDefaultMediaTypeRegistry:()Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      41: getstatic     #139                // Field io/micronaut/core/annotation/AnnotationMetadataResolver.DEFAULT:Lio/micronaut/core/annotation/AnnotationMetadataResolver;
      44: invokestatic  #90                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      47: iconst_0
      48: anewarray     #140                // class io/micronaut/http/filter/HttpClientFilter
      51: invokespecial #141                // Method "<init>":(Lio/micronaut/http/client/LoadBalancer;Lio/micronaut/http/client/HttpClientConfiguration;Ljava/lang/String;Ljava/util/concurrent/ThreadFactory;Lio/micronaut/http/client/netty/ssl/NettyClientSslBuilder;Lio/micronaut/http/codec/MediaTypeCodecRegistry;Lio/micronaut/core/annotation/AnnotationMetadataResolver;Ljava/util/List;[Lio/micronaut/http/filter/HttpClientFilter;)V
      54: return

  public io.micronaut.http.client.netty.DefaultHttpClient(io.micronaut.http.client.LoadBalancer, io.micronaut.http.client.HttpClientConfiguration, java.util.List<io.micronaut.scheduling.instrument.InvocationInstrumenterFactory>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: new           #131                // class io/netty/util/concurrent/DefaultThreadFactory
       7: dup
       8: ldc           #132                // class io/netty/channel/MultithreadEventLoopGroup
      10: invokespecial #133                // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/Class;)V
      13: new           #134                // class io/micronaut/http/client/netty/ssl/NettyClientSslBuilder
      16: dup
      17: new           #135                // class io/micronaut/core/io/ResourceResolver
      20: dup
      21: invokespecial #136                // Method io/micronaut/core/io/ResourceResolver."<init>":()V
      24: invokespecial #137                // Method io/micronaut/http/client/netty/ssl/NettyClientSslBuilder."<init>":(Lio/micronaut/core/io/ResourceResolver;)V
      27: invokestatic  #138                // Method createDefaultMediaTypeRegistry:()Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      30: getstatic     #139                // Field io/micronaut/core/annotation/AnnotationMetadataResolver.DEFAULT:Lio/micronaut/core/annotation/AnnotationMetadataResolver;
      33: aload_3
      34: iconst_0
      35: anewarray     #140                // class io/micronaut/http/filter/HttpClientFilter
      38: invokespecial #141                // Method "<init>":(Lio/micronaut/http/client/LoadBalancer;Lio/micronaut/http/client/HttpClientConfiguration;Ljava/lang/String;Ljava/util/concurrent/ThreadFactory;Lio/micronaut/http/client/netty/ssl/NettyClientSslBuilder;Lio/micronaut/http/codec/MediaTypeCodecRegistry;Lio/micronaut/core/annotation/AnnotationMetadataResolver;Ljava/util/List;[Lio/micronaut/http/filter/HttpClientFilter;)V
      41: return

  public io.micronaut.http.client.HttpClientConfiguration getConfiguration();
    Code:
       0: aload_0
       1: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
       4: areturn

  public org.slf4j.Logger getLog();
    Code:
       0: aload_0
       1: getfield      #10                 // Field log:Lorg/slf4j/Logger;
       4: areturn

  public io.micronaut.http.client.HttpClient start();
    Code:
       0: aload_0
       1: invokevirtual #142                // Method isRunning:()Z
       4: ifne          23
       7: aload_0
       8: aload_0
       9: aload_0
      10: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
      13: aload_0
      14: getfield      #77                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      17: invokevirtual #74                 // Method createEventLoopGroup:(Lio/micronaut/http/client/HttpClientConfiguration;Ljava/util/concurrent/ThreadFactory;)Lio/netty/channel/nio/NioEventLoopGroup;
      20: putfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
      23: aload_0
      24: areturn

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
       4: invokeinterface #143,  1          // InterfaceMethod io/netty/channel/EventLoopGroup.isShutdown:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public io.micronaut.http.client.HttpClient stop();
    Code:
       0: aload_0
       1: invokevirtual #142                // Method isRunning:()Z
       4: ifeq          235
       7: aload_0
       8: getfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
      11: instanceof    #144                // class java/lang/Iterable
      14: ifeq          141
      17: aload_0
      18: getfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
      21: checkcast     #144                // class java/lang/Iterable
      24: astore_1
      25: aload_1
      26: invokeinterface #145,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          141
      41: aload_2
      42: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #108                // class java/util/Map$Entry
      50: astore_3
      51: aload_3
      52: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      57: checkcast     #146                // class io/netty/channel/pool/ChannelPool
      60: astore        4
      62: aload         4
      64: instanceof    #147                // class io/netty/channel/pool/SimpleChannelPool
      67: ifeq          92
      70: aload_0
      71: aload         4
      73: checkcast     #147                // class io/netty/channel/pool/SimpleChannelPool
      76: invokevirtual #148                // Method io/netty/channel/pool/SimpleChannelPool.closeAsync:()Lio/netty/util/concurrent/Future;
      79: aload_0
      80: invokedynamic #149,  0            // InvokeDynamic #5:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Lio/netty/util/concurrent/GenericFutureListener;
      85: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      88: pop
      89: goto          99
      92: aload         4
      94: invokeinterface #150,  1          // InterfaceMethod io/netty/channel/pool/ChannelPool.close:()V
      99: goto          138
     102: astore        5
     104: aload_0
     105: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     108: new           #59                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #152                // String Error shutting down HTTP client connection pool:
     117: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload         5
     122: invokevirtual #153                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     125: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: aload         5
     133: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     138: goto          32
     141: aload_0
     142: getfield      #73                 // Field shutdownGroup:Z
     145: ifeq          235
     148: aload_0
     149: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
     152: invokevirtual #155                // Method io/micronaut/http/client/HttpClientConfiguration.getShutdownTimeout:()Ljava/util/Optional;
     155: ldc2_w        #156                // long 100l
     158: invokestatic  #158                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     161: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     164: checkcast     #159                // class java/time/Duration
     167: astore_1
     168: aload_0
     169: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
     172: invokevirtual #160                // Method io/micronaut/http/client/HttpClientConfiguration.getShutdownQuietPeriod:()Ljava/util/Optional;
     175: lconst_1
     176: invokestatic  #158                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     179: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     182: checkcast     #159                // class java/time/Duration
     185: astore_2
     186: aload_0
     187: getfield      #72                 // Field group:Lio/netty/channel/EventLoopGroup;
     190: aload_2
     191: invokevirtual #161                // Method java/time/Duration.toMillis:()J
     194: aload_1
     195: invokevirtual #161                // Method java/time/Duration.toMillis:()J
     198: getstatic     #162                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     201: invokeinterface #163,  6          // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:(JJLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/Future;
     206: astore_3
     207: aload_0
     208: aload_3
     209: aload_0
     210: invokedynamic #164,  0            // InvokeDynamic #6:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Lio/netty/util/concurrent/GenericFutureListener;
     215: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
     218: pop
     219: aload_3
     220: aload_1
     221: invokevirtual #161                // Method java/time/Duration.toMillis:()J
     224: invokeinterface #165,  3          // InterfaceMethod io/netty/util/concurrent/Future.await:(J)Z
     229: pop
     230: goto          235
     233: astore        4
     235: aload_0
     236: areturn
    Exception table:
       from    to  target type
          62    99   102   Class java/lang/Exception
         219   230   233   Class java/lang/InterruptedException

  public io.micronaut.http.codec.MediaTypeCodecRegistry getMediaTypeCodecRegistry();
    Code:
       0: aload_0
       1: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
       4: areturn

  public void setMediaTypeCodecRegistry(io.micronaut.http.codec.MediaTypeCodecRegistry);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_0
       5: aload_1
       6: putfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
       9: return

  public io.micronaut.http.client.BlockingHttpClient toBlocking();
    Code:
       0: new           #167                // class io/micronaut/http/client/netty/DefaultHttpClient$3
       3: dup
       4: aload_0
       5: invokespecial #168                // Method io/micronaut/http/client/netty/DefaultHttpClient$3."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;)V
       8: areturn

  public <I> org.reactivestreams.Publisher<io.micronaut.http.sse.Event<io.micronaut.core.io.buffer.ByteBuffer<?>>> eventStream(io.micronaut.http.HttpRequest<I>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #169                // Method eventStreamOrError:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       6: areturn

  private <I> org.reactivestreams.Publisher<io.micronaut.http.sse.Event<io.micronaut.core.io.buffer.ByteBuffer<?>>> eventStreamOrError(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<?>);
    Code:
       0: aload_1
       1: instanceof    #170                // class io/micronaut/http/MutableHttpRequest
       4: ifeq          27
       7: aload_1
       8: checkcast     #170                // class io/micronaut/http/MutableHttpRequest
      11: iconst_1
      12: anewarray     #171                // class io/micronaut/http/MediaType
      15: dup
      16: iconst_0
      17: getstatic     #172                // Field io/micronaut/http/MediaType.TEXT_EVENT_STREAM_TYPE:Lio/micronaut/http/MediaType;
      20: aastore
      21: invokeinterface #173,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.accept:([Lio/micronaut/http/MediaType;)Lio/micronaut/http/MutableHttpRequest;
      26: pop
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokedynamic #174,  0            // InvokeDynamic #7:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Ljava/util/function/Consumer;
      35: getstatic     #175                // Field reactor/core/publisher/FluxSink$OverflowStrategy.BUFFER:Lreactor/core/publisher/FluxSink$OverflowStrategy;
      38: invokestatic  #176                // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
      41: areturn

  public <I, B> org.reactivestreams.Publisher<io.micronaut.http.sse.Event<B>> eventStream(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #177                // Field DEFAULT_ERROR_TYPE:Lio/micronaut/core/type/Argument;
       6: invokevirtual #178                // Method eventStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       9: areturn

  public <I, B> org.reactivestreams.Publisher<io.micronaut.http.sse.Event<B>> eventStream(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<B>, io.micronaut.core.type.Argument<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #169                // Method eventStreamOrError:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       6: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       9: aload_0
      10: aload_2
      11: invokedynamic #180,  0            // InvokeDynamic #8:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      16: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      19: areturn

  public <I> org.reactivestreams.Publisher<io.micronaut.core.io.buffer.ByteBuffer<?>> dataStream(io.micronaut.http.HttpRequest<I>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #177                // Field DEFAULT_ERROR_TYPE:Lio/micronaut/core/type/Argument;
       5: invokevirtual #182                // Method dataStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       8: areturn

  public <I> org.reactivestreams.Publisher<io.micronaut.core.io.buffer.ByteBuffer<?>> dataStream(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<?>);
    Code:
       0: invokestatic  #183                // Method io/micronaut/http/context/ServerRequestContext.currentRequest:()Ljava/util/Optional;
       3: aconst_null
       4: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #184                // class io/micronaut/http/HttpRequest
      10: astore_3
      11: new           #185                // class io/micronaut/http/client/netty/MicronautFlux
      14: dup
      15: aload_0
      16: aload_1
      17: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
      20: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: invokedynamic #187,  0            // InvokeDynamic #9:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/http/HttpRequest;)Ljava/util/function/Function;
      32: invokevirtual #188                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      35: invokespecial #189                // Method io/micronaut/http/client/netty/MicronautFlux."<init>":(Lreactor/core/publisher/Flux;)V
      38: invokedynamic #190,  0            // InvokeDynamic #10:accept:()Ljava/util/function/Consumer;
      43: invokevirtual #191                // Method io/micronaut/http/client/netty/MicronautFlux.doAfterNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      46: areturn

  public <I> org.reactivestreams.Publisher<io.micronaut.http.HttpResponse<io.micronaut.core.io.buffer.ByteBuffer<?>>> exchangeStream(io.micronaut.http.HttpRequest<I>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #177                // Field DEFAULT_ERROR_TYPE:Lio/micronaut/core/type/Argument;
       5: invokevirtual #192                // Method exchangeStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       8: areturn

  public <I> org.reactivestreams.Publisher<io.micronaut.http.HttpResponse<io.micronaut.core.io.buffer.ByteBuffer<?>>> exchangeStream(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<?>);
    Code:
       0: invokestatic  #183                // Method io/micronaut/http/context/ServerRequestContext.currentRequest:()Ljava/util/Optional;
       3: aconst_null
       4: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #184                // class io/micronaut/http/HttpRequest
      10: astore_3
      11: new           #185                // class io/micronaut/http/client/netty/MicronautFlux
      14: dup
      15: aload_0
      16: aload_1
      17: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
      20: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      23: aload_0
      24: aload_3
      25: aload_1
      26: aload_2
      27: invokedynamic #193,  0            // InvokeDynamic #11:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      32: invokevirtual #188                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      35: invokespecial #189                // Method io/micronaut/http/client/netty/MicronautFlux."<init>":(Lreactor/core/publisher/Flux;)V
      38: invokedynamic #194,  0            // InvokeDynamic #12:accept:()Ljava/util/function/Consumer;
      43: invokevirtual #191                // Method io/micronaut/http/client/netty/MicronautFlux.doAfterNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      46: areturn

  public <I, O> org.reactivestreams.Publisher<O> jsonStream(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #177                // Field DEFAULT_ERROR_TYPE:Lio/micronaut/core/type/Argument;
       6: invokevirtual #195                // Method jsonStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       9: areturn

  public <I, O> org.reactivestreams.Publisher<O> jsonStream(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<?>);
    Code:
       0: invokestatic  #183                // Method io/micronaut/http/context/ServerRequestContext.currentRequest:()Ljava/util/Optional;
       3: aconst_null
       4: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #184                // class io/micronaut/http/HttpRequest
      10: astore        4
      12: aload_0
      13: aload_1
      14: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
      17: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      20: aload_0
      21: aload         4
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokedynamic #196,  0            // InvokeDynamic #13:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      31: invokevirtual #188                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      34: areturn

  public <I> org.reactivestreams.Publisher<java.util.Map<java.lang.String, java.lang.Object>> jsonStream(io.micronaut.http.HttpRequest<I>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #197                // class java/util/Map
       4: invokevirtual #198                // Method jsonStream:(Lio/micronaut/http/HttpRequest;Ljava/lang/Class;)Lorg/reactivestreams/Publisher;
       7: areturn

  public <I, O> org.reactivestreams.Publisher<O> jsonStream(io.micronaut.http.HttpRequest<I>, java.lang.Class<O>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #199                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
       6: invokevirtual #200                // Method jsonStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       9: areturn

  public <I, O, E> org.reactivestreams.Publisher<io.micronaut.http.HttpResponse<O>> exchange(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<E>);
    Code:
       0: invokestatic  #183                // Method io/micronaut/http/context/ServerRequestContext.currentRequest:()Ljava/util/Optional;
       3: aconst_null
       4: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #184                // class io/micronaut/http/HttpRequest
      10: astore        4
      12: aload_0
      13: aload_1
      14: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
      17: astore        5
      19: aload         5
      21: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      24: aload_0
      25: aload         4
      27: aload_1
      28: aload_2
      29: aload_3
      30: invokedynamic #201,  0            // InvokeDynamic #14:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      35: invokevirtual #202                // Method reactor/core/publisher/Flux.switchMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      38: areturn

  public <I, O, E> org.reactivestreams.Publisher<O> retrieve(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #203                // Method exchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       7: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      10: aload_0
      11: aload_2
      12: invokedynamic #204,  0            // InvokeDynamic #15:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      17: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      20: areturn

  public <T extends java.lang.AutoCloseable> org.reactivestreams.Publisher<T> connect(java.lang.Class<T>, io.micronaut.http.MutableHttpRequest<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
       5: astore_3
       6: aload_3
       7: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      10: aload_0
      11: aload_2
      12: aload_1
      13: invokedynamic #205,  0            // InvokeDynamic #16:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/MutableHttpRequest;Ljava/lang/Class;)Ljava/util/function/Function;
      18: invokevirtual #202                // Method reactor/core/publisher/Flux.switchMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      21: areturn

  public <T extends java.lang.AutoCloseable> org.reactivestreams.Publisher<T> connect(java.lang.Class<T>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #124                // Field webSocketRegistry:Lio/micronaut/websocket/context/WebSocketBeanRegistry;
       4: aload_1
       5: invokeinterface #206,  2          // InterfaceMethod io/micronaut/websocket/context/WebSocketBeanRegistry.getWebSocket:(Ljava/lang/Class;)Lio/micronaut/websocket/context/WebSocketBean;
      10: astore_3
      11: aload_3
      12: invokeinterface #207,  1          // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.getBeanDefinition:()Lio/micronaut/inject/BeanDefinition;
      17: ldc           #208                // class io/micronaut/websocket/annotation/ClientWebSocket
      19: invokeinterface #209,  2          // InterfaceMethod io/micronaut/inject/BeanDefinition.stringValue:(Ljava/lang/Class;)Ljava/util/Optional;
      24: ldc           #210                // String /ws
      26: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #111                // class java/lang/String
      32: astore        4
      34: aload         4
      36: invokestatic  #211                // Method io/micronaut/http/uri/UriTemplate.of:(Ljava/lang/String;)Lio/micronaut/http/uri/UriTemplate;
      39: aload_2
      40: invokevirtual #212                // Method io/micronaut/http/uri/UriTemplate.expand:(Ljava/util/Map;)Ljava/lang/String;
      43: astore        4
      45: aload         4
      47: invokestatic  #213                // InterfaceMethod io/micronaut/http/HttpRequest.GET:(Ljava/lang/String;)Lio/micronaut/http/MutableHttpRequest;
      50: astore        5
      52: aload_0
      53: aload         5
      55: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
      58: astore        6
      60: aload         6
      62: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      65: aload_0
      66: aload         5
      68: aload_1
      69: aload_3
      70: invokedynamic #214,  0            // InvokeDynamic #17:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/MutableHttpRequest;Ljava/lang/Class;Lio/micronaut/websocket/context/WebSocketBean;)Ljava/util/function/Function;
      75: invokevirtual #202                // Method reactor/core/publisher/Flux.switchMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      78: areturn

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method stop:()Lio/micronaut/http/client/HttpClient;
       4: pop
       5: return

  private <T> reactor.core.publisher.Flux<T> connectWebSocket(java.net.URI, io.micronaut.http.MutableHttpRequest<?>, java.lang.Class<T>, io.micronaut.websocket.context.WebSocketBean<T>);
    Code:
       0: aload_0
       1: getfield      #67                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
       4: invokevirtual #216                // Method io/netty/bootstrap/Bootstrap.clone:()Lio/netty/bootstrap/Bootstrap;
       7: astore        5
       9: aload         4
      11: ifnonnull     26
      14: aload_0
      15: getfield      #124                // Field webSocketRegistry:Lio/micronaut/websocket/context/WebSocketBeanRegistry;
      18: aload_3
      19: invokeinterface #206,  2          // InterfaceMethod io/micronaut/websocket/context/WebSocketBeanRegistry.getWebSocket:(Ljava/lang/Class;)Lio/micronaut/websocket/context/WebSocketBean;
      24: astore        4
      26: aload         4
      28: astore        6
      30: aload_0
      31: aload_1
      32: aload         6
      34: aload         5
      36: aload_2
      37: invokedynamic #217,  0            // InvokeDynamic #18:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/net/URI;Lio/micronaut/websocket/context/WebSocketBean;Lio/netty/bootstrap/Bootstrap;Lio/micronaut/http/MutableHttpRequest;)Ljava/util/function/Consumer;
      42: getstatic     #218                // Field reactor/core/publisher/FluxSink$OverflowStrategy.ERROR:Lreactor/core/publisher/FluxSink$OverflowStrategy;
      45: invokestatic  #176                // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
      48: areturn

  private <I> reactor.core.publisher.Flux<io.micronaut.http.HttpResponse<io.micronaut.core.io.buffer.ByteBuffer<?>>> exchangeStreamImpl(io.micronaut.http.HttpRequest<java.lang.Object>, io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<?>, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload_3
       6: invokespecial #4                  // Method buildStreamExchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       9: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: astore        5
      14: aload         5
      16: aload_0
      17: aload_2
      18: invokedynamic #219,  0            // InvokeDynamic #19:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;)Ljava/util/function/Function;
      23: invokevirtual #202                // Method reactor/core/publisher/Flux.switchMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      26: aload_2
      27: invokedynamic #220,  0            // InvokeDynamic #20:run:(Lio/micronaut/http/HttpRequest;)Ljava/lang/Runnable;
      32: invokevirtual #221                // Method reactor/core/publisher/Flux.doOnTerminate:(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
      35: areturn

  private <I, O> reactor.core.publisher.Flux<O> jsonStreamImpl(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<?>, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         5
       5: aload         4
       7: invokespecial #4                  // Method buildStreamExchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
      10: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      13: astore        6
      15: aload         6
      17: aload_0
      18: aload_3
      19: aload_2
      20: invokedynamic #222,  0            // InvokeDynamic #21:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/core/type/Argument;Lio/micronaut/http/HttpRequest;)Ljava/util/function/Function;
      25: invokevirtual #202                // Method reactor/core/publisher/Flux.switchMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      28: aload_2
      29: invokedynamic #223,  0            // InvokeDynamic #22:run:(Lio/micronaut/http/HttpRequest;)Ljava/lang/Runnable;
      34: invokevirtual #221                // Method reactor/core/publisher/Flux.doOnTerminate:(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
      37: areturn

  private <I> reactor.core.publisher.Flux<io.micronaut.core.io.buffer.ByteBuffer<?>> dataStreamImpl(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<?>, io.micronaut.http.HttpRequest<java.lang.Object>, java.net.URI);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload         4
       5: aload_2
       6: invokespecial #4                  // Method buildStreamExchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       9: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: astore        5
      14: aload_0
      15: invokedynamic #224,  0            // InvokeDynamic #23:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Ljava/util/function/Function;
      20: astore        6
      22: aload         5
      24: aload         6
      26: invokedynamic #225,  0            // InvokeDynamic #24:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      31: invokevirtual #202                // Method reactor/core/publisher/Flux.switchMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      34: aload_1
      35: invokedynamic #226,  0            // InvokeDynamic #25:run:(Lio/micronaut/http/HttpRequest;)Ljava/lang/Runnable;
      40: invokevirtual #221                // Method reactor/core/publisher/Flux.doOnTerminate:(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
      43: areturn

  private <I> org.reactivestreams.Publisher<io.micronaut.http.MutableHttpResponse<java.lang.Object>> buildStreamExchange(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<I>, java.net.URI, io.micronaut.core.type.Argument<?>);
    Code:
       0: new           #227                // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: aload_2
       5: invokespecial #228                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       8: astore        5
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload_0
      15: aload_3
      16: invokevirtual #229                // Method buildSslContext:(Ljava/net/URI;)Lio/netty/handler/ssl/SslContext;
      19: aload         5
      21: iconst_0
      22: iconst_1
      23: invokespecial #230                // Method connectAndStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;Ljava/util/concurrent/atomic/AtomicReference;ZZ)Lreactor/core/publisher/Flux;
      26: astore        6
      28: aload_0
      29: aload         4
      31: aload         6
      33: invokespecial #231                // Method readBodyOnError:(Lio/micronaut/core/type/Argument;Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
      36: astore        6
      38: aload_0
      39: aload_1
      40: aload_2
      41: aload_3
      42: aload         5
      44: aload         6
      46: invokespecial #232                // Method applyFilterToResponsePublisher:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
      49: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      52: astore        6
      54: aload         6
      56: aload_0
      57: getfield      #76                 // Field scheduler:Lreactor/core/scheduler/Scheduler;
      60: invokevirtual #233                // Method reactor/core/publisher/Flux.subscribeOn:(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
      63: areturn

  public org.reactivestreams.Publisher<io.micronaut.http.MutableHttpResponse<?>> proxy(io.micronaut.http.HttpRequest<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // Method io/micronaut/http/client/ProxyRequestOptions.getDefault:()Lio/micronaut/http/client/ProxyRequestOptions;
       5: invokevirtual #235                // Method proxy:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/client/ProxyRequestOptions;)Lorg/reactivestreams/Publisher;
       8: areturn

  public org.reactivestreams.Publisher<io.micronaut.http.MutableHttpResponse<?>> proxy(io.micronaut.http.HttpRequest<?>, io.micronaut.http.client.ProxyRequestOptions);
    Code:
       0: aload_2
       1: ldc           #236                // String options
       3: invokestatic  #237                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokevirtual #186                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;
      12: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #238,  0            // InvokeDynamic #26:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/client/ProxyRequestOptions;)Ljava/util/function/Function;
      23: invokevirtual #188                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      26: areturn

  private <I> reactor.core.publisher.Flux<io.micronaut.http.MutableHttpResponse<java.lang.Object>> connectAndStream(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<I>, java.net.URI, io.netty.handler.ssl.SslContext, java.util.concurrent.atomic.AtomicReference<io.micronaut.http.HttpRequest<?>>, boolean, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: iload         6
       7: aload_1
       8: aload         5
      10: iload         7
      12: invokedynamic #239,  0            // InvokeDynamic #27:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;ZLio/micronaut/http/HttpRequest;Ljava/util/concurrent/atomic/AtomicReference;Z)Ljava/util/function/Consumer;
      17: getstatic     #175                // Field reactor/core/publisher/FluxSink$OverflowStrategy.BUFFER:Lreactor/core/publisher/FluxSink$OverflowStrategy;
      20: invokestatic  #176                // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
      23: areturn

  private <I, O, E> org.reactivestreams.Publisher<? extends io.micronaut.http.HttpResponse<O>> exchangeImpl(java.net.URI, io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<E>);
    Code:
       0: new           #227                // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: aload_3
       5: invokespecial #228                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       8: astore        6
      10: aload_0
      11: aload_3
      12: aload_1
      13: aload         6
      15: aload         4
      17: aload         5
      19: invokedynamic #240,  0            // InvokeDynamic #28:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Ljava/util/concurrent/atomic/AtomicReference;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Ljava/util/function/Consumer;
      24: getstatic     #218                // Field reactor/core/publisher/FluxSink$OverflowStrategy.ERROR:Lreactor/core/publisher/FluxSink$OverflowStrategy;
      27: invokestatic  #176                // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
      30: astore        7
      32: aload_0
      33: aload_2
      34: aload_3
      35: aload_1
      36: aload         6
      38: aload         7
      40: invokespecial #232                // Method applyFilterToResponsePublisher:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
      43: astore        8
      45: aload         8
      47: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      50: astore        9
      52: aload_0
      53: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
      56: invokevirtual #83                 // Method io/micronaut/http/client/HttpClientConfiguration.getReadTimeout:()Ljava/util/Optional;
      59: astore        10
      61: aload         10
      63: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      66: ifeq          115
      69: aload         10
      71: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
      74: checkcast     #159                // class java/time/Duration
      77: astore        11
      79: aload         11
      81: invokevirtual #243                // Method java/time/Duration.isNegative:()Z
      84: ifne          115
      87: aload         11
      89: lconst_1
      90: invokestatic  #244                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      93: invokevirtual #245                // Method java/time/Duration.plus:(Ljava/time/Duration;)Ljava/time/Duration;
      96: astore        12
      98: aload         9
     100: aload         12
     102: invokevirtual #246                // Method reactor/core/publisher/Flux.timeout:(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
     105: invokedynamic #247,  0            // InvokeDynamic #29:apply:()Ljava/util/function/Function;
     110: invokevirtual #248                // Method reactor/core/publisher/Flux.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     113: astore        9
     115: aload         9
     117: areturn

  protected void closeChannelAsync(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: invokeinterface #249,  1          // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
       6: ifeq          29
       9: aload_1
      10: invokeinterface #250,  1          // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokedynamic #251,  0            // InvokeDynamic #30:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;)Lio/netty/util/concurrent/GenericFutureListener;
      23: invokeinterface #252,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      28: pop
      29: return

  protected <I> org.reactivestreams.Publisher<java.net.URI> resolveRequestURI(io.micronaut.http.HttpRequest<I>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #253                // Method resolveRequestURI:(Lio/micronaut/http/HttpRequest;Z)Lorg/reactivestreams/Publisher;
       6: areturn

  protected <I> org.reactivestreams.Publisher<java.net.URI> resolveRequestURI(io.micronaut.http.HttpRequest<I>, boolean);
    Code:
       0: aload_1
       1: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
       6: astore_3
       7: aload_3
       8: invokevirtual #255                // Method java/net/URI.getScheme:()Ljava/lang/String;
      11: ifnull        19
      14: aload_3
      15: invokestatic  #256                // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      18: areturn
      19: aload_0
      20: aload_1
      21: iload_2
      22: invokespecial #257                // Method resolveURI:(Lio/micronaut/http/HttpRequest;Z)Lorg/reactivestreams/Publisher;
      25: areturn

  protected <I> org.reactivestreams.Publisher<java.net.URI> resolveRedirectURI(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<I>);
    Code:
       0: aload_2
       1: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
       6: astore_3
       7: aload_3
       8: invokevirtual #255                // Method java/net/URI.getScheme:()Ljava/lang/String;
      11: ifnull        19
      14: aload_3
      15: invokestatic  #256                // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      18: areturn
      19: aload_1
      20: ifnull        35
      23: aload_1
      24: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
      29: invokevirtual #258                // Method java/net/URI.getHost:()Ljava/lang/String;
      32: ifnonnull     42
      35: aload_0
      36: aload_2
      37: iconst_0
      38: invokespecial #257                // Method resolveURI:(Lio/micronaut/http/HttpRequest;Z)Lorg/reactivestreams/Publisher;
      41: areturn
      42: aload_1
      43: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
      48: astore        4
      50: aload_3
      51: invokestatic  #259                // InterfaceMethod io/micronaut/http/uri/UriBuilder.of:(Ljava/net/URI;)Lio/micronaut/http/uri/UriBuilder;
      54: aload         4
      56: invokevirtual #255                // Method java/net/URI.getScheme:()Ljava/lang/String;
      59: invokeinterface #260,  2          // InterfaceMethod io/micronaut/http/uri/UriBuilder.scheme:(Ljava/lang/String;)Lio/micronaut/http/uri/UriBuilder;
      64: aload         4
      66: invokevirtual #261                // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      69: invokeinterface #262,  2          // InterfaceMethod io/micronaut/http/uri/UriBuilder.userInfo:(Ljava/lang/String;)Lio/micronaut/http/uri/UriBuilder;
      74: aload         4
      76: invokevirtual #258                // Method java/net/URI.getHost:()Ljava/lang/String;
      79: invokeinterface #263,  2          // InterfaceMethod io/micronaut/http/uri/UriBuilder.host:(Ljava/lang/String;)Lio/micronaut/http/uri/UriBuilder;
      84: aload         4
      86: invokevirtual #264                // Method java/net/URI.getPort:()I
      89: invokeinterface #265,  2          // InterfaceMethod io/micronaut/http/uri/UriBuilder.port:(I)Lio/micronaut/http/uri/UriBuilder;
      94: astore        5
      96: aload         5
      98: invokeinterface #266,  1          // InterfaceMethod io/micronaut/http/uri/UriBuilder.build:()Ljava/net/URI;
     103: invokestatic  #256                // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
     106: areturn

  protected java.net.URI prependContextPath(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #64                 // Field contextPath:Ljava/lang/String;
       4: invokestatic  #57                 // Method io/micronaut/core/util/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
       7: ifeq          46
      10: new           #267                // class java/net/URI
      13: dup
      14: aload_0
      15: getfield      #64                 // Field contextPath:Ljava/lang/String;
      18: aload_1
      19: invokevirtual #268                // Method java/net/URI.toString:()Ljava/lang/String;
      22: invokestatic  #269                // Method io/micronaut/core/util/StringUtils.prependUri:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: invokespecial #270                // Method java/net/URI."<init>":(Ljava/lang/String;)V
      28: areturn
      29: astore_2
      30: aload_0
      31: new           #272                // class io/micronaut/http/client/exceptions/HttpClientException
      34: dup
      35: ldc_w         #273                // String Failed to construct the request URI
      38: aload_2
      39: invokespecial #274                // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      45: athrow
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          10    28    29   Class java/net/URISyntaxException

  protected java.lang.Object getLoadBalancerDiscriminator();
    Code:
       0: aconst_null
       1: areturn

  private void initBootstrapForProxy(io.netty.bootstrap.Bootstrap, boolean, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
       4: iload_2
       5: aload_3
       6: iload         4
       8: invokevirtual #275                // Method io/micronaut/http/client/HttpClientConfiguration.resolveProxy:(ZLjava/lang/String;I)Ljava/net/Proxy;
      11: astore        5
      13: aload         5
      15: invokevirtual #276                // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      18: getstatic     #277                // Field java/net/Proxy$Type.DIRECT:Ljava/net/Proxy$Type;
      21: if_acmpeq     32
      24: aload_1
      25: getstatic     #278                // Field io/netty/resolver/NoopAddressResolverGroup.INSTANCE:Lio/netty/resolver/NoopAddressResolverGroup;
      28: invokevirtual #279                // Method io/netty/bootstrap/Bootstrap.resolver:(Lio/netty/resolver/AddressResolverGroup;)Lio/netty/bootstrap/Bootstrap;
      31: pop
      32: return

  protected io.netty.channel.ChannelFuture doConnect(io.micronaut.http.HttpRequest<?>, java.net.URI, io.netty.handler.ssl.SslContext, boolean, java.util.function.Consumer<io.netty.channel.ChannelHandlerContext>) throws io.micronaut.http.client.exceptions.HttpClientException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: aload         5
       9: invokevirtual #280                // Method doConnect:(Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;ZZLjava/util/function/Consumer;)Lio/netty/channel/ChannelFuture;
      12: areturn

  protected io.netty.channel.ChannelFuture doConnect(io.micronaut.http.HttpRequest<?>, java.net.URI, io.netty.handler.ssl.SslContext, boolean, boolean, java.util.function.Consumer<io.netty.channel.ChannelHandlerContext>) throws io.micronaut.http.client.exceptions.HttpClientException;
    Code:
       0: new           #281                // class io/micronaut/http/client/netty/DefaultHttpClient$RequestKey
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #282                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/net/URI;)V
       9: astore        7
      11: aload_0
      12: aload_1
      13: aload         7
      15: invokevirtual #283                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
      18: aload         7
      20: invokevirtual #284                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
      23: aload_3
      24: iload         4
      26: iload         5
      28: aload         6
      30: invokevirtual #285                // Method doConnect:(Lio/micronaut/http/HttpRequest;Ljava/lang/String;ILio/netty/handler/ssl/SslContext;ZZLjava/util/function/Consumer;)Lio/netty/channel/ChannelFuture;
      33: areturn

  protected io.netty.channel.ChannelFuture doConnect(io.micronaut.http.HttpRequest<?>, java.lang.String, int, io.netty.handler.ssl.SslContext, boolean, java.util.function.Consumer<io.netty.channel.ChannelHandlerContext>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: iconst_0
       9: aload         6
      11: invokevirtual #285                // Method doConnect:(Lio/micronaut/http/HttpRequest;Ljava/lang/String;ILio/netty/handler/ssl/SslContext;ZZLjava/util/function/Consumer;)Lio/netty/channel/ChannelFuture;
      14: areturn

  protected io.netty.channel.ChannelFuture doConnect(io.micronaut.http.HttpRequest<?>, java.lang.String, int, io.netty.handler.ssl.SslContext, boolean, boolean, java.util.function.Consumer<io.netty.channel.ChannelHandlerContext>);
    Code:
       0: aload_0
       1: getfield      #67                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
       4: invokevirtual #216                // Method io/netty/bootstrap/Bootstrap.clone:()Lio/netty/bootstrap/Bootstrap;
       7: astore        8
       9: aload_0
      10: aload         8
      12: aload         4
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: aload_2
      23: iload_3
      24: invokespecial #28                 // Method initBootstrapForProxy:(Lio/netty/bootstrap/Bootstrap;ZLjava/lang/String;I)V
      27: aload_1
      28: invokeinterface #286,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getHeaders:()Lio/micronaut/http/HttpHeaders;
      33: ldc_w         #288                // String Accept
      36: invokeinterface #289,  2          // InterfaceMethod io/micronaut/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/Object;
      41: checkcast     #111                // class java/lang/String
      44: astore        9
      46: aload         8
      48: new           #290                // class io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer
      51: dup
      52: aload_0
      53: aload         4
      55: aload_2
      56: iload_3
      57: iload         5
      59: iload         6
      61: aload         9
      63: ifnull        81
      66: aload         9
      68: ldc_w         #291                // String text/event-stream
      71: invokevirtual #292                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: aload         7
      84: invokespecial #293                // Method io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/handler/ssl/SslContext;Ljava/lang/String;IZZZLjava/util/function/Consumer;)V
      87: invokevirtual #294                // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
      90: pop
      91: aload_0
      92: aload         8
      94: aload_2
      95: iload_3
      96: invokevirtual #295                // Method doConnect:(Lio/netty/bootstrap/Bootstrap;Ljava/lang/String;I)Lio/netty/channel/ChannelFuture;
      99: areturn

  protected io.netty.channel.nio.NioEventLoopGroup createEventLoopGroup(io.micronaut.http.client.HttpClientConfiguration, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_1
       1: invokevirtual #296                // Method io/micronaut/http/client/HttpClientConfiguration.getNumOfThreads:()Ljava/util/OptionalInt;
       4: astore_3
       5: aload_1
       6: invokevirtual #297                // Method io/micronaut/http/client/HttpClientConfiguration.getThreadFactory:()Ljava/util/Optional;
       9: astore        4
      11: aload_3
      12: invokevirtual #298                // Method java/util/OptionalInt.isPresent:()Z
      15: istore        5
      17: aload         4
      19: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      22: istore        6
      24: iload         5
      26: ifeq          64
      29: iload         6
      31: ifeq          64
      34: new           #299                // class io/netty/channel/nio/NioEventLoopGroup
      37: dup
      38: aload_3
      39: invokevirtual #300                // Method java/util/OptionalInt.getAsInt:()I
      42: aload         4
      44: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
      47: checkcast     #301                // class java/lang/Class
      50: invokestatic  #302                // Method io/micronaut/core/reflect/InstantiationUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
      53: checkcast     #303                // class java/util/concurrent/ThreadFactory
      56: invokespecial #304                // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      59: astore        7
      61: goto          135
      64: iload         5
      66: ifeq          106
      69: aload_2
      70: ifnull        90
      73: new           #299                // class io/netty/channel/nio/NioEventLoopGroup
      76: dup
      77: aload_3
      78: invokevirtual #300                // Method java/util/OptionalInt.getAsInt:()I
      81: aload_2
      82: invokespecial #304                // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      85: astore        7
      87: goto          135
      90: new           #299                // class io/netty/channel/nio/NioEventLoopGroup
      93: dup
      94: aload_3
      95: invokevirtual #300                // Method java/util/OptionalInt.getAsInt:()I
      98: invokespecial #305                // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(I)V
     101: astore        7
     103: goto          135
     106: aload_2
     107: ifnull        126
     110: new           #299                // class io/netty/channel/nio/NioEventLoopGroup
     113: dup
     114: getstatic     #306                // Field io/micronaut/http/netty/channel/NettyThreadFactory.DEFAULT_EVENT_LOOP_THREADS:I
     117: aload_2
     118: invokespecial #304                // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(ILjava/util/concurrent/ThreadFactory;)V
     121: astore        7
     123: goto          135
     126: new           #299                // class io/netty/channel/nio/NioEventLoopGroup
     129: dup
     130: invokespecial #307                // Method io/netty/channel/nio/NioEventLoopGroup."<init>":()V
     133: astore        7
     135: aload         7
     137: areturn

  protected io.netty.channel.ChannelFuture doConnect(io.netty.bootstrap.Bootstrap, java.lang.String, int);
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokevirtual #308                // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/lang/String;I)Lio/netty/channel/ChannelFuture;
       6: areturn

  protected io.netty.handler.ssl.SslContext buildSslContext(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #255                // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: invokestatic  #12                 // Method isSecureScheme:(Ljava/lang/String;)Z
       7: ifeq          47
      10: aload_0
      11: getfield      #23                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
      14: astore_2
      15: aload_2
      16: ifnonnull     49
      19: aload_0
      20: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
      23: invokevirtual #309                // Method io/micronaut/http/client/HttpClientConfiguration.getProxyAddress:()Ljava/util/Optional;
      26: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      29: ifne          49
      32: aload_0
      33: new           #272                // class io/micronaut/http/client/exceptions/HttpClientException
      36: dup
      37: ldc_w         #310                // String Cannot send HTTPS request. SSL is disabled
      40: invokespecial #311                // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;)V
      43: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      46: athrow
      47: aconst_null
      48: astore_2
      49: aload_2
      50: areturn

  protected void configureProxy(io.netty.channel.ChannelPipeline, java.net.Proxy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #276                // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
       6: aload_2
       7: invokevirtual #312                // Method java/net/Proxy.address:()Ljava/net/SocketAddress;
      10: invokevirtual #313                // Method configureProxy:(Lio/netty/channel/ChannelPipeline;Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V
      13: return

  protected void configureProxy(io.netty.channel.ChannelPipeline, java.net.Proxy$Type, java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
       4: invokevirtual #314                // Method io/micronaut/http/client/HttpClientConfiguration.getProxyUsername:()Ljava/util/Optional;
       7: aconst_null
       8: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #111                // class java/lang/String
      14: astore        4
      16: aload_0
      17: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
      20: invokevirtual #315                // Method io/micronaut/http/client/HttpClientConfiguration.getProxyPassword:()Ljava/util/Optional;
      23: aconst_null
      24: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #111                // class java/lang/String
      30: astore        5
      32: aload_3
      33: instanceof    #316                // class java/net/InetSocketAddress
      36: ifeq          71
      39: aload_3
      40: checkcast     #316                // class java/net/InetSocketAddress
      43: astore        6
      45: aload         6
      47: invokevirtual #317                // Method java/net/InetSocketAddress.isUnresolved:()Z
      50: ifeq          71
      53: new           #316                // class java/net/InetSocketAddress
      56: dup
      57: aload         6
      59: invokevirtual #318                // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      62: aload         6
      64: invokevirtual #319                // Method java/net/InetSocketAddress.getPort:()I
      67: invokespecial #320                // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      70: astore_3
      71: aload         4
      73: invokestatic  #57                 // Method io/micronaut/core/util/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
      76: ifeq          173
      79: aload         5
      81: invokestatic  #57                 // Method io/micronaut/core/util/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z
      84: ifeq          173
      87: getstatic     #321                // Field io/micronaut/http/client/netty/DefaultHttpClient$14.$SwitchMap$java$net$Proxy$Type:[I
      90: aload_2
      91: invokevirtual #322                // Method java/net/Proxy$Type.ordinal:()I
      94: iaload
      95: lookupswitch  { // 2
                     1: 120
                     2: 145
               default: 170
          }
     120: aload_1
     121: ldc_w         #323                // String http-proxy
     124: new           #324                // class io/netty/handler/proxy/HttpProxyHandler
     127: dup
     128: aload_3
     129: aload         4
     131: aload         5
     133: invokespecial #325                // Method io/netty/handler/proxy/HttpProxyHandler."<init>":(Ljava/net/SocketAddress;Ljava/lang/String;Ljava/lang/String;)V
     136: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     141: pop
     142: goto          250
     145: aload_1
     146: ldc_w         #327                // String socks5-proxy
     149: new           #328                // class io/netty/handler/proxy/Socks5ProxyHandler
     152: dup
     153: aload_3
     154: aload         4
     156: aload         5
     158: invokespecial #329                // Method io/netty/handler/proxy/Socks5ProxyHandler."<init>":(Ljava/net/SocketAddress;Ljava/lang/String;Ljava/lang/String;)V
     161: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     166: pop
     167: goto          250
     170: goto          250
     173: getstatic     #321                // Field io/micronaut/http/client/netty/DefaultHttpClient$14.$SwitchMap$java$net$Proxy$Type:[I
     176: aload_2
     177: invokevirtual #322                // Method java/net/Proxy$Type.ordinal:()I
     180: iaload
     181: lookupswitch  { // 2
                     1: 208
                     2: 229
               default: 250
          }
     208: aload_1
     209: ldc_w         #323                // String http-proxy
     212: new           #324                // class io/netty/handler/proxy/HttpProxyHandler
     215: dup
     216: aload_3
     217: invokespecial #330                // Method io/netty/handler/proxy/HttpProxyHandler."<init>":(Ljava/net/SocketAddress;)V
     220: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     225: pop
     226: goto          250
     229: aload_1
     230: ldc_w         #327                // String socks5-proxy
     233: new           #328                // class io/netty/handler/proxy/Socks5ProxyHandler
     236: dup
     237: aload_3
     238: invokespecial #331                // Method io/netty/handler/proxy/Socks5ProxyHandler."<init>":(Ljava/net/SocketAddress;)V
     241: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     246: pop
     247: goto          250
     250: return

  private <I, O, R extends io.micronaut.http.HttpResponse<O>> org.reactivestreams.Publisher<R> applyFilterToResponsePublisher(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<I>, java.net.URI, java.util.concurrent.atomic.AtomicReference<io.micronaut.http.HttpRequest<?>>, org.reactivestreams.Publisher<R>);
    Code:
       0: aload_2
       1: instanceof    #170                // class io/micronaut/http/MutableHttpRequest
       4: ifeq          148
       7: aload_2
       8: checkcast     #170                // class io/micronaut/http/MutableHttpRequest
      11: aload_3
      12: invokeinterface #332,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.uri:(Ljava/net/URI;)Lio/micronaut/http/MutableHttpRequest;
      17: pop
      18: aload_0
      19: getfield      #118                // Field filterResolver:Lio/micronaut/http/filter/HttpClientFilterResolver;
      22: aload_2
      23: aload_0
      24: getfield      #119                // Field clientFilterEntries:Ljava/util/List;
      27: invokeinterface #333,  3          // InterfaceMethod io/micronaut/http/filter/HttpClientFilterResolver.resolveFilters:(Lio/micronaut/http/HttpRequest;Ljava/util/List;)Ljava/util/List;
      32: astore        6
      34: aload_1
      35: ifnull        54
      38: aload         6
      40: new           #334                // class io/micronaut/http/client/filters/ClientServerContextFilter
      43: dup
      44: aload_1
      45: invokespecial #335                // Method io/micronaut/http/client/filters/ClientServerContextFilter."<init>":(Lio/micronaut/http/HttpRequest;)V
      48: invokeinterface #336,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload         6
      56: invokestatic  #337                // Method io/micronaut/core/order/OrderUtil.reverseSort:(Ljava/util/List;)V
      59: aload         5
      61: astore        7
      63: aload         6
      65: aload         7
      67: invokedynamic #338,  0            // InvokeDynamic #31:doFilter:(Lorg/reactivestreams/Publisher;)Lio/micronaut/http/filter/HttpClientFilter;
      72: invokeinterface #336,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: aload_0
      79: aload         4
      81: aload         6
      83: invokespecial #339                // Method buildChain:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/List;)Lio/micronaut/http/filter/ClientFilterChain;
      86: astore        8
      88: aload_1
      89: ifnull        115
      92: aload_1
      93: aload         6
      95: aload_2
      96: aload         8
      98: aload_1
      99: invokedynamic #340,  0            // InvokeDynamic #32:get:(Ljava/util/List;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ClientFilterChain;Lio/micronaut/http/HttpRequest;)Ljava/util/function/Supplier;
     104: invokestatic  #341                // Method io/micronaut/http/context/ServerRequestContext.with:(Lio/micronaut/http/HttpRequest;Ljava/util/function/Supplier;)Ljava/lang/Object;
     107: checkcast     #342                // class org/reactivestreams/Publisher
     110: astore        5
     112: goto          148
     115: aload         6
     117: iconst_0
     118: invokeinterface #343,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     123: checkcast     #140                // class io/micronaut/http/filter/HttpClientFilter
     126: aload_2
     127: aload         8
     129: invokeinterface #344,  3          // InterfaceMethod io/micronaut/http/filter/HttpClientFilter.doFilter:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/FilterChain;)Lorg/reactivestreams/Publisher;
     134: astore        5
     136: goto          148
     139: astore        9
     141: aload         9
     143: invokestatic  #346                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
     146: astore        5
     148: aload         5
     150: areturn
    Exception table:
       from    to  target type
         115   136   139   Class java/lang/Throwable

  protected io.micronaut.http.client.netty.DefaultHttpClient$NettyRequestWriter buildNettyRequest(io.micronaut.http.MutableHttpRequest, java.net.URI, io.micronaut.http.MediaType, boolean, io.micronaut.core.type.Argument<?>, java.util.function.Consumer<? super java.lang.Throwable>, boolean) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: aconst_null
       1: astore        9
       3: iload         4
       5: ifeq          460
       8: aload_1
       9: invokeinterface #347,  1          // InterfaceMethod io/micronaut/http/MutableHttpRequest.getBody:()Ljava/util/Optional;
      14: astore        10
      16: aload         10
      18: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      21: istore        11
      23: aload_3
      24: getstatic     #348                // Field io/micronaut/http/MediaType.APPLICATION_FORM_URLENCODED_TYPE:Lio/micronaut/http/MediaType;
      27: invokevirtual #349                // Method io/micronaut/http/MediaType.equals:(Ljava/lang/Object;)Z
      30: ifeq          102
      33: iload         11
      35: ifeq          102
      38: aload         10
      40: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
      43: astore        12
      45: aload         12
      47: instanceof    #350                // class java/lang/CharSequence
      50: ifeq          83
      53: aload_0
      54: aload         12
      56: checkcast     #350                // class java/lang/CharSequence
      59: aload_3
      60: invokespecial #351                // Method charSequenceToByteBuf:(Ljava/lang/CharSequence;Lio/micronaut/http/MediaType;)Lio/netty/buffer/ByteBuf;
      63: astore        13
      65: aload_1
      66: aload         13
      68: invokeinterface #352,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpRequest;
      73: pop
      74: aload_1
      75: invokestatic  #353                // InterfaceMethod io/micronaut/http/netty/NettyHttpRequestBuilder.toHttpRequest:(Lio/micronaut/http/HttpRequest;)Lio/netty/handler/codec/http/HttpRequest;
      78: astore        8
      80: goto          99
      83: aload_0
      84: aload_1
      85: aload         12
      87: invokespecial #354                // Method buildFormDataRequest:(Lio/micronaut/http/MutableHttpRequest;Ljava/lang/Object;)Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder;
      90: astore        9
      92: aload         9
      94: invokevirtual #355                // Method io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.finalizeRequest:()Lio/netty/handler/codec/http/HttpRequest;
      97: astore        8
      99: goto          457
     102: aload_3
     103: getstatic     #356                // Field io/micronaut/http/MediaType.MULTIPART_FORM_DATA_TYPE:Lio/micronaut/http/MediaType;
     106: invokevirtual #349                // Method io/micronaut/http/MediaType.equals:(Ljava/lang/Object;)Z
     109: ifeq          143
     112: iload         11
     114: ifeq          143
     117: aload         10
     119: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
     122: astore        12
     124: aload_0
     125: aload_1
     126: aload         12
     128: invokespecial #357                // Method buildMultipartRequest:(Lio/micronaut/http/MutableHttpRequest;Ljava/lang/Object;)Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder;
     131: astore        9
     133: aload         9
     135: invokevirtual #355                // Method io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.finalizeRequest:()Lio/netty/handler/codec/http/HttpRequest;
     138: astore        8
     140: goto          457
     143: aconst_null
     144: astore        12
     146: iload         11
     148: ifeq          408
     151: aload         10
     153: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
     156: astore        13
     158: aload         13
     160: invokestatic  #358                // Method io/micronaut/core/async/publisher/Publishers.isConvertibleToPublisher:(Ljava/lang/Object;)Z
     163: ifeq          307
     166: aload         13
     168: invokevirtual #359                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     171: invokestatic  #360                // Method io/micronaut/core/async/publisher/Publishers.isSingle:(Ljava/lang/Class;)Z
     174: istore        14
     176: getstatic     #35                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
     179: aload         13
     181: ldc_w         #342                // class org/reactivestreams/Publisher
     184: invokeinterface #361,  3          // InterfaceMethod io/micronaut/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Optional;
     189: aload         13
     191: invokedynamic #362,  0            // InvokeDynamic #33:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
     196: invokevirtual #363                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     199: checkcast     #342                // class org/reactivestreams/Publisher
     202: astore        15
     204: aload         15
     206: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     209: aload_0
     210: aload_3
     211: aload         5
     213: invokedynamic #364,  0            // InvokeDynamic #34:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/MediaType;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
     218: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     221: astore        16
     223: iload         14
     225: ifne          245
     228: getstatic     #365                // Field io/micronaut/http/MediaType.APPLICATION_JSON_TYPE:Lio/micronaut/http/MediaType;
     231: aload_3
     232: invokevirtual #349                // Method io/micronaut/http/MediaType.equals:(Ljava/lang/Object;)Z
     235: ifeq          245
     238: aload         16
     240: invokestatic  #366                // Method io/micronaut/http/netty/stream/JsonSubscriber.lift:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     243: astore        16
     245: aload         16
     247: aload         6
     249: invokevirtual #367                // Method reactor/core/publisher/Flux.doOnError:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
     252: astore        16
     254: aload_1
     255: aload         16
     257: invokeinterface #352,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpRequest;
     262: pop
     263: aload_1
     264: invokestatic  #353                // InterfaceMethod io/micronaut/http/netty/NettyHttpRequestBuilder.toHttpRequest:(Lio/micronaut/http/HttpRequest;)Lio/netty/handler/codec/http/HttpRequest;
     267: astore        8
     269: aload         8
     271: aload_2
     272: invokevirtual #368                // Method java/net/URI.toURL:()Ljava/net/URL;
     275: invokevirtual #369                // Method java/net/URL.getFile:()Ljava/lang/String;
     278: invokeinterface #370,  2          // InterfaceMethod io/netty/handler/codec/http/HttpRequest.setUri:(Ljava/lang/String;)Lio/netty/handler/codec/http/HttpRequest;
     283: pop
     284: goto          289
     287: astore        17
     289: new           #372                // class io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter
     292: dup
     293: aload_0
     294: aload_2
     295: invokevirtual #255                // Method java/net/URI.getScheme:()Ljava/lang/String;
     298: aload         8
     300: aconst_null
     301: iload         7
     303: invokespecial #373                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/lang/String;Lio/netty/handler/codec/http/HttpRequest;Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder;Z)V
     306: areturn
     307: aload         13
     309: instanceof    #350                // class java/lang/CharSequence
     312: ifeq          330
     315: aload_0
     316: aload         13
     318: checkcast     #350                // class java/lang/CharSequence
     321: aload_3
     322: invokespecial #351                // Method charSequenceToByteBuf:(Ljava/lang/CharSequence;Lio/micronaut/http/MediaType;)Lio/netty/buffer/ByteBuf;
     325: astore        12
     327: goto          373
     330: aload_0
     331: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
     334: ifnull        373
     337: aload_0
     338: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
     341: aload_3
     342: invokeinterface #374,  2          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodecRegistry.findCodec:(Lio/micronaut/http/MediaType;)Ljava/util/Optional;
     347: astore        14
     349: aload         14
     351: aload_0
     352: aload         5
     354: aload         13
     356: invokedynamic #375,  0            // InvokeDynamic #35:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/core/type/Argument;Ljava/lang/Object;)Ljava/util/function/Function;
     361: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     364: aconst_null
     365: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     368: checkcast     #376                // class io/netty/buffer/ByteBuf
     371: astore        12
     373: aload         12
     375: ifnonnull     408
     378: getstatic     #35                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
     381: aload         13
     383: ldc_w         #376                // class io/netty/buffer/ByteBuf
     386: invokeinterface #361,  3          // InterfaceMethod io/micronaut/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Optional;
     391: aload_0
     392: aload         13
     394: aload_3
     395: invokedynamic #377,  0            // InvokeDynamic #36:get:(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/lang/Object;Lio/micronaut/http/MediaType;)Ljava/util/function/Supplier;
     400: invokevirtual #363                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     403: checkcast     #376                // class io/netty/buffer/ByteBuf
     406: astore        12
     408: aload_1
     409: aload         12
     411: invokeinterface #352,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpRequest;
     416: pop
     417: aload_1
     418: invokestatic  #353                // InterfaceMethod io/micronaut/http/netty/NettyHttpRequestBuilder.toHttpRequest:(Lio/micronaut/http/HttpRequest;)Lio/netty/handler/codec/http/HttpRequest;
     421: astore        8
     423: aload_1
     424: aload         10
     426: aconst_null
     427: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     430: invokeinterface #352,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpRequest;
     435: pop
     436: goto          457
     439: astore        18
     441: aload_1
     442: aload         10
     444: aconst_null
     445: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     448: invokeinterface #352,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.body:(Ljava/lang/Object;)Lio/micronaut/http/MutableHttpRequest;
     453: pop
     454: aload         18
     456: athrow
     457: goto          466
     460: aload_1
     461: invokestatic  #353                // InterfaceMethod io/micronaut/http/netty/NettyHttpRequestBuilder.toHttpRequest:(Lio/micronaut/http/HttpRequest;)Lio/netty/handler/codec/http/HttpRequest;
     464: astore        8
     466: aload         8
     468: aload_2
     469: invokevirtual #368                // Method java/net/URI.toURL:()Ljava/net/URL;
     472: invokevirtual #369                // Method java/net/URL.getFile:()Ljava/lang/String;
     475: invokeinterface #370,  2          // InterfaceMethod io/netty/handler/codec/http/HttpRequest.setUri:(Ljava/lang/String;)Lio/netty/handler/codec/http/HttpRequest;
     480: pop
     481: goto          486
     484: astore        10
     486: new           #372                // class io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter
     489: dup
     490: aload_0
     491: aload_2
     492: invokevirtual #255                // Method java/net/URI.getScheme:()Ljava/lang/String;
     495: aload         8
     497: aload         9
     499: iload         7
     501: invokespecial #373                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/lang/String;Lio/netty/handler/codec/http/HttpRequest;Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder;Z)V
     504: areturn
    Exception table:
       from    to  target type
         269   284   287   Class java/net/MalformedURLException
         417   423   439   any
         439   441   439   any
         466   481   484   Class java/net/MalformedURLException

  protected void configureHttp2Ssl(io.micronaut.http.client.netty.DefaultHttpClient$HttpClientInitializer, io.netty.channel.socket.SocketChannel, io.netty.handler.ssl.SslContext, java.lang.String, int, io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler);
    Code:
       0: aload_2
       1: invokeinterface #378,  1          // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: astore        7
       8: aload         7
      10: ldc_w         #379                // String ssl
      13: aload_3
      14: aload_2
      15: invokeinterface #380,  1          // InterfaceMethod io/netty/channel/socket/SocketChannel.alloc:()Lio/netty/buffer/ByteBufAllocator;
      20: aload         4
      22: iload         5
      24: invokevirtual #381                // Method io/netty/handler/ssl/SslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;I)Lio/netty/handler/ssl/SslHandler;
      27: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      32: pop
      33: aload         7
      35: ldc_w         #382                // String http2-protocol-negotiator
      38: new           #383                // class io/micronaut/http/client/netty/DefaultHttpClient$6
      41: dup
      42: aload_0
      43: ldc_w         #385                // String h2
      46: aload_1
      47: aload_2
      48: invokespecial #386                // Method io/micronaut/http/client/netty/DefaultHttpClient$6."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/lang/String;Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;Lio/netty/channel/socket/SocketChannel;)V
      51: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      56: pop
      57: aload         7
      59: ldc_w         #387                // String http2-connection
      62: aload         6
      64: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      69: pop
      70: return

  protected void configureHttp2ClearText(io.micronaut.http.client.netty.DefaultHttpClient$HttpClientInitializer, io.netty.channel.socket.SocketChannel, io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler);
    Code:
       0: new           #388                // class io/netty/handler/codec/http/HttpClientCodec
       3: dup
       4: invokespecial #389                // Method io/netty/handler/codec/http/HttpClientCodec."<init>":()V
       7: astore        4
       9: new           #390                // class io/netty/handler/codec/http2/Http2ClientUpgradeCodec
      12: dup
      13: ldc_w         #387                // String http2-connection
      16: aload_3
      17: invokespecial #391                // Method io/netty/handler/codec/http2/Http2ClientUpgradeCodec."<init>":(Ljava/lang/String;Lio/netty/handler/codec/http2/Http2ConnectionHandler;)V
      20: astore        5
      22: new           #392                // class io/netty/handler/codec/http/HttpClientUpgradeHandler
      25: dup
      26: aload         4
      28: aload         5
      30: ldc_w         #393                // int 65536
      33: invokespecial #394                // Method io/netty/handler/codec/http/HttpClientUpgradeHandler."<init>":(Lio/netty/handler/codec/http/HttpClientUpgradeHandler$SourceCodec;Lio/netty/handler/codec/http/HttpClientUpgradeHandler$UpgradeCodec;I)V
      36: astore        6
      38: aload_2
      39: invokeinterface #378,  1          // InterfaceMethod io/netty/channel/socket/SocketChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      44: astore        7
      46: aload         7
      48: ldc_w         #395                // String http-client-codec
      51: aload         4
      53: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      58: pop
      59: aload_1
      60: new           #396                // class io/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler
      63: dup
      64: aload_0
      65: aload_2
      66: invokeinterface #397,  1          // InterfaceMethod io/netty/channel/socket/SocketChannel.newPromise:()Lio/netty/channel/ChannelPromise;
      71: invokespecial #398                // Method io/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/channel/ChannelPromise;)V
      74: putfield      #399                // Field io/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer.settingsHandler:Lio/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler;
      77: aload         7
      79: iconst_1
      80: anewarray     #400                // class io/netty/channel/ChannelHandler
      83: dup
      84: iconst_0
      85: aload         6
      87: aastore
      88: invokeinterface #401,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      93: pop
      94: aload         7
      96: iconst_1
      97: anewarray     #400                // class io/netty/channel/ChannelHandler
     100: dup
     101: iconst_0
     102: new           #402                // class io/micronaut/http/client/netty/DefaultHttpClient$7
     105: dup
     106: aload_0
     107: aload_1
     108: invokespecial #403                // Method io/micronaut/http/client/netty/DefaultHttpClient$7."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;)V
     111: aastore
     112: invokeinterface #401,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     117: pop
     118: aload         7
     120: ldc_w         #404                // String http2-upgrade-request
     123: new           #405                // class io/micronaut/http/client/netty/DefaultHttpClient$8
     126: dup
     127: aload_0
     128: aload_1
     129: aload_1
     130: invokespecial #406                // Method io/micronaut/http/client/netty/DefaultHttpClient$8."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;Lio/micronaut/http/client/netty/DefaultHttpClient$HttpClientInitializer;)V
     133: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     138: pop
     139: return

  protected io.netty.handler.codec.http2.HttpToHttp2ConnectionHandlerBuilder newHttp2ConnectionHandlerBuilder(io.netty.handler.codec.http2.Http2Connection, io.micronaut.http.client.HttpClientConfiguration, boolean);
    Code:
       0: new           #407                // class io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder
       3: dup
       4: invokespecial #408                // Method io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder."<init>":()V
       7: astore        4
       9: aload         4
      11: iconst_1
      12: invokevirtual #409                // Method io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder.validateHeaders:(Z)Lio/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder;
      15: pop
      16: iload_3
      17: ifne          51
      20: new           #410                // class io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder
      23: dup
      24: aload_1
      25: invokespecial #411                // Method io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder."<init>":(Lio/netty/handler/codec/http2/Http2Connection;)V
      28: aload_2
      29: invokevirtual #412                // Method io/micronaut/http/client/HttpClientConfiguration.getMaxContentLength:()I
      32: invokevirtual #413                // Method io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder.maxContentLength:(I)Lio/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder;
      35: iconst_1
      36: invokevirtual #414                // Method io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder.validateHttpHeaders:(Z)Lio/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder;
      39: iconst_1
      40: invokevirtual #415                // Method io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder.propagateSettings:(Z)Lio/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder;
      43: invokevirtual #416                // Method io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder.build:()Lio/netty/handler/codec/http2/InboundHttp2ToHttpAdapter;
      46: astore        5
      48: goto          65
      51: new           #417                // class io/micronaut/http/netty/stream/StreamingInboundHttp2ToHttpAdapter
      54: dup
      55: aload_1
      56: aload_2
      57: invokevirtual #412                // Method io/micronaut/http/client/HttpClientConfiguration.getMaxContentLength:()I
      60: invokespecial #418                // Method io/micronaut/http/netty/stream/StreamingInboundHttp2ToHttpAdapter."<init>":(Lio/netty/handler/codec/http2/Http2Connection;I)V
      63: astore        5
      65: aload         4
      67: aload_1
      68: invokevirtual #419                // Method io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder.connection:(Lio/netty/handler/codec/http2/Http2Connection;)Lio/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder;
      71: new           #420                // class io/netty/handler/codec/http2/DelegatingDecompressorFrameListener
      74: dup
      75: aload_1
      76: aload         5
      78: invokespecial #421                // Method io/netty/handler/codec/http2/DelegatingDecompressorFrameListener."<init>":(Lio/netty/handler/codec/http2/Http2Connection;Lio/netty/handler/codec/http2/Http2FrameListener;)V
      81: invokevirtual #422                // Method io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder.frameListener:(Lio/netty/handler/codec/http2/Http2FrameListener;)Lio/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder;
      84: areturn

  private reactor.core.publisher.Flux<io.micronaut.http.MutableHttpResponse<java.lang.Object>> readBodyOnError(io.micronaut.core.type.Argument<?>, reactor.core.publisher.Flux<io.micronaut.http.MutableHttpResponse<java.lang.Object>>);
    Code:
       0: aload_1
       1: ifnull        23
       4: aload_1
       5: getstatic     #423                // Field io/micronaut/http/client/HttpClient.DEFAULT_ERROR_TYPE:Lio/micronaut/core/type/Argument;
       8: if_acmpeq     23
      11: aload_2
      12: aload_0
      13: aload_1
      14: invokedynamic #424,  0            // InvokeDynamic #37:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      19: invokevirtual #248                // Method reactor/core/publisher/Flux.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      22: areturn
      23: aload_2
      24: areturn

  private <I> org.reactivestreams.Publisher<java.net.URI> resolveURI(io.micronaut.http.HttpRequest<I>, boolean);
    Code:
       0: aload_1
       1: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
       6: astore_3
       7: aload_0
       8: getfield      #54                 // Field loadBalancer:Lio/micronaut/http/client/LoadBalancer;
      11: ifnonnull     32
      14: aload_0
      15: new           #425                // class io/micronaut/http/client/exceptions/NoHostException
      18: dup
      19: ldc_w         #426                // String Request URI specifies no host to connect to
      22: invokespecial #427                // Method io/micronaut/http/client/exceptions/NoHostException."<init>":(Ljava/lang/String;)V
      25: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      28: invokestatic  #346                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      31: areturn
      32: aload_0
      33: getfield      #54                 // Field loadBalancer:Lio/micronaut/http/client/LoadBalancer;
      36: aload_0
      37: invokevirtual #428                // Method getLoadBalancerDiscriminator:()Ljava/lang/Object;
      40: invokeinterface #429,  2          // InterfaceMethod io/micronaut/http/client/LoadBalancer.select:(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
      45: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      48: aload_0
      49: aload_1
      50: iload_2
      51: aload_3
      52: invokedynamic #430,  0            // InvokeDynamic #38:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;ZLjava/net/URI;)Ljava/util/function/Function;
      57: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      60: areturn

  private <I, O, E> void sendRequestThroughChannel(io.micronaut.http.HttpRequest<I>, io.micronaut.core.type.Argument<O>, io.micronaut.core.type.Argument<E>, reactor.core.publisher.FluxSink<? super io.micronaut.http.HttpResponse<O>>, io.netty.channel.Channel, boolean, io.netty.channel.pool.ChannelPool) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: aload_1
       1: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
       6: astore        8
       8: aload_1
       9: invokeinterface #431,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getContentType:()Ljava/util/Optional;
      14: getstatic     #365                // Field io/micronaut/http/MediaType.APPLICATION_JSON_TYPE:Lio/micronaut/http/MediaType;
      17: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #171                // class io/micronaut/http/MediaType
      23: astore        9
      25: aload_1
      26: invokeinterface #432,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getMethod:()Lio/micronaut/http/HttpMethod;
      31: invokestatic  #433                // Method io/micronaut/http/HttpMethod.permitsRequestBody:(Lio/micronaut/http/HttpMethod;)Z
      34: istore        10
      36: aload_1
      37: checkcast     #170                // class io/micronaut/http/MutableHttpRequest
      40: astore        11
      42: aload_0
      43: aload         11
      45: aload         8
      47: aload         9
      49: iload         10
      51: aload_2
      52: aload         4
      54: invokedynamic #434,  0            // InvokeDynamic #39:accept:(Lreactor/core/publisher/FluxSink;)Ljava/util/function/Consumer;
      59: iconst_1
      60: invokevirtual #435                // Method buildNettyRequest:(Lio/micronaut/http/MutableHttpRequest;Ljava/net/URI;Lio/micronaut/http/MediaType;ZLio/micronaut/core/type/Argument;Ljava/util/function/Consumer;Z)Lio/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter;
      63: astore        12
      65: aload         12
      67: invokevirtual #436                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter.getNettyRequest:()Lio/netty/handler/codec/http/HttpRequest;
      70: astore        13
      72: aload_0
      73: aload         8
      75: aload_1
      76: aload         13
      78: iload         10
      80: aload_0
      81: getfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: invokespecial #437                // Method prepareHttpHeaders:(Ljava/net/URI;Lio/micronaut/http/HttpRequest;Lio/netty/handler/codec/http/HttpRequest;ZZ)V
      95: aload_0
      96: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      99: invokeinterface #438,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     104: ifeq          115
     107: aload_0
     108: aload         8
     110: aload         13
     112: invokespecial #439                // Method debugRequest:(Ljava/net/URI;Lio/netty/handler/codec/http/HttpRequest;)V
     115: aload_0
     116: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     119: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     124: ifeq          134
     127: aload_0
     128: aload_1
     129: aload         13
     131: invokespecial #441                // Method traceRequest:(Lio/micronaut/http/HttpRequest;Lio/netty/handler/codec/http/HttpRequest;)V
     134: aload         5
     136: invokeinterface #442,  1          // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
     141: invokeinterface #443,  1          // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
     146: astore        14
     148: aload         5
     150: invokeinterface #444,  1          // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
     155: ldc_w         #445                // String micronaut-full-http-response
     158: new           #446                // class io/micronaut/http/client/netty/DefaultHttpClient$FullHttpResponseHandler
     161: dup
     162: aload_0
     163: aload         14
     165: aload         7
     167: iload         6
     169: aload_1
     170: aload_2
     171: aload_3
     172: invokespecial #447                // Method io/micronaut/http/client/netty/DefaultHttpClient$FullHttpResponseHandler."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/util/concurrent/Promise;Lio/netty/channel/pool/ChannelPool;ZLio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)V
     175: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     180: pop
     181: aload         5
     183: getstatic     #18                 // Field CHANNEL_CUSTOMIZER_KEY:Lio/netty/util/AttributeKey;
     186: invokeinterface #448,  2          // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     191: invokeinterface #449,  1          // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     196: checkcast     #450                // class io/micronaut/http/client/netty/NettyClientCustomizer
     199: invokeinterface #451,  1          // InterfaceMethod io/micronaut/http/client/netty/NettyClientCustomizer.onRequestPipelineBuilt:()V
     204: new           #452                // class io/micronaut/http/client/netty/NettyFuturePublisher
     207: dup
     208: aload         14
     210: iconst_1
     211: invokespecial #453                // Method io/micronaut/http/client/netty/NettyFuturePublisher."<init>":(Lio/netty/util/concurrent/Future;Z)V
     214: astore        15
     216: aload_2
     217: ifnull        244
     220: aload_2
     221: invokeinterface #454,  1          // InterfaceMethod io/micronaut/core/type/Argument.isVoid:()Z
     226: ifeq          244
     229: aload         15
     231: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     234: invokedynamic #455,  0            // InvokeDynamic #40:test:()Ljava/util/function/Predicate;
     239: invokevirtual #456                // Method reactor/core/publisher/Flux.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
     242: astore        15
     244: aload         15
     246: new           #457                // class io/micronaut/http/client/netty/ForwardingSubscriber
     249: dup
     250: aload         4
     252: invokespecial #458                // Method io/micronaut/http/client/netty/ForwardingSubscriber."<init>":(Lreactor/core/publisher/FluxSink;)V
     255: invokeinterface #459,  2          // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     260: aload         12
     262: aload         5
     264: aload         7
     266: aload         4
     268: invokevirtual #460                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter.writeAndClose:(Lio/netty/channel/Channel;Lio/netty/channel/pool/ChannelPool;Lreactor/core/publisher/FluxSink;)V
     271: return

  private reactor.core.publisher.Flux<io.micronaut.http.MutableHttpResponse<java.lang.Object>> streamRequestThroughChannel(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<?>, io.netty.channel.Channel, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #461,  0            // InvokeDynamic #41:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/netty/channel/Channel;)Ljava/util/function/Consumer;
       9: invokestatic  #462                // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      12: aload_0
      13: iload         4
      15: invokedynamic #463,  0            // InvokeDynamic #42:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Z)Ljava/util/function/Function;
      20: invokevirtual #188                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      23: areturn

  private <R extends io.micronaut.http.HttpResponse<?>> reactor.core.publisher.Flux<R> handleStreamHttpError(R, boolean);
    Code:
       0: aload_1
       1: invokeinterface #464,  1          // InterfaceMethod io/micronaut/http/HttpResponse.code:()I
       6: sipush        400
       9: if_icmplt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_3
      18: iload_3
      19: ifeq          51
      22: iload_2
      23: ifeq          51
      26: aload_0
      27: new           #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
      30: dup
      31: aload_1
      32: invokeinterface #466,  1          // InterfaceMethod io/micronaut/http/HttpResponse.getStatus:()Lio/micronaut/http/HttpStatus;
      37: invokevirtual #467                // Method io/micronaut/http/HttpStatus.getReason:()Ljava/lang/String;
      40: aload_1
      41: invokespecial #468                // Method io/micronaut/http/client/exceptions/HttpClientResponseException."<init>":(Ljava/lang/String;Lio/micronaut/http/HttpResponse;)V
      44: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      47: invokestatic  #346                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      50: areturn
      51: aload_1
      52: invokestatic  #256                // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      55: areturn

  private void streamRequestThroughChannel0(io.micronaut.http.HttpRequest<?>, io.micronaut.http.HttpRequest<?>, reactor.core.publisher.FluxSink, io.netty.channel.Channel) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_2
       3: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
       8: aload_3
       9: iconst_0
      10: invokespecial #469                // Method prepareRequest:(Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lreactor/core/publisher/FluxSink;Z)Lio/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter;
      13: astore        5
      15: aload         5
      17: invokevirtual #436                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter.getNettyRequest:()Lio/netty/handler/codec/http/HttpRequest;
      20: astore        6
      22: aload         4
      24: invokeinterface #442,  1          // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      29: invokeinterface #443,  1          // InterfaceMethod io/netty/channel/EventLoop.newPromise:()Lio/netty/util/concurrent/Promise;
      34: astore        7
      36: aload         4
      38: invokeinterface #444,  1          // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      43: astore        8
      45: aload         8
      47: ldc_w         #470                // String micronaut-http-response-full
      50: new           #471                // class io/micronaut/http/client/netty/DefaultHttpClient$StreamFullHttpResponseHandler
      53: dup
      54: aload_0
      55: aload         7
      57: aload_1
      58: aload_2
      59: invokespecial #472                // Method io/micronaut/http/client/netty/DefaultHttpClient$StreamFullHttpResponseHandler."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/util/concurrent/Promise;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;)V
      62: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      67: pop
      68: aload         8
      70: ldc_w         #473                // String micronaut-http-response-stream
      73: new           #474                // class io/micronaut/http/client/netty/DefaultHttpClient$StreamStreamHttpResponseHandler
      76: dup
      77: aload_0
      78: aload         7
      80: aload_1
      81: aload_2
      82: invokespecial #475                // Method io/micronaut/http/client/netty/DefaultHttpClient$StreamStreamHttpResponseHandler."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/util/concurrent/Promise;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;)V
      85: invokeinterface #326,  3          // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      90: pop
      91: aload         4
      93: getstatic     #18                 // Field CHANNEL_CUSTOMIZER_KEY:Lio/netty/util/AttributeKey;
      96: invokeinterface #448,  2          // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     101: invokeinterface #449,  1          // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     106: checkcast     #450                // class io/micronaut/http/client/netty/NettyClientCustomizer
     109: invokeinterface #451,  1          // InterfaceMethod io/micronaut/http/client/netty/NettyClientCustomizer.onRequestPipelineBuilt:()V
     114: aload_0
     115: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     118: invokeinterface #438,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     123: ifeq          138
     126: aload_0
     127: aload_2
     128: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
     133: aload         6
     135: invokespecial #439                // Method debugRequest:(Ljava/net/URI;Lio/netty/handler/codec/http/HttpRequest;)V
     138: aload_0
     139: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     142: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     147: ifeq          157
     150: aload_0
     151: aload_2
     152: aload         6
     154: invokespecial #441                // Method traceRequest:(Lio/micronaut/http/HttpRequest;Lio/netty/handler/codec/http/HttpRequest;)V
     157: aload         5
     159: aload         4
     161: aconst_null
     162: aload_3
     163: invokevirtual #460                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter.writeAndClose:(Lio/netty/channel/Channel;Lio/netty/channel/pool/ChannelPool;Lreactor/core/publisher/FluxSink;)V
     166: aload         7
     168: aload_3
     169: invokedynamic #476,  0            // InvokeDynamic #43:operationComplete:(Lreactor/core/publisher/FluxSink;)Lio/netty/util/concurrent/GenericFutureListener;
     174: invokeinterface #477,  2          // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     179: pop
     180: return

  private io.netty.buffer.ByteBuf charSequenceToByteBuf(java.lang.CharSequence, io.micronaut.http.MediaType);
    Code:
       0: aload_1
       1: astore_3
       2: aload_0
       3: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
       6: aload_3
       7: invokeinterface #478,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      12: aload_2
      13: invokevirtual #479                // Method io/micronaut/http/MediaType.getCharset:()Ljava/util/Optional;
      16: aload_0
      17: getfield      #56                 // Field defaultCharset:Ljava/nio/charset/Charset;
      20: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #480                // class java/nio/charset/Charset
      26: invokevirtual #481                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      29: invokeinterface #482,  2          // InterfaceMethod io/micronaut/core/io/buffer/ByteBufferFactory.copiedBuffer:([B)Lio/micronaut/core/io/buffer/ByteBuffer;
      34: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
      39: checkcast     #376                // class io/netty/buffer/ByteBuf
      42: areturn

  private java.lang.String getHostHeader(java.net.URI);
    Code:
       0: new           #281                // class io/micronaut/http/client/netty/DefaultHttpClient$RequestKey
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #282                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/net/URI;)V
       9: astore_2
      10: new           #59                 // class java/lang/StringBuilder
      13: dup
      14: aload_2
      15: invokevirtual #283                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
      18: invokespecial #484                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      21: astore_3
      22: aload_2
      23: invokevirtual #284                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
      26: istore        4
      28: iload         4
      30: iconst_m1
      31: if_icmple     62
      34: iload         4
      36: bipush        80
      38: if_icmpeq     62
      41: iload         4
      43: sipush        443
      46: if_icmpeq     62
      49: aload_3
      50: ldc_w         #485                // String :
      53: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload         4
      58: invokevirtual #486                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      61: pop
      62: aload_3
      63: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  private <I> void prepareHttpHeaders(java.net.URI, io.micronaut.http.HttpRequest<I>, io.netty.handler.codec.http.HttpRequest, boolean, boolean);
    Code:
       0: aload_3
       1: invokeinterface #487,  1          // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       6: astore        6
       8: aload         6
      10: getstatic     #488                // Field io/netty/handler/codec/http/HttpHeaderNames.HOST:Lio/netty/util/AsciiString;
      13: invokevirtual #489                // Method io/netty/handler/codec/http/HttpHeaders.contains:(Ljava/lang/CharSequence;)Z
      16: ifne          33
      19: aload         6
      21: getstatic     #488                // Field io/netty/handler/codec/http/HttpHeaderNames.HOST:Lio/netty/util/AsciiString;
      24: aload_0
      25: aload_1
      26: invokespecial #490                // Method getHostHeader:(Ljava/net/URI;)Ljava/lang/String;
      29: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      32: pop
      33: aload_0
      34: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
      37: getstatic     #94                 // Field io/micronaut/http/HttpVersion.HTTP_2_0:Lio/micronaut/http/HttpVersion;
      40: if_acmpeq     75
      43: iload         5
      45: ifeq          63
      48: aload         6
      50: getstatic     #492                // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      53: getstatic     #493                // Field io/netty/handler/codec/http/HttpHeaderValues.CLOSE:Lio/netty/util/AsciiString;
      56: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      59: pop
      60: goto          75
      63: aload         6
      65: getstatic     #492                // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
      68: getstatic     #494                // Field io/netty/handler/codec/http/HttpHeaderValues.KEEP_ALIVE:Lio/netty/util/AsciiString;
      71: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      74: pop
      75: iload         4
      77: ifeq          230
      80: aload_2
      81: invokeinterface #495,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getBody:()Ljava/util/Optional;
      86: astore        7
      88: aload         7
      90: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      93: ifeq          210
      96: aload         6
      98: getstatic     #496                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
     101: invokevirtual #489                // Method io/netty/handler/codec/http/HttpHeaders.contains:(Ljava/lang/CharSequence;)Z
     104: ifne          135
     107: aload_2
     108: invokeinterface #431,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getContentType:()Ljava/util/Optional;
     113: getstatic     #365                // Field io/micronaut/http/MediaType.APPLICATION_JSON_TYPE:Lio/micronaut/http/MediaType;
     116: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     119: checkcast     #171                // class io/micronaut/http/MediaType
     122: astore        8
     124: aload         6
     126: getstatic     #496                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
     129: aload         8
     131: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     134: pop
     135: aload_3
     136: instanceof    #497                // class io/netty/handler/codec/http/FullHttpRequest
     139: ifeq          173
     142: aload_3
     143: checkcast     #497                // class io/netty/handler/codec/http/FullHttpRequest
     146: astore        8
     148: aload         6
     150: getstatic     #498                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
     153: aload         8
     155: invokeinterface #499,  1          // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.content:()Lio/netty/buffer/ByteBuf;
     160: invokevirtual #500                // Method io/netty/buffer/ByteBuf.readableBytes:()I
     163: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     166: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     169: pop
     170: goto          230
     173: aload         6
     175: getstatic     #498                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
     178: invokevirtual #489                // Method io/netty/handler/codec/http/HttpHeaders.contains:(Ljava/lang/CharSequence;)Z
     181: ifne          230
     184: aload         6
     186: getstatic     #502                // Field io/netty/handler/codec/http/HttpHeaderNames.TRANSFER_ENCODING:Lio/netty/util/AsciiString;
     189: invokevirtual #489                // Method io/netty/handler/codec/http/HttpHeaders.contains:(Ljava/lang/CharSequence;)Z
     192: ifne          230
     195: aload         6
     197: getstatic     #502                // Field io/netty/handler/codec/http/HttpHeaderNames.TRANSFER_ENCODING:Lio/netty/util/AsciiString;
     200: getstatic     #503                // Field io/netty/handler/codec/http/HttpHeaderValues.CHUNKED:Lio/netty/util/AsciiString;
     203: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     206: pop
     207: goto          230
     210: aload_3
     211: instanceof    #504                // class io/micronaut/http/netty/stream/StreamedHttpRequest
     214: ifne          230
     217: aload         6
     219: getstatic     #498                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
     222: iconst_0
     223: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     226: invokevirtual #491                // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     229: pop
     230: return

  private boolean discardH2cStream(io.netty.handler.codec.http.HttpMessage);
    Code:
       0: aload_0
       1: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
       4: getstatic     #94                 // Field io/micronaut/http/HttpVersion.HTTP_2_0:Lio/micronaut/http/HttpVersion;
       7: if_acmpne     60
      10: aload_1
      11: invokeinterface #505,  1          // InterfaceMethod io/netty/handler/codec/http/HttpMessage.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      16: getstatic     #506                // Field io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.STREAM_ID:Lio/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames;
      19: invokevirtual #507                // Method io/netty/handler/codec/http2/HttpConversionUtil$ExtensionHeaderNames.text:()Lio/netty/util/AsciiString;
      22: iconst_m1
      23: invokevirtual #508                // Method io/netty/handler/codec/http/HttpHeaders.getInt:(Ljava/lang/CharSequence;I)I
      26: istore_2
      27: iload_2
      28: iconst_1
      29: if_icmpne     58
      32: aload_0
      33: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      36: invokeinterface #438,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      41: ifeq          56
      44: aload_0
      45: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      48: ldc_w         #509                // String Received response on HTTP2 stream 1, the stream used to respond to the initial upgrade request. Ignoring.
      51: invokeinterface #510,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn
      60: iconst_0
      61: ireturn

  private void addReadTimeoutHandler(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: getfield      #87                 // Field readTimeoutMillis:Ljava/lang/Long;
       4: ifnull        116
       7: aload_0
       8: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
      11: getstatic     #94                 // Field io/micronaut/http/HttpVersion.HTTP_2_0:Lio/micronaut/http/HttpVersion;
      14: if_acmpne     86
      17: aload_1
      18: ldc_w         #511                // String http2-settings
      21: invokeinterface #512,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      26: checkcast     #396                // class io/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler
      29: astore_2
      30: aload_2
      31: ifnull        53
      34: aload_0
      35: aload_2
      36: invokestatic  #513                // Method io/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler.access$700:(Lio/micronaut/http/client/netty/DefaultHttpClient$Http2SettingsHandler;)Lio/netty/channel/ChannelPromise;
      39: aload_0
      40: aload_1
      41: invokedynamic #514,  0            // InvokeDynamic #44:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/channel/ChannelPipeline;)Lio/netty/util/concurrent/GenericFutureListener;
      46: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      49: pop
      50: goto          83
      53: aload_1
      54: ldc_w         #387                // String http2-connection
      57: ldc_w         #515                // String read-timeout
      60: new           #516                // class io/netty/handler/timeout/ReadTimeoutHandler
      63: dup
      64: aload_0
      65: getfield      #87                 // Field readTimeoutMillis:Ljava/lang/Long;
      68: invokevirtual #517                // Method java/lang/Long.longValue:()J
      71: getstatic     #162                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      74: invokespecial #518                // Method io/netty/handler/timeout/ReadTimeoutHandler."<init>":(JLjava/util/concurrent/TimeUnit;)V
      77: invokeinterface #519,  4          // InterfaceMethod io/netty/channel/ChannelPipeline.addBefore:(Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      82: pop
      83: goto          116
      86: aload_1
      87: ldc_w         #395                // String http-client-codec
      90: ldc_w         #515                // String read-timeout
      93: new           #516                // class io/netty/handler/timeout/ReadTimeoutHandler
      96: dup
      97: aload_0
      98: getfield      #87                 // Field readTimeoutMillis:Ljava/lang/Long;
     101: invokevirtual #517                // Method java/lang/Long.longValue:()J
     104: getstatic     #162                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     107: invokespecial #518                // Method io/netty/handler/timeout/ReadTimeoutHandler."<init>":(JLjava/util/concurrent/TimeUnit;)V
     110: invokeinterface #519,  4          // InterfaceMethod io/netty/channel/ChannelPipeline.addBefore:(Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     115: pop
     116: return

  private void removeReadTimeoutHandler(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: getfield      #87                 // Field readTimeoutMillis:Ljava/lang/Long;
       4: ifnull        29
       7: aload_1
       8: ldc_w         #515                // String read-timeout
      11: invokeinterface #520,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Ljava/lang/String;)Lio/netty/channel/ChannelHandlerContext;
      16: ifnull        29
      19: aload_1
      20: ldc_w         #515                // String read-timeout
      23: invokeinterface #521,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      28: pop
      29: return

  private io.micronaut.http.filter.ClientFilterChain buildChain(java.util.concurrent.atomic.AtomicReference<io.micronaut.http.HttpRequest<?>>, java.util.List<io.micronaut.http.filter.HttpClientFilter>);
    Code:
       0: new           #522                // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #523                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #524,  1          // InterfaceMethod java/util/List.size:()I
      14: istore        4
      16: new           #525                // class io/micronaut/http/client/netty/DefaultHttpClient$10
      19: dup
      20: aload_0
      21: aload_3
      22: iload         4
      24: aload_2
      25: aload_1
      26: invokespecial #526                // Method io/micronaut/http/client/netty/DefaultHttpClient$10."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/util/concurrent/atomic/AtomicInteger;ILjava/util/List;Ljava/util/concurrent/atomic/AtomicReference;)V
      29: areturn

  private io.netty.handler.codec.http.multipart.HttpPostRequestEncoder buildFormDataRequest(io.micronaut.http.MutableHttpRequest, java.lang.Object) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: new           #527                // class io/netty/handler/codec/http/multipart/HttpPostRequestEncoder
       3: dup
       4: aload_1
       5: invokestatic  #353                // InterfaceMethod io/micronaut/http/netty/NettyHttpRequestBuilder.toHttpRequest:(Lio/micronaut/http/HttpRequest;)Lio/netty/handler/codec/http/HttpRequest;
       8: iconst_0
       9: invokespecial #528                // Method io/netty/handler/codec/http/multipart/HttpPostRequestEncoder."<init>":(Lio/netty/handler/codec/http/HttpRequest;Z)V
      12: astore_3
      13: aload_2
      14: instanceof    #197                // class java/util/Map
      17: ifeq          29
      20: aload_2
      21: checkcast     #197                // class java/util/Map
      24: astore        4
      26: goto          35
      29: aload_2
      30: invokestatic  #529                // InterfaceMethod io/micronaut/core/beans/BeanMap.of:(Ljava/lang/Object;)Lio/micronaut/core/beans/BeanMap;
      33: astore        4
      35: aload         4
      37: invokeinterface #104,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      42: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      47: astore        5
      49: aload         5
      51: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          171
      59: aload         5
      61: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #108                // class java/util/Map$Entry
      69: astore        6
      71: aload         6
      73: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: astore        7
      80: aload         7
      82: ifnull        168
      85: aload         7
      87: instanceof    #530                // class java/util/Collection
      90: ifeq          151
      93: aload         7
      95: checkcast     #530                // class java/util/Collection
      98: astore        8
     100: aload         8
     102: invokeinterface #531,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     107: astore        9
     109: aload         9
     111: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     116: ifeq          148
     119: aload         9
     121: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     126: astore        10
     128: aload_0
     129: aload_3
     130: aload         6
     132: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     137: checkcast     #111                // class java/lang/String
     140: aload         10
     142: invokespecial #532                // Method addBodyAttribute:(Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder;Ljava/lang/String;Ljava/lang/Object;)V
     145: goto          109
     148: goto          168
     151: aload_0
     152: aload_3
     153: aload         6
     155: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     160: checkcast     #111                // class java/lang/String
     163: aload         7
     165: invokespecial #532                // Method addBodyAttribute:(Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder;Ljava/lang/String;Ljava/lang/Object;)V
     168: goto          49
     171: aload_3
     172: areturn

  private void addBodyAttribute(io.netty.handler.codec.http.multipart.HttpPostRequestEncoder, java.lang.String, java.lang.Object) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: getstatic     #35                 // Field io/micronaut/core/convert/ConversionService.SHARED:Lio/micronaut/core/convert/ConversionService;
       3: aload_3
       4: ldc           #111                // class java/lang/String
       6: invokeinterface #361,  3          // InterfaceMethod io/micronaut/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/Optional;
      11: astore        4
      13: aload         4
      15: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      18: ifeq          34
      21: aload_1
      22: aload_2
      23: aload         4
      25: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
      28: checkcast     #111                // class java/lang/String
      31: invokevirtual #533                // Method io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.addBodyAttribute:(Ljava/lang/String;Ljava/lang/String;)V
      34: return

  private io.netty.handler.codec.http.multipart.HttpPostRequestEncoder buildMultipartRequest(io.micronaut.http.MutableHttpRequest, java.lang.Object) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: new           #534                // class io/netty/handler/codec/http/multipart/DefaultHttpDataFactory
       3: dup
       4: ldc2_w        #535                // long 16384l
       7: invokespecial #537                // Method io/netty/handler/codec/http/multipart/DefaultHttpDataFactory."<init>":(J)V
      10: astore_3
      11: aload_1
      12: invokestatic  #353                // InterfaceMethod io/micronaut/http/netty/NettyHttpRequestBuilder.toHttpRequest:(Lio/micronaut/http/HttpRequest;)Lio/netty/handler/codec/http/HttpRequest;
      15: astore        4
      17: new           #527                // class io/netty/handler/codec/http/multipart/HttpPostRequestEncoder
      20: dup
      21: aload_3
      22: aload         4
      24: iconst_1
      25: getstatic     #538                // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      28: getstatic     #539                // Field io/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode.HTML5:Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode;
      31: invokespecial #540                // Method io/netty/handler/codec/http/multipart/HttpPostRequestEncoder."<init>":(Lio/netty/handler/codec/http/multipart/HttpDataFactory;Lio/netty/handler/codec/http/HttpRequest;ZLjava/nio/charset/Charset;Lio/netty/handler/codec/http/multipart/HttpPostRequestEncoder$EncoderMode;)V
      34: astore        5
      36: aload_2
      37: instanceof    #541                // class io/micronaut/http/client/multipart/MultipartBody$Builder
      40: ifeq          51
      43: aload_2
      44: checkcast     #541                // class io/micronaut/http/client/multipart/MultipartBody$Builder
      47: invokevirtual #542                // Method io/micronaut/http/client/multipart/MultipartBody$Builder.build:()Lio/micronaut/http/client/multipart/MultipartBody;
      50: astore_2
      51: aload_2
      52: instanceof    #543                // class io/micronaut/http/client/multipart/MultipartBody
      55: ifeq          88
      58: aload_2
      59: checkcast     #543                // class io/micronaut/http/client/multipart/MultipartBody
      62: astore        6
      64: aload         5
      66: aload         6
      68: new           #544                // class io/micronaut/http/client/netty/DefaultHttpClient$11
      71: dup
      72: aload_0
      73: aload_3
      74: aload         4
      76: invokespecial #545                // Method io/micronaut/http/client/netty/DefaultHttpClient$11."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/handler/codec/http/multipart/HttpDataFactory;Lio/netty/handler/codec/http/HttpRequest;)V
      79: invokevirtual #546                // Method io/micronaut/http/client/multipart/MultipartBody.getData:(Lio/micronaut/http/client/multipart/MultipartDataFactory;)Ljava/util/List;
      82: invokevirtual #547                // Method io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.setBodyHttpDatas:(Ljava/util/List;)V
      85: goto          116
      88: new           #548                // class io/micronaut/http/multipart/MultipartException
      91: dup
      92: ldc_w         #549                // String The type %s is not a supported type for a multipart request body
      95: iconst_1
      96: anewarray     #550                // class java/lang/Object
      99: dup
     100: iconst_0
     101: aload_2
     102: invokevirtual #359                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     105: invokevirtual #551                // Method java/lang/Class.getName:()Ljava/lang/String;
     108: aastore
     109: invokestatic  #552                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     112: invokespecial #553                // Method io/micronaut/http/multipart/MultipartException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload         5
     118: areturn

  private void debugRequest(java.net.URI, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: aload_0
       1: getfield      #10                 // Field log:Lorg/slf4j/Logger;
       4: ldc_w         #554                // String Sending HTTP {} to {}
       7: aload_2
       8: invokeinterface #555,  1          // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      13: aload_1
      14: invokevirtual #268                // Method java/net/URI.toString:()Ljava/lang/String;
      17: invokeinterface #556,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  private void traceRequest(io.micronaut.http.HttpRequest<?>, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: aload_2
       1: invokeinterface #487,  1          // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
       6: astore_3
       7: aload_0
       8: aload_3
       9: invokespecial #9                  // Method traceHeaders:(Lio/netty/handler/codec/http/HttpHeaders;)V
      12: aload_1
      13: invokeinterface #432,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getMethod:()Lio/micronaut/http/HttpMethod;
      18: invokestatic  #433                // Method io/micronaut/http/HttpMethod.permitsRequestBody:(Lio/micronaut/http/HttpMethod;)Z
      21: ifeq          79
      24: aload_1
      25: invokeinterface #495,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getBody:()Ljava/util/Optional;
      30: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      33: ifeq          79
      36: aload_2
      37: instanceof    #497                // class io/netty/handler/codec/http/FullHttpRequest
      40: ifeq          79
      43: aload_2
      44: checkcast     #497                // class io/netty/handler/codec/http/FullHttpRequest
      47: astore        4
      49: aload         4
      51: invokeinterface #499,  1          // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.content:()Lio/netty/buffer/ByteBuf;
      56: astore        5
      58: aload_0
      59: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      62: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      67: ifeq          79
      70: aload_0
      71: ldc_w         #557                // String Request
      74: aload         5
      76: invokespecial #7                  // Method traceBody:(Ljava/lang/String;Lio/netty/buffer/ByteBuf;)V
      79: return

  private void traceBody(java.lang.String, io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #10                 // Field log:Lorg/slf4j/Logger;
       4: new           #59                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc_w         #558                // String  Body
      18: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      29: aload_0
      30: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      33: ldc_w         #560                // String ----
      36: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      41: aload_0
      42: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      45: aload_2
      46: aload_0
      47: getfield      #56                 // Field defaultCharset:Ljava/nio/charset/Charset;
      50: invokevirtual #561                // Method io/netty/buffer/ByteBuf.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
      53: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      58: aload_0
      59: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      62: ldc_w         #560                // String ----
      65: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      70: return

  private void traceChunk(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #10                 // Field log:Lorg/slf4j/Logger;
       4: ldc_w         #562                // String Sending Chunk
       7: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      12: aload_0
      13: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      16: ldc_w         #560                // String ----
      19: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      24: aload_0
      25: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      28: aload_1
      29: aload_0
      30: getfield      #56                 // Field defaultCharset:Ljava/nio/charset/Charset;
      33: invokevirtual #561                // Method io/netty/buffer/ByteBuf.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
      36: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      41: aload_0
      42: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      45: ldc_w         #560                // String ----
      48: invokeinterface #559,  2          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      53: return

  private void traceHeaders(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_1
       1: invokevirtual #563                // Method io/netty/handler/codec/http/HttpHeaders.names:()Ljava/util/Set;
       4: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          133
      19: aload_2
      20: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #111                // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #564                // Method io/netty/handler/codec/http/HttpHeaders.getAll:(Ljava/lang/String;)Ljava/util/List;
      34: astore        4
      36: aload         4
      38: invokeinterface #524,  1          // InterfaceMethod java/util/List.size:()I
      43: iconst_1
      44: if_icmple     99
      47: aload         4
      49: invokeinterface #565,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      54: astore        5
      56: aload         5
      58: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          96
      66: aload         5
      68: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #111                // class java/lang/String
      76: astore        6
      78: aload_0
      79: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      82: ldc_w         #566                // String {}: {}
      85: aload_3
      86: aload         6
      88: invokeinterface #567,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      93: goto          56
      96: goto          130
      99: aload         4
     101: invokeinterface #568,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     106: ifne          130
     109: aload_0
     110: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     113: ldc_w         #566                // String {}: {}
     116: aload_3
     117: aload         4
     119: iconst_0
     120: invokeinterface #343,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     125: invokeinterface #567,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     130: goto          10
     133: return

  private static io.micronaut.http.codec.MediaTypeCodecRegistry createDefaultMediaTypeRegistry();
    Code:
       0: new           #569                // class io/micronaut/jackson/databind/JacksonDatabindMapper
       3: dup
       4: invokespecial #570                // Method io/micronaut/jackson/databind/JacksonDatabindMapper."<init>":()V
       7: astore_0
       8: new           #571                // class io/micronaut/runtime/ApplicationConfiguration
      11: dup
      12: invokespecial #572                // Method io/micronaut/runtime/ApplicationConfiguration."<init>":()V
      15: astore_1
      16: iconst_2
      17: anewarray     #573                // class io/micronaut/http/codec/MediaTypeCodec
      20: dup
      21: iconst_0
      22: new           #574                // class io/micronaut/json/codec/JsonMediaTypeCodec
      25: dup
      26: aload_0
      27: aload_1
      28: aconst_null
      29: invokespecial #575                // Method io/micronaut/json/codec/JsonMediaTypeCodec."<init>":(Lio/micronaut/json/JsonMapper;Lio/micronaut/runtime/ApplicationConfiguration;Lio/micronaut/http/codec/CodecConfiguration;)V
      32: aastore
      33: dup
      34: iconst_1
      35: new           #576                // class io/micronaut/json/codec/JsonStreamMediaTypeCodec
      38: dup
      39: aload_0
      40: aload_1
      41: aconst_null
      42: invokespecial #577                // Method io/micronaut/json/codec/JsonStreamMediaTypeCodec."<init>":(Lio/micronaut/json/JsonMapper;Lio/micronaut/runtime/ApplicationConfiguration;Lio/micronaut/http/codec/CodecConfiguration;)V
      45: aastore
      46: invokestatic  #578                // InterfaceMethod io/micronaut/http/codec/MediaTypeCodecRegistry.of:([Lio/micronaut/http/codec/MediaTypeCodec;)Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      49: areturn

  private <I> io.micronaut.http.client.netty.DefaultHttpClient$NettyRequestWriter prepareRequest(io.micronaut.http.HttpRequest<I>, java.net.URI, reactor.core.publisher.FluxSink<io.micronaut.http.HttpResponse<java.lang.Object>>, boolean) throws io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException;
    Code:
       0: aload_1
       1: invokeinterface #431,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getContentType:()Ljava/util/Optional;
       6: getstatic     #365                // Field io/micronaut/http/MediaType.APPLICATION_JSON_TYPE:Lio/micronaut/http/MediaType;
       9: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #171                // class io/micronaut/http/MediaType
      15: astore        5
      17: aload_1
      18: invokeinterface #432,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getMethod:()Lio/micronaut/http/HttpMethod;
      23: invokestatic  #433                // Method io/micronaut/http/HttpMethod.permitsRequestBody:(Lio/micronaut/http/HttpMethod;)Z
      26: istore        6
      28: aload_1
      29: instanceof    #170                // class io/micronaut/http/MutableHttpRequest
      32: ifne          46
      35: new           #579                // class java/lang/IllegalArgumentException
      38: dup
      39: ldc_w         #580                // String A MutableHttpRequest is required
      42: invokespecial #581                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_1
      47: checkcast     #170                // class io/micronaut/http/MutableHttpRequest
      50: astore        7
      52: aload_0
      53: aload         7
      55: aload_2
      56: aload         5
      58: iload         6
      60: aconst_null
      61: aload_3
      62: invokedynamic #582,  0            // InvokeDynamic #45:accept:(Lreactor/core/publisher/FluxSink;)Ljava/util/function/Consumer;
      67: iload         4
      69: invokevirtual #435                // Method buildNettyRequest:(Lio/micronaut/http/MutableHttpRequest;Ljava/net/URI;Lio/micronaut/http/MediaType;ZLio/micronaut/core/type/Argument;Ljava/util/function/Consumer;Z)Lio/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter;
      72: astore        8
      74: aload         8
      76: invokevirtual #436                // Method io/micronaut/http/client/netty/DefaultHttpClient$NettyRequestWriter.getNettyRequest:()Lio/netty/handler/codec/http/HttpRequest;
      79: astore        9
      81: aload_0
      82: aload_2
      83: aload_1
      84: aload         9
      86: iload         6
      88: iconst_1
      89: invokespecial #437                // Method prepareHttpHeaders:(Ljava/net/URI;Lio/micronaut/http/HttpRequest;Lio/netty/handler/codec/http/HttpRequest;ZZ)V
      92: aload         8
      94: areturn

  private reactor.core.Disposable buildDisposableChannel(io.netty.channel.ChannelFuture);
    Code:
       0: new           #583                // class io/micronaut/http/client/netty/DefaultHttpClient$12
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #584                // Method io/micronaut/http/client/netty/DefaultHttpClient$12."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/channel/ChannelFuture;)V
       9: areturn

  private io.netty.channel.pool.AbstractChannelPoolHandler newPoolHandler(io.micronaut.http.client.netty.DefaultHttpClient$RequestKey);
    Code:
       0: new           #585                // class io/micronaut/http/client/netty/DefaultHttpClient$13
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #586                // Method io/micronaut/http/client/netty/DefaultHttpClient$13."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;)V
       9: areturn

  private <V, C extends io.netty.util.concurrent.Future<V>> io.netty.util.concurrent.Future<V> addInstrumentedListener(io.netty.util.concurrent.Future<V>, io.netty.util.concurrent.GenericFutureListener<C>);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method combineFactories:()Lio/micronaut/scheduling/instrument/InvocationInstrumenter;
       4: astore_3
       5: aload_1
       6: aload_3
       7: aload_2
       8: invokedynamic #587,  0            // InvokeDynamic #46:operationComplete:(Lio/micronaut/scheduling/instrument/InvocationInstrumenter;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/GenericFutureListener;
      13: invokeinterface #588,  2          // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      18: areturn

  private io.micronaut.scheduling.instrument.InvocationInstrumenter combineFactories();
    Code:
       0: aload_0
       1: getfield      #91                 // Field invocationInstrumenterFactories:Ljava/util/List;
       4: invokestatic  #589                // Method io/micronaut/core/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          14
      10: getstatic     #590                // Field io/micronaut/scheduling/instrument/InvocationInstrumenter.NOOP:Lio/micronaut/scheduling/instrument/InvocationInstrumenter;
      13: areturn
      14: aload_0
      15: getfield      #91                 // Field invocationInstrumenterFactories:Ljava/util/List;
      18: invokeinterface #591,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      23: invokedynamic #592,  0            // InvokeDynamic #47:apply:()Ljava/util/function/Function;
      28: invokeinterface #593,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      33: invokedynamic #594,  0            // InvokeDynamic #48:test:()Ljava/util/function/Predicate;
      38: invokeinterface #595,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      43: invokestatic  #596                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      46: invokeinterface #597,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #530                // class java/util/Collection
      54: invokestatic  #598                // InterfaceMethod io/micronaut/scheduling/instrument/InvocationInstrumenter.combine:(Ljava/util/Collection;)Lio/micronaut/scheduling/instrument/InvocationInstrumenter;
      57: areturn

  private static boolean isSecureScheme(java.lang.String);
    Code:
       0: ldc_w         #599                // String https
       3: aload_0
       4: invokevirtual #292                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       7: ifne          20
      10: ldc_w         #601                // String wss
      13: aload_0
      14: invokevirtual #292                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private <E extends io.micronaut.http.client.exceptions.HttpClientException> E customizeException(E);
    Code:
       0: aload_0
       1: getfield      #125                // Field informationalServiceId:Ljava/lang/String;
       4: ifnull        18
       7: aload_1
       8: aload_0
       9: getfield      #125                // Field informationalServiceId:Ljava/lang/String;
      12: invokevirtual #602                // Method io/micronaut/http/client/exceptions/HttpClientException.setServiceId:(Ljava/lang/String;)V
      15: goto          42
      18: aload_0
      19: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
      22: instanceof    #603                // class io/micronaut/http/client/ServiceHttpClientConfiguration
      25: ifeq          42
      28: aload_1
      29: aload_0
      30: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
      33: checkcast     #603                // class io/micronaut/http/client/ServiceHttpClientConfiguration
      36: invokevirtual #604                // Method io/micronaut/http/client/ServiceHttpClientConfiguration.getServiceId:()Ljava/lang/String;
      39: invokevirtual #602                // Method io/micronaut/http/client/exceptions/HttpClientException.setServiceId:(Ljava/lang/String;)V
      42: aload_1
      43: areturn

  public io.micronaut.context.LifeCycle stop();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method stop:()Lio/micronaut/http/client/HttpClient;
       4: areturn

  public io.micronaut.context.LifeCycle start();
    Code:
       0: aload_0
       1: invokevirtual #605                // Method start:()Lio/micronaut/http/client/HttpClient;
       4: areturn

  private static void lambda$addInstrumentedListener$64(io.micronaut.scheduling.instrument.InvocationInstrumenter, io.netty.util.concurrent.GenericFutureListener, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #606,  1          // InterfaceMethod io/micronaut/scheduling/instrument/InvocationInstrumenter.newInstrumentation:()Lio/micronaut/scheduling/instrument/Instrumentation;
       6: astore_3
       7: aload_1
       8: aload_2
       9: invokeinterface #607,  2          // InterfaceMethod io/netty/util/concurrent/GenericFutureListener.operationComplete:(Lio/netty/util/concurrent/Future;)V
      14: aload_3
      15: ifnull        54
      18: aload_3
      19: invokeinterface #608,  1          // InterfaceMethod io/micronaut/scheduling/instrument/Instrumentation.close:()V
      24: goto          54
      27: astore        4
      29: aload_3
      30: ifnull        51
      33: aload_3
      34: invokeinterface #608,  1          // InterfaceMethod io/micronaut/scheduling/instrument/Instrumentation.close:()V
      39: goto          51
      42: astore        5
      44: aload         4
      46: aload         5
      48: invokevirtual #609                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      51: aload         4
      53: athrow
      54: return
    Exception table:
       from    to  target type
           7    14    27   Class java/lang/Throwable
          33    39    42   Class java/lang/Throwable

  private static void lambda$prepareRequest$63(reactor.core.publisher.FluxSink, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #610,  1          // InterfaceMethod reactor/core/publisher/FluxSink.isCancelled:()Z
       6: ifne          16
       9: aload_0
      10: aload_1
      11: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      16: return

  private void lambda$addReadTimeoutHandler$62(io.netty.channel.ChannelPipeline, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifeq          39
       9: aload_1
      10: ldc_w         #387                // String http2-connection
      13: ldc_w         #515                // String read-timeout
      16: new           #516                // class io/netty/handler/timeout/ReadTimeoutHandler
      19: dup
      20: aload_0
      21: getfield      #87                 // Field readTimeoutMillis:Ljava/lang/Long;
      24: invokevirtual #517                // Method java/lang/Long.longValue:()J
      27: getstatic     #162                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      30: invokespecial #518                // Method io/netty/handler/timeout/ReadTimeoutHandler."<init>":(JLjava/util/concurrent/TimeUnit;)V
      33: invokeinterface #519,  4          // InterfaceMethod io/netty/channel/ChannelPipeline.addBefore:(Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      38: pop
      39: return

  private static void lambda$streamRequestThroughChannel0$61(reactor.core.publisher.FluxSink, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifeq          31
       9: aload_0
      10: aload_1
      11: invokeinterface #613,  1          // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      16: invokeinterface #614,  2          // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
      21: pop
      22: aload_0
      23: invokeinterface #615,  1          // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
      28: goto          43
      31: aload_0
      32: aload_1
      33: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      38: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      43: return

  private org.reactivestreams.Publisher lambda$streamRequestThroughChannel$60(boolean, io.micronaut.http.MutableHttpResponse);
    Code:
       0: aload_0
       1: aload_2
       2: iload_1
       3: invokespecial #617                // Method handleStreamHttpError:(Lio/micronaut/http/HttpResponse;Z)Lreactor/core/publisher/Flux;
       6: areturn

  private void lambda$streamRequestThroughChannel$59(io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, io.netty.channel.Channel, reactor.core.publisher.FluxSink);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload_3
       6: invokespecial #618                // Method streamRequestThroughChannel0:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lreactor/core/publisher/FluxSink;Lio/netty/channel/Channel;)V
       9: goto          23
      12: astore        5
      14: aload         4
      16: aload         5
      18: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      23: return
    Exception table:
       from    to  target type
           0     9    12   Class io/netty/handler/codec/http/multipart/HttpPostRequestEncoder$ErrorDataEncoderException

  private static boolean lambda$sendRequestThroughChannel$58(io.micronaut.http.HttpResponse);
    Code:
       0: iconst_0
       1: ireturn

  private static void lambda$sendRequestThroughChannel$57(reactor.core.publisher.FluxSink, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #610,  1          // InterfaceMethod reactor/core/publisher/FluxSink.isCancelled:()Z
       6: ifne          16
       9: aload_0
      10: aload_1
      11: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      16: return

  private java.net.URI lambda$resolveURI$56(io.micronaut.http.HttpRequest, boolean, java.net.URI, io.micronaut.discovery.ServiceInstance);
    Code:
       0: aload         4
       2: invokeinterface #620,  1          // InterfaceMethod io/micronaut/discovery/ServiceInstance.getMetadata:()Lio/micronaut/core/convert/value/ConvertibleValues;
       7: ldc_w         #621                // String Authorization-Info
      10: ldc           #111                // class java/lang/String
      12: invokeinterface #622,  3          // InterfaceMethod io/micronaut/core/convert/value/ConvertibleValues.get:(Ljava/lang/CharSequence;Ljava/lang/Class;)Ljava/util/Optional;
      17: astore        5
      19: aload_1
      20: instanceof    #170                // class io/micronaut/http/MutableHttpRequest
      23: ifeq          57
      26: aload         5
      28: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      31: ifeq          57
      34: aload_1
      35: checkcast     #170                // class io/micronaut/http/MutableHttpRequest
      38: invokeinterface #623,  1          // InterfaceMethod io/micronaut/http/MutableHttpRequest.getHeaders:()Lio/micronaut/http/MutableHttpHeaders;
      43: aload         5
      45: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
      48: checkcast     #111                // class java/lang/String
      51: invokeinterface #624,  2          // InterfaceMethod io/micronaut/http/MutableHttpHeaders.auth:(Ljava/lang/String;)Lio/micronaut/http/MutableHttpHeaders;
      56: pop
      57: aload         4
      59: iload_2
      60: ifeq          71
      63: aload_0
      64: aload_3
      65: invokevirtual #625                // Method prependContextPath:(Ljava/net/URI;)Ljava/net/URI;
      68: goto          72
      71: aload_3
      72: invokeinterface #626,  2          // InterfaceMethod io/micronaut/discovery/ServiceInstance.resolve:(Ljava/net/URI;)Ljava/net/URI;
      77: areturn

  private org.reactivestreams.Publisher lambda$readBodyOnError$55(io.micronaut.core.type.Argument, java.lang.Throwable);
    Code:
       0: aload_2
       1: instanceof    #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
       4: ifeq          34
       7: aload_2
       8: checkcast     #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
      11: invokevirtual #627                // Method io/micronaut/http/client/exceptions/HttpClientResponseException.getResponse:()Lio/micronaut/http/HttpResponse;
      14: astore_3
      15: aload_3
      16: instanceof    #628                // class io/micronaut/http/client/netty/NettyStreamedHttpResponse
      19: ifeq          34
      22: aload_0
      23: aload_3
      24: aload_1
      25: invokedynamic #629,  0            // InvokeDynamic #49:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpResponse;Lio/micronaut/core/type/Argument;)Ljava/util/function/Consumer;
      30: invokestatic  #630                // Method reactor/core/publisher/Mono.create:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      33: areturn
      34: aload_2
      35: invokestatic  #631                // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      38: areturn

  private void lambda$readBodyOnError$54(io.micronaut.http.HttpResponse, io.micronaut.core.type.Argument, reactor.core.publisher.MonoSink);
    Code:
       0: aload_1
       1: checkcast     #628                // class io/micronaut/http/client/netty/NettyStreamedHttpResponse
       4: astore        4
       6: aload         4
       8: invokevirtual #632                // Method io/micronaut/http/client/netty/NettyStreamedHttpResponse.getNettyResponse:()Lio/micronaut/http/netty/stream/StreamedHttpResponse;
      11: astore        5
      13: aload         5
      15: new           #633                // class io/micronaut/http/client/netty/DefaultHttpClient$9
      18: dup
      19: aload_0
      20: aload_3
      21: aload         5
      23: aload_1
      24: aload_2
      25: invokespecial #634                // Method io/micronaut/http/client/netty/DefaultHttpClient$9."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lreactor/core/publisher/MonoSink;Lio/micronaut/http/netty/stream/StreamedHttpResponse;Lio/micronaut/http/HttpResponse;Lio/micronaut/core/type/Argument;)V
      28: invokeinterface #635,  2          // InterfaceMethod io/micronaut/http/netty/stream/StreamedHttpResponse.subscribe:(Lorg/reactivestreams/Subscriber;)V
      33: return

  private io.micronaut.http.client.exceptions.HttpClientException lambda$buildNettyRequest$53(java.lang.Object, io.micronaut.http.MediaType);
    Code:
       0: aload_0
       1: new           #272                // class io/micronaut/http/client/exceptions/HttpClientException
       4: dup
       5: new           #59                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc_w         #636                // String Body [
      15: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_1
      19: invokevirtual #637                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc_w         #638                // String ] cannot be encoded to content type [
      25: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #637                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc_w         #639                // String ]. No possible codecs or converters found.
      35: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #311                // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;)V
      44: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      47: areturn

  private io.netty.buffer.ByteBuf lambda$buildNettyRequest$52(io.micronaut.core.type.Argument, java.lang.Object, io.micronaut.http.codec.MediaTypeCodec);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_1
       5: aload_2
       6: invokeinterface #640,  2          // InterfaceMethod io/micronaut/core/type/Argument.isInstance:(Ljava/lang/Object;)Z
      11: ifeq          35
      14: aload_3
      15: aload_1
      16: aload_2
      17: aload_0
      18: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      21: invokeinterface #641,  4          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodec.encode:(Lio/micronaut/core/type/Argument;Ljava/lang/Object;Lio/micronaut/core/io/buffer/ByteBufferFactory;)Lio/micronaut/core/io/buffer/ByteBuffer;
      26: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
      31: checkcast     #376                // class io/netty/buffer/ByteBuf
      34: areturn
      35: aload_3
      36: aload_2
      37: aload_0
      38: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      41: invokeinterface #642,  3          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodec.encode:(Ljava/lang/Object;Lio/micronaut/core/io/buffer/ByteBufferFactory;)Lio/micronaut/core/io/buffer/ByteBuffer;
      46: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
      51: checkcast     #376                // class io/netty/buffer/ByteBuf
      54: areturn

  private io.netty.handler.codec.http.HttpContent lambda$buildNettyRequest$51(io.micronaut.http.MediaType, io.micronaut.core.type.Argument, java.lang.Object);
    Code:
       0: aload_3
       1: instanceof    #350                // class java/lang/CharSequence
       4: ifeq          57
       7: aload_3
       8: checkcast     #350                // class java/lang/CharSequence
      11: aload_1
      12: invokevirtual #479                // Method io/micronaut/http/MediaType.getCharset:()Ljava/util/Optional;
      15: getstatic     #643                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #480                // class java/nio/charset/Charset
      24: invokestatic  #644                // Method io/netty/buffer/Unpooled.copiedBuffer:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lio/netty/buffer/ByteBuf;
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      33: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      38: ifeq          47
      41: aload_0
      42: aload         4
      44: invokespecial #645                // Method traceChunk:(Lio/netty/buffer/ByteBuf;)V
      47: new           #646                // class io/netty/handler/codec/http/DefaultHttpContent
      50: dup
      51: aload         4
      53: invokespecial #647                // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
      56: areturn
      57: aload_3
      58: instanceof    #376                // class io/netty/buffer/ByteBuf
      61: ifeq          112
      64: aload_3
      65: checkcast     #376                // class io/netty/buffer/ByteBuf
      68: astore        4
      70: aload_0
      71: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      74: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      79: ifeq          102
      82: aload_0
      83: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      86: ldc_w         #648                // String Sending Bytes Chunk. Length: {}
      89: aload         4
      91: invokevirtual #500                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      94: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      97: invokeinterface #649,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     102: new           #646                // class io/netty/handler/codec/http/DefaultHttpContent
     105: dup
     106: aload         4
     108: invokespecial #647                // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
     111: areturn
     112: aload_3
     113: instanceof    #650                // class "[B"
     116: ifeq          168
     119: aload_3
     120: checkcast     #650                // class "[B"
     123: astore        4
     125: aload_0
     126: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     129: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     134: ifeq          155
     137: aload_0
     138: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     141: ldc_w         #648                // String Sending Bytes Chunk. Length: {}
     144: aload         4
     146: arraylength
     147: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     150: invokeinterface #649,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     155: new           #646                // class io/netty/handler/codec/http/DefaultHttpContent
     158: dup
     159: aload         4
     161: invokestatic  #651                // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
     164: invokespecial #647                // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
     167: areturn
     168: aload_3
     169: instanceof    #652                // class io/micronaut/core/io/buffer/ByteBuffer
     172: ifeq          263
     175: aload_3
     176: checkcast     #652                // class io/micronaut/core/io/buffer/ByteBuffer
     179: astore        4
     181: aload         4
     183: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
     188: astore        5
     190: aload_0
     191: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     194: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     199: ifeq          224
     202: aload_0
     203: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     206: ldc_w         #648                // String Sending Bytes Chunk. Length: {}
     209: aload         4
     211: invokeinterface #653,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.readableBytes:()I
     216: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     219: invokeinterface #649,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     224: aload         5
     226: instanceof    #376                // class io/netty/buffer/ByteBuf
     229: ifeq          245
     232: new           #646                // class io/netty/handler/codec/http/DefaultHttpContent
     235: dup
     236: aload         5
     238: checkcast     #376                // class io/netty/buffer/ByteBuf
     241: invokespecial #647                // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
     244: areturn
     245: new           #646                // class io/netty/handler/codec/http/DefaultHttpContent
     248: dup
     249: aload         4
     251: invokeinterface #654,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.toByteArray:()[B
     256: invokestatic  #651                // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
     259: invokespecial #647                // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
     262: areturn
     263: aload_0
     264: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
     267: ifnull        337
     270: aload_0
     271: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
     274: aload_1
     275: invokeinterface #374,  2          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodecRegistry.findCodec:(Lio/micronaut/http/MediaType;)Ljava/util/Optional;
     280: astore        4
     282: aload         4
     284: aload_0
     285: aload_2
     286: aload_3
     287: invokedynamic #655,  0            // InvokeDynamic #50:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/core/type/Argument;Ljava/lang/Object;)Ljava/util/function/Function;
     292: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     295: aconst_null
     296: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     299: checkcast     #376                // class io/netty/buffer/ByteBuf
     302: astore        5
     304: aload         5
     306: ifnull        337
     309: aload_0
     310: getfield      #10                 // Field log:Lorg/slf4j/Logger;
     313: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     318: ifeq          327
     321: aload_0
     322: aload         5
     324: invokespecial #645                // Method traceChunk:(Lio/netty/buffer/ByteBuf;)V
     327: new           #646                // class io/netty/handler/codec/http/DefaultHttpContent
     330: dup
     331: aload         5
     333: invokespecial #647                // Method io/netty/handler/codec/http/DefaultHttpContent."<init>":(Lio/netty/buffer/ByteBuf;)V
     336: areturn
     337: new           #656                // class io/micronaut/http/codec/CodecException
     340: dup
     341: new           #59                 // class java/lang/StringBuilder
     344: dup
     345: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     348: ldc_w         #657                // String Cannot encode value [
     351: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: aload_3
     355: invokevirtual #637                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     358: ldc_w         #658                // String ]. No possible encoders found
     361: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     367: invokespecial #659                // Method io/micronaut/http/codec/CodecException."<init>":(Ljava/lang/String;)V
     370: athrow

  private io.netty.buffer.ByteBuf lambda$buildNettyRequest$50(io.micronaut.core.type.Argument, java.lang.Object, io.micronaut.http.codec.MediaTypeCodec);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_1
       5: aload_2
       6: invokeinterface #640,  2          // InterfaceMethod io/micronaut/core/type/Argument.isInstance:(Ljava/lang/Object;)Z
      11: ifeq          35
      14: aload_3
      15: aload_1
      16: aload_2
      17: aload_0
      18: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      21: invokeinterface #641,  4          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodec.encode:(Lio/micronaut/core/type/Argument;Ljava/lang/Object;Lio/micronaut/core/io/buffer/ByteBufferFactory;)Lio/micronaut/core/io/buffer/ByteBuffer;
      26: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
      31: checkcast     #376                // class io/netty/buffer/ByteBuf
      34: areturn
      35: aload_3
      36: aload_2
      37: aload_0
      38: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      41: invokeinterface #642,  3          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodec.encode:(Ljava/lang/Object;Lio/micronaut/core/io/buffer/ByteBufferFactory;)Lio/micronaut/core/io/buffer/ByteBuffer;
      46: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
      51: checkcast     #376                // class io/netty/buffer/ByteBuf
      54: areturn

  private static java.lang.IllegalArgumentException lambda$buildNettyRequest$49(java.lang.Object);
    Code:
       0: new           #579                // class java/lang/IllegalArgumentException
       3: dup
       4: new           #59                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc_w         #660                // String Unconvertible reactive type:
      14: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: invokevirtual #637                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: invokespecial #581                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: areturn

  private static org.reactivestreams.Publisher lambda$applyFilterToResponsePublisher$48(java.util.List, io.micronaut.http.HttpRequest, io.micronaut.http.filter.ClientFilterChain, io.micronaut.http.HttpRequest);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #343,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       7: checkcast     #140                // class io/micronaut/http/filter/HttpClientFilter
      10: aload_1
      11: aload_2
      12: invokeinterface #344,  3          // InterfaceMethod io/micronaut/http/filter/HttpClientFilter.doFilter:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/FilterChain;)Lorg/reactivestreams/Publisher;
      17: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      20: aload_3
      21: invokedynamic #661,  0            // InvokeDynamic #51:apply:(Lio/micronaut/http/HttpRequest;)Ljava/util/function/Function;
      26: invokevirtual #662                // Method reactor/core/publisher/Flux.contextWrite:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      29: areturn
      30: astore        4
      32: aload         4
      34: invokestatic  #346                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      37: areturn
    Exception table:
       from    to  target type
           0    29    30   Class java/lang/Throwable

  private static reactor.util.context.Context lambda$applyFilterToResponsePublisher$47(io.micronaut.http.HttpRequest, reactor.util.context.Context);
    Code:
       0: aload_1
       1: ldc_w         #664                // String micronaut.http.server.request
       4: aload_0
       5: invokeinterface #665,  3          // InterfaceMethod reactor/util/context/Context.put:(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
      10: areturn

  private static org.reactivestreams.Publisher lambda$applyFilterToResponsePublisher$46(org.reactivestreams.Publisher, io.micronaut.http.MutableHttpRequest, io.micronaut.http.filter.ClientFilterChain);
    Code:
       0: aload_0
       1: areturn

  private void lambda$closeChannelAsync$45(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          61
       9: aload_0
      10: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      13: invokeinterface #666,  1          // InterfaceMethod org/slf4j/Logger.isErrorEnabled:()Z
      18: ifeq          61
      21: aload_1
      22: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      27: astore_2
      28: aload_0
      29: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      32: new           #59                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc_w         #667                // String Error closing request connection:
      42: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #668                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      49: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: aload_2
      56: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: return

  private static org.reactivestreams.Publisher lambda$exchangeImpl$44(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #669                // class java/util/concurrent/TimeoutException
       4: ifeq          14
       7: getstatic     #670                // Field io/micronaut/http/client/exceptions/ReadTimeoutException.TIMEOUT_EXCEPTION:Lio/micronaut/http/client/exceptions/ReadTimeoutException;
      10: invokestatic  #346                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      13: areturn
      14: aload_0
      15: invokestatic  #346                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      18: areturn

  private void lambda$exchangeImpl$43(io.micronaut.http.HttpRequest, java.net.URI, java.util.concurrent.atomic.AtomicReference, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument, reactor.core.publisher.FluxSink);
    Code:
       0: getstatic     #356                // Field io/micronaut/http/MediaType.MULTIPART_FORM_DATA_TYPE:Lio/micronaut/http/MediaType;
       3: aload_1
       4: invokeinterface #431,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getContentType:()Ljava/util/Optional;
       9: aconst_null
      10: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokevirtual #349                // Method io/micronaut/http/MediaType.equals:(Ljava/lang/Object;)Z
      16: istore        7
      18: aload_0
      19: getfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
      22: ifnull        104
      25: iload         7
      27: ifne          104
      30: new           #281                // class io/micronaut/http/client/netty/DefaultHttpClient$RequestKey
      33: dup
      34: aload_0
      35: aload_2
      36: invokespecial #282                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/net/URI;)V
      39: astore        8
      41: aload_0
      42: getfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
      45: aload         8
      47: invokeinterface #671,  2          // InterfaceMethod io/netty/channel/pool/ChannelPoolMap.get:(Ljava/lang/Object;)Lio/netty/channel/pool/ChannelPool;
      52: astore        9
      54: aload         9
      56: invokeinterface #672,  1          // InterfaceMethod io/netty/channel/pool/ChannelPool.acquire:()Lio/netty/util/concurrent/Future;
      61: astore        10
      63: aload_0
      64: aload         10
      66: aload_0
      67: aload_3
      68: aload         4
      70: aload         5
      72: aload         6
      74: aload         8
      76: aload         9
      78: invokedynamic #673,  0            // InvokeDynamic #52:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/util/concurrent/atomic/AtomicReference;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Lreactor/core/publisher/FluxSink;Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;Lio/netty/channel/pool/ChannelPool;)Lio/netty/util/concurrent/GenericFutureListener;
      83: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      86: pop
      87: goto          148
      90: astore        8
      92: aload         6
      94: aload         8
      96: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     101: goto          148
     104: aload_0
     105: aload_2
     106: invokevirtual #229                // Method buildSslContext:(Ljava/net/URI;)Lio/netty/handler/ssl/SslContext;
     109: astore        8
     111: aload_0
     112: aload_1
     113: aload_2
     114: aload         8
     116: iconst_0
     117: aconst_null
     118: invokevirtual #674                // Method doConnect:(Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;ZLjava/util/function/Consumer;)Lio/netty/channel/ChannelFuture;
     121: astore        9
     123: aload_0
     124: aload         9
     126: aload_0
     127: aload         6
     129: aload_2
     130: aload_3
     131: aload         4
     133: aload         5
     135: aload         9
     137: aload         8
     139: invokedynamic #675,  0            // InvokeDynamic #53:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lreactor/core/publisher/FluxSink;Ljava/net/URI;Ljava/util/concurrent/atomic/AtomicReference;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Lio/netty/channel/ChannelFuture;Lio/netty/handler/ssl/SslContext;)Lio/netty/util/concurrent/GenericFutureListener;
     144: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
     147: pop
     148: return
    Exception table:
       from    to  target type
          30    87    90   Class io/micronaut/http/client/exceptions/HttpClientException

  private void lambda$exchangeImpl$42(reactor.core.publisher.FluxSink, java.net.URI, java.util.concurrent.atomic.AtomicReference, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument, io.netty.channel.ChannelFuture, io.netty.handler.ssl.SslContext, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload         8
       2: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       7: ifne          92
      10: aload         8
      12: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      17: astore        9
      19: aload_1
      20: invokeinterface #610,  1          // InterfaceMethod reactor/core/publisher/FluxSink.isCancelled:()Z
      25: ifeq          46
      28: aload_0
      29: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      32: ldc_w         #676                // String Connection to {} failed, but emitter already cancelled.
      35: aload_2
      36: aload         9
      38: invokeinterface #567,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: goto          89
      46: aload_1
      47: aload_0
      48: new           #272                // class io/micronaut/http/client/exceptions/HttpClientException
      51: dup
      52: new           #59                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc_w         #677                // String Connect Error:
      62: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload         9
      67: invokevirtual #668                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      70: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload         9
      78: invokespecial #274                // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      84: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      89: goto          139
      92: aload_0
      93: aload_3
      94: invokevirtual #678                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      97: checkcast     #184                // class io/micronaut/http/HttpRequest
     100: aload         4
     102: aload         5
     104: aload_1
     105: aload         6
     107: invokeinterface #679,  1          // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     112: aload         7
     114: ifnull        121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: aconst_null
     123: invokespecial #680                // Method sendRequestThroughChannel:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Lreactor/core/publisher/FluxSink;Lio/netty/channel/Channel;ZLio/netty/channel/pool/ChannelPool;)V
     126: goto          139
     129: astore        9
     131: aload_1
     132: aload         9
     134: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     139: return
    Exception table:
       from    to  target type
          92   126   129   Class java/lang/Exception

  private void lambda$exchangeImpl$41(java.util.concurrent.atomic.AtomicReference, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument, reactor.core.publisher.FluxSink, io.micronaut.http.client.netty.DefaultHttpClient$RequestKey, io.netty.channel.pool.ChannelPool, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload         7
       2: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       7: ifeq          115
      10: aload         7
      12: invokeinterface #681,  1          // InterfaceMethod io/netty/util/concurrent/Future.get:()Ljava/lang/Object;
      17: checkcast     #682                // class io/netty/channel/Channel
      20: astore        8
      22: aload         8
      24: getstatic     #24                 // Field STREAM_CHANNEL_INITIALIZED:Lio/netty/util/AttributeKey;
      27: invokeinterface #448,  2          // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      32: invokeinterface #449,  1          // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
      37: checkcast     #683                // class io/netty/util/concurrent/Future
      40: astore        9
      42: aload         9
      44: ifnonnull     88
      47: aload_0
      48: aload_1
      49: invokevirtual #678                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      52: checkcast     #184                // class io/micronaut/http/HttpRequest
      55: aload_2
      56: aload_3
      57: aload         4
      59: aload         8
      61: aload         5
      63: invokevirtual #684                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.isSecure:()Z
      66: aload         6
      68: invokespecial #680                // Method sendRequestThroughChannel:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Lreactor/core/publisher/FluxSink;Lio/netty/channel/Channel;ZLio/netty/channel/pool/ChannelPool;)V
      71: goto          112
      74: astore        10
      76: aload         4
      78: aload         10
      80: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      85: goto          112
      88: aload_0
      89: aload         9
      91: aload_0
      92: aload_1
      93: aload_2
      94: aload_3
      95: aload         4
      97: aload         8
      99: aload         5
     101: aload         6
     103: invokedynamic #685,  0            // InvokeDynamic #54:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/util/concurrent/atomic/AtomicReference;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Lreactor/core/publisher/FluxSink;Lio/netty/channel/Channel;Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;Lio/netty/channel/pool/ChannelPool;)Lio/netty/util/concurrent/GenericFutureListener;
     108: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
     111: pop
     112: goto          168
     115: aload         7
     117: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
     122: astore        8
     124: aload         4
     126: aload_0
     127: new           #272                // class io/micronaut/http/client/exceptions/HttpClientException
     130: dup
     131: new           #59                 // class java/lang/StringBuilder
     134: dup
     135: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     138: ldc_w         #677                // String Connect Error:
     141: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload         8
     146: invokevirtual #668                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     149: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: aload         8
     157: invokespecial #274                // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     160: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
     163: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     168: return
    Exception table:
       from    to  target type
          47    71    74   Class java/lang/Exception

  private void lambda$exchangeImpl$40(java.util.concurrent.atomic.AtomicReference, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument, reactor.core.publisher.FluxSink, io.netty.channel.Channel, io.micronaut.http.client.netty.DefaultHttpClient$RequestKey, io.netty.channel.pool.ChannelPool, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #678                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       5: checkcast     #184                // class io/micronaut/http/HttpRequest
       8: aload_2
       9: aload_3
      10: aload         4
      12: aload         5
      14: aload         6
      16: invokevirtual #684                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.isSecure:()Z
      19: aload         7
      21: invokespecial #680                // Method sendRequestThroughChannel:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Lreactor/core/publisher/FluxSink;Lio/netty/channel/Channel;ZLio/netty/channel/pool/ChannelPool;)V
      24: goto          38
      27: astore        9
      29: aload         4
      31: aload         9
      33: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      38: return
    Exception table:
       from    to  target type
           0    24    27   Class java/lang/Exception

  private void lambda$connectAndStream$39(io.micronaut.http.HttpRequest, java.net.URI, io.netty.handler.ssl.SslContext, boolean, io.micronaut.http.HttpRequest, java.util.concurrent.atomic.AtomicReference, boolean, reactor.core.publisher.FluxSink);
    Code:
       0: aload_0
       1: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
       4: getstatic     #94                 // Field io/micronaut/http/HttpVersion.HTTP_2_0:Lio/micronaut/http/HttpVersion;
       7: if_acmpne     40
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: iconst_1
      15: iload         4
      17: aload_0
      18: aload_1
      19: aload         5
      21: aload         6
      23: iload         7
      25: aload         8
      27: invokedynamic #686,  0            // InvokeDynamic #55:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/util/concurrent/atomic/AtomicReference;ZLreactor/core/publisher/FluxSink;)Ljava/util/function/Consumer;
      32: invokevirtual #280                // Method doConnect:(Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;ZZLjava/util/function/Consumer;)Lio/netty/channel/ChannelFuture;
      35: astore        9
      37: goto          75
      40: aload_0
      41: aload_1
      42: aload_2
      43: aload_3
      44: iconst_1
      45: iload         4
      47: aconst_null
      48: invokevirtual #280                // Method doConnect:(Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;ZZLjava/util/function/Consumer;)Lio/netty/channel/ChannelFuture;
      51: astore        9
      53: aload_0
      54: aload         9
      56: aload_0
      57: aload_1
      58: aload         5
      60: aload         6
      62: iload         7
      64: aload         8
      66: invokedynamic #687,  0            // InvokeDynamic #56:operationComplete:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/util/concurrent/atomic/AtomicReference;ZLreactor/core/publisher/FluxSink;)Lio/netty/channel/ChannelFutureListener;
      71: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      74: pop
      75: goto          90
      78: astore        10
      80: aload         8
      82: aload         10
      84: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      89: return
      90: aload_0
      91: aload         9
      93: invokespecial #688                // Method buildDisposableChannel:(Lio/netty/channel/ChannelFuture;)Lreactor/core/Disposable;
      96: astore        10
      98: aload         8
     100: aload         10
     102: invokeinterface #689,  2          // InterfaceMethod reactor/core/publisher/FluxSink.onDispose:(Lreactor/core/Disposable;)Lreactor/core/publisher/FluxSink;
     107: pop
     108: aload         8
     110: aload         10
     112: invokeinterface #690,  2          // InterfaceMethod reactor/core/publisher/FluxSink.onCancel:(Lreactor/core/Disposable;)Lreactor/core/publisher/FluxSink;
     117: pop
     118: return
    Exception table:
       from    to  target type
           0    75    78   Class io/micronaut/http/client/exceptions/HttpClientException

  private void lambda$connectAndStream$38(io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, java.util.concurrent.atomic.AtomicReference, boolean, reactor.core.publisher.FluxSink, io.netty.channel.ChannelFuture) throws java.lang.Exception;
    Code:
       0: aload         6
       2: invokeinterface #691,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       7: ifeq          62
      10: aload         6
      12: invokeinterface #679,  1          // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      17: astore        7
      19: aload_1
      20: getstatic     #692                // Field io/micronaut/http/client/netty/NettyClientHttpRequest.CHANNEL:Ljava/lang/CharSequence;
      23: aload         7
      25: invokeinterface #693,  3          // InterfaceMethod io/micronaut/http/HttpRequest.setAttribute:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/micronaut/http/HttpRequest;
      30: pop
      31: aload_0
      32: aload_2
      33: aload_3
      34: invokevirtual #678                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      37: checkcast     #184                // class io/micronaut/http/HttpRequest
      40: aload         7
      42: iload         4
      44: invokespecial #694                // Method streamRequestThroughChannel:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/netty/channel/Channel;Z)Lreactor/core/publisher/Flux;
      47: new           #457                // class io/micronaut/http/client/netty/ForwardingSubscriber
      50: dup
      51: aload         5
      53: invokespecial #458                // Method io/micronaut/http/client/netty/ForwardingSubscriber."<init>":(Lreactor/core/publisher/FluxSink;)V
      56: invokevirtual #695                // Method reactor/core/publisher/Flux.subscribe:(Lorg/reactivestreams/Subscriber;)V
      59: goto          115
      62: aload         6
      64: invokeinterface #696,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      69: astore        7
      71: aload         5
      73: aload_0
      74: new           #272                // class io/micronaut/http/client/exceptions/HttpClientException
      77: dup
      78: new           #59                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc_w         #697                // String Connect error:
      88: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload         7
      93: invokevirtual #668                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      96: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: aload         7
     104: invokespecial #274                // Method io/micronaut/http/client/exceptions/HttpClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     107: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
     110: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     115: return

  private void lambda$connectAndStream$37(io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, java.util.concurrent.atomic.AtomicReference, boolean, reactor.core.publisher.FluxSink, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload         6
       2: invokeinterface #698,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       7: astore        7
       9: aload_1
      10: getstatic     #692                // Field io/micronaut/http/client/netty/NettyClientHttpRequest.CHANNEL:Ljava/lang/CharSequence;
      13: aload         7
      15: invokeinterface #693,  3          // InterfaceMethod io/micronaut/http/HttpRequest.setAttribute:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/micronaut/http/HttpRequest;
      20: pop
      21: aload_0
      22: aload_2
      23: aload_3
      24: invokevirtual #678                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      27: checkcast     #184                // class io/micronaut/http/HttpRequest
      30: aload         7
      32: iload         4
      34: invokespecial #694                // Method streamRequestThroughChannel:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/netty/channel/Channel;Z)Lreactor/core/publisher/Flux;
      37: new           #457                // class io/micronaut/http/client/netty/ForwardingSubscriber
      40: dup
      41: aload         5
      43: invokespecial #458                // Method io/micronaut/http/client/netty/ForwardingSubscriber."<init>":(Lreactor/core/publisher/FluxSink;)V
      46: invokevirtual #695                // Method reactor/core/publisher/Flux.subscribe:(Lorg/reactivestreams/Subscriber;)V
      49: goto          63
      52: astore        7
      54: aload         5
      56: aload         7
      58: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
           0    49    52   Class java/lang/Exception

  private org.reactivestreams.Publisher lambda$proxy$36(io.micronaut.http.HttpRequest, io.micronaut.http.client.ProxyRequestOptions, java.net.URI);
    Code:
       0: aload_1
       1: instanceof    #170                // class io/micronaut/http/MutableHttpRequest
       4: ifeq          14
       7: aload_1
       8: checkcast     #170                // class io/micronaut/http/MutableHttpRequest
      11: goto          20
      14: aload_1
      15: invokeinterface #699,  1          // InterfaceMethod io/micronaut/http/HttpRequest.mutate:()Lio/micronaut/http/MutableHttpRequest;
      20: astore        4
      22: aload_2
      23: invokevirtual #700                // Method io/micronaut/http/client/ProxyRequestOptions.isRetainHostHeader:()Z
      26: ifne          42
      29: aload         4
      31: invokedynamic #701,  0            // InvokeDynamic #57:accept:()Ljava/util/function/Consumer;
      36: invokeinterface #702,  2          // InterfaceMethod io/micronaut/http/MutableHttpRequest.headers:(Ljava/util/function/Consumer;)Lio/micronaut/http/MutableHttpRequest;
      41: pop
      42: new           #227                // class java/util/concurrent/atomic/AtomicReference
      45: dup
      46: aload         4
      48: invokespecial #228                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      51: astore        5
      53: aload_0
      54: aload_1
      55: aload_1
      56: aload_3
      57: aload_0
      58: aload_3
      59: invokevirtual #229                // Method buildSslContext:(Ljava/net/URI;)Lio/netty/handler/ssl/SslContext;
      62: aload         5
      64: iconst_1
      65: iconst_0
      66: invokespecial #230                // Method connectAndStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/netty/handler/ssl/SslContext;Ljava/util/concurrent/atomic/AtomicReference;ZZ)Lreactor/core/publisher/Flux;
      69: astore        6
      71: aload_0
      72: aload_1
      73: aload         5
      75: invokevirtual #678                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      78: checkcast     #184                // class io/micronaut/http/HttpRequest
      81: aload_3
      82: aload         5
      84: aload         6
      86: invokespecial #232                // Method applyFilterToResponsePublisher:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
      89: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      92: astore        6
      94: aload         6
      96: areturn

  private static void lambda$proxy$35(io.micronaut.http.MutableHttpHeaders);
    Code:
       0: aload_0
       1: getstatic     #488                // Field io/netty/handler/codec/http/HttpHeaderNames.HOST:Lio/netty/util/AsciiString;
       4: invokeinterface #703,  2          // InterfaceMethod io/micronaut/http/MutableHttpHeaders.remove:(Ljava/lang/CharSequence;)Lio/micronaut/http/MutableHttpHeaders;
       9: pop
      10: return

  private static void lambda$dataStreamImpl$34(io.micronaut.http.HttpRequest);
    Code:
       0: aload_0
       1: getstatic     #692                // Field io/micronaut/http/client/netty/NettyClientHttpRequest.CHANNEL:Ljava/lang/CharSequence;
       4: invokeinterface #704,  2          // InterfaceMethod io/micronaut/http/HttpRequest.getAttribute:(Ljava/lang/CharSequence;)Ljava/util/Optional;
       9: aconst_null
      10: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: instanceof    #682                // class io/netty/channel/Channel
      18: ifeq          42
      21: aload_1
      22: checkcast     #682                // class io/netty/channel/Channel
      25: astore_2
      26: aload_2
      27: invokeinterface #249,  1          // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      32: ifeq          42
      35: aload_2
      36: invokeinterface #705,  1          // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      41: pop
      42: return

  private static org.reactivestreams.Publisher lambda$dataStreamImpl$33(java.util.function.Function, io.micronaut.http.HttpResponse);
    Code:
       0: aload_1
       1: instanceof    #628                // class io/micronaut/http/client/netty/NettyStreamedHttpResponse
       4: ifne          18
       7: new           #706                // class java/lang/IllegalStateException
      10: dup
      11: ldc_w         #707                // String Response has been wrapped in non streaming type. Do not wrap the response in client filters for stream requests
      14: invokespecial #708                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: checkcast     #628                // class io/micronaut/http/client/netty/NettyStreamedHttpResponse
      22: astore_2
      23: aload_2
      24: invokevirtual #632                // Method io/micronaut/http/client/netty/NettyStreamedHttpResponse.getNettyResponse:()Lio/micronaut/http/netty/stream/StreamedHttpResponse;
      27: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      30: astore_3
      31: aload_3
      32: invokedynamic #709,  0            // InvokeDynamic #58:test:()Ljava/util/function/Predicate;
      37: invokevirtual #456                // Method reactor/core/publisher/Flux.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
      40: aload_0
      41: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      44: areturn

  private static boolean lambda$dataStreamImpl$32(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: invokeinterface #710,  1          // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
       6: instanceof    #711                // class io/netty/buffer/EmptyByteBuf
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private io.micronaut.core.io.buffer.ByteBuffer lambda$dataStreamImpl$31(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_1
       1: invokeinterface #710,  1          // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
       6: astore_2
       7: aload_0
       8: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      11: aload_2
      12: invokeinterface #712,  2          // InterfaceMethod io/micronaut/core/io/buffer/ByteBufferFactory.wrap:(Ljava/lang/Object;)Lio/micronaut/core/io/buffer/ByteBuffer;
      17: areturn

  private static void lambda$jsonStreamImpl$30(io.micronaut.http.HttpRequest);
    Code:
       0: aload_0
       1: getstatic     #692                // Field io/micronaut/http/client/netty/NettyClientHttpRequest.CHANNEL:Ljava/lang/CharSequence;
       4: invokeinterface #704,  2          // InterfaceMethod io/micronaut/http/HttpRequest.getAttribute:(Ljava/lang/CharSequence;)Ljava/util/Optional;
       9: aconst_null
      10: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: instanceof    #682                // class io/netty/channel/Channel
      18: ifeq          42
      21: aload_1
      22: checkcast     #682                // class io/netty/channel/Channel
      25: astore_2
      26: aload_2
      27: invokeinterface #249,  1          // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      32: ifeq          42
      35: aload_2
      36: invokeinterface #705,  1          // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      41: pop
      42: return

  private org.reactivestreams.Publisher lambda$jsonStreamImpl$29(io.micronaut.core.type.Argument, io.micronaut.http.HttpRequest, io.micronaut.http.HttpResponse);
    Code:
       0: aload_3
       1: instanceof    #628                // class io/micronaut/http/client/netty/NettyStreamedHttpResponse
       4: ifne          18
       7: new           #706                // class java/lang/IllegalStateException
      10: dup
      11: ldc_w         #707                // String Response has been wrapped in non streaming type. Do not wrap the response in client filters for stream requests
      14: invokespecial #708                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      22: getstatic     #365                // Field io/micronaut/http/MediaType.APPLICATION_JSON_TYPE:Lio/micronaut/http/MediaType;
      25: invokeinterface #374,  2          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodecRegistry.findCodec:(Lio/micronaut/http/MediaType;)Ljava/util/Optional;
      30: invokedynamic #713,  0            // InvokeDynamic #59:get:()Ljava/util/function/Supplier;
      35: invokevirtual #363                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      38: checkcast     #714                // class io/micronaut/json/codec/MapperMediaTypeCodec
      41: astore        4
      43: aload_3
      44: invokestatic  #715                // InterfaceMethod io/micronaut/http/netty/NettyHttpResponseBuilder.toStreamResponse:(Lio/micronaut/http/HttpResponse;)Lio/micronaut/http/netty/stream/StreamedHttpResponse;
      47: astore        5
      49: aload         5
      51: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      54: astore        6
      56: aload_3
      57: invokeinterface #716,  1          // InterfaceMethod io/micronaut/http/HttpResponse.getContentType:()Ljava/util/Optional;
      62: invokedynamic #717,  0            // InvokeDynamic #60:apply:()Ljava/util/function/Function;
      67: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      70: iconst_0
      71: invokestatic  #81                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      74: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #718                // class java/lang/Boolean
      80: invokevirtual #719                // Method java/lang/Boolean.booleanValue:()Z
      83: istore        7
      85: ldc           #144                // class java/lang/Iterable
      87: aload_1
      88: invokeinterface #720,  1          // InterfaceMethod io/micronaut/core/type/Argument.getType:()Ljava/lang/Class;
      93: invokevirtual #721                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      96: ifne          108
      99: iload         7
     101: ifne          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: istore        8
     111: aload         4
     113: invokevirtual #722                // Method io/micronaut/json/codec/MapperMediaTypeCodec.getJsonMapper:()Lio/micronaut/json/JsonMapper;
     116: aload_0
     117: aload         6
     119: aload_2
     120: invokedynamic #723,  0            // InvokeDynamic #61:accept:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lreactor/core/publisher/Flux;Lio/micronaut/http/HttpRequest;)Ljava/util/function/Consumer;
     125: iload         8
     127: invokeinterface #724,  3          // InterfaceMethod io/micronaut/json/JsonMapper.createReactiveParser:(Ljava/util/function/Consumer;Z)Lorg/reactivestreams/Processor;
     132: astore        9
     134: aload         9
     136: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     139: aload         4
     141: aload_1
     142: invokedynamic #725,  0            // InvokeDynamic #62:apply:(Lio/micronaut/json/codec/MapperMediaTypeCodec;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
     147: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     150: areturn

  private static java.lang.Object lambda$jsonStreamImpl$28(io.micronaut.json.codec.MapperMediaTypeCodec, io.micronaut.core.type.Argument, io.micronaut.json.tree.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #726                // Method io/micronaut/json/codec/MapperMediaTypeCodec.decode:(Lio/micronaut/core/type/Argument;Lio/micronaut/json/tree/JsonNode;)Ljava/lang/Object;
       6: areturn

  private void lambda$jsonStreamImpl$27(reactor.core.publisher.Flux, io.micronaut.http.HttpRequest, org.reactivestreams.Processor);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #727,  0            // InvokeDynamic #63:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;)Ljava/util/function/Function;
       8: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      11: aload_3
      12: invokevirtual #695                // Method reactor/core/publisher/Flux.subscribe:(Lorg/reactivestreams/Subscriber;)V
      15: return

  private byte[] lambda$jsonStreamImpl$26(io.micronaut.http.HttpRequest, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_2
       1: invokeinterface #710,  1          // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
       6: astore_3
       7: aload_0
       8: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      11: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      16: ifeq          71
      19: aload_0
      20: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      23: ldc_w         #728                // String HTTP Client Streaming Response Received Chunk (length: {}) for Request: {} {}
      26: iconst_3
      27: anewarray     #550                // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_3
      33: invokevirtual #500                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      36: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: dup
      41: iconst_1
      42: aload_1
      43: invokeinterface #729,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getMethodName:()Ljava/lang/String;
      48: aastore
      49: dup
      50: iconst_2
      51: aload_1
      52: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
      57: aastore
      58: invokeinterface #730,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      63: aload_0
      64: ldc_w         #731                // String Chunk
      67: aload_3
      68: invokespecial #7                  // Method traceBody:(Ljava/lang/String;Lio/netty/buffer/ByteBuf;)V
      71: aload_3
      72: invokestatic  #732                // Method io/netty/buffer/ByteBufUtil.getBytes:(Lio/netty/buffer/ByteBuf;)[B
      75: astore        4
      77: aload_3
      78: invokevirtual #733                // Method io/netty/buffer/ByteBuf.release:()Z
      81: pop
      82: aload         4
      84: areturn
      85: astore        5
      87: aload_3
      88: invokevirtual #733                // Method io/netty/buffer/ByteBuf.release:()Z
      91: pop
      92: aload         5
      94: athrow
    Exception table:
       from    to  target type
          71    77    85   any
          85    87    85   any

  private static java.lang.Boolean lambda$jsonStreamImpl$25(io.micronaut.http.MediaType);
    Code:
       0: aload_0
       1: getstatic     #734                // Field io/micronaut/http/MediaType.APPLICATION_JSON_STREAM_TYPE:Lio/micronaut/http/MediaType;
       4: invokevirtual #349                // Method io/micronaut/http/MediaType.equals:(Ljava/lang/Object;)Z
       7: invokestatic  #81                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.IllegalStateException lambda$jsonStreamImpl$24();
    Code:
       0: new           #706                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #735                // String No JSON codec found
       7: invokespecial #708                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: areturn

  private static void lambda$exchangeStreamImpl$23(io.micronaut.http.HttpRequest);
    Code:
       0: aload_0
       1: getstatic     #692                // Field io/micronaut/http/client/netty/NettyClientHttpRequest.CHANNEL:Ljava/lang/CharSequence;
       4: invokeinterface #704,  2          // InterfaceMethod io/micronaut/http/HttpRequest.getAttribute:(Ljava/lang/CharSequence;)Ljava/util/Optional;
       9: aconst_null
      10: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: instanceof    #682                // class io/netty/channel/Channel
      18: ifeq          42
      21: aload_1
      22: checkcast     #682                // class io/netty/channel/Channel
      25: astore_2
      26: aload_2
      27: invokeinterface #249,  1          // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      32: ifeq          42
      35: aload_2
      36: invokeinterface #705,  1          // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      41: pop
      42: return

  private org.reactivestreams.Publisher lambda$exchangeStreamImpl$22(io.micronaut.http.HttpRequest, io.micronaut.http.HttpResponse);
    Code:
       0: aload_2
       1: invokestatic  #715                // InterfaceMethod io/micronaut/http/netty/NettyHttpResponseBuilder.toStreamResponse:(Lio/micronaut/http/HttpResponse;)Lio/micronaut/http/netty/stream/StreamedHttpResponse;
       4: astore_3
       5: aload_3
       6: invokestatic  #179                // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       9: astore        4
      11: aload         4
      13: invokedynamic #736,  0            // InvokeDynamic #64:test:()Ljava/util/function/Predicate;
      18: invokevirtual #456                // Method reactor/core/publisher/Flux.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
      21: aload_0
      22: aload_1
      23: aload_3
      24: aload_2
      25: invokedynamic #737,  0            // InvokeDynamic #65:apply:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/netty/stream/StreamedHttpResponse;Lio/micronaut/http/HttpResponse;)Ljava/util/function/Function;
      30: invokevirtual #181                // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      33: areturn

  private io.micronaut.http.HttpResponse lambda$exchangeStreamImpl$21(io.micronaut.http.HttpRequest, io.micronaut.http.netty.stream.StreamedHttpResponse, io.micronaut.http.HttpResponse, io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload         4
       2: invokeinterface #710,  1          // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
       7: astore        5
       9: aload_0
      10: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      13: invokeinterface #440,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      18: ifeq          75
      21: aload_0
      22: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      25: ldc_w         #728                // String HTTP Client Streaming Response Received Chunk (length: {}) for Request: {} {}
      28: iconst_3
      29: anewarray     #550                // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload         5
      36: invokevirtual #500                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      39: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_1
      45: aload_1
      46: invokeinterface #729,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getMethodName:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_2
      54: aload_1
      55: invokeinterface #254,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getUri:()Ljava/net/URI;
      60: aastore
      61: invokeinterface #730,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      66: aload_0
      67: ldc_w         #738                // String Response
      70: aload         5
      72: invokespecial #7                  // Method traceBody:(Ljava/lang/String;Lio/netty/buffer/ByteBuf;)V
      75: aload_0
      76: getfield      #45                 // Field byteBufferFactory:Lio/micronaut/core/io/buffer/ByteBufferFactory;
      79: aload         5
      81: invokeinterface #712,  2          // InterfaceMethod io/micronaut/core/io/buffer/ByteBufferFactory.wrap:(Ljava/lang/Object;)Lio/micronaut/core/io/buffer/ByteBuffer;
      86: astore        6
      88: new           #628                // class io/micronaut/http/client/netty/NettyStreamedHttpResponse
      91: dup
      92: aload_2
      93: aload_3
      94: invokeinterface #739,  1          // InterfaceMethod io/micronaut/http/HttpResponse.status:()Lio/micronaut/http/HttpStatus;
      99: invokespecial #740                // Method io/micronaut/http/client/netty/NettyStreamedHttpResponse."<init>":(Lio/micronaut/http/netty/stream/StreamedHttpResponse;Lio/micronaut/http/HttpStatus;)V
     102: astore        7
     104: aload         7
     106: aload         6
     108: invokevirtual #741                // Method io/micronaut/http/client/netty/NettyStreamedHttpResponse.setBody:(Ljava/lang/Object;)V
     111: new           #742                // class io/micronaut/http/HttpResponseWrapper
     114: dup
     115: aload         7
     117: invokespecial #743                // Method io/micronaut/http/HttpResponseWrapper."<init>":(Lio/micronaut/http/HttpResponse;)V
     120: areturn

  private static boolean lambda$exchangeStreamImpl$20(io.netty.handler.codec.http.HttpContent);
    Code:
       0: aload_0
       1: invokeinterface #710,  1          // InterfaceMethod io/netty/handler/codec/http/HttpContent.content:()Lio/netty/buffer/ByteBuf;
       6: instanceof    #711                // class io/netty/buffer/EmptyByteBuf
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void lambda$connectWebSocket$19(java.net.URI, io.micronaut.websocket.context.WebSocketBean, io.netty.bootstrap.Bootstrap, io.micronaut.http.MutableHttpRequest, reactor.core.publisher.FluxSink);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #229                // Method buildSslContext:(Ljava/net/URI;)Lio/netty/handler/ssl/SslContext;
       5: astore        6
       7: aload_2
       8: invokeinterface #207,  1          // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.getBeanDefinition:()Lio/micronaut/inject/BeanDefinition;
      13: ldc           #208                // class io/micronaut/websocket/annotation/ClientWebSocket
      15: ldc_w         #744                // String version
      18: ldc_w         #745                // class io/netty/handler/codec/http/websocketx/WebSocketVersion
      21: invokeinterface #746,  4          // InterfaceMethod io/micronaut/inject/BeanDefinition.enumValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
      26: getstatic     #747                // Field io/netty/handler/codec/http/websocketx/WebSocketVersion.V13:Lio/netty/handler/codec/http/websocketx/WebSocketVersion;
      29: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #745                // class io/netty/handler/codec/http/websocketx/WebSocketVersion
      35: astore        7
      37: aload_2
      38: invokeinterface #748,  1          // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.messageMethod:()Ljava/util/Optional;
      43: invokedynamic #749,  0            // InvokeDynamic #66:apply:()Ljava/util/function/Function;
      48: invokevirtual #85                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      51: ldc_w         #393                // int 65536
      54: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #750                // class java/lang/Integer
      63: invokevirtual #751                // Method java/lang/Integer.intValue:()I
      66: istore        8
      68: aload_2
      69: invokeinterface #207,  1          // InterfaceMethod io/micronaut/websocket/context/WebSocketBean.getBeanDefinition:()Lio/micronaut/inject/BeanDefinition;
      74: ldc           #208                // class io/micronaut/websocket/annotation/ClientWebSocket
      76: ldc_w         #752                // String subprotocol
      79: invokeinterface #753,  3          // InterfaceMethod io/micronaut/inject/BeanDefinition.stringValue:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
      84: ldc_w         #755                // String
      87: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #111                // class java/lang/String
      93: astore        9
      95: new           #281                // class io/micronaut/http/client/netty/DefaultHttpClient$RequestKey
      98: dup
      99: aload_0
     100: aload_1
     101: invokespecial #282                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Ljava/net/URI;)V
     104: astore        10
     106: goto          121
     109: astore        11
     111: aload         5
     113: aload         11
     115: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
     120: return
     121: aload_3
     122: aload         10
     124: invokevirtual #283                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
     127: aload         10
     129: invokevirtual #284                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
     132: invokevirtual #756                // Method io/netty/bootstrap/Bootstrap.remoteAddress:(Ljava/lang/String;I)Lio/netty/bootstrap/Bootstrap;
     135: pop
     136: aload_0
     137: aload_3
     138: aload         6
     140: ifnull        147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: aload         10
     150: invokevirtual #283                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
     153: aload         10
     155: invokevirtual #284                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
     158: invokespecial #28                 // Method initBootstrapForProxy:(Lio/netty/bootstrap/Bootstrap;ZLjava/lang/String;I)V
     161: aload_3
     162: new           #757                // class io/micronaut/http/client/netty/DefaultHttpClient$5
     165: dup
     166: aload_0
     167: aload         6
     169: aload         10
     171: invokevirtual #283                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getHost:()Ljava/lang/String;
     174: aload         10
     176: invokevirtual #284                // Method io/micronaut/http/client/netty/DefaultHttpClient$RequestKey.getPort:()I
     179: iconst_0
     180: iconst_0
     181: iconst_0
     182: aconst_null
     183: aload_1
     184: aload         4
     186: aload         9
     188: aload_2
     189: aload         7
     191: iload         8
     193: aload         5
     195: invokespecial #758                // Method io/micronaut/http/client/netty/DefaultHttpClient$5."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/netty/handler/ssl/SslContext;Ljava/lang/String;IZZZLjava/util/function/Consumer;Ljava/net/URI;Lio/micronaut/http/MutableHttpRequest;Ljava/lang/String;Lio/micronaut/websocket/context/WebSocketBean;Lio/netty/handler/codec/http/websocketx/WebSocketVersion;ILreactor/core/publisher/FluxSink;)V
     198: invokevirtual #294                // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
     201: pop
     202: aload_0
     203: aload_3
     204: invokevirtual #759                // Method io/netty/bootstrap/Bootstrap.connect:()Lio/netty/channel/ChannelFuture;
     207: aload         5
     209: invokedynamic #760,  0            // InvokeDynamic #67:operationComplete:(Lreactor/core/publisher/FluxSink;)Lio/netty/util/concurrent/GenericFutureListener;
     214: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
     217: pop
     218: return
    Exception table:
       from    to  target type
          95   106   109   Class io/micronaut/http/client/exceptions/HttpClientException

  private static void lambda$connectWebSocket$18(reactor.core.publisher.FluxSink, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          21
       9: aload_0
      10: aload_1
      11: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      16: invokeinterface #611,  2          // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      21: return

  private static java.lang.Integer lambda$connectWebSocket$17(io.micronaut.inject.MethodExecutionHandle);
    Code:
       0: aload_0
       1: ldc_w         #761                // class io/micronaut/websocket/annotation/OnMessage
       4: ldc_w         #762                // String maxPayloadLength
       7: invokeinterface #763,  3          // InterfaceMethod io/micronaut/inject/MethodExecutionHandle.intValue:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/OptionalInt;
      12: ldc_w         #393                // int 65536
      15: invokevirtual #764                // Method java/util/OptionalInt.orElse:(I)I
      18: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: areturn

  private org.reactivestreams.Publisher lambda$connect$16(io.micronaut.http.MutableHttpRequest, java.lang.Class, io.micronaut.websocket.context.WebSocketBean, java.net.URI);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokespecial #765                // Method connectWebSocket:(Ljava/net/URI;Lio/micronaut/http/MutableHttpRequest;Ljava/lang/Class;Lio/micronaut/websocket/context/WebSocketBean;)Lreactor/core/publisher/Flux;
       9: areturn

  private org.reactivestreams.Publisher lambda$connect$15(io.micronaut.http.MutableHttpRequest, java.lang.Class, java.net.URI);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: aconst_null
       5: invokespecial #765                // Method connectWebSocket:(Ljava/net/URI;Lio/micronaut/http/MutableHttpRequest;Ljava/lang/Class;Lio/micronaut/websocket/context/WebSocketBean;)Lreactor/core/publisher/Flux;
       8: areturn

  private java.lang.Object lambda$retrieve$14(io.micronaut.core.type.Argument, io.micronaut.http.HttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #720,  1          // InterfaceMethod io/micronaut/core/type/Argument.getType:()Ljava/lang/Class;
       6: ldc_w         #766                // class io/micronaut/http/HttpStatus
       9: if_acmpne     19
      12: aload_2
      13: invokeinterface #466,  1          // InterfaceMethod io/micronaut/http/HttpResponse.getStatus:()Lio/micronaut/http/HttpStatus;
      18: areturn
      19: aload_2
      20: invokeinterface #767,  1          // InterfaceMethod io/micronaut/http/HttpResponse.getBody:()Ljava/util/Optional;
      25: astore_3
      26: aload_3
      27: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      30: ifne          87
      33: aload_2
      34: ldc_w         #650                // class "[B"
      37: invokeinterface #768,  2          // InterfaceMethod io/micronaut/http/HttpResponse.getBody:(Ljava/lang/Class;)Ljava/util/Optional;
      42: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      45: ifeq          87
      48: aload_0
      49: new           #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
      52: dup
      53: ldc_w         #769                // String Failed to decode the body for the given content type [%s]
      56: iconst_1
      57: anewarray     #550                // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_2
      63: invokeinterface #716,  1          // InterfaceMethod io/micronaut/http/HttpResponse.getContentType:()Ljava/util/Optional;
      68: aconst_null
      69: invokevirtual #70                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      72: aastore
      73: invokestatic  #552                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: aload_2
      77: invokespecial #468                // Method io/micronaut/http/client/exceptions/HttpClientResponseException."<init>":(Ljava/lang/String;Lio/micronaut/http/HttpResponse;)V
      80: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      83: checkcast     #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
      86: athrow
      87: aload_3
      88: aload_0
      89: aload_2
      90: invokedynamic #770,  0            // InvokeDynamic #68:get:(Lio/micronaut/http/client/netty/DefaultHttpClient;Lio/micronaut/http/HttpResponse;)Ljava/util/function/Supplier;
      95: invokevirtual #363                // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      98: areturn

  private io.micronaut.http.client.exceptions.HttpClientResponseException lambda$retrieve$13(io.micronaut.http.HttpResponse);
    Code:
       0: aload_0
       1: new           #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
       4: dup
       5: ldc_w         #771                // String Empty body
       8: aload_1
       9: invokespecial #468                // Method io/micronaut/http/client/exceptions/HttpClientResponseException."<init>":(Ljava/lang/String;Lio/micronaut/http/HttpResponse;)V
      12: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
      15: checkcast     #465                // class io/micronaut/http/client/exceptions/HttpClientResponseException
      18: areturn

  private org.reactivestreams.Publisher lambda$exchange$12(io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument, java.net.URI);
    Code:
       0: aload_0
       1: aload         5
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokespecial #5                  // Method exchangeImpl:(Ljava/net/URI;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
      11: areturn

  private org.reactivestreams.Publisher lambda$jsonStream$11(io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #772                // Method jsonStreamImpl:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;Ljava/net/URI;)Lreactor/core/publisher/Flux;
      11: areturn

  private static void lambda$exchangeStream$10(io.micronaut.http.HttpResponse);
    Code:
       0: aload_0
       1: invokeinterface #773,  1          // InterfaceMethod io/micronaut/http/HttpResponse.body:()Ljava/lang/Object;
       6: checkcast     #652                // class io/micronaut/core/io/buffer/ByteBuffer
       9: astore_1
      10: aload_1
      11: instanceof    #774                // class io/micronaut/core/io/buffer/ReferenceCounted
      14: ifeq          27
      17: aload_1
      18: checkcast     #774                // class io/micronaut/core/io/buffer/ReferenceCounted
      21: invokeinterface #775,  1          // InterfaceMethod io/micronaut/core/io/buffer/ReferenceCounted.release:()Z
      26: pop
      27: return

  private org.reactivestreams.Publisher lambda$exchangeStream$9(io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, io.micronaut.core.type.Argument, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #776                // Method exchangeStreamImpl:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Ljava/net/URI;)Lreactor/core/publisher/Flux;
       9: areturn

  private static void lambda$dataStream$8(io.micronaut.core.io.buffer.ByteBuffer);
    Code:
       0: aload_0
       1: invokeinterface #483,  1          // InterfaceMethod io/micronaut/core/io/buffer/ByteBuffer.asNativeBuffer:()Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: instanceof    #376                // class io/netty/buffer/ByteBuf
      11: ifeq          30
      14: aload_1
      15: checkcast     #376                // class io/netty/buffer/ByteBuf
      18: astore_2
      19: aload_2
      20: invokevirtual #777                // Method io/netty/buffer/ByteBuf.refCnt:()I
      23: ifle          30
      26: aload_2
      27: invokestatic  #778                // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      30: return

  private org.reactivestreams.Publisher lambda$dataStream$7(io.micronaut.http.HttpRequest, io.micronaut.core.type.Argument, io.micronaut.http.HttpRequest, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #779                // Method dataStreamImpl:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/http/HttpRequest;Ljava/net/URI;)Lreactor/core/publisher/Flux;
       9: areturn

  private io.micronaut.http.sse.Event lambda$eventStream$6(io.micronaut.core.type.Argument, io.micronaut.http.sse.Event);
    Code:
       0: aload_2
       1: invokeinterface #780,  1          // InterfaceMethod io/micronaut/http/sse/Event.getData:()Ljava/lang/Object;
       6: checkcast     #652                // class io/micronaut/core/io/buffer/ByteBuffer
       9: astore_3
      10: aload_0
      11: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      14: ifnull        34
      17: aload_0
      18: getfield      #113                // Field mediaTypeCodecRegistry:Lio/micronaut/http/codec/MediaTypeCodecRegistry;
      21: getstatic     #365                // Field io/micronaut/http/MediaType.APPLICATION_JSON_TYPE:Lio/micronaut/http/MediaType;
      24: invokeinterface #374,  2          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodecRegistry.findCodec:(Lio/micronaut/http/MediaType;)Ljava/util/Optional;
      29: astore        4
      31: goto          39
      34: invokestatic  #781                // Method java/util/Optional.empty:()Ljava/util/Optional;
      37: astore        4
      39: aload         4
      41: invokevirtual #241                // Method java/util/Optional.isPresent:()Z
      44: ifeq          71
      47: aload         4
      49: invokevirtual #242                // Method java/util/Optional.get:()Ljava/lang/Object;
      52: checkcast     #573                // class io/micronaut/http/codec/MediaTypeCodec
      55: aload_1
      56: aload_3
      57: invokeinterface #782,  3          // InterfaceMethod io/micronaut/http/codec/MediaTypeCodec.decode:(Lio/micronaut/core/type/Argument;Lio/micronaut/core/io/buffer/ByteBuffer;)Ljava/lang/Object;
      62: astore        5
      64: aload_2
      65: aload         5
      67: invokestatic  #783                // InterfaceMethod io/micronaut/http/sse/Event.of:(Lio/micronaut/http/sse/Event;Ljava/lang/Object;)Lio/micronaut/http/sse/Event;
      70: areturn
      71: new           #656                // class io/micronaut/http/codec/CodecException
      74: dup
      75: ldc_w         #784                // String JSON codec not present
      78: invokespecial #659                // Method io/micronaut/http/codec/CodecException."<init>":(Ljava/lang/String;)V
      81: athrow

  private void lambda$eventStreamOrError$5(io.micronaut.http.HttpRequest, io.micronaut.core.type.Argument, reactor.core.publisher.FluxSink);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #182                // Method dataStream:(Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       6: new           #785                // class io/micronaut/http/client/netty/DefaultHttpClient$4
       9: dup
      10: aload_0
      11: aload_3
      12: invokespecial #786                // Method io/micronaut/http/client/netty/DefaultHttpClient$4."<init>":(Lio/micronaut/http/client/netty/DefaultHttpClient;Lreactor/core/publisher/FluxSink;)V
      15: invokeinterface #459,  2          // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      20: return

  private void lambda$stop$4(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          61
       9: aload_0
      10: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      13: invokeinterface #666,  1          // InterfaceMethod org/slf4j/Logger.isErrorEnabled:()Z
      18: ifeq          61
      21: aload_1
      22: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      27: astore_2
      28: aload_0
      29: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      32: new           #59                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc_w         #787                // String Error shutting down HTTP client:
      42: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #668                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      49: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: aload_2
      56: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: return

  private void lambda$stop$3(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #612,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          52
       9: aload_1
      10: invokeinterface #616,  1          // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      15: astore_2
      16: aload_2
      17: ifnull        52
      20: aload_0
      21: getfield      #10                 // Field log:Lorg/slf4j/Logger;
      24: new           #59                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #152                // String Error shutting down HTTP client connection pool:
      33: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #668                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      40: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: aload_2
      47: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: return

  private void lambda$new$2(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #67                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
       4: getstatic     #788                // Field io/netty/channel/ChannelOption.CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
       7: aload_1
       8: invokevirtual #161                // Method java/time/Duration.toMillis:()J
      11: l2i
      12: invokestatic  #501                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #82                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      18: pop
      19: return

  private static java.lang.Long lambda$new$1(java.time.Duration);
    Code:
       0: aload_0
       1: invokevirtual #243                // Method java/time/Duration.isNegative:()Z
       4: ifne          17
       7: aload_0
       8: invokevirtual #161                // Method java/time/Duration.toMillis:()J
      11: invokestatic  #789                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: goto          18
      17: aconst_null
      18: areturn

  private static java.lang.Long lambda$new$0(java.time.Duration);
    Code:
       0: aload_0
       1: invokevirtual #243                // Method java/time/Duration.isNegative:()Z
       4: ifne          17
       7: aload_0
       8: invokevirtual #161                // Method java/time/Duration.toMillis:()J
      11: invokestatic  #789                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: goto          18
      17: aconst_null
      18: areturn

  static void access$000(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.bootstrap.Bootstrap, boolean, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #28                 // Method initBootstrapForProxy:(Lio/netty/bootstrap/Bootstrap;ZLjava/lang/String;I)V
       9: return

  static io.netty.channel.pool.AbstractChannelPoolHandler access$100(io.micronaut.http.client.netty.DefaultHttpClient, io.micronaut.http.client.netty.DefaultHttpClient$RequestKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method newPoolHandler:(Lio/micronaut/http/client/netty/DefaultHttpClient$RequestKey;)Lio/netty/channel/pool/AbstractChannelPoolHandler;
       5: areturn

  static io.micronaut.http.client.exceptions.HttpClientException access$200(io.micronaut.http.client.netty.DefaultHttpClient, io.micronaut.http.client.exceptions.HttpClientException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method customizeException:(Lio/micronaut/http/client/exceptions/HttpClientException;)Lio/micronaut/http/client/exceptions/HttpClientException;
       5: areturn

  static java.util.Collection access$500(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #25                 // Field pipelineListeners:Ljava/util/Collection;
       4: areturn

  static io.netty.util.AttributeKey access$800();
    Code:
       0: getstatic     #24                 // Field STREAM_CHANNEL_INITIALIZED:Lio/netty/util/AttributeKey;
       3: areturn

  static io.netty.handler.ssl.SslContext access$900(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #23                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
       4: areturn

  static java.lang.Long access$1000(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #22                 // Field connectionTimeAliveMillis:Ljava/lang/Long;
       4: areturn

  static io.micronaut.http.client.HttpClientConfiguration access$1100(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #21                 // Field configuration:Lio/micronaut/http/client/HttpClientConfiguration;
       4: areturn

  static void access$1200(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method removeReadTimeoutHandler:(Lio/netty/channel/ChannelPipeline;)V
       5: return

  static io.micronaut.http.client.netty.NettyClientCustomizer access$1300(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #19                 // Field clientCustomizer:Lio/micronaut/http/client/netty/NettyClientCustomizer;
       4: areturn

  static io.netty.util.AttributeKey access$1400();
    Code:
       0: getstatic     #18                 // Field CHANNEL_CUSTOMIZER_KEY:Lio/netty/util/AttributeKey;
       3: areturn

  static io.micronaut.http.HttpVersion access$1500(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #17                 // Field httpVersion:Lio/micronaut/http/HttpVersion;
       4: areturn

  static io.netty.channel.pool.ChannelPoolMap access$1600(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #16                 // Field poolMap:Lio/netty/channel/pool/ChannelPoolMap;
       4: areturn

  static io.netty.util.AttributeKey access$1700();
    Code:
       0: getstatic     #15                 // Field STREAM_KEY:Lio/netty/util/AttributeKey;
       3: areturn

  static io.micronaut.scheduling.instrument.InvocationInstrumenter access$1800(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method combineFactories:()Lio/micronaut/scheduling/instrument/InvocationInstrumenter;
       4: areturn

  static boolean access$1900(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.handler.codec.http.HttpMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method discardH2cStream:(Lio/netty/handler/codec/http/HttpMessage;)Z
       5: ireturn

  static boolean access$2000(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method isSecureScheme:(Ljava/lang/String;)Z
       4: ireturn

  static io.netty.util.concurrent.Future access$2100(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.util.concurrent.Future, io.netty.util.concurrent.GenericFutureListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method addInstrumentedListener:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
       6: areturn

  static org.slf4j.Logger access$2200(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #10                 // Field log:Lorg/slf4j/Logger;
       4: areturn

  static void access$2300(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method traceHeaders:(Lio/netty/handler/codec/http/HttpHeaders;)V
       5: return

  static io.netty.handler.codec.http.HttpHeaders access$2400();
    Code:
       0: getstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
       3: areturn

  static void access$2500(io.micronaut.http.client.netty.DefaultHttpClient, java.lang.String, io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method traceBody:(Ljava/lang/String;Lio/netty/buffer/ByteBuf;)V
       6: return

  static void access$2700(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method addReadTimeoutHandler:(Lio/netty/channel/ChannelPipeline;)V
       5: return

  static org.reactivestreams.Publisher access$2800(io.micronaut.http.client.netty.DefaultHttpClient, java.net.URI, io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, io.micronaut.core.type.Argument, io.micronaut.core.type.Argument);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #5                  // Method exchangeImpl:(Ljava/net/URI;Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Lio/micronaut/core/type/Argument;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
      11: areturn

  static org.reactivestreams.Publisher access$2900(io.micronaut.http.client.netty.DefaultHttpClient, io.micronaut.http.HttpRequest, io.micronaut.http.HttpRequest, java.net.URI, io.micronaut.core.type.Argument);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method buildStreamExchange:(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/HttpRequest;Ljava/net/URI;Lio/micronaut/core/type/Argument;)Lorg/reactivestreams/Publisher;
       9: areturn

  static io.micronaut.http.bind.RequestBinderRegistry access$3000(io.micronaut.http.client.netty.DefaultHttpClient);
    Code:
       0: aload_0
       1: getfield      #3                  // Field requestBinderRegistry:Lio/micronaut/http/bind/RequestBinderRegistry;
       4: areturn

  static {};
    Code:
       0: ldc_w         #790                // class io/micronaut/http/client/netty/DefaultHttpClient
       3: invokestatic  #791                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #116                // Field DEFAULT_LOG:Lorg/slf4j/Logger;
       9: ldc_w         #792                // String micronaut.http2.stream
      12: invokestatic  #793                // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      15: putstatic     #15                 // Field STREAM_KEY:Lio/netty/util/AttributeKey;
      18: ldc_w         #794                // String micronaut.http.customizer
      21: invokestatic  #793                // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      24: putstatic     #18                 // Field CHANNEL_CUSTOMIZER_KEY:Lio/netty/util/AttributeKey;
      27: ldc_w         #795                // String micronaut.http.streamChannelInitialized
      30: invokestatic  #793                // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      33: putstatic     #24                 // Field STREAM_CHANNEL_INITIALIZED:Lio/netty/util/AttributeKey;
      36: new           #796                // class io/netty/handler/codec/http/DefaultHttpHeaders
      39: dup
      40: invokespecial #797                // Method io/netty/handler/codec/http/DefaultHttpHeaders."<init>":()V
      43: putstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
      46: getstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
      49: getstatic     #488                // Field io/netty/handler/codec/http/HttpHeaderNames.HOST:Lio/netty/util/AsciiString;
      52: ldc_w         #755                // String
      55: invokevirtual #798                // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      58: pop
      59: getstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
      62: getstatic     #496                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      65: ldc_w         #755                // String
      68: invokevirtual #798                // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      71: pop
      72: getstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
      75: getstatic     #498                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
      78: ldc_w         #755                // String
      81: invokevirtual #798                // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      84: pop
      85: getstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
      88: getstatic     #502                // Field io/netty/handler/codec/http/HttpHeaderNames.TRANSFER_ENCODING:Lio/netty/util/AsciiString;
      91: ldc_w         #755                // String
      94: invokevirtual #798                // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      97: pop
      98: getstatic     #8                  // Field REDIRECT_HEADER_BLOCKLIST:Lio/netty/handler/codec/http/HttpHeaders;
     101: getstatic     #492                // Field io/netty/handler/codec/http/HttpHeaderNames.CONNECTION:Lio/netty/util/AsciiString;
     104: ldc_w         #755                // String
     107: invokevirtual #798                // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
     110: pop
     111: return
}
