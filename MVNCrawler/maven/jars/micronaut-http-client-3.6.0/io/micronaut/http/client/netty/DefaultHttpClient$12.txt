Compiled from "DefaultHttpClient.java"
class io.micronaut.http.client.netty.DefaultHttpClient$12 implements reactor.core.Disposable {
  private java.util.concurrent.atomic.AtomicBoolean disposed;

  final io.netty.channel.ChannelFuture val$channelFuture;

  final io.micronaut.http.client.netty.DefaultHttpClient this$0;

  io.micronaut.http.client.netty.DefaultHttpClient$12(io.micronaut.http.client.netty.DefaultHttpClient, io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$channelFuture:Lio/netty/channel/ChannelFuture;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
      18: dup
      19: iconst_0
      20: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      23: putfield      #6                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          39
      12: aload_0
      13: getfield      #2                  // Field val$channelFuture:Lio/netty/channel/ChannelFuture;
      16: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      21: astore_1
      22: aload_1
      23: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      28: ifeq          39
      31: aload_0
      32: getfield      #1                  // Field this$0:Lio/micronaut/http/client/netty/DefaultHttpClient;
      35: aload_1
      36: invokevirtual #10                 // Method io/micronaut/http/client/netty/DefaultHttpClient.closeChannelAsync:(Lio/netty/channel/Channel;)V
      39: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn
}
