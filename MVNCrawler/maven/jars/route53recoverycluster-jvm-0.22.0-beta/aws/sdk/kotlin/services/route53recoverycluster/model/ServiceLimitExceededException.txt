Compiled from "ServiceLimitExceededException.kt"
public final class aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException extends aws.sdk.kotlin.services.route53recoverycluster.model.Route53RecoveryClusterException {
  public static final aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException$Companion Companion;

  private final java.lang.String limitCode;

  private final java.lang.String message;

  private final java.lang.String resourceId;

  private final java.lang.String resourceType;

  private final java.lang.String serviceCode;

  private aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException(aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException$Builder);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method aws/sdk/kotlin/services/route53recoverycluster/model/Route53RecoveryClusterException."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.getLimitCode:()Ljava/lang/String;
       9: putfield      #19                 // Field limitCode:Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokevirtual #22                 // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.getMessage:()Ljava/lang/String;
      17: putfield      #25                 // Field message:Ljava/lang/String;
      20: aload_0
      21: aload_1
      22: invokevirtual #28                 // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.getResourceId:()Ljava/lang/String;
      25: putfield      #31                 // Field resourceId:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: invokevirtual #34                 // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.getResourceType:()Ljava/lang/String;
      33: putfield      #37                 // Field resourceType:Ljava/lang/String;
      36: aload_0
      37: aload_1
      38: invokevirtual #40                 // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.getServiceCode:()Ljava/lang/String;
      41: putfield      #43                 // Field serviceCode:Ljava/lang/String;
      44: nop
      45: aload_0
      46: invokevirtual #47                 // Method getSdkErrorMetadata:()Laws/sdk/kotlin/runtime/AwsErrorMetadata;
      49: invokevirtual #53                 // Method aws/sdk/kotlin/runtime/AwsErrorMetadata.getAttributes:()Laws/smithy/kotlin/runtime/util/MutableAttributes;
      52: getstatic     #59                 // Field aws/smithy/kotlin/runtime/ServiceErrorMetadata.Companion:Laws/smithy/kotlin/runtime/ServiceErrorMetadata$Companion;
      55: invokevirtual #65                 // Method aws/smithy/kotlin/runtime/ServiceErrorMetadata$Companion.getErrorType:()Laws/smithy/kotlin/runtime/util/AttributeKey;
      58: getstatic     #71                 // Field aws/smithy/kotlin/runtime/ServiceException$ErrorType.Client:Laws/smithy/kotlin/runtime/ServiceException$ErrorType;
      61: invokeinterface #77,  3           // InterfaceMethod aws/smithy/kotlin/runtime/util/MutableAttributes.set:(Laws/smithy/kotlin/runtime/util/AttributeKey;Ljava/lang/Object;)V
      66: nop
      67: return

  public final java.lang.String getLimitCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field limitCode:Ljava/lang/String;
       4: areturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #25                 // Field message:Ljava/lang/String;
       4: areturn

  public final java.lang.String getResourceId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field resourceId:Ljava/lang/String;
       4: areturn

  public final java.lang.String getResourceType();
    Code:
       0: aload_0
       1: getfield      #37                 // Field resourceType:Ljava/lang/String;
       4: areturn

  public final java.lang.String getServiceCode();
    Code:
       0: aload_0
       1: getfield      #43                 // Field serviceCode:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #86                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: astore_2
      10: iconst_0
      11: istore_3
      12: aload_2
      13: ldc           #89                 // String ServiceLimitExceededException(
      15: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_2
      20: new           #86                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #95                 // String limitCode=
      29: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #19                 // Field limitCode:Ljava/lang/String;
      36: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: bipush        44
      41: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      44: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_2
      52: new           #86                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #102                // String message=
      61: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: invokevirtual #103                // Method getMessage:()Ljava/lang/String;
      68: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: bipush        44
      73: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_2
      84: new           #86                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #105                // String resourceId=
      93: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #31                 // Field resourceId:Ljava/lang/String;
     100: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: bipush        44
     105: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     108: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload_2
     116: new           #86                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #107                // String resourceType=
     125: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: getfield      #37                 // Field resourceType:Ljava/lang/String;
     132: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: bipush        44
     137: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     140: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_2
     148: new           #86                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #109                // String serviceCode=
     157: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: getfield      #43                 // Field serviceCode:Ljava/lang/String;
     164: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: pop
     174: aload_2
     175: ldc           #111                // String )
     177: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: pop
     181: nop
     182: aload_1
     183: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: dup
     187: ldc           #113                // String StringBuilder().apply(builderAction).toString()
     189: invokestatic  #119                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     192: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field limitCode:Ljava/lang/String;
       4: dup
       5: ifnull        14
       8: invokevirtual #129                // Method java/lang/String.hashCode:()I
      11: goto          16
      14: pop
      15: iconst_0
      16: istore_1
      17: bipush        31
      19: iload_1
      20: imul
      21: aload_0
      22: invokevirtual #103                // Method getMessage:()Ljava/lang/String;
      25: dup
      26: ifnull        35
      29: invokevirtual #129                // Method java/lang/String.hashCode:()I
      32: goto          37
      35: pop
      36: iconst_0
      37: iadd
      38: istore_1
      39: bipush        31
      41: iload_1
      42: imul
      43: aload_0
      44: getfield      #31                 // Field resourceId:Ljava/lang/String;
      47: dup
      48: ifnull        57
      51: invokevirtual #129                // Method java/lang/String.hashCode:()I
      54: goto          59
      57: pop
      58: iconst_0
      59: iadd
      60: istore_1
      61: bipush        31
      63: iload_1
      64: imul
      65: aload_0
      66: getfield      #37                 // Field resourceType:Ljava/lang/String;
      69: dup
      70: ifnull        79
      73: invokevirtual #129                // Method java/lang/String.hashCode:()I
      76: goto          81
      79: pop
      80: iconst_0
      81: iadd
      82: istore_1
      83: bipush        31
      85: iload_1
      86: imul
      87: aload_0
      88: getfield      #43                 // Field serviceCode:Ljava/lang/String;
      91: dup
      92: ifnull        101
      95: invokevirtual #129                // Method java/lang/String.hashCode:()I
      98: goto          103
     101: pop
     102: iconst_0
     103: iadd
     104: istore_1
     105: iload_1
     106: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #138                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #138                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException
      28: pop
      29: aload_0
      30: getfield      #19                 // Field limitCode:Ljava/lang/String;
      33: aload_1
      34: checkcast     #2                  // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException
      37: getfield      #19                 // Field limitCode:Ljava/lang/String;
      40: invokestatic  #142                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifne          48
      46: iconst_0
      47: ireturn
      48: aload_0
      49: invokevirtual #103                // Method getMessage:()Ljava/lang/String;
      52: aload_1
      53: checkcast     #2                  // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException
      56: invokevirtual #103                // Method getMessage:()Ljava/lang/String;
      59: invokestatic  #142                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      62: ifne          67
      65: iconst_0
      66: ireturn
      67: aload_0
      68: getfield      #31                 // Field resourceId:Ljava/lang/String;
      71: aload_1
      72: checkcast     #2                  // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException
      75: getfield      #31                 // Field resourceId:Ljava/lang/String;
      78: invokestatic  #142                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      81: ifne          86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: getfield      #37                 // Field resourceType:Ljava/lang/String;
      90: aload_1
      91: checkcast     #2                  // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException
      94: getfield      #37                 // Field resourceType:Ljava/lang/String;
      97: invokestatic  #142                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     100: ifne          105
     103: iconst_0
     104: ireturn
     105: aload_0
     106: getfield      #43                 // Field serviceCode:Ljava/lang/String;
     109: aload_1
     110: checkcast     #2                  // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException
     113: getfield      #43                 // Field serviceCode:Ljava/lang/String;
     116: invokestatic  #142                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     119: ifne          124
     122: iconst_0
     123: ireturn
     124: iconst_1
     125: ireturn

  public final aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException copy(kotlin.jvm.functions.Function1<? super aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException$Builder, kotlin.Unit>);
    Code:
       0: aload_1
       1: ldc           #149                // String block
       3: invokestatic  #152                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: iconst_0
       7: istore_2
       8: new           #11                 // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder
      11: dup
      12: aload_0
      13: invokespecial #155                // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder."<init>":(Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException;)V
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokeinterface #161,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_3
      26: invokevirtual #165                // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.build:()Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException;
      29: areturn

  public static aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException copy$default(aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException, kotlin.jvm.functions.Function1, int, java.lang.Object);
    Code:
       0: iload_2
       1: iconst_1
       2: iand
       3: ifeq          13
       6: getstatic     #175                // Field aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$copy$1.INSTANCE:Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$copy$1;
       9: checkcast     #157                // class kotlin/jvm/functions/Function1
      12: astore_1
      13: aload_1
      14: ldc           #149                // String block
      16: invokestatic  #152                // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: iconst_0
      20: istore_2
      21: new           #11                 // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder
      24: dup
      25: aload_0
      26: invokespecial #155                // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder."<init>":(Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException;)V
      29: astore_3
      30: aload_1
      31: aload_3
      32: invokeinterface #161,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_3
      39: invokevirtual #165                // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder.build:()Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException;
      42: areturn

  public aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException(aws.sdk.kotlin.services.route53recoverycluster.model.ServiceLimitExceededException$Builder, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #179                // Method "<init>":(Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Builder;)V
       5: return

  static {};
    Code:
       0: new           #184                // class aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Companion
       3: dup
       4: aconst_null
       5: invokespecial #187                // Method aws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #190                // Field Companion:Laws/sdk/kotlin/services/route53recoverycluster/model/ServiceLimitExceededException$Companion;
      11: return
}
