Compiled from "ContextCollector.java"
public class org.eclipse.rdf4j.queryrender.sparql.ContextCollector extends org.eclipse.rdf4j.query.algebra.helpers.AbstractQueryModelVisitor<java.lang.Exception> {
  private java.util.Map<org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.Var> mContexts;

  private org.eclipse.rdf4j.queryrender.sparql.ContextCollector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/eclipse/rdf4j/query/algebra/helpers/AbstractQueryModelVisitor."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field mContexts:Ljava/util/Map;
      15: return

  static java.util.Map<org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.Var> collectContexts(org.eclipse.rdf4j.query.algebra.TupleExpr) throws java.lang.Exception;
    Code:
       0: new           #5                  // class org/eclipse/rdf4j/queryrender/sparql/ContextCollector
       3: dup
       4: invokespecial #6                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokeinterface #7,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/TupleExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      15: aload_1
      16: getfield      #4                  // Field mContexts:Ljava/util/Map;
      19: areturn

  public void meet(org.eclipse.rdf4j.query.algebra.Join) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #8                  // Method org/eclipse/rdf4j/query/algebra/Join.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
       6: aload_1
       7: invokevirtual #9                  // Method org/eclipse/rdf4j/query/algebra/Join.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      10: invokespecial #10                 // Method binaryOpMeet:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)V
      13: return

  public void meet(org.eclipse.rdf4j.query.algebra.LeftJoin) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #11                 // Method org/eclipse/rdf4j/query/algebra/LeftJoin.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
       6: aload_1
       7: invokevirtual #12                 // Method org/eclipse/rdf4j/query/algebra/LeftJoin.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      10: invokespecial #10                 // Method binaryOpMeet:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)V
      13: return

  public void meet(org.eclipse.rdf4j.query.algebra.Union) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #13                 // Method org/eclipse/rdf4j/query/algebra/Union.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
       6: aload_1
       7: invokevirtual #14                 // Method org/eclipse/rdf4j/query/algebra/Union.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      10: invokespecial #10                 // Method binaryOpMeet:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)V
      13: return

  public void meet(org.eclipse.rdf4j.query.algebra.Difference) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #15                 // Method org/eclipse/rdf4j/query/algebra/Difference.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
       6: aload_1
       7: invokevirtual #16                 // Method org/eclipse/rdf4j/query/algebra/Difference.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      10: invokespecial #10                 // Method binaryOpMeet:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)V
      13: return

  public void meet(org.eclipse.rdf4j.query.algebra.Intersection) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #17                 // Method org/eclipse/rdf4j/query/algebra/Intersection.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
       6: aload_1
       7: invokevirtual #18                 // Method org/eclipse/rdf4j/query/algebra/Intersection.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      10: invokespecial #10                 // Method binaryOpMeet:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)V
      13: return

  public void meet(org.eclipse.rdf4j.query.algebra.Filter) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/eclipse/rdf4j/query/algebra/Filter.getArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
       4: aload_0
       5: invokeinterface #7,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/TupleExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      10: aload_0
      11: getfield      #4                  // Field mContexts:Ljava/util/Map;
      14: aload_1
      15: invokevirtual #19                 // Method org/eclipse/rdf4j/query/algebra/Filter.getArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      18: invokeinterface #20,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      23: ifeq          69
      26: aload_0
      27: getfield      #4                  // Field mContexts:Ljava/util/Map;
      30: aload_1
      31: invokevirtual #19                 // Method org/eclipse/rdf4j/query/algebra/Filter.getArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      34: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #22                 // class org/eclipse/rdf4j/query/algebra/Var
      42: astore_2
      43: aload_0
      44: getfield      #4                  // Field mContexts:Ljava/util/Map;
      47: aload_1
      48: invokevirtual #19                 // Method org/eclipse/rdf4j/query/algebra/Filter.getArg:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      51: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_0
      58: getfield      #4                  // Field mContexts:Ljava/util/Map;
      61: aload_1
      62: aload_2
      63: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: return

  private void binaryOpMeet(org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.TupleExpr) throws java.lang.Exception;
    Code:
       0: aload_2
       1: aload_0
       2: invokeinterface #7,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/TupleExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
       7: aload_0
       8: getfield      #4                  // Field mContexts:Ljava/util/Map;
      11: aload_2
      12: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #22                 // class org/eclipse/rdf4j/query/algebra/Var
      20: astore        4
      22: aload_3
      23: aload_0
      24: invokeinterface #7,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/TupleExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      29: aload_0
      30: getfield      #4                  // Field mContexts:Ljava/util/Map;
      33: aload_3
      34: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #22                 // class org/eclipse/rdf4j/query/algebra/Var
      42: astore        5
      44: aload_0
      45: aload_1
      46: aload_2
      47: aload         4
      49: aload_3
      50: aload         5
      52: invokespecial #25                 // Method sameCtxCheck:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/Var;Lorg/eclipse/rdf4j/query/algebra/TupleExpr;Lorg/eclipse/rdf4j/query/algebra/Var;)V
      55: return

  public void meet(org.eclipse.rdf4j.query.algebra.StatementPattern) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method org/eclipse/rdf4j/query/algebra/StatementPattern.getContextVar:()Lorg/eclipse/rdf4j/query/algebra/Var;
       4: astore_2
       5: aload_2
       6: ifnull        21
       9: aload_0
      10: getfield      #4                  // Field mContexts:Ljava/util/Map;
      13: aload_1
      14: aload_2
      15: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  private void sameCtxCheck(org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.Var, org.eclipse.rdf4j.query.algebra.TupleExpr, org.eclipse.rdf4j.query.algebra.Var);
    Code:
       0: aload_3
       1: ifnull        54
       4: aload         5
       6: ifnull        54
       9: aload_0
      10: aload_3
      11: aload         5
      13: invokespecial #27                 // Method isSameCtx:(Lorg/eclipse/rdf4j/query/algebra/Var;Lorg/eclipse/rdf4j/query/algebra/Var;)Z
      16: ifeq          54
      19: aload_0
      20: getfield      #4                  // Field mContexts:Ljava/util/Map;
      23: aload_2
      24: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: getfield      #4                  // Field mContexts:Ljava/util/Map;
      34: aload         4
      36: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_0
      43: getfield      #4                  // Field mContexts:Ljava/util/Map;
      46: aload_1
      47: aload_3
      48: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: return

  private boolean isSameCtx(org.eclipse.rdf4j.query.algebra.Var, org.eclipse.rdf4j.query.algebra.Var);
    Code:
       0: aload_1
       1: ifnull        34
       4: aload_1
       5: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Var.getValue:()Lorg/eclipse/rdf4j/model/Value;
       8: ifnull        34
      11: aload_2
      12: ifnull        34
      15: aload_2
      16: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Var.getValue:()Lorg/eclipse/rdf4j/model/Value;
      19: ifnull        34
      22: aload_1
      23: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Var.getValue:()Lorg/eclipse/rdf4j/model/Value;
      26: aload_2
      27: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Var.getValue:()Lorg/eclipse/rdf4j/model/Value;
      30: invokevirtual #29                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ireturn
      34: aload_1
      35: ifnull        68
      38: aload_1
      39: invokevirtual #30                 // Method org/eclipse/rdf4j/query/algebra/Var.getName:()Ljava/lang/String;
      42: ifnull        68
      45: aload_2
      46: ifnull        68
      49: aload_2
      50: invokevirtual #30                 // Method org/eclipse/rdf4j/query/algebra/Var.getName:()Ljava/lang/String;
      53: ifnull        68
      56: aload_1
      57: invokevirtual #30                 // Method org/eclipse/rdf4j/query/algebra/Var.getName:()Ljava/lang/String;
      60: aload_2
      61: invokevirtual #30                 // Method org/eclipse/rdf4j/query/algebra/Var.getName:()Ljava/lang/String;
      64: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ireturn
      68: iconst_0
      69: ireturn
}
