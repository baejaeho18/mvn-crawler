Compiled from "SparqlValueExprRenderer.java"
final class org.eclipse.rdf4j.queryrender.sparql.SparqlValueExprRenderer extends org.eclipse.rdf4j.query.algebra.helpers.AbstractQueryModelVisitor<java.lang.Exception> {
  private java.lang.StringBuffer mBuffer;

  org.eclipse.rdf4j.queryrender.sparql.SparqlValueExprRenderer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/eclipse/rdf4j/query/algebra/helpers/AbstractQueryModelVisitor."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuffer
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuffer."<init>":()V
      12: putfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      15: return

  public void reset();
    Code:
       0: aload_0
       1: new           #2                  // class java/lang/StringBuffer
       4: dup
       5: invokespecial #3                  // Method java/lang/StringBuffer."<init>":()V
       8: putfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      11: return

  public java.lang.String render(org.eclipse.rdf4j.query.algebra.ValueExpr) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
       7: aload_0
       8: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      11: invokevirtual #6                  // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      14: areturn

  public void meet(org.eclipse.rdf4j.query.algebra.Bound) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #7                  // String  bound(
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #9                  // Method org/eclipse/rdf4j/query/algebra/Bound.getArg:()Lorg/eclipse/rdf4j/query/algebra/Var;
      14: aload_0
      15: invokevirtual #10                 // Method org/eclipse/rdf4j/query/algebra/Var.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      18: aload_0
      19: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      22: ldc           #11                 // String )
      24: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: pop
      28: return

  public void meet(org.eclipse.rdf4j.query.algebra.Var) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/eclipse/rdf4j/query/algebra/Var.isAnonymous:()Z
       4: ifeq          37
       7: aload_1
       8: invokevirtual #13                 // Method org/eclipse/rdf4j/query/algebra/Var.hasValue:()Z
      11: ifne          37
      14: aload_0
      15: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      18: ldc           #14                 // String ?
      20: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: aload_1
      24: invokevirtual #15                 // Method org/eclipse/rdf4j/query/algebra/Var.getName:()Ljava/lang/String;
      27: invokestatic  #16                 // Method org/eclipse/rdf4j/queryrender/BaseTupleExprRenderer.scrubVarName:(Ljava/lang/String;)Ljava/lang/String;
      30: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: pop
      34: goto          79
      37: aload_1
      38: invokevirtual #13                 // Method org/eclipse/rdf4j/query/algebra/Var.hasValue:()Z
      41: ifeq          62
      44: aload_0
      45: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      48: aload_1
      49: invokevirtual #17                 // Method org/eclipse/rdf4j/query/algebra/Var.getValue:()Lorg/eclipse/rdf4j/model/Value;
      52: invokestatic  #18                 // Method org/eclipse/rdf4j/queryrender/RenderUtils.getSPARQLQueryString:(Lorg/eclipse/rdf4j/model/Value;)Ljava/lang/String;
      55: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: goto          79
      62: aload_0
      63: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      66: ldc           #14                 // String ?
      68: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      71: aload_1
      72: invokevirtual #15                 // Method org/eclipse/rdf4j/query/algebra/Var.getName:()Ljava/lang/String;
      75: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: pop
      79: return

  public void meet(org.eclipse.rdf4j.query.algebra.BNodeGenerator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: aload_1
       5: invokevirtual #19                 // Method org/eclipse/rdf4j/query/algebra/BNodeGenerator.getSignature:()Ljava/lang/String;
       8: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      11: pop
      12: return

  public void meet(org.eclipse.rdf4j.query.algebra.MathExpr) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #20                 // String (
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #21                 // Method org/eclipse/rdf4j/query/algebra/MathExpr.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #22                 // String
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_1
      30: invokevirtual #23                 // Method org/eclipse/rdf4j/query/algebra/MathExpr.getOperator:()Lorg/eclipse/rdf4j/query/algebra/MathExpr$MathOp;
      33: invokevirtual #24                 // Method org/eclipse/rdf4j/query/algebra/MathExpr$MathOp.getSymbol:()Ljava/lang/String;
      36: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: ldc           #22                 // String
      41: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: pop
      45: aload_1
      46: invokevirtual #25                 // Method org/eclipse/rdf4j/query/algebra/MathExpr.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      49: aload_0
      50: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      55: aload_0
      56: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      59: ldc           #11                 // String )
      61: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: pop
      65: return

  public void meet(org.eclipse.rdf4j.query.algebra.Compare) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #20                 // String (
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #26                 // Method org/eclipse/rdf4j/query/algebra/Compare.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #22                 // String
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_1
      30: invokevirtual #27                 // Method org/eclipse/rdf4j/query/algebra/Compare.getOperator:()Lorg/eclipse/rdf4j/query/algebra/Compare$CompareOp;
      33: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Compare$CompareOp.getSymbol:()Ljava/lang/String;
      36: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: ldc           #22                 // String
      41: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: pop
      45: aload_1
      46: invokevirtual #29                 // Method org/eclipse/rdf4j/query/algebra/Compare.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      49: aload_0
      50: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      55: aload_0
      56: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      59: ldc           #11                 // String )
      61: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: pop
      65: return

  public void meet(org.eclipse.rdf4j.query.algebra.Exists) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #30                 // String  exists(
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_0
      11: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      14: aload_0
      15: aload_1
      16: invokevirtual #31                 // Method org/eclipse/rdf4j/query/algebra/Exists.getSubQuery:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      19: invokespecial #32                 // Method renderTupleExpr:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)Ljava/lang/String;
      22: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: pop
      26: aload_0
      27: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      30: ldc           #11                 // String )
      32: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: pop
      36: return

  public void meet(org.eclipse.rdf4j.query.algebra.In) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method org/eclipse/rdf4j/query/algebra/In.getArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
       4: aload_0
       5: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      10: aload_0
      11: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      14: ldc           #34                 // String  in
      16: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: pop
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #20                 // String (
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: aload_0
      31: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      34: aload_0
      35: aload_1
      36: invokevirtual #35                 // Method org/eclipse/rdf4j/query/algebra/In.getSubQuery:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      39: invokespecial #32                 // Method renderTupleExpr:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)Ljava/lang/String;
      42: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: pop
      46: aload_0
      47: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      50: ldc           #11                 // String )
      52: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      55: pop
      56: return

  private java.lang.String renderTupleExpr(org.eclipse.rdf4j.query.algebra.TupleExpr) throws java.lang.Exception;
    Code:
       0: new           #36                 // class org/eclipse/rdf4j/queryrender/sparql/SparqlTupleExprRenderer
       3: dup
       4: invokespecial #37                 // Method org/eclipse/rdf4j/queryrender/sparql/SparqlTupleExprRenderer."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #38                 // Method org/eclipse/rdf4j/queryrender/sparql/SparqlTupleExprRenderer.render:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)Ljava/lang/String;
      13: areturn

  public void meet(org.eclipse.rdf4j.query.algebra.CompareAll) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #20                 // String (
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #39                 // Method org/eclipse/rdf4j/query/algebra/CompareAll.getArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #22                 // String
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_1
      30: invokevirtual #40                 // Method org/eclipse/rdf4j/query/algebra/CompareAll.getOperator:()Lorg/eclipse/rdf4j/query/algebra/Compare$CompareOp;
      33: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Compare$CompareOp.getSymbol:()Ljava/lang/String;
      36: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: ldc           #41                 // String  all
      41: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: pop
      45: aload_0
      46: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      49: ldc           #20                 // String (
      51: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: pop
      55: aload_0
      56: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      59: aload_0
      60: aload_1
      61: invokevirtual #42                 // Method org/eclipse/rdf4j/query/algebra/CompareAll.getSubQuery:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      64: invokespecial #32                 // Method renderTupleExpr:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)Ljava/lang/String;
      67: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: pop
      71: aload_0
      72: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      75: ldc           #11                 // String )
      77: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: aload_0
      82: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      85: ldc           #11                 // String )
      87: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      90: pop
      91: return

  public void meet(org.eclipse.rdf4j.query.algebra.ValueConstant) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: aload_1
       5: invokevirtual #43                 // Method org/eclipse/rdf4j/query/algebra/ValueConstant.getValue:()Lorg/eclipse/rdf4j/model/Value;
       8: invokestatic  #18                 // Method org/eclipse/rdf4j/queryrender/RenderUtils.getSPARQLQueryString:(Lorg/eclipse/rdf4j/model/Value;)Ljava/lang/String;
      11: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: return

  public void meet(org.eclipse.rdf4j.query.algebra.FunctionCall) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #44                 // String <
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: aload_1
      10: invokevirtual #45                 // Method org/eclipse/rdf4j/query/algebra/FunctionCall.getURI:()Ljava/lang/String;
      13: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: ldc           #46                 // String >(
      18: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      21: pop
      22: iconst_1
      23: istore_2
      24: aload_1
      25: invokevirtual #47                 // Method org/eclipse/rdf4j/query/algebra/FunctionCall.getArgs:()Ljava/util/List;
      28: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_3
      34: aload_3
      35: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          84
      43: aload_3
      44: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #51                 // class org/eclipse/rdf4j/query/algebra/ValueExpr
      52: astore        4
      54: iload_2
      55: ifne          71
      58: aload_0
      59: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      62: ldc           #52                 // String ,
      64: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      67: pop
      68: goto          73
      71: iconst_0
      72: istore_2
      73: aload         4
      75: aload_0
      76: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      81: goto          34
      84: aload_0
      85: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      88: ldc           #11                 // String )
      90: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      93: pop
      94: return

  public void meet(org.eclipse.rdf4j.query.algebra.CompareAny) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #20                 // String (
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #53                 // Method org/eclipse/rdf4j/query/algebra/CompareAny.getArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #22                 // String
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_1
      30: invokevirtual #54                 // Method org/eclipse/rdf4j/query/algebra/CompareAny.getOperator:()Lorg/eclipse/rdf4j/query/algebra/Compare$CompareOp;
      33: invokevirtual #28                 // Method org/eclipse/rdf4j/query/algebra/Compare$CompareOp.getSymbol:()Ljava/lang/String;
      36: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: ldc           #55                 // String  any
      41: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: pop
      45: aload_0
      46: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      49: ldc           #20                 // String (
      51: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: pop
      55: aload_0
      56: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      59: aload_0
      60: aload_1
      61: invokevirtual #56                 // Method org/eclipse/rdf4j/query/algebra/CompareAny.getSubQuery:()Lorg/eclipse/rdf4j/query/algebra/TupleExpr;
      64: invokespecial #32                 // Method renderTupleExpr:(Lorg/eclipse/rdf4j/query/algebra/TupleExpr;)Ljava/lang/String;
      67: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: pop
      71: aload_0
      72: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      75: ldc           #11                 // String )
      77: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: aload_0
      82: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      85: ldc           #11                 // String )
      87: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      90: pop
      91: return

  public void meet(org.eclipse.rdf4j.query.algebra.Regex) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #57                 // String  regex(
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #58                 // Method org/eclipse/rdf4j/query/algebra/Regex.getArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #52                 // String ,
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: aload_1
      31: invokevirtual #59                 // Method org/eclipse/rdf4j/query/algebra/Regex.getPatternArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      34: aload_0
      35: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      40: aload_1
      41: invokevirtual #60                 // Method org/eclipse/rdf4j/query/algebra/Regex.getFlagsArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      44: ifnull        67
      47: aload_0
      48: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      51: ldc           #61                 // String ,
      53: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: pop
      57: aload_1
      58: invokevirtual #60                 // Method org/eclipse/rdf4j/query/algebra/Regex.getFlagsArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      61: aload_0
      62: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      67: aload_0
      68: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      71: ldc           #11                 // String )
      73: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      76: pop
      77: return

  public void meet(org.eclipse.rdf4j.query.algebra.LangMatches) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #62                 // String  langMatches(
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #63                 // Method org/eclipse/rdf4j/query/algebra/LangMatches.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #52                 // String ,
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: aload_1
      31: invokevirtual #64                 // Method org/eclipse/rdf4j/query/algebra/LangMatches.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      34: aload_0
      35: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      40: aload_0
      41: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      44: ldc           #11                 // String )
      46: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: pop
      50: return

  public void meet(org.eclipse.rdf4j.query.algebra.SameTerm) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #65                 // String  sameTerm(
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_1
      11: invokevirtual #66                 // Method org/eclipse/rdf4j/query/algebra/SameTerm.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #52                 // String ,
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: aload_1
      31: invokevirtual #67                 // Method org/eclipse/rdf4j/query/algebra/SameTerm.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      34: aload_0
      35: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      40: aload_0
      41: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      44: ldc           #11                 // String )
      46: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: pop
      50: return

  public void meet(org.eclipse.rdf4j.query.algebra.And) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #68                 // String &&
       3: aload_1
       4: invokespecial #69                 // Method binaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/BinaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Or) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #70                 // String ||
       3: aload_1
       4: invokespecial #69                 // Method binaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/BinaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Not) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #20                 // String (
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_0
      11: ldc           #71                 // String !
      13: aload_1
      14: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
      17: aload_0
      18: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      21: ldc           #11                 // String )
      23: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: pop
      27: return

  public void meet(org.eclipse.rdf4j.query.algebra.Count) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #73                 // String count
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Datatype) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #74                 // String datatype
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.IsBNode) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #75                 // String isBlank
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.IsLiteral) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #76                 // String isLiteral
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.IsResource) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #77                 // String !isLiteral
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.IsURI) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #78                 // String isURI
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Label) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #79                 // String label
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Lang) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #80                 // String lang
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Like) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #81                 // Method org/eclipse/rdf4j/query/algebra/Like.getArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
       4: aload_0
       5: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      10: aload_0
      11: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      14: ldc           #82                 // String  like \"
      16: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_1
      20: invokevirtual #83                 // Method org/eclipse/rdf4j/query/algebra/Like.getPattern:()Ljava/lang/String;
      23: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: ldc           #84                 // String \"
      28: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: pop
      32: aload_1
      33: invokevirtual #85                 // Method org/eclipse/rdf4j/query/algebra/Like.isCaseSensitive:()Z
      36: ifne          49
      39: aload_0
      40: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      43: ldc           #86                 // String  ignore case
      45: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: pop
      49: return

  public void meet(org.eclipse.rdf4j.query.algebra.LocalName) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #87                 // String localName
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Min) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #88                 // String min
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Max) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #89                 // String max
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Namespace) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #90                 // String namespace
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  public void meet(org.eclipse.rdf4j.query.algebra.Str) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #91                 // String str
       3: aload_1
       4: invokespecial #72                 // Method unaryMeet:(Ljava/lang/String;Lorg/eclipse/rdf4j/query/algebra/UnaryValueOperator;)V
       7: return

  private void binaryMeet(java.lang.String, org.eclipse.rdf4j.query.algebra.BinaryValueOperator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #92                 // String  (
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: pop
      10: aload_2
      11: invokevirtual #93                 // Method org/eclipse/rdf4j/query/algebra/BinaryValueOperator.getLeftArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      14: aload_0
      15: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      20: aload_0
      21: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      24: ldc           #22                 // String
      26: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: aload_1
      30: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      33: ldc           #22                 // String
      35: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: pop
      39: aload_2
      40: invokevirtual #94                 // Method org/eclipse/rdf4j/query/algebra/BinaryValueOperator.getRightArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      43: aload_0
      44: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      49: aload_0
      50: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      53: ldc           #11                 // String )
      55: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: return

  private void unaryMeet(java.lang.String, org.eclipse.rdf4j.query.algebra.UnaryValueOperator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
       4: ldc           #22                 // String
       6: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
       9: aload_1
      10: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      13: ldc           #20                 // String (
      15: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: aload_2
      20: invokevirtual #95                 // Method org/eclipse/rdf4j/query/algebra/UnaryValueOperator.getArg:()Lorg/eclipse/rdf4j/query/algebra/ValueExpr;
      23: aload_0
      24: invokeinterface #5,  2            // InterfaceMethod org/eclipse/rdf4j/query/algebra/ValueExpr.visit:(Lorg/eclipse/rdf4j/query/algebra/QueryModelVisitor;)V
      29: aload_0
      30: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuffer;
      33: ldc           #11                 // String )
      35: invokevirtual #8                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: pop
      39: return
}
