Compiled from "UnwantedNodesAssert.java"
public class de.tum.in.test.api.ast.asserting.UnwantedNodesAssert extends org.assertj.core.api.AbstractAssert<de.tum.in.test.api.ast.asserting.UnwantedNodesAssert, java.nio.file.Path> {
  private final com.github.javaparser.ParserConfiguration$LanguageLevel level;

  private de.tum.in.test.api.ast.asserting.UnwantedNodesAssert(java.nio.file.Path, com.github.javaparser.ParserConfiguration$LanguageLevel);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2                  // class java/nio/file/Path
       8: ldc           #3                  // class de/tum/in/test/api/ast/asserting/UnwantedNodesAssert
      10: invokespecial #4                  // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
      13: aload_0
      14: aload_2
      15: putfield      #5                  // Field level:Lcom/github/javaparser/ParserConfiguration$LanguageLevel;
      18: aload_1
      19: iconst_0
      20: anewarray     #6                  // class java/nio/file/LinkOption
      23: invokestatic  #7                  // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      26: ifne          43
      29: ldc           #8                  // String The source directory %s does not exist
      31: iconst_1
      32: anewarray     #9                  // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_1
      38: aastore
      39: invokestatic  #10                 // Method org/assertj/core/api/Assertions.fail:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  public static de.tum.in.test.api.ast.asserting.UnwantedNodesAssert assertThatProjectSources();
    Code:
       0: invokestatic  #11                 // Method de/tum/in/test/api/util/ProjectSourcesFinder.findProjectSourcesPath:()Ljava/util/Optional;
       3: invokedynamic #12,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       8: invokevirtual #13                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      11: checkcast     #2                  // class java/nio/file/Path
      14: astore_0
      15: new           #3                  // class de/tum/in/test/api/ast/asserting/UnwantedNodesAssert
      18: dup
      19: aload_0
      20: aconst_null
      21: invokespecial #14                 // Method "<init>":(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration$LanguageLevel;)V
      24: areturn

  public static de.tum.in.test.api.ast.asserting.UnwantedNodesAssert assertThatSourcesIn(java.nio.file.Path);
    Code:
       0: aload_0
       1: ldc           #15                 // String The given source path must not be null.
       3: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #3                  // class de/tum/in/test/api/ast/asserting/UnwantedNodesAssert
      10: dup
      11: aload_0
      12: aconst_null
      13: invokespecial #14                 // Method "<init>":(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration$LanguageLevel;)V
      16: areturn

  public de.tum.in.test.api.ast.asserting.UnwantedNodesAssert withinPackage(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #17                 // String The package name must not be null.
       3: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #18                 // Field actual:Ljava/lang/Object;
      11: checkcast     #2                  // class java/nio/file/Path
      14: ldc           #19                 // String
      16: aload_1
      17: ldc           #20                 // String \\.
      19: invokevirtual #21                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      22: invokestatic  #22                 // InterfaceMethod java/nio/file/Path.of:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      25: invokeinterface #23,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      30: astore_2
      31: new           #3                  // class de/tum/in/test/api/ast/asserting/UnwantedNodesAssert
      34: dup
      35: aload_2
      36: aload_0
      37: getfield      #5                  // Field level:Lcom/github/javaparser/ParserConfiguration$LanguageLevel;
      40: invokespecial #14                 // Method "<init>":(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration$LanguageLevel;)V
      43: areturn

  public de.tum.in.test.api.ast.asserting.UnwantedNodesAssert withLanguageLevel(com.github.javaparser.ParserConfiguration$LanguageLevel);
    Code:
       0: new           #3                  // class de/tum/in/test/api/ast/asserting/UnwantedNodesAssert
       3: dup
       4: aload_0
       5: getfield      #18                 // Field actual:Ljava/lang/Object;
       8: checkcast     #2                  // class java/nio/file/Path
      11: aload_1
      12: invokespecial #14                 // Method "<init>":(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration$LanguageLevel;)V
      15: areturn

  public de.tum.in.test.api.ast.asserting.UnwantedNodesAssert hasNo(de.tum.in.test.api.ast.type.Type);
    Code:
       0: aload_0
       1: getfield      #5                  // Field level:Lcom/github/javaparser/ParserConfiguration$LanguageLevel;
       4: ifnonnull     17
       7: aload_0
       8: ldc           #24                 // String The \'level\' is not set. Please use UnwantedNodesAssert.withLanguageLevel(LanguageLevel).
      10: iconst_0
      11: anewarray     #9                  // class java/lang/Object
      14: invokevirtual #25                 // Method failWithMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      17: invokestatic  #26                 // Method com/github/javaparser/StaticJavaParser.getParserConfiguration:()Lcom/github/javaparser/ParserConfiguration;
      20: aload_0
      21: getfield      #5                  // Field level:Lcom/github/javaparser/ParserConfiguration$LanguageLevel;
      24: invokevirtual #27                 // Method com/github/javaparser/ParserConfiguration.setLanguageLevel:(Lcom/github/javaparser/ParserConfiguration$LanguageLevel;)Lcom/github/javaparser/ParserConfiguration;
      27: pop
      28: aload_0
      29: getfield      #18                 // Field actual:Ljava/lang/Object;
      32: checkcast     #2                  // class java/nio/file/Path
      35: aload_1
      36: invokeinterface #28,  1           // InterfaceMethod de/tum/in/test/api/ast/type/Type.getNodeNameNodeMap:()Ljava/util/Map;
      41: invokestatic  #29                 // Method de/tum/in/test/api/ast/model/UnwantedNode.getMessageForUnwantedNodesForAllFilesBelow:(Ljava/nio/file/Path;Ljava/util/Map;)Ljava/util/Optional;
      44: astore_2
      45: aload_2
      46: aload_0
      47: invokedynamic #30,  0             // InvokeDynamic #1:accept:(Lde/tum/in/test/api/ast/asserting/UnwantedNodesAssert;)Ljava/util/function/Consumer;
      52: invokevirtual #31                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      55: aload_0
      56: areturn

  private void lambda$hasNo$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #32                 // String ast.method.has_no
       3: iconst_0
       4: anewarray     #9                  // class java/lang/Object
       7: invokestatic  #33                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      10: invokestatic  #34                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      13: aload_1
      14: invokedynamic #35,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: iconst_0
      20: anewarray     #9                  // class java/lang/Object
      23: invokevirtual #25                 // Method failWithMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      26: return

  private static java.lang.AssertionError lambda$assertThatProjectSources$0();
    Code:
       0: new           #36                 // class java/lang/AssertionError
       3: dup
       4: ldc           #37                 // String Could not find project sources folder. Make sure the build file is configured correctly. If it is not located in the execution folder directly, set the location using AresConfiguration methods.
       6: invokespecial #38                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       9: areturn
}
