Compiled from "PathType.java"
final class de.tum.in.test.api.PathType$5 extends de.tum.in.test.api.PathType {
  private de.tum.in.test.api.PathType$5(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method de/tum/in/test/api/PathType."<init>":(Ljava/lang/String;I)V
       6: return

  public java.nio.file.PathMatcher convertToPathMatcher(java.lang.String);
    Code:
       0: getstatic     #3                  // Field DEFAULT_FS:Ljava/nio/file/FileSystem;
       3: aload_1
       4: invokedynamic #4,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #5                  // Method java/nio/file/FileSystem.getPathMatcher:(Ljava/lang/String;)Ljava/nio/file/PathMatcher;
      12: astore_2
      13: aload_2
      14: invokedynamic #6,  0              // InvokeDynamic #1:matches:(Ljava/nio/file/PathMatcher;)Ljava/nio/file/PathMatcher;
      19: areturn

  public boolean isPatternRecursive(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #7                  // String **
       3: invokevirtual #8                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          22
       9: aload_1
      10: ldc           #9                  // String \\**
      12: invokevirtual #8                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static boolean lambda$convertToPathMatcher$0(java.nio.file.PathMatcher, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #10,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
       7: invokeinterface #11,  2           // InterfaceMethod java/nio/file/PathMatcher.matches:(Ljava/nio/file/Path;)Z
      12: ireturn
}
