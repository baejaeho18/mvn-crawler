Compiled from "IgnorantUnmodifiableList.java"
class de.tum.in.test.api.util.IgnorantUnmodifiableList$2 implements java.util.ListIterator<E> {
  private boolean changeAllowed;

  final java.util.ListIterator val$it;

  final de.tum.in.test.api.util.IgnorantUnmodifiableList this$0;

  de.tum.in.test.api.util.IgnorantUnmodifiableList$2(de.tum.in.test.api.util.IgnorantUnmodifiableList, java.util.ListIterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lde/tum/in/test/api/util/IgnorantUnmodifiableList;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$it:Ljava/util/ListIterator;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/ListIterator.hasNext:()Z
       9: ireturn

  public E next();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field changeAllowed:Z
       5: aload_0
       6: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
       9: invokeinterface #6,  1            // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      14: areturn

  public boolean hasPrevious();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
       9: ireturn

  public E previous();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field changeAllowed:Z
       5: aload_0
       6: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      14: areturn

  public int nextIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/ListIterator.nextIndex:()I
       9: ireturn

  public int previousIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/ListIterator.previousIndex:()I
       9: ireturn

  public void remove();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method checkChangeAction:()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field changeAllowed:Z
       9: aload_0
      10: getfield      #1                  // Field this$0:Lde/tum/in/test/api/util/IgnorantUnmodifiableList;
      13: aload_0
      14: getfield      #2                  // Field val$it:Ljava/util/ListIterator;
      17: invokeinterface #9,  1            // InterfaceMethod java/util/ListIterator.nextIndex:()I
      22: iconst_1
      23: isub
      24: invokevirtual #12                 // Method de/tum/in/test/api/util/IgnorantUnmodifiableList.remove:(I)Ljava/lang/Object;
      27: pop
      28: return

  public void set(E);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method checkChangeAction:()V
       4: aload_0
       5: getfield      #1                  // Field this$0:Lde/tum/in/test/api/util/IgnorantUnmodifiableList;
       8: iconst_0
       9: aload_1
      10: invokevirtual #13                 // Method de/tum/in/test/api/util/IgnorantUnmodifiableList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public void add(E);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field changeAllowed:Z
       5: aload_0
       6: getfield      #1                  // Field this$0:Lde/tum/in/test/api/util/IgnorantUnmodifiableList;
       9: aload_1
      10: invokevirtual #14                 // Method de/tum/in/test/api/util/IgnorantUnmodifiableList.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  private void checkChangeAction();
    Code:
       0: aload_0
       1: getfield      #5                  // Field changeAllowed:Z
       4: ifne          15
       7: new           #15                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: return
}
