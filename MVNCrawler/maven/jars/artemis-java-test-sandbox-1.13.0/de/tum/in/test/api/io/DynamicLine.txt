Compiled from "DynamicLine.java"
final class de.tum.in.test.api.io.DynamicLine extends de.tum.in.test.api.io.AbstractLine {
  private java.lang.StringBuilder textUnderConstruction;

  private java.lang.String text;

  de.tum.in.test.api.io.DynamicLine(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method de/tum/in/test/api/io/AbstractLine."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/lang/StringBuilder."<init>":(Ljava/lang/CharSequence;)V
      13: putfield      #4                  // Field textUnderConstruction:Ljava/lang/StringBuilder;
      16: aload_1
      17: invokestatic  #5                  // Method de/tum/in/test/api/io/AbstractLine.containsLineBreaks:(Ljava/lang/CharSequence;)Z
      20: ifeq          33
      23: new           #6                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #7                  // String Line must not contain any new lines
      29: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: return

  de.tum.in.test.api.io.DynamicLine();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method de/tum/in/test/api/io/AbstractLine."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #4                  // Field textUnderConstruction:Ljava/lang/StringBuilder;
      15: return

  public void complete();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isComplete:()Z
       4: ifeq          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #12                 // String Line already complete
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: getfield      #4                  // Field textUnderConstruction:Ljava/lang/StringBuilder;
      22: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: putfield      #15                 // Field text:Ljava/lang/String;
      28: aload_0
      29: aconst_null
      30: putfield      #4                  // Field textUnderConstruction:Ljava/lang/StringBuilder;
      33: return

  public void append(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isComplete:()Z
       4: ifeq          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #16                 // String Line already completed
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokestatic  #5                  // Method de/tum/in/test/api/io/AbstractLine.containsLineBreaks:(Ljava/lang/CharSequence;)Z
      21: ifeq          34
      24: new           #6                  // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #7                  // String Line must not contain any new lines
      30: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #4                  // Field textUnderConstruction:Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      42: pop
      43: return

  public java.lang.String text();
    Code:
       0: aload_0
       1: getfield      #15                 // Field text:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #15                 // Field text:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #4                  // Field textUnderConstruction:Ljava/lang/StringBuilder;
      18: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field text:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
