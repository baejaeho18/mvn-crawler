Compiled from "SanitizationException.java"
class de.tum.in.test.api.internal.sanitization.SanitizationException extends java.lang.RuntimeException {
  private static final long serialVersionUID;

  private final java.lang.Class<?> originClass;

  private final java.lang.Throwable unsafeCause;

  public de.tum.in.test.api.internal.sanitization.SanitizationException(java.lang.Class<?>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method generateMessage:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/String;
       6: invokespecial #2                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: ldc           #3                  // String sanitization failure origin class must not be null
      13: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #5                  // class java/lang/Class
      19: putfield      #6                  // Field originClass:Ljava/lang/Class;
      22: aload_0
      23: aload_2
      24: ldc           #7                  // String sanitization failure cause must not be null
      26: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #8                  // class java/lang/Throwable
      32: putfield      #9                  // Field unsafeCause:Ljava/lang/Throwable;
      35: return

  public java.lang.Class<?> getOriginClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field originClass:Ljava/lang/Class;
       4: areturn

  public java.lang.Throwable getUnsafeCause();
    Code:
       0: aload_0
       1: getfield      #9                  // Field unsafeCause:Ljava/lang/Throwable;
       4: areturn

  private static java.lang.String generateMessage(java.lang.Class<?>, java.lang.Throwable);
    Code:
       0: ldc           #10                 // String sanitization.sanitization_exception_message
       2: iconst_2
       3: anewarray     #11                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #12                 // Method java/lang/Class.toString:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: dup
      17: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: invokedynamic #14,  0             // InvokeDynamic #0:get:(Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      26: invokestatic  #15                 // Method de/tum/in/test/api/internal/BlacklistedInvoker.invoke:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      29: aastore
      30: invokestatic  #16                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getMessage:()Ljava/lang/String;
       4: areturn
}
