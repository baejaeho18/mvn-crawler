Compiled from "ThrowableInfo.java"
public final class de.tum.in.test.api.internal.sanitization.ThrowableInfo {
  private final java.lang.Class<? extends java.lang.Throwable> type;

  private java.lang.String message;

  private java.lang.Throwable cause;

  private java.lang.StackTraceElement[] stackTrace;

  private java.lang.Throwable[] suppressed;

  private java.util.Map<java.lang.String, java.lang.Object> additionalProperties;

  private boolean sanitized;

  private de.tum.in.test.api.internal.sanitization.ThrowableInfo(java.lang.Class<? extends java.lang.Throwable>, java.lang.String, java.lang.Throwable, java.lang.StackTraceElement[], java.lang.Throwable[], java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field type:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field message:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field cause:Ljava/lang/Throwable;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field stackTrace:[Ljava/lang/StackTraceElement;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      31: aload_0
      32: aload         6
      34: putfield      #8                  // Field additionalProperties:Ljava/util/Map;
      37: return

  public java.lang.Class<? extends java.lang.Throwable> getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Ljava/lang/Class;
       4: areturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message:Ljava/lang/String;
       4: areturn

  public void setMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field message:Ljava/lang/String;
       5: return

  public java.lang.Throwable getCause();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cause:Ljava/lang/Throwable;
       4: areturn

  public void setCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field cause:Ljava/lang/Throwable;
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field sanitized:Z
      10: return

  public java.lang.StackTraceElement[] getStackTrace();
    Code:
       0: aload_0
       1: getfield      #6                  // Field stackTrace:[Ljava/lang/StackTraceElement;
       4: areturn

  public void setStackTrace(java.lang.StackTraceElement[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field stackTrace:[Ljava/lang/StackTraceElement;
       5: return

  public java.lang.Throwable[] getSuppressed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
       4: invokevirtual #10                 // Method "[Ljava/lang/Throwable;".clone:()Ljava/lang/Object;
       7: checkcast     #11                 // class "[Ljava/lang/Throwable;"
      10: areturn

  public void setSuppressed(java.lang.Throwable[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field sanitized:Z
      10: return

  public java.util.Map<java.lang.String, java.lang.Object> getAdditionalProperties();
    Code:
       0: aload_0
       1: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
       4: invokestatic  #12                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setAdditionalProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field additionalProperties:Ljava/util/Map;
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field sanitized:Z
      10: return

  public boolean isSanitized();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sanitized:Z
       4: ireturn

  public de.tum.in.test.api.internal.sanitization.ThrowableInfo sanitize();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field cause:Ljava/lang/Throwable;
       5: invokestatic  #13                 // Method de/tum/in/test/api/internal/sanitization/ThrowableSanitizer.sanitize:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       8: putfield      #5                  // Field cause:Ljava/lang/Throwable;
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      16: invokevirtual #14                 // Method "[Ljava/lang/Throwable;".clone:()Ljava/lang/Object;
      19: checkcast     #11                 // class "[Ljava/lang/Throwable;"
      22: putfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      25: iconst_0
      26: istore_1
      27: iload_1
      28: aload_0
      29: getfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      32: arraylength
      33: if_icmpge     57
      36: aload_0
      37: getfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      40: iload_1
      41: aload_0
      42: getfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      45: iload_1
      46: aaload
      47: invokestatic  #13                 // Method de/tum/in/test/api/internal/sanitization/ThrowableSanitizer.sanitize:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      50: aastore
      51: iinc          1, 1
      54: goto          27
      57: aload_0
      58: aload_0
      59: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
      62: invokeinterface #15,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      67: putfield      #9                  // Field sanitized:Z
      70: aload_0
      71: areturn

  public de.tum.in.test.api.internal.sanitization.ThrowableInfo sanitize(java.util.function.BiFunction<java.lang.String, java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method sanitize:()Lde/tum/in/test/api/internal/sanitization/ThrowableInfo;
       4: pop
       5: aload_0
       6: new           #17                 // class java/util/HashMap
       9: dup
      10: aload_0
      11: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
      14: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      17: putfield      #8                  // Field additionalProperties:Ljava/util/Map;
      20: aload_0
      21: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #19,  2           // InterfaceMethod java/util/Map.replaceAll:(Ljava/util/function/BiFunction;)V
      30: aload_0
      31: iconst_1
      32: putfield      #9                  // Field sanitized:Z
      35: aload_0
      36: areturn

  public java.util.Map<java.lang.String, java.lang.Object> toPropertyMap();
    Code:
       0: new           #17                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
       8: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_1
      13: ldc           #20                 // String message
      15: aload_0
      16: getfield      #4                  // Field message:Ljava/lang/String;
      19: invokevirtual #21                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_1
      24: ldc           #22                 // String cause
      26: aload_0
      27: getfield      #5                  // Field cause:Ljava/lang/Throwable;
      30: invokevirtual #21                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: ldc           #23                 // String stackTrace
      37: aload_0
      38: getfield      #6                  // Field stackTrace:[Ljava/lang/StackTraceElement;
      41: invokevirtual #21                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload_1
      46: ldc           #24                 // String suppressed
      48: aload_0
      49: getfield      #7                  // Field suppressed:[Ljava/lang/Throwable;
      52: invokevirtual #21                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_1
      57: areturn

  public <T> T getProperty(de.tum.in.test.api.internal.sanitization.ThrowableInfo$PropertyKey<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
       5: aload_1
       6: invokevirtual #25                 // Method de/tum/in/test/api/internal/sanitization/ThrowableInfo$PropertyKey.name:()Ljava/lang/String;
       9: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #27                 // Method de/tum/in/test/api/internal/sanitization/ThrowableInfo$PropertyKey.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public <T> void setProperty(de.tum.in.test.api.internal.sanitization.ThrowableInfo$PropertyKey<T>, T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field additionalProperties:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #25                 // Method de/tum/in/test/api/internal/sanitization/ThrowableInfo$PropertyKey.name:()Ljava/lang/String;
       8: aload_1
       9: aload_2
      10: invokevirtual #27                 // Method de/tum/in/test/api/internal/sanitization/ThrowableInfo$PropertyKey.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  public static de.tum.in.test.api.internal.sanitization.ThrowableInfo of(java.lang.Class<? extends java.lang.Throwable>, java.lang.String, java.lang.Throwable, java.lang.StackTraceElement[], java.lang.Throwable[], java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #29                 // class de/tum/in/test/api/internal/sanitization/ThrowableInfo
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #30                 // Method "[Ljava/lang/StackTraceElement;".clone:()Ljava/lang/Object;
      11: checkcast     #31                 // class "[Ljava/lang/StackTraceElement;"
      14: aload         4
      16: invokevirtual #32                 // Method "[Ljava/lang/Throwable;".clone:()Ljava/lang/Object;
      19: checkcast     #11                 // class "[Ljava/lang/Throwable;"
      22: new           #17                 // class java/util/HashMap
      25: dup
      26: aload         5
      28: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      31: invokespecial #33                 // Method "<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/StackTraceElement;[Ljava/lang/Throwable;Ljava/util/Map;)V
      34: areturn

  public static de.tum.in.test.api.internal.sanitization.ThrowableInfo of(java.lang.Class<? extends java.lang.Throwable>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #20                 // String message
       3: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #34                 // class java/lang/String
      11: astore_2
      12: aload_1
      13: ldc           #22                 // String cause
      15: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #35                 // class java/lang/Throwable
      23: astore_3
      24: aload_1
      25: ldc           #23                 // String stackTrace
      27: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #31                 // class "[Ljava/lang/StackTraceElement;"
      35: astore        4
      37: aload_1
      38: ldc           #24                 // String suppressed
      40: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #11                 // class "[Ljava/lang/Throwable;"
      48: astore        5
      50: new           #17                 // class java/util/HashMap
      53: dup
      54: aload_1
      55: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      58: astore        6
      60: getstatic     #36                 // Field de/tum/in/test/api/internal/sanitization/ThrowableUtils.THROWABLE_PROPERTIES:Ljava/util/Set;
      63: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore        7
      70: aload         7
      72: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          103
      80: aload         7
      82: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #34                 // class java/lang/String
      90: astore        8
      92: aload         6
      94: aload         8
      96: invokevirtual #40                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: goto          70
     103: new           #29                 // class de/tum/in/test/api/internal/sanitization/ThrowableInfo
     106: dup
     107: aload_0
     108: aload_2
     109: aload_3
     110: aload         4
     112: invokevirtual #41                 // Method "[Ljava/lang/StackTraceElement;".clone:()Ljava/lang/Object;
     115: checkcast     #31                 // class "[Ljava/lang/StackTraceElement;"
     118: aload         5
     120: invokevirtual #42                 // Method "[Ljava/lang/Throwable;".clone:()Ljava/lang/Object;
     123: checkcast     #11                 // class "[Ljava/lang/Throwable;"
     126: aload         6
     128: invokespecial #33                 // Method "<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/StackTraceElement;[Ljava/lang/Throwable;Ljava/util/Map;)V
     131: areturn

  public static de.tum.in.test.api.internal.sanitization.ThrowableInfo getEssentialInfosSafeFrom(java.lang.Throwable);
    Code:
       0: aload_0
       1: dup
       2: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: invokedynamic #44,  0             // InvokeDynamic #0:get:(Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      11: invokestatic  #45                 // Method de/tum/in/test/api/internal/BlacklistedInvoker.invoke:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #34                 // class java/lang/String
      17: astore_1
      18: aload_0
      19: dup
      20: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: invokedynamic #46,  0             // InvokeDynamic #1:get:(Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      29: invokestatic  #45                 // Method de/tum/in/test/api/internal/BlacklistedInvoker.invoke:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      32: checkcast     #35                 // class java/lang/Throwable
      35: astore_2
      36: aload_0
      37: dup
      38: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: invokedynamic #47,  0             // InvokeDynamic #2:get:(Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      47: invokestatic  #45                 // Method de/tum/in/test/api/internal/BlacklistedInvoker.invoke:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      50: checkcast     #31                 // class "[Ljava/lang/StackTraceElement;"
      53: astore_3
      54: aload_0
      55: invokevirtual #48                 // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
      58: astore        4
      60: aload_0
      61: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      64: aload_1
      65: aload_2
      66: aload_3
      67: aload         4
      69: invokestatic  #50                 // InterfaceMethod java/util/Map.of:()Ljava/util/Map;
      72: invokestatic  #51                 // Method of:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/StackTraceElement;[Ljava/lang/Throwable;Ljava/util/Map;)Lde/tum/in/test/api/internal/sanitization/ThrowableInfo;
      75: areturn
}
