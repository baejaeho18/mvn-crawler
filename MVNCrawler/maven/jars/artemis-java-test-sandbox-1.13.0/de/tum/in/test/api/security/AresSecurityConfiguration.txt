Compiled from "AresSecurityConfiguration.java"
public final class de.tum.in.test.api.security.AresSecurityConfiguration {
  private final java.util.Optional<java.lang.Class<?>> testClass;

  private final java.util.Optional<java.lang.reflect.Method> testMethod;

  private final java.nio.file.Path executionPath;

  private final java.util.List<java.lang.String> whitelistedClassNames;

  private final java.util.Optional<java.util.Set<de.tum.in.test.api.util.PathRule>> whitelistedPaths;

  private final java.util.Set<de.tum.in.test.api.util.PathRule> blacklistedPaths;

  private final java.util.Set<java.lang.Integer> allowedLocalPorts;

  private final java.util.OptionalInt allowLocalPortsAbove;

  private final java.util.Set<java.lang.Integer> excludedLocalPorts;

  private final java.util.OptionalInt allowedThreadCount;

  private final java.util.Set<de.tum.in.test.api.util.PackageRule> blacklistedPackages;

  private final java.util.Set<de.tum.in.test.api.util.PackageRule> whitelistedPackages;

  private final java.util.Set<de.tum.in.test.api.util.PackageRule> trustedPackages;

  private final de.tum.in.test.api.TrustedThreads$TrustScope threadTrustScope;

  de.tum.in.test.api.security.AresSecurityConfiguration(java.util.Optional<java.lang.Class<?>>, java.util.Optional<java.lang.reflect.Method>, java.nio.file.Path, java.util.Collection<java.lang.String>, java.util.Optional<java.util.Collection<de.tum.in.test.api.util.PathRule>>, java.util.Collection<de.tum.in.test.api.util.PathRule>, java.util.Set<java.lang.Integer>, java.util.OptionalInt, java.util.Set<java.lang.Integer>, java.util.OptionalInt, java.util.Set<de.tum.in.test.api.util.PackageRule>, java.util.Set<de.tum.in.test.api.util.PackageRule>, java.util.Set<de.tum.in.test.api.util.PackageRule>, de.tum.in.test.api.TrustedThreads$TrustScope);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/util/Optional
      12: putfield      #4                  // Field testClass:Ljava/util/Optional;
      15: aload_0
      16: aload_2
      17: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #3                  // class java/util/Optional
      23: putfield      #5                  // Field testMethod:Ljava/util/Optional;
      26: aload_0
      27: aload_3
      28: invokeinterface #6,  1            // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      33: putfield      #7                  // Field executionPath:Ljava/nio/file/Path;
      36: aload_0
      37: aload         4
      39: invokestatic  #8                  // InterfaceMethod java/util/List.copyOf:(Ljava/util/Collection;)Ljava/util/List;
      42: putfield      #9                  // Field whitelistedClassNames:Ljava/util/List;
      45: aload_0
      46: aload         5
      48: invokedynamic #10,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      53: invokevirtual #11                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      56: putfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
      59: aload_0
      60: aload         6
      62: invokestatic  #13                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
      65: putfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
      68: aload_0
      69: aload         7
      71: invokestatic  #13                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
      74: putfield      #15                 // Field allowedLocalPorts:Ljava/util/Set;
      77: aload_0
      78: aload         8
      80: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      83: checkcast     #16                 // class java/util/OptionalInt
      86: putfield      #17                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      89: aload_0
      90: aload         9
      92: invokestatic  #13                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
      95: putfield      #18                 // Field excludedLocalPorts:Ljava/util/Set;
      98: aload_0
      99: aload         10
     101: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #16                 // class java/util/OptionalInt
     107: putfield      #19                 // Field allowedThreadCount:Ljava/util/OptionalInt;
     110: aload_0
     111: aload         11
     113: invokestatic  #13                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
     116: putfield      #20                 // Field blacklistedPackages:Ljava/util/Set;
     119: aload_0
     120: aload         12
     122: invokestatic  #13                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
     125: putfield      #21                 // Field whitelistedPackages:Ljava/util/Set;
     128: aload_0
     129: aload         13
     131: invokestatic  #13                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
     134: putfield      #22                 // Field trustedPackages:Ljava/util/Set;
     137: aload_0
     138: aload         14
     140: putfield      #23                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
     143: return

  public java.util.Optional<java.lang.Class<?>> testClass();
    Code:
       0: aload_0
       1: getfield      #4                  // Field testClass:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<java.lang.reflect.Method> testMethod();
    Code:
       0: aload_0
       1: getfield      #5                  // Field testMethod:Ljava/util/Optional;
       4: areturn

  public java.nio.file.Path executionPath();
    Code:
       0: aload_0
       1: getfield      #7                  // Field executionPath:Ljava/nio/file/Path;
       4: areturn

  public java.util.List<java.lang.String> whitelistedClassNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field whitelistedClassNames:Ljava/util/List;
       4: areturn

  public java.util.Optional<java.util.Set<de.tum.in.test.api.util.PathRule>> whitelistedPaths();
    Code:
       0: aload_0
       1: getfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
       4: areturn

  public java.util.Set<de.tum.in.test.api.util.PathRule> blacklistedPaths();
    Code:
       0: aload_0
       1: getfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.Integer> allowedLocalPorts();
    Code:
       0: aload_0
       1: getfield      #15                 // Field allowedLocalPorts:Ljava/util/Set;
       4: areturn

  public java.util.OptionalInt allowLocalPortsAbove();
    Code:
       0: aload_0
       1: getfield      #17                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
       4: areturn

  public java.util.Set<java.lang.Integer> excludedLocalPorts();
    Code:
       0: aload_0
       1: getfield      #18                 // Field excludedLocalPorts:Ljava/util/Set;
       4: areturn

  public java.util.OptionalInt allowedThreadCount();
    Code:
       0: aload_0
       1: getfield      #19                 // Field allowedThreadCount:Ljava/util/OptionalInt;
       4: areturn

  public java.util.Set<de.tum.in.test.api.util.PackageRule> blacklistedPackages();
    Code:
       0: aload_0
       1: getfield      #20                 // Field blacklistedPackages:Ljava/util/Set;
       4: areturn

  public java.util.Set<de.tum.in.test.api.util.PackageRule> whitelistedPackages();
    Code:
       0: aload_0
       1: getfield      #21                 // Field whitelistedPackages:Ljava/util/Set;
       4: areturn

  public java.util.Set<de.tum.in.test.api.util.PackageRule> trustedPackages();
    Code:
       0: aload_0
       1: getfield      #22                 // Field trustedPackages:Ljava/util/Set;
       4: areturn

  public de.tum.in.test.api.TrustedThreads$TrustScope threadTrustScope();
    Code:
       0: aload_0
       1: getfield      #23                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #24                 // class de/tum/in/test/api/security/AresSecurityConfiguration
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #24                 // class de/tum/in/test/api/security/AresSecurityConfiguration
      20: astore_2
      21: aload_0
      22: getfield      #7                  // Field executionPath:Ljava/nio/file/Path;
      25: aload_2
      26: getfield      #7                  // Field executionPath:Ljava/nio/file/Path;
      29: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          207
      35: aload_0
      36: getfield      #4                  // Field testClass:Ljava/util/Optional;
      39: aload_2
      40: getfield      #4                  // Field testClass:Ljava/util/Optional;
      43: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          207
      49: aload_0
      50: getfield      #5                  // Field testMethod:Ljava/util/Optional;
      53: aload_2
      54: getfield      #5                  // Field testMethod:Ljava/util/Optional;
      57: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          207
      63: aload_0
      64: getfield      #9                  // Field whitelistedClassNames:Ljava/util/List;
      67: aload_2
      68: getfield      #9                  // Field whitelistedClassNames:Ljava/util/List;
      71: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      74: ifeq          207
      77: aload_0
      78: getfield      #15                 // Field allowedLocalPorts:Ljava/util/Set;
      81: aload_2
      82: getfield      #15                 // Field allowedLocalPorts:Ljava/util/Set;
      85: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      88: ifeq          207
      91: aload_0
      92: getfield      #17                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      95: aload_2
      96: getfield      #17                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      99: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     102: ifeq          207
     105: aload_0
     106: getfield      #18                 // Field excludedLocalPorts:Ljava/util/Set;
     109: aload_2
     110: getfield      #18                 // Field excludedLocalPorts:Ljava/util/Set;
     113: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     116: ifeq          207
     119: aload_0
     120: getfield      #19                 // Field allowedThreadCount:Ljava/util/OptionalInt;
     123: aload_2
     124: getfield      #19                 // Field allowedThreadCount:Ljava/util/OptionalInt;
     127: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     130: ifeq          207
     133: aload_0
     134: getfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
     137: aload_2
     138: getfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
     141: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     144: ifeq          207
     147: aload_0
     148: getfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
     151: aload_2
     152: getfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
     155: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     158: ifeq          207
     161: aload_0
     162: getfield      #20                 // Field blacklistedPackages:Ljava/util/Set;
     165: aload_2
     166: getfield      #20                 // Field blacklistedPackages:Ljava/util/Set;
     169: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     172: ifeq          207
     175: aload_0
     176: getfield      #21                 // Field whitelistedPackages:Ljava/util/Set;
     179: aload_2
     180: getfield      #21                 // Field whitelistedPackages:Ljava/util/Set;
     183: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     186: ifeq          207
     189: aload_0
     190: getfield      #23                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
     193: aload_2
     194: getfield      #23                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
     197: invokestatic  #25                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     200: ifeq          207
     203: iconst_1
     204: goto          208
     207: iconst_0
     208: ireturn

  public int hashCode();
    Code:
       0: bipush        10
       2: anewarray     #26                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #7                  // Field executionPath:Ljava/nio/file/Path;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #4                  // Field testClass:Ljava/util/Optional;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #5                  // Field testMethod:Ljava/util/Optional;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_0
      29: getfield      #9                  // Field whitelistedClassNames:Ljava/util/List;
      32: aastore
      33: dup
      34: iconst_4
      35: aload_0
      36: getfield      #19                 // Field allowedThreadCount:Ljava/util/OptionalInt;
      39: aastore
      40: dup
      41: iconst_5
      42: aload_0
      43: getfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
      46: aastore
      47: dup
      48: bipush        6
      50: aload_0
      51: getfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
      54: aastore
      55: dup
      56: bipush        7
      58: aload_0
      59: getfield      #20                 // Field blacklistedPackages:Ljava/util/Set;
      62: aastore
      63: dup
      64: bipush        8
      66: aload_0
      67: getfield      #21                 // Field whitelistedPackages:Ljava/util/Set;
      70: aastore
      71: dup
      72: bipush        9
      74: aload_0
      75: getfield      #23                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
      78: aastore
      79: invokestatic  #27                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      82: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #28                 // String AresSecurityConfiguration [whitelistedClassNames=%s, executionPath=%s, testClass=%s, testMethod=%s, whitelistedPaths=%s, blacklistedPaths=%s, allowedLocalPorts=%s, allowLocalPortsAbove=%s, excludedLocalPorts=%s, allowedThreadCount=%s, blacklistedPackages=%s, whitelistedPackages=%s, trustedPackages=%s, threadTrustScope=%s]
       2: bipush        14
       4: anewarray     #26                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: getfield      #9                  // Field whitelistedClassNames:Ljava/util/List;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #7                  // Field executionPath:Ljava/nio/file/Path;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #4                  // Field testClass:Ljava/util/Optional;
      27: aastore
      28: dup
      29: iconst_3
      30: aload_0
      31: getfield      #5                  // Field testMethod:Ljava/util/Optional;
      34: aastore
      35: dup
      36: iconst_4
      37: aload_0
      38: getfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
      41: aastore
      42: dup
      43: iconst_5
      44: aload_0
      45: getfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
      48: aastore
      49: dup
      50: bipush        6
      52: aload_0
      53: getfield      #15                 // Field allowedLocalPorts:Ljava/util/Set;
      56: aastore
      57: dup
      58: bipush        7
      60: aload_0
      61: getfield      #17                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      64: aastore
      65: dup
      66: bipush        8
      68: aload_0
      69: getfield      #18                 // Field excludedLocalPorts:Ljava/util/Set;
      72: aastore
      73: dup
      74: bipush        9
      76: aload_0
      77: getfield      #19                 // Field allowedThreadCount:Ljava/util/OptionalInt;
      80: aastore
      81: dup
      82: bipush        10
      84: aload_0
      85: getfield      #20                 // Field blacklistedPackages:Ljava/util/Set;
      88: aastore
      89: dup
      90: bipush        11
      92: aload_0
      93: getfield      #21                 // Field whitelistedPackages:Ljava/util/Set;
      96: aastore
      97: dup
      98: bipush        12
     100: aload_0
     101: getfield      #22                 // Field trustedPackages:Ljava/util/Set;
     104: aastore
     105: dup
     106: bipush        13
     108: aload_0
     109: getfield      #23                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
     112: aastore
     113: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     116: areturn

  public java.lang.String shortDesc();
    Code:
       0: ldc           #30                 // String ASC-Impl [testMethod=%s, executionPath=%s, whitelistedPaths=%s, blacklistedPaths=%s, allowedLocalPorts=%s, trustedPackages=%s]
       2: bipush        6
       4: anewarray     #26                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: getfield      #5                  // Field testMethod:Ljava/util/Optional;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #7                  // Field executionPath:Ljava/nio/file/Path;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #12                 // Field whitelistedPaths:Ljava/util/Optional;
      27: aastore
      28: dup
      29: iconst_3
      30: aload_0
      31: getfield      #14                 // Field blacklistedPaths:Ljava/util/Set;
      34: aastore
      35: dup
      36: iconst_4
      37: aload_0
      38: getfield      #15                 // Field allowedLocalPorts:Ljava/util/Set;
      41: aastore
      42: dup
      43: iconst_5
      44: aload_0
      45: getfield      #22                 // Field trustedPackages:Ljava/util/Set;
      48: aastore
      49: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: areturn
}
