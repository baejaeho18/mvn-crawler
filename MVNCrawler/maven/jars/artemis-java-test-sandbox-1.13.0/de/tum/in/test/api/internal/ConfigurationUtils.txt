Compiled from "ConfigurationUtils.java"
public final class de.tum.in.test.api.internal.ConfigurationUtils {
  private de.tum.in.test.api.internal.ConfigurationUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static de.tum.in.test.api.security.AresSecurityConfiguration generateConfiguration(de.tum.in.test.api.context.TestContext);
    Code:
       0: invokestatic  #2                  // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.create:()Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #3                  // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.configureFromContext:(Lde/tum/in/test/api/context/TestContext;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
       9: pop
      10: aload_1
      11: ldc           #4                  // String
      13: iconst_0
      14: anewarray     #5                  // class java/lang/String
      17: invokestatic  #6                  // InterfaceMethod java/nio/file/Path.of:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      20: invokevirtual #7                  // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withPath:(Ljava/nio/file/Path;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: invokestatic  #8                  // Method generateClassWhiteList:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      29: invokevirtual #9                  // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.addWhitelistedClassNames:(Ljava/util/Collection;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      32: pop
      33: aload_1
      34: aload_0
      35: invokestatic  #10                 // Method generatePathWhiteList:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      38: invokevirtual #11                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withPathWhitelist:(Ljava/util/Collection;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      41: pop
      42: aload_1
      43: aload_0
      44: invokestatic  #12                 // Method generatePathBlackList:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      47: invokevirtual #13                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withPathBlacklist:(Ljava/util/Collection;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      50: pop
      51: aload_1
      52: aload_0
      53: invokestatic  #14                 // Method getAllowedThreadCount:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/OptionalInt;
      56: invokevirtual #15                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withAllowedThreadCount:(Ljava/util/OptionalInt;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      59: pop
      60: aload_1
      61: aload_0
      62: invokestatic  #16                 // Method generatePackageBlackList:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      65: invokevirtual #17                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withPackageBlacklist:(Ljava/util/Collection;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      68: pop
      69: aload_1
      70: aload_0
      71: invokestatic  #18                 // Method generatePackageWhiteList:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      74: invokevirtual #19                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withPackageWhitelist:(Ljava/util/Collection;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      77: pop
      78: aload_1
      79: aload_0
      80: invokestatic  #20                 // Method getTrustedPackages:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      83: invokevirtual #21                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withTrustedPackages:(Ljava/util/Set;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      86: pop
      87: aload_1
      88: aload_0
      89: invokestatic  #22                 // Method getThreadTrustScope:(Lde/tum/in/test/api/context/TestContext;)Lde/tum/in/test/api/TrustedThreads$TrustScope;
      92: invokevirtual #23                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withThreadTrustScope:(Lde/tum/in/test/api/TrustedThreads$TrustScope;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      95: pop
      96: aload_1
      97: aload_0
      98: invokestatic  #24                 // Method configureAllowLocalPort:(Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;Lde/tum/in/test/api/context/TestContext;)V
     101: aload_1
     102: invokevirtual #25                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.build:()Lde/tum/in/test/api/security/AresSecurityConfiguration;
     105: areturn

  public static java.util.Set<de.tum.in.test.api.util.PathRule> generatePathWhiteList(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #26                 // class de/tum/in/test/api/WhitelistPath
       3: invokestatic  #27                 // Method de/tum/in/test/api/context/TestContextUtils.findRepeatableAnnotationsIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/stream/Stream;
       6: invokedynamic #28,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      19: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #32                 // class java/util/Set
      27: areturn

  public static java.util.Set<de.tum.in.test.api.util.PathRule> generatePathBlackList(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #33                 // class de/tum/in/test/api/BlacklistPath
       3: invokestatic  #27                 // Method de/tum/in/test/api/context/TestContextUtils.findRepeatableAnnotationsIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/stream/Stream;
       6: invokedynamic #34,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      11: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      19: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #32                 // class java/util/Set
      27: areturn

  public static java.util.Set<java.lang.String> generateClassWhiteList(de.tum.in.test.api.context.TestContext);
    Code:
       0: invokestatic  #35                 // Method java/lang/StackWalker.getInstance:()Ljava/lang/StackWalker;
       3: invokedynamic #36,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       8: invokevirtual #37                 // Method java/lang/StackWalker.walk:(Ljava/util/function/Function;)Ljava/lang/Object;
      11: checkcast     #32                 // class java/util/Set
      14: astore_1
      15: aload_0
      16: invokestatic  #38                 // Method de/tum/in/test/api/context/TestContextUtils.getClassNestingInnermostFirst:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/stream/Stream;
      19: invokedynamic #39,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      24: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      29: aload_1
      30: dup
      31: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: invokedynamic #42,  0             // InvokeDynamic #4:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
      40: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      45: aload_1
      46: aload_0
      47: invokestatic  #44                 // Method getWhitelistedClasses:(Lde/tum/in/test/api/context/TestContext;)Ljava/util/Set;
      50: invokeinterface #45,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      55: pop
      56: aload_1
      57: areturn

  public static java.util.Set<java.lang.String> getWhitelistedClasses(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #46                 // class de/tum/in/test/api/WhitelistClass
       3: invokestatic  #27                 // Method de/tum/in/test/api/context/TestContextUtils.findRepeatableAnnotationsIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/stream/Stream;
       6: invokedynamic #47,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      11: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #48,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      21: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokedynamic #39,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      31: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      39: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      44: checkcast     #32                 // class java/util/Set
      47: areturn

  public static boolean shouldMirrorOutput(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #49                 // class de/tum/in/test/api/MirrorOutput
       3: invokestatic  #50                 // Method de/tum/in/test/api/context/TestContextUtils.findAnnotationIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #51,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      11: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: invokedynamic #53,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      19: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      22: iconst_0
      23: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: invokevirtual #55                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #56                 // class java/lang/Boolean
      32: invokevirtual #57                 // Method java/lang/Boolean.booleanValue:()Z
      35: ireturn

  public static long getMaxStandardOutput(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #49                 // class de/tum/in/test/api/MirrorOutput
       3: invokestatic  #50                 // Method de/tum/in/test/api/context/TestContextUtils.findAnnotationIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #58,  0             // InvokeDynamic #9:apply:()Ljava/util/function/Function;
      11: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: ldc2_w        #59                 // long 100000000l
      17: invokestatic  #61                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: invokevirtual #55                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #62                 // class java/lang/Long
      26: invokevirtual #63                 // Method java/lang/Long.longValue:()J
      29: lreturn

  public static void configureAllowLocalPort(de.tum.in.test.api.security.AresSecurityConfigurationBuilder, de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_1
       1: ldc           #64                 // class de/tum/in/test/api/AllowLocalPort
       3: invokestatic  #50                 // Method de/tum/in/test/api/context/TestContextUtils.findAnnotationIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/Optional;
       6: aload_0
       7: invokedynamic #65,  0             // InvokeDynamic #10:accept:(Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;)Ljava/util/function/Consumer;
      12: invokevirtual #66                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      15: return

  public static java.util.OptionalInt getAllowedThreadCount(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #67                 // class de/tum/in/test/api/AllowThreads
       3: invokestatic  #50                 // Method de/tum/in/test/api/context/TestContextUtils.findAnnotationIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #68,  0             // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      11: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: invokedynamic #69,  0             // InvokeDynamic #12:apply:()Ljava/util/function/Function;
      19: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      22: invokedynamic #70,  0             // InvokeDynamic #13:get:()Ljava/util/function/Supplier;
      27: invokevirtual #71                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      30: checkcast     #72                 // class java/util/OptionalInt
      33: areturn

  public static java.util.Set<de.tum.in.test.api.util.PackageRule> generatePackageBlackList(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #73                 // class de/tum/in/test/api/BlacklistPackage
       3: invokestatic  #27                 // Method de/tum/in/test/api/context/TestContextUtils.findRepeatableAnnotationsIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/stream/Stream;
       6: invokedynamic #74,  0             // InvokeDynamic #14:apply:()Ljava/util/function/Function;
      11: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      19: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #32                 // class java/util/Set
      27: areturn

  public static java.util.Set<de.tum.in.test.api.util.PackageRule> generatePackageWhiteList(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #75                 // class de/tum/in/test/api/WhitelistPackage
       3: invokestatic  #27                 // Method de/tum/in/test/api/context/TestContextUtils.findRepeatableAnnotationsIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/stream/Stream;
       6: invokedynamic #76,  0             // InvokeDynamic #15:apply:()Ljava/util/function/Function;
      11: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      19: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #32                 // class java/util/Set
      27: areturn

  public static java.util.Optional<java.lang.String> getNonprivilegedFailureMessage(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #77                 // class de/tum/in/test/api/PrivilegedExceptionsOnly
       3: invokestatic  #50                 // Method de/tum/in/test/api/context/TestContextUtils.findAnnotationIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #78,  0             // InvokeDynamic #16:apply:()Ljava/util/function/Function;
      11: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: areturn

  public static java.util.Set<de.tum.in.test.api.util.PackageRule> getTrustedPackages(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #79                 // class de/tum/in/test/api/AddTrustedPackage
       3: invokestatic  #27                 // Method de/tum/in/test/api/context/TestContextUtils.findRepeatableAnnotationsIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/stream/Stream;
       6: invokedynamic #80,  0             // InvokeDynamic #17:apply:()Ljava/util/function/Function;
      11: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #81,  0             // InvokeDynamic #18:apply:()Ljava/util/function/Function;
      21: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      29: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #32                 // class java/util/Set
      37: areturn

  private static de.tum.in.test.api.TrustedThreads$TrustScope getThreadTrustScope(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: ldc           #82                 // class de/tum/in/test/api/TrustedThreads
       3: invokestatic  #50                 // Method de/tum/in/test/api/context/TestContextUtils.findAnnotationIn:(Lde/tum/in/test/api/context/TestContext;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokedynamic #83,  0             // InvokeDynamic #19:apply:()Ljava/util/function/Function;
      11: invokevirtual #52                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: getstatic     #84                 // Field de/tum/in/test/api/TrustedThreads$TrustScope.MINIMAL:Lde/tum/in/test/api/TrustedThreads$TrustScope;
      17: invokevirtual #55                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #85                 // class de/tum/in/test/api/TrustedThreads$TrustScope
      23: areturn

  private static java.util.stream.Stream lambda$getTrustedPackages$2(java.lang.String[]);
    Code:
       0: getstatic     #86                 // Field de/tum/in/test/api/util/RuleType.WHITELIST:Lde/tum/in/test/api/util/RuleType;
       3: aload_0
       4: invokestatic  #87                 // Method de/tum/in/test/api/util/PackageRule.from:(Lde/tum/in/test/api/util/RuleType;[Ljava/lang/String;)Ljava/util/stream/Stream;
       7: areturn

  private static void lambda$configureAllowLocalPort$1(de.tum.in.test.api.security.AresSecurityConfigurationBuilder, de.tum.in.test.api.AllowLocalPort);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #88,  1           // InterfaceMethod de/tum/in/test/api/AllowLocalPort.value:()[I
       7: invokestatic  #89                 // InterfaceMethod java/util/stream/IntStream.of:([I)Ljava/util/stream/IntStream;
      10: invokeinterface #90,  1           // InterfaceMethod java/util/stream/IntStream.boxed:()Ljava/util/stream/Stream;
      15: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      18: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      23: checkcast     #32                 // class java/util/Set
      26: invokevirtual #91                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withAllowedLocalPorts:(Ljava/util/Set;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      29: pop
      30: aload_0
      31: aload_1
      32: invokeinterface #92,  1           // InterfaceMethod de/tum/in/test/api/AllowLocalPort.allowPortsAbove:()I
      37: invokestatic  #93                 // Method java/util/OptionalInt.of:(I)Ljava/util/OptionalInt;
      40: invokevirtual #94                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withAllowLocalPortsAbove:(Ljava/util/OptionalInt;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      43: pop
      44: aload_0
      45: aload_1
      46: invokeinterface #95,  1           // InterfaceMethod de/tum/in/test/api/AllowLocalPort.exclude:()[I
      51: invokestatic  #89                 // InterfaceMethod java/util/stream/IntStream.of:([I)Ljava/util/stream/IntStream;
      54: invokeinterface #90,  1           // InterfaceMethod java/util/stream/IntStream.boxed:()Ljava/util/stream/Stream;
      59: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      62: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      67: checkcast     #32                 // class java/util/Set
      70: invokevirtual #96                 // Method de/tum/in/test/api/security/AresSecurityConfigurationBuilder.withExcludedLocalPorts:(Ljava/util/Set;)Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;
      73: pop
      74: return

  private static java.util.HashSet lambda$generateClassWhiteList$0(java.util.stream.Stream);
    Code:
       0: aload_0
       1: invokedynamic #97,  0             // InvokeDynamic #20:apply:()Ljava/util/function/Function;
       6: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      11: invokedynamic #98,  0             // InvokeDynamic #21:get:()Ljava/util/function/Supplier;
      16: invokestatic  #99                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      19: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #100                // class java/util/HashSet
      27: areturn
}
