Compiled from "DelayedFilter.java"
public class de.tum.in.test.api.util.DelayedFilter<T> implements java.util.function.Predicate<T> {
  private final java.util.function.Predicate<T> original;

  private final int delay;

  private final boolean[] buffer;

  private int pos;

  private boolean hasNotBeenTrue;

  private boolean hasNotBeenFalse;

  private boolean lastValue;

  public de.tum.in.test.api.util.DelayedFilter(int, java.util.function.Predicate<T>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field hasNotBeenTrue:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field hasNotBeenFalse:Z
      14: aload_0
      15: aload_2
      16: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #5                  // class java/util/function/Predicate
      22: putfield      #6                  // Field original:Ljava/util/function/Predicate;
      25: iload_1
      26: ifgt          43
      29: new           #7                  // class java/lang/IllegalArgumentException
      32: dup
      33: iload_1
      34: invokedynamic #8,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      39: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iload_1
      45: putfield      #10                 // Field delay:I
      48: aload_0
      49: iload_1
      50: newarray       boolean
      52: putfield      #11                 // Field buffer:[Z
      55: aload_0
      56: iload_3
      57: putfield      #12                 // Field lastValue:Z
      60: aload_0
      61: getfield      #11                 // Field buffer:[Z
      64: iload_3
      65: invokestatic  #13                 // Method java/util/Arrays.fill:([ZZ)V
      68: return

  public boolean test(T);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field buffer:[Z
       5: aload_0
       6: getfield      #14                 // Field pos:I
       9: baload
      10: putfield      #12                 // Field lastValue:Z
      13: aload_0
      14: aload_0
      15: getfield      #6                  // Field original:Ljava/util/function/Predicate;
      18: aload_1
      19: invokeinterface #15,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      24: invokevirtual #16                 // Method updateWithNewValue:(Z)V
      27: aload_0
      28: getfield      #12                 // Field lastValue:Z
      31: ireturn

  private void updateWithNewValue(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:[Z
       4: aload_0
       5: getfield      #14                 // Field pos:I
       8: iload_1
       9: bastore
      10: aload_0
      11: aload_0
      12: invokevirtual #17                 // Method nextPos:()I
      15: putfield      #14                 // Field pos:I
      18: aload_0
      19: getfield      #2                  // Field hasNotBeenTrue:Z
      22: ifeq          37
      25: iload_1
      26: ifeq          37
      29: aload_0
      30: iconst_0
      31: putfield      #2                  // Field hasNotBeenTrue:Z
      34: goto          53
      37: aload_0
      38: getfield      #3                  // Field hasNotBeenFalse:Z
      41: ifeq          53
      44: iload_1
      45: ifne          53
      48: aload_0
      49: iconst_0
      50: putfield      #3                  // Field hasNotBeenFalse:Z
      53: return

  public boolean lastValue();
    Code:
       0: aload_0
       1: getfield      #12                 // Field lastValue:Z
       4: ireturn

  public boolean hasBeenTrue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasNotBeenTrue:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasBeenFalse();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hasNotBeenFalse:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private int nextPos();
    Code:
       0: aload_0
       1: getfield      #14                 // Field pos:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: getfield      #10                 // Field delay:I
      10: irem
      11: ireturn
}
