Compiled from "PrivilegedExceptionSanitizer.java"
final class de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer extends java.lang.Enum<de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer> implements de.tum.in.test.api.internal.sanitization.SpecificThrowableSanitizer {
  public static final de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer INSTANCE;

  private static final de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer[] $VALUES;

  public static de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lde/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer;
       3: invokevirtual #2                  // Method "[Lde/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lde/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer;"
       9: areturn

  public static de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class de/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class de/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer
       9: areturn

  private de.tum.in.test.api.internal.sanitization.PrivilegedExceptionSanitizer();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public boolean canSanitize(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #7                  // class de/tum/in/test/api/internal/PrivilegedException
       4: ireturn

  public java.lang.Throwable sanitize(java.lang.Throwable, de.tum.in.test.api.internal.sanitization.MessageTransformer);
    Code:
       0: aload_1
       1: checkcast     #7                  // class de/tum/in/test/api/internal/PrivilegedException
       4: invokevirtual #8                  // Method de/tum/in/test/api/internal/PrivilegedException.getPriviledgedThrowable:()Ljava/lang/Throwable;
       7: aload_2
       8: invokestatic  #9                  // Method de/tum/in/test/api/internal/sanitization/ThrowableSanitizer.sanitize:(Ljava/lang/Throwable;Lde/tum/in/test/api/internal/sanitization/MessageTransformer;)Ljava/lang/Throwable;
      11: areturn

  static {};
    Code:
       0: new           #4                  // class de/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer
       3: dup
       4: ldc           #10                 // String INSTANCE
       6: iconst_0
       7: invokespecial #11                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #12                 // Field INSTANCE:Lde/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer;
      13: iconst_1
      14: anewarray     #4                  // class de/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer
      17: dup
      18: iconst_0
      19: getstatic     #12                 // Field INSTANCE:Lde/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lde/tum/in/test/api/internal/sanitization/PrivilegedExceptionSanitizer;
      26: return
}
