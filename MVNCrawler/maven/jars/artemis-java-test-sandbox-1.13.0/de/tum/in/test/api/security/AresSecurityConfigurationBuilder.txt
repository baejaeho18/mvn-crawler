Compiled from "AresSecurityConfigurationBuilder.java"
public final class de.tum.in.test.api.security.AresSecurityConfigurationBuilder {
  private static final org.slf4j.Logger LOG;

  private static final java.nio.file.Path EXPECTED_MAVEN_POM_PATH;

  private static final java.nio.file.Path EXPECTED_GRADLE_BUILD_PATH;

  private static final java.lang.String MAVEN_ENFORCER_FILE_ENTRY;

  private static final java.lang.String GRADLE_ENFORCER_FILE_ENTRY;

  private static final boolean IS_MAVEN;

  private static final boolean IS_GRADLE;

  private static java.lang.String buildConfigurationFileContent;

  private java.util.Optional<java.lang.Class<?>> testClass;

  private java.util.Optional<java.lang.reflect.Method> testMethod;

  private java.nio.file.Path executionPath;

  private java.util.Set<java.lang.String> whitelistedClassNames;

  private java.util.Set<de.tum.in.test.api.util.PathRule> whitelistedPaths;

  private java.util.Set<de.tum.in.test.api.util.PathRule> blacklistedPaths;

  private java.util.Set<de.tum.in.test.api.util.PackageRule> blacklistedPackages;

  private java.util.Set<de.tum.in.test.api.util.PackageRule> whitelistedPackages;

  private java.util.Set<java.lang.Integer> allowedLocalPorts;

  private java.util.OptionalInt allowLocalPortsAbove;

  private java.util.Set<java.lang.Integer> excludedLocalPorts;

  private java.util.OptionalInt allowedThreadCount;

  private java.util.Set<de.tum.in.test.api.util.PackageRule> trustedPackages;

  private de.tum.in.test.api.TrustedThreads$TrustScope threadTrustScope;

  private de.tum.in.test.api.security.AresSecurityConfigurationBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field testClass:Ljava/util/Optional;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: putfield      #4                  // Field testMethod:Ljava/util/Optional;
      18: aload_0
      19: new           #5                  // class java/util/HashSet
      22: dup
      23: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      26: putfield      #7                  // Field whitelistedClassNames:Ljava/util/Set;
      29: aload_0
      30: invokestatic  #8                  // InterfaceMethod java/util/Set.of:()Ljava/util/Set;
      33: putfield      #9                  // Field blacklistedPaths:Ljava/util/Set;
      36: aload_0
      37: invokestatic  #8                  // InterfaceMethod java/util/Set.of:()Ljava/util/Set;
      40: putfield      #10                 // Field blacklistedPackages:Ljava/util/Set;
      43: aload_0
      44: invokestatic  #8                  // InterfaceMethod java/util/Set.of:()Ljava/util/Set;
      47: putfield      #11                 // Field whitelistedPackages:Ljava/util/Set;
      50: aload_0
      51: invokestatic  #8                  // InterfaceMethod java/util/Set.of:()Ljava/util/Set;
      54: putfield      #12                 // Field allowedLocalPorts:Ljava/util/Set;
      57: aload_0
      58: invokestatic  #13                 // Method java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
      61: putfield      #14                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      64: aload_0
      65: invokestatic  #8                  // InterfaceMethod java/util/Set.of:()Ljava/util/Set;
      68: putfield      #15                 // Field excludedLocalPorts:Ljava/util/Set;
      71: aload_0
      72: invokestatic  #13                 // Method java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
      75: putfield      #16                 // Field allowedThreadCount:Ljava/util/OptionalInt;
      78: aload_0
      79: invokestatic  #8                  // InterfaceMethod java/util/Set.of:()Ljava/util/Set;
      82: putfield      #17                 // Field trustedPackages:Ljava/util/Set;
      85: aload_0
      86: getstatic     #18                 // Field de/tum/in/test/api/TrustedThreads$TrustScope.MINIMAL:Lde/tum/in/test/api/TrustedThreads$TrustScope;
      89: putfield      #19                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
      92: return

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withPath(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #21                 // class java/nio/file/Path
       8: putfield      #22                 // Field executionPath:Ljava/nio/file/Path;
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withPathWhitelist(java.util.Collection<de.tum.in.test.api.util.PathRule>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
       5: putfield      #24                 // Field whitelistedPaths:Ljava/util/Set;
       8: aload_0
       9: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withPathBlacklist(java.util.Collection<de.tum.in.test.api.util.PathRule>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
       5: putfield      #9                  // Field blacklistedPaths:Ljava/util/Set;
       8: aload_0
       9: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withAllowedLocalPorts(java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #25                 // class java/util/Set
       8: putfield      #12                 // Field allowedLocalPorts:Ljava/util/Set;
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withAllowLocalPortsAbove(java.util.OptionalInt);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #26                 // class java/util/OptionalInt
       8: putfield      #14                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withExcludedLocalPorts(java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #25                 // class java/util/Set
       8: putfield      #15                 // Field excludedLocalPorts:Ljava/util/Set;
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withAllowedThreadCount(java.util.OptionalInt);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #26                 // class java/util/OptionalInt
       8: putfield      #16                 // Field allowedThreadCount:Ljava/util/OptionalInt;
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder configureFromContext(de.tum.in.test.api.context.TestContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method de/tum/in/test/api/context/TestContext.testClass:()Ljava/util/Optional;
       5: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #28                 // class java/util/Optional
      11: putfield      #3                  // Field testClass:Ljava/util/Optional;
      14: aload_0
      15: aload_1
      16: invokevirtual #29                 // Method de/tum/in/test/api/context/TestContext.testMethod:()Ljava/util/Optional;
      19: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #28                 // class java/util/Optional
      25: putfield      #4                  // Field testMethod:Ljava/util/Optional;
      28: aload_0
      29: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder addWhitelistedClassNames(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field whitelistedClassNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withPackageBlacklist(java.util.Collection<de.tum.in.test.api.util.PackageRule>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
       5: putfield      #10                 // Field blacklistedPackages:Ljava/util/Set;
       8: aload_0
       9: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withPackageWhitelist(java.util.Collection<de.tum.in.test.api.util.PackageRule>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
       5: putfield      #11                 // Field whitelistedPackages:Ljava/util/Set;
       8: aload_0
       9: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withTrustedPackages(java.util.Set<de.tum.in.test.api.util.PackageRule>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // InterfaceMethod java/util/Set.copyOf:(Ljava/util/Collection;)Ljava/util/Set;
       5: putfield      #17                 // Field trustedPackages:Ljava/util/Set;
       8: aload_0
       9: areturn

  public de.tum.in.test.api.security.AresSecurityConfigurationBuilder withThreadTrustScope(de.tum.in.test.api.TrustedThreads$TrustScope);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #31                 // class de/tum/in/test/api/TrustedThreads$TrustScope
       8: putfield      #19                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
      11: aload_0
      12: areturn

  public de.tum.in.test.api.security.AresSecurityConfiguration build();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method validate:()V
       4: new           #33                 // class de/tum/in/test/api/security/AresSecurityConfiguration
       7: dup
       8: aload_0
       9: getfield      #3                  // Field testClass:Ljava/util/Optional;
      12: aload_0
      13: getfield      #4                  // Field testMethod:Ljava/util/Optional;
      16: aload_0
      17: getfield      #22                 // Field executionPath:Ljava/nio/file/Path;
      20: aload_0
      21: getfield      #7                  // Field whitelistedClassNames:Ljava/util/Set;
      24: aload_0
      25: getfield      #24                 // Field whitelistedPaths:Ljava/util/Set;
      28: invokestatic  #34                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      31: aload_0
      32: getfield      #9                  // Field blacklistedPaths:Ljava/util/Set;
      35: aload_0
      36: getfield      #12                 // Field allowedLocalPorts:Ljava/util/Set;
      39: aload_0
      40: getfield      #14                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      43: aload_0
      44: getfield      #15                 // Field excludedLocalPorts:Ljava/util/Set;
      47: aload_0
      48: getfield      #16                 // Field allowedThreadCount:Ljava/util/OptionalInt;
      51: aload_0
      52: getfield      #10                 // Field blacklistedPackages:Ljava/util/Set;
      55: aload_0
      56: getfield      #11                 // Field whitelistedPackages:Ljava/util/Set;
      59: aload_0
      60: getfield      #17                 // Field trustedPackages:Ljava/util/Set;
      63: aload_0
      64: getfield      #19                 // Field threadTrustScope:Lde/tum/in/test/api/TrustedThreads$TrustScope;
      67: invokespecial #35                 // Method de/tum/in/test/api/security/AresSecurityConfiguration."<init>":(Ljava/util/Optional;Ljava/util/Optional;Ljava/nio/file/Path;Ljava/util/Collection;Ljava/util/Optional;Ljava/util/Collection;Ljava/util/Set;Ljava/util/OptionalInt;Ljava/util/Set;Ljava/util/OptionalInt;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lde/tum/in/test/api/TrustedThreads$TrustScope;)V
      70: areturn

  private void validate();
    Code:
       0: aload_0
       1: getfield      #16                 // Field allowedThreadCount:Ljava/util/OptionalInt;
       4: iconst_0
       5: invokevirtual #36                 // Method java/util/OptionalInt.orElse:(I)I
       8: ifge          28
      11: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
      14: dup
      15: ldc           #38                 // String security.configuration_invalid_negative_threads
      17: iconst_0
      18: anewarray     #39                 // class java/lang/Object
      21: invokestatic  #40                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #12                 // Field allowedLocalPorts:Ljava/util/Set;
      32: aload_0
      33: getfield      #15                 // Field excludedLocalPorts:Ljava/util/Set;
      36: invokestatic  #42                 // Method java/util/Collections.disjoint:(Ljava/util/Collection;Ljava/util/Collection;)Z
      39: ifne          59
      42: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
      45: dup
      46: ldc           #43                 // String security.configuration_invalid_port_rule_intersection
      48: iconst_0
      49: anewarray     #39                 // class java/lang/Object
      52: invokestatic  #40                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      55: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: getfield      #12                 // Field allowedLocalPorts:Ljava/util/Set;
      63: invokedynamic #44,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      68: invokeinterface #45,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      73: aload_0
      74: getfield      #15                 // Field excludedLocalPorts:Ljava/util/Set;
      77: invokedynamic #44,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      82: invokeinterface #45,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      87: aload_0
      88: getfield      #14                 // Field allowLocalPortsAbove:Ljava/util/OptionalInt;
      91: aload_0
      92: invokedynamic #46,  0             // InvokeDynamic #1:accept:(Lde/tum/in/test/api/security/AresSecurityConfigurationBuilder;)Ljava/util/function/IntConsumer;
      97: invokevirtual #47                 // Method java/util/OptionalInt.ifPresent:(Ljava/util/function/IntConsumer;)V
     100: aload_0
     101: getfield      #17                 // Field trustedPackages:Ljava/util/Set;
     104: invokestatic  #48                 // Method validateTrustedPackages:(Ljava/util/Set;)V
     107: return

  private static void validatePortRange(int);
    Code:
       0: iload_0
       1: ifge          21
       4: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
       7: dup
       8: ldc           #49                 // String security.configuration_invalid_port_negative
      10: iconst_0
      11: anewarray     #39                 // class java/lang/Object
      14: invokestatic  #40                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_0
      22: ldc           #51                 // int 65535
      24: if_icmple     44
      27: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
      30: dup
      31: ldc           #52                 // String security.configuration_invalid_port_over_max
      33: iconst_0
      34: anewarray     #39                 // class java/lang/Object
      37: invokestatic  #40                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return

  private static void validateTrustedPackages(java.util.Set<de.tum.in.test.api.util.PackageRule>);
    Code:
       0: getstatic     #53                 // Field IS_MAVEN:Z
       3: ifeq          16
       6: ldc           #55                 // String <file>${project.build.outputDirectory}%s</file>
       8: astore_1
       9: getstatic     #56                 // Field EXPECTED_MAVEN_POM_PATH:Ljava/nio/file/Path;
      12: astore_2
      13: goto          33
      16: getstatic     #57                 // Field IS_GRADLE:Z
      19: ifeq          32
      22: ldc           #58                 // String \"$studentOutputDir%s\"
      24: astore_1
      25: getstatic     #59                 // Field EXPECTED_GRADLE_BUILD_PATH:Ljava/nio/file/Path;
      28: astore_2
      29: goto          33
      32: return
      33: getstatic     #60                 // Field buildConfigurationFileContent:Ljava/lang/String;
      36: ifnonnull     46
      39: aload_2
      40: invokestatic  #61                 // Method java/nio/file/Files.readString:(Ljava/nio/file/Path;)Ljava/lang/String;
      43: putstatic     #60                 // Field buildConfigurationFileContent:Ljava/lang/String;
      46: getstatic     #62                 // Field de/tum/in/test/api/security/SecurityConstants.STACK_WHITELIST:Ljava/util/Set;
      49: invokeinterface #63,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      54: aload_0
      55: invokeinterface #63,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      60: invokedynamic #64,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      65: invokeinterface #65,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      70: invokedynamic #66,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      75: invokestatic  #67                 // InterfaceMethod java/util/function/Predicate.not:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      78: invokeinterface #68,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      83: invokestatic  #69                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      86: invokedynamic #70,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      91: invokeinterface #65,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      96: aload_1
      97: invokedynamic #71,  0             // InvokeDynamic #5:apply:(Ljava/lang/String;)Ljava/util/function/Function;
     102: invokeinterface #65,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     107: astore_3
     108: aload_3
     109: getstatic     #60                 // Field buildConfigurationFileContent:Ljava/lang/String;
     112: dup
     113: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: invokedynamic #72,  0             // InvokeDynamic #6:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
     122: invokestatic  #67                 // InterfaceMethod java/util/function/Predicate.not:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
     125: invokeinterface #68,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     130: invokeinterface #73,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
     135: invokestatic  #74                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     138: invokeinterface #75,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     143: checkcast     #76                 // class java/util/List
     146: astore        4
     148: getstatic     #77                 // Field LOG:Lorg/slf4j/Logger;
     151: ldc           #78                 // String Validated build configuration regarding trusted package rules, {} are missing.
     153: aload         4
     155: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
     160: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     163: invokeinterface #81,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     168: aload         4
     170: invokeinterface #82,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     175: ifeq          179
     178: return
     179: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
     182: dup
     183: ldc           #83                 // String \n
     185: aload         4
     187: invokestatic  #84                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
     190: invokedynamic #85,  0             // InvokeDynamic #7:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     195: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: astore_3
     200: getstatic     #77                 // Field LOG:Lorg/slf4j/Logger;
     203: ldc           #87                 // String Ares cannot read pom.xml
     205: aload_3
     206: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     211: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
     214: dup
     215: aload_2
     216: invokeinterface #89,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
     221: invokedynamic #90,  0             // InvokeDynamic #8:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
     226: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
     229: athrow
    Exception table:
       from    to  target type
          33   178   199   Class java/io/IOException
         179   199   199   Class java/io/IOException

  public static de.tum.in.test.api.security.AresSecurityConfigurationBuilder create();
    Code:
       0: new           #54                 // class de/tum/in/test/api/security/AresSecurityConfigurationBuilder
       3: dup
       4: invokespecial #91                 // Method "<init>":()V
       7: areturn

  private static java.lang.String lambda$validateTrustedPackages$9(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #39                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      12: areturn

  private static java.lang.String lambda$validateTrustedPackages$8(java.lang.String);
    Code:
       0: ldc           #93                 // String /
       2: aload_0
       3: ldc           #94                 // String \\.
       5: invokevirtual #95                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       8: invokestatic  #96                 // Method java/lang/String.join:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;
      11: invokedynamic #97,  0             // InvokeDynamic #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      16: areturn

  private static java.lang.String lambda$validateTrustedPackages$7(de.tum.in.test.api.util.PackageRule);
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method de/tum/in/test/api/util/PackageRule.getPackagePattern:()Ljava/lang/String;
       4: ldc           #99                 // String \\*
       6: iconst_2
       7: invokevirtual #100                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
      10: iconst_0
      11: aaload
      12: areturn

  private void lambda$validate$6(int);
    Code:
       0: iload_1
       1: invokestatic  #101                // Method validatePortRange:(I)V
       4: aload_0
       5: getfield      #12                 // Field allowedLocalPorts:Ljava/util/Set;
       8: invokeinterface #63,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      13: iload_1
      14: invokedynamic #102,  0            // InvokeDynamic #10:test:(I)Ljava/util/function/Predicate;
      19: invokeinterface #103,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      24: ifeq          44
      27: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
      30: dup
      31: ldc           #104                // String security.configuration_invalid_port_allowed_in_rage
      33: iconst_0
      34: anewarray     #39                 // class java/lang/Object
      37: invokestatic  #40                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #15                 // Field excludedLocalPorts:Ljava/util/Set;
      48: invokeinterface #63,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      53: iload_1
      54: invokedynamic #105,  0            // InvokeDynamic #11:test:(I)Ljava/util/function/Predicate;
      59: invokeinterface #103,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      64: ifeq          84
      67: new           #37                 // class de/tum/in/test/api/security/ConfigurationException
      70: dup
      71: ldc           #106                // String security.configuration_invalid_port_exclude_outside_rage
      73: iconst_0
      74: anewarray     #39                 // class java/lang/Object
      77: invokestatic  #40                 // Method de/tum/in/test/api/localization/Messages.localized:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      80: invokespecial #41                 // Method de/tum/in/test/api/security/ConfigurationException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: return

  private static boolean lambda$validate$5(int, java.lang.Integer);
    Code:
       0: aload_1
       1: invokevirtual #107                // Method java/lang/Integer.intValue:()I
       4: iload_0
       5: if_icmpgt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static boolean lambda$validate$4(int, java.lang.Integer);
    Code:
       0: aload_1
       1: invokevirtual #107                // Method java/lang/Integer.intValue:()I
       4: iload_0
       5: if_icmple     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static java.lang.Boolean lambda$static$3(java.util.stream.Stream);
    Code:
       0: aload_0
       1: invokedynamic #108,  0            // InvokeDynamic #12:test:()Ljava/util/function/Predicate;
       6: invokeinterface #103,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      11: invokestatic  #109                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn

  private static boolean lambda$static$2(java.lang.StackWalker$StackFrame);
    Code:
       0: aload_0
       1: invokeinterface #110,  1          // InterfaceMethod java/lang/StackWalker$StackFrame.getClassName:()Ljava/lang/String;
       6: ldc           #111                // String gradle
       8: invokevirtual #112                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      11: ireturn

  private static java.lang.Boolean lambda$static$1(java.util.stream.Stream);
    Code:
       0: aload_0
       1: invokedynamic #113,  0            // InvokeDynamic #13:test:()Ljava/util/function/Predicate;
       6: invokeinterface #103,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      11: invokestatic  #109                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn

  private static boolean lambda$static$0(java.lang.StackWalker$StackFrame);
    Code:
       0: aload_0
       1: invokeinterface #110,  1          // InterfaceMethod java/lang/StackWalker$StackFrame.getClassName:()Ljava/lang/String;
       6: ldc           #114                // String maven
       8: invokevirtual #112                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      11: ireturn

  static {};
    Code:
       0: ldc           #54                 // class de/tum/in/test/api/security/AresSecurityConfigurationBuilder
       2: invokestatic  #115                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #77                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #117                // String ares.maven.pom
      10: ldc           #118                // String pom.xml
      12: invokestatic  #119                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: iconst_0
      16: anewarray     #120                // class java/lang/String
      19: invokestatic  #121                // InterfaceMethod java/nio/file/Path.of:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      22: putstatic     #56                 // Field EXPECTED_MAVEN_POM_PATH:Ljava/nio/file/Path;
      25: ldc           #122                // String ares.gradle.build
      27: ldc           #123                // String build.gradle
      29: invokestatic  #119                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      32: iconst_0
      33: anewarray     #120                // class java/lang/String
      36: invokestatic  #121                // InterfaceMethod java/nio/file/Path.of:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      39: putstatic     #59                 // Field EXPECTED_GRADLE_BUILD_PATH:Ljava/nio/file/Path;
      42: invokestatic  #124                // Method java/lang/StackWalker.getInstance:()Ljava/lang/StackWalker;
      45: invokedynamic #125,  0            // InvokeDynamic #14:apply:()Ljava/util/function/Function;
      50: invokevirtual #126                // Method java/lang/StackWalker.walk:(Ljava/util/function/Function;)Ljava/lang/Object;
      53: checkcast     #127                // class java/lang/Boolean
      56: invokevirtual #128                // Method java/lang/Boolean.booleanValue:()Z
      59: ifne          75
      62: getstatic     #56                 // Field EXPECTED_MAVEN_POM_PATH:Ljava/nio/file/Path;
      65: iconst_0
      66: anewarray     #129                // class java/nio/file/LinkOption
      69: invokestatic  #130                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      72: ifeq          87
      75: ldc           #131                // String ares.maven.ignore
      77: invokestatic  #132                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      80: ifne          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: putstatic     #53                 // Field IS_MAVEN:Z
      91: invokestatic  #124                // Method java/lang/StackWalker.getInstance:()Ljava/lang/StackWalker;
      94: invokedynamic #133,  0            // InvokeDynamic #15:apply:()Ljava/util/function/Function;
      99: invokevirtual #126                // Method java/lang/StackWalker.walk:(Ljava/util/function/Function;)Ljava/lang/Object;
     102: checkcast     #127                // class java/lang/Boolean
     105: invokevirtual #128                // Method java/lang/Boolean.booleanValue:()Z
     108: ifne          124
     111: getstatic     #59                 // Field EXPECTED_GRADLE_BUILD_PATH:Ljava/nio/file/Path;
     114: iconst_0
     115: anewarray     #129                // class java/nio/file/LinkOption
     118: invokestatic  #130                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     121: ifeq          136
     124: ldc           #134                // String ares.gradle.ignore
     126: invokestatic  #132                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
     129: ifne          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: putstatic     #57                 // Field IS_GRADLE:Z
     140: return
}
