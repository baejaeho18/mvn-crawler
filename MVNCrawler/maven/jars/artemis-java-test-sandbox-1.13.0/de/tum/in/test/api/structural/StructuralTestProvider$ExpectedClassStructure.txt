Compiled from "StructuralTestProvider.java"
public class de.tum.in.test.api.structural.StructuralTestProvider$ExpectedClassStructure {
  private final java.lang.String expectedClassName;

  private final java.lang.String expectedPackageName;

  private final org.json.JSONObject expectedClassJson;

  public de.tum.in.test.api.structural.StructuralTestProvider$ExpectedClassStructure(java.lang.String, java.lang.String, org.json.JSONObject);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/lang/String
      12: putfield      #5                  // Field expectedClassName:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #4                  // class java/lang/String
      23: putfield      #6                  // Field expectedPackageName:Ljava/lang/String;
      26: aload_0
      27: aload_3
      28: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #7                  // class org/json/JSONObject
      34: putfield      #8                  // Field expectedClassJson:Lorg/json/JSONObject;
      37: return

  public java.lang.String getExpectedClassName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field expectedClassName:Ljava/lang/String;
       4: areturn

  public java.lang.String getExpectedPackageName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expectedPackageName:Ljava/lang/String;
       4: areturn

  public org.json.JSONObject getExpectedClassJson();
    Code:
       0: aload_0
       1: getfield      #8                  // Field expectedClassJson:Lorg/json/JSONObject;
       4: areturn

  public java.lang.String getQualifiedClassName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expectedPackageName:Ljava/lang/String;
       4: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
       7: ifne          24
      10: aload_0
      11: getfield      #6                  // Field expectedPackageName:Ljava/lang/String;
      14: aload_0
      15: getfield      #5                  // Field expectedClassName:Ljava/lang/String;
      18: invokedynamic #10,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      23: areturn
      24: aload_0
      25: getfield      #5                  // Field expectedClassName:Ljava/lang/String;
      28: areturn

  public boolean hasProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getExpectedClassJson:()Lorg/json/JSONObject;
       4: aload_1
       5: invokevirtual #12                 // Method org/json/JSONObject.has:(Ljava/lang/String;)Z
       8: ireturn

  public org.json.JSONObject getPropertyAsJsonObject(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getExpectedClassJson:()Lorg/json/JSONObject;
       4: aload_1
       5: invokevirtual #13                 // Method org/json/JSONObject.getJSONObject:(Ljava/lang/String;)Lorg/json/JSONObject;
       8: areturn

  public org.json.JSONArray getPropertyAsJsonArray(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getExpectedClassJson:()Lorg/json/JSONObject;
       4: aload_1
       5: invokevirtual #14                 // Method org/json/JSONObject.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;
       8: areturn
}
