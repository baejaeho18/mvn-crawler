Compiled from "ProducerClientManager.java"
public class org.joyqueue.client.internal.producer.transport.ProducerClientManager extends org.joyqueue.toolkit.service.Service {
  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.transport.config.TransportConfig transportConfig;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.client.internal.transport.ClientManager clientManager;

  public org.joyqueue.client.internal.producer.transport.ProducerClientManager(org.joyqueue.client.internal.transport.config.TransportConfig, org.joyqueue.client.internal.nameserver.NameServerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      14: return

  public org.joyqueue.client.internal.producer.transport.ProducerClientGroup getClientGroup(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #5                  // Method org/joyqueue/client/internal/transport/ClientManager.getClientGroup:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/ClientGroup;
       8: astore_2
       9: aload_2
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: new           #6                  // class org/joyqueue/client/internal/producer/transport/ProducerClientGroup
      18: dup
      19: aload_2
      20: invokespecial #7                  // Method org/joyqueue/client/internal/producer/transport/ProducerClientGroup."<init>":(Lorg/joyqueue/client/internal/transport/ClientGroup;)V
      23: areturn

  public org.joyqueue.client.internal.producer.transport.ProducerClient createClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #8                  // Method org/joyqueue/client/internal/transport/ClientManager.createClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: new           #9                  // class org/joyqueue/client/internal/producer/transport/ProducerClient
      12: dup
      13: aload_2
      14: invokespecial #10                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient."<init>":(Lorg/joyqueue/client/internal/transport/Client;)V
      17: areturn

  public org.joyqueue.client.internal.producer.transport.ProducerClient getOrCreateClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #11                 // Method org/joyqueue/client/internal/transport/ClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: aload_2
      10: invokestatic  #12                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.build:(Lorg/joyqueue/client/internal/transport/Client;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      13: areturn

  public org.joyqueue.client.internal.producer.transport.ProducerClient getClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #13                 // Method org/joyqueue/client/internal/transport/ClientManager.getClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: aload_2
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_2
      16: invokestatic  #12                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.build:(Lorg/joyqueue/client/internal/transport/Client;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      19: areturn

  public org.joyqueue.client.internal.producer.transport.ProducerClient tryGetClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #14                 // Method org/joyqueue/client/internal/transport/ClientManager.tryGetClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: aload_2
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_2
      16: invokestatic  #12                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.build:(Lorg/joyqueue/client/internal/transport/Client;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      19: areturn

  public void closeClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method tryGetClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
       5: astore_2
       6: aload_2
       7: ifnonnull     11
      10: return
      11: aload_2
      12: invokevirtual #16                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.close:()V
      15: aload_0
      16: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
      19: aload_1
      20: invokevirtual #17                 // Method org/joyqueue/client/internal/transport/ClientManager.closeClient:(Lorg/joyqueue/network/domain/BrokerNode;)V
      23: return

  protected void validate() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       5: invokevirtual #18                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.copy:()Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       8: putfield      #2                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      11: aload_0
      12: new           #19                 // class org/joyqueue/client/internal/transport/ClientManager
      15: dup
      16: aload_0
      17: getfield      #2                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      20: aload_0
      21: getfield      #3                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      24: invokespecial #20                 // Method org/joyqueue/client/internal/transport/ClientManager."<init>":(Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)V
      27: putfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
      30: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: invokevirtual #21                 // Method org/joyqueue/client/internal/transport/ClientManager.start:()V
       7: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
      11: invokevirtual #22                 // Method org/joyqueue/client/internal/transport/ClientManager.stop:()V
      14: return

  static {};
    Code:
       0: ldc           #23                 // class org/joyqueue/client/internal/producer/transport/ProducerClientManager
       2: invokestatic  #24                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
