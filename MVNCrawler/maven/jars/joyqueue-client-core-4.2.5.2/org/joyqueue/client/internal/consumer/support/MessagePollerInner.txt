Compiled from "MessagePollerInner.java"
public class org.joyqueue.client.internal.consumer.support.MessagePollerInner extends org.joyqueue.toolkit.service.Service {
  public static final long FETCH_PARTITION_NONE_INDEX;

  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.consumer.config.ConsumerConfig config;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.client.internal.cluster.ClusterManager clusterManager;

  private org.joyqueue.client.internal.consumer.transport.ConsumerClientManager consumerClientManager;

  private org.joyqueue.client.internal.consumer.MessageFetcher messageFetcher;

  private org.joyqueue.client.internal.consumer.support.BrokerLoadBalanceManager brokerLoadBalanceManager;

  private java.lang.String appFullName;

  public org.joyqueue.client.internal.consumer.support.MessagePollerInner(org.joyqueue.client.internal.consumer.config.ConsumerConfig, org.joyqueue.client.internal.nameserver.NameServerConfig, org.joyqueue.client.internal.cluster.ClusterManager, org.joyqueue.client.internal.consumer.transport.ConsumerClientManager, org.joyqueue.client.internal.consumer.MessageFetcher);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
      31: return

  protected void validate() throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #7                  // class org/joyqueue/client/internal/consumer/support/BrokerLoadBalanceManager
       4: dup
       5: invokespecial #8                  // Method org/joyqueue/client/internal/consumer/support/BrokerLoadBalanceManager."<init>":()V
       8: putfield      #9                  // Field brokerLoadBalanceManager:Lorg/joyqueue/client/internal/consumer/support/BrokerLoadBalanceManager;
      11: return

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> fetchTopic(org.joyqueue.network.domain.BrokerNode, java.lang.String, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_2
       1: invokestatic  #10                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #11                 // String topic not blank
       6: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #13                 // Method getAndCheckTopicMetadata:(Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
      14: astore        8
      16: aload_0
      17: aload_1
      18: aload         8
      20: iload_3
      21: lload         4
      23: aload         6
      25: aload         7
      27: invokevirtual #14                 // Method fetchTopic:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;IJLjava/util/concurrent/TimeUnit;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)Ljava/util/List;
      30: areturn

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> fetchTopic(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.metadata.domain.TopicMetadata, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload         6
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ldc           #15                 // String timeoutUnit not null
      12: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: aload_0
      16: aload_2
      17: invokevirtual #16                 // Method buildTraceCaller:(Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;)Lorg/joyqueue/client/internal/trace/TraceCaller;
      20: astore        8
      22: aload_0
      23: aload_1
      24: aload_2
      25: iload_3
      26: lload         4
      28: aload         6
      30: aload         7
      32: invokevirtual #17                 // Method doFetchTopic:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;IJLjava/util/concurrent/TimeUnit;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)Ljava/util/List;
      35: astore        9
      37: aload         8
      39: invokeinterface #18,  1           // InterfaceMethod org/joyqueue/client/internal/trace/TraceCaller.end:()V
      44: aload         9
      46: areturn
      47: astore        9
      49: aload         8
      51: invokeinterface #20,  1           // InterfaceMethod org/joyqueue/client/internal/trace/TraceCaller.error:()V
      56: aload         9
      58: instanceof    #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      61: ifeq          70
      64: aload         9
      66: checkcast     #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      69: athrow
      70: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      73: dup
      74: aload         9
      76: invokespecial #22                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/Throwable;)V
      79: athrow
    Exception table:
       from    to  target type
          22    46    47   Class java/lang/Exception

  protected java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> doFetchTopic(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.metadata.domain.TopicMetadata, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_2
       1: invokevirtual #23                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getConsumerPolicy:()Lorg/joyqueue/domain/ConsumerPolicy;
       4: astore        8
       6: aload         6
       8: lload         4
      10: invokevirtual #24                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      13: lstore        4
      15: aload_2
      16: invokevirtual #25                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getTopic:()Ljava/lang/String;
      19: astore        9
      21: aload_0
      22: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      25: invokevirtual #26                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAppFullName:()Ljava/lang/String;
      28: astore        10
      30: aload_0
      31: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      34: invokevirtual #27                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAckTimeout:()J
      37: ldc2_w        #29                 // long -1l
      40: lcmp
      41: ifne          56
      44: aload         8
      46: invokevirtual #31                 // Method org/joyqueue/domain/ConsumerPolicy.getAckTimeout:()Ljava/lang/Integer;
      49: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
      52: i2l
      53: goto          63
      56: aload_0
      57: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      60: invokevirtual #27                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAckTimeout:()J
      63: lstore        11
      65: aload         7
      67: ifnonnull     109
      70: aload_0
      71: getfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
      74: aload_1
      75: aload         9
      77: aload         10
      79: iload_3
      80: lload         4
      82: lload         11
      84: aload_0
      85: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      88: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getLongPollTimeout:()J
      91: invokeinterface #34,  11          // InterfaceMethod org/joyqueue/client/internal/consumer/MessageFetcher.fetch:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;IJJJ)Lorg/joyqueue/client/internal/consumer/domain/FetchMessageData;
      96: astore        13
      98: aload_0
      99: aload         9
     101: aload         10
     103: aload         13
     105: invokevirtual #35                 // Method handleFetchMessageData:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/domain/FetchMessageData;)Ljava/util/List;
     108: areturn
     109: aload_0
     110: getfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
     113: aload_1
     114: aload         9
     116: aload         10
     118: iload_3
     119: lload         4
     121: lload         11
     123: aload_0
     124: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
     127: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getLongPollTimeout:()J
     130: new           #36                 // class org/joyqueue/client/internal/consumer/support/MessagePollerInner$1
     133: dup
     134: aload_0
     135: aload         9
     137: aload         10
     139: aload         7
     141: invokespecial #37                 // Method org/joyqueue/client/internal/consumer/support/MessagePollerInner$1."<init>":(Lorg/joyqueue/client/internal/consumer/support/MessagePollerInner;Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)V
     144: invokeinterface #38,  12          // InterfaceMethod org/joyqueue/client/internal/consumer/MessageFetcher.asyncFetch:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;IJJJLorg/joyqueue/client/internal/consumer/callback/FetchListener;)V
     149: aconst_null
     150: areturn

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> fetchPartition(org.joyqueue.network.domain.BrokerNode, java.lang.String, short, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ldc2_w        #29                 // long -1l
       7: iload         4
       9: lload         5
      11: aload         7
      13: aload         8
      15: invokevirtual #40                 // Method fetchPartition:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;SJIJLjava/util/concurrent/TimeUnit;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)Ljava/util/List;
      18: areturn

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> fetchPartition(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.metadata.domain.TopicMetadata, short, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ldc2_w        #29                 // long -1l
       7: iload         4
       9: lload         5
      11: aload         7
      13: aload         8
      15: invokevirtual #41                 // Method fetchPartition:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;SJIJLjava/util/concurrent/TimeUnit;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)Ljava/util/List;
      18: areturn

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> fetchPartition(org.joyqueue.network.domain.BrokerNode, java.lang.String, short, long, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_2
       1: invokestatic  #10                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #11                 // String topic not blank
       6: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #13                 // Method getAndCheckTopicMetadata:(Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
      14: astore        11
      16: aload_0
      17: aload_1
      18: aload         11
      20: iload_3
      21: lload         4
      23: iload         6
      25: lload         7
      27: aload         9
      29: aload         10
      31: invokevirtual #41                 // Method fetchPartition:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;SJIJLjava/util/concurrent/TimeUnit;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)Ljava/util/List;
      34: areturn

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> fetchPartition(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.metadata.domain.TopicMetadata, short, long, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #42                 // String topicMetadata not null
      11: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload         9
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #15                 // String timeoutUnit not null
      26: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      29: aload_0
      30: aload_2
      31: invokevirtual #16                 // Method buildTraceCaller:(Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;)Lorg/joyqueue/client/internal/trace/TraceCaller;
      34: astore        11
      36: aload_0
      37: aload_1
      38: aload_2
      39: iload_3
      40: lload         4
      42: iload         6
      44: lload         7
      46: aload         9
      48: aload         10
      50: invokevirtual #43                 // Method doFetchPartition:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;SJIJLjava/util/concurrent/TimeUnit;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)Ljava/util/List;
      53: astore        12
      55: aload         11
      57: invokeinterface #18,  1           // InterfaceMethod org/joyqueue/client/internal/trace/TraceCaller.end:()V
      62: aload         12
      64: areturn
      65: astore        12
      67: aload         11
      69: invokeinterface #20,  1           // InterfaceMethod org/joyqueue/client/internal/trace/TraceCaller.error:()V
      74: aload         12
      76: instanceof    #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      79: ifeq          88
      82: aload         12
      84: checkcast     #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      87: athrow
      88: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      91: dup
      92: aload         12
      94: invokespecial #22                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/Throwable;)V
      97: athrow
    Exception table:
       from    to  target type
          36    64    65   Class java/lang/Exception

  protected java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> doFetchPartition(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.metadata.domain.TopicMetadata, short, long, int, long, java.util.concurrent.TimeUnit, org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload         9
       2: lload         7
       4: invokevirtual #24                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       7: lstore        7
       9: aload_2
      10: invokevirtual #25                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getTopic:()Ljava/lang/String;
      13: astore        11
      15: aload_0
      16: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      19: invokevirtual #26                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAppFullName:()Ljava/lang/String;
      22: astore        12
      24: aload         10
      26: ifnonnull     94
      29: lload         4
      31: ldc2_w        #29                 // long -1l
      34: lcmp
      35: ifne          60
      38: aload_0
      39: getfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
      42: aload_1
      43: aload         11
      45: aload         12
      47: iload_3
      48: iload         6
      50: lload         7
      52: invokeinterface #44,  8           // InterfaceMethod org/joyqueue/client/internal/consumer/MessageFetcher.fetchPartition:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;SIJ)Lorg/joyqueue/client/internal/consumer/domain/FetchMessageData;
      57: goto          81
      60: aload_0
      61: getfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
      64: aload_1
      65: aload         11
      67: aload         12
      69: iload_3
      70: lload         4
      72: iload         6
      74: lload         7
      76: invokeinterface #45,  10          // InterfaceMethod org/joyqueue/client/internal/consumer/MessageFetcher.fetchPartition:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;SJIJ)Lorg/joyqueue/client/internal/consumer/domain/FetchMessageData;
      81: astore        13
      83: aload_0
      84: aload         11
      86: aload         12
      88: aload         13
      90: invokevirtual #35                 // Method handleFetchMessageData:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/domain/FetchMessageData;)Ljava/util/List;
      93: areturn
      94: new           #46                 // class org/joyqueue/client/internal/consumer/support/MessagePollerInner$2
      97: dup
      98: aload_0
      99: aload         11
     101: aload         12
     103: aload         10
     105: invokespecial #47                 // Method org/joyqueue/client/internal/consumer/support/MessagePollerInner$2."<init>":(Lorg/joyqueue/client/internal/consumer/support/MessagePollerInner;Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/callback/PollerListener;)V
     108: astore        13
     110: lload         4
     112: ldc2_w        #29                 // long -1l
     115: lcmp
     116: ifne          145
     119: aload_0
     120: getfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
     123: aload_1
     124: aload         11
     126: aload         12
     128: iload_3
     129: lload         4
     131: iload         6
     133: lload         7
     135: aload         13
     137: invokeinterface #48,  11          // InterfaceMethod org/joyqueue/client/internal/consumer/MessageFetcher.fetchPartitionAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;SJIJLorg/joyqueue/client/internal/consumer/callback/PartitionFetchListener;)V
     142: goto          166
     145: aload_0
     146: getfield      #6                  // Field messageFetcher:Lorg/joyqueue/client/internal/consumer/MessageFetcher;
     149: aload_1
     150: aload         11
     152: aload         12
     154: iload_3
     155: iload         6
     157: lload         7
     159: aload         13
     161: invokeinterface #49,  9           // InterfaceMethod org/joyqueue/client/internal/consumer/MessageFetcher.fetchPartitionAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;SIJLorg/joyqueue/client/internal/consumer/callback/PartitionFetchListener;)V
     166: aconst_null
     167: areturn

  protected java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> handleFetchMessageData(java.lang.String, java.lang.String, org.joyqueue.client.internal.consumer.domain.FetchMessageData);
    Code:
       0: aload_3
       1: ifnonnull     28
       4: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
       7: dup
       8: getstatic     #50                 // Field org/joyqueue/exception/JoyQueueCode.CN_UNKNOWN_ERROR:Lorg/joyqueue/exception/JoyQueueCode;
      11: iconst_0
      12: anewarray     #51                 // class java/lang/Object
      15: invokevirtual #52                 // Method org/joyqueue/exception/JoyQueueCode.getMessage:([Ljava/lang/Object;)Ljava/lang/String;
      18: getstatic     #50                 // Field org/joyqueue/exception/JoyQueueCode.CN_UNKNOWN_ERROR:Lorg/joyqueue/exception/JoyQueueCode;
      21: invokevirtual #53                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      24: invokespecial #54                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/String;I)V
      27: athrow
      28: aload_3
      29: invokevirtual #55                 // Method org/joyqueue/client/internal/consumer/domain/FetchMessageData.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
      32: astore        4
      34: aload         4
      36: getstatic     #56                 // Field org/joyqueue/exception/JoyQueueCode.SUCCESS:Lorg/joyqueue/exception/JoyQueueCode;
      39: invokevirtual #57                 // Method org/joyqueue/exception/JoyQueueCode.equals:(Ljava/lang/Object;)Z
      42: ifeq          50
      45: aload_3
      46: invokevirtual #58                 // Method org/joyqueue/client/internal/consumer/domain/FetchMessageData.getMessages:()Ljava/util/List;
      49: areturn
      50: getstatic     #59                 // Field org/joyqueue/client/internal/consumer/support/MessagePollerInner$3.$SwitchMap$org$joyqueue$exception$JoyQueueCode:[I
      53: aload         4
      55: invokevirtual #60                 // Method org/joyqueue/exception/JoyQueueCode.ordinal:()I
      58: iaload
      59: tableswitch   { // 1 to 10
                     1: 112
                     2: 112
                     3: 112
                     4: 136
                     5: 136
                     6: 150
                     7: 150
                     8: 150
                     9: 184
                    10: 217
               default: 241
          }
     112: getstatic     #61                 // Field logger:Lorg/slf4j/Logger;
     115: ldc           #62                 // String fetch message error, no permission, topic: {}
     117: aload_1
     118: invokeinterface #63,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     123: aload_0
     124: getfield      #4                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
     127: aload_1
     128: aload_2
     129: invokevirtual #64                 // Method org/joyqueue/client/internal/cluster/ClusterManager.updateTopicMetadata:(Ljava/lang/String;Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
     132: pop
     133: goto          276
     136: getstatic     #61                 // Field logger:Lorg/slf4j/Logger;
     139: ldc           #65                 // String fetch message error, not read or paused, topic: {}
     141: aload_1
     142: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     147: goto          276
     150: getstatic     #61                 // Field logger:Lorg/slf4j/Logger;
     153: ldc           #67                 // String fetch message index out of range, reset index, topic: {}, app: {}
     155: aload_1
     156: aload_2
     157: invokeinterface #68,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     162: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
     165: dup
     166: aload         4
     168: iconst_0
     169: anewarray     #51                 // class java/lang/Object
     172: invokevirtual #52                 // Method org/joyqueue/exception/JoyQueueCode.getMessage:([Ljava/lang/Object;)Ljava/lang/String;
     175: aload         4
     177: invokevirtual #53                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
     180: invokespecial #54                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/String;I)V
     183: athrow
     184: getstatic     #61                 // Field logger:Lorg/slf4j/Logger;
     187: ldc           #69                 // String fetch message error, topic not exist, topic: {}
     189: aload_1
     190: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     195: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
     198: dup
     199: aload         4
     201: iconst_0
     202: anewarray     #51                 // class java/lang/Object
     205: invokevirtual #52                 // Method org/joyqueue/exception/JoyQueueCode.getMessage:([Ljava/lang/Object;)Ljava/lang/String;
     208: aload         4
     210: invokevirtual #53                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
     213: invokespecial #54                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/String;I)V
     216: athrow
     217: getstatic     #61                 // Field logger:Lorg/slf4j/Logger;
     220: ldc           #70                 // String fetch message error, broker not readable, topic: {}
     222: aload_1
     223: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     228: aload_0
     229: getfield      #4                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
     232: aload_1
     233: aload_2
     234: invokevirtual #64                 // Method org/joyqueue/client/internal/cluster/ClusterManager.updateTopicMetadata:(Ljava/lang/String;Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
     237: pop
     238: goto          276
     241: getstatic     #61                 // Field logger:Lorg/slf4j/Logger;
     244: ldc           #71                 // String fetch message error, topic: {}, code: {}, error: {}
     246: iconst_3
     247: anewarray     #51                 // class java/lang/Object
     250: dup
     251: iconst_0
     252: aload_1
     253: aastore
     254: dup
     255: iconst_1
     256: aload         4
     258: aastore
     259: dup
     260: iconst_2
     261: aload         4
     263: iconst_0
     264: anewarray     #51                 // class java/lang/Object
     267: invokevirtual #52                 // Method org/joyqueue/exception/JoyQueueCode.getMessage:([Ljava/lang/Object;)Ljava/lang/String;
     270: aastore
     271: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     276: invokestatic  #73                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     279: areturn

  protected org.joyqueue.client.internal.trace.TraceCaller buildTraceCaller(org.joyqueue.client.internal.metadata.domain.TopicMetadata);
    Code:
       0: invokestatic  #74                 // Method org/joyqueue/client/internal/trace/TraceBuilder.newInstance:()Lorg/joyqueue/client/internal/trace/TraceBuilder;
       3: aload_1
       4: invokevirtual #25                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getTopic:()Ljava/lang/String;
       7: invokevirtual #75                 // Method org/joyqueue/client/internal/trace/TraceBuilder.topic:(Ljava/lang/String;)Lorg/joyqueue/client/internal/trace/TraceBuilder;
      10: aload_0
      11: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      14: invokevirtual #26                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAppFullName:()Ljava/lang/String;
      17: invokevirtual #76                 // Method org/joyqueue/client/internal/trace/TraceBuilder.app:(Ljava/lang/String;)Lorg/joyqueue/client/internal/trace/TraceBuilder;
      20: aload_0
      21: getfield      #3                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      24: invokevirtual #77                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getNamespace:()Ljava/lang/String;
      27: invokevirtual #78                 // Method org/joyqueue/client/internal/trace/TraceBuilder.namespace:(Ljava/lang/String;)Lorg/joyqueue/client/internal/trace/TraceBuilder;
      30: getstatic     #79                 // Field org/joyqueue/client/internal/trace/TraceType.CONSUMER_FETCH:Lorg/joyqueue/client/internal/trace/TraceType;
      33: invokevirtual #80                 // Method org/joyqueue/client/internal/trace/TraceBuilder.type:(Lorg/joyqueue/client/internal/trace/TraceType;)Lorg/joyqueue/client/internal/trace/TraceBuilder;
      36: invokevirtual #81                 // Method org/joyqueue/client/internal/trace/TraceBuilder.begin:()Lorg/joyqueue/client/internal/trace/TraceCaller;
      39: areturn

  public org.joyqueue.client.internal.consumer.coordinator.domain.BrokerAssignments filterRegionBrokers(org.joyqueue.client.internal.metadata.domain.TopicMetadata, org.joyqueue.client.internal.consumer.coordinator.domain.BrokerAssignments);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getConsumerPolicy:()Lorg/joyqueue/domain/ConsumerPolicy;
       4: invokevirtual #82                 // Method org/joyqueue/domain/ConsumerPolicy.getNearby:()Ljava/lang/Boolean;
       7: invokevirtual #83                 // Method java/lang/Boolean.booleanValue:()Z
      10: ifeq          23
      13: aload_2
      14: invokevirtual #84                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments.getAssignments:()Ljava/util/List;
      17: invokestatic  #85                 // Method org/apache/commons/collections/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      20: ifeq          25
      23: aload_2
      24: areturn
      25: aconst_null
      26: astore_3
      27: aload_2
      28: invokevirtual #84                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments.getAssignments:()Ljava/util/List;
      31: invokeinterface #86,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          98
      48: aload         4
      50: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #89                 // class org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignment
      58: astore        5
      60: aload         5
      62: invokevirtual #90                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignment.getBroker:()Lorg/joyqueue/network/domain/BrokerNode;
      65: invokevirtual #91                 // Method org/joyqueue/network/domain/BrokerNode.isNearby:()Z
      68: ifeq          74
      71: goto          38
      74: aload_3
      75: ifnonnull     86
      78: aload_2
      79: invokevirtual #84                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments.getAssignments:()Ljava/util/List;
      82: invokestatic  #92                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      85: astore_3
      86: aload_3
      87: aload         5
      89: invokeinterface #93,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      94: pop
      95: goto          38
      98: aload_3
      99: ifnonnull     104
     102: aload_2
     103: areturn
     104: new           #94                 // class org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments
     107: dup
     108: aload_3
     109: invokespecial #95                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments."<init>":(Ljava/util/List;)V
     112: areturn

  public org.joyqueue.client.internal.consumer.coordinator.domain.BrokerAssignments filterNotAvailableBrokers(org.joyqueue.client.internal.consumer.coordinator.domain.BrokerAssignments);
    Code:
       0: aload_1
       1: invokevirtual #84                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments.getAssignments:()Ljava/util/List;
       4: invokestatic  #85                 // Method org/apache/commons/collections/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          12
      10: aload_1
      11: areturn
      12: aconst_null
      13: astore_2
      14: aload_1
      15: invokevirtual #84                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments.getAssignments:()Ljava/util/List;
      18: invokeinterface #86,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          104
      33: aload_3
      34: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #89                 // class org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignment
      42: astore        4
      44: aload_0
      45: getfield      #5                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      48: aload         4
      50: invokevirtual #90                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignment.getBroker:()Lorg/joyqueue/network/domain/BrokerNode;
      53: invokevirtual #96                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.tryGetClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      56: astore        5
      58: aload         5
      60: ifnull        24
      63: aload         5
      65: invokevirtual #97                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.getState:()Lorg/joyqueue/client/internal/transport/ClientState;
      68: getstatic     #98                 // Field org/joyqueue/client/internal/transport/ClientState.CONNECTED:Lorg/joyqueue/client/internal/transport/ClientState;
      71: invokevirtual #99                 // Method org/joyqueue/client/internal/transport/ClientState.equals:(Ljava/lang/Object;)Z
      74: ifeq          80
      77: goto          24
      80: aload_2
      81: ifnonnull     92
      84: aload_1
      85: invokevirtual #84                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments.getAssignments:()Ljava/util/List;
      88: invokestatic  #92                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      91: astore_2
      92: aload_2
      93: aload         4
      95: invokeinterface #93,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     100: pop
     101: goto          24
     104: aload_2
     105: ifnonnull     110
     108: aload_1
     109: areturn
     110: new           #94                 // class org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments
     113: dup
     114: aload_2
     115: invokespecial #95                 // Method org/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments."<init>":(Ljava/util/List;)V
     118: areturn

  public org.joyqueue.client.internal.consumer.BrokerLoadBalance getBrokerLoadBalance(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field brokerLoadBalanceManager:Lorg/joyqueue/client/internal/consumer/support/BrokerLoadBalanceManager;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
       9: invokevirtual #100                // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getLoadBalanceType:()Ljava/lang/String;
      12: invokevirtual #101                // Method org/joyqueue/client/internal/consumer/support/BrokerLoadBalanceManager.getBrokerLoadBalance:(Ljava/lang/String;Ljava/lang/String;)Lorg/joyqueue/client/internal/consumer/BrokerLoadBalance;
      15: areturn

  public java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> buildPollEmptyResult(org.joyqueue.client.internal.consumer.callback.PollerListener);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #73                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: areturn
       8: aload_1
       9: invokestatic  #73                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: invokeinterface #102,  2          // InterfaceMethod org/joyqueue/client/internal/consumer/callback/PollerListener.onMessage:(Ljava/util/List;)V
      17: aconst_null
      18: areturn

  public org.joyqueue.client.internal.consumer.coordinator.domain.BrokerAssignments buildAllBrokerAssignments(org.joyqueue.client.internal.metadata.domain.TopicMetadata);
    Code:
       0: aload_1
       1: invokestatic  #103                // Method org/joyqueue/client/internal/consumer/converter/BrokerAssignmentConverter.convertBrokerAssignments:(Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;)Lorg/joyqueue/client/internal/consumer/coordinator/domain/BrokerAssignments;
       4: areturn

  public org.joyqueue.client.internal.metadata.domain.TopicMetadata getAndCheckTopicMetadata(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #104                // Method getTopicFullName:(Ljava/lang/String;)Ljava/lang/String;
       9: aload_0
      10: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      13: invokevirtual #26                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAppFullName:()Ljava/lang/String;
      16: invokevirtual #105                // Method org/joyqueue/client/internal/cluster/ClusterManager.fetchTopicMetadata:(Ljava/lang/String;Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
      19: astore_2
      20: aload_2
      21: ifnonnull     51
      24: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      27: dup
      28: ldc           #106                // String topic %s is not exist
      30: iconst_1
      31: anewarray     #51                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: invokestatic  #107                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: getstatic     #108                // Field org/joyqueue/exception/JoyQueueCode.FW_TOPIC_NOT_EXIST:Lorg/joyqueue/exception/JoyQueueCode;
      44: invokevirtual #53                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      47: invokespecial #54                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/String;I)V
      50: athrow
      51: aload_2
      52: invokevirtual #23                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getConsumerPolicy:()Lorg/joyqueue/domain/ConsumerPolicy;
      55: ifnonnull     95
      58: new           #21                 // class org/joyqueue/client/internal/consumer/exception/ConsumerException
      61: dup
      62: ldc           #109                // String topic %s consumer %s is not exist
      64: iconst_2
      65: anewarray     #51                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: aastore
      72: dup
      73: iconst_1
      74: aload_0
      75: getfield      #2                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      78: invokevirtual #26                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getAppFullName:()Ljava/lang/String;
      81: aastore
      82: invokestatic  #107                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      85: getstatic     #110                // Field org/joyqueue/exception/JoyQueueCode.FW_CONSUMER_NOT_EXISTS:Lorg/joyqueue/exception/JoyQueueCode;
      88: invokevirtual #53                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      91: invokespecial #54                 // Method org/joyqueue/client/internal/consumer/exception/ConsumerException."<init>":(Ljava/lang/String;I)V
      94: athrow
      95: aload_2
      96: areturn

  public java.lang.String getTopicFullName(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
       5: invokestatic  #111                // Method org/joyqueue/client/internal/nameserver/helper/NameServerHelper.getTopicFullName:(Ljava/lang/String;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: ldc           #39                 // class org/joyqueue/client/internal/consumer/support/MessagePollerInner
       2: invokestatic  #112                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #61                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
