Compiled from "DefaultTxFeedbackManager.java"
public class org.joyqueue.client.internal.producer.feedback.DefaultTxFeedbackManager extends org.joyqueue.toolkit.service.Service implements org.joyqueue.client.internal.producer.TxFeedbackManager {
  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.producer.feedback.config.TxFeedbackConfig config;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.client.internal.cluster.ClusterManager clusterManager;

  private org.joyqueue.client.internal.producer.MessageSender messageSender;

  private java.util.concurrent.ConcurrentMap<java.lang.String, org.joyqueue.client.internal.producer.feedback.TxFeedbackScheduler> txCallback;

  public org.joyqueue.client.internal.producer.feedback.DefaultTxFeedbackManager(org.joyqueue.client.internal.producer.feedback.config.TxFeedbackConfig, org.joyqueue.client.internal.nameserver.NameServerConfig, org.joyqueue.client.internal.cluster.ClusterManager, org.joyqueue.client.internal.producer.MessageSender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Maps.newConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
      11: aload_1
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #4                  // String feedback not null
      22: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      25: aload_2
      26: ifnull        33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ldc           #6                  // String nameServer not null
      36: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      39: aload_3
      40: ifnull        47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ldc           #7                  // String clusterManager not null
      50: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      53: aload         4
      55: ifnull        62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ldc           #8                  // String messageSender not null
      65: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      68: aload_1
      69: invokevirtual #9                  // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.getApp:()Ljava/lang/String;
      72: invokestatic  #10                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
      75: ldc           #11                 // String feedback.app not blank
      77: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      80: aload_1
      81: invokevirtual #12                 // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.getTimeout:()J
      84: aload_1
      85: invokevirtual #13                 // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.getLongPollTimeout:()J
      88: lcmp
      89: ifle          96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: ldc           #14                 // String feedback.pollTimeout must be greater than consumer.longPullTimeout
      99: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     102: aload_0
     103: aload_1
     104: putfield      #15                 // Field config:Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;
     107: aload_0
     108: aload_2
     109: putfield      #16                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
     112: aload_0
     113: aload_3
     114: putfield      #17                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
     117: aload_0
     118: aload         4
     120: putfield      #18                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
     123: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          64
      24: aload_1
      25: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #23                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #25                 // class org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler
      43: invokevirtual #26                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler.isStarted:()Z
      46: ifne          61
      49: aload_2
      50: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: checkcast     #25                 // class org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler
      58: invokevirtual #27                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler.start:()V
      61: goto          15
      64: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          49
      24: aload_1
      25: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #23                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #25                 // class org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler
      43: invokevirtual #28                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler.stop:()V
      46: goto          15
      49: getstatic     #29                 // Field logger:Lorg/slf4j/Logger;
      52: ldc           #30                 // String txFeedbackManager is stopped
      54: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      59: return

  public synchronized void setTransactionCallback(java.lang.String, org.joyqueue.client.internal.producer.callback.TxFeedbackCallback);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #32                 // String topic not blank
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_2
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #33                 // String callback not null
      20: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #34                 // Method checkTopicMetadata:(Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
      28: pop
      29: aload_0
      30: aload_1
      31: invokevirtual #35                 // Method getTopicFullName:(Ljava/lang/String;)Ljava/lang/String;
      34: astore_3
      35: aload_0
      36: getfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
      39: aload_3
      40: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      45: ifeq          69
      48: new           #37                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #38                 // String %s feedback is exist
      54: iconst_1
      55: anewarray     #39                 // class java/lang/Object
      58: dup
      59: iconst_0
      60: aload_1
      61: aastore
      62: invokestatic  #40                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: new           #25                 // class org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler
      72: dup
      73: aload_0
      74: getfield      #15                 // Field config:Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;
      77: aload_3
      78: aload_2
      79: aload_0
      80: getfield      #18                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      83: aload_0
      84: getfield      #17                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      87: invokespecial #42                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler."<init>":(Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/callback/TxFeedbackCallback;Lorg/joyqueue/client/internal/producer/MessageSender;Lorg/joyqueue/client/internal/cluster/ClusterManager;)V
      90: astore        4
      92: aload_0
      93: invokevirtual #43                 // Method isStarted:()Z
      96: ifeq          158
      99: aload         4
     101: invokevirtual #27                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler.start:()V
     104: goto          158
     107: astore        5
     109: getstatic     #29                 // Field logger:Lorg/slf4j/Logger;
     112: ldc           #45                 // String start feedback callback exception, topic: {}, app: {}
     114: iconst_3
     115: anewarray     #39                 // class java/lang/Object
     118: dup
     119: iconst_0
     120: aload_1
     121: aastore
     122: dup
     123: iconst_1
     124: aload_0
     125: getfield      #15                 // Field config:Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;
     128: invokevirtual #9                  // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.getApp:()Ljava/lang/String;
     131: aastore
     132: dup
     133: iconst_2
     134: aload         5
     136: aastore
     137: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     142: new           #47                 // class org/joyqueue/client/internal/producer/exception/ProducerException
     145: dup
     146: ldc           #48                 // String start feedback callback exception
     148: getstatic     #49                 // Field org/joyqueue/exception/JoyQueueCode.CN_UNKNOWN_ERROR:Lorg/joyqueue/exception/JoyQueueCode;
     151: invokevirtual #50                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
     154: invokespecial #51                 // Method org/joyqueue/client/internal/producer/exception/ProducerException."<init>":(Ljava/lang/String;I)V
     157: athrow
     158: aload_0
     159: getfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
     162: aload_1
     163: aload         4
     165: invokeinterface #52,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: return
    Exception table:
       from    to  target type
          99   104   107   Class java/lang/Exception

  public synchronized void removeTransactionCallback(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #32                 // String topic not blank
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_0
      10: aload_1
      11: invokevirtual #35                 // Method getTopicFullName:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_0
      16: getfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
      19: aload_2
      20: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #25                 // class org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler
      28: astore_3
      29: aload_3
      30: ifnonnull     54
      33: new           #37                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #54                 // String %s feedback is not exist
      39: iconst_1
      40: anewarray     #39                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_1
      46: aastore
      47: invokestatic  #40                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      50: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_3
      55: invokevirtual #26                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler.isStarted:()Z
      58: ifeq          65
      61: aload_3
      62: invokevirtual #28                 // Method org/joyqueue/client/internal/producer/feedback/TxFeedbackScheduler.stop:()V
      65: aload_0
      66: getfield      #3                  // Field txCallback:Ljava/util/concurrent/ConcurrentMap;
      69: aload_1
      70: invokeinterface #55,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: return

  protected org.joyqueue.client.internal.metadata.domain.TopicMetadata checkTopicMetadata(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
       4: aload_0
       5: aload_1
       6: invokevirtual #35                 // Method getTopicFullName:(Ljava/lang/String;)Ljava/lang/String;
       9: aload_0
      10: getfield      #15                 // Field config:Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;
      13: invokevirtual #9                  // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.getApp:()Ljava/lang/String;
      16: invokevirtual #56                 // Method org/joyqueue/client/internal/cluster/ClusterManager.fetchTopicMetadata:(Ljava/lang/String;Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
      19: astore_2
      20: aload_2
      21: ifnonnull     51
      24: new           #47                 // class org/joyqueue/client/internal/producer/exception/ProducerException
      27: dup
      28: ldc           #57                 // String topic %s is not exist
      30: iconst_1
      31: anewarray     #39                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: invokestatic  #40                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: getstatic     #58                 // Field org/joyqueue/exception/JoyQueueCode.FW_TOPIC_NOT_EXIST:Lorg/joyqueue/exception/JoyQueueCode;
      44: invokevirtual #50                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      47: invokespecial #51                 // Method org/joyqueue/client/internal/producer/exception/ProducerException."<init>":(Ljava/lang/String;I)V
      50: athrow
      51: aload_2
      52: invokevirtual #59                 // Method org/joyqueue/client/internal/metadata/domain/TopicMetadata.getProducerPolicy:()Lorg/joyqueue/domain/ProducerPolicy;
      55: ifnonnull     95
      58: new           #47                 // class org/joyqueue/client/internal/producer/exception/ProducerException
      61: dup
      62: ldc           #60                 // String topic %s producer %s is not exist
      64: iconst_2
      65: anewarray     #39                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: aastore
      72: dup
      73: iconst_1
      74: aload_0
      75: getfield      #15                 // Field config:Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;
      78: invokevirtual #9                  // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.getApp:()Ljava/lang/String;
      81: aastore
      82: invokestatic  #40                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      85: getstatic     #61                 // Field org/joyqueue/exception/JoyQueueCode.FW_PRODUCER_NOT_EXISTS:Lorg/joyqueue/exception/JoyQueueCode;
      88: invokevirtual #50                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      91: invokespecial #51                 // Method org/joyqueue/client/internal/producer/exception/ProducerException."<init>":(Ljava/lang/String;I)V
      94: athrow
      95: aload_2
      96: areturn

  protected java.lang.String getTopicFullName(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #16                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
       5: invokestatic  #62                 // Method org/joyqueue/client/internal/nameserver/helper/NameServerHelper.getTopicFullName:(Ljava/lang/String;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)Ljava/lang/String;
       8: areturn

  protected void checkState();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method isStarted:()Z
       4: ifne          17
       7: new           #63                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #64                 // String txFeedbackManager is not started
      13: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  static {};
    Code:
       0: ldc           #66                 // class org/joyqueue/client/internal/producer/feedback/DefaultTxFeedbackManager
       2: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #29                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
