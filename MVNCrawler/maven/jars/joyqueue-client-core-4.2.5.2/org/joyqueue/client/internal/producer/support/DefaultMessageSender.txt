Compiled from "DefaultMessageSender.java"
public class org.joyqueue.client.internal.producer.support.DefaultMessageSender extends org.joyqueue.toolkit.service.Service implements org.joyqueue.client.internal.producer.MessageSender {
  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.producer.transport.ProducerClientManager producerClientManager;

  private org.joyqueue.client.internal.producer.config.SenderConfig config;

  private org.joyqueue.client.internal.transport.ConnectionState connectionState;

  public org.joyqueue.client.internal.producer.support.DefaultMessageSender(org.joyqueue.client.internal.producer.transport.ProducerClientManager, org.joyqueue.client.internal.producer.config.SenderConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: new           #2                  // class org/joyqueue/client/internal/transport/ConnectionState
       8: dup
       9: invokespecial #3                  // Method org/joyqueue/client/internal/transport/ConnectionState."<init>":()V
      12: putfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      15: aload_1
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #5                  // String producerClientManager not null
      26: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      29: aload_0
      30: aload_1
      31: putfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      34: aload_0
      35: aload_2
      36: putfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      39: return

  public org.joyqueue.client.internal.producer.domain.SendResultData send(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: iconst_1
       1: anewarray     #9                  // class org/joyqueue/client/internal/producer/domain/ProduceMessage
       4: dup
       5: iconst_0
       6: aload         5
       8: aastore
       9: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      12: astore        11
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: aload         11
      22: aload         6
      24: lload         7
      26: lload         9
      28: invokevirtual #11                 // Method batchSend:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJ)Lorg/joyqueue/client/internal/producer/domain/SendBatchResultData;
      31: astore        12
      33: new           #12                 // class org/joyqueue/client/internal/producer/domain/SendResultData
      36: dup
      37: invokespecial #13                 // Method org/joyqueue/client/internal/producer/domain/SendResultData."<init>":()V
      40: astore        13
      42: aload         13
      44: aload         12
      46: invokevirtual #14                 // Method org/joyqueue/client/internal/producer/domain/SendBatchResultData.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
      49: invokevirtual #15                 // Method org/joyqueue/client/internal/producer/domain/SendResultData.setCode:(Lorg/joyqueue/exception/JoyQueueCode;)V
      52: aload         12
      54: invokevirtual #16                 // Method org/joyqueue/client/internal/producer/domain/SendBatchResultData.getResult:()Ljava/util/List;
      57: invokestatic  #17                 // Method org/apache/commons/collections/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      60: ifeq          82
      63: aload         13
      65: aload         12
      67: invokevirtual #16                 // Method org/joyqueue/client/internal/producer/domain/SendBatchResultData.getResult:()Ljava/util/List;
      70: iconst_0
      71: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      76: checkcast     #19                 // class org/joyqueue/client/internal/producer/domain/SendResult
      79: invokevirtual #20                 // Method org/joyqueue/client/internal/producer/domain/SendResultData.setResult:(Lorg/joyqueue/client/internal/producer/domain/SendResult;)V
      82: aload         13
      84: areturn

  public org.joyqueue.client.internal.producer.domain.SendBatchResultData batchSend(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: iconst_1
       1: invokestatic  #21                 // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
       4: astore        11
       6: aload         11
       8: aload_2
       9: aload         5
      11: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: aload         11
      24: aload         6
      26: lload         7
      28: lload         9
      30: invokevirtual #23                 // Method batchSend:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJ)Ljava/util/Map;
      33: astore        12
      35: aload         12
      37: aload_2
      38: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #25                 // class org/joyqueue/client/internal/producer/domain/SendBatchResultData
      46: areturn

  public void sendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncSendCallback);
    Code:
       0: iconst_1
       1: anewarray     #9                  // class org/joyqueue/client/internal/producer/domain/ProduceMessage
       4: dup
       5: iconst_0
       6: aload         5
       8: aastore
       9: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      12: astore        12
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: aload         12
      22: aload         6
      24: lload         7
      26: lload         9
      28: new           #26                 // class org/joyqueue/client/internal/producer/support/DefaultMessageSender$1
      31: dup
      32: aload_0
      33: aload         11
      35: aload         5
      37: invokespecial #27                 // Method org/joyqueue/client/internal/producer/support/DefaultMessageSender$1."<init>":(Lorg/joyqueue/client/internal/producer/support/DefaultMessageSender;Lorg/joyqueue/client/internal/producer/callback/AsyncSendCallback;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;)V
      40: invokevirtual #28                 // Method batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncBatchSendCallback;)V
      43: return

  public void batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncBatchSendCallback);
    Code:
       0: iconst_1
       1: invokestatic  #21                 // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
       4: astore        12
       6: aload         12
       8: aload_2
       9: aload         5
      11: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: aload         12
      24: aload         6
      26: lload         7
      28: lload         9
      30: new           #29                 // class org/joyqueue/client/internal/producer/support/DefaultMessageSender$2
      33: dup
      34: aload_0
      35: aload_2
      36: aload         11
      38: invokespecial #30                 // Method org/joyqueue/client/internal/producer/support/DefaultMessageSender$2."<init>":(Lorg/joyqueue/client/internal/producer/support/DefaultMessageSender;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/callback/AsyncBatchSendCallback;)V
      41: invokevirtual #31                 // Method batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncMultiBatchSendCallback;)V
      44: return

  public java.util.concurrent.CompletableFuture<org.joyqueue.client.internal.producer.domain.SendBatchResultData> batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: new           #32                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #33                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore        11
       9: iconst_1
      10: invokestatic  #21                 // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
      13: astore        12
      15: aload         12
      17: aload_2
      18: aload         5
      20: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: aload_1
      28: aload_3
      29: aload         4
      31: aload         12
      33: aload         6
      35: lload         7
      37: lload         9
      39: new           #34                 // class org/joyqueue/client/internal/producer/support/DefaultMessageSender$3
      42: dup
      43: aload_0
      44: aload_2
      45: aload         11
      47: invokespecial #35                 // Method org/joyqueue/client/internal/producer/support/DefaultMessageSender$3."<init>":(Lorg/joyqueue/client/internal/producer/support/DefaultMessageSender;Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V
      50: invokevirtual #31                 // Method batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncMultiBatchSendCallback;)V
      53: aload         11
      55: areturn

  public void sendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: iconst_1
       1: anewarray     #9                  // class org/joyqueue/client/internal/producer/domain/ProduceMessage
       4: dup
       5: iconst_0
       6: aload         5
       8: aastore
       9: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      12: astore        11
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: aload         11
      22: aload         6
      24: lload         7
      26: lload         9
      28: invokevirtual #36                 // Method batchSendOneway:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJ)V
      31: return

  public void batchSendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: iconst_1
       1: invokestatic  #21                 // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
       4: astore        11
       6: aload         11
       8: aload_2
       9: aload         5
      11: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_1
      19: aload_3
      20: aload         4
      22: aload         11
      24: aload         6
      26: lload         7
      28: lload         9
      30: invokevirtual #37                 // Method batchSendOneway:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJ)V
      33: return

  public void batchSendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: invokestatic  #39                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       7: astore        10
       9: aload         4
      11: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        11
      23: aload         11
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          123
      33: aload         11
      35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #44                 // class java/util/Map$Entry
      43: astore        12
      45: aload         12
      47: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #46                 // class java/lang/String
      55: astore        13
      57: aload         13
      59: aload_2
      60: aload_3
      61: aload         12
      63: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #48                 // class java/util/List
      71: aload         5
      73: lload         6
      75: aload_0
      76: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      79: invokevirtual #49                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.isCompress:()Z
      82: aload_0
      83: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      86: invokevirtual #50                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.getCompressThreshold:()I
      89: aload_0
      90: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      93: invokevirtual #51                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.getCompressType:()Ljava/lang/String;
      96: aload_0
      97: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
     100: invokevirtual #52                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.isBatch:()Z
     103: invokestatic  #53                 // Method org/joyqueue/client/internal/producer/converter/MessageSenderConverter.convertToProduceMessageData:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JZILjava/lang/String;Z)Lorg/joyqueue/network/command/ProduceMessageData;
     106: astore        14
     108: aload         10
     110: aload         13
     112: aload         14
     114: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: goto          23
     123: aload_0
     124: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
     127: aload_1
     128: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
     131: astore        11
     133: aload_0
     134: aload_1
     135: aload         4
     137: invokeinterface #55,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     142: aload_2
     143: aload         11
     145: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
     148: aload         11
     150: aload_2
     151: aload         10
     153: lload         8
     155: invokevirtual #57                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.produceMessageOneway:(Ljava/lang/String;Ljava/util/Map;J)V
     158: return

  public java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.domain.SendBatchResultData> batchSend(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: invokestatic  #39                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       7: astore        10
       9: aload         4
      11: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        11
      23: aload         11
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          123
      33: aload         11
      35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #44                 // class java/util/Map$Entry
      43: astore        12
      45: aload         12
      47: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #46                 // class java/lang/String
      55: astore        13
      57: aload         13
      59: aload_2
      60: aload_3
      61: aload         12
      63: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #48                 // class java/util/List
      71: aload         5
      73: lload         6
      75: aload_0
      76: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      79: invokevirtual #49                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.isCompress:()Z
      82: aload_0
      83: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      86: invokevirtual #50                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.getCompressThreshold:()I
      89: aload_0
      90: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      93: invokevirtual #51                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.getCompressType:()Ljava/lang/String;
      96: aload_0
      97: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
     100: invokevirtual #52                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.isBatch:()Z
     103: invokestatic  #53                 // Method org/joyqueue/client/internal/producer/converter/MessageSenderConverter.convertToProduceMessageData:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JZILjava/lang/String;Z)Lorg/joyqueue/network/command/ProduceMessageData;
     106: astore        14
     108: aload         10
     110: aload         13
     112: aload         14
     114: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: goto          23
     123: aload_0
     124: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
     127: aload_1
     128: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
     131: astore        11
     133: aload_0
     134: aload_1
     135: aload         4
     137: invokeinterface #55,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     142: aload_2
     143: aload         11
     145: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
     148: aload         11
     150: aload_2
     151: aload         10
     153: lload         8
     155: invokevirtual #58                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.produceMessage:(Ljava/lang/String;Ljava/util/Map;J)Lorg/joyqueue/network/command/ProduceMessageResponse;
     158: astore        12
     160: invokestatic  #39                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
     163: astore        13
     165: aload         12
     167: invokevirtual #59                 // Method org/joyqueue/network/command/ProduceMessageResponse.getData:()Ljava/util/Map;
     170: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     175: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     180: astore        14
     182: aload         14
     184: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     189: ifeq          246
     192: aload         14
     194: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     199: checkcast     #44                 // class java/util/Map$Entry
     202: astore        15
     204: aload         13
     206: aload         15
     208: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     213: aload         15
     215: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     220: checkcast     #46                 // class java/lang/String
     223: aload_2
     224: aload         15
     226: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     231: checkcast     #60                 // class org/joyqueue/network/command/ProduceMessageAckData
     234: invokestatic  #61                 // Method org/joyqueue/client/internal/producer/converter/MessageSenderConverter.convertToBatchResultData:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/network/command/ProduceMessageAckData;)Lorg/joyqueue/client/internal/producer/domain/SendBatchResultData;
     237: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     242: pop
     243: goto          182
     246: aload         13
     248: areturn

  public void batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncMultiBatchSendCallback);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: invokestatic  #39                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       7: astore        11
       9: aload         4
      11: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        12
      23: aload         12
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          123
      33: aload         12
      35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #44                 // class java/util/Map$Entry
      43: astore        13
      45: aload         13
      47: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #46                 // class java/lang/String
      55: astore        14
      57: aload         14
      59: aload_2
      60: aload_3
      61: aload         13
      63: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #48                 // class java/util/List
      71: aload         5
      73: lload         6
      75: aload_0
      76: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      79: invokevirtual #49                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.isCompress:()Z
      82: aload_0
      83: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      86: invokevirtual #50                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.getCompressThreshold:()I
      89: aload_0
      90: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      93: invokevirtual #51                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.getCompressType:()Ljava/lang/String;
      96: aload_0
      97: getfield      #8                  // Field config:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
     100: invokevirtual #52                 // Method org/joyqueue/client/internal/producer/config/SenderConfig.isBatch:()Z
     103: invokestatic  #53                 // Method org/joyqueue/client/internal/producer/converter/MessageSenderConverter.convertToProduceMessageData:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JZILjava/lang/String;Z)Lorg/joyqueue/network/command/ProduceMessageData;
     106: astore        15
     108: aload         11
     110: aload         14
     112: aload         15
     114: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: goto          23
     123: aload_0
     124: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
     127: aload_1
     128: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
     131: astore        12
     133: aload_0
     134: aload_1
     135: aload         4
     137: invokeinterface #55,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     142: aload_2
     143: aload         12
     145: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
     148: aload         12
     150: aload_2
     151: aload         11
     153: lload         8
     155: new           #62                 // class org/joyqueue/client/internal/producer/support/DefaultMessageSender$4
     158: dup
     159: aload_0
     160: aload_2
     161: aload         10
     163: aload         4
     165: invokespecial #63                 // Method org/joyqueue/client/internal/producer/support/DefaultMessageSender$4."<init>":(Lorg/joyqueue/client/internal/producer/support/DefaultMessageSender;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/callback/AsyncMultiBatchSendCallback;Ljava/util/Map;)V
     168: invokevirtual #64                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.asyncProduceMessage:(Ljava/lang/String;Ljava/util/Map;JLorg/joyqueue/network/transport/command/CommandCallback;)V
     171: goto          187
     174: astore        13
     176: aload         10
     178: aload         4
     180: aload         13
     182: invokeinterface #66,  3           // InterfaceMethod org/joyqueue/client/internal/producer/callback/AsyncMultiBatchSendCallback.onException:(Ljava/util/Map;Ljava/lang/Throwable;)V
     187: return
    Exception table:
       from    to  target type
         148   171   174   Class org/joyqueue/client/internal/exception/ClientException

  public java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.domain.SendBatchResultData>> batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: new           #32                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #33                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore        10
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: aload         4
      15: aload         5
      17: lload         6
      19: lload         8
      21: new           #67                 // class org/joyqueue/client/internal/producer/support/DefaultMessageSender$5
      24: dup
      25: aload_0
      26: aload         10
      28: invokespecial #68                 // Method org/joyqueue/client/internal/producer/support/DefaultMessageSender$5."<init>":(Lorg/joyqueue/client/internal/producer/support/DefaultMessageSender;Ljava/util/concurrent/CompletableFuture;)V
      31: invokevirtual #31                 // Method batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncMultiBatchSendCallback;)V
      34: aload         10
      36: areturn

  public org.joyqueue.client.internal.producer.domain.SendPrepareResult prepare(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long, long, long);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       8: aload_1
       9: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      12: astore        11
      14: aload_0
      15: aload_1
      16: iconst_1
      17: anewarray     #46                 // class java/lang/String
      20: dup
      21: iconst_0
      22: aload_2
      23: aastore
      24: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      27: aload_3
      28: aload         11
      30: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
      33: aload         11
      35: aload_2
      36: aload_3
      37: lload         5
      39: aload         4
      41: lload         7
      43: lload         9
      45: invokevirtual #69                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.produceMessagePrepare:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;JJ)Lorg/joyqueue/network/command/ProduceMessagePrepareResponse;
      48: astore        12
      50: new           #70                 // class org/joyqueue/client/internal/producer/domain/SendPrepareResult
      53: dup
      54: aload         12
      56: invokevirtual #71                 // Method org/joyqueue/network/command/ProduceMessagePrepareResponse.getTxId:()Ljava/lang/String;
      59: aload         12
      61: invokevirtual #72                 // Method org/joyqueue/network/command/ProduceMessagePrepareResponse.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
      64: invokespecial #73                 // Method org/joyqueue/client/internal/producer/domain/SendPrepareResult."<init>":(Ljava/lang/String;Lorg/joyqueue/exception/JoyQueueCode;)V
      67: areturn

  public org.joyqueue.exception.JoyQueueCode commit(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       8: aload_1
       9: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      12: astore        7
      14: aload_0
      15: aload_1
      16: iconst_1
      17: anewarray     #46                 // class java/lang/String
      20: dup
      21: iconst_0
      22: aload_2
      23: aastore
      24: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      27: aload_3
      28: aload         7
      30: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
      33: aload         7
      35: aload_2
      36: aload_3
      37: aload         4
      39: lload         5
      41: invokevirtual #74                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.produceMessageCommit:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/joyqueue/network/command/ProduceMessageCommitResponse;
      44: astore        8
      46: aload         8
      48: invokevirtual #75                 // Method org/joyqueue/network/command/ProduceMessageCommitResponse.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
      51: areturn

  public org.joyqueue.exception.JoyQueueCode rollback(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       8: aload_1
       9: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      12: astore        7
      14: aload_0
      15: aload_1
      16: iconst_1
      17: anewarray     #46                 // class java/lang/String
      20: dup
      21: iconst_0
      22: aload_2
      23: aastore
      24: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      27: aload_3
      28: aload         7
      30: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
      33: aload         7
      35: aload_2
      36: aload_3
      37: aload         4
      39: lload         5
      41: invokevirtual #76                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.produceMessageRollback:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/joyqueue/network/command/ProduceMessageRollbackResponse;
      44: astore        8
      46: aload         8
      48: invokevirtual #77                 // Method org/joyqueue/network/command/ProduceMessageRollbackResponse.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
      51: areturn

  public org.joyqueue.client.internal.producer.domain.FetchFeedbackData fetchFeedback(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, org.joyqueue.network.command.TxStatus, int, long, long);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       8: aload_1
       9: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClient;
      12: astore        10
      14: aload_0
      15: aload_1
      16: iconst_1
      17: anewarray     #46                 // class java/lang/String
      20: dup
      21: iconst_0
      22: aload_2
      23: aastore
      24: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      27: aload_3
      28: aload         10
      30: invokevirtual #56                 // Method handleAddProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/transport/ProducerClient;)V
      33: aload         10
      35: aload_2
      36: aload_3
      37: aload         4
      39: iload         5
      41: lload         6
      43: lload         8
      45: invokevirtual #78                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.fetchFeedback:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/network/command/TxStatus;IJJ)Lorg/joyqueue/network/command/FetchProduceFeedbackResponse;
      48: astore        11
      50: aload_2
      51: aload_3
      52: aload         11
      54: invokestatic  #79                 // Method org/joyqueue/client/internal/producer/converter/MessageSenderConverter.convertToFetchFeedbackData:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/network/command/FetchProduceFeedbackResponse;)Lorg/joyqueue/client/internal/producer/domain/FetchFeedbackData;
      57: areturn

  protected void checkState();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method isStarted:()Z
       4: ifne          23
       7: new           #65                 // class org/joyqueue/client/internal/exception/ClientException
      10: dup
      11: ldc           #81                 // String sender is not started
      13: getstatic     #82                 // Field org/joyqueue/exception/JoyQueueCode.CN_SERVICE_NOT_AVAILABLE:Lorg/joyqueue/exception/JoyQueueCode;
      16: invokevirtual #83                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      19: invokespecial #84                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/String;I)V
      22: athrow
      23: return

  protected void handleAddProducers(org.joyqueue.network.domain.BrokerNode, java.util.Collection<java.lang.String>, java.lang.String, org.joyqueue.client.internal.producer.transport.ProducerClient);
    Code:
       0: aload         4
       2: aload_2
       3: aload_3
       4: invokevirtual #85                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.addProducers:(Ljava/util/Collection;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      11: aload_1
      12: invokevirtual #86                 // Method org/joyqueue/client/internal/transport/ConnectionState.addBrokerNode:(Lorg/joyqueue/network/domain/BrokerNode;)Z
      15: pop
      16: aload_0
      17: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      20: aload_2
      21: invokevirtual #87                 // Method org/joyqueue/client/internal/transport/ConnectionState.addTopics:(Ljava/util/Collection;)Z
      24: pop
      25: aload_0
      26: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      29: aload_3
      30: invokevirtual #88                 // Method org/joyqueue/client/internal/transport/ConnectionState.addApp:(Ljava/lang/String;)Z
      33: pop
      34: return

  protected void doStop();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method handleRemoveProducers:()V
       4: return

  protected void handleRemoveProducers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
       4: invokevirtual #90                 // Method org/joyqueue/client/internal/transport/ConnectionState.getBrokerNodes:()Ljava/util/Set;
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      12: invokevirtual #91                 // Method org/joyqueue/client/internal/transport/ConnectionState.getTopics:()Ljava/util/Set;
      15: astore_2
      16: aload_0
      17: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      20: invokevirtual #92                 // Method org/joyqueue/client/internal/transport/ConnectionState.getApps:()Ljava/util/Set;
      23: astore_3
      24: aload_1
      25: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          65
      42: aload         4
      44: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #93                 // class org/joyqueue/network/domain/BrokerNode
      52: astore        5
      54: aload_0
      55: aload         5
      57: aload_2
      58: aload_3
      59: invokevirtual #94                 // Method handleRemoveProducers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Set;Ljava/util/Set;)V
      62: goto          32
      65: return

  protected void handleRemoveProducers(org.joyqueue.network.domain.BrokerNode, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       4: aload_1
       5: invokevirtual #95                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.getClientGroup:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/producer/transport/ProducerClientGroup;
       8: astore        4
      10: aload         4
      12: ifnonnull     16
      15: return
      16: aload_3
      17: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          158
      34: aload         5
      36: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #46                 // class java/lang/String
      44: astore        6
      46: aload         4
      48: invokevirtual #96                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientGroup.getClients:()Ljava/util/List;
      51: invokeinterface #97,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        7
      58: aload         7
      60: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          155
      68: aload         7
      70: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #98                 // class org/joyqueue/client/internal/producer/transport/ProducerClient
      78: astore        8
      80: aload         8
      82: aload_2
      83: aload         6
      85: invokevirtual #99                 // Method org/joyqueue/client/internal/producer/transport/ProducerClient.removeProducers:(Ljava/util/Collection;Ljava/lang/String;)V
      88: goto          152
      91: astore        9
      93: getstatic     #101                // Field logger:Lorg/slf4j/Logger;
      96: ldc           #102                // String remove producers exception, topics: {}, app: {}, exception: {}
      98: iconst_3
      99: anewarray     #103                // class java/lang/Object
     102: dup
     103: iconst_0
     104: aload_2
     105: aastore
     106: dup
     107: iconst_1
     108: aload         6
     110: aastore
     111: dup
     112: iconst_2
     113: aload         9
     115: invokevirtual #104                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     118: aastore
     119: invokeinterface #105,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     124: getstatic     #101                // Field logger:Lorg/slf4j/Logger;
     127: ldc           #106                // String remove producers exception, topics: {}, app: {}
     129: iconst_3
     130: anewarray     #103                // class java/lang/Object
     133: dup
     134: iconst_0
     135: aload_2
     136: aastore
     137: dup
     138: iconst_1
     139: aload         6
     141: aastore
     142: dup
     143: iconst_2
     144: aload         9
     146: aastore
     147: invokeinterface #107,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     152: goto          58
     155: goto          24
     158: return
    Exception table:
       from    to  target type
          80    88    91   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #108                // class org/joyqueue/client/internal/producer/support/DefaultMessageSender
       2: invokestatic  #109                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #101                // Field logger:Lorg/slf4j/Logger;
       8: return
}
