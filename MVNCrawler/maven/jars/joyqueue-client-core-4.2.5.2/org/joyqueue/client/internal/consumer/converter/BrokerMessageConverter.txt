Compiled from "BrokerMessageConverter.java"
public class org.joyqueue.client.internal.consumer.converter.BrokerMessageConverter {
  private static org.joyqueue.client.internal.consumer.converter.MessageConvertSupport messageConvertSupport;

  public org.joyqueue.client.internal.consumer.converter.BrokerMessageConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.common.collect.Table<java.lang.String, java.lang.Short, org.joyqueue.client.internal.consumer.domain.FetchMessageData> convert(java.lang.String, com.google.common.collect.Table<java.lang.String, java.lang.Short, org.joyqueue.network.command.FetchPartitionMessageAckData>);
    Code:
       0: invokestatic  #2                  // Method com/google/common/collect/HashBasedTable.create:()Lcom/google/common/collect/HashBasedTable;
       3: astore_2
       4: aload_1
       5: ifnull        17
       8: aload_1
       9: invokeinterface #3,  1            // InterfaceMethod com/google/common/collect/Table.isEmpty:()Z
      14: ifeq          19
      17: aload_2
      18: areturn
      19: aload_1
      20: invokeinterface #4,  1            // InterfaceMethod com/google/common/collect/Table.rowMap:()Ljava/util/Map;
      25: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      30: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          177
      45: aload_3
      46: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #9                  // class java/util/Map$Entry
      54: astore        4
      56: aload         4
      58: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #11                 // class java/lang/String
      66: astore        5
      68: aload         4
      70: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #13                 // class java/util/Map
      78: astore        6
      80: aload         6
      82: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      87: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      92: astore        7
      94: aload         7
      96: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          174
     104: aload         7
     106: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #9                  // class java/util/Map$Entry
     114: astore        8
     116: aload_2
     117: aload         5
     119: aload         8
     121: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     126: new           #14                 // class org/joyqueue/client/internal/consumer/domain/FetchMessageData
     129: dup
     130: aload         5
     132: aload_0
     133: aload         8
     135: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     140: checkcast     #15                 // class org/joyqueue/network/command/FetchPartitionMessageAckData
     143: invokevirtual #16                 // Method org/joyqueue/network/command/FetchPartitionMessageAckData.getMessages:()Ljava/util/List;
     146: invokestatic  #17                 // Method convert:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
     149: aload         8
     151: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     156: checkcast     #15                 // class org/joyqueue/network/command/FetchPartitionMessageAckData
     159: invokevirtual #18                 // Method org/joyqueue/network/command/FetchPartitionMessageAckData.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
     162: invokespecial #19                 // Method org/joyqueue/client/internal/consumer/domain/FetchMessageData."<init>":(Ljava/util/List;Lorg/joyqueue/exception/JoyQueueCode;)V
     165: invokeinterface #20,  4           // InterfaceMethod com/google/common/collect/Table.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: goto          94
     174: goto          36
     177: aload_2
     178: areturn

  public static java.util.Map<java.lang.String, org.joyqueue.client.internal.consumer.domain.FetchMessageData> convert(java.lang.String, java.util.Map<java.lang.String, org.joyqueue.network.command.FetchTopicMessageAckData>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method org/apache/commons/collections/MapUtils.isEmpty:(Ljava/util/Map;)Z
       4: ifeq          11
       7: invokestatic  #22                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: areturn
      11: invokestatic  #23                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
      14: astore_2
      15: aload_1
      16: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          110
      36: aload_3
      37: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #9                  // class java/util/Map$Entry
      45: astore        4
      47: aload         4
      49: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: checkcast     #11                 // class java/lang/String
      57: astore        5
      59: aload         4
      61: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: checkcast     #24                 // class org/joyqueue/network/command/FetchTopicMessageAckData
      69: astore        6
      71: new           #14                 // class org/joyqueue/client/internal/consumer/domain/FetchMessageData
      74: dup
      75: aload         5
      77: aload_0
      78: aload         6
      80: invokevirtual #25                 // Method org/joyqueue/network/command/FetchTopicMessageAckData.getMessages:()Ljava/util/List;
      83: invokestatic  #17                 // Method convert:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      86: aload         6
      88: invokevirtual #26                 // Method org/joyqueue/network/command/FetchTopicMessageAckData.getCode:()Lorg/joyqueue/exception/JoyQueueCode;
      91: invokespecial #19                 // Method org/joyqueue/client/internal/consumer/domain/FetchMessageData."<init>":(Ljava/util/List;Lorg/joyqueue/exception/JoyQueueCode;)V
      94: astore        7
      96: aload_2
      97: aload         5
      99: aload         7
     101: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          27
     110: aload_2
     111: areturn

  public static java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> convert(java.lang.String, java.lang.String, java.util.List<org.joyqueue.message.BrokerMessage>);
    Code:
       0: aload_2
       1: invokestatic  #28                 // Method org/apache/commons/collections/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       4: ifeq          11
       7: invokestatic  #29                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: invokestatic  #30                 // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      14: astore_3
      15: aload_2
      16: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          154
      33: aload         4
      35: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #32                 // class org/joyqueue/message/BrokerMessage
      43: astore        5
      45: aload         5
      47: invokevirtual #33                 // Method org/joyqueue/message/BrokerMessage.isBatch:()Z
      50: ifeq          118
      53: aload_0
      54: aload_1
      55: aload         5
      57: invokestatic  #34                 // Method convertBatch:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/message/BrokerMessage;)Ljava/util/List;
      60: astore        6
      62: aload         6
      64: ifnull        115
      67: aload         6
      69: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      74: astore        7
      76: aload         7
      78: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          115
      86: aload         7
      88: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #32                 // class org/joyqueue/message/BrokerMessage
      96: astore        8
      98: aload_3
      99: aload_0
     100: aload_1
     101: aload         8
     103: invokestatic  #35                 // Method convert:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/message/BrokerMessage;)Lorg/joyqueue/client/internal/consumer/domain/ConsumeMessage;
     106: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: goto          76
     115: goto          151
     118: getstatic     #37                 // Field messageConvertSupport:Lorg/joyqueue/client/internal/consumer/converter/MessageConvertSupport;
     121: aload         5
     123: invokevirtual #38                 // Method org/joyqueue/client/internal/consumer/converter/MessageConvertSupport.convert:(Lorg/joyqueue/message/BrokerMessage;)Lorg/joyqueue/message/BrokerMessage;
     126: astore        6
     128: aload         6
     130: ifnonnull     137
     133: aload         5
     135: astore        6
     137: aload_3
     138: aload_0
     139: aload_1
     140: aload         6
     142: invokestatic  #35                 // Method convert:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/message/BrokerMessage;)Lorg/joyqueue/client/internal/consumer/domain/ConsumeMessage;
     145: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     150: pop
     151: goto          23
     154: aload_3
     155: areturn

  public static java.util.List<org.joyqueue.message.BrokerMessage> convertBatch(java.lang.String, java.lang.String, org.joyqueue.message.BrokerMessage);
    Code:
       0: aload_2
       1: invokevirtual #39                 // Method org/joyqueue/message/BrokerMessage.getSource:()B
       4: getstatic     #40                 // Field org/joyqueue/message/SourceType.JOYQUEUE:Lorg/joyqueue/message/SourceType;
       7: invokevirtual #41                 // Method org/joyqueue/message/SourceType.getValue:()B
      10: if_icmpeq     21
      13: getstatic     #37                 // Field messageConvertSupport:Lorg/joyqueue/client/internal/consumer/converter/MessageConvertSupport;
      16: aload_2
      17: invokevirtual #42                 // Method org/joyqueue/client/internal/consumer/converter/MessageConvertSupport.convertBatch:(Lorg/joyqueue/message/BrokerMessage;)Ljava/util/List;
      20: areturn
      21: aload_2
      22: invokevirtual #43                 // Method org/joyqueue/message/BrokerMessage.getDecompressedBody:()[B
      25: astore_3
      26: aload_2
      27: aload_3
      28: invokevirtual #44                 // Method org/joyqueue/message/BrokerMessage.setBody:([B)V
      31: aload_2
      32: invokestatic  #45                 // Method org/joyqueue/network/serializer/BatchMessageSerializer.deserialize:(Lorg/joyqueue/message/BrokerMessage;)Ljava/util/List;
      35: areturn

  public static org.joyqueue.client.internal.consumer.domain.ConsumeMessage convert(java.lang.String, java.lang.String, org.joyqueue.message.BrokerMessage);
    Code:
       0: aload_2
       1: invokevirtual #43                 // Method org/joyqueue/message/BrokerMessage.getDecompressedBody:()[B
       4: astore_3
       5: new           #46                 // class org/joyqueue/client/internal/consumer/domain/ConsumeMessage
       8: dup
       9: aload_0
      10: invokestatic  #47                 // Method org/joyqueue/domain/TopicName.parse:(Ljava/lang/String;)Lorg/joyqueue/domain/TopicName;
      13: aload_1
      14: aload_2
      15: invokevirtual #48                 // Method org/joyqueue/message/BrokerMessage.getPartition:()S
      18: aload_2
      19: invokevirtual #49                 // Method org/joyqueue/message/BrokerMessage.getMsgIndexNo:()J
      22: aload_2
      23: invokevirtual #50                 // Method org/joyqueue/message/BrokerMessage.getTxId:()Ljava/lang/String;
      26: aload_2
      27: invokevirtual #51                 // Method org/joyqueue/message/BrokerMessage.getBusinessId:()Ljava/lang/String;
      30: new           #11                 // class java/lang/String
      33: dup
      34: aload_3
      35: getstatic     #52                 // Field com/google/common/base/Charsets.UTF_8:Ljava/nio/charset/Charset;
      38: invokespecial #53                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      41: aload_3
      42: aload_2
      43: invokevirtual #54                 // Method org/joyqueue/message/BrokerMessage.getFlag:()S
      46: aload_2
      47: invokevirtual #55                 // Method org/joyqueue/message/BrokerMessage.getPriority:()B
      50: aload_2
      51: invokevirtual #56                 // Method org/joyqueue/message/BrokerMessage.getStartTime:()J
      54: aload_2
      55: invokevirtual #39                 // Method org/joyqueue/message/BrokerMessage.getSource:()B
      58: aload_2
      59: invokevirtual #57                 // Method org/joyqueue/message/BrokerMessage.getAttributes:()Ljava/util/Map;
      62: invokespecial #58                 // Method org/joyqueue/client/internal/consumer/domain/ConsumeMessage."<init>":(Lorg/joyqueue/domain/TopicName;Ljava/lang/String;SJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;[BSBJBLjava/util/Map;)V
      65: astore        4
      67: aload         4
      69: areturn

  static {};
    Code:
       0: new           #59                 // class org/joyqueue/client/internal/consumer/converter/MessageConvertSupport
       3: dup
       4: invokespecial #60                 // Method org/joyqueue/client/internal/consumer/converter/MessageConvertSupport."<init>":()V
       7: putstatic     #37                 // Field messageConvertSupport:Lorg/joyqueue/client/internal/consumer/converter/MessageConvertSupport;
      10: return
}
