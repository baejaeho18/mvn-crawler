Compiled from "MessagePoller.java"
public interface org.joyqueue.client.internal.consumer.MessagePoller extends org.joyqueue.toolkit.lang.LifeCycle {
  public abstract org.joyqueue.client.internal.consumer.domain.ConsumeMessage pollOnce(java.lang.String);

  public abstract org.joyqueue.client.internal.consumer.domain.ConsumeMessage pollOnce(java.lang.String, long, java.util.concurrent.TimeUnit);

  public abstract java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> poll(java.lang.String);

  public abstract java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> poll(java.lang.String, long, java.util.concurrent.TimeUnit);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage>> pollAsync(java.lang.String);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage>> pollAsync(java.lang.String, long, java.util.concurrent.TimeUnit);

  public abstract org.joyqueue.client.internal.consumer.domain.ConsumeMessage pollPartitionOnce(java.lang.String, short);

  public abstract org.joyqueue.client.internal.consumer.domain.ConsumeMessage pollPartitionOnce(java.lang.String, short, long, java.util.concurrent.TimeUnit);

  public abstract org.joyqueue.client.internal.consumer.domain.ConsumeMessage pollPartitionOnce(java.lang.String, short, long);

  public abstract org.joyqueue.client.internal.consumer.domain.ConsumeMessage pollPartitionOnce(java.lang.String, short, long, long, java.util.concurrent.TimeUnit);

  public abstract java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> pollPartition(java.lang.String, short);

  public abstract java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> pollPartition(java.lang.String, short, long, java.util.concurrent.TimeUnit);

  public abstract java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> pollPartition(java.lang.String, short, long);

  public abstract java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage> pollPartition(java.lang.String, short, long, long, java.util.concurrent.TimeUnit);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage>> pollPartitionAsync(java.lang.String, short);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage>> pollPartitionAsync(java.lang.String, short, long, java.util.concurrent.TimeUnit);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage>> pollPartitionAsync(java.lang.String, short, long);

  public abstract java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeMessage>> pollPartitionAsync(java.lang.String, short, long, long, java.util.concurrent.TimeUnit);

  public abstract org.joyqueue.exception.JoyQueueCode reply(java.lang.String, java.util.List<org.joyqueue.client.internal.consumer.domain.ConsumeReply>);

  public abstract org.joyqueue.exception.JoyQueueCode replyOnce(java.lang.String, org.joyqueue.client.internal.consumer.domain.ConsumeReply);

  public abstract org.joyqueue.client.internal.consumer.domain.FetchIndexData fetchIndex(java.lang.String, short);

  public abstract org.joyqueue.client.internal.metadata.domain.TopicMetadata getTopicMetadata(java.lang.String);
}
