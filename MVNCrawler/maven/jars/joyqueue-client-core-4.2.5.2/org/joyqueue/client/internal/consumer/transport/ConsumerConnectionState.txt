Compiled from "ConsumerConnectionState.java"
public class org.joyqueue.client.internal.consumer.transport.ConsumerConnectionState {
  protected static final org.slf4j.Logger logger;

  private static final java.util.concurrent.atomic.AtomicLong SEQUENCE;

  private org.joyqueue.client.internal.consumer.transport.ConsumerClient consumerClient;

  private java.util.concurrent.ConcurrentMap<java.lang.String, java.util.Set<java.lang.String>> consumerMap;

  private java.util.concurrent.locks.ReentrantReadWriteLock consumerLock;

  public org.joyqueue.client.internal.consumer.transport.ConsumerConnectionState(org.joyqueue.client.internal.consumer.transport.ConsumerClient);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Maps.newConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: new           #4                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      15: dup
      16: invokespecial #5                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      19: putfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field consumerClient:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      27: return

  public void handleAddConsumers();
    Code:
       0: aload_0
       1: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokestatic  #8                  // Method org/apache/commons/collections/MapUtils.isEmpty:(Ljava/util/Map;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
      15: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          74
      35: aload_1
      36: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #13                 // class java/util/Map$Entry
      44: astore_2
      45: aload_0
      46: aload_2
      47: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #15                 // class java/lang/Iterable
      55: invokestatic  #16                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      58: aload_2
      59: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: checkcast     #18                 // class java/lang/String
      67: invokevirtual #19                 // Method doHandleAddConsumers:(Ljava/util/List;Ljava/lang/String;)Z
      70: pop
      71: goto          26
      74: goto          102
      77: astore_1
      78: getstatic     #21                 // Field logger:Lorg/slf4j/Logger;
      81: ldc           #22                 // String add consumer exception, consumerMap: {}
      83: aload_0
      84: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
      87: aload_1
      88: invokeinterface #23,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
      97: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
     102: return
    Exception table:
       from    to  target type
          11    74    77   Class java/lang/Exception

  public void handleAddConsumers(java.util.Collection<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: aload_2
      12: invokevirtual #27                 // Method getOrCreateAddedTopicSet:(Ljava/lang/String;)Ljava/util/Set;
      15: astore_3
      16: aconst_null
      17: astore        4
      19: aload_1
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore        5
      27: aload         5
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          83
      37: aload         5
      39: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #18                 // class java/lang/String
      47: astore        6
      49: aload_3
      50: aload         6
      52: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      57: ifne          80
      60: aload         4
      62: ifnonnull     70
      65: invokestatic  #30                 // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      68: astore        4
      70: aload         4
      72: aload         6
      74: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          27
      83: aload         4
      85: invokestatic  #32                 // Method org/apache/commons/collections/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      88: ifeq          102
      91: aload_0
      92: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      95: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      98: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     101: return
     102: aload_0
     103: aload         4
     105: aload_2
     106: invokevirtual #19                 // Method doHandleAddConsumers:(Ljava/util/List;Ljava/lang/String;)Z
     109: ifeq          121
     112: aload_3
     113: aload         4
     115: invokeinterface #34,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     120: pop
     121: aload_0
     122: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     125: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     128: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     131: goto          149
     134: astore        7
     136: aload_0
     137: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     140: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     143: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     146: aload         7
     148: athrow
     149: return
    Exception table:
       from    to  target type
          10    91   134   any
         102   121   134   any
         134   136   134   any

  public void handleRemoveConsumers(java.util.Collection<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #36                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: aload_2
      12: invokevirtual #27                 // Method getOrCreateAddedTopicSet:(Ljava/lang/String;)Ljava/util/Set;
      15: astore_3
      16: aconst_null
      17: astore        4
      19: aload_1
      20: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore        5
      27: aload         5
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          83
      37: aload         5
      39: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #18                 // class java/lang/String
      47: astore        6
      49: aload_3
      50: aload         6
      52: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      57: ifeq          80
      60: aload         4
      62: ifnonnull     70
      65: invokestatic  #30                 // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      68: astore        4
      70: aload         4
      72: aload         6
      74: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          27
      83: aload         4
      85: invokestatic  #32                 // Method org/apache/commons/collections/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      88: ifeq          102
      91: aload_0
      92: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      95: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      98: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     101: return
     102: aload_0
     103: aload         4
     105: aload_2
     106: invokevirtual #38                 // Method doHandleRemoveConsumers:(Ljava/util/List;Ljava/lang/String;)Z
     109: ifeq          121
     112: aload_3
     113: aload         4
     115: invokeinterface #39,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     120: pop
     121: aload_0
     122: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     125: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     128: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     131: goto          149
     134: astore        7
     136: aload_0
     137: getfield      #6                  // Field consumerLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     140: invokevirtual #35                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     143: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     146: aload         7
     148: athrow
     149: return
    Exception table:
       from    to  target type
          10    91   134   any
         102   121   134   any
         134   136   134   any

  public void handleRemoveConsumers();
    Code:
       0: aload_0
       1: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokestatic  #8                  // Method org/apache/commons/collections/MapUtils.isEmpty:(Ljava/util/Map;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
      15: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          74
      35: aload_1
      36: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #13                 // class java/util/Map$Entry
      44: astore_2
      45: aload_0
      46: aload_2
      47: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #15                 // class java/lang/Iterable
      55: invokestatic  #16                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      58: aload_2
      59: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: checkcast     #18                 // class java/lang/String
      67: invokevirtual #38                 // Method doHandleRemoveConsumers:(Ljava/util/List;Ljava/lang/String;)Z
      70: pop
      71: goto          26
      74: return

  protected boolean doHandleAddConsumers(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: new           #40                 // class org/joyqueue/network/command/AddConsumerRequest
       3: dup
       4: invokespecial #41                 // Method org/joyqueue/network/command/AddConsumerRequest."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #42                 // Method org/joyqueue/network/command/AddConsumerRequest.setTopics:(Ljava/util/List;)V
      13: aload_3
      14: aload_2
      15: invokevirtual #43                 // Method org/joyqueue/network/command/AddConsumerRequest.setApp:(Ljava/lang/String;)V
      18: aload_3
      19: getstatic     #44                 // Field SEQUENCE:Ljava/util/concurrent/atomic/AtomicLong;
      22: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      25: invokevirtual #46                 // Method org/joyqueue/network/command/AddConsumerRequest.setSequence:(J)V
      28: aload_0
      29: getfield      #7                  // Field consumerClient:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      32: invokevirtual #47                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.getClient:()Lorg/joyqueue/client/internal/transport/Client;
      35: new           #48                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      38: dup
      39: aload_3
      40: invokespecial #49                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      43: invokevirtual #50                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;)Lorg/joyqueue/network/transport/command/Command;
      46: pop
      47: iconst_1
      48: ireturn
      49: astore        4
      51: getstatic     #21                 // Field logger:Lorg/slf4j/Logger;
      54: ldc           #51                 // String add consumer exception, topics: {}, app: {}, error: {}
      56: iconst_3
      57: anewarray     #52                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_1
      63: aastore
      64: dup
      65: iconst_1
      66: aload_2
      67: aastore
      68: dup
      69: iconst_2
      70: aload         4
      72: invokevirtual #53                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      75: aastore
      76: invokeinterface #54,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: getstatic     #21                 // Field logger:Lorg/slf4j/Logger;
      84: ldc           #55                 // String add consumer exception, topics: {}, app: {}
      86: iconst_3
      87: anewarray     #52                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_1
      93: aastore
      94: dup
      95: iconst_1
      96: aload_2
      97: aastore
      98: dup
      99: iconst_2
     100: aload         4
     102: aastore
     103: invokeinterface #56,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     108: iconst_0
     109: ireturn
    Exception table:
       from    to  target type
          28    48    49   Class java/lang/Exception

  protected boolean doHandleRemoveConsumers(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: new           #57                 // class org/joyqueue/network/command/RemoveConsumerRequest
       3: dup
       4: invokespecial #58                 // Method org/joyqueue/network/command/RemoveConsumerRequest."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #59                 // Method org/joyqueue/network/command/RemoveConsumerRequest.setTopics:(Ljava/util/List;)V
      13: aload_3
      14: aload_2
      15: invokevirtual #60                 // Method org/joyqueue/network/command/RemoveConsumerRequest.setApp:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #7                  // Field consumerClient:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      22: invokevirtual #47                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.getClient:()Lorg/joyqueue/client/internal/transport/Client;
      25: new           #48                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      28: dup
      29: aload_3
      30: invokespecial #49                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      33: invokevirtual #50                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;)Lorg/joyqueue/network/transport/command/Command;
      36: pop
      37: iconst_1
      38: ireturn
      39: astore        4
      41: getstatic     #21                 // Field logger:Lorg/slf4j/Logger;
      44: ldc           #61                 // String remove consumer exception, topics: {}, app: {}, error: {}
      46: iconst_3
      47: anewarray     #52                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_1
      53: aastore
      54: dup
      55: iconst_1
      56: aload_2
      57: aastore
      58: dup
      59: iconst_2
      60: aload         4
      62: invokevirtual #53                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      65: aastore
      66: invokeinterface #54,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      71: getstatic     #21                 // Field logger:Lorg/slf4j/Logger;
      74: ldc           #62                 // String remove consumer exception, topics: {}, app: {}
      76: iconst_3
      77: anewarray     #52                 // class java/lang/Object
      80: dup
      81: iconst_0
      82: aload_1
      83: aastore
      84: dup
      85: iconst_1
      86: aload_2
      87: aastore
      88: dup
      89: iconst_2
      90: aload         4
      92: aastore
      93: invokeinterface #56,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      98: iconst_0
      99: ireturn
    Exception table:
       from    to  target type
          18    38    39   Class java/lang/Exception

  protected java.util.Set<java.lang.String> getOrCreateAddedTopicSet(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #64                 // class java/util/Set
      13: astore_2
      14: aload_2
      15: ifnonnull     43
      18: invokestatic  #65                 // Method com/google/common/collect/Sets.newConcurrentHashSet:()Ljava/util/Set;
      21: astore_2
      22: aload_0
      23: getfield      #3                  // Field consumerMap:Ljava/util/concurrent/ConcurrentMap;
      26: aload_1
      27: aload_2
      28: invokeinterface #66,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #64                 // class java/util/Set
      36: astore_3
      37: aload_3
      38: ifnull        43
      41: aload_3
      42: astore_2
      43: aload_2
      44: areturn

  static {};
    Code:
       0: ldc           #67                 // class org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState
       2: invokestatic  #68                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field logger:Lorg/slf4j/Logger;
       8: new           #69                 // class java/util/concurrent/atomic/AtomicLong
      11: dup
      12: invokespecial #70                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      15: putstatic     #44                 // Field SEQUENCE:Ljava/util/concurrent/atomic/AtomicLong;
      18: return
}
