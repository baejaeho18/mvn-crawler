Compiled from "ClusterClientManager.java"
public class org.joyqueue.client.internal.cluster.ClusterClientManager extends org.joyqueue.toolkit.service.Service {
  private org.joyqueue.client.internal.transport.config.TransportConfig transportConfig;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.network.domain.BrokerNode bootstrapNode;

  private org.joyqueue.client.internal.transport.ClientManager clientManager;

  public org.joyqueue.client.internal.cluster.ClusterClientManager(org.joyqueue.client.internal.transport.config.TransportConfig, org.joyqueue.client.internal.nameserver.NameServerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_2
       5: invokestatic  #2                  // Method org/joyqueue/client/internal/nameserver/NameServerConfigChecker.check:(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      13: aload_0
      14: aload_2
      15: putfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      18: return

  public org.joyqueue.client.internal.cluster.ClusterClient getOrCreateClient();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field bootstrapNode:Lorg/joyqueue/network/domain/BrokerNode;
       5: invokevirtual #6                  // Method getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/cluster/ClusterClient;
       8: areturn

  public org.joyqueue.client.internal.cluster.ClusterClient doGetOrCreateClient();
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_0
       5: getfield      #5                  // Field bootstrapNode:Lorg/joyqueue/network/domain/BrokerNode;
       8: invokevirtual #8                  // Method org/joyqueue/client/internal/transport/ClientManager.doGetOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      17: aload_0
      18: getfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      21: invokestatic  #9                  // Method org/joyqueue/client/internal/cluster/ClusterClient.build:(Lorg/joyqueue/client/internal/transport/Client;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)Lorg/joyqueue/client/internal/cluster/ClusterClient;
      24: areturn

  public org.joyqueue.client.internal.cluster.ClusterClient createClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #10                 // Method org/joyqueue/client/internal/transport/ClientManager.createClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: new           #11                 // class org/joyqueue/client/internal/cluster/ClusterClient
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      18: aload_0
      19: getfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      22: invokespecial #12                 // Method org/joyqueue/client/internal/cluster/ClusterClient."<init>":(Lorg/joyqueue/client/internal/transport/Client;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)V
      25: areturn

  public org.joyqueue.client.internal.cluster.ClusterClient getOrCreateClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #13                 // Method org/joyqueue/client/internal/transport/ClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: aload_2
      10: aload_0
      11: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      14: aload_0
      15: getfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      18: invokestatic  #9                  // Method org/joyqueue/client/internal/cluster/ClusterClient.build:(Lorg/joyqueue/client/internal/transport/Client;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)Lorg/joyqueue/client/internal/cluster/ClusterClient;
      21: areturn

  public org.joyqueue.client.internal.cluster.ClusterClient getClient(org.joyqueue.network.domain.BrokerNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: aload_1
       5: invokevirtual #14                 // Method org/joyqueue/client/internal/transport/ClientManager.getClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/transport/Client;
       8: astore_2
       9: aload_2
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_2
      16: aload_0
      17: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      20: aload_0
      21: getfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      24: invokestatic  #9                  // Method org/joyqueue/client/internal/cluster/ClusterClient.build:(Lorg/joyqueue/client/internal/transport/Client;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)Lorg/joyqueue/client/internal/cluster/ClusterClient;
      27: areturn

  protected void validate() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       5: invokevirtual #15                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.copy:()Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       8: putfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      11: aload_0
      12: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      15: iconst_1
      16: invokevirtual #16                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.setConnections:(I)V
      19: aload_0
      20: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      23: iconst_1
      24: invokevirtual #17                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.setIoThreads:(I)V
      27: ldc           #18                 // String joyqueue://%s
      29: iconst_1
      30: anewarray     #19                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_0
      36: getfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      39: invokevirtual #20                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getAddress:()Ljava/lang/String;
      42: aastore
      43: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: invokestatic  #22                 // Method org/joyqueue/toolkit/URL.valueOf:(Ljava/lang/String;)Lorg/joyqueue/toolkit/URL;
      49: astore_1
      50: aload_1
      51: invokevirtual #23                 // Method org/joyqueue/toolkit/URL.getPort:()I
      54: ifne          76
      57: aload_0
      58: new           #24                 // class org/joyqueue/network/domain/BrokerNode
      61: dup
      62: aload_1
      63: invokevirtual #25                 // Method org/joyqueue/toolkit/URL.getHost:()Ljava/lang/String;
      66: iconst_m1
      67: invokespecial #26                 // Method org/joyqueue/network/domain/BrokerNode."<init>":(Ljava/lang/String;I)V
      70: putfield      #5                  // Field bootstrapNode:Lorg/joyqueue/network/domain/BrokerNode;
      73: goto          95
      76: aload_0
      77: new           #24                 // class org/joyqueue/network/domain/BrokerNode
      80: dup
      81: aload_1
      82: invokevirtual #25                 // Method org/joyqueue/toolkit/URL.getHost:()Ljava/lang/String;
      85: aload_1
      86: invokevirtual #23                 // Method org/joyqueue/toolkit/URL.getPort:()I
      89: invokespecial #26                 // Method org/joyqueue/network/domain/BrokerNode."<init>":(Ljava/lang/String;I)V
      92: putfield      #5                  // Field bootstrapNode:Lorg/joyqueue/network/domain/BrokerNode;
      95: aload_0
      96: new           #27                 // class org/joyqueue/client/internal/transport/ClientManager
      99: dup
     100: aload_0
     101: getfield      #3                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
     104: aload_0
     105: getfield      #4                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
     108: invokespecial #28                 // Method org/joyqueue/client/internal/transport/ClientManager."<init>":(Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)V
     111: putfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
     114: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: invokevirtual #29                 // Method org/joyqueue/client/internal/transport/ClientManager.start:()V
       7: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
       4: ifnull        14
       7: aload_0
       8: getfield      #7                  // Field clientManager:Lorg/joyqueue/client/internal/transport/ClientManager;
      11: invokevirtual #30                 // Method org/joyqueue/client/internal/transport/ClientManager.stop:()V
      14: return
}
