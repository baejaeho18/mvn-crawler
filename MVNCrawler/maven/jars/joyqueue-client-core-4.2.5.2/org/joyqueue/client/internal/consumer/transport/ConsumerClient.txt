Compiled from "ConsumerClient.java"
public class org.joyqueue.client.internal.consumer.transport.ConsumerClient {
  private static final java.lang.String CLIENT_CONSUMER_CACHE_KEY;

  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.transport.Client client;

  private org.joyqueue.client.internal.consumer.transport.ConsumerConnectionState connectionState;

  public static org.joyqueue.client.internal.consumer.transport.ConsumerClient build(org.joyqueue.client.internal.transport.Client);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
       4: ldc           #3                  // String _CLIENT_CONSUMER_CACHE_
       6: invokeinterface #4,  2            // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #2                  // class org/joyqueue/client/internal/consumer/transport/ConsumerClient
      14: astore_1
      15: aload_1
      16: ifnonnull     75
      19: new           #2                  // class org/joyqueue/client/internal/consumer/transport/ConsumerClient
      22: dup
      23: aload_0
      24: invokespecial #5                  // Method "<init>":(Lorg/joyqueue/client/internal/transport/Client;)V
      27: astore_1
      28: aload_0
      29: invokevirtual #1                  // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
      32: ldc           #3                  // String _CLIENT_CONSUMER_CACHE_
      34: aload_1
      35: invokeinterface #6,  3            // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #2                  // class org/joyqueue/client/internal/consumer/transport/ConsumerClient
      43: astore_2
      44: aload_2
      45: ifnull        53
      48: aload_2
      49: astore_1
      50: goto          75
      53: aload_1
      54: invokevirtual #7                  // Method getClient:()Lorg/joyqueue/client/internal/transport/Client;
      57: new           #8                  // class org/joyqueue/client/internal/consumer/transport/ConsumerClientConnectionListener
      60: dup
      61: aload_1
      62: invokevirtual #7                  // Method getClient:()Lorg/joyqueue/client/internal/transport/Client;
      65: invokevirtual #9                  // Method org/joyqueue/client/internal/transport/Client.getTransport:()Lorg/joyqueue/network/transport/Transport;
      68: aload_1
      69: invokespecial #10                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientConnectionListener."<init>":(Lorg/joyqueue/network/transport/Transport;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      72: invokevirtual #11                 // Method org/joyqueue/client/internal/transport/Client.addListener:(Lorg/joyqueue/toolkit/concurrent/EventListener;)V
      75: aload_1
      76: areturn

  public org.joyqueue.client.internal.consumer.transport.ConsumerClient(org.joyqueue.client.internal.transport.Client);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
       9: aload_0
      10: new           #14                 // class org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState
      13: dup
      14: aload_0
      15: invokespecial #15                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState."<init>":(Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      18: putfield      #16                 // Field connectionState:Lorg/joyqueue/client/internal/consumer/transport/ConsumerConnectionState;
      21: return

  public org.joyqueue.network.command.FetchIndexResponse fetchIndex(java.util.Map<java.lang.String, java.util.List<java.lang.Short>>, java.lang.String, long);
    Code:
       0: new           #17                 // class org/joyqueue/network/command/FetchIndexRequest
       3: dup
       4: invokespecial #18                 // Method org/joyqueue/network/command/FetchIndexRequest."<init>":()V
       7: astore        5
       9: aload         5
      11: aload_1
      12: invokevirtual #19                 // Method org/joyqueue/network/command/FetchIndexRequest.setPartitions:(Ljava/util/Map;)V
      15: aload         5
      17: aload_2
      18: invokevirtual #20                 // Method org/joyqueue/network/command/FetchIndexRequest.setApp:(Ljava/lang/String;)V
      21: aload_0
      22: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      25: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      28: dup
      29: aload         5
      31: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      34: lload_3
      35: invokevirtual #23                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      38: invokevirtual #24                 // Method org/joyqueue/network/transport/command/Command.getPayload:()Ljava/lang/Object;
      41: checkcast     #25                 // class org/joyqueue/network/command/FetchIndexResponse
      44: areturn

  public org.joyqueue.network.command.CommitAckResponse commitAck(com.google.common.collect.Table<java.lang.String, java.lang.Short, java.util.List<org.joyqueue.network.command.CommitAckData>>, java.lang.String, long);
    Code:
       0: new           #26                 // class org/joyqueue/network/command/CommitAckRequest
       3: dup
       4: invokespecial #27                 // Method org/joyqueue/network/command/CommitAckRequest."<init>":()V
       7: astore        5
       9: aload         5
      11: aload_1
      12: invokevirtual #28                 // Method org/joyqueue/network/command/CommitAckRequest.setData:(Lcom/google/common/collect/Table;)V
      15: aload         5
      17: aload_2
      18: invokevirtual #29                 // Method org/joyqueue/network/command/CommitAckRequest.setApp:(Ljava/lang/String;)V
      21: aload_0
      22: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      25: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      28: dup
      29: aload         5
      31: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      34: lload_3
      35: invokevirtual #23                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      38: invokevirtual #24                 // Method org/joyqueue/network/transport/command/Command.getPayload:()Ljava/lang/Object;
      41: checkcast     #30                 // class org/joyqueue/network/command/CommitAckResponse
      44: areturn

  public void asyncFetchTopicMessage(java.util.List<java.lang.String>, java.lang.String, int, long, long, long, org.joyqueue.network.transport.command.CommandCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: lload         6
       6: lload         8
       8: invokevirtual #31                 // Method buildFetchTopicMessageCommand:(Ljava/util/List;Ljava/lang/String;IJJ)Lorg/joyqueue/network/command/FetchTopicMessageRequest;
      11: astore        11
      13: aload_0
      14: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      17: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      20: dup
      21: aload         11
      23: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      26: lload         4
      28: aload         10
      30: invokevirtual #32                 // Method org/joyqueue/client/internal/transport/Client.async:(Lorg/joyqueue/network/transport/command/Command;JLorg/joyqueue/network/transport/command/CommandCallback;)V
      33: return

  public org.joyqueue.network.command.FetchTopicMessageResponse fetchTopicMessage(java.util.List<java.lang.String>, java.lang.String, int, long, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: lload         6
       6: lload         8
       8: invokevirtual #31                 // Method buildFetchTopicMessageCommand:(Ljava/util/List;Ljava/lang/String;IJJ)Lorg/joyqueue/network/command/FetchTopicMessageRequest;
      11: astore        10
      13: aload_0
      14: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      17: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      20: dup
      21: aload         10
      23: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      26: lload         4
      28: invokevirtual #23                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      31: astore        11
      33: aload         11
      35: invokevirtual #24                 // Method org/joyqueue/network/transport/command/Command.getPayload:()Ljava/lang/Object;
      38: checkcast     #33                 // class org/joyqueue/network/command/FetchTopicMessageResponse
      41: areturn

  public org.joyqueue.network.command.FetchPartitionMessageResponse fetchPartitionMessage(java.util.Map<java.lang.String, java.lang.Short>, java.lang.String, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #34                 // Method buildPartitionTopicMessageCommand:(Ljava/util/Map;Ljava/lang/String;I)Lorg/joyqueue/network/command/FetchPartitionMessageRequest;
       7: astore        6
       9: aload_0
      10: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      13: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      16: dup
      17: aload         6
      19: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      22: lload         4
      24: invokevirtual #23                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      27: astore        7
      29: aload         7
      31: invokevirtual #24                 // Method org/joyqueue/network/transport/command/Command.getPayload:()Ljava/lang/Object;
      34: checkcast     #35                 // class org/joyqueue/network/command/FetchPartitionMessageResponse
      37: areturn

  public void asyncFetchPartitionMessage(java.util.Map<java.lang.String, java.lang.Short>, java.lang.String, int, long, org.joyqueue.network.transport.command.CommandCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #34                 // Method buildPartitionTopicMessageCommand:(Ljava/util/Map;Ljava/lang/String;I)Lorg/joyqueue/network/command/FetchPartitionMessageRequest;
       7: astore        7
       9: aload_0
      10: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      13: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      16: dup
      17: aload         7
      19: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      22: lload         4
      24: aload         6
      26: invokevirtual #32                 // Method org/joyqueue/client/internal/transport/Client.async:(Lorg/joyqueue/network/transport/command/Command;JLorg/joyqueue/network/transport/command/CommandCallback;)V
      29: return

  public org.joyqueue.network.command.FetchPartitionMessageResponse fetchPartitionMessage(com.google.common.collect.Table<java.lang.String, java.lang.Short, java.lang.Long>, java.lang.String, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #36                 // Method buildPartitionTopicMessageCommand:(Lcom/google/common/collect/Table;Ljava/lang/String;I)Lorg/joyqueue/network/command/FetchPartitionMessageRequest;
       7: astore        6
       9: aload_0
      10: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      13: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      16: dup
      17: aload         6
      19: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      22: lload         4
      24: invokevirtual #23                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      27: astore        7
      29: aload         7
      31: invokevirtual #24                 // Method org/joyqueue/network/transport/command/Command.getPayload:()Ljava/lang/Object;
      34: checkcast     #35                 // class org/joyqueue/network/command/FetchPartitionMessageResponse
      37: areturn

  public void asyncFetchPartitionMessage(com.google.common.collect.Table<java.lang.String, java.lang.Short, java.lang.Long>, java.lang.String, int, long, org.joyqueue.network.transport.command.CommandCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #36                 // Method buildPartitionTopicMessageCommand:(Lcom/google/common/collect/Table;Ljava/lang/String;I)Lorg/joyqueue/network/command/FetchPartitionMessageRequest;
       7: astore        7
       9: aload_0
      10: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      13: new           #21                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      16: dup
      17: aload         7
      19: invokespecial #22                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      22: lload         4
      24: aload         6
      26: invokevirtual #32                 // Method org/joyqueue/client/internal/transport/Client.async:(Lorg/joyqueue/network/transport/command/Command;JLorg/joyqueue/network/transport/command/CommandCallback;)V
      29: return

  public void addConsumers();
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectionState:Lorg/joyqueue/client/internal/consumer/transport/ConsumerConnectionState;
       4: invokevirtual #37                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState.handleAddConsumers:()V
       7: return

  public void addConsumers(java.util.Collection<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectionState:Lorg/joyqueue/client/internal/consumer/transport/ConsumerConnectionState;
       4: aload_1
       5: aload_2
       6: invokevirtual #38                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState.handleAddConsumers:(Ljava/util/Collection;Ljava/lang/String;)V
       9: return

  public void removeConsumers(java.util.Collection<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectionState:Lorg/joyqueue/client/internal/consumer/transport/ConsumerConnectionState;
       4: aload_1
       5: aload_2
       6: invokevirtual #39                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState.handleRemoveConsumers:(Ljava/util/Collection;Ljava/lang/String;)V
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #16                 // Field connectionState:Lorg/joyqueue/client/internal/consumer/transport/ConsumerConnectionState;
       4: invokevirtual #40                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerConnectionState.handleRemoveConsumers:()V
       7: aload_0
       8: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
      11: invokevirtual #41                 // Method org/joyqueue/client/internal/transport/Client.stop:()V
      14: return

  protected org.joyqueue.network.command.FetchPartitionMessageRequest buildPartitionTopicMessageCommand(java.util.Map<java.lang.String, java.lang.Short>, java.lang.String, int);
    Code:
       0: invokestatic  #42                 // Method com/google/common/collect/HashBasedTable.create:()Lcom/google/common/collect/HashBasedTable;
       3: astore        4
       5: aload_1
       6: invokeinterface #43,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      11: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        5
      18: aload         5
      20: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          76
      28: aload         5
      30: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #47                 // class java/util/Map$Entry
      38: astore        6
      40: aload         4
      42: aload         6
      44: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: aload         6
      51: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: new           #50                 // class org/joyqueue/network/command/FetchPartitionMessageData
      59: dup
      60: iload_3
      61: ldc2_w        #52                 // long -1l
      64: invokespecial #54                 // Method org/joyqueue/network/command/FetchPartitionMessageData."<init>":(IJ)V
      67: invokeinterface #55,  4           // InterfaceMethod com/google/common/collect/Table.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: goto          18
      76: new           #51                 // class org/joyqueue/network/command/FetchPartitionMessageRequest
      79: dup
      80: invokespecial #56                 // Method org/joyqueue/network/command/FetchPartitionMessageRequest."<init>":()V
      83: astore        5
      85: aload         5
      87: aload         4
      89: invokevirtual #57                 // Method org/joyqueue/network/command/FetchPartitionMessageRequest.setPartitions:(Lcom/google/common/collect/Table;)V
      92: aload         5
      94: aload_2
      95: invokevirtual #58                 // Method org/joyqueue/network/command/FetchPartitionMessageRequest.setApp:(Ljava/lang/String;)V
      98: aload         5
     100: areturn

  protected org.joyqueue.network.command.FetchPartitionMessageRequest buildPartitionTopicMessageCommand(com.google.common.collect.Table<java.lang.String, java.lang.Short, java.lang.Long>, java.lang.String, int);
    Code:
       0: invokestatic  #42                 // Method com/google/common/collect/HashBasedTable.create:()Lcom/google/common/collect/HashBasedTable;
       3: astore        4
       5: aload_1
       6: invokeinterface #59,  1           // InterfaceMethod com/google/common/collect/Table.rowMap:()Ljava/util/Map;
      11: invokeinterface #43,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        5
      23: aload         5
      25: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          145
      33: aload         5
      35: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #47                 // class java/util/Map$Entry
      43: astore        6
      45: aload         6
      47: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #60                 // class java/lang/String
      55: astore        7
      57: aload         6
      59: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #61                 // class java/util/Map
      67: invokeinterface #43,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      72: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      77: astore        8
      79: aload         8
      81: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          142
      89: aload         8
      91: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #47                 // class java/util/Map$Entry
      99: astore        9
     101: aload         4
     103: aload         7
     105: aload         9
     107: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     112: new           #50                 // class org/joyqueue/network/command/FetchPartitionMessageData
     115: dup
     116: iload_3
     117: aload         9
     119: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     124: checkcast     #62                 // class java/lang/Long
     127: invokevirtual #63                 // Method java/lang/Long.longValue:()J
     130: invokespecial #54                 // Method org/joyqueue/network/command/FetchPartitionMessageData."<init>":(IJ)V
     133: invokeinterface #55,  4           // InterfaceMethod com/google/common/collect/Table.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: goto          79
     142: goto          23
     145: new           #51                 // class org/joyqueue/network/command/FetchPartitionMessageRequest
     148: dup
     149: invokespecial #56                 // Method org/joyqueue/network/command/FetchPartitionMessageRequest."<init>":()V
     152: astore        5
     154: aload         5
     156: aload         4
     158: invokevirtual #57                 // Method org/joyqueue/network/command/FetchPartitionMessageRequest.setPartitions:(Lcom/google/common/collect/Table;)V
     161: aload         5
     163: aload_2
     164: invokevirtual #58                 // Method org/joyqueue/network/command/FetchPartitionMessageRequest.setApp:(Ljava/lang/String;)V
     167: aload         5
     169: areturn

  protected org.joyqueue.network.command.FetchTopicMessageRequest buildFetchTopicMessageCommand(java.util.List<java.lang.String>, java.lang.String, int, long, long);
    Code:
       0: invokestatic  #64                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       3: astore        8
       5: aload_1
       6: invokeinterface #65,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        9
      13: aload         9
      15: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          56
      23: aload         9
      25: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #60                 // class java/lang/String
      33: astore        10
      35: aload         8
      37: aload         10
      39: new           #66                 // class org/joyqueue/network/command/FetchTopicMessageData
      42: dup
      43: iload_3
      44: invokespecial #67                 // Method org/joyqueue/network/command/FetchTopicMessageData."<init>":(I)V
      47: invokeinterface #68,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: goto          13
      56: new           #69                 // class org/joyqueue/network/command/FetchTopicMessageRequest
      59: dup
      60: invokespecial #70                 // Method org/joyqueue/network/command/FetchTopicMessageRequest."<init>":()V
      63: astore        9
      65: aload         9
      67: aload         8
      69: invokevirtual #71                 // Method org/joyqueue/network/command/FetchTopicMessageRequest.setTopics:(Ljava/util/Map;)V
      72: aload         9
      74: aload_2
      75: invokevirtual #72                 // Method org/joyqueue/network/command/FetchTopicMessageRequest.setApp:(Ljava/lang/String;)V
      78: aload         9
      80: lload         4
      82: l2i
      83: invokevirtual #73                 // Method org/joyqueue/network/command/FetchTopicMessageRequest.setAckTimeout:(I)V
      86: aload         9
      88: lload         6
      90: l2i
      91: invokevirtual #74                 // Method org/joyqueue/network/command/FetchTopicMessageRequest.setLongPollTimeout:(I)V
      94: aload         9
      96: areturn

  public org.joyqueue.network.transport.TransportAttribute getAttribute();
    Code:
       0: aload_0
       1: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
       4: invokevirtual #1                  // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
       7: areturn

  public org.joyqueue.client.internal.transport.Client getClient();
    Code:
       0: aload_0
       1: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
       4: areturn

  public org.joyqueue.client.internal.transport.ClientState getState();
    Code:
       0: aload_0
       1: getfield      #13                 // Field client:Lorg/joyqueue/client/internal/transport/Client;
       4: invokevirtual #75                 // Method org/joyqueue/client/internal/transport/Client.getState:()Lorg/joyqueue/client/internal/transport/ClientState;
       7: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/joyqueue/client/internal/consumer/transport/ConsumerClient
       2: invokestatic  #76                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #77                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
