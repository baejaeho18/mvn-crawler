Compiled from "ProduceMessageConverter.java"
public class org.joyqueue.client.internal.producer.converter.ProduceMessageConverter {
  private static final byte[] CLIENT_IP;

  protected static final org.slf4j.Logger logger;

  public org.joyqueue.client.internal.producer.converter.ProduceMessageConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.List<org.joyqueue.message.BrokerMessage> convertToBrokerMessages(java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, boolean, int, java.lang.String, boolean);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmpne     13
      10: iconst_0
      11: istore        6
      13: iload         6
      15: ifeq          40
      18: iconst_1
      19: anewarray     #3                  // class org/joyqueue/message/BrokerMessage
      22: dup
      23: iconst_0
      24: aload_0
      25: aload_1
      26: aload_2
      27: iload_3
      28: iload         4
      30: aload         5
      32: invokestatic  #4                  // Method convertToBatchBrokerMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ZILjava/lang/String;)Lorg/joyqueue/message/BrokerMessage;
      35: aastore
      36: invokestatic  #5                  // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      39: areturn
      40: aload_0
      41: aload_1
      42: aload_2
      43: iload_3
      44: iload         4
      46: aload         5
      48: invokestatic  #6                  // Method convertToBrokerMessages:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ZILjava/lang/String;)Ljava/util/List;
      51: areturn

  public static java.util.List<org.joyqueue.message.BrokerMessage> convertToBrokerMessages(java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, boolean, int, java.lang.String);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod java/util/List.size:()I
       6: invokestatic  #7                  // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
       9: astore        6
      11: aload_2
      12: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        7
      19: aload         7
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          68
      29: aload         7
      31: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #11                 // class org/joyqueue/client/internal/producer/domain/ProduceMessage
      39: astore        8
      41: aload_0
      42: aload_1
      43: aload         8
      45: iload_3
      46: iload         4
      48: aload         5
      50: invokestatic  #12                 // Method convertToBrokerMessage:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;ZILjava/lang/String;)Lorg/joyqueue/message/BrokerMessage;
      53: astore        9
      55: aload         6
      57: aload         9
      59: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          19
      68: aload         6
      70: areturn

  public static org.joyqueue.message.BrokerMessage convertToBrokerMessage(java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, boolean, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #14                 // Method convertToBrokerMessage:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;)Lorg/joyqueue/message/BrokerMessage;
       6: astore        6
       8: aload         6
      10: iload_3
      11: iload         4
      13: aload         5
      15: invokestatic  #15                 // Method compress:(Lorg/joyqueue/message/BrokerMessage;ZILjava/lang/String;)V
      18: aload         6
      20: areturn

  public static org.joyqueue.message.BrokerMessage convertToBatchBrokerMessage(java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, boolean, int, java.lang.String);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod java/util/List.size:()I
       6: invokestatic  #7                  // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
       9: astore        6
      11: aload_2
      12: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        7
      19: aload         7
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          63
      29: aload         7
      31: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #11                 // class org/joyqueue/client/internal/producer/domain/ProduceMessage
      39: astore        8
      41: aload_0
      42: aload_1
      43: aload         8
      45: invokestatic  #14                 // Method convertToBrokerMessage:(Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;)Lorg/joyqueue/message/BrokerMessage;
      48: astore        9
      50: aload         6
      52: aload         9
      54: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          19
      63: aload_2
      64: iconst_0
      65: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      70: checkcast     #11                 // class org/joyqueue/client/internal/producer/domain/ProduceMessage
      73: astore        7
      75: new           #3                  // class org/joyqueue/message/BrokerMessage
      78: dup
      79: invokespecial #17                 // Method org/joyqueue/message/BrokerMessage."<init>":()V
      82: astore        8
      84: aload         8
      86: aload_0
      87: invokevirtual #18                 // Method org/joyqueue/message/BrokerMessage.setTopic:(Ljava/lang/String;)V
      90: aload         8
      92: aload_1
      93: invokevirtual #19                 // Method org/joyqueue/message/BrokerMessage.setApp:(Ljava/lang/String;)V
      96: aload         8
      98: aload         7
     100: invokevirtual #20                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getPartition:()S
     103: invokevirtual #21                 // Method org/joyqueue/message/BrokerMessage.setPartition:(S)V
     106: aload         8
     108: aload         6
     110: invokestatic  #22                 // Method org/joyqueue/network/serializer/BatchMessageSerializer.serialize:(Ljava/util/List;)[B
     113: invokevirtual #23                 // Method org/joyqueue/message/BrokerMessage.setBody:([B)V
     116: aload         8
     118: aload         7
     120: invokevirtual #24                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getPriority:()B
     123: invokevirtual #25                 // Method org/joyqueue/message/BrokerMessage.setPriority:(B)V
     126: aload         8
     128: invokestatic  #26                 // Method org/joyqueue/toolkit/time/SystemClock.now:()J
     131: invokevirtual #27                 // Method org/joyqueue/message/BrokerMessage.setStartTime:(J)V
     134: aload         8
     136: aload_2
     137: invokeinterface #2,  1            // InterfaceMethod java/util/List.size:()I
     142: i2s
     143: invokevirtual #28                 // Method org/joyqueue/message/BrokerMessage.setFlag:(S)V
     146: aload         8
     148: getstatic     #29                 // Field org/joyqueue/message/SourceType.JOYQUEUE:Lorg/joyqueue/message/SourceType;
     151: invokevirtual #30                 // Method org/joyqueue/message/SourceType.getValue:()B
     154: invokevirtual #31                 // Method org/joyqueue/message/BrokerMessage.setSource:(B)V
     157: aload         8
     159: getstatic     #32                 // Field CLIENT_IP:[B
     162: invokevirtual #33                 // Method org/joyqueue/message/BrokerMessage.setClientIp:([B)V
     165: aload         8
     167: iconst_0
     168: invokevirtual #34                 // Method org/joyqueue/message/BrokerMessage.setCompressed:(Z)V
     171: aload         8
     173: iconst_1
     174: invokevirtual #35                 // Method org/joyqueue/message/BrokerMessage.setBatch:(Z)V
     177: aload         8
     179: iload_3
     180: iload         4
     182: aload         5
     184: invokestatic  #15                 // Method compress:(Lorg/joyqueue/message/BrokerMessage;ZILjava/lang/String;)V
     187: aload         8
     189: areturn

  public static org.joyqueue.message.BrokerMessage convertToBrokerMessage(java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage);
    Code:
       0: new           #3                  // class org/joyqueue/message/BrokerMessage
       3: dup
       4: invokespecial #17                 // Method org/joyqueue/message/BrokerMessage."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokevirtual #18                 // Method org/joyqueue/message/BrokerMessage.setTopic:(Ljava/lang/String;)V
      13: aload_3
      14: aload_1
      15: invokevirtual #19                 // Method org/joyqueue/message/BrokerMessage.setApp:(Ljava/lang/String;)V
      18: aload_3
      19: aload_2
      20: invokevirtual #20                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getPartition:()S
      23: invokevirtual #21                 // Method org/joyqueue/message/BrokerMessage.setPartition:(S)V
      26: aload_3
      27: aload_2
      28: invokestatic  #36                 // Method serializeBody:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;)[B
      31: invokevirtual #23                 // Method org/joyqueue/message/BrokerMessage.setBody:([B)V
      34: aload_3
      35: aload_2
      36: invokevirtual #37                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getBusinessId:()Ljava/lang/String;
      39: invokevirtual #38                 // Method org/joyqueue/message/BrokerMessage.setBusinessId:(Ljava/lang/String;)V
      42: aload_3
      43: aload_2
      44: invokevirtual #24                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getPriority:()B
      47: invokevirtual #25                 // Method org/joyqueue/message/BrokerMessage.setPriority:(B)V
      50: aload_3
      51: aload_2
      52: invokevirtual #39                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getAttributes:()Ljava/util/Map;
      55: invokevirtual #40                 // Method org/joyqueue/message/BrokerMessage.setAttributes:(Ljava/util/Map;)V
      58: aload_3
      59: invokestatic  #26                 // Method org/joyqueue/toolkit/time/SystemClock.now:()J
      62: invokevirtual #27                 // Method org/joyqueue/message/BrokerMessage.setStartTime:(J)V
      65: aload_3
      66: aload_2
      67: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getFlag:()S
      70: invokevirtual #28                 // Method org/joyqueue/message/BrokerMessage.setFlag:(S)V
      73: aload_3
      74: getstatic     #29                 // Field org/joyqueue/message/SourceType.JOYQUEUE:Lorg/joyqueue/message/SourceType;
      77: invokevirtual #30                 // Method org/joyqueue/message/SourceType.getValue:()B
      80: invokevirtual #31                 // Method org/joyqueue/message/BrokerMessage.setSource:(B)V
      83: aload_3
      84: getstatic     #32                 // Field CLIENT_IP:[B
      87: invokevirtual #33                 // Method org/joyqueue/message/BrokerMessage.setClientIp:([B)V
      90: aload_3
      91: iconst_0
      92: invokevirtual #34                 // Method org/joyqueue/message/BrokerMessage.setCompressed:(Z)V
      95: aload_3
      96: iconst_0
      97: invokevirtual #35                 // Method org/joyqueue/message/BrokerMessage.setBatch:(Z)V
     100: aload_3
     101: areturn

  protected static void compress(org.joyqueue.message.BrokerMessage, boolean, int, java.lang.String);
    Code:
       0: iload_1
       1: ifne          5
       4: return
       5: aload_0
       6: invokevirtual #42                 // Method org/joyqueue/message/BrokerMessage.getByteBody:()[B
       9: astore        4
      11: iload_2
      12: aload         4
      14: arraylength
      15: if_icmple     19
      18: return
      19: aload_3
      20: invokestatic  #43                 // Method org/joyqueue/client/internal/common/compress/CompressorManager.getCompressor:(Ljava/lang/String;)Lorg/joyqueue/client/internal/common/compress/Compressor;
      23: astore        5
      25: aload_0
      26: aload_0
      27: invokevirtual #42                 // Method org/joyqueue/message/BrokerMessage.getByteBody:()[B
      30: aload         5
      32: invokestatic  #44                 // Method org/joyqueue/client/internal/common/compress/CompressUtils.compress:([BLorg/joyqueue/client/internal/common/compress/Compressor;)[B
      35: invokevirtual #23                 // Method org/joyqueue/message/BrokerMessage.setBody:([B)V
      38: goto          53
      41: astore        6
      43: new           #46                 // class org/joyqueue/client/internal/exception/ClientException
      46: dup
      47: aload         6
      49: invokespecial #47                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      52: athrow
      53: aload_0
      54: aload         5
      56: invokeinterface #48,  1           // InterfaceMethod org/joyqueue/client/internal/common/compress/Compressor.type:()Ljava/lang/Object;
      61: checkcast     #49                 // class java/lang/String
      64: invokestatic  #50                 // Method org/joyqueue/message/Message$CompressionType.convert:(Ljava/lang/String;)Lorg/joyqueue/message/Message$CompressionType;
      67: invokevirtual #51                 // Method org/joyqueue/message/BrokerMessage.setCompressionType:(Lorg/joyqueue/message/Message$CompressionType;)V
      70: aload_0
      71: iconst_1
      72: invokevirtual #34                 // Method org/joyqueue/message/BrokerMessage.setCompressed:(Z)V
      75: return
    Exception table:
       from    to  target type
          25    38    41   Class java/io/IOException

  protected static byte[] serializeBody(org.joyqueue.client.internal.producer.domain.ProduceMessage);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getBodyBytes:()[B
       4: invokestatic  #53                 // Method org/apache/commons/lang3/ArrayUtils.isNotEmpty:([B)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #52                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getBodyBytes:()[B
      14: areturn
      15: aload_0
      16: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getBody:()Ljava/lang/String;
      19: ldc           #55                 // String UTF-8
      21: invokevirtual #56                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      24: areturn
      25: astore_1
      26: getstatic     #58                 // Field logger:Lorg/slf4j/Logger;
      29: ldc           #59                 // String serializeBody exception, body: {}
      31: aload_0
      32: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getBody:()Ljava/lang/String;
      35: aload_1
      36: invokeinterface #60,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      41: aload_0
      42: invokevirtual #54                 // Method org/joyqueue/client/internal/producer/domain/ProduceMessage.getBody:()Ljava/lang/String;
      45: invokevirtual #61                 // Method java/lang/String.getBytes:()[B
      48: areturn
    Exception table:
       from    to  target type
          15    24    25   Class java/io/UnsupportedEncodingException

  static {};
    Code:
       0: new           #62                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
       7: invokestatic  #64                 // Method org/joyqueue/toolkit/network/IpUtil.getLocalIp:()Ljava/lang/String;
      10: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: ldc           #66                 // String :0
      15: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokestatic  #68                 // Method org/joyqueue/toolkit/network/IpUtil.toByte:(Ljava/lang/String;)[B
      24: putstatic     #32                 // Field CLIENT_IP:[B
      27: ldc           #69                 // class org/joyqueue/client/internal/producer/converter/ProduceMessageConverter
      29: invokestatic  #70                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      32: putstatic     #58                 // Field logger:Lorg/slf4j/Logger;
      35: return
}
