Compiled from "DefaultMessageFetcher.java"
public class org.joyqueue.client.internal.consumer.support.DefaultMessageFetcher extends org.joyqueue.toolkit.service.Service implements org.joyqueue.client.internal.consumer.MessageFetcher {
  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.consumer.config.FetcherConfig config;

  private org.joyqueue.client.internal.consumer.transport.ConsumerClientManager consumerClientManager;

  private org.joyqueue.client.internal.transport.ConnectionState connectionState;

  public org.joyqueue.client.internal.consumer.support.DefaultMessageFetcher(org.joyqueue.client.internal.consumer.transport.ConsumerClientManager, org.joyqueue.client.internal.consumer.config.FetcherConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: new           #2                  // class org/joyqueue/client/internal/transport/ConnectionState
       8: dup
       9: invokespecial #3                  // Method org/joyqueue/client/internal/transport/ConnectionState."<init>":()V
      12: putfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      15: aload_1
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #5                  // String consumerClientManager not null
      26: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      29: aload_0
      30: aload_1
      31: putfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      34: aload_0
      35: aload_2
      36: putfield      #8                  // Field config:Lorg/joyqueue/client/internal/consumer/config/FetcherConfig;
      39: return

  public org.joyqueue.client.internal.consumer.domain.FetchMessageData fetch(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, int, long, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #9                  // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      13: aload_3
      14: iload         4
      16: lload         5
      18: lload         7
      20: lload         9
      22: invokevirtual #11                 // Method batchFetch:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/List;Ljava/lang/String;IJJJ)Ljava/util/Map;
      25: astore        11
      27: aload         11
      29: aload_2
      30: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #13                 // class org/joyqueue/client/internal/consumer/domain/FetchMessageData
      38: areturn

  public void asyncFetch(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, int, long, long, long, org.joyqueue.client.internal.consumer.callback.FetchListener);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #9                  // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: invokestatic  #10                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      13: aload_3
      14: iload         4
      16: lload         5
      18: lload         7
      20: lload         9
      22: new           #14                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$1
      25: dup
      26: aload_0
      27: aload_2
      28: aload         11
      30: invokespecial #15                 // Method org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$1."<init>":(Lorg/joyqueue/client/internal/consumer/support/DefaultMessageFetcher;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/callback/FetchListener;)V
      33: invokevirtual #16                 // Method batchFetchAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/List;Ljava/lang/String;IJJJLorg/joyqueue/client/internal/consumer/callback/BatchFetchListener;)V
      36: return

  public org.joyqueue.client.internal.consumer.domain.FetchMessageData fetchPartition(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, short, int, long);
    Code:
       0: invokestatic  #17                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       3: astore        8
       5: aload         8
       7: aload_2
       8: iload         4
      10: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      13: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: aload_1
      21: aload         8
      23: aload_3
      24: iload         5
      26: lload         6
      28: invokevirtual #20                 // Method batchFetchPartitions:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Map;Ljava/lang/String;IJ)Lcom/google/common/collect/Table;
      31: astore        9
      33: aload         9
      35: aload_2
      36: iload         4
      38: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      41: invokeinterface #21,  3           // InterfaceMethod com/google/common/collect/Table.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #13                 // class org/joyqueue/client/internal/consumer/domain/FetchMessageData
      49: areturn

  public void fetchPartitionAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, short, int, long, org.joyqueue.client.internal.consumer.callback.PartitionFetchListener);
    Code:
       0: invokestatic  #17                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       3: astore        9
       5: aload         9
       7: aload_2
       8: iload         4
      10: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      13: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: aload_1
      21: aload         9
      23: aload_3
      24: iload         5
      26: lload         6
      28: new           #22                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$2
      31: dup
      32: aload_0
      33: aload_2
      34: iload         4
      36: aload         8
      38: invokespecial #23                 // Method org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$2."<init>":(Lorg/joyqueue/client/internal/consumer/support/DefaultMessageFetcher;Ljava/lang/String;SLorg/joyqueue/client/internal/consumer/callback/PartitionFetchListener;)V
      41: invokevirtual #24                 // Method batchFetchPartitionsAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Map;Ljava/lang/String;IJLorg/joyqueue/client/internal/consumer/callback/BatchPartitionFetchListener;)V
      44: return

  public org.joyqueue.client.internal.consumer.domain.FetchMessageData fetchPartition(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, short, long, int, long);
    Code:
       0: invokestatic  #25                 // Method com/google/common/collect/HashBasedTable.create:()Lcom/google/common/collect/HashBasedTable;
       3: astore        10
       5: aload         10
       7: aload_2
       8: iload         4
      10: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      13: lload         5
      15: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: invokeinterface #27,  4           // InterfaceMethod com/google/common/collect/Table.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: aload_1
      26: aload         10
      28: aload_3
      29: iload         7
      31: lload         8
      33: invokevirtual #28                 // Method batchFetchPartitions:(Lorg/joyqueue/network/domain/BrokerNode;Lcom/google/common/collect/Table;Ljava/lang/String;IJ)Lcom/google/common/collect/Table;
      36: astore        11
      38: aload         11
      40: aload_2
      41: iload         4
      43: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      46: invokeinterface #21,  3           // InterfaceMethod com/google/common/collect/Table.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #13                 // class org/joyqueue/client/internal/consumer/domain/FetchMessageData
      54: areturn

  public void fetchPartitionAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, short, long, int, long, org.joyqueue.client.internal.consumer.callback.PartitionFetchListener);
    Code:
       0: invokestatic  #25                 // Method com/google/common/collect/HashBasedTable.create:()Lcom/google/common/collect/HashBasedTable;
       3: astore        11
       5: aload         11
       7: aload_2
       8: iload         4
      10: invokestatic  #18                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      13: lload         5
      15: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: invokeinterface #27,  4           // InterfaceMethod com/google/common/collect/Table.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: aload_1
      26: aload         11
      28: aload_3
      29: iload         7
      31: lload         8
      33: new           #29                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$3
      36: dup
      37: aload_0
      38: aload_2
      39: iload         4
      41: aload         10
      43: invokespecial #30                 // Method org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$3."<init>":(Lorg/joyqueue/client/internal/consumer/support/DefaultMessageFetcher;Ljava/lang/String;SLorg/joyqueue/client/internal/consumer/callback/PartitionFetchListener;)V
      46: invokevirtual #31                 // Method batchFetchPartitionsAsync:(Lorg/joyqueue/network/domain/BrokerNode;Lcom/google/common/collect/Table;Ljava/lang/String;IJLorg/joyqueue/client/internal/consumer/callback/BatchPartitionFetchListener;)V
      49: return

  public java.util.Map<java.lang.String, org.joyqueue.client.internal.consumer.domain.FetchMessageData> batchFetch(org.joyqueue.network.domain.BrokerNode, java.util.List<java.lang.String>, java.lang.String, int, long, long, long);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       8: aload_1
       9: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      12: astore        11
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         11
      20: invokevirtual #34                 // Method handleAddConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      23: aload         11
      25: aload_2
      26: aload_3
      27: iload         4
      29: lload         5
      31: lload         7
      33: lload         9
      35: invokevirtual #35                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.fetchTopicMessage:(Ljava/util/List;Ljava/lang/String;IJJJ)Lorg/joyqueue/network/command/FetchTopicMessageResponse;
      38: astore        12
      40: aload_3
      41: aload         12
      43: invokevirtual #36                 // Method org/joyqueue/network/command/FetchTopicMessageResponse.getData:()Ljava/util/Map;
      46: invokestatic  #37                 // Method org/joyqueue/client/internal/consumer/converter/BrokerMessageConverter.convert:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
      49: areturn

  public void batchFetchAsync(org.joyqueue.network.domain.BrokerNode, java.util.List<java.lang.String>, java.lang.String, int, long, long, long, org.joyqueue.client.internal.consumer.callback.BatchFetchListener);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       8: aload_1
       9: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      12: astore        12
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         12
      20: invokevirtual #34                 // Method handleAddConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      23: aload         12
      25: aload_2
      26: aload_3
      27: iload         4
      29: lload         5
      31: lload         7
      33: lload         9
      35: new           #38                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$4
      38: dup
      39: aload_0
      40: aload_3
      41: aload         11
      43: invokespecial #39                 // Method org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$4."<init>":(Lorg/joyqueue/client/internal/consumer/support/DefaultMessageFetcher;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/callback/BatchFetchListener;)V
      46: invokevirtual #40                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.asyncFetchTopicMessage:(Ljava/util/List;Ljava/lang/String;IJJJLorg/joyqueue/network/transport/command/CommandCallback;)V
      49: goto          63
      52: astore        13
      54: aload         11
      56: aload         13
      58: invokeinterface #42,  2           // InterfaceMethod org/joyqueue/client/internal/consumer/callback/BatchFetchListener.onException:(Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
          23    49    52   Class org/joyqueue/client/internal/exception/ClientException

  public com.google.common.collect.Table<java.lang.String, java.lang.Short, org.joyqueue.client.internal.consumer.domain.FetchMessageData> batchFetchPartitions(org.joyqueue.network.domain.BrokerNode, java.util.Map<java.lang.String, java.lang.Short>, java.lang.String, int, long);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       8: aload_1
       9: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      12: astore        7
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: aload_3
      23: aload         7
      25: invokevirtual #34                 // Method handleAddConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      28: aload         7
      30: aload_2
      31: aload_3
      32: iload         4
      34: lload         5
      36: invokevirtual #44                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.fetchPartitionMessage:(Ljava/util/Map;Ljava/lang/String;IJ)Lorg/joyqueue/network/command/FetchPartitionMessageResponse;
      39: astore        8
      41: aload_3
      42: aload         8
      44: invokevirtual #45                 // Method org/joyqueue/network/command/FetchPartitionMessageResponse.getData:()Lcom/google/common/collect/Table;
      47: invokestatic  #46                 // Method org/joyqueue/client/internal/consumer/converter/BrokerMessageConverter.convert:(Ljava/lang/String;Lcom/google/common/collect/Table;)Lcom/google/common/collect/Table;
      50: areturn

  public void batchFetchPartitionsAsync(org.joyqueue.network.domain.BrokerNode, java.util.Map<java.lang.String, java.lang.Short>, java.lang.String, int, long, org.joyqueue.client.internal.consumer.callback.BatchPartitionFetchListener);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       8: aload_1
       9: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      12: astore        8
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: aload_3
      23: aload         8
      25: invokevirtual #34                 // Method handleAddConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      28: aload         8
      30: aload_2
      31: aload_3
      32: iload         4
      34: lload         5
      36: new           #47                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$5
      39: dup
      40: aload_0
      41: aload_3
      42: aload         7
      44: invokespecial #48                 // Method org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$5."<init>":(Lorg/joyqueue/client/internal/consumer/support/DefaultMessageFetcher;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/callback/BatchPartitionFetchListener;)V
      47: invokevirtual #49                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.asyncFetchPartitionMessage:(Ljava/util/Map;Ljava/lang/String;IJLorg/joyqueue/network/transport/command/CommandCallback;)V
      50: return

  public com.google.common.collect.Table<java.lang.String, java.lang.Short, org.joyqueue.client.internal.consumer.domain.FetchMessageData> batchFetchPartitions(org.joyqueue.network.domain.BrokerNode, com.google.common.collect.Table<java.lang.String, java.lang.Short, java.lang.Long>, java.lang.String, int, long);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       8: aload_1
       9: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      12: astore        7
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokeinterface #50,  1           // InterfaceMethod com/google/common/collect/Table.rowKeySet:()Ljava/util/Set;
      22: aload_3
      23: aload         7
      25: invokevirtual #34                 // Method handleAddConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      28: aload         7
      30: aload_2
      31: aload_3
      32: iload         4
      34: lload         5
      36: invokevirtual #51                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.fetchPartitionMessage:(Lcom/google/common/collect/Table;Ljava/lang/String;IJ)Lorg/joyqueue/network/command/FetchPartitionMessageResponse;
      39: astore        8
      41: aload_3
      42: aload         8
      44: invokevirtual #45                 // Method org/joyqueue/network/command/FetchPartitionMessageResponse.getData:()Lcom/google/common/collect/Table;
      47: invokestatic  #46                 // Method org/joyqueue/client/internal/consumer/converter/BrokerMessageConverter.convert:(Ljava/lang/String;Lcom/google/common/collect/Table;)Lcom/google/common/collect/Table;
      50: areturn

  public void batchFetchPartitionsAsync(org.joyqueue.network.domain.BrokerNode, com.google.common.collect.Table<java.lang.String, java.lang.Short, java.lang.Long>, java.lang.String, int, long, org.joyqueue.client.internal.consumer.callback.BatchPartitionFetchListener);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method checkState:()V
       4: aload_0
       5: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       8: aload_1
       9: invokevirtual #33                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getOrCreateClient:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;
      12: astore        8
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokeinterface #50,  1           // InterfaceMethod com/google/common/collect/Table.rowKeySet:()Ljava/util/Set;
      22: aload_3
      23: aload         8
      25: invokevirtual #34                 // Method handleAddConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Collection;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClient;)V
      28: aload         8
      30: aload_2
      31: aload_3
      32: iload         4
      34: lload         5
      36: new           #52                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$6
      39: dup
      40: aload_0
      41: aload_3
      42: aload         7
      44: invokespecial #53                 // Method org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher$6."<init>":(Lorg/joyqueue/client/internal/consumer/support/DefaultMessageFetcher;Ljava/lang/String;Lorg/joyqueue/client/internal/consumer/callback/BatchPartitionFetchListener;)V
      47: invokevirtual #54                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.asyncFetchPartitionMessage:(Lcom/google/common/collect/Table;Ljava/lang/String;IJLorg/joyqueue/network/transport/command/CommandCallback;)V
      50: return

  protected void checkState();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method isStarted:()Z
       4: ifne          23
       7: new           #41                 // class org/joyqueue/client/internal/exception/ClientException
      10: dup
      11: ldc           #56                 // String fetcher is not started
      13: getstatic     #57                 // Field org/joyqueue/exception/JoyQueueCode.CN_SERVICE_NOT_AVAILABLE:Lorg/joyqueue/exception/JoyQueueCode;
      16: invokevirtual #58                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      19: invokespecial #59                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/String;I)V
      22: athrow
      23: return

  protected void handleAddConsumers(org.joyqueue.network.domain.BrokerNode, java.util.Collection<java.lang.String>, java.lang.String, org.joyqueue.client.internal.consumer.transport.ConsumerClient);
    Code:
       0: aload         4
       2: aload_2
       3: aload_3
       4: invokevirtual #60                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.addConsumers:(Ljava/util/Collection;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      11: aload_1
      12: invokevirtual #61                 // Method org/joyqueue/client/internal/transport/ConnectionState.addBrokerNode:(Lorg/joyqueue/network/domain/BrokerNode;)Z
      15: pop
      16: aload_0
      17: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      20: aload_2
      21: invokevirtual #62                 // Method org/joyqueue/client/internal/transport/ConnectionState.addTopics:(Ljava/util/Collection;)Z
      24: pop
      25: aload_0
      26: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      29: aload_3
      30: invokevirtual #63                 // Method org/joyqueue/client/internal/transport/ConnectionState.addApp:(Ljava/lang/String;)Z
      33: pop
      34: return

  protected void doStop();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method handleRemoveConsumers:()V
       4: return

  protected void handleRemoveConsumers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
       4: invokevirtual #65                 // Method org/joyqueue/client/internal/transport/ConnectionState.getBrokerNodes:()Ljava/util/Set;
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      12: invokevirtual #66                 // Method org/joyqueue/client/internal/transport/ConnectionState.getTopics:()Ljava/util/Set;
      15: astore_2
      16: aload_0
      17: getfield      #4                  // Field connectionState:Lorg/joyqueue/client/internal/transport/ConnectionState;
      20: invokevirtual #67                 // Method org/joyqueue/client/internal/transport/ConnectionState.getApps:()Ljava/util/Set;
      23: astore_3
      24: aload_1
      25: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          65
      42: aload         4
      44: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #71                 // class org/joyqueue/network/domain/BrokerNode
      52: astore        5
      54: aload_0
      55: aload         5
      57: aload_2
      58: aload_3
      59: invokevirtual #72                 // Method handleRemoveConsumers:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/util/Set;Ljava/util/Set;)V
      62: goto          32
      65: return

  protected void handleRemoveConsumers(org.joyqueue.network.domain.BrokerNode, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       4: aload_1
       5: invokevirtual #73                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.getClientGroup:(Lorg/joyqueue/network/domain/BrokerNode;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientGroup;
       8: astore        4
      10: aload         4
      12: ifnonnull     16
      15: return
      16: aload_3
      17: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          158
      34: aload         5
      36: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #9                  // class java/lang/String
      44: astore        6
      46: aload         4
      48: invokevirtual #74                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientGroup.getClients:()Ljava/util/List;
      51: invokeinterface #75,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        7
      58: aload         7
      60: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          155
      68: aload         7
      70: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #76                 // class org/joyqueue/client/internal/consumer/transport/ConsumerClient
      78: astore        8
      80: aload         8
      82: aload_2
      83: aload         6
      85: invokevirtual #77                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClient.removeConsumers:(Ljava/util/Collection;Ljava/lang/String;)V
      88: goto          152
      91: astore        9
      93: getstatic     #79                 // Field logger:Lorg/slf4j/Logger;
      96: ldc           #80                 // String remove consumers exception, topics: {}, app: {}, exception: {}
      98: iconst_3
      99: anewarray     #81                 // class java/lang/Object
     102: dup
     103: iconst_0
     104: aload_2
     105: aastore
     106: dup
     107: iconst_1
     108: aload         6
     110: aastore
     111: dup
     112: iconst_2
     113: aload         9
     115: invokevirtual #82                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     118: aastore
     119: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     124: getstatic     #79                 // Field logger:Lorg/slf4j/Logger;
     127: ldc           #84                 // String remove consumers exception, topics: {}, app: {}
     129: iconst_3
     130: anewarray     #81                 // class java/lang/Object
     133: dup
     134: iconst_0
     135: aload_2
     136: aastore
     137: dup
     138: iconst_1
     139: aload         6
     141: aastore
     142: dup
     143: iconst_2
     144: aload         9
     146: aastore
     147: invokeinterface #85,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     152: goto          58
     155: goto          24
     158: return
    Exception table:
       from    to  target type
          80    88    91   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #86                 // class org/joyqueue/client/internal/consumer/support/DefaultMessageFetcher
       2: invokestatic  #87                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #79                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
