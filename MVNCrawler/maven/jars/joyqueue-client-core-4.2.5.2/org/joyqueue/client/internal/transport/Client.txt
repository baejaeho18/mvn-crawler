Compiled from "Client.java"
public class org.joyqueue.client.internal.transport.Client extends org.joyqueue.toolkit.service.Service {
  protected static final org.slf4j.Logger logger;

  private org.joyqueue.network.domain.BrokerNode node;

  private org.joyqueue.client.internal.transport.config.TransportConfig transportConfig;

  private org.joyqueue.network.transport.TransportClient transportClient;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.network.transport.Transport transport;

  private org.joyqueue.client.internal.transport.ClientConnectionState connectionState;

  private java.util.List<org.joyqueue.toolkit.concurrent.EventListener<org.joyqueue.network.event.TransportEvent>> listeners;

  public org.joyqueue.client.internal.transport.Client(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.transport.config.TransportConfig, org.joyqueue.network.transport.TransportClient, org.joyqueue.client.internal.nameserver.NameServerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Lists.newCopyOnWriteArrayList:()Ljava/util/concurrent/CopyOnWriteArrayList;
       8: putfield      #3                  // Field listeners:Ljava/util/List;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      26: aload_0
      27: aload         4
      29: putfield      #7                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      32: aload_0
      33: new           #8                  // class org/joyqueue/client/internal/transport/ClientConnectionState
      36: dup
      37: aload         4
      39: aload_0
      40: invokespecial #9                  // Method org/joyqueue/client/internal/transport/ClientConnectionState."<init>":(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/transport/Client;)V
      43: putfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
      46: return

  public void heartbeat(long);
    Code:
       0: aload_0
       1: new           #11                 // class org/joyqueue/network/transport/command/JoyQueueCommand
       4: dup
       5: new           #12                 // class org/joyqueue/network/command/HeartbeatRequest
       8: dup
       9: invokespecial #13                 // Method org/joyqueue/network/command/HeartbeatRequest."<init>":()V
      12: invokespecial #14                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      15: lload_1
      16: invokevirtual #15                 // Method sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      19: pop
      20: return

  public java.util.concurrent.Future<org.joyqueue.network.transport.command.Command> async(org.joyqueue.network.transport.command.Command, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #16                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.updateUseTime:()V
       7: aload_0
       8: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      11: aload_1
      12: lload_2
      13: invokeinterface #18,  4           // InterfaceMethod org/joyqueue/network/transport/Transport.async:(Lorg/joyqueue/network/transport/command/Command;J)Ljava/util/concurrent/CompletableFuture;
      18: areturn
      19: astore        4
      21: new           #20                 // class org/joyqueue/client/internal/exception/ClientException
      24: dup
      25: aload         4
      27: invokespecial #21                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/lang/Exception

  public java.util.concurrent.Future<org.joyqueue.network.transport.command.Command> async(org.joyqueue.network.transport.command.Command);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       6: invokevirtual #22                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getSendTimeout:()I
       9: i2l
      10: invokevirtual #23                 // Method async:(Lorg/joyqueue/network/transport/command/Command;J)Ljava/util/concurrent/Future;
      13: areturn

  public void async(org.joyqueue.network.transport.command.Command, long, org.joyqueue.network.transport.command.CommandCallback);
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #16                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.updateUseTime:()V
       7: aload_0
       8: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      11: aload_1
      12: lload_2
      13: new           #24                 // class org/joyqueue/client/internal/transport/Client$1
      16: dup
      17: aload_0
      18: aload         4
      20: invokespecial #25                 // Method org/joyqueue/client/internal/transport/Client$1."<init>":(Lorg/joyqueue/client/internal/transport/Client;Lorg/joyqueue/network/transport/command/CommandCallback;)V
      23: invokeinterface #26,  5           // InterfaceMethod org/joyqueue/network/transport/Transport.async:(Lorg/joyqueue/network/transport/command/Command;JLorg/joyqueue/network/transport/command/CommandCallback;)V
      28: goto          43
      31: astore        5
      33: new           #20                 // class org/joyqueue/client/internal/exception/ClientException
      36: dup
      37: aload         5
      39: invokespecial #21                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      42: athrow
      43: return
    Exception table:
       from    to  target type
           0    28    31   Class java/lang/Exception

  public void async(org.joyqueue.network.transport.command.Command, org.joyqueue.network.transport.command.CommandCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       6: invokevirtual #22                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getSendTimeout:()I
       9: i2l
      10: aload_2
      11: invokevirtual #27                 // Method async:(Lorg/joyqueue/network/transport/command/Command;JLorg/joyqueue/network/transport/command/CommandCallback;)V
      14: return

  public void oneway(org.joyqueue.network.transport.command.Command, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #16                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.updateUseTime:()V
       7: aload_0
       8: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      11: aload_1
      12: lload_2
      13: invokeinterface #28,  4           // InterfaceMethod org/joyqueue/network/transport/Transport.oneway:(Lorg/joyqueue/network/transport/command/Command;J)V
      18: goto          33
      21: astore        4
      23: new           #20                 // class org/joyqueue/client/internal/exception/ClientException
      26: dup
      27: aload         4
      29: invokespecial #21                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
      33: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Exception

  public org.joyqueue.network.transport.command.Command sync(org.joyqueue.network.transport.command.Command, long);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       7: invokevirtual #16                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.updateUseTime:()V
      10: aload_0
      11: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      14: aload_1
      15: lload_2
      16: invokeinterface #29,  4           // InterfaceMethod org/joyqueue/network/transport/Transport.sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      21: astore        4
      23: goto          38
      26: astore        5
      28: new           #20                 // class org/joyqueue/client/internal/exception/ClientException
      31: dup
      32: aload         5
      34: invokespecial #21                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: aload         4
      40: invokevirtual #30                 // Method org/joyqueue/network/transport/command/Command.isSuccess:()Z
      43: ifne          74
      46: new           #20                 // class org/joyqueue/client/internal/exception/ClientException
      49: dup
      50: aload         4
      52: invokevirtual #31                 // Method org/joyqueue/network/transport/command/Command.getHeader:()Lorg/joyqueue/network/transport/command/Header;
      55: invokeinterface #32,  1           // InterfaceMethod org/joyqueue/network/transport/command/Header.getError:()Ljava/lang/String;
      60: aload         4
      62: invokevirtual #31                 // Method org/joyqueue/network/transport/command/Command.getHeader:()Lorg/joyqueue/network/transport/command/Header;
      65: invokeinterface #33,  1           // InterfaceMethod org/joyqueue/network/transport/command/Header.getStatus:()I
      70: invokespecial #34                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/String;I)V
      73: athrow
      74: aload         4
      76: areturn
    Exception table:
       from    to  target type
           3    23    26   Class java/lang/Exception

  public org.joyqueue.network.transport.command.Command sync(org.joyqueue.network.transport.command.Command);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       6: invokevirtual #22                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getSendTimeout:()I
       9: i2l
      10: invokevirtual #15                 // Method sync:(Lorg/joyqueue/network/transport/command/Command;J)Lorg/joyqueue/network/transport/command/Command;
      13: areturn

  public void handleAddConnection();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #35                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.handleAddConnection:()V
       7: return

  public void handleDisconnection();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #36                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.handleDisconnection:()V
       7: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
       4: invokevirtual #37                 // Method org/joyqueue/network/domain/BrokerNode.getPort:()I
       7: ifgt          41
      10: aload_0
      11: aload_0
      12: getfield      #6                  // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      15: aload_0
      16: getfield      #4                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
      19: invokevirtual #38                 // Method org/joyqueue/network/domain/BrokerNode.getHost:()Ljava/lang/String;
      22: aload_0
      23: getfield      #5                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      26: invokevirtual #22                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getSendTimeout:()I
      29: i2l
      30: invokeinterface #39,  4           // InterfaceMethod org/joyqueue/network/transport/TransportClient.createTransport:(Ljava/lang/String;J)Lorg/joyqueue/network/transport/Transport;
      35: putfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      38: goto          83
      41: aload_0
      42: aload_0
      43: getfield      #6                  // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      46: new           #40                 // class java/net/InetSocketAddress
      49: dup
      50: aload_0
      51: getfield      #4                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
      54: invokevirtual #38                 // Method org/joyqueue/network/domain/BrokerNode.getHost:()Ljava/lang/String;
      57: aload_0
      58: getfield      #4                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
      61: invokevirtual #37                 // Method org/joyqueue/network/domain/BrokerNode.getPort:()I
      64: invokespecial #41                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      67: aload_0
      68: getfield      #5                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      71: invokevirtual #22                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getSendTimeout:()I
      74: i2l
      75: invokeinterface #42,  4           // InterfaceMethod org/joyqueue/network/transport/TransportClient.createTransport:(Ljava/net/SocketAddress;J)Lorg/joyqueue/network/transport/Transport;
      80: putfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      83: aload_0
      84: invokevirtual #43                 // Method handleAddConnection:()V
      87: aload_0
      88: new           #44                 // class org/joyqueue/client/internal/transport/ClientConnectionListener
      91: dup
      92: aload_0
      93: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      96: aload_0
      97: invokespecial #45                 // Method org/joyqueue/client/internal/transport/ClientConnectionListener."<init>":(Lorg/joyqueue/network/transport/Transport;Lorg/joyqueue/client/internal/transport/Client;)V
     100: invokevirtual #46                 // Method addListener:(Lorg/joyqueue/toolkit/concurrent/EventListener;)V
     103: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
       4: ifnull        16
       7: aload_0
       8: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      11: invokeinterface #47,  1           // InterfaceMethod org/joyqueue/network/transport/Transport.stop:()V
      16: aload_0
      17: getfield      #3                  // Field listeners:Ljava/util/List;
      20: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          58
      35: aload_1
      36: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #51                 // class org/joyqueue/toolkit/concurrent/EventListener
      44: astore_2
      45: aload_0
      46: getfield      #6                  // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      49: aload_2
      50: invokeinterface #52,  2           // InterfaceMethod org/joyqueue/network/transport/TransportClient.removeListener:(Lorg/joyqueue/toolkit/concurrent/EventListener;)V
      55: goto          26
      58: return

  public org.joyqueue.client.internal.transport.ClientState getState();
    Code:
       0: getstatic     #53                 // Field org/joyqueue/client/internal/transport/Client$2.$SwitchMap$org$joyqueue$network$transport$TransportState:[I
       3: aload_0
       4: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
       7: invokeinterface #54,  1           // InterfaceMethod org/joyqueue/network/transport/Transport.state:()Lorg/joyqueue/network/transport/TransportState;
      12: invokevirtual #55                 // Method org/joyqueue/network/transport/TransportState.ordinal:()I
      15: iaload
      16: lookupswitch  { // 2
                     1: 44
                     2: 48
               default: 52
          }
      44: getstatic     #56                 // Field org/joyqueue/client/internal/transport/ClientState.CONNECTED:Lorg/joyqueue/client/internal/transport/ClientState;
      47: areturn
      48: getstatic     #57                 // Field org/joyqueue/client/internal/transport/ClientState.DISCONNECTED:Lorg/joyqueue/client/internal/transport/ClientState;
      51: areturn
      52: new           #58                 // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #59                 // String unknown state, %s
      58: iconst_1
      59: anewarray     #60                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
      68: invokeinterface #54,  1           // InterfaceMethod org/joyqueue/network/transport/Transport.state:()Lorg/joyqueue/network/transport/TransportState;
      73: aastore
      74: invokestatic  #61                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      77: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow

  public org.joyqueue.client.internal.transport.ClientConnectionInfo getConnectionInfo();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #63                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.getConnectionInfo:()Lorg/joyqueue/client/internal/transport/ClientConnectionInfo;
       7: areturn

  public org.joyqueue.network.transport.TransportAttribute getAttribute();
    Code:
       0: aload_0
       1: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
       4: invokeinterface #64,  1           // InterfaceMethod org/joyqueue/network/transport/Transport.attr:()Lorg/joyqueue/network/transport/TransportAttribute;
       9: areturn

  public org.joyqueue.network.transport.Transport getTransport();
    Code:
       0: aload_0
       1: getfield      #17                 // Field transport:Lorg/joyqueue/network/transport/Transport;
       4: areturn

  public long getLastUseTime();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionState:Lorg/joyqueue/client/internal/transport/ClientConnectionState;
       4: invokevirtual #65                 // Method org/joyqueue/client/internal/transport/ClientConnectionState.getLastUseTime:()J
       7: lreturn

  public void addListener(org.joyqueue.toolkit.concurrent.EventListener<org.joyqueue.network.event.TransportEvent>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #6                  // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      15: aload_1
      16: invokeinterface #67,  2           // InterfaceMethod org/joyqueue/network/transport/TransportClient.addListener:(Lorg/joyqueue/toolkit/concurrent/EventListener;)V
      21: return

  public void removeListener(org.joyqueue.toolkit.concurrent.EventListener<org.joyqueue.network.event.TransportEvent>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #68,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #6                  // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      15: aload_1
      16: invokeinterface #52,  2           // InterfaceMethod org/joyqueue/network/transport/TransportClient.removeListener:(Lorg/joyqueue/toolkit/concurrent/EventListener;)V
      21: return

  static {};
    Code:
       0: ldc           #69                 // class org/joyqueue/client/internal/transport/Client
       2: invokestatic  #70                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #71                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
