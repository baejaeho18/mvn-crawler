Compiled from "ClientConnectionState.java"
public class org.joyqueue.client.internal.transport.ClientConnectionState {
  protected static final org.slf4j.Logger logger;

  private static final java.lang.String CONNECTION_INFO_KEY;

  private static final java.util.concurrent.atomic.AtomicLong SEQUENCE;

  private static final java.lang.String CLIENT_IP;

  private static final java.lang.String CLIENT_VERSION;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.client.internal.transport.Client client;

  private volatile long lastUseTime;

  public org.joyqueue.client.internal.transport.ClientConnectionState(org.joyqueue.client.internal.nameserver.NameServerConfig, org.joyqueue.client.internal.transport.Client);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
      14: return

  public void handleAddConnection();
    Code:
       0: new           #4                  // class org/joyqueue/network/command/AddConnectionRequest
       3: dup
       4: invokespecial #5                  // Method org/joyqueue/network/command/AddConnectionRequest."<init>":()V
       7: astore_1
       8: new           #6                  // class org/joyqueue/network/session/ClientId
      11: dup
      12: invokespecial #7                  // Method org/joyqueue/network/session/ClientId."<init>":()V
      15: astore_2
      16: aload_0
      17: getfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      20: invokevirtual #8                  // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      23: ldc           #9                  // String .
      25: invokevirtual #10                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      28: ifeq          52
      31: aload_1
      32: aload_0
      33: getfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      36: invokevirtual #8                  // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      39: ldc           #11                 // String \\.
      41: invokevirtual #12                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      44: iconst_0
      45: aaload
      46: invokevirtual #13                 // Method org/joyqueue/network/command/AddConnectionRequest.setApp:(Ljava/lang/String;)V
      49: goto          63
      52: aload_1
      53: aload_0
      54: getfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      57: invokevirtual #8                  // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      60: invokevirtual #13                 // Method org/joyqueue/network/command/AddConnectionRequest.setApp:(Ljava/lang/String;)V
      63: aload_1
      64: aload_0
      65: getfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      68: invokevirtual #14                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getToken:()Ljava/lang/String;
      71: invokevirtual #15                 // Method org/joyqueue/network/command/AddConnectionRequest.setToken:(Ljava/lang/String;)V
      74: aload_1
      75: aload_0
      76: getfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      79: invokevirtual #16                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getRegion:()Ljava/lang/String;
      82: invokevirtual #17                 // Method org/joyqueue/network/command/AddConnectionRequest.setRegion:(Ljava/lang/String;)V
      85: aload_1
      86: aload_0
      87: getfield      #2                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      90: invokevirtual #18                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getNamespace:()Ljava/lang/String;
      93: invokevirtual #19                 // Method org/joyqueue/network/command/AddConnectionRequest.setNamespace:(Ljava/lang/String;)V
      96: aload_1
      97: getstatic     #20                 // Field org/joyqueue/network/session/Language.JAVA:Lorg/joyqueue/network/session/Language;
     100: invokevirtual #21                 // Method org/joyqueue/network/command/AddConnectionRequest.setLanguage:(Lorg/joyqueue/network/session/Language;)V
     103: aload_2
     104: getstatic     #22                 // Field CLIENT_VERSION:Ljava/lang/String;
     107: invokevirtual #23                 // Method org/joyqueue/network/session/ClientId.setVersion:(Ljava/lang/String;)V
     110: aload_2
     111: getstatic     #24                 // Field CLIENT_IP:Ljava/lang/String;
     114: invokevirtual #25                 // Method org/joyqueue/network/session/ClientId.setIp:(Ljava/lang/String;)V
     117: aload_2
     118: invokestatic  #26                 // Method org/joyqueue/toolkit/time/SystemClock.now:()J
     121: invokevirtual #27                 // Method org/joyqueue/network/session/ClientId.setTime:(J)V
     124: aload_2
     125: getstatic     #28                 // Field SEQUENCE:Ljava/util/concurrent/atomic/AtomicLong;
     128: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     131: invokevirtual #30                 // Method org/joyqueue/network/session/ClientId.setSequence:(J)V
     134: aload_1
     135: aload_2
     136: invokevirtual #31                 // Method org/joyqueue/network/command/AddConnectionRequest.setClientId:(Lorg/joyqueue/network/session/ClientId;)V
     139: aload_0
     140: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
     143: new           #32                 // class org/joyqueue/network/transport/command/JoyQueueCommand
     146: dup
     147: aload_1
     148: invokespecial #33                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
     151: invokevirtual #34                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;)Lorg/joyqueue/network/transport/command/Command;
     154: astore_3
     155: aload_3
     156: invokevirtual #35                 // Method org/joyqueue/network/transport/command/Command.getPayload:()Ljava/lang/Object;
     159: checkcast     #36                 // class org/joyqueue/network/command/AddConnectionResponse
     162: astore        4
     164: new           #37                 // class org/joyqueue/client/internal/transport/ClientConnectionInfo
     167: dup
     168: invokespecial #38                 // Method org/joyqueue/client/internal/transport/ClientConnectionInfo."<init>":()V
     171: astore        5
     173: aload         5
     175: aload         4
     177: invokevirtual #39                 // Method org/joyqueue/network/command/AddConnectionResponse.getConnectionId:()Ljava/lang/String;
     180: invokevirtual #40                 // Method org/joyqueue/client/internal/transport/ClientConnectionInfo.setConnectionId:(Ljava/lang/String;)V
     183: aload_0
     184: aload         4
     186: invokevirtual #41                 // Method handleNotification:(Lorg/joyqueue/network/command/AddConnectionResponse;)V
     189: aload_0
     190: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
     193: invokevirtual #42                 // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
     196: ldc           #44                 // String _CLIENT_CONNECTION_INFO_
     198: aload         5
     200: invokeinterface #45,  3           // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.set:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     205: pop
     206: goto          290
     209: astore_3
     210: aload_3
     211: invokevirtual #47                 // Method org/joyqueue/client/internal/exception/ClientException.getCode:()I
     214: istore        4
     216: aload_3
     217: invokevirtual #48                 // Method org/joyqueue/client/internal/exception/ClientException.getMessage:()Ljava/lang/String;
     220: astore        5
     222: iload         4
     224: getstatic     #49                 // Field org/joyqueue/exception/JoyQueueCode.CN_AUTHENTICATION_ERROR:Lorg/joyqueue/exception/JoyQueueCode;
     227: invokevirtual #50                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
     230: if_icmpne     247
     233: getstatic     #51                 // Field logger:Lorg/slf4j/Logger;
     236: ldc           #52                 // String client addConnection error, no permission, please check your app and token
     238: aload         5
     240: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     245: aload_3
     246: athrow
     247: getstatic     #51                 // Field logger:Lorg/slf4j/Logger;
     250: ldc           #54                 // String client addConnection error, app: {}, token: {}, code: {}, error: {}
     252: iconst_4
     253: anewarray     #55                 // class java/lang/Object
     256: dup
     257: iconst_0
     258: aload_1
     259: invokevirtual #56                 // Method org/joyqueue/network/command/AddConnectionRequest.getApp:()Ljava/lang/String;
     262: aastore
     263: dup
     264: iconst_1
     265: aload_1
     266: invokevirtual #57                 // Method org/joyqueue/network/command/AddConnectionRequest.getToken:()Ljava/lang/String;
     269: aastore
     270: dup
     271: iconst_2
     272: iload         4
     274: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     277: aastore
     278: dup
     279: iconst_3
     280: aload         5
     282: aastore
     283: invokeinterface #59,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     288: aload_3
     289: athrow
     290: return
    Exception table:
       from    to  target type
         139   206   209   Class org/joyqueue/client/internal/exception/ClientException

  protected void handleNotification(org.joyqueue.network.command.AddConnectionResponse);
    Code:
       0: aload_1
       1: invokevirtual #60                 // Method org/joyqueue/network/command/AddConnectionResponse.getNotification:()Ljava/lang/String;
       4: invokestatic  #61                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: aload_1
      13: invokevirtual #62                 // Method doHandleNotification:(Lorg/joyqueue/network/command/AddConnectionResponse;)V
      16: return

  protected void doHandleNotification(org.joyqueue.network.command.AddConnectionResponse);
    Code:
       0: getstatic     #51                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #63                 // String {}
       5: aload_1
       6: invokevirtual #60                 // Method org/joyqueue/network/command/AddConnectionResponse.getNotification:()Ljava/lang/String;
       9: invokeinterface #64,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public void handleDisconnection();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getConnectionInfo:()Lorg/joyqueue/client/internal/transport/ClientConnectionInfo;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: new           #66                 // class org/joyqueue/network/command/RemoveConnectionRequest
      13: dup
      14: invokespecial #67                 // Method org/joyqueue/network/command/RemoveConnectionRequest."<init>":()V
      17: astore_2
      18: aload_0
      19: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
      22: new           #32                 // class org/joyqueue/network/transport/command/JoyQueueCommand
      25: dup
      26: aload_2
      27: invokespecial #33                 // Method org/joyqueue/network/transport/command/JoyQueueCommand."<init>":(Lorg/joyqueue/network/transport/command/JoyQueuePayload;)V
      30: invokevirtual #34                 // Method org/joyqueue/client/internal/transport/Client.sync:(Lorg/joyqueue/network/transport/command/Command;)Lorg/joyqueue/network/transport/command/Command;
      33: astore_3
      34: aload_0
      35: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
      38: invokevirtual #42                 // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
      41: ldc           #44                 // String _CLIENT_CONNECTION_INFO_
      43: invokeinterface #68,  2           // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: goto          103
      52: astore_3
      53: getstatic     #51                 // Field logger:Lorg/slf4j/Logger;
      56: ldc           #70                 // String client removeConnection error, connection: {}
      58: aload_2
      59: aload_3
      60: invokeinterface #71,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
      69: invokevirtual #42                 // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
      72: ldc           #44                 // String _CLIENT_CONNECTION_INFO_
      74: invokeinterface #68,  2           // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          103
      83: astore        4
      85: aload_0
      86: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
      89: invokevirtual #42                 // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
      92: ldc           #44                 // String _CLIENT_CONNECTION_INFO_
      94: invokeinterface #68,  2           // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: aload         4
     102: athrow
     103: return
    Exception table:
       from    to  target type
          18    34    52   Class java/lang/Exception
          18    34    83   any
          52    65    83   any
          83    85    83   any

  public org.joyqueue.client.internal.transport.ClientConnectionInfo getConnectionInfo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field client:Lorg/joyqueue/client/internal/transport/Client;
       4: invokevirtual #42                 // Method org/joyqueue/client/internal/transport/Client.getAttribute:()Lorg/joyqueue/network/transport/TransportAttribute;
       7: ldc           #44                 // String _CLIENT_CONNECTION_INFO_
       9: invokeinterface #72,  2           // InterfaceMethod org/joyqueue/network/transport/TransportAttribute.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #37                 // class org/joyqueue/client/internal/transport/ClientConnectionInfo
      17: areturn

  public void updateUseTime();
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method org/joyqueue/toolkit/time/SystemClock.now:()J
       4: putfield      #73                 // Field lastUseTime:J
       7: return

  public long getLastUseTime();
    Code:
       0: aload_0
       1: getfield      #73                 // Field lastUseTime:J
       4: lreturn

  static {};
    Code:
       0: ldc           #43                 // class org/joyqueue/client/internal/transport/ClientConnectionState
       2: invokestatic  #74                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #51                 // Field logger:Lorg/slf4j/Logger;
       8: new           #75                 // class java/util/concurrent/atomic/AtomicLong
      11: dup
      12: invokespecial #76                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      15: putstatic     #28                 // Field SEQUENCE:Ljava/util/concurrent/atomic/AtomicLong;
      18: invokestatic  #77                 // Method org/joyqueue/toolkit/network/IpUtil.getLocalIp:()Ljava/lang/String;
      21: putstatic     #24                 // Field CLIENT_IP:Ljava/lang/String;
      24: getstatic     #78                 // Field org/joyqueue/client/internal/ClientConsts.VERSION:Ljava/lang/String;
      27: putstatic     #22                 // Field CLIENT_VERSION:Ljava/lang/String;
      30: return
}
