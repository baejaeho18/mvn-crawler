Compiled from "DefaultMessageProducer.java"
public class org.joyqueue.client.internal.producer.support.DefaultMessageProducer extends org.joyqueue.toolkit.service.Service implements org.joyqueue.client.internal.producer.MessageProducer {
  protected static final org.slf4j.Logger logger;

  private org.joyqueue.client.internal.producer.config.ProducerConfig config;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.client.internal.cluster.ClusterManager clusterManager;

  private org.joyqueue.client.internal.producer.transport.ProducerClientManager producerClientManager;

  private org.joyqueue.client.internal.producer.config.SenderConfig senderConfig;

  private org.joyqueue.client.internal.producer.MessageSender messageSender;

  private java.util.concurrent.atomic.AtomicLong transactionSequence;

  private org.joyqueue.client.internal.producer.support.MessageProducerInner messageProducerInner;

  private org.joyqueue.client.internal.producer.interceptor.ProducerInterceptorManager producerInterceptorManager;

  public org.joyqueue.client.internal.producer.support.DefaultMessageProducer(org.joyqueue.client.internal.producer.config.ProducerConfig, org.joyqueue.client.internal.nameserver.NameServerConfig, org.joyqueue.client.internal.cluster.ClusterManager, org.joyqueue.client.internal.producer.transport.ProducerClientManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: new           #2                  // class org/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager
       8: dup
       9: invokespecial #3                  // Method org/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager."<init>":()V
      12: putfield      #4                  // Field producerInterceptorManager:Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager;
      15: aload_1
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #5                  // String producer not null
      26: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      29: aload_2
      30: ifnull        37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #7                  // String nameServer not null
      40: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      43: aload_3
      44: ifnull        51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ldc           #8                  // String clusterManager not null
      54: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      57: aload         4
      59: ifnull        66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #9                  // String producerClientManager not null
      69: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      72: aload_1
      73: invokevirtual #10                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getApp:()Ljava/lang/String;
      76: invokestatic  #11                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
      79: ldc           #12                 // String producer.app not blank
      81: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      84: aload_1
      85: invokevirtual #13                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getRetryPolicy:()Lorg/joyqueue/toolkit/retry/RetryPolicy;
      88: ifnull        95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: ldc           #14                 // String producer.retryPolicy not null
      98: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     101: aload_1
     102: invokevirtual #15                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getQosLevel:()Lorg/joyqueue/domain/QosLevel;
     105: ifnull        112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: ldc           #16                 // String producer.qosLevel not null
     115: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     118: aload_0
     119: aload_1
     120: putfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
     123: aload_0
     124: aload_2
     125: putfield      #18                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
     128: aload_0
     129: aload_3
     130: putfield      #19                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
     133: aload_0
     134: aload         4
     136: putfield      #20                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
     139: return

  protected void validate() throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #21                 // class java/util/concurrent/atomic/AtomicLong
       4: dup
       5: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       8: putfield      #23                 // Field transactionSequence:Ljava/util/concurrent/atomic/AtomicLong;
      11: aload_0
      12: new           #24                 // class org/joyqueue/client/internal/producer/config/SenderConfig
      15: dup
      16: aload_0
      17: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      20: invokevirtual #25                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.isCompress:()Z
      23: aload_0
      24: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      27: invokevirtual #26                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getCompressThreshold:()I
      30: aload_0
      31: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      34: invokevirtual #27                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getCompressType:()Ljava/lang/String;
      37: aload_0
      38: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      41: invokevirtual #28                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.isBatch:()Z
      44: invokespecial #29                 // Method org/joyqueue/client/internal/producer/config/SenderConfig."<init>":(ZILjava/lang/String;Z)V
      47: putfield      #30                 // Field senderConfig:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      50: aload_0
      51: new           #31                 // class org/joyqueue/client/internal/producer/support/DefaultMessageSender
      54: dup
      55: aload_0
      56: getfield      #20                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      59: aload_0
      60: getfield      #30                 // Field senderConfig:Lorg/joyqueue/client/internal/producer/config/SenderConfig;
      63: invokespecial #32                 // Method org/joyqueue/client/internal/producer/support/DefaultMessageSender."<init>":(Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;Lorg/joyqueue/client/internal/producer/config/SenderConfig;)V
      66: putfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      69: aload_0
      70: new           #34                 // class org/joyqueue/client/internal/producer/support/MessageProducerInner
      73: dup
      74: aload_0
      75: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      78: aload_0
      79: getfield      #18                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      82: aload_0
      83: getfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      86: aload_0
      87: getfield      #19                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      90: aload_0
      91: getfield      #20                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      94: aload_0
      95: getfield      #4                  // Field producerInterceptorManager:Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager;
      98: invokespecial #35                 // Method org/joyqueue/client/internal/producer/support/MessageProducerInner."<init>":(Lorg/joyqueue/client/internal/producer/config/ProducerConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/producer/MessageSender;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager;)V
     101: putfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
     104: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: invokeinterface #37,  1           // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.start:()V
       9: aload_0
      10: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
      13: invokevirtual #38                 // Method org/joyqueue/client/internal/producer/support/MessageProducerInner.start:()V
      16: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
       4: ifnull        14
       7: aload_0
       8: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
      11: invokevirtual #39                 // Method org/joyqueue/client/internal/producer/support/MessageProducerInner.stop:()V
      14: aload_0
      15: getfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      18: ifnull        30
      21: aload_0
      22: getfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      25: invokeinterface #40,  1           // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.stop:()V
      30: return

  public org.joyqueue.client.internal.producer.domain.SendResult send(org.joyqueue.client.internal.producer.domain.ProduceMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #43                 // Method send:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;JLjava/util/concurrent/TimeUnit;)Lorg/joyqueue/client/internal/producer/domain/SendResult;
      15: areturn

  public org.joyqueue.client.internal.producer.domain.SendResult send(org.joyqueue.client.internal.producer.domain.ProduceMessage, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iconst_0
       6: aconst_null
       7: invokevirtual #44                 // Method doSend:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;JLjava/util/concurrent/TimeUnit;ZLorg/joyqueue/client/internal/producer/callback/AsyncProduceCallback;)Lorg/joyqueue/client/internal/producer/domain/SendResult;
      10: areturn

  public java.util.List<org.joyqueue.client.internal.producer.domain.SendResult> batchSend(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #45                 // Method batchSend:(Ljava/util/List;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      15: areturn

  public java.util.List<org.joyqueue.client.internal.producer.domain.SendResult> batchSend(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iconst_0
       6: aconst_null
       7: invokevirtual #46                 // Method doBatchSend:(Ljava/util/List;JLjava/util/concurrent/TimeUnit;ZLorg/joyqueue/client/internal/producer/callback/AsyncBatchProduceCallback;)Ljava/util/List;
      10: areturn

  public void sendOneway(org.joyqueue.client.internal.producer.domain.ProduceMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #47                 // Method sendOneway:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;JLjava/util/concurrent/TimeUnit;)V
      15: return

  public void sendOneway(org.joyqueue.client.internal.producer.domain.ProduceMessage, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iconst_1
       6: aconst_null
       7: invokevirtual #44                 // Method doSend:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;JLjava/util/concurrent/TimeUnit;ZLorg/joyqueue/client/internal/producer/callback/AsyncProduceCallback;)Lorg/joyqueue/client/internal/producer/domain/SendResult;
      10: pop
      11: return

  public void batchSendOneway(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #48                 // Method batchSendOneway:(Ljava/util/List;JLjava/util/concurrent/TimeUnit;)V
      15: return

  public void batchSendOneway(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iconst_1
       6: aconst_null
       7: invokevirtual #46                 // Method doBatchSend:(Ljava/util/List;JLjava/util/concurrent/TimeUnit;ZLorg/joyqueue/client/internal/producer/callback/AsyncBatchProduceCallback;)Ljava/util/List;
      10: pop
      11: return

  public java.util.concurrent.CompletableFuture<org.joyqueue.client.internal.producer.domain.SendResult> sendAsync(org.joyqueue.client.internal.producer.domain.ProduceMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #49                 // Method sendAsync:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public java.util.concurrent.CompletableFuture<org.joyqueue.client.internal.producer.domain.SendResult> sendAsync(org.joyqueue.client.internal.producer.domain.ProduceMessage, long, java.util.concurrent.TimeUnit);
    Code:
       0: new           #50                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #51                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore        5
       9: aload_0
      10: aload_1
      11: lload_2
      12: aload         4
      14: iconst_0
      15: new           #52                 // class org/joyqueue/client/internal/producer/callback/CompletableFutureAsyncProduceCallback
      18: dup
      19: aload         5
      21: invokespecial #53                 // Method org/joyqueue/client/internal/producer/callback/CompletableFutureAsyncProduceCallback."<init>":(Ljava/util/concurrent/CompletableFuture;)V
      24: invokevirtual #44                 // Method doSend:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;JLjava/util/concurrent/TimeUnit;ZLorg/joyqueue/client/internal/producer/callback/AsyncProduceCallback;)Lorg/joyqueue/client/internal/producer/domain/SendResult;
      27: pop
      28: aload         5
      30: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.producer.domain.SendResult>> batchSendAsync(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #41                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #54                 // Method batchSendAsync:(Ljava/util/List;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
      15: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<org.joyqueue.client.internal.producer.domain.SendResult>> batchSendAsync(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, long, java.util.concurrent.TimeUnit);
    Code:
       0: new           #50                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #51                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore        5
       9: aload_0
      10: aload_1
      11: lload_2
      12: aload         4
      14: iconst_0
      15: new           #55                 // class org/joyqueue/client/internal/producer/callback/CompletableFutureAsyncBatchProduceCallback
      18: dup
      19: aload         5
      21: invokespecial #56                 // Method org/joyqueue/client/internal/producer/callback/CompletableFutureAsyncBatchProduceCallback."<init>":(Ljava/util/concurrent/CompletableFuture;)V
      24: invokevirtual #46                 // Method doBatchSend:(Ljava/util/List;JLjava/util/concurrent/TimeUnit;ZLorg/joyqueue/client/internal/producer/callback/AsyncBatchProduceCallback;)Ljava/util/List;
      27: pop
      28: aload         5
      30: areturn

  protected org.joyqueue.client.internal.producer.domain.SendResult doSend(org.joyqueue.client.internal.producer.domain.ProduceMessage, long, java.util.concurrent.TimeUnit, boolean, org.joyqueue.client.internal.producer.callback.AsyncProduceCallback);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method checkState:()V
       4: aload_0
       5: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
       8: aload_1
       9: aconst_null
      10: lload_2
      11: aload         4
      13: iload         5
      15: aload_0
      16: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      19: invokevirtual #58                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.isFailover:()Z
      22: aload         6
      24: invokevirtual #59                 // Method org/joyqueue/client/internal/producer/support/MessageProducerInner.send:(Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;Ljava/lang/String;JLjava/util/concurrent/TimeUnit;ZZLorg/joyqueue/client/internal/producer/callback/AsyncProduceCallback;)Lorg/joyqueue/client/internal/producer/domain/SendResult;
      27: areturn

  protected java.util.List<org.joyqueue.client.internal.producer.domain.SendResult> doBatchSend(java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, long, java.util.concurrent.TimeUnit, boolean, org.joyqueue.client.internal.producer.callback.AsyncBatchProduceCallback);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method checkState:()V
       4: aload_0
       5: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
       8: aload_1
       9: aconst_null
      10: lload_2
      11: aload         4
      13: iload         5
      15: aload_0
      16: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      19: invokevirtual #58                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.isFailover:()Z
      22: aload         6
      24: invokevirtual #60                 // Method org/joyqueue/client/internal/producer/support/MessageProducerInner.batchSend:(Ljava/util/List;Ljava/lang/String;JLjava/util/concurrent/TimeUnit;ZZLorg/joyqueue/client/internal/producer/callback/AsyncBatchProduceCallback;)Ljava/util/List;
      27: areturn

  public org.joyqueue.client.internal.producer.TransactionMessageProducer beginTransaction();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       5: invokevirtual #61                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTransactionTimeout:()J
       8: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #62                 // Method beginTransaction:(JLjava/util/concurrent/TimeUnit;)Lorg/joyqueue/client/internal/producer/TransactionMessageProducer;
      14: areturn

  public org.joyqueue.client.internal.producer.TransactionMessageProducer beginTransaction(long, java.util.concurrent.TimeUnit);
    Code:
       0: new           #63                 // class org/joyqueue/client/internal/producer/support/DefaultTransactionMessageProducer
       3: dup
       4: aconst_null
       5: lload_1
       6: aload_3
       7: aload_0
       8: getfield      #23                 // Field transactionSequence:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      14: aload_0
      15: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      18: aload_0
      19: getfield      #18                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      22: aload_0
      23: getfield      #19                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      26: aload_0
      27: getfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      30: aload_0
      31: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
      34: invokespecial #65                 // Method org/joyqueue/client/internal/producer/support/DefaultTransactionMessageProducer."<init>":(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;JLorg/joyqueue/client/internal/producer/config/ProducerConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/producer/MessageSender;Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;)V
      37: areturn

  public org.joyqueue.client.internal.producer.TransactionMessageProducer beginTransaction(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
       6: invokevirtual #61                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getTransactionTimeout:()J
       9: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokevirtual #66                 // Method beginTransaction:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/joyqueue/client/internal/producer/TransactionMessageProducer;
      15: areturn

  public org.joyqueue.client.internal.producer.TransactionMessageProducer beginTransaction(java.lang.String, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method checkState:()V
       4: aload_1
       5: invokestatic  #11                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       8: ldc           #67                 // String transactionId not blank
      10: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      13: new           #63                 // class org/joyqueue/client/internal/producer/support/DefaultTransactionMessageProducer
      16: dup
      17: aload_1
      18: lload_2
      19: aload         4
      21: aload_0
      22: getfield      #23                 // Field transactionSequence:Ljava/util/concurrent/atomic/AtomicLong;
      25: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      28: aload_0
      29: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      32: aload_0
      33: getfield      #18                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      36: aload_0
      37: getfield      #19                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      40: aload_0
      41: getfield      #33                 // Field messageSender:Lorg/joyqueue/client/internal/producer/MessageSender;
      44: aload_0
      45: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
      48: invokespecial #65                 // Method org/joyqueue/client/internal/producer/support/DefaultTransactionMessageProducer."<init>":(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;JLorg/joyqueue/client/internal/producer/config/ProducerConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/producer/MessageSender;Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;)V
      51: areturn

  public org.joyqueue.client.internal.metadata.domain.TopicMetadata getTopicMetadata(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method checkState:()V
       4: aload_1
       5: invokestatic  #11                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       8: ldc           #68                 // String topic not blank
      10: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      13: aload_0
      14: getfield      #36                 // Field messageProducerInner:Lorg/joyqueue/client/internal/producer/support/MessageProducerInner;
      17: aload_1
      18: invokevirtual #69                 // Method org/joyqueue/client/internal/producer/support/MessageProducerInner.getTopicFullName:(Ljava/lang/String;)Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: getfield      #19                 // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      26: aload_2
      27: aload_0
      28: getfield      #17                 // Field config:Lorg/joyqueue/client/internal/producer/config/ProducerConfig;
      31: invokevirtual #10                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.getApp:()Ljava/lang/String;
      34: invokevirtual #70                 // Method org/joyqueue/client/internal/cluster/ClusterManager.fetchTopicMetadata:(Ljava/lang/String;Ljava/lang/String;)Lorg/joyqueue/client/internal/metadata/domain/TopicMetadata;
      37: areturn

  public synchronized void addInterceptor(org.joyqueue.client.internal.producer.interceptor.ProducerInterceptor);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #71                 // String interceptor can not be null
      11: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: getfield      #4                  // Field producerInterceptorManager:Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager;
      18: aload_1
      19: invokevirtual #72                 // Method org/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager.addInterceptor:(Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptor;)V
      22: return

  public synchronized void removeInterceptor(org.joyqueue.client.internal.producer.interceptor.ProducerInterceptor);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #71                 // String interceptor can not be null
      11: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: getfield      #4                  // Field producerInterceptorManager:Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager;
      18: aload_1
      19: invokevirtual #73                 // Method org/joyqueue/client/internal/producer/interceptor/ProducerInterceptorManager.removeInterceptor:(Lorg/joyqueue/client/internal/producer/interceptor/ProducerInterceptor;)V
      22: return

  protected void checkState();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isStarted:()Z
       4: ifne          23
       7: new           #75                 // class org/joyqueue/client/internal/producer/exception/ProducerException
      10: dup
      11: ldc           #76                 // String producer is not started
      13: getstatic     #77                 // Field org/joyqueue/exception/JoyQueueCode.CN_SERVICE_NOT_AVAILABLE:Lorg/joyqueue/exception/JoyQueueCode;
      16: invokevirtual #78                 // Method org/joyqueue/exception/JoyQueueCode.getCode:()I
      19: invokespecial #79                 // Method org/joyqueue/client/internal/producer/exception/ProducerException."<init>":(Ljava/lang/String;I)V
      22: athrow
      23: return

  static {};
    Code:
       0: ldc           #80                 // class org/joyqueue/client/internal/producer/support/DefaultMessageProducer
       2: invokestatic  #81                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #82                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
