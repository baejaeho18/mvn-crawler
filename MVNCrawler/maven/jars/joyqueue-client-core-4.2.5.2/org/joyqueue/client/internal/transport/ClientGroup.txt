Compiled from "ClientGroup.java"
public class org.joyqueue.client.internal.transport.ClientGroup extends org.joyqueue.toolkit.service.Service {
  private org.joyqueue.network.domain.BrokerNode node;

  private org.joyqueue.client.internal.transport.config.TransportConfig transportConfig;

  private org.joyqueue.network.transport.TransportClient transportClient;

  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private java.util.List<org.joyqueue.client.internal.transport.Client> clients;

  private java.util.concurrent.atomic.AtomicInteger connections;

  private java.util.concurrent.atomic.AtomicInteger next;

  public org.joyqueue.client.internal.transport.ClientGroup(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.transport.config.TransportConfig, org.joyqueue.network.transport.TransportClient, org.joyqueue.client.internal.nameserver.NameServerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Lists.newCopyOnWriteArrayList:()Ljava/util/concurrent/CopyOnWriteArrayList;
       8: putfield      #3                  // Field clients:Ljava/util/List;
      11: aload_0
      12: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
      15: dup
      16: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      19: putfield      #6                  // Field connections:Ljava/util/concurrent/atomic/AtomicInteger;
      22: aload_0
      23: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
      26: dup
      27: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      30: putfield      #7                  // Field next:Ljava/util/concurrent/atomic/AtomicInteger;
      33: aload_0
      34: aload_1
      35: putfield      #8                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
      38: aload_0
      39: aload_2
      40: putfield      #9                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      43: aload_0
      44: aload_3
      45: putfield      #10                 // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      48: aload_0
      49: aload         4
      51: putfield      #11                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      54: return

  public org.joyqueue.client.internal.transport.Client getClient();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connections:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: aload_0
       8: getfield      #9                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      11: invokevirtual #13                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getConnections:()I
      14: if_icmpge     81
      17: aload_0
      18: getfield      #6                  // Field connections:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      24: aload_0
      25: getfield      #9                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      28: invokevirtual #13                 // Method org/joyqueue/client/internal/transport/config/TransportConfig.getConnections:()I
      31: if_icmpge     81
      34: aload_0
      35: aload_0
      36: getfield      #8                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
      39: aload_0
      40: getfield      #9                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      43: aload_0
      44: getfield      #10                 // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      47: invokevirtual #15                 // Method initClient:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/network/transport/TransportClient;)Lorg/joyqueue/client/internal/transport/Client;
      50: areturn
      51: astore_1
      52: aload_0
      53: getfield      #6                  // Field connections:Ljava/util/concurrent/atomic/AtomicInteger;
      56: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      59: pop
      60: aload_1
      61: instanceof    #18                 // class org/joyqueue/network/transport/exception/TransportException
      64: ifeq          72
      67: aload_1
      68: checkcast     #18                 // class org/joyqueue/network/transport/exception/TransportException
      71: athrow
      72: new           #19                 // class org/joyqueue/client/internal/exception/ClientException
      75: dup
      76: aload_1
      77: invokespecial #20                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      80: athrow
      81: aload_0
      82: invokevirtual #21                 // Method doGetClient:()Lorg/joyqueue/client/internal/transport/Client;
      85: areturn
    Exception table:
       from    to  target type
          34    50    51   Class java/lang/Exception

  public org.joyqueue.client.internal.transport.Client doGetClient();
    Code:
       0: aload_0
       1: getfield      #3                  // Field clients:Ljava/util/List;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: if_icmpne     27
      13: aload_0
      14: getfield      #3                  // Field clients:Ljava/util/List;
      17: iconst_0
      18: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #24                 // class org/joyqueue/client/internal/transport/Client
      26: areturn
      27: aload_0
      28: invokevirtual #25                 // Method selectClient:()Lorg/joyqueue/client/internal/transport/Client;
      31: areturn

  protected org.joyqueue.client.internal.transport.Client selectClient();
    Code:
       0: aload_0
       1: getfield      #7                  // Field next:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #3                  // Field clients:Ljava/util/List;
      13: invokeinterface #22,  1           // InterfaceMethod java/util/List.size:()I
      18: if_icmplt     31
      21: aload_0
      22: getfield      #7                  // Field next:Ljava/util/concurrent/atomic/AtomicInteger;
      25: iconst_1
      26: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      29: iconst_0
      30: istore_1
      31: aload_0
      32: getfield      #3                  // Field clients:Ljava/util/List;
      35: iload_1
      36: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      41: checkcast     #24                 // class org/joyqueue/client/internal/transport/Client
      44: areturn

  public org.joyqueue.client.internal.transport.Client tryGetClient();
    Code:
       0: aload_0
       1: getfield      #3                  // Field clients:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #24                 // class org/joyqueue/client/internal/transport/Client
      13: areturn

  public java.util.List<org.joyqueue.client.internal.transport.Client> getClients();
    Code:
       0: aload_0
       1: getfield      #3                  // Field clients:Ljava/util/List;
       4: areturn

  public org.joyqueue.network.domain.BrokerNode getNode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
       4: areturn

  protected org.joyqueue.client.internal.transport.Client initClient(org.joyqueue.network.domain.BrokerNode, org.joyqueue.client.internal.transport.config.TransportConfig, org.joyqueue.network.transport.TransportClient) throws java.lang.Exception;
    Code:
       0: new           #24                 // class org/joyqueue/client/internal/transport/Client
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload_0
       8: getfield      #11                 // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      11: invokespecial #28                 // Method org/joyqueue/client/internal/transport/Client."<init>":(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/network/transport/TransportClient;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)V
      14: astore        4
      16: aload         4
      18: invokevirtual #29                 // Method org/joyqueue/client/internal/transport/Client.start:()V
      21: aload_0
      22: getfield      #3                  // Field clients:Ljava/util/List;
      25: aload         4
      27: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload         4
      35: areturn

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field node:Lorg/joyqueue/network/domain/BrokerNode;
       5: aload_0
       6: getfield      #9                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
       9: aload_0
      10: getfield      #10                 // Field transportClient:Lorg/joyqueue/network/transport/TransportClient;
      13: invokevirtual #15                 // Method initClient:(Lorg/joyqueue/network/domain/BrokerNode;Lorg/joyqueue/client/internal/transport/config/TransportConfig;Lorg/joyqueue/network/transport/TransportClient;)Lorg/joyqueue/client/internal/transport/Client;
      16: pop
      17: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #3                  // Field clients:Ljava/util/List;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          36
      19: aload_1
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #24                 // class org/joyqueue/client/internal/transport/Client
      28: astore_2
      29: aload_2
      30: invokevirtual #34                 // Method org/joyqueue/client/internal/transport/Client.stop:()V
      33: goto          10
      36: return
}
