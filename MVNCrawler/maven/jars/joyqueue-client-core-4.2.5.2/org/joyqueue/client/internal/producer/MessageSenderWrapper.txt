Compiled from "MessageSenderWrapper.java"
public class org.joyqueue.client.internal.producer.MessageSenderWrapper extends org.joyqueue.toolkit.service.Service implements org.joyqueue.client.internal.producer.MessageSender {
  private org.joyqueue.client.internal.producer.transport.ProducerClientManager producerClientManager;

  private org.joyqueue.client.internal.producer.MessageSender delegate;

  public org.joyqueue.client.internal.producer.MessageSenderWrapper(org.joyqueue.client.internal.producer.transport.ProducerClientManager, org.joyqueue.client.internal.producer.MessageSender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
      14: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       4: invokevirtual #4                  // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.start:()V
       7: aload_0
       8: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
      11: invokeinterface #5,  1            // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.start:()V
      16: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: invokeinterface #6,  1            // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.stop:()V
       9: aload_0
      10: getfield      #2                  // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      13: invokevirtual #7                  // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.stop:()V
      16: return

  public org.joyqueue.client.internal.producer.domain.SendResultData send(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: invokeinterface #8,  11           // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.send:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;Lorg/joyqueue/domain/QosLevel;JJ)Lorg/joyqueue/client/internal/producer/domain/SendResultData;
      22: areturn

  public org.joyqueue.client.internal.producer.domain.SendBatchResultData batchSend(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: invokeinterface #9,  11           // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSend:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJ)Lorg/joyqueue/client/internal/producer/domain/SendBatchResultData;
      22: areturn

  public java.util.concurrent.CompletableFuture<org.joyqueue.client.internal.producer.domain.SendBatchResultData> batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: invokeinterface #10,  11          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJ)Ljava/util/concurrent/CompletableFuture;
      22: areturn

  public void sendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncSendCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: aload         11
      19: invokeinterface #11,  12          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.sendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncSendCallback;)V
      24: return

  public void sendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: invokeinterface #12,  11          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.sendOneway:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/client/internal/producer/domain/ProduceMessage;Lorg/joyqueue/domain/QosLevel;JJ)V
      22: return

  public void batchSendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: lload         6
      13: lload         8
      15: invokeinterface #13,  10          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSendOneway:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJ)V
      20: return

  public void batchSendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: invokeinterface #14,  11          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSendOneway:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJ)V
      22: return

  public void batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncBatchSendCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: lload         7
      15: lload         9
      17: aload         11
      19: invokeinterface #15,  12          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncBatchSendCallback;)V
      24: return

  public java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.domain.SendBatchResultData> batchSend(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: lload         6
      13: lload         8
      15: invokeinterface #16,  10          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSend:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJ)Ljava/util/Map;
      20: areturn

  public void batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncMultiBatchSendCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: lload         6
      13: lload         8
      15: aload         10
      17: invokeinterface #17,  11          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJLorg/joyqueue/client/internal/producer/callback/AsyncMultiBatchSendCallback;)V
      22: return

  public java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.domain.SendBatchResultData>> batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: lload         6
      13: lload         8
      15: invokeinterface #18,  10          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.batchSendAsync:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/joyqueue/domain/QosLevel;JJ)Ljava/util/concurrent/CompletableFuture;
      20: areturn

  public org.joyqueue.client.internal.producer.domain.SendPrepareResult prepare(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: lload         7
      13: lload         9
      15: invokeinterface #19,  11          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.prepare:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJJ)Lorg/joyqueue/client/internal/producer/domain/SendPrepareResult;
      20: areturn

  public org.joyqueue.exception.JoyQueueCode commit(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: invokeinterface #20,  7           // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.commit:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/joyqueue/exception/JoyQueueCode;
      16: areturn

  public org.joyqueue.exception.JoyQueueCode rollback(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: invokeinterface #21,  7           // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.rollback:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/joyqueue/exception/JoyQueueCode;
      16: areturn

  public org.joyqueue.client.internal.producer.domain.FetchFeedbackData fetchFeedback(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, org.joyqueue.network.command.TxStatus, int, long, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lorg/joyqueue/client/internal/producer/MessageSender;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: iload         5
      11: lload         6
      13: lload         8
      15: invokeinterface #22,  10          // InterfaceMethod org/joyqueue/client/internal/producer/MessageSender.fetchFeedback:(Lorg/joyqueue/network/domain/BrokerNode;Ljava/lang/String;Ljava/lang/String;Lorg/joyqueue/network/command/TxStatus;IJJ)Lorg/joyqueue/client/internal/producer/domain/FetchFeedbackData;
      20: areturn
}
