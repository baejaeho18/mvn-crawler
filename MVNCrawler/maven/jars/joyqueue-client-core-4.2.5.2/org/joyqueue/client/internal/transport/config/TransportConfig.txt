Compiled from "TransportConfig.java"
public class org.joyqueue.client.internal.transport.config.TransportConfig {
  private int connections;

  private int sendTimeout;

  private int ioThreads;

  private int callbackThreads;

  private int channelMaxIdleTime;

  private int heartbeatInterval;

  private int heartbeatTimeout;

  private int heartbeatMaxIdleTime;

  private int soLinger;

  private boolean tcpNoDelay;

  private boolean keepAlive;

  private int soTimeout;

  private int socketBufferSize;

  private int maxOneway;

  private int maxAsync;

  private boolean nonBlockOneway;

  private org.joyqueue.toolkit.retry.RetryPolicy retryPolicy;

  public org.joyqueue.client.internal.transport.config.TransportConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field connections:I
       9: aload_0
      10: sipush        5000
      13: putfield      #3                  // Field sendTimeout:I
      16: aload_0
      17: invokestatic  #4                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      20: invokevirtual #5                  // Method java/lang/Runtime.availableProcessors:()I
      23: iconst_4
      24: imul
      25: putfield      #6                  // Field ioThreads:I
      28: aload_0
      29: invokestatic  #4                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      32: invokevirtual #5                  // Method java/lang/Runtime.availableProcessors:()I
      35: putfield      #7                  // Field callbackThreads:I
      38: aload_0
      39: ldc           #8                  // int 600000
      41: putfield      #9                  // Field channelMaxIdleTime:I
      44: aload_0
      45: sipush        5000
      48: putfield      #10                 // Field heartbeatInterval:I
      51: aload_0
      52: sipush        3000
      55: putfield      #11                 // Field heartbeatTimeout:I
      58: aload_0
      59: ldc           #12                 // int 60000
      61: putfield      #13                 // Field heartbeatMaxIdleTime:I
      64: aload_0
      65: iconst_m1
      66: putfield      #14                 // Field soLinger:I
      69: aload_0
      70: iconst_1
      71: putfield      #15                 // Field tcpNoDelay:Z
      74: aload_0
      75: iconst_1
      76: putfield      #16                 // Field keepAlive:Z
      79: aload_0
      80: sipush        2000
      83: putfield      #17                 // Field soTimeout:I
      86: aload_0
      87: ldc           #18                 // int 1048576
      89: putfield      #19                 // Field socketBufferSize:I
      92: aload_0
      93: sipush        256
      96: putfield      #20                 // Field maxOneway:I
      99: aload_0
     100: sipush        128
     103: putfield      #21                 // Field maxAsync:I
     106: aload_0
     107: iconst_0
     108: putfield      #22                 // Field nonBlockOneway:Z
     111: aload_0
     112: new           #23                 // class org/joyqueue/toolkit/retry/RetryPolicy
     115: dup
     116: sipush        1000
     119: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     122: ldc           #12                 // int 60000
     124: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: iconst_2
     128: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     131: iconst_0
     132: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     135: ldc2_w        #26                 // double 2.0d
     138: invokestatic  #28                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     141: iconst_0
     142: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     145: invokespecial #29                 // Method org/joyqueue/toolkit/retry/RetryPolicy."<init>":(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Double;Ljava/lang/Integer;)V
     148: putfield      #30                 // Field retryPolicy:Lorg/joyqueue/toolkit/retry/RetryPolicy;
     151: return

  public org.joyqueue.client.internal.transport.config.TransportConfig copy();
    Code:
       0: new           #31                 // class org/joyqueue/client/internal/transport/config/TransportConfig
       3: dup
       4: invokespecial #32                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field connections:I
      13: invokevirtual #33                 // Method setConnections:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #3                  // Field sendTimeout:I
      21: invokevirtual #34                 // Method setSendTimeout:(I)V
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field ioThreads:I
      29: invokevirtual #35                 // Method setIoThreads:(I)V
      32: aload_1
      33: aload_0
      34: getfield      #7                  // Field callbackThreads:I
      37: invokevirtual #36                 // Method setCallbackThreads:(I)V
      40: aload_1
      41: aload_0
      42: getfield      #10                 // Field heartbeatInterval:I
      45: invokevirtual #37                 // Method setHeartbeatInterval:(I)V
      48: aload_1
      49: aload_0
      50: getfield      #11                 // Field heartbeatTimeout:I
      53: invokevirtual #38                 // Method setHeartbeatTimeout:(I)V
      56: aload_1
      57: aload_0
      58: getfield      #13                 // Field heartbeatMaxIdleTime:I
      61: invokevirtual #39                 // Method setHeartbeatMaxIdleTime:(I)V
      64: aload_1
      65: aload_0
      66: getfield      #9                  // Field channelMaxIdleTime:I
      69: invokevirtual #40                 // Method setChannelMaxIdleTime:(I)V
      72: aload_1
      73: aload_0
      74: getfield      #14                 // Field soLinger:I
      77: invokevirtual #41                 // Method setSoLinger:(I)V
      80: aload_1
      81: aload_0
      82: getfield      #15                 // Field tcpNoDelay:Z
      85: invokevirtual #42                 // Method setTcpNoDelay:(Z)V
      88: aload_1
      89: aload_0
      90: getfield      #16                 // Field keepAlive:Z
      93: invokevirtual #43                 // Method setKeepAlive:(Z)V
      96: aload_1
      97: aload_0
      98: getfield      #17                 // Field soTimeout:I
     101: invokevirtual #44                 // Method setSoTimeout:(I)V
     104: aload_1
     105: aload_0
     106: getfield      #19                 // Field socketBufferSize:I
     109: invokevirtual #45                 // Method setSocketBufferSize:(I)V
     112: aload_1
     113: aload_0
     114: getfield      #20                 // Field maxOneway:I
     117: invokevirtual #46                 // Method setMaxOneway:(I)V
     120: aload_1
     121: aload_0
     122: getfield      #21                 // Field maxAsync:I
     125: invokevirtual #47                 // Method setMaxAsync:(I)V
     128: aload_1
     129: aload_0
     130: getfield      #30                 // Field retryPolicy:Lorg/joyqueue/toolkit/retry/RetryPolicy;
     133: invokevirtual #48                 // Method setRetryPolicy:(Lorg/joyqueue/toolkit/retry/RetryPolicy;)V
     136: aload_1
     137: aload_0
     138: getfield      #22                 // Field nonBlockOneway:Z
     141: invokevirtual #49                 // Method setNonBlockOneway:(Z)V
     144: aload_1
     145: areturn

  public org.joyqueue.toolkit.retry.RetryPolicy getRetryPolicy();
    Code:
       0: aload_0
       1: getfield      #30                 // Field retryPolicy:Lorg/joyqueue/toolkit/retry/RetryPolicy;
       4: areturn

  public void setRetryPolicy(org.joyqueue.toolkit.retry.RetryPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field retryPolicy:Lorg/joyqueue/toolkit/retry/RetryPolicy;
       5: return

  public void setConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field connections:I
       5: return

  public int getConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connections:I
       4: ireturn

  public int getSendTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sendTimeout:I
       4: ireturn

  public void setSendTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field sendTimeout:I
       5: return

  public int getIoThreads();
    Code:
       0: aload_0
       1: getfield      #6                  // Field ioThreads:I
       4: ireturn

  public void setIoThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field ioThreads:I
       5: return

  public int getCallbackThreads();
    Code:
       0: aload_0
       1: getfield      #7                  // Field callbackThreads:I
       4: ireturn

  public void setCallbackThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field callbackThreads:I
       5: return

  public void setHeartbeatInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field heartbeatInterval:I
       5: return

  public int getHeartbeatInterval();
    Code:
       0: aload_0
       1: getfield      #10                 // Field heartbeatInterval:I
       4: ireturn

  public void setHeartbeatTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field heartbeatTimeout:I
       5: return

  public int getHeartbeatTimeout();
    Code:
       0: aload_0
       1: getfield      #11                 // Field heartbeatTimeout:I
       4: ireturn

  public void setHeartbeatMaxIdleTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field heartbeatMaxIdleTime:I
       5: return

  public int getHeartbeatMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #13                 // Field heartbeatMaxIdleTime:I
       4: ireturn

  public int getChannelMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field channelMaxIdleTime:I
       4: ireturn

  public void setChannelMaxIdleTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field channelMaxIdleTime:I
       5: return

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #14                 // Field soLinger:I
       4: ireturn

  public void setSoLinger(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field soLinger:I
       5: return

  public boolean isTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #15                 // Field tcpNoDelay:Z
       4: ireturn

  public void setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field tcpNoDelay:Z
       5: return

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #16                 // Field keepAlive:Z
       4: ireturn

  public void setKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field keepAlive:Z
       5: return

  public int getSoTimeout();
    Code:
       0: aload_0
       1: getfield      #17                 // Field soTimeout:I
       4: ireturn

  public void setSoTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field soTimeout:I
       5: return

  public int getSocketBufferSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field socketBufferSize:I
       4: ireturn

  public void setSocketBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field socketBufferSize:I
       5: return

  public int getMaxOneway();
    Code:
       0: aload_0
       1: getfield      #20                 // Field maxOneway:I
       4: ireturn

  public void setMaxOneway(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field maxOneway:I
       5: return

  public int getMaxAsync();
    Code:
       0: aload_0
       1: getfield      #21                 // Field maxAsync:I
       4: ireturn

  public void setMaxAsync(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field maxAsync:I
       5: return

  public void setNonBlockOneway(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field nonBlockOneway:Z
       5: return

  public boolean isNonBlockOneway();
    Code:
       0: aload_0
       1: getfield      #22                 // Field nonBlockOneway:Z
       4: ireturn
}
