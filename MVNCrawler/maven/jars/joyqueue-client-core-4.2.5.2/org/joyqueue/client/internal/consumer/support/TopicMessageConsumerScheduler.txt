Compiled from "TopicMessageConsumerScheduler.java"
public class org.joyqueue.client.internal.consumer.support.TopicMessageConsumerScheduler extends org.joyqueue.toolkit.service.Service implements java.lang.Runnable {
  protected static final org.slf4j.Logger logger;

  private java.lang.String topic;

  private org.joyqueue.client.internal.consumer.config.ConsumerConfig config;

  private org.joyqueue.client.internal.consumer.MessagePoller messagePoller;

  private org.joyqueue.client.internal.consumer.support.TopicMessageConsumerDispatcher messageConsumerDispatcher;

  private java.util.concurrent.ExecutorService scheduleThreadPool;

  private volatile boolean suspend;

  private volatile boolean stopped;

  public org.joyqueue.client.internal.consumer.support.TopicMessageConsumerScheduler(java.lang.String, org.joyqueue.client.internal.consumer.config.ConsumerConfig, org.joyqueue.client.internal.consumer.MessagePoller, org.joyqueue.client.internal.consumer.support.TopicMessageConsumerDispatcher);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field suspend:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field stopped:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field topic:Ljava/lang/String;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field messagePoller:Lorg/joyqueue/client/internal/consumer/MessagePoller;
      29: aload_0
      30: aload         4
      32: putfield      #7                  // Field messageConsumerDispatcher:Lorg/joyqueue/client/internal/consumer/support/TopicMessageConsumerDispatcher;
      35: return

  protected void validate() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
       5: invokevirtual #8                  // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getThread:()I
       8: new           #9                  // class org/joyqueue/toolkit/concurrent/NamedThreadFactory
      11: dup
      12: ldc           #10                 // String joyqueue-consumer-scheduler-%s
      14: iconst_1
      15: anewarray     #11                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #4                  // Field topic:Ljava/lang/String;
      24: aastore
      25: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: iconst_1
      29: invokespecial #13                 // Method org/joyqueue/toolkit/concurrent/NamedThreadFactory."<init>":(Ljava/lang/String;Z)V
      32: invokestatic  #14                 // Method java/util/concurrent/Executors.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      35: putfield      #15                 // Field scheduleThreadPool:Ljava/util/concurrent/ExecutorService;
      38: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
       7: invokevirtual #8                  // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getThread:()I
      10: if_icmpge     29
      13: aload_0
      14: getfield      #15                 // Field scheduleThreadPool:Ljava/util/concurrent/ExecutorService;
      17: aload_0
      18: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      23: iinc          1, 1
      26: goto          2
      29: return

  protected void doStop();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field stopped:Z
       5: aload_0
       6: getfield      #15                 // Field scheduleThreadPool:Ljava/util/concurrent/ExecutorService;
       9: ifnull        21
      12: aload_0
      13: getfield      #15                 // Field scheduleThreadPool:Ljava/util/concurrent/ExecutorService;
      16: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      21: return

  public void suspend();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field suspend:Z
       5: return

  public boolean isSuspend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field suspend:Z
       4: ireturn

  public void resume();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field suspend:Z
       5: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopped:Z
       4: ifne          100
       7: aload_0
       8: getfield      #2                  // Field suspend:Z
      11: ifeq          31
      14: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      17: pop
      18: aload_0
      19: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      22: invokevirtual #19                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getIdleInterval:()J
      25: invokestatic  #20                 // Method java/lang/Thread.sleep:(J)V
      28: goto          0
      31: aload_0
      32: invokevirtual #21                 // Method doSchedule:()V
      35: goto          0
      38: astore_1
      39: aload_0
      40: getfield      #3                  // Field stopped:Z
      43: ifeq          49
      46: goto          0
      49: getstatic     #23                 // Field logger:Lorg/slf4j/Logger;
      52: ldc           #24                 // String dispatch consumer exception, topic: {}
      54: aload_0
      55: getfield      #4                  // Field topic:Ljava/lang/String;
      58: aload_1
      59: invokeinterface #25,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      64: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      67: pop
      68: aload_0
      69: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      72: invokevirtual #19                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getIdleInterval:()J
      75: invokestatic  #20                 // Method java/lang/Thread.sleep:(J)V
      78: goto          97
      81: astore_2
      82: getstatic     #23                 // Field logger:Lorg/slf4j/Logger;
      85: ldc           #24                 // String dispatch consumer exception, topic: {}
      87: aload_0
      88: getfield      #4                  // Field topic:Ljava/lang/String;
      91: aload_2
      92: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      97: goto          0
     100: return
    Exception table:
       from    to  target type
           7    28    38   Class java/lang/Exception
          31    35    38   Class java/lang/Exception
          64    78    81   Class java/lang/InterruptedException

  protected void doSchedule() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field messageConsumerDispatcher:Lorg/joyqueue/client/internal/consumer/support/TopicMessageConsumerDispatcher;
       4: invokevirtual #28                 // Method org/joyqueue/client/internal/consumer/support/TopicMessageConsumerDispatcher.dispatch:()Z
       7: istore_1
       8: iload_1
       9: ifeq          41
      12: aload_0
      13: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      16: invokevirtual #29                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getInterval:()J
      19: lconst_0
      20: lcmp
      21: ifle          55
      24: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      27: pop
      28: aload_0
      29: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      32: invokevirtual #29                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getInterval:()J
      35: invokestatic  #20                 // Method java/lang/Thread.sleep:(J)V
      38: goto          55
      41: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      44: pop
      45: aload_0
      46: getfield      #5                  // Field config:Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;
      49: invokevirtual #19                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.getIdleInterval:()J
      52: invokestatic  #20                 // Method java/lang/Thread.sleep:(J)V
      55: return

  static {};
    Code:
       0: ldc           #30                 // class org/joyqueue/client/internal/consumer/support/TopicMessageConsumerScheduler
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #23                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
