Compiled from "DefaultMessageAccessPoint.java"
public class org.joyqueue.client.internal.support.DefaultMessageAccessPoint extends org.joyqueue.toolkit.service.Service implements org.joyqueue.client.internal.MessageAccessPoint {
  private org.joyqueue.client.internal.nameserver.NameServerConfig nameServerConfig;

  private org.joyqueue.client.internal.transport.config.TransportConfig transportConfig;

  private org.joyqueue.client.internal.cluster.ClusterManager clusterManager;

  private org.joyqueue.client.internal.cluster.ClusterClientManager clusterClientManager;

  private org.joyqueue.client.internal.producer.transport.ProducerClientManager producerClientManager;

  private org.joyqueue.client.internal.consumer.transport.ConsumerClientManager consumerClientManager;

  private java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.TxFeedbackManager> txFeedbackManagerMap;

  public org.joyqueue.client.internal.support.DefaultMessageAccessPoint(org.joyqueue.client.internal.nameserver.NameServerConfig, org.joyqueue.client.internal.transport.config.TransportConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joyqueue/toolkit/service/Service."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #3                  // Field txFeedbackManagerMap:Ljava/util/Map;
      11: aload_1
      12: invokestatic  #4                  // Method org/joyqueue/client/internal/nameserver/NameServerConfigChecker.check:(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;)V
      15: aload_2
      16: invokestatic  #5                  // Method org/joyqueue/client/internal/transport/config/TransportConfigChecker.check:(Lorg/joyqueue/client/internal/transport/config/TransportConfig;)V
      19: aload_0
      20: aload_1
      21: putfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      24: aload_0
      25: aload_2
      26: putfield      #7                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      29: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
       4: ifnull        14
       7: aload_0
       8: getfield      #8                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      11: invokevirtual #9                  // Method org/joyqueue/client/internal/cluster/ClusterManager.stop:()V
      14: aload_0
      15: getfield      #10                 // Field clusterClientManager:Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      18: ifnull        28
      21: aload_0
      22: getfield      #10                 // Field clusterClientManager:Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      25: invokevirtual #11                 // Method org/joyqueue/client/internal/cluster/ClusterClientManager.stop:()V
      28: aload_0
      29: getfield      #12                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      32: ifnull        42
      35: aload_0
      36: getfield      #12                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      39: invokevirtual #13                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.stop:()V
      42: aload_0
      43: getfield      #14                 // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      46: ifnull        56
      49: aload_0
      50: getfield      #14                 // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      53: invokevirtual #15                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.stop:()V
      56: aload_0
      57: getfield      #3                  // Field txFeedbackManagerMap:Ljava/util/Map;
      60: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      65: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      70: astore_1
      71: aload_1
      72: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          107
      80: aload_1
      81: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #20                 // class java/util/Map$Entry
      89: astore_2
      90: aload_2
      91: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      96: checkcast     #22                 // class org/joyqueue/client/internal/producer/TxFeedbackManager
      99: invokeinterface #23,  1           // InterfaceMethod org/joyqueue/client/internal/producer/TxFeedbackManager.stop:()V
     104: goto          71
     107: return

  public org.joyqueue.client.internal.consumer.MessagePoller createPoller();
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #24                 // class java/lang/String
       5: invokevirtual #25                 // Method createPoller:(Ljava/lang/String;)Lorg/joyqueue/client/internal/consumer/MessagePoller;
       8: areturn

  public org.joyqueue.client.internal.consumer.MessagePoller createPoller(java.lang.String);
    Code:
       0: new           #26                 // class org/joyqueue/client/internal/consumer/config/ConsumerConfig
       3: dup
       4: invokespecial #27                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      13: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      16: invokevirtual #29                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.setApp:(Ljava/lang/String;)V
      19: aload_2
      20: aload_1
      21: invokevirtual #30                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.setGroup:(Ljava/lang/String;)V
      24: aload_0
      25: aload_2
      26: invokevirtual #31                 // Method createPoller:(Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;)Lorg/joyqueue/client/internal/consumer/MessagePoller;
      29: areturn

  public org.joyqueue.client.internal.consumer.MessagePoller createPoller(org.joyqueue.client.internal.consumer.config.ConsumerConfig);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #32                 // String config can not be null
      11: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      19: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      22: invokevirtual #29                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.setApp:(Ljava/lang/String;)V
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      30: aload_0
      31: invokevirtual #34                 // Method getClusterManager:()Lorg/joyqueue/client/internal/cluster/ClusterManager;
      34: aload_0
      35: invokevirtual #35                 // Method getClusterClientManager:()Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      38: aload_0
      39: invokevirtual #36                 // Method getConsumerClientManager:()Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      42: invokestatic  #37                 // Method org/joyqueue/client/internal/consumer/MessagePollerFactory.create:(Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/cluster/ClusterClientManager;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;)Lorg/joyqueue/client/internal/consumer/MessagePoller;
      45: areturn

  public synchronized org.joyqueue.client.internal.consumer.MessageConsumer createConsumer();
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #24                 // class java/lang/String
       5: invokevirtual #38                 // Method createConsumer:(Ljava/lang/String;)Lorg/joyqueue/client/internal/consumer/MessageConsumer;
       8: areturn

  public synchronized org.joyqueue.client.internal.consumer.MessageConsumer createConsumer(java.lang.String);
    Code:
       0: new           #26                 // class org/joyqueue/client/internal/consumer/config/ConsumerConfig
       3: dup
       4: invokespecial #27                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      13: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      16: invokevirtual #29                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.setApp:(Ljava/lang/String;)V
      19: aload_2
      20: aload_1
      21: invokevirtual #30                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.setGroup:(Ljava/lang/String;)V
      24: aload_0
      25: aload_2
      26: invokevirtual #39                 // Method createConsumer:(Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;)Lorg/joyqueue/client/internal/consumer/MessageConsumer;
      29: areturn

  public synchronized org.joyqueue.client.internal.consumer.MessageConsumer createConsumer(org.joyqueue.client.internal.consumer.config.ConsumerConfig);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #32                 // String config can not be null
      11: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      19: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      22: invokevirtual #29                 // Method org/joyqueue/client/internal/consumer/config/ConsumerConfig.setApp:(Ljava/lang/String;)V
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      30: aload_0
      31: invokevirtual #34                 // Method getClusterManager:()Lorg/joyqueue/client/internal/cluster/ClusterManager;
      34: aload_0
      35: invokevirtual #35                 // Method getClusterClientManager:()Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      38: aload_0
      39: invokevirtual #36                 // Method getConsumerClientManager:()Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      42: invokestatic  #40                 // Method org/joyqueue/client/internal/consumer/MessageConsumerFactory.create:(Lorg/joyqueue/client/internal/consumer/config/ConsumerConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/cluster/ClusterClientManager;Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;)Lorg/joyqueue/client/internal/consumer/MessageConsumer;
      45: areturn

  public synchronized org.joyqueue.client.internal.producer.MessageProducer createProducer();
    Code:
       0: new           #41                 // class org/joyqueue/client/internal/producer/config/ProducerConfig
       3: dup
       4: invokespecial #42                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      13: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      16: invokevirtual #43                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.setApp:(Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #44                 // Method createProducer:(Lorg/joyqueue/client/internal/producer/config/ProducerConfig;)Lorg/joyqueue/client/internal/producer/MessageProducer;
      24: areturn

  public synchronized org.joyqueue.client.internal.producer.MessageProducer createProducer(org.joyqueue.client.internal.producer.config.ProducerConfig);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #32                 // String config can not be null
      11: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      19: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      22: invokevirtual #43                 // Method org/joyqueue/client/internal/producer/config/ProducerConfig.setApp:(Ljava/lang/String;)V
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      30: aload_0
      31: invokevirtual #34                 // Method getClusterManager:()Lorg/joyqueue/client/internal/cluster/ClusterManager;
      34: aload_0
      35: invokevirtual #45                 // Method getProducerClientManager:()Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      38: invokestatic  #46                 // Method org/joyqueue/client/internal/producer/MessageProducerFactory.create:(Lorg/joyqueue/client/internal/producer/config/ProducerConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;)Lorg/joyqueue/client/internal/producer/MessageProducer;
      41: areturn

  public synchronized void setTransactionCallback(java.lang.String, org.joyqueue.client.internal.producer.callback.TxFeedbackCallback);
    Code:
       0: new           #47                 // class org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig
       3: dup
       4: invokespecial #48                 // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      13: invokevirtual #28                 // Method org/joyqueue/client/internal/nameserver/NameServerConfig.getApp:()Ljava/lang/String;
      16: invokevirtual #49                 // Method org/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig.setApp:(Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: aload_3
      22: aload_2
      23: invokevirtual #50                 // Method setTransactionCallback:(Ljava/lang/String;Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;Lorg/joyqueue/client/internal/producer/callback/TxFeedbackCallback;)V
      26: return

  public void setTransactionCallback(java.lang.String, org.joyqueue.client.internal.producer.feedback.config.TxFeedbackConfig, org.joyqueue.client.internal.producer.callback.TxFeedbackCallback);
    Code:
       0: aload_1
       1: invokestatic  #51                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #52                 // String topic can not be null
       6: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_2
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #32                 // String config can not be null
      20: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      23: aload_3
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ldc           #53                 // String callback can not be null
      34: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      37: aload_0
      38: aload_2
      39: invokevirtual #54                 // Method getTxFeedbackManager:(Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;)Lorg/joyqueue/client/internal/producer/TxFeedbackManager;
      42: astore        4
      44: aload         4
      46: aload_1
      47: aload_3
      48: invokeinterface #55,  3           // InterfaceMethod org/joyqueue/client/internal/producer/TxFeedbackManager.setTransactionCallback:(Ljava/lang/String;Lorg/joyqueue/client/internal/producer/callback/TxFeedbackCallback;)V
      53: aload_0
      54: getfield      #3                  // Field txFeedbackManagerMap:Ljava/util/Map;
      57: aload_1
      58: aload         4
      60: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: return

  public synchronized void removeTransactionCallback(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #51                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ldc           #52                 // String topic can not be null
       6: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
       9: aload_0
      10: getfield      #3                  // Field txFeedbackManagerMap:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #22                 // class org/joyqueue/client/internal/producer/TxFeedbackManager
      22: astore_2
      23: aload_2
      24: ifnonnull     48
      27: new           #58                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #59                 // String %s feedback is not exist
      33: iconst_1
      34: anewarray     #60                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_1
      40: aastore
      41: invokestatic  #61                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: aload_1
      50: invokeinterface #63,  2           // InterfaceMethod org/joyqueue/client/internal/producer/TxFeedbackManager.removeTransactionCallback:(Ljava/lang/String;)V
      55: return

  protected org.joyqueue.client.internal.cluster.ClusterManager getClusterManager();
    Code:
       0: aload_0
       1: getfield      #8                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
       4: ifnull        12
       7: aload_0
       8: getfield      #8                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      16: aload_0
      17: invokevirtual #35                 // Method getClusterClientManager:()Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      20: invokestatic  #64                 // Method org/joyqueue/client/internal/cluster/ClusterManagerFactory.create:(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterClientManager;)Lorg/joyqueue/client/internal/cluster/ClusterManager;
      23: astore_1
      24: aload_1
      25: invokevirtual #65                 // Method org/joyqueue/client/internal/cluster/ClusterManager.start:()V
      28: goto          41
      31: astore_2
      32: new           #67                 // class org/joyqueue/client/internal/exception/ClientException
      35: dup
      36: aload_2
      37: invokespecial #68                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #8                  // Field clusterManager:Lorg/joyqueue/client/internal/cluster/ClusterManager;
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          24    28    31   Class java/lang/Exception

  protected org.joyqueue.client.internal.cluster.ClusterClientManager getClusterClientManager();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clusterClientManager:Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
       4: ifnull        12
       7: aload_0
       8: getfield      #10                 // Field clusterClientManager:Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      16: aload_0
      17: getfield      #7                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      20: invokestatic  #69                 // Method org/joyqueue/client/internal/cluster/ClusterClientManagerFactory.create:(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/transport/config/TransportConfig;)Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      23: astore_1
      24: aload_1
      25: invokevirtual #70                 // Method org/joyqueue/client/internal/cluster/ClusterClientManager.start:()V
      28: goto          41
      31: astore_2
      32: new           #67                 // class org/joyqueue/client/internal/exception/ClientException
      35: dup
      36: aload_2
      37: invokespecial #68                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #10                 // Field clusterClientManager:Lorg/joyqueue/client/internal/cluster/ClusterClientManager;
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          24    28    31   Class java/lang/Exception

  protected org.joyqueue.client.internal.producer.transport.ProducerClientManager getProducerClientManager();
    Code:
       0: aload_0
       1: getfield      #12                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
       4: ifnull        12
       7: aload_0
       8: getfield      #12                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      16: aload_0
      17: getfield      #7                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      20: invokestatic  #71                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManagerFactory.create:(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/transport/config/TransportConfig;)Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      23: astore_1
      24: aload_1
      25: invokevirtual #72                 // Method org/joyqueue/client/internal/producer/transport/ProducerClientManager.start:()V
      28: goto          41
      31: astore_2
      32: new           #67                 // class org/joyqueue/client/internal/exception/ClientException
      35: dup
      36: aload_2
      37: invokespecial #68                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #12                 // Field producerClientManager:Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          24    28    31   Class java/lang/Exception

  protected org.joyqueue.client.internal.consumer.transport.ConsumerClientManager getConsumerClientManager();
    Code:
       0: aload_0
       1: getfield      #14                 // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
       4: ifnull        12
       7: aload_0
       8: getfield      #14                 // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
      16: aload_0
      17: getfield      #7                  // Field transportConfig:Lorg/joyqueue/client/internal/transport/config/TransportConfig;
      20: invokestatic  #73                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManagerFactory.create:(Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/transport/config/TransportConfig;)Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      23: astore_1
      24: aload_1
      25: invokevirtual #74                 // Method org/joyqueue/client/internal/consumer/transport/ConsumerClientManager.start:()V
      28: goto          41
      31: astore_2
      32: new           #67                 // class org/joyqueue/client/internal/exception/ClientException
      35: dup
      36: aload_2
      37: invokespecial #68                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #14                 // Field consumerClientManager:Lorg/joyqueue/client/internal/consumer/transport/ConsumerClientManager;
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          24    28    31   Class java/lang/Exception

  protected org.joyqueue.client.internal.producer.TxFeedbackManager getTxFeedbackManager(org.joyqueue.client.internal.producer.feedback.config.TxFeedbackConfig);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field nameServerConfig:Lorg/joyqueue/client/internal/nameserver/NameServerConfig;
       5: aload_0
       6: invokevirtual #34                 // Method getClusterManager:()Lorg/joyqueue/client/internal/cluster/ClusterManager;
       9: aload_0
      10: invokevirtual #45                 // Method getProducerClientManager:()Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;
      13: invokestatic  #75                 // Method org/joyqueue/client/internal/producer/TxFeedbackManagerFactory.create:(Lorg/joyqueue/client/internal/producer/feedback/config/TxFeedbackConfig;Lorg/joyqueue/client/internal/nameserver/NameServerConfig;Lorg/joyqueue/client/internal/cluster/ClusterManager;Lorg/joyqueue/client/internal/producer/transport/ProducerClientManager;)Lorg/joyqueue/client/internal/producer/TxFeedbackManager;
      16: astore_2
      17: aload_2
      18: invokeinterface #76,  1           // InterfaceMethod org/joyqueue/client/internal/producer/TxFeedbackManager.start:()V
      23: goto          36
      26: astore_3
      27: new           #67                 // class org/joyqueue/client/internal/exception/ClientException
      30: dup
      31: aload_3
      32: invokespecial #68                 // Method org/joyqueue/client/internal/exception/ClientException."<init>":(Ljava/lang/Throwable;)V
      35: athrow
      36: aload_2
      37: areturn
    Exception table:
       from    to  target type
          17    23    26   Class java/lang/Exception
}
