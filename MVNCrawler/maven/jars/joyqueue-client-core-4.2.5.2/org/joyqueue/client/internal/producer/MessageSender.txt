Compiled from "MessageSender.java"
public interface org.joyqueue.client.internal.producer.MessageSender extends org.joyqueue.toolkit.lang.LifeCycle {
  public abstract org.joyqueue.client.internal.producer.domain.SendResultData send(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long);

  public abstract org.joyqueue.client.internal.producer.domain.SendBatchResultData batchSend(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);

  public abstract void sendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncSendCallback);

  public abstract void batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncBatchSendCallback);

  public abstract java.util.concurrent.CompletableFuture<org.joyqueue.client.internal.producer.domain.SendBatchResultData> batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);

  public abstract void sendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, org.joyqueue.client.internal.producer.domain.ProduceMessage, org.joyqueue.domain.QosLevel, long, long);

  public abstract void batchSendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>, org.joyqueue.domain.QosLevel, long, long);

  public abstract void batchSendOneway(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);

  public abstract java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.domain.SendBatchResultData> batchSend(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);

  public abstract void batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long, org.joyqueue.client.internal.producer.callback.AsyncMultiBatchSendCallback);

  public abstract java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String, org.joyqueue.client.internal.producer.domain.SendBatchResultData>> batchSendAsync(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.List<org.joyqueue.client.internal.producer.domain.ProduceMessage>>, org.joyqueue.domain.QosLevel, long, long);

  public abstract org.joyqueue.client.internal.producer.domain.SendPrepareResult prepare(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long, long, long);

  public abstract org.joyqueue.exception.JoyQueueCode commit(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long);

  public abstract org.joyqueue.exception.JoyQueueCode rollback(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, java.lang.String, long);

  public abstract org.joyqueue.client.internal.producer.domain.FetchFeedbackData fetchFeedback(org.joyqueue.network.domain.BrokerNode, java.lang.String, java.lang.String, org.joyqueue.network.command.TxStatus, int, long, long);
}
