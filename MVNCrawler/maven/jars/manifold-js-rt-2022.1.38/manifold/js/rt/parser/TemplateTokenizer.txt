Compiled from "TemplateTokenizer.java"
public class manifold.js.rt.parser.TemplateTokenizer extends manifold.js.rt.parser.Tokenizer {
  private boolean _inRawString;

  private boolean _inExpression;

  private boolean _inStatement;

  private boolean _isJST;

  private java.lang.String exprStart;

  private java.util.HashMap<java.lang.String, java.lang.String> _puncEnterExitMap;

  private java.util.Stack<java.lang.String> _curlyStack;

  public manifold.js.rt.parser.TemplateTokenizer(java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #1                  // Method manifold/js/rt/parser/Tokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: iload         4
       9: invokespecial #2                  // Method init:(Z)V
      12: return

  manifold.js.rt.parser.TemplateTokenizer(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method manifold/js/rt/parser/Tokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: iload_2
       8: invokespecial #2                  // Method init:(Z)V
      11: return

  private void init(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field _isJST:Z
       5: aload_0
       6: iconst_1
       7: putfield      #4                  // Field _inRawString:Z
      10: aload_0
      11: new           #5                  // class java/util/Stack
      14: dup
      15: invokespecial #6                  // Method java/util/Stack."<init>":()V
      18: putfield      #7                  // Field _curlyStack:Ljava/util/Stack;
      21: aload_0
      22: new           #8                  // class java/util/HashMap
      25: dup
      26: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      29: putfield      #10                 // Field _puncEnterExitMap:Ljava/util/HashMap;
      32: aload_0
      33: getfield      #10                 // Field _puncEnterExitMap:Ljava/util/HashMap;
      36: ldc           #11                 // String ${
      38: ldc           #12                 // String }
      40: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: iload_1
      45: ifeq          84
      48: aload_0
      49: getfield      #10                 // Field _puncEnterExitMap:Ljava/util/HashMap;
      52: ldc           #14                 // String <%
      54: ldc           #15                 // String %>
      56: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: getfield      #10                 // Field _puncEnterExitMap:Ljava/util/HashMap;
      64: ldc           #16                 // String <%=
      66: ldc           #15                 // String %>
      68: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload_0
      73: getfield      #10                 // Field _puncEnterExitMap:Ljava/util/HashMap;
      76: ldc           #17                 // String <%@
      78: ldc           #15                 // String %>
      80: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: return

  public boolean isJST();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _isJST:Z
       4: ireturn

  public manifold.js.rt.parser.Token next();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method reachedEOF:()Z
       4: ifeq          20
       7: aload_0
       8: getstatic     #19                 // Field manifold/js/rt/parser/TokenType.EOF:Lmanifold/js/rt/parser/TokenType;
      11: ldc           #20                 // String EOF
      13: invokevirtual #21                 // Method newToken:(Lmanifold/js/rt/parser/TokenType;Ljava/lang/String;)Lmanifold/js/rt/parser/Token;
      16: astore_1
      17: goto          135
      20: aload_0
      21: getfield      #4                  // Field _inRawString:Z
      24: ifeq          35
      27: aload_0
      28: invokespecial #22                 // Method consumeRawString:()Lmanifold/js/rt/parser/Token;
      31: astore_1
      32: goto          135
      35: aload_0
      36: getfield      #23                 // Field _inExpression:Z
      39: ifne          49
      42: aload_0
      43: getfield      #24                 // Field _inStatement:Z
      46: ifeq          130
      49: aload_0
      50: invokespecial #25                 // Method checkForExpressionExit:()Z
      53: ifeq          61
      56: aload_0
      57: invokespecial #26                 // Method consumeTemplatePunc:()Lmanifold/js/rt/parser/Token;
      60: areturn
      61: aload_0
      62: invokespecial #27                 // Method manifold/js/rt/parser/Tokenizer.next:()Lmanifold/js/rt/parser/Token;
      65: astore_2
      66: aload_2
      67: invokevirtual #28                 // Method manifold/js/rt/parser/Token.getType:()Lmanifold/js/rt/parser/TokenType;
      70: getstatic     #29                 // Field manifold/js/rt/parser/TokenType.PUNCTUATION:Lmanifold/js/rt/parser/TokenType;
      73: if_acmpne     96
      76: aload_2
      77: invokevirtual #30                 // Method manifold/js/rt/parser/Token.getValue:()Ljava/lang/String;
      80: ldc           #12                 // String }
      82: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          96
      88: aload_0
      89: getfield      #7                  // Field _curlyStack:Ljava/util/Stack;
      92: invokevirtual #32                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      95: pop
      96: aload_2
      97: invokevirtual #28                 // Method manifold/js/rt/parser/Token.getType:()Lmanifold/js/rt/parser/TokenType;
     100: getstatic     #29                 // Field manifold/js/rt/parser/TokenType.PUNCTUATION:Lmanifold/js/rt/parser/TokenType;
     103: if_acmpne     128
     106: aload_2
     107: invokevirtual #30                 // Method manifold/js/rt/parser/Token.getValue:()Ljava/lang/String;
     110: ldc           #33                 // String {
     112: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     115: ifeq          128
     118: aload_0
     119: getfield      #7                  // Field _curlyStack:Ljava/util/Stack;
     122: ldc           #33                 // String {
     124: invokevirtual #34                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_2
     129: areturn
     130: aload_0
     131: invokespecial #26                 // Method consumeTemplatePunc:()Lmanifold/js/rt/parser/Token;
     134: astore_1
     135: aload_1
     136: areturn

  private manifold.js.rt.parser.Token consumeTemplatePunc();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method currChar:()C
       4: invokestatic  #36                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: invokevirtual #35                 // Method currChar:()C
      12: lookupswitch  { // 4
                    36: 56
                    37: 224
                    60: 103
                   125: 283
               default: 291
          }
      56: aload_0
      57: invokevirtual #37                 // Method nextChar:()V
      60: new           #38                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      67: aload_1
      68: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: invokevirtual #35                 // Method currChar:()C
      75: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      78: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: astore_1
      82: aload_0
      83: invokevirtual #37                 // Method nextChar:()V
      86: aload_0
      87: invokespecial #43                 // Method setInExpression:()V
      90: aload_0
      91: getfield      #7                  // Field _curlyStack:Ljava/util/Stack;
      94: ldc           #11                 // String ${
      96: invokevirtual #34                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: goto          291
     103: aload_0
     104: invokevirtual #37                 // Method nextChar:()V
     107: new           #38                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     114: aload_1
     115: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_0
     119: invokevirtual #35                 // Method currChar:()C
     122: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     125: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: astore_1
     129: aload_0
     130: invokevirtual #37                 // Method nextChar:()V
     133: aload_0
     134: invokevirtual #35                 // Method currChar:()C
     137: bipush        64
     139: if_icmpne     175
     142: new           #38                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     149: aload_1
     150: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_0
     154: invokevirtual #35                 // Method currChar:()C
     157: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     160: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: astore_1
     164: aload_0
     165: invokevirtual #37                 // Method nextChar:()V
     168: aload_0
     169: invokespecial #44                 // Method setInStatement:()V
     172: goto          291
     175: aload_0
     176: invokevirtual #35                 // Method currChar:()C
     179: bipush        61
     181: if_icmpne     217
     184: new           #38                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     191: aload_1
     192: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: aload_0
     196: invokevirtual #35                 // Method currChar:()C
     199: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     202: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     205: astore_1
     206: aload_0
     207: invokevirtual #37                 // Method nextChar:()V
     210: aload_0
     211: invokespecial #43                 // Method setInExpression:()V
     214: goto          291
     217: aload_0
     218: invokespecial #44                 // Method setInStatement:()V
     221: goto          291
     224: aload_0
     225: invokevirtual #37                 // Method nextChar:()V
     228: new           #38                 // class java/lang/StringBuilder
     231: dup
     232: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     235: aload_1
     236: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: aload_0
     240: invokevirtual #35                 // Method currChar:()C
     243: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     246: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: astore_1
     250: aload_0
     251: invokevirtual #37                 // Method nextChar:()V
     254: new           #38                 // class java/lang/StringBuilder
     257: dup
     258: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     261: aload_1
     262: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: aload_0
     266: invokespecial #45                 // Method consumeNewLineFollowingStatement:()Ljava/lang/String;
     269: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: astore_1
     276: aload_0
     277: invokespecial #46                 // Method setInRawString:()V
     280: goto          291
     283: aload_0
     284: invokevirtual #37                 // Method nextChar:()V
     287: aload_0
     288: invokespecial #46                 // Method setInRawString:()V
     291: aload_0
     292: getfield      #23                 // Field _inExpression:Z
     295: ifne          305
     298: aload_0
     299: getfield      #24                 // Field _inStatement:Z
     302: ifeq          310
     305: aload_0
     306: aload_1
     307: putfield      #47                 // Field exprStart:Ljava/lang/String;
     310: aload_0
     311: getstatic     #48                 // Field manifold/js/rt/parser/TokenType.TEMPLATEPUNC:Lmanifold/js/rt/parser/TokenType;
     314: aload_1
     315: invokevirtual #21                 // Method newToken:(Lmanifold/js/rt/parser/TokenType;Ljava/lang/String;)Lmanifold/js/rt/parser/Token;
     318: areturn

  private java.lang.String consumeNewLineFollowingStatement();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _inStatement:Z
       4: ifne          10
       7: ldc           #49                 // String
       9: areturn
      10: ldc           #49                 // String
      12: astore_1
      13: aload_0
      14: invokevirtual #35                 // Method currChar:()C
      17: bipush        13
      19: if_icmpne     48
      22: new           #38                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #35                 // Method currChar:()C
      37: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_1
      44: aload_0
      45: invokevirtual #37                 // Method nextChar:()V
      48: aload_0
      49: invokevirtual #35                 // Method currChar:()C
      52: bipush        10
      54: if_icmpne     83
      57: new           #38                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      64: aload_1
      65: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #35                 // Method currChar:()C
      72: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: astore_1
      79: aload_0
      80: invokevirtual #37                 // Method nextChar:()V
      83: aload_1
      84: areturn

  private manifold.js.rt.parser.Token consumeRawString();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #18                 // Method reachedEOF:()Z
      12: ifne          95
      15: aload_0
      16: invokespecial #50                 // Method checkForExpressionEnter:()Z
      19: ifeq          30
      22: aload_0
      23: iconst_0
      24: putfield      #4                  // Field _inRawString:Z
      27: goto          95
      30: aload_0
      31: getfield      #3                  // Field _isJST:Z
      34: ifne          79
      37: aload_0
      38: invokevirtual #35                 // Method currChar:()C
      41: invokestatic  #51                 // Method manifold/js/rt/parser/TokenType.isLineTerminator:(C)Z
      44: ifeq          79
      47: aload_0
      48: invokevirtual #35                 // Method currChar:()C
      51: bipush        13
      53: if_icmpne     69
      56: aload_0
      57: invokevirtual #52                 // Method peek:()C
      60: bipush        10
      62: if_icmpne     69
      65: aload_0
      66: invokevirtual #37                 // Method nextChar:()V
      69: aload_1
      70: ldc           #53                 // String \\n
      72: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: goto          88
      79: aload_1
      80: aload_0
      81: invokevirtual #35                 // Method currChar:()C
      84: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      87: pop
      88: aload_0
      89: invokevirtual #37                 // Method nextChar:()V
      92: goto          8
      95: aload_0
      96: getstatic     #54                 // Field manifold/js/rt/parser/TokenType.RAWSTRING:Lmanifold/js/rt/parser/TokenType;
      99: aload_1
     100: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokevirtual #21                 // Method newToken:(Lmanifold/js/rt/parser/TokenType;Ljava/lang/String;)Lmanifold/js/rt/parser/Token;
     106: areturn

  private boolean checkForExpressionEnter();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method currChar:()C
       4: bipush        92
       6: if_icmpne     33
       9: aload_0
      10: invokevirtual #52                 // Method peek:()C
      13: bipush        60
      15: if_icmpeq     27
      18: aload_0
      19: invokevirtual #52                 // Method peek:()C
      22: bipush        36
      24: if_icmpne     33
      27: aload_0
      28: invokevirtual #37                 // Method nextChar:()V
      31: iconst_0
      32: ireturn
      33: aload_0
      34: aload_0
      35: getfield      #10                 // Field _puncEnterExitMap:Ljava/util/HashMap;
      38: new           #38                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      45: aload_0
      46: invokevirtual #35                 // Method currChar:()C
      49: invokestatic  #36                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      52: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #52                 // Method peek:()C
      59: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokevirtual #55                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #56                 // class java/lang/String
      71: putfield      #47                 // Field exprStart:Ljava/lang/String;
      74: aload_0
      75: getfield      #47                 // Field exprStart:Ljava/lang/String;
      78: ifnull        85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn

  private boolean checkForExpressionExit();
    Code:
       0: aload_0
       1: getfield      #47                 // Field exprStart:Ljava/lang/String;
       4: ldc           #11                 // String ${
       6: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          41
      12: aload_0
      13: invokevirtual #35                 // Method currChar:()C
      16: bipush        125
      18: if_icmpne     41
      21: aload_0
      22: getfield      #7                  // Field _curlyStack:Ljava/util/Stack;
      25: invokevirtual #57                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      28: checkcast     #56                 // class java/lang/String
      31: ldc           #11                 // String ${
      33: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: aload_0
      42: getfield      #47                 // Field exprStart:Ljava/lang/String;
      45: ldc           #11                 // String ${
      47: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          73
      53: aload_0
      54: invokevirtual #35                 // Method currChar:()C
      57: bipush        37
      59: if_icmpne     73
      62: aload_0
      63: invokevirtual #52                 // Method peek:()C
      66: bipush        62
      68: if_icmpne     73
      71: iconst_1
      72: ireturn
      73: iconst_0
      74: ireturn

  private void setInRawString();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field _inRawString:Z
       5: aload_0
       6: iconst_0
       7: putfield      #24                 // Field _inStatement:Z
      10: aload_0
      11: iconst_0
      12: putfield      #23                 // Field _inExpression:Z
      15: return

  private void setInStatement();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #24                 // Field _inStatement:Z
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field _inRawString:Z
      10: return

  private void setInExpression();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #23                 // Field _inExpression:Z
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field _inRawString:Z
      10: return
}
