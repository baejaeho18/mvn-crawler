Compiled from "IntegerFunctions.java"
public final class org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions {
  private static final java.math.BigInteger ZERO;

  private static final java.math.BigInteger ONE;

  private static final java.math.BigInteger TWO;

  private static final java.math.BigInteger FOUR;

  private static final int[] SMALL_PRIMES;

  private static final long SMALL_PRIME_PRODUCT;

  private static java.security.SecureRandom sr;

  private static final int[] jacobiTable;

  private org.bouncycastle.pqc.math.linearalgebra.IntegerFunctions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int jacobi(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: lconst_1
       1: lstore        5
       3: lconst_1
       4: lstore        5
       6: aload_1
       7: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      10: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      13: ifeq          37
      16: aload_0
      17: invokevirtual #4                  // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      20: astore_2
      21: aload_2
      22: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      25: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn
      37: aload_0
      38: iconst_0
      39: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      42: ifne          55
      45: aload_1
      46: iconst_0
      47: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: astore_2
      57: aload_1
      58: astore_3
      59: aload_3
      60: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
      63: iconst_m1
      64: if_icmpne     85
      67: aload_3
      68: invokevirtual #8                  // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      71: astore_3
      72: aload_2
      73: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
      76: iconst_m1
      77: if_icmpne     85
      80: ldc2_w        #9                  // long -1l
      83: lstore        5
      85: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      88: astore        4
      90: aload_3
      91: iconst_0
      92: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      95: ifne          119
      98: aload         4
     100: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     103: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     106: astore        4
     108: aload_3
     109: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     112: invokevirtual #13                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     115: astore_3
     116: goto          90
     119: aload         4
     121: iconst_0
     122: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     125: ifeq          145
     128: lload         5
     130: getstatic     #14                 // Field jacobiTable:[I
     133: aload_2
     134: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
     137: bipush        7
     139: iand
     140: iaload
     141: i2l
     142: lmul
     143: lstore        5
     145: aload_2
     146: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
     149: ifge          170
     152: aload_3
     153: iconst_1
     154: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     157: ifeq          165
     160: lload         5
     162: lneg
     163: lstore        5
     165: aload_2
     166: invokevirtual #8                  // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     169: astore_2
     170: aload_2
     171: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
     174: ifeq          283
     177: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
     180: astore        4
     182: aload_2
     183: iconst_0
     184: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     187: ifne          211
     190: aload         4
     192: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     195: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     198: astore        4
     200: aload_2
     201: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     204: invokevirtual #13                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     207: astore_2
     208: goto          182
     211: aload         4
     213: iconst_0
     214: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     217: ifeq          237
     220: lload         5
     222: getstatic     #14                 // Field jacobiTable:[I
     225: aload_3
     226: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
     229: bipush        7
     231: iand
     232: iaload
     233: i2l
     234: lmul
     235: lstore        5
     237: aload_2
     238: aload_3
     239: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     242: ifge          274
     245: aload_2
     246: astore        7
     248: aload_3
     249: astore_2
     250: aload         7
     252: astore_3
     253: aload_2
     254: iconst_1
     255: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     258: ifeq          274
     261: aload_3
     262: iconst_1
     263: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     266: ifeq          274
     269: lload         5
     271: lneg
     272: lstore        5
     274: aload_2
     275: aload_3
     276: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     279: astore_2
     280: goto          170
     283: aload_3
     284: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     287: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     290: ifeq          299
     293: lload         5
     295: l2i
     296: goto          300
     299: iconst_0
     300: ireturn

  public static java.math.BigInteger ressol(java.math.BigInteger, java.math.BigInteger) throws java.lang.IllegalArgumentException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
       6: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
       9: ifge          18
      12: aload_0
      13: aload_1
      14: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      17: astore_0
      18: aload_0
      19: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      22: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      31: areturn
      32: aload_1
      33: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
      36: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      39: ifeq          44
      42: aload_0
      43: areturn
      44: aload_1
      45: iconst_0
      46: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      49: ifeq          105
      52: aload_1
      53: iconst_1
      54: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      57: ifeq          105
      60: aload_0
      61: aload_1
      62: invokestatic  #18                 // Method jacobi:(Ljava/math/BigInteger;Ljava/math/BigInteger;)I
      65: iconst_1
      66: if_icmpne     90
      69: aload_1
      70: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      73: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      76: astore_2
      77: aload_2
      78: iconst_2
      79: invokevirtual #19                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      82: astore_2
      83: aload_0
      84: aload_2
      85: aload_1
      86: invokevirtual #20                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      89: areturn
      90: new           #21                 // class java/lang/IllegalArgumentException
      93: dup
      94: aload_0
      95: aload_1
      96: invokedynamic #22,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/lang/String;
     101: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: lconst_0
     106: lstore_3
     107: aload_1
     108: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     111: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     114: astore        5
     116: lconst_0
     117: lstore        6
     119: aload         5
     121: iconst_0
     122: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
     125: ifne          145
     128: lload         6
     130: lconst_1
     131: ladd
     132: lstore        6
     134: aload         5
     136: iconst_1
     137: invokevirtual #19                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     140: astore        5
     142: goto          119
     145: aload         5
     147: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     150: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     153: astore        5
     155: aload         5
     157: iconst_1
     158: invokevirtual #19                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     161: astore        5
     163: aload_0
     164: aload         5
     166: aload_1
     167: invokevirtual #20                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     170: astore        8
     172: aload         8
     174: aload         8
     176: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     179: aload_1
     180: invokevirtual #25                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     183: astore        9
     185: aload         9
     187: aload_0
     188: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     191: aload_1
     192: invokevirtual #25                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     195: astore        9
     197: aload         8
     199: aload_0
     200: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     203: aload_1
     204: invokevirtual #25                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     207: astore        8
     209: aload         9
     211: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     214: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     217: ifeq          223
     220: aload         8
     222: areturn
     223: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     226: astore        10
     228: aload         10
     230: aload_1
     231: invokestatic  #18                 // Method jacobi:(Ljava/math/BigInteger;Ljava/math/BigInteger;)I
     234: iconst_1
     235: if_icmpne     251
     238: aload         10
     240: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     243: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     246: astore        10
     248: goto          228
     251: aload         5
     253: astore_2
     254: aload_2
     255: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     258: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     261: astore_2
     262: aload_2
     263: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     266: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     269: astore_2
     270: aload         10
     272: aload_2
     273: aload_1
     274: invokevirtual #20                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     277: astore        11
     279: aload         9
     281: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     284: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     287: iconst_1
     288: if_icmpne     442
     291: aload         9
     293: astore        5
     295: lload         6
     297: lstore_3
     298: lconst_0
     299: lstore        6
     301: aload         5
     303: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     306: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     309: ifne          334
     312: aload         5
     314: aload         5
     316: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     319: aload_1
     320: invokevirtual #26                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     323: astore        5
     325: lload         6
     327: lconst_1
     328: ladd
     329: lstore        6
     331: goto          301
     334: lload_3
     335: lload         6
     337: lsub
     338: lstore_3
     339: lload_3
     340: lconst_0
     341: lcmp
     342: ifne          360
     345: new           #21                 // class java/lang/IllegalArgumentException
     348: dup
     349: aload_0
     350: aload_1
     351: invokedynamic #22,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/lang/String;
     356: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     359: athrow
     360: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     363: astore_2
     364: lconst_0
     365: lstore        12
     367: lload         12
     369: lload_3
     370: lconst_1
     371: lsub
     372: lcmp
     373: ifge          391
     376: aload_2
     377: iconst_1
     378: invokevirtual #27                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
     381: astore_2
     382: lload         12
     384: lconst_1
     385: ladd
     386: lstore        12
     388: goto          367
     391: aload         11
     393: aload_2
     394: aload_1
     395: invokevirtual #20                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     398: astore        11
     400: aload         8
     402: aload         11
     404: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     407: aload_1
     408: invokevirtual #25                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     411: astore        8
     413: aload         11
     415: aload         11
     417: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     420: aload_1
     421: invokevirtual #25                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     424: astore        11
     426: aload         9
     428: aload         11
     430: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     433: aload_1
     434: invokevirtual #26                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     437: astore        9
     439: goto          279
     442: aload         8
     444: areturn

  public static int gcd(int, int);
    Code:
       0: iload_0
       1: i2l
       2: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       5: iload_1
       6: i2l
       7: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      10: invokevirtual #29                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      13: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
      16: ireturn

  public static int[] extGCD(int, int);
    Code:
       0: iload_0
       1: i2l
       2: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       5: astore_2
       6: iload_1
       7: i2l
       8: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      11: astore_3
      12: aload_2
      13: aload_3
      14: invokestatic  #30                 // Method extgcd:(Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      17: astore        4
      19: iconst_3
      20: newarray       int
      22: astore        5
      24: aload         5
      26: iconst_0
      27: aload         4
      29: iconst_0
      30: aaload
      31: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
      34: iastore
      35: aload         5
      37: iconst_1
      38: aload         4
      40: iconst_1
      41: aaload
      42: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
      45: iastore
      46: aload         5
      48: iconst_2
      49: aload         4
      51: iconst_2
      52: aaload
      53: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
      56: iastore
      57: aload         5
      59: areturn

  public static java.math.BigInteger divideAndRound(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
       4: ifge          19
       7: aload_0
       8: invokevirtual #8                  // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      11: aload_1
      12: invokestatic  #31                 // Method divideAndRound:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      15: invokevirtual #8                  // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      18: areturn
      19: aload_1
      20: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
      23: ifge          38
      26: aload_0
      27: aload_1
      28: invokevirtual #8                  // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      31: invokestatic  #31                 // Method divideAndRound:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      34: invokevirtual #8                  // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      37: areturn
      38: aload_0
      39: iconst_1
      40: invokevirtual #27                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      43: aload_1
      44: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      47: aload_1
      48: iconst_1
      49: invokevirtual #27                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      52: invokevirtual #13                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: areturn

  public static java.math.BigInteger[] divideAndRound(java.math.BigInteger[], java.math.BigInteger);
    Code:
       0: aload_0
       1: arraylength
       2: anewarray     #32                 // class java/math/BigInteger
       5: astore_2
       6: iconst_0
       7: istore_3
       8: iload_3
       9: aload_0
      10: arraylength
      11: if_icmpge     30
      14: aload_2
      15: iload_3
      16: aload_0
      17: iload_3
      18: aaload
      19: aload_1
      20: invokestatic  #31                 // Method divideAndRound:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      23: aastore
      24: iinc          3, 1
      27: goto          8
      30: aload_2
      31: areturn

  public static int ceilLog(java.math.BigInteger);
    Code:
       0: iconst_0
       1: istore_1
       2: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
       5: astore_2
       6: aload_2
       7: aload_0
       8: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      11: ifge          26
      14: iinc          1, 1
      17: aload_2
      18: iconst_1
      19: invokevirtual #27                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      22: astore_2
      23: goto          6
      26: iload_1
      27: ireturn

  public static int ceilLog(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_1
       3: istore_2
       4: iload_2
       5: iload_0
       6: if_icmpge     19
       9: iload_2
      10: iconst_1
      11: ishl
      12: istore_2
      13: iinc          1, 1
      16: goto          4
      19: iload_1
      20: ireturn

  public static int ceilLog256(int);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iload_0
       7: ifge          16
      10: iload_0
      11: ineg
      12: istore_1
      13: goto          18
      16: iload_0
      17: istore_1
      18: iconst_0
      19: istore_2
      20: iload_1
      21: ifle          35
      24: iinc          2, 1
      27: iload_1
      28: bipush        8
      30: iushr
      31: istore_1
      32: goto          20
      35: iload_2
      36: ireturn

  public static int ceilLog256(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifne          8
       6: iconst_1
       7: ireturn
       8: lload_0
       9: lconst_0
      10: lcmp
      11: ifge          20
      14: lload_0
      15: lneg
      16: lstore_2
      17: goto          22
      20: lload_0
      21: lstore_2
      22: iconst_0
      23: istore        4
      25: lload_2
      26: lconst_0
      27: lcmp
      28: ifle          42
      31: iinc          4, 1
      34: lload_2
      35: bipush        8
      37: lushr
      38: lstore_2
      39: goto          25
      42: iload         4
      44: ireturn

  public static int floorLog(java.math.BigInteger);
    Code:
       0: iconst_m1
       1: istore_1
       2: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
       5: astore_2
       6: aload_2
       7: aload_0
       8: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      11: ifgt          26
      14: iinc          1, 1
      17: aload_2
      18: iconst_1
      19: invokevirtual #27                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      22: astore_2
      23: goto          6
      26: iload_1
      27: ireturn

  public static int floorLog(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: ifgt          8
       6: iconst_m1
       7: ireturn
       8: iload_0
       9: iconst_1
      10: iushr
      11: istore_2
      12: iload_2
      13: ifle          26
      16: iinc          1, 1
      19: iload_2
      20: iconst_1
      21: iushr
      22: istore_2
      23: goto          12
      26: iload_1
      27: ireturn

  public static int maxPower(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: ifeq          24
       6: iconst_1
       7: istore_2
       8: iload_0
       9: iload_2
      10: iand
      11: ifne          24
      14: iinc          1, 1
      17: iload_2
      18: iconst_1
      19: ishl
      20: istore_2
      21: goto          8
      24: iload_1
      25: ireturn

  public static int bitCount(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: ifeq          19
       6: iload_1
       7: iload_0
       8: iconst_1
       9: iand
      10: iadd
      11: istore_1
      12: iload_0
      13: iconst_1
      14: iushr
      15: istore_0
      16: goto          2
      19: iload_1
      20: ireturn

  public static int order(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: irem
       3: istore_2
       4: iconst_1
       5: istore_3
       6: iload_2
       7: ifne          25
      10: new           #21                 // class java/lang/IllegalArgumentException
      13: dup
      14: iload_0
      15: iload_1
      16: invokedynamic #33,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;
      21: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: iload_2
      26: iconst_1
      27: if_icmpeq     52
      30: iload_2
      31: iload_0
      32: imul
      33: istore_2
      34: iload_2
      35: iload_1
      36: irem
      37: istore_2
      38: iload_2
      39: ifge          46
      42: iload_2
      43: iload_1
      44: iadd
      45: istore_2
      46: iinc          3, 1
      49: goto          25
      52: iload_3
      53: ireturn

  public static java.math.BigInteger reduceInto(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       5: aload_2
       6: aload_1
       7: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      10: invokevirtual #26                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      13: aload_1
      14: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      17: areturn

  public static int pow(int, int);
    Code:
       0: iconst_1
       1: istore_2
       2: iload_1
       3: ifle          28
       6: iload_1
       7: iconst_1
       8: iand
       9: iconst_1
      10: if_icmpne     17
      13: iload_2
      14: iload_0
      15: imul
      16: istore_2
      17: iload_0
      18: iload_0
      19: imul
      20: istore_0
      21: iload_1
      22: iconst_1
      23: iushr
      24: istore_1
      25: goto          2
      28: iload_2
      29: ireturn

  public static long pow(long, int);
    Code:
       0: lconst_1
       1: lstore_3
       2: iload_2
       3: ifle          28
       6: iload_2
       7: iconst_1
       8: iand
       9: iconst_1
      10: if_icmpne     17
      13: lload_3
      14: lload_0
      15: lmul
      16: lstore_3
      17: lload_0
      18: lload_0
      19: lmul
      20: lstore_0
      21: iload_2
      22: iconst_1
      23: iushr
      24: istore_2
      25: goto          2
      28: lload_3
      29: lreturn

  public static int modPow(int, int, int);
    Code:
       0: iload_2
       1: ifle          16
       4: iload_2
       5: iload_2
       6: imul
       7: ldc           #35                 // int 2147483647
       9: if_icmpgt     16
      12: iload_1
      13: ifge          18
      16: iconst_0
      17: ireturn
      18: iconst_1
      19: istore_3
      20: iload_0
      21: iload_2
      22: irem
      23: iload_2
      24: iadd
      25: iload_2
      26: irem
      27: istore_0
      28: iload_1
      29: ifle          58
      32: iload_1
      33: iconst_1
      34: iand
      35: iconst_1
      36: if_icmpne     45
      39: iload_3
      40: iload_0
      41: imul
      42: iload_2
      43: irem
      44: istore_3
      45: iload_0
      46: iload_0
      47: imul
      48: iload_2
      49: irem
      50: istore_0
      51: iload_1
      52: iconst_1
      53: iushr
      54: istore_1
      55: goto          28
      58: iload_3
      59: ireturn

  public static java.math.BigInteger[] extgcd(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
       3: astore_2
       4: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
       7: astore_3
       8: aload_0
       9: astore        4
      11: aload_1
      12: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
      15: ifeq          101
      18: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      21: astore        5
      23: aload_1
      24: astore        6
      26: aload         6
      28: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
      31: ifeq          86
      34: aload         4
      36: aload         6
      38: invokevirtual #36                 // Method java/math/BigInteger.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;
      41: astore        7
      43: aload         7
      45: iconst_0
      46: aaload
      47: astore        8
      49: aload         7
      51: iconst_1
      52: aaload
      53: astore        9
      55: aload_2
      56: aload         8
      58: aload         5
      60: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      63: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      66: astore        10
      68: aload         5
      70: astore_2
      71: aload         6
      73: astore        4
      75: aload         10
      77: astore        5
      79: aload         9
      81: astore        6
      83: goto          26
      86: aload         4
      88: aload_0
      89: aload_2
      90: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      93: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      96: aload_1
      97: invokevirtual #13                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     100: astore_3
     101: iconst_3
     102: anewarray     #32                 // class java/math/BigInteger
     105: dup
     106: iconst_0
     107: aload         4
     109: aastore
     110: dup
     111: iconst_1
     112: aload_2
     113: aastore
     114: dup
     115: iconst_2
     116: aload_3
     117: aastore
     118: areturn

  public static java.math.BigInteger leastCommonMultiple(java.math.BigInteger[]);
    Code:
       0: aload_0
       1: arraylength
       2: istore_1
       3: aload_0
       4: iconst_0
       5: aaload
       6: astore_2
       7: iconst_1
       8: istore_3
       9: iload_3
      10: iload_1
      11: if_icmpge     42
      14: aload_2
      15: aload_0
      16: iload_3
      17: aaload
      18: invokevirtual #29                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      21: astore        4
      23: aload_2
      24: aload_0
      25: iload_3
      26: aaload
      27: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      30: aload         4
      32: invokevirtual #13                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      35: astore_2
      36: iinc          3, 1
      39: goto          9
      42: aload_2
      43: areturn

  public static long mod(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lrem
       3: lstore        4
       5: lload         4
       7: lconst_0
       8: lcmp
       9: ifge          18
      12: lload         4
      14: lload_2
      15: ladd
      16: lstore        4
      18: lload         4
      20: lreturn

  public static int modInverse(int, int);
    Code:
       0: iload_0
       1: i2l
       2: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       5: iload_1
       6: i2l
       7: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      10: invokevirtual #37                 // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      13: invokevirtual #15                 // Method java/math/BigInteger.intValue:()I
      16: ireturn

  public static long modInverse(long, long);
    Code:
       0: lload_0
       1: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: lload_2
       5: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       8: invokevirtual #37                 // Method java/math/BigInteger.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: invokevirtual #38                 // Method java/math/BigInteger.longValue:()J
      14: lreturn

  public static int isPower(int, int);
    Code:
       0: iload_0
       1: ifgt          6
       4: iconst_m1
       5: ireturn
       6: iconst_0
       7: istore_2
       8: iload_0
       9: istore_3
      10: iload_3
      11: iconst_1
      12: if_icmple     33
      15: iload_3
      16: iload_1
      17: irem
      18: ifeq          23
      21: iconst_m1
      22: ireturn
      23: iload_3
      24: iload_1
      25: idiv
      26: istore_3
      27: iinc          2, 1
      30: goto          10
      33: iload_2
      34: ireturn

  public static int leastDiv(int);
    Code:
       0: iload_0
       1: ifge          7
       4: iload_0
       5: ineg
       6: istore_0
       7: iload_0
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: iload_0
      14: iconst_1
      15: iand
      16: ifne          21
      19: iconst_2
      20: ireturn
      21: iconst_3
      22: istore_1
      23: iload_1
      24: iload_0
      25: iload_1
      26: idiv
      27: if_icmpgt     44
      30: iload_0
      31: iload_1
      32: irem
      33: ifne          38
      36: iload_1
      37: ireturn
      38: iinc          1, 2
      41: goto          23
      44: iload_0
      45: ireturn

  public static boolean isPrime(int);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpge     7
       5: iconst_0
       6: ireturn
       7: iload_0
       8: iconst_2
       9: if_icmpne     14
      12: iconst_1
      13: ireturn
      14: iload_0
      15: iconst_1
      16: iand
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: iload_0
      23: bipush        42
      25: if_icmpge     55
      28: iconst_0
      29: istore_1
      30: iload_1
      31: getstatic     #39                 // Field SMALL_PRIMES:[I
      34: arraylength
      35: if_icmpge     55
      38: iload_0
      39: getstatic     #39                 // Field SMALL_PRIMES:[I
      42: iload_1
      43: iaload
      44: if_icmpne     49
      47: iconst_1
      48: ireturn
      49: iinc          1, 1
      52: goto          30
      55: iload_0
      56: iconst_3
      57: irem
      58: ifeq          137
      61: iload_0
      62: iconst_5
      63: irem
      64: ifeq          137
      67: iload_0
      68: bipush        7
      70: irem
      71: ifeq          137
      74: iload_0
      75: bipush        11
      77: irem
      78: ifeq          137
      81: iload_0
      82: bipush        13
      84: irem
      85: ifeq          137
      88: iload_0
      89: bipush        17
      91: irem
      92: ifeq          137
      95: iload_0
      96: bipush        19
      98: irem
      99: ifeq          137
     102: iload_0
     103: bipush        23
     105: irem
     106: ifeq          137
     109: iload_0
     110: bipush        29
     112: irem
     113: ifeq          137
     116: iload_0
     117: bipush        31
     119: irem
     120: ifeq          137
     123: iload_0
     124: bipush        37
     126: irem
     127: ifeq          137
     130: iload_0
     131: bipush        41
     133: irem
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: iload_0
     140: i2l
     141: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     144: bipush        20
     146: invokevirtual #40                 // Method java/math/BigInteger.isProbablePrime:(I)Z
     149: ireturn

  public static boolean passesSmallPrimeTest(java.math.BigInteger);
    Code:
       0: sipush        239
       3: newarray       int
       5: dup
       6: iconst_0
       7: iconst_2
       8: iastore
       9: dup
      10: iconst_1
      11: iconst_3
      12: iastore
      13: dup
      14: iconst_2
      15: iconst_5
      16: iastore
      17: dup
      18: iconst_3
      19: bipush        7
      21: iastore
      22: dup
      23: iconst_4
      24: bipush        11
      26: iastore
      27: dup
      28: iconst_5
      29: bipush        13
      31: iastore
      32: dup
      33: bipush        6
      35: bipush        17
      37: iastore
      38: dup
      39: bipush        7
      41: bipush        19
      43: iastore
      44: dup
      45: bipush        8
      47: bipush        23
      49: iastore
      50: dup
      51: bipush        9
      53: bipush        29
      55: iastore
      56: dup
      57: bipush        10
      59: bipush        31
      61: iastore
      62: dup
      63: bipush        11
      65: bipush        37
      67: iastore
      68: dup
      69: bipush        12
      71: bipush        41
      73: iastore
      74: dup
      75: bipush        13
      77: bipush        43
      79: iastore
      80: dup
      81: bipush        14
      83: bipush        47
      85: iastore
      86: dup
      87: bipush        15
      89: bipush        53
      91: iastore
      92: dup
      93: bipush        16
      95: bipush        59
      97: iastore
      98: dup
      99: bipush        17
     101: bipush        61
     103: iastore
     104: dup
     105: bipush        18
     107: bipush        67
     109: iastore
     110: dup
     111: bipush        19
     113: bipush        71
     115: iastore
     116: dup
     117: bipush        20
     119: bipush        73
     121: iastore
     122: dup
     123: bipush        21
     125: bipush        79
     127: iastore
     128: dup
     129: bipush        22
     131: bipush        83
     133: iastore
     134: dup
     135: bipush        23
     137: bipush        89
     139: iastore
     140: dup
     141: bipush        24
     143: bipush        97
     145: iastore
     146: dup
     147: bipush        25
     149: bipush        101
     151: iastore
     152: dup
     153: bipush        26
     155: bipush        103
     157: iastore
     158: dup
     159: bipush        27
     161: bipush        107
     163: iastore
     164: dup
     165: bipush        28
     167: bipush        109
     169: iastore
     170: dup
     171: bipush        29
     173: bipush        113
     175: iastore
     176: dup
     177: bipush        30
     179: bipush        127
     181: iastore
     182: dup
     183: bipush        31
     185: sipush        131
     188: iastore
     189: dup
     190: bipush        32
     192: sipush        137
     195: iastore
     196: dup
     197: bipush        33
     199: sipush        139
     202: iastore
     203: dup
     204: bipush        34
     206: sipush        149
     209: iastore
     210: dup
     211: bipush        35
     213: sipush        151
     216: iastore
     217: dup
     218: bipush        36
     220: sipush        157
     223: iastore
     224: dup
     225: bipush        37
     227: sipush        163
     230: iastore
     231: dup
     232: bipush        38
     234: sipush        167
     237: iastore
     238: dup
     239: bipush        39
     241: sipush        173
     244: iastore
     245: dup
     246: bipush        40
     248: sipush        179
     251: iastore
     252: dup
     253: bipush        41
     255: sipush        181
     258: iastore
     259: dup
     260: bipush        42
     262: sipush        191
     265: iastore
     266: dup
     267: bipush        43
     269: sipush        193
     272: iastore
     273: dup
     274: bipush        44
     276: sipush        197
     279: iastore
     280: dup
     281: bipush        45
     283: sipush        199
     286: iastore
     287: dup
     288: bipush        46
     290: sipush        211
     293: iastore
     294: dup
     295: bipush        47
     297: sipush        223
     300: iastore
     301: dup
     302: bipush        48
     304: sipush        227
     307: iastore
     308: dup
     309: bipush        49
     311: sipush        229
     314: iastore
     315: dup
     316: bipush        50
     318: sipush        233
     321: iastore
     322: dup
     323: bipush        51
     325: sipush        239
     328: iastore
     329: dup
     330: bipush        52
     332: sipush        241
     335: iastore
     336: dup
     337: bipush        53
     339: sipush        251
     342: iastore
     343: dup
     344: bipush        54
     346: sipush        257
     349: iastore
     350: dup
     351: bipush        55
     353: sipush        263
     356: iastore
     357: dup
     358: bipush        56
     360: sipush        269
     363: iastore
     364: dup
     365: bipush        57
     367: sipush        271
     370: iastore
     371: dup
     372: bipush        58
     374: sipush        277
     377: iastore
     378: dup
     379: bipush        59
     381: sipush        281
     384: iastore
     385: dup
     386: bipush        60
     388: sipush        283
     391: iastore
     392: dup
     393: bipush        61
     395: sipush        293
     398: iastore
     399: dup
     400: bipush        62
     402: sipush        307
     405: iastore
     406: dup
     407: bipush        63
     409: sipush        311
     412: iastore
     413: dup
     414: bipush        64
     416: sipush        313
     419: iastore
     420: dup
     421: bipush        65
     423: sipush        317
     426: iastore
     427: dup
     428: bipush        66
     430: sipush        331
     433: iastore
     434: dup
     435: bipush        67
     437: sipush        337
     440: iastore
     441: dup
     442: bipush        68
     444: sipush        347
     447: iastore
     448: dup
     449: bipush        69
     451: sipush        349
     454: iastore
     455: dup
     456: bipush        70
     458: sipush        353
     461: iastore
     462: dup
     463: bipush        71
     465: sipush        359
     468: iastore
     469: dup
     470: bipush        72
     472: sipush        367
     475: iastore
     476: dup
     477: bipush        73
     479: sipush        373
     482: iastore
     483: dup
     484: bipush        74
     486: sipush        379
     489: iastore
     490: dup
     491: bipush        75
     493: sipush        383
     496: iastore
     497: dup
     498: bipush        76
     500: sipush        389
     503: iastore
     504: dup
     505: bipush        77
     507: sipush        397
     510: iastore
     511: dup
     512: bipush        78
     514: sipush        401
     517: iastore
     518: dup
     519: bipush        79
     521: sipush        409
     524: iastore
     525: dup
     526: bipush        80
     528: sipush        419
     531: iastore
     532: dup
     533: bipush        81
     535: sipush        421
     538: iastore
     539: dup
     540: bipush        82
     542: sipush        431
     545: iastore
     546: dup
     547: bipush        83
     549: sipush        433
     552: iastore
     553: dup
     554: bipush        84
     556: sipush        439
     559: iastore
     560: dup
     561: bipush        85
     563: sipush        443
     566: iastore
     567: dup
     568: bipush        86
     570: sipush        449
     573: iastore
     574: dup
     575: bipush        87
     577: sipush        457
     580: iastore
     581: dup
     582: bipush        88
     584: sipush        461
     587: iastore
     588: dup
     589: bipush        89
     591: sipush        463
     594: iastore
     595: dup
     596: bipush        90
     598: sipush        467
     601: iastore
     602: dup
     603: bipush        91
     605: sipush        479
     608: iastore
     609: dup
     610: bipush        92
     612: sipush        487
     615: iastore
     616: dup
     617: bipush        93
     619: sipush        491
     622: iastore
     623: dup
     624: bipush        94
     626: sipush        499
     629: iastore
     630: dup
     631: bipush        95
     633: sipush        503
     636: iastore
     637: dup
     638: bipush        96
     640: sipush        509
     643: iastore
     644: dup
     645: bipush        97
     647: sipush        521
     650: iastore
     651: dup
     652: bipush        98
     654: sipush        523
     657: iastore
     658: dup
     659: bipush        99
     661: sipush        541
     664: iastore
     665: dup
     666: bipush        100
     668: sipush        547
     671: iastore
     672: dup
     673: bipush        101
     675: sipush        557
     678: iastore
     679: dup
     680: bipush        102
     682: sipush        563
     685: iastore
     686: dup
     687: bipush        103
     689: sipush        569
     692: iastore
     693: dup
     694: bipush        104
     696: sipush        571
     699: iastore
     700: dup
     701: bipush        105
     703: sipush        577
     706: iastore
     707: dup
     708: bipush        106
     710: sipush        587
     713: iastore
     714: dup
     715: bipush        107
     717: sipush        593
     720: iastore
     721: dup
     722: bipush        108
     724: sipush        599
     727: iastore
     728: dup
     729: bipush        109
     731: sipush        601
     734: iastore
     735: dup
     736: bipush        110
     738: sipush        607
     741: iastore
     742: dup
     743: bipush        111
     745: sipush        613
     748: iastore
     749: dup
     750: bipush        112
     752: sipush        617
     755: iastore
     756: dup
     757: bipush        113
     759: sipush        619
     762: iastore
     763: dup
     764: bipush        114
     766: sipush        631
     769: iastore
     770: dup
     771: bipush        115
     773: sipush        641
     776: iastore
     777: dup
     778: bipush        116
     780: sipush        643
     783: iastore
     784: dup
     785: bipush        117
     787: sipush        647
     790: iastore
     791: dup
     792: bipush        118
     794: sipush        653
     797: iastore
     798: dup
     799: bipush        119
     801: sipush        659
     804: iastore
     805: dup
     806: bipush        120
     808: sipush        661
     811: iastore
     812: dup
     813: bipush        121
     815: sipush        673
     818: iastore
     819: dup
     820: bipush        122
     822: sipush        677
     825: iastore
     826: dup
     827: bipush        123
     829: sipush        683
     832: iastore
     833: dup
     834: bipush        124
     836: sipush        691
     839: iastore
     840: dup
     841: bipush        125
     843: sipush        701
     846: iastore
     847: dup
     848: bipush        126
     850: sipush        709
     853: iastore
     854: dup
     855: bipush        127
     857: sipush        719
     860: iastore
     861: dup
     862: sipush        128
     865: sipush        727
     868: iastore
     869: dup
     870: sipush        129
     873: sipush        733
     876: iastore
     877: dup
     878: sipush        130
     881: sipush        739
     884: iastore
     885: dup
     886: sipush        131
     889: sipush        743
     892: iastore
     893: dup
     894: sipush        132
     897: sipush        751
     900: iastore
     901: dup
     902: sipush        133
     905: sipush        757
     908: iastore
     909: dup
     910: sipush        134
     913: sipush        761
     916: iastore
     917: dup
     918: sipush        135
     921: sipush        769
     924: iastore
     925: dup
     926: sipush        136
     929: sipush        773
     932: iastore
     933: dup
     934: sipush        137
     937: sipush        787
     940: iastore
     941: dup
     942: sipush        138
     945: sipush        797
     948: iastore
     949: dup
     950: sipush        139
     953: sipush        809
     956: iastore
     957: dup
     958: sipush        140
     961: sipush        811
     964: iastore
     965: dup
     966: sipush        141
     969: sipush        821
     972: iastore
     973: dup
     974: sipush        142
     977: sipush        823
     980: iastore
     981: dup
     982: sipush        143
     985: sipush        827
     988: iastore
     989: dup
     990: sipush        144
     993: sipush        829
     996: iastore
     997: dup
     998: sipush        145
    1001: sipush        839
    1004: iastore
    1005: dup
    1006: sipush        146
    1009: sipush        853
    1012: iastore
    1013: dup
    1014: sipush        147
    1017: sipush        857
    1020: iastore
    1021: dup
    1022: sipush        148
    1025: sipush        859
    1028: iastore
    1029: dup
    1030: sipush        149
    1033: sipush        863
    1036: iastore
    1037: dup
    1038: sipush        150
    1041: sipush        877
    1044: iastore
    1045: dup
    1046: sipush        151
    1049: sipush        881
    1052: iastore
    1053: dup
    1054: sipush        152
    1057: sipush        883
    1060: iastore
    1061: dup
    1062: sipush        153
    1065: sipush        887
    1068: iastore
    1069: dup
    1070: sipush        154
    1073: sipush        907
    1076: iastore
    1077: dup
    1078: sipush        155
    1081: sipush        911
    1084: iastore
    1085: dup
    1086: sipush        156
    1089: sipush        919
    1092: iastore
    1093: dup
    1094: sipush        157
    1097: sipush        929
    1100: iastore
    1101: dup
    1102: sipush        158
    1105: sipush        937
    1108: iastore
    1109: dup
    1110: sipush        159
    1113: sipush        941
    1116: iastore
    1117: dup
    1118: sipush        160
    1121: sipush        947
    1124: iastore
    1125: dup
    1126: sipush        161
    1129: sipush        953
    1132: iastore
    1133: dup
    1134: sipush        162
    1137: sipush        967
    1140: iastore
    1141: dup
    1142: sipush        163
    1145: sipush        971
    1148: iastore
    1149: dup
    1150: sipush        164
    1153: sipush        977
    1156: iastore
    1157: dup
    1158: sipush        165
    1161: sipush        983
    1164: iastore
    1165: dup
    1166: sipush        166
    1169: sipush        991
    1172: iastore
    1173: dup
    1174: sipush        167
    1177: sipush        997
    1180: iastore
    1181: dup
    1182: sipush        168
    1185: sipush        1009
    1188: iastore
    1189: dup
    1190: sipush        169
    1193: sipush        1013
    1196: iastore
    1197: dup
    1198: sipush        170
    1201: sipush        1019
    1204: iastore
    1205: dup
    1206: sipush        171
    1209: sipush        1021
    1212: iastore
    1213: dup
    1214: sipush        172
    1217: sipush        1031
    1220: iastore
    1221: dup
    1222: sipush        173
    1225: sipush        1033
    1228: iastore
    1229: dup
    1230: sipush        174
    1233: sipush        1039
    1236: iastore
    1237: dup
    1238: sipush        175
    1241: sipush        1049
    1244: iastore
    1245: dup
    1246: sipush        176
    1249: sipush        1051
    1252: iastore
    1253: dup
    1254: sipush        177
    1257: sipush        1061
    1260: iastore
    1261: dup
    1262: sipush        178
    1265: sipush        1063
    1268: iastore
    1269: dup
    1270: sipush        179
    1273: sipush        1069
    1276: iastore
    1277: dup
    1278: sipush        180
    1281: sipush        1087
    1284: iastore
    1285: dup
    1286: sipush        181
    1289: sipush        1091
    1292: iastore
    1293: dup
    1294: sipush        182
    1297: sipush        1093
    1300: iastore
    1301: dup
    1302: sipush        183
    1305: sipush        1097
    1308: iastore
    1309: dup
    1310: sipush        184
    1313: sipush        1103
    1316: iastore
    1317: dup
    1318: sipush        185
    1321: sipush        1109
    1324: iastore
    1325: dup
    1326: sipush        186
    1329: sipush        1117
    1332: iastore
    1333: dup
    1334: sipush        187
    1337: sipush        1123
    1340: iastore
    1341: dup
    1342: sipush        188
    1345: sipush        1129
    1348: iastore
    1349: dup
    1350: sipush        189
    1353: sipush        1151
    1356: iastore
    1357: dup
    1358: sipush        190
    1361: sipush        1153
    1364: iastore
    1365: dup
    1366: sipush        191
    1369: sipush        1163
    1372: iastore
    1373: dup
    1374: sipush        192
    1377: sipush        1171
    1380: iastore
    1381: dup
    1382: sipush        193
    1385: sipush        1181
    1388: iastore
    1389: dup
    1390: sipush        194
    1393: sipush        1187
    1396: iastore
    1397: dup
    1398: sipush        195
    1401: sipush        1193
    1404: iastore
    1405: dup
    1406: sipush        196
    1409: sipush        1201
    1412: iastore
    1413: dup
    1414: sipush        197
    1417: sipush        1213
    1420: iastore
    1421: dup
    1422: sipush        198
    1425: sipush        1217
    1428: iastore
    1429: dup
    1430: sipush        199
    1433: sipush        1223
    1436: iastore
    1437: dup
    1438: sipush        200
    1441: sipush        1229
    1444: iastore
    1445: dup
    1446: sipush        201
    1449: sipush        1231
    1452: iastore
    1453: dup
    1454: sipush        202
    1457: sipush        1237
    1460: iastore
    1461: dup
    1462: sipush        203
    1465: sipush        1249
    1468: iastore
    1469: dup
    1470: sipush        204
    1473: sipush        1259
    1476: iastore
    1477: dup
    1478: sipush        205
    1481: sipush        1277
    1484: iastore
    1485: dup
    1486: sipush        206
    1489: sipush        1279
    1492: iastore
    1493: dup
    1494: sipush        207
    1497: sipush        1283
    1500: iastore
    1501: dup
    1502: sipush        208
    1505: sipush        1289
    1508: iastore
    1509: dup
    1510: sipush        209
    1513: sipush        1291
    1516: iastore
    1517: dup
    1518: sipush        210
    1521: sipush        1297
    1524: iastore
    1525: dup
    1526: sipush        211
    1529: sipush        1301
    1532: iastore
    1533: dup
    1534: sipush        212
    1537: sipush        1303
    1540: iastore
    1541: dup
    1542: sipush        213
    1545: sipush        1307
    1548: iastore
    1549: dup
    1550: sipush        214
    1553: sipush        1319
    1556: iastore
    1557: dup
    1558: sipush        215
    1561: sipush        1321
    1564: iastore
    1565: dup
    1566: sipush        216
    1569: sipush        1327
    1572: iastore
    1573: dup
    1574: sipush        217
    1577: sipush        1361
    1580: iastore
    1581: dup
    1582: sipush        218
    1585: sipush        1367
    1588: iastore
    1589: dup
    1590: sipush        219
    1593: sipush        1373
    1596: iastore
    1597: dup
    1598: sipush        220
    1601: sipush        1381
    1604: iastore
    1605: dup
    1606: sipush        221
    1609: sipush        1399
    1612: iastore
    1613: dup
    1614: sipush        222
    1617: sipush        1409
    1620: iastore
    1621: dup
    1622: sipush        223
    1625: sipush        1423
    1628: iastore
    1629: dup
    1630: sipush        224
    1633: sipush        1427
    1636: iastore
    1637: dup
    1638: sipush        225
    1641: sipush        1429
    1644: iastore
    1645: dup
    1646: sipush        226
    1649: sipush        1433
    1652: iastore
    1653: dup
    1654: sipush        227
    1657: sipush        1439
    1660: iastore
    1661: dup
    1662: sipush        228
    1665: sipush        1447
    1668: iastore
    1669: dup
    1670: sipush        229
    1673: sipush        1451
    1676: iastore
    1677: dup
    1678: sipush        230
    1681: sipush        1453
    1684: iastore
    1685: dup
    1686: sipush        231
    1689: sipush        1459
    1692: iastore
    1693: dup
    1694: sipush        232
    1697: sipush        1471
    1700: iastore
    1701: dup
    1702: sipush        233
    1705: sipush        1481
    1708: iastore
    1709: dup
    1710: sipush        234
    1713: sipush        1483
    1716: iastore
    1717: dup
    1718: sipush        235
    1721: sipush        1487
    1724: iastore
    1725: dup
    1726: sipush        236
    1729: sipush        1489
    1732: iastore
    1733: dup
    1734: sipush        237
    1737: sipush        1493
    1740: iastore
    1741: dup
    1742: sipush        238
    1745: sipush        1499
    1748: iastore
    1749: astore_1
    1750: iconst_0
    1751: istore_2
    1752: iload_2
    1753: aload_1
    1754: arraylength
    1755: if_icmpge     1786
    1758: aload_0
    1759: aload_1
    1760: iload_2
    1761: iaload
    1762: i2l
    1763: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
    1766: invokevirtual #26                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
    1769: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
    1772: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
    1775: ifeq          1780
    1778: iconst_0
    1779: ireturn
    1780: iinc          2, 1
    1783: goto          1752
    1786: iconst_1
    1787: ireturn

  public static int nextSmallerPrime(int);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpgt     7
       5: iconst_1
       6: ireturn
       7: iload_0
       8: iconst_3
       9: if_icmpne     14
      12: iconst_2
      13: ireturn
      14: iload_0
      15: iconst_1
      16: iand
      17: ifne          26
      20: iinc          0, -1
      23: goto          29
      26: iinc          0, -2
      29: iload_0
      30: iconst_3
      31: if_icmple     47
      34: iload_0
      35: invokestatic  #41                 // Method isPrime:(I)Z
      38: ifne          47
      41: iinc          0, -2
      44: goto          29
      47: iload_0
      48: ireturn

  public static java.math.BigInteger nextProbablePrime(java.math.BigInteger, int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
       4: iflt          24
       7: aload_0
       8: invokevirtual #7                  // Method java/math/BigInteger.signum:()I
      11: ifeq          24
      14: aload_0
      15: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      18: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
      27: areturn
      28: aload_0
      29: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      32: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      35: astore_2
      36: aload_2
      37: iconst_0
      38: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      41: ifne          52
      44: aload_2
      45: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      48: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      51: astore_2
      52: aload_2
      53: invokevirtual #42                 // Method java/math/BigInteger.bitLength:()I
      56: bipush        6
      58: if_icmple     206
      61: aload_2
      62: ldc2_w        #44                 // long 152125131763605l
      65: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      68: invokevirtual #25                 // Method java/math/BigInteger.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      71: invokevirtual #38                 // Method java/math/BigInteger.longValue:()J
      74: lstore_3
      75: lload_3
      76: ldc2_w        #46                 // long 3l
      79: lrem
      80: lconst_0
      81: lcmp
      82: ifeq          195
      85: lload_3
      86: ldc2_w        #48                 // long 5l
      89: lrem
      90: lconst_0
      91: lcmp
      92: ifeq          195
      95: lload_3
      96: ldc2_w        #50                 // long 7l
      99: lrem
     100: lconst_0
     101: lcmp
     102: ifeq          195
     105: lload_3
     106: ldc2_w        #52                 // long 11l
     109: lrem
     110: lconst_0
     111: lcmp
     112: ifeq          195
     115: lload_3
     116: ldc2_w        #54                 // long 13l
     119: lrem
     120: lconst_0
     121: lcmp
     122: ifeq          195
     125: lload_3
     126: ldc2_w        #56                 // long 17l
     129: lrem
     130: lconst_0
     131: lcmp
     132: ifeq          195
     135: lload_3
     136: ldc2_w        #58                 // long 19l
     139: lrem
     140: lconst_0
     141: lcmp
     142: ifeq          195
     145: lload_3
     146: ldc2_w        #60                 // long 23l
     149: lrem
     150: lconst_0
     151: lcmp
     152: ifeq          195
     155: lload_3
     156: ldc2_w        #62                 // long 29l
     159: lrem
     160: lconst_0
     161: lcmp
     162: ifeq          195
     165: lload_3
     166: ldc2_w        #64                 // long 31l
     169: lrem
     170: lconst_0
     171: lcmp
     172: ifeq          195
     175: lload_3
     176: ldc2_w        #66                 // long 37l
     179: lrem
     180: lconst_0
     181: lcmp
     182: ifeq          195
     185: lload_3
     186: ldc2_w        #68                 // long 41l
     189: lrem
     190: lconst_0
     191: lcmp
     192: ifne          206
     195: aload_2
     196: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     199: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     202: astore_2
     203: goto          52
     206: aload_2
     207: invokevirtual #42                 // Method java/math/BigInteger.bitLength:()I
     210: iconst_4
     211: if_icmpge     216
     214: aload_2
     215: areturn
     216: aload_2
     217: iload_1
     218: invokevirtual #40                 // Method java/math/BigInteger.isProbablePrime:(I)Z
     221: ifeq          226
     224: aload_2
     225: areturn
     226: aload_2
     227: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     230: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     233: astore_2
     234: goto          52

  public static java.math.BigInteger nextProbablePrime(java.math.BigInteger);
    Code:
       0: aload_0
       1: bipush        20
       3: invokestatic  #70                 // Method nextProbablePrime:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
       6: areturn

  public static java.math.BigInteger nextPrime(long);
    Code:
       0: iconst_0
       1: istore        4
       3: lconst_0
       4: lstore        5
       6: lload_0
       7: lconst_1
       8: lcmp
       9: ifgt          19
      12: ldc2_w        #71                 // long 2l
      15: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      18: areturn
      19: lload_0
      20: ldc2_w        #71                 // long 2l
      23: lcmp
      24: ifne          34
      27: ldc2_w        #46                 // long 3l
      30: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      33: areturn
      34: lload_0
      35: lconst_1
      36: ladd
      37: lload_0
      38: lconst_1
      39: land
      40: ladd
      41: lstore_2
      42: lload_2
      43: lload_0
      44: iconst_1
      45: lshl
      46: lcmp
      47: ifgt          123
      50: iload         4
      52: ifne          123
      55: ldc2_w        #46                 // long 3l
      58: lstore        7
      60: lload         7
      62: lload_2
      63: iconst_1
      64: lshr
      65: lcmp
      66: ifgt          97
      69: iload         4
      71: ifne          97
      74: lload_2
      75: lload         7
      77: lrem
      78: lconst_0
      79: lcmp
      80: ifne          86
      83: iconst_1
      84: istore        4
      86: lload         7
      88: ldc2_w        #71                 // long 2l
      91: ladd
      92: lstore        7
      94: goto          60
      97: iload         4
      99: ifeq          108
     102: iconst_0
     103: istore        4
     105: goto          114
     108: lload_2
     109: lstore        5
     111: iconst_1
     112: istore        4
     114: lload_2
     115: ldc2_w        #71                 // long 2l
     118: ladd
     119: lstore_2
     120: goto          42
     123: lload         5
     125: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     128: areturn

  public static java.math.BigInteger binomial(int, int);
    Code:
       0: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
       3: astore_2
       4: iload_0
       5: ifne          18
       8: iload_1
       9: ifne          14
      12: aload_2
      13: areturn
      14: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      17: areturn
      18: iload_1
      19: iload_0
      20: iconst_1
      21: iushr
      22: if_icmple     29
      25: iload_0
      26: iload_1
      27: isub
      28: istore_1
      29: iconst_1
      30: istore_3
      31: iload_3
      32: iload_1
      33: if_icmpgt     64
      36: aload_2
      37: iload_0
      38: iload_3
      39: iconst_1
      40: isub
      41: isub
      42: i2l
      43: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      46: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      49: iload_3
      50: i2l
      51: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      54: invokevirtual #13                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      57: astore_2
      58: iinc          3, 1
      61: goto          31
      64: aload_2
      65: areturn

  public static java.math.BigInteger randomize(java.math.BigInteger);
    Code:
       0: getstatic     #73                 // Field sr:Ljava/security/SecureRandom;
       3: ifnonnull     12
       6: invokestatic  #74                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
       9: putstatic     #73                 // Field sr:Ljava/security/SecureRandom;
      12: aload_0
      13: getstatic     #73                 // Field sr:Ljava/security/SecureRandom;
      16: invokestatic  #75                 // Method randomize:(Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      19: areturn

  public static java.math.BigInteger randomize(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method java/math/BigInteger.bitLength:()I
       4: istore_2
       5: lconst_0
       6: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       9: astore_3
      10: aload_1
      11: ifnonnull     30
      14: getstatic     #73                 // Field sr:Ljava/security/SecureRandom;
      17: ifnull        26
      20: getstatic     #73                 // Field sr:Ljava/security/SecureRandom;
      23: goto          29
      26: invokestatic  #74                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      29: astore_1
      30: iconst_0
      31: istore        4
      33: iload         4
      35: bipush        20
      37: if_icmpge     62
      40: iload_2
      41: aload_1
      42: invokestatic  #76                 // Method org/bouncycastle/util/BigIntegers.createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
      45: astore_3
      46: aload_3
      47: aload_0
      48: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      51: ifge          56
      54: aload_3
      55: areturn
      56: iinc          4, 1
      59: goto          33
      62: aload_3
      63: aload_0
      64: invokevirtual #26                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      67: areturn

  public static java.math.BigInteger squareRoot(java.math.BigInteger);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
       4: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
       7: ifge          24
      10: new           #77                 // class java/lang/ArithmeticException
      13: dup
      14: aload_0
      15: invokedynamic #78,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/math/BigInteger;)Ljava/lang/String;
      20: invokespecial #79                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokevirtual #42                 // Method java/math/BigInteger.bitLength:()I
      28: istore_1
      29: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      32: astore_2
      33: getstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
      36: astore_3
      37: iload_1
      38: iconst_1
      39: iand
      40: ifeq          54
      43: aload_2
      44: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      47: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      50: astore_2
      51: iinc          1, -1
      54: iload_1
      55: ifle          159
      58: aload_3
      59: getstatic     #80                 // Field FOUR:Ljava/math/BigInteger;
      62: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      65: astore_3
      66: aload_3
      67: aload_0
      68: iinc          1, -1
      71: iload_1
      72: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      75: ifeq          82
      78: iconst_2
      79: goto          83
      82: iconst_0
      83: aload_0
      84: iinc          1, -1
      87: iload_1
      88: invokevirtual #6                  // Method java/math/BigInteger.testBit:(I)Z
      91: ifeq          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: iadd
     100: i2l
     101: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     104: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     107: astore_3
     108: aload_2
     109: getstatic     #80                 // Field FOUR:Ljava/math/BigInteger;
     112: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     115: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     118: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     121: astore        4
     123: aload_2
     124: getstatic     #12                 // Field TWO:Ljava/math/BigInteger;
     127: invokevirtual #24                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     130: astore_2
     131: aload_3
     132: aload         4
     134: invokevirtual #16                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     137: iconst_m1
     138: if_icmpeq     54
     141: aload_2
     142: getstatic     #5                  // Field ONE:Ljava/math/BigInteger;
     145: invokevirtual #11                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     148: astore_2
     149: aload_3
     150: aload         4
     152: invokevirtual #17                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     155: astore_3
     156: goto          54
     159: aload_2
     160: areturn

  public static float intRoot(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: idiv
       3: i2f
       4: fstore_2
       5: fconst_0
       6: fstore_3
       7: iconst_0
       8: istore        4
      10: fload_3
      11: fload_2
      12: fsub
      13: invokestatic  #81                 // Method java/lang/Math.abs:(F)F
      16: f2d
      17: ldc2_w        #82                 // double 1.0E-4d
      20: dcmpl
      21: ifle          82
      24: fload_2
      25: iload_1
      26: invokestatic  #84                 // Method floatPow:(FI)F
      29: fstore        5
      31: fload         5
      33: invokestatic  #85                 // Method java/lang/Float.isInfinite:(F)Z
      36: ifeq          55
      39: fload_2
      40: fload_3
      41: fadd
      42: fconst_2
      43: fdiv
      44: fstore_2
      45: fload_2
      46: iload_1
      47: invokestatic  #84                 // Method floatPow:(FI)F
      50: fstore        5
      52: goto          31
      55: iinc          4, 1
      58: fload_2
      59: fstore_3
      60: fload_3
      61: fload         5
      63: iload_0
      64: i2f
      65: fsub
      66: iload_1
      67: i2f
      68: fload_3
      69: iload_1
      70: iconst_1
      71: isub
      72: invokestatic  #84                 // Method floatPow:(FI)F
      75: fmul
      76: fdiv
      77: fsub
      78: fstore_2
      79: goto          10
      82: fload_2
      83: freturn

  public static float floatPow(float, int);
    Code:
       0: fconst_1
       1: fstore_2
       2: iload_1
       3: ifle          16
       6: fload_2
       7: fload_0
       8: fmul
       9: fstore_2
      10: iinc          1, -1
      13: goto          2
      16: fload_2
      17: freturn

  public static double log(double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpl
       3: ifle          26
       6: dload_0
       7: dconst_1
       8: dcmpg
       9: ifge          26
      12: dconst_1
      13: dload_0
      14: ddiv
      15: dstore_2
      16: dload_2
      17: invokestatic  #86                 // Method log:(D)D
      20: dneg
      21: dstore        4
      23: dload         4
      25: dreturn
      26: iconst_0
      27: istore_2
      28: dconst_1
      29: dstore_3
      30: dload_0
      31: dstore        5
      33: dload         5
      35: ldc2_w        #87                 // double 2.0d
      38: dcmpl
      39: ifle          62
      42: dload         5
      44: ldc2_w        #87                 // double 2.0d
      47: ddiv
      48: dstore        5
      50: iinc          2, 1
      53: dload_3
      54: ldc2_w        #87                 // double 2.0d
      57: dmul
      58: dstore_3
      59: goto          33
      62: dload_0
      63: dload_3
      64: ddiv
      65: dstore        7
      67: dload         7
      69: invokestatic  #89                 // Method logBKM:(D)D
      72: dstore        7
      74: iload_2
      75: i2d
      76: dload         7
      78: dadd
      79: dreturn

  public static double log(long);
    Code:
       0: lload_0
       1: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: invokestatic  #90                 // Method floorLog:(Ljava/math/BigInteger;)I
       7: istore_2
       8: iconst_1
       9: iload_2
      10: ishl
      11: i2l
      12: lstore_3
      13: lload_0
      14: l2d
      15: lload_3
      16: l2d
      17: ddiv
      18: dstore        5
      20: dload         5
      22: invokestatic  #89                 // Method logBKM:(D)D
      25: dstore        5
      27: iload_2
      28: i2d
      29: dload         5
      31: dadd
      32: dreturn

  private static double logBKM(double);
    Code:
       0: bipush        100
       2: newarray       double
       4: dup
       5: iconst_0
       6: dconst_1
       7: dastore
       8: dup
       9: iconst_1
      10: ldc2_w        #91                 // double 0.5849625007211562d
      13: dastore
      14: dup
      15: iconst_2
      16: ldc2_w        #93                 // double 0.32192809488736235d
      19: dastore
      20: dup
      21: iconst_3
      22: ldc2_w        #95                 // double 0.16992500144231237d
      25: dastore
      26: dup
      27: iconst_4
      28: ldc2_w        #97                 // double 0.0874628412503394d
      31: dastore
      32: dup
      33: iconst_5
      34: ldc2_w        #99                 // double 0.044394119358453436d
      37: dastore
      38: dup
      39: bipush        6
      41: ldc2_w        #101                // double 0.02236781302845451d
      44: dastore
      45: dup
      46: bipush        7
      48: ldc2_w        #103                // double 0.01122725542325412d
      51: dastore
      52: dup
      53: bipush        8
      55: ldc2_w        #105                // double 0.005624549193878107d
      58: dastore
      59: dup
      60: bipush        9
      62: ldc2_w        #107                // double 0.0028150156070540383d
      65: dastore
      66: dup
      67: bipush        10
      69: ldc2_w        #109                // double 0.0014081943928083889d
      72: dastore
      73: dup
      74: bipush        11
      76: ldc2_w        #111                // double 7.042690112466433E-4d
      79: dastore
      80: dup
      81: bipush        12
      83: ldc2_w        #113                // double 3.5217748030102726E-4d
      86: dastore
      87: dup
      88: bipush        13
      90: ldc2_w        #115                // double 1.7609948644250602E-4d
      93: dastore
      94: dup
      95: bipush        14
      97: ldc2_w        #117                // double 8.80524301221769E-5d
     100: dastore
     101: dup
     102: bipush        15
     104: ldc2_w        #119                // double 4.4026886827316716E-5d
     107: dastore
     108: dup
     109: bipush        16
     111: ldc2_w        #121                // double 2.2013611360340496E-5d
     114: dastore
     115: dup
     116: bipush        17
     118: ldc2_w        #123                // double 1.1006847667481442E-5d
     121: dastore
     122: dup
     123: bipush        18
     125: ldc2_w        #125                // double 5.503434330648604E-6d
     128: dastore
     129: dup
     130: bipush        19
     132: ldc2_w        #127                // double 2.751719789561283E-6d
     135: dastore
     136: dup
     137: bipush        20
     139: ldc2_w        #129                // double 1.375860550841138E-6d
     142: dastore
     143: dup
     144: bipush        21
     146: ldc2_w        #131                // double 6.879304394358497E-7d
     149: dastore
     150: dup
     151: bipush        22
     153: ldc2_w        #133                // double 3.4396526072176454E-7d
     156: dastore
     157: dup
     158: bipush        23
     160: ldc2_w        #135                // double 1.7198264061184464E-7d
     163: dastore
     164: dup
     165: bipush        24
     167: ldc2_w        #137                // double 8.599132286866321E-8d
     170: dastore
     171: dup
     172: bipush        25
     174: ldc2_w        #139                // double 4.299566207501687E-8d
     177: dastore
     178: dup
     179: bipush        26
     181: ldc2_w        #141                // double 2.1497831197679756E-8d
     184: dastore
     185: dup
     186: bipush        27
     188: ldc2_w        #143                // double 1.0748915638882709E-8d
     191: dastore
     192: dup
     193: bipush        28
     195: ldc2_w        #145                // double 5.374457829452062E-9d
     198: dastore
     199: dup
     200: bipush        29
     202: ldc2_w        #147                // double 2.687228917228708E-9d
     205: dastore
     206: dup
     207: bipush        30
     209: ldc2_w        #149                // double 1.3436144592400231E-9d
     212: dastore
     213: dup
     214: bipush        31
     216: ldc2_w        #151                // double 6.718072297764289E-10d
     219: dastore
     220: dup
     221: bipush        32
     223: ldc2_w        #153                // double 3.3590361492731876E-10d
     226: dastore
     227: dup
     228: bipush        33
     230: ldc2_w        #155                // double 1.6795180747343547E-10d
     233: dastore
     234: dup
     235: bipush        34
     237: ldc2_w        #157                // double 8.397590373916176E-11d
     240: dastore
     241: dup
     242: bipush        35
     244: ldc2_w        #159                // double 4.1987951870191886E-11d
     247: dastore
     248: dup
     249: bipush        36
     251: ldc2_w        #161                // double 2.0993975935248694E-11d
     254: dastore
     255: dup
     256: bipush        37
     258: ldc2_w        #163                // double 1.0496987967662534E-11d
     261: dastore
     262: dup
     263: bipush        38
     265: ldc2_w        #165                // double 5.2484939838408146E-12d
     268: dastore
     269: dup
     270: bipush        39
     272: ldc2_w        #167                // double 2.624246991922794E-12d
     275: dastore
     276: dup
     277: bipush        40
     279: ldc2_w        #169                // double 1.3121234959619935E-12d
     282: dastore
     283: dup
     284: bipush        41
     286: ldc2_w        #171                // double 6.56061747981146E-13d
     289: dastore
     290: dup
     291: bipush        42
     293: ldc2_w        #173                // double 3.2803087399061026E-13d
     296: dastore
     297: dup
     298: bipush        43
     300: ldc2_w        #175                // double 1.6401543699531447E-13d
     303: dastore
     304: dup
     305: bipush        44
     307: ldc2_w        #177                // double 8.200771849765956E-14d
     310: dastore
     311: dup
     312: bipush        45
     314: ldc2_w        #179                // double 4.1003859248830365E-14d
     317: dastore
     318: dup
     319: bipush        46
     321: ldc2_w        #181                // double 2.0501929624415328E-14d
     324: dastore
     325: dup
     326: bipush        47
     328: ldc2_w        #183                // double 1.02509648122077E-14d
     331: dastore
     332: dup
     333: bipush        48
     335: ldc2_w        #185                // double 5.1254824061038595E-15d
     338: dastore
     339: dup
     340: bipush        49
     342: ldc2_w        #187                // double 2.5627412030519317E-15d
     345: dastore
     346: dup
     347: bipush        50
     349: ldc2_w        #189                // double 1.2813706015259665E-15d
     352: dastore
     353: dup
     354: bipush        51
     356: ldc2_w        #191                // double 6.406853007629834E-16d
     359: dastore
     360: dup
     361: bipush        52
     363: ldc2_w        #193                // double 3.203426503814917E-16d
     366: dastore
     367: dup
     368: bipush        53
     370: ldc2_w        #195                // double 1.6017132519074588E-16d
     373: dastore
     374: dup
     375: bipush        54
     377: ldc2_w        #197                // double 8.008566259537294E-17d
     380: dastore
     381: dup
     382: bipush        55
     384: ldc2_w        #199                // double 4.004283129768647E-17d
     387: dastore
     388: dup
     389: bipush        56
     391: ldc2_w        #201                // double 2.0021415648843235E-17d
     394: dastore
     395: dup
     396: bipush        57
     398: ldc2_w        #203                // double 1.0010707824421618E-17d
     401: dastore
     402: dup
     403: bipush        58
     405: ldc2_w        #205                // double 5.005353912210809E-18d
     408: dastore
     409: dup
     410: bipush        59
     412: ldc2_w        #207                // double 2.5026769561054044E-18d
     415: dastore
     416: dup
     417: bipush        60
     419: ldc2_w        #209                // double 1.2513384780527022E-18d
     422: dastore
     423: dup
     424: bipush        61
     426: ldc2_w        #211                // double 6.256692390263511E-19d
     429: dastore
     430: dup
     431: bipush        62
     433: ldc2_w        #213                // double 3.1283461951317555E-19d
     436: dastore
     437: dup
     438: bipush        63
     440: ldc2_w        #215                // double 1.5641730975658778E-19d
     443: dastore
     444: dup
     445: bipush        64
     447: ldc2_w        #217                // double 7.820865487829389E-20d
     450: dastore
     451: dup
     452: bipush        65
     454: ldc2_w        #219                // double 3.9104327439146944E-20d
     457: dastore
     458: dup
     459: bipush        66
     461: ldc2_w        #221                // double 1.9552163719573472E-20d
     464: dastore
     465: dup
     466: bipush        67
     468: ldc2_w        #223                // double 9.776081859786736E-21d
     471: dastore
     472: dup
     473: bipush        68
     475: ldc2_w        #225                // double 4.888040929893368E-21d
     478: dastore
     479: dup
     480: bipush        69
     482: ldc2_w        #227                // double 2.444020464946684E-21d
     485: dastore
     486: dup
     487: bipush        70
     489: ldc2_w        #229                // double 1.222010232473342E-21d
     492: dastore
     493: dup
     494: bipush        71
     496: ldc2_w        #231                // double 6.11005116236671E-22d
     499: dastore
     500: dup
     501: bipush        72
     503: ldc2_w        #233                // double 3.055025581183355E-22d
     506: dastore
     507: dup
     508: bipush        73
     510: ldc2_w        #235                // double 1.5275127905916775E-22d
     513: dastore
     514: dup
     515: bipush        74
     517: ldc2_w        #237                // double 7.637563952958387E-23d
     520: dastore
     521: dup
     522: bipush        75
     524: ldc2_w        #239                // double 3.818781976479194E-23d
     527: dastore
     528: dup
     529: bipush        76
     531: ldc2_w        #241                // double 1.909390988239597E-23d
     534: dastore
     535: dup
     536: bipush        77
     538: ldc2_w        #243                // double 9.546954941197984E-24d
     541: dastore
     542: dup
     543: bipush        78
     545: ldc2_w        #245                // double 4.773477470598992E-24d
     548: dastore
     549: dup
     550: bipush        79
     552: ldc2_w        #247                // double 2.386738735299496E-24d
     555: dastore
     556: dup
     557: bipush        80
     559: ldc2_w        #249                // double 1.193369367649748E-24d
     562: dastore
     563: dup
     564: bipush        81
     566: ldc2_w        #251                // double 5.96684683824874E-25d
     569: dastore
     570: dup
     571: bipush        82
     573: ldc2_w        #253                // double 2.98342341912437E-25d
     576: dastore
     577: dup
     578: bipush        83
     580: ldc2_w        #255                // double 1.491711709562185E-25d
     583: dastore
     584: dup
     585: bipush        84
     587: ldc2_w        #257                // double 7.458558547810925E-26d
     590: dastore
     591: dup
     592: bipush        85
     594: ldc2_w        #259                // double 3.7292792739054626E-26d
     597: dastore
     598: dup
     599: bipush        86
     601: ldc2_w        #261                // double 1.8646396369527313E-26d
     604: dastore
     605: dup
     606: bipush        87
     608: ldc2_w        #263                // double 9.323198184763657E-27d
     611: dastore
     612: dup
     613: bipush        88
     615: ldc2_w        #265                // double 4.661599092381828E-27d
     618: dastore
     619: dup
     620: bipush        89
     622: ldc2_w        #267                // double 2.330799546190914E-27d
     625: dastore
     626: dup
     627: bipush        90
     629: ldc2_w        #269                // double 1.165399773095457E-27d
     632: dastore
     633: dup
     634: bipush        91
     636: ldc2_w        #271                // double 5.826998865477285E-28d
     639: dastore
     640: dup
     641: bipush        92
     643: ldc2_w        #273                // double 2.9134994327386427E-28d
     646: dastore
     647: dup
     648: bipush        93
     650: ldc2_w        #275                // double 1.4567497163693213E-28d
     653: dastore
     654: dup
     655: bipush        94
     657: ldc2_w        #277                // double 7.283748581846607E-29d
     660: dastore
     661: dup
     662: bipush        95
     664: ldc2_w        #279                // double 3.6418742909233034E-29d
     667: dastore
     668: dup
     669: bipush        96
     671: ldc2_w        #281                // double 1.8209371454616517E-29d
     674: dastore
     675: dup
     676: bipush        97
     678: ldc2_w        #283                // double 9.104685727308258E-30d
     681: dastore
     682: dup
     683: bipush        98
     685: ldc2_w        #285                // double 4.552342863654129E-30d
     688: dastore
     689: dup
     690: bipush        99
     692: ldc2_w        #287                // double 2.2761714318270646E-30d
     695: dastore
     696: astore_2
     697: bipush        53
     699: istore_3
     700: dconst_1
     701: dstore        4
     703: dconst_0
     704: dstore        6
     706: dconst_1
     707: dstore        10
     709: iconst_0
     710: istore        12
     712: iload         12
     714: iload_3
     715: if_icmpge     762
     718: dload         4
     720: dload         4
     722: dload         10
     724: dmul
     725: dadd
     726: dstore        8
     728: dload         8
     730: dload_0
     731: dcmpg
     732: ifgt          748
     735: dload         8
     737: dstore        4
     739: dload         6
     741: aload_2
     742: iload         12
     744: daload
     745: dadd
     746: dstore        6
     748: dload         10
     750: ldc2_w        #289                // double 0.5d
     753: dmul
     754: dstore        10
     756: iinc          12, 1
     759: goto          712
     762: dload         6
     764: dreturn

  public static boolean isIncreasing(int[]);
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: if_icmpge     50
       8: aload_0
       9: iload_1
      10: iconst_1
      11: isub
      12: iaload
      13: aload_0
      14: iload_1
      15: iaload
      16: if_icmplt     44
      19: getstatic     #291                // Field java/lang/System.out:Ljava/io/PrintStream;
      22: iload_1
      23: iconst_1
      24: isub
      25: aload_0
      26: iload_1
      27: iconst_1
      28: isub
      29: iaload
      30: aload_0
      31: iload_1
      32: iaload
      33: iload_1
      34: invokedynamic #292,  0            // InvokeDynamic #3:makeConcatWithConstants:(IIII)Ljava/lang/String;
      39: invokevirtual #293                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      42: iconst_0
      43: ireturn
      44: iinc          1, 1
      47: goto          2
      50: iconst_1
      51: ireturn

  public static byte[] integerToOctets(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       4: invokevirtual #294                // Method java/math/BigInteger.toByteArray:()[B
       7: astore_1
       8: aload_0
       9: invokevirtual #42                 // Method java/math/BigInteger.bitLength:()I
      12: bipush        7
      14: iand
      15: ifeq          20
      18: aload_1
      19: areturn
      20: aload_0
      21: invokevirtual #42                 // Method java/math/BigInteger.bitLength:()I
      24: iconst_3
      25: ishr
      26: newarray       byte
      28: astore_2
      29: aload_1
      30: iconst_1
      31: aload_2
      32: iconst_0
      33: aload_2
      34: arraylength
      35: invokestatic  #295                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_2
      39: areturn

  public static java.math.BigInteger octetsToInteger(byte[], int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: iadd
       3: newarray       byte
       5: astore_3
       6: aload_3
       7: iconst_0
       8: iconst_0
       9: bastore
      10: aload_0
      11: iload_1
      12: aload_3
      13: iconst_1
      14: iload_2
      15: invokestatic  #295                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: new           #32                 // class java/math/BigInteger
      21: dup
      22: aload_3
      23: invokespecial #296                // Method java/math/BigInteger."<init>":([B)V
      26: areturn

  public static java.math.BigInteger octetsToInteger(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #297                // Method octetsToInteger:([BII)Ljava/math/BigInteger;
       7: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #2                  // Field ZERO:Ljava/math/BigInteger;
       7: lconst_1
       8: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      11: putstatic     #5                  // Field ONE:Ljava/math/BigInteger;
      14: ldc2_w        #71                 // long 2l
      17: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      20: putstatic     #12                 // Field TWO:Ljava/math/BigInteger;
      23: ldc2_w        #298                // long 4l
      26: invokestatic  #28                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      29: putstatic     #80                 // Field FOUR:Ljava/math/BigInteger;
      32: bipush        12
      34: newarray       int
      36: dup
      37: iconst_0
      38: iconst_3
      39: iastore
      40: dup
      41: iconst_1
      42: iconst_5
      43: iastore
      44: dup
      45: iconst_2
      46: bipush        7
      48: iastore
      49: dup
      50: iconst_3
      51: bipush        11
      53: iastore
      54: dup
      55: iconst_4
      56: bipush        13
      58: iastore
      59: dup
      60: iconst_5
      61: bipush        17
      63: iastore
      64: dup
      65: bipush        6
      67: bipush        19
      69: iastore
      70: dup
      71: bipush        7
      73: bipush        23
      75: iastore
      76: dup
      77: bipush        8
      79: bipush        29
      81: iastore
      82: dup
      83: bipush        9
      85: bipush        31
      87: iastore
      88: dup
      89: bipush        10
      91: bipush        37
      93: iastore
      94: dup
      95: bipush        11
      97: bipush        41
      99: iastore
     100: putstatic     #39                 // Field SMALL_PRIMES:[I
     103: aconst_null
     104: putstatic     #73                 // Field sr:Ljava/security/SecureRandom;
     107: bipush        8
     109: newarray       int
     111: dup
     112: iconst_0
     113: iconst_0
     114: iastore
     115: dup
     116: iconst_1
     117: iconst_1
     118: iastore
     119: dup
     120: iconst_2
     121: iconst_0
     122: iastore
     123: dup
     124: iconst_3
     125: iconst_m1
     126: iastore
     127: dup
     128: iconst_4
     129: iconst_0
     130: iastore
     131: dup
     132: iconst_5
     133: iconst_m1
     134: iastore
     135: dup
     136: bipush        6
     138: iconst_0
     139: iastore
     140: dup
     141: bipush        7
     143: iconst_1
     144: iastore
     145: putstatic     #14                 // Field jacobiTable:[I
     148: return
}
