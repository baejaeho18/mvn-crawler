Compiled from "ECFieldElement.java"
public class org.bouncycastle.math.ec.ECFieldElement$F2m extends org.bouncycastle.math.ec.ECFieldElement$AbstractF2m {
  public static final int GNB;

  public static final int TPB;

  public static final int PPB;

  private int representation;

  private int m;

  private int[] ks;

  org.bouncycastle.math.ec.LongArray x;

  public org.bouncycastle.math.ec.ECFieldElement$F2m(int, int, int, int, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractF2m."<init>":()V
       4: aload         5
       6: ifnull        26
       9: aload         5
      11: invokevirtual #2                  // Method java/math/BigInteger.signum:()I
      14: iflt          26
      17: aload         5
      19: invokevirtual #3                  // Method java/math/BigInteger.bitLength:()I
      22: iload_1
      23: if_icmple     36
      26: new           #4                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #5                  // String x value invalid in F2m field element
      32: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_3
      37: ifne          64
      40: iload         4
      42: ifne          64
      45: aload_0
      46: iconst_2
      47: putfield      #8                  // Field representation:I
      50: aload_0
      51: iconst_1
      52: newarray       int
      54: dup
      55: iconst_0
      56: iload_2
      57: iastore
      58: putfield      #9                  // Field ks:[I
      61: goto          119
      64: iload_3
      65: iload         4
      67: if_icmplt     80
      70: new           #4                  // class java/lang/IllegalArgumentException
      73: dup
      74: ldc           #10                 // String k2 must be smaller than k3
      76: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: iload_3
      81: ifgt          94
      84: new           #4                  // class java/lang/IllegalArgumentException
      87: dup
      88: ldc           #11                 // String k2 must be larger than 0
      90: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: iconst_3
      96: putfield      #8                  // Field representation:I
      99: aload_0
     100: iconst_3
     101: newarray       int
     103: dup
     104: iconst_0
     105: iload_2
     106: iastore
     107: dup
     108: iconst_1
     109: iload_3
     110: iastore
     111: dup
     112: iconst_2
     113: iload         4
     115: iastore
     116: putfield      #9                  // Field ks:[I
     119: aload_0
     120: iload_1
     121: putfield      #12                 // Field m:I
     124: aload_0
     125: new           #13                 // class org/bouncycastle/math/ec/LongArray
     128: dup
     129: aload         5
     131: invokespecial #14                 // Method org/bouncycastle/math/ec/LongArray."<init>":(Ljava/math/BigInteger;)V
     134: putfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
     137: return

  org.bouncycastle.math.ec.ECFieldElement$F2m(int, int[], org.bouncycastle.math.ec.LongArray);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/bouncycastle/math/ec/ECFieldElement$AbstractF2m."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #12                 // Field m:I
       9: aload_0
      10: aload_2
      11: arraylength
      12: iconst_1
      13: if_icmpne     20
      16: iconst_2
      17: goto          21
      20: iconst_3
      21: putfield      #8                  // Field representation:I
      24: aload_0
      25: aload_2
      26: putfield      #9                  // Field ks:[I
      29: aload_0
      30: aload_3
      31: putfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      34: return

  public int bitLength();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #16                 // Method org/bouncycastle/math/ec/LongArray.degree:()I
       7: ireturn

  public boolean isOne();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #17                 // Method org/bouncycastle/math/ec/LongArray.isOne:()Z
       7: ireturn

  public boolean isZero();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #18                 // Method org/bouncycastle/math/ec/LongArray.isZero:()Z
       7: ireturn

  public boolean testBitZero();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #19                 // Method org/bouncycastle/math/ec/LongArray.testBitZero:()Z
       7: ireturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #20                 // Method org/bouncycastle/math/ec/LongArray.toBigInteger:()Ljava/math/BigInteger;
       7: areturn

  public java.lang.String getFieldName();
    Code:
       0: ldc           #21                 // String F2m
       2: areturn

  public int getFieldSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field m:I
       4: ireturn

  public static void checkFieldElements(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: instanceof    #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
       4: ifeq          14
       7: aload_1
       8: instanceof    #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      11: ifne          24
      14: new           #4                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #22                 // String Field elements are not both instances of ECFieldElement.F2m
      20: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      28: astore_2
      29: aload_1
      30: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      33: astore_3
      34: aload_2
      35: getfield      #8                  // Field representation:I
      38: aload_3
      39: getfield      #8                  // Field representation:I
      42: if_icmpeq     55
      45: new           #4                  // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #23                 // String One of the F2m field elements has incorrect representation
      51: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_2
      56: getfield      #12                 // Field m:I
      59: aload_3
      60: getfield      #12                 // Field m:I
      63: if_icmpne     80
      66: aload_2
      67: getfield      #9                  // Field ks:[I
      70: aload_3
      71: getfield      #9                  // Field ks:[I
      74: invokestatic  #24                 // Method org/bouncycastle/util/Arrays.areEqual:([I[I)Z
      77: ifne          90
      80: new           #4                  // class java/lang/IllegalArgumentException
      83: dup
      84: ldc           #25                 // String Field elements are not elements of the same field F2m
      86: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: return

  public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #26                 // Method org/bouncycastle/math/ec/LongArray.clone:()Ljava/lang/Object;
       7: checkcast     #13                 // class org/bouncycastle/math/ec/LongArray
      10: astore_2
      11: aload_1
      12: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      15: astore_3
      16: aload_2
      17: aload_3
      18: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      21: iconst_0
      22: invokevirtual #27                 // Method org/bouncycastle/math/ec/LongArray.addShiftedByWords:(Lorg/bouncycastle/math/ec/LongArray;I)V
      25: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      28: dup
      29: aload_0
      30: getfield      #12                 // Field m:I
      33: aload_0
      34: getfield      #9                  // Field ks:[I
      37: aload_2
      38: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
      41: areturn

  public org.bouncycastle.math.ec.ECFieldElement addOne();
    Code:
       0: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
       3: dup
       4: aload_0
       5: getfield      #12                 // Field m:I
       8: aload_0
       9: getfield      #9                  // Field ks:[I
      12: aload_0
      13: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      16: invokevirtual #29                 // Method org/bouncycastle/math/ec/LongArray.addOne:()Lorg/bouncycastle/math/ec/LongArray;
      19: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
      22: areturn

  public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
       5: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
       3: dup
       4: aload_0
       5: getfield      #12                 // Field m:I
       8: aload_0
       9: getfield      #9                  // Field ks:[I
      12: aload_0
      13: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      16: aload_1
      17: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      20: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      23: aload_0
      24: getfield      #12                 // Field m:I
      27: aload_0
      28: getfield      #9                  // Field ks:[I
      31: invokevirtual #31                 // Method org/bouncycastle/math/ec/LongArray.modMultiply:(Lorg/bouncycastle/math/ec/LongArray;I[I)Lorg/bouncycastle/math/ec/LongArray;
      34: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
      37: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiplyMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #32                 // Method multiplyPlusProduct:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
       7: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiplyPlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: astore        4
       6: aload_1
       7: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      10: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      13: astore        5
      15: aload_2
      16: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      19: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      22: astore        6
      24: aload_3
      25: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      28: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      31: astore        7
      33: aload         4
      35: aload         5
      37: aload_0
      38: getfield      #12                 // Field m:I
      41: aload_0
      42: getfield      #9                  // Field ks:[I
      45: invokevirtual #33                 // Method org/bouncycastle/math/ec/LongArray.multiply:(Lorg/bouncycastle/math/ec/LongArray;I[I)Lorg/bouncycastle/math/ec/LongArray;
      48: astore        8
      50: aload         6
      52: aload         7
      54: aload_0
      55: getfield      #12                 // Field m:I
      58: aload_0
      59: getfield      #9                  // Field ks:[I
      62: invokevirtual #33                 // Method org/bouncycastle/math/ec/LongArray.multiply:(Lorg/bouncycastle/math/ec/LongArray;I[I)Lorg/bouncycastle/math/ec/LongArray;
      65: astore        9
      67: aload         8
      69: aload         4
      71: if_acmpeq     81
      74: aload         8
      76: aload         5
      78: if_acmpne     91
      81: aload         8
      83: invokevirtual #26                 // Method org/bouncycastle/math/ec/LongArray.clone:()Ljava/lang/Object;
      86: checkcast     #13                 // class org/bouncycastle/math/ec/LongArray
      89: astore        8
      91: aload         8
      93: aload         9
      95: iconst_0
      96: invokevirtual #27                 // Method org/bouncycastle/math/ec/LongArray.addShiftedByWords:(Lorg/bouncycastle/math/ec/LongArray;I)V
      99: aload         8
     101: aload_0
     102: getfield      #12                 // Field m:I
     105: aload_0
     106: getfield      #9                  // Field ks:[I
     109: invokevirtual #34                 // Method org/bouncycastle/math/ec/LongArray.reduce:(I[I)V
     112: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
     115: dup
     116: aload_0
     117: getfield      #12                 // Field m:I
     120: aload_0
     121: getfield      #9                  // Field ks:[I
     124: aload         8
     126: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
     129: areturn

  public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/bouncycastle/math/ec/ECFieldElement.invert:()Lorg/bouncycastle/math/ec/ECFieldElement;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #36                 // Method multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      10: areturn

  public org.bouncycastle.math.ec.ECFieldElement negate();
    Code:
       0: aload_0
       1: areturn

  public org.bouncycastle.math.ec.ECFieldElement square();
    Code:
       0: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
       3: dup
       4: aload_0
       5: getfield      #12                 // Field m:I
       8: aload_0
       9: getfield      #9                  // Field ks:[I
      12: aload_0
      13: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      16: aload_0
      17: getfield      #12                 // Field m:I
      20: aload_0
      21: getfield      #9                  // Field ks:[I
      24: invokevirtual #37                 // Method org/bouncycastle/math/ec/LongArray.modSquare:(I[I)Lorg/bouncycastle/math/ec/LongArray;
      27: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
      30: areturn

  public org.bouncycastle.math.ec.ECFieldElement squareMinusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #38                 // Method squarePlusProduct:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
       6: areturn

  public org.bouncycastle.math.ec.ECFieldElement squarePlusProduct(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: astore_3
       5: aload_1
       6: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
       9: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      12: astore        4
      14: aload_2
      15: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      18: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      21: astore        5
      23: aload_3
      24: aload_0
      25: getfield      #12                 // Field m:I
      28: aload_0
      29: getfield      #9                  // Field ks:[I
      32: invokevirtual #39                 // Method org/bouncycastle/math/ec/LongArray.square:(I[I)Lorg/bouncycastle/math/ec/LongArray;
      35: astore        6
      37: aload         4
      39: aload         5
      41: aload_0
      42: getfield      #12                 // Field m:I
      45: aload_0
      46: getfield      #9                  // Field ks:[I
      49: invokevirtual #33                 // Method org/bouncycastle/math/ec/LongArray.multiply:(Lorg/bouncycastle/math/ec/LongArray;I[I)Lorg/bouncycastle/math/ec/LongArray;
      52: astore        7
      54: aload         6
      56: aload_3
      57: if_acmpne     70
      60: aload         6
      62: invokevirtual #26                 // Method org/bouncycastle/math/ec/LongArray.clone:()Ljava/lang/Object;
      65: checkcast     #13                 // class org/bouncycastle/math/ec/LongArray
      68: astore        6
      70: aload         6
      72: aload         7
      74: iconst_0
      75: invokevirtual #27                 // Method org/bouncycastle/math/ec/LongArray.addShiftedByWords:(Lorg/bouncycastle/math/ec/LongArray;I)V
      78: aload         6
      80: aload_0
      81: getfield      #12                 // Field m:I
      84: aload_0
      85: getfield      #9                  // Field ks:[I
      88: invokevirtual #34                 // Method org/bouncycastle/math/ec/LongArray.reduce:(I[I)V
      91: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      94: dup
      95: aload_0
      96: getfield      #12                 // Field m:I
      99: aload_0
     100: getfield      #9                  // Field ks:[I
     103: aload         6
     105: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
     108: areturn

  public org.bouncycastle.math.ec.ECFieldElement squarePow(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     9
       5: aload_0
       6: goto          40
       9: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      12: dup
      13: aload_0
      14: getfield      #12                 // Field m:I
      17: aload_0
      18: getfield      #9                  // Field ks:[I
      21: aload_0
      22: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      25: iload_1
      26: aload_0
      27: getfield      #12                 // Field m:I
      30: aload_0
      31: getfield      #9                  // Field ks:[I
      34: invokevirtual #40                 // Method org/bouncycastle/math/ec/LongArray.modSquareN:(II[I)Lorg/bouncycastle/math/ec/LongArray;
      37: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
      40: areturn

  public org.bouncycastle.math.ec.ECFieldElement invert();
    Code:
       0: new           #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
       3: dup
       4: aload_0
       5: getfield      #12                 // Field m:I
       8: aload_0
       9: getfield      #9                  // Field ks:[I
      12: aload_0
      13: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      16: aload_0
      17: getfield      #12                 // Field m:I
      20: aload_0
      21: getfield      #9                  // Field ks:[I
      24: invokevirtual #41                 // Method org/bouncycastle/math/ec/LongArray.modInverse:(I[I)Lorg/bouncycastle/math/ec/LongArray;
      27: invokespecial #28                 // Method "<init>":(I[ILorg/bouncycastle/math/ec/LongArray;)V
      30: areturn

  public org.bouncycastle.math.ec.ECFieldElement sqrt();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #18                 // Method org/bouncycastle/math/ec/LongArray.isZero:()Z
       7: ifne          20
      10: aload_0
      11: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      14: invokevirtual #17                 // Method org/bouncycastle/math/ec/LongArray.isOne:()Z
      17: ifeq          24
      20: aload_0
      21: goto          34
      24: aload_0
      25: aload_0
      26: getfield      #12                 // Field m:I
      29: iconst_1
      30: isub
      31: invokevirtual #42                 // Method squarePow:(I)Lorg/bouncycastle/math/ec/ECFieldElement;
      34: areturn

  public int getRepresentation();
    Code:
       0: aload_0
       1: getfield      #8                  // Field representation:I
       4: ireturn

  public int getM();
    Code:
       0: aload_0
       1: getfield      #12                 // Field m:I
       4: ireturn

  public int getK1();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ks:[I
       4: iconst_0
       5: iaload
       6: ireturn

  public int getK2();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ks:[I
       4: arraylength
       5: iconst_2
       6: if_icmplt     18
       9: aload_0
      10: getfield      #9                  // Field ks:[I
      13: iconst_1
      14: iaload
      15: goto          19
      18: iconst_0
      19: ireturn

  public int getK3();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ks:[I
       4: arraylength
       5: iconst_3
       6: if_icmplt     18
       9: aload_0
      10: getfield      #9                  // Field ks:[I
      13: iconst_2
      14: iaload
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #7                  // class org/bouncycastle/math/ec/ECFieldElement$F2m
      20: astore_2
      21: aload_0
      22: getfield      #12                 // Field m:I
      25: aload_2
      26: getfield      #12                 // Field m:I
      29: if_icmpne     75
      32: aload_0
      33: getfield      #8                  // Field representation:I
      36: aload_2
      37: getfield      #8                  // Field representation:I
      40: if_icmpne     75
      43: aload_0
      44: getfield      #9                  // Field ks:[I
      47: aload_2
      48: getfield      #9                  // Field ks:[I
      51: invokestatic  #24                 // Method org/bouncycastle/util/Arrays.areEqual:([I[I)Z
      54: ifeq          75
      57: aload_0
      58: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      61: aload_2
      62: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
      65: invokevirtual #43                 // Method org/bouncycastle/math/ec/LongArray.equals:(Ljava/lang/Object;)Z
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #15                 // Field x:Lorg/bouncycastle/math/ec/LongArray;
       4: invokevirtual #44                 // Method org/bouncycastle/math/ec/LongArray.hashCode:()I
       7: aload_0
       8: getfield      #12                 // Field m:I
      11: ixor
      12: aload_0
      13: getfield      #9                  // Field ks:[I
      16: invokestatic  #45                 // Method org/bouncycastle/util/Arrays.hashCode:([I)I
      19: ixor
      20: ireturn
}
