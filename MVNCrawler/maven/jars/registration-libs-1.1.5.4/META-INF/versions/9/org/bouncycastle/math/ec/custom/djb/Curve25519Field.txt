Compiled from "Curve25519Field.java"
public class org.bouncycastle.math.ec.custom.djb.Curve25519Field {
  private static final long M;

  static final int[] P;

  private static final int P7;

  private static final int[] PExt;

  private static final int PInv;

  public org.bouncycastle.math.ec.custom.djb.Curve25519Field();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
       6: pop
       7: aload_2
       8: getstatic     #3                  // Field P:[I
      11: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      14: ifeq          22
      17: aload_2
      18: invokestatic  #5                  // Method subPFrom:([I)I
      21: pop
      22: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #6                  // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: pop
       9: bipush        16
      11: aload_2
      12: getstatic     #7                  // Field PExt:[I
      15: invokestatic  #8                  // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      18: ifeq          26
      21: aload_2
      22: invokestatic  #9                  // Method subPExtFrom:([I)I
      25: pop
      26: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: aload_1
       4: invokestatic  #10                 // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: pop
       8: aload_1
       9: getstatic     #3                  // Field P:[I
      12: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      15: ifeq          23
      18: aload_1
      19: invokestatic  #5                  // Method subPFrom:([I)I
      22: pop
      23: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method org/bouncycastle/math/raw/Nat256.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: getstatic     #3                  // Field P:[I
       9: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      12: ifeq          26
      15: getstatic     #3                  // Field P:[I
      18: aload_1
      19: invokestatic  #12                 // Method org/bouncycastle/math/raw/Nat256.subFrom:([I[I)I
      22: pop
      23: goto          5
      26: aload_1
      27: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        8
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #13                 // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #3                  // Field P:[I
      24: aload_1
      25: invokestatic  #2                  // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
      28: pop
      29: bipush        8
      31: aload_1
      32: iconst_0
      33: invokestatic  #14                 // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #15                 // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #16                 // Method org/bouncycastle/math/raw/Nat256.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #17                 // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #18                 // Method org/bouncycastle/math/raw/Nat256.mulAddTo:([I[I[I)I
       6: pop
       7: bipush        16
       9: aload_2
      10: getstatic     #7                  // Field PExt:[I
      13: invokestatic  #8                  // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      16: ifeq          24
      19: aload_2
      20: invokestatic  #9                  // Method subPExtFrom:([I)I
      23: pop
      24: return

  public static void negate(int[], int[]);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/bouncycastle/math/raw/Nat256.isZero:([I)Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #20                 // Method org/bouncycastle/math/raw/Nat256.zero:([I)V
      11: goto          23
      14: getstatic     #3                  // Field P:[I
      17: aload_0
      18: aload_1
      19: invokestatic  #21                 // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      22: pop
      23: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: bipush        7
       3: iaload
       4: istore_2
       5: bipush        8
       7: aload_0
       8: bipush        8
      10: iload_2
      11: aload_1
      12: iconst_0
      13: invokestatic  #22                 // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[III[II)I
      16: pop
      17: bipush        19
      19: aload_0
      20: aload_1
      21: invokestatic  #24                 // Method org/bouncycastle/math/raw/Nat256.mulByWordAddTo:(I[I[I)I
      24: iconst_1
      25: ishl
      26: istore_3
      27: aload_1
      28: bipush        7
      30: iaload
      31: istore        4
      33: iload_3
      34: iload         4
      36: bipush        31
      38: iushr
      39: iload_2
      40: bipush        31
      42: iushr
      43: isub
      44: iadd
      45: istore_3
      46: iload         4
      48: ldc           #25                 // int 2147483647
      50: iand
      51: istore        4
      53: iload         4
      55: bipush        7
      57: iload_3
      58: bipush        19
      60: imul
      61: aload_1
      62: invokestatic  #26                 // Method org/bouncycastle/math/raw/Nat.addWordTo:(II[I)I
      65: iadd
      66: istore        4
      68: aload_1
      69: bipush        7
      71: iload         4
      73: iastore
      74: aload_1
      75: getstatic     #3                  // Field P:[I
      78: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      81: ifeq          89
      84: aload_1
      85: invokestatic  #5                  // Method subPFrom:([I)I
      88: pop
      89: return

  public static void reduce27(int, int[]);
    Code:
       0: aload_1
       1: bipush        7
       3: iaload
       4: istore_2
       5: iload_0
       6: iconst_1
       7: ishl
       8: iload_2
       9: bipush        31
      11: iushr
      12: ior
      13: istore_3
      14: iload_2
      15: ldc           #25                 // int 2147483647
      17: iand
      18: istore_2
      19: iload_2
      20: bipush        7
      22: iload_3
      23: bipush        19
      25: imul
      26: aload_1
      27: invokestatic  #26                 // Method org/bouncycastle/math/raw/Nat.addWordTo:(II[I)I
      30: iadd
      31: istore_2
      32: aload_1
      33: bipush        7
      35: iload_2
      36: iastore
      37: aload_1
      38: getstatic     #3                  // Field P:[I
      41: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      44: ifeq          52
      47: aload_1
      48: invokestatic  #5                  // Method subPFrom:([I)I
      51: pop
      52: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #15                 // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #17                 // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #15                 // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #17                 // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #27                 // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #17                 // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #21                 // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          16
      11: aload_2
      12: invokestatic  #28                 // Method addPTo:([I)I
      15: pop
      16: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #29                 // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          18
      13: aload_2
      14: invokestatic  #30                 // Method addPExtTo:([I)I
      17: pop
      18: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #31                 // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: pop
       9: aload_1
      10: getstatic     #3                  // Field P:[I
      13: invokestatic  #4                  // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      16: ifeq          24
      19: aload_1
      20: invokestatic  #5                  // Method subPFrom:([I)I
      23: pop
      24: return

  private static int addPTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #32                 // long 4294967295l
       7: land
       8: ldc2_w        #34                 // long 19l
      11: lsub
      12: lstore_1
      13: aload_0
      14: iconst_0
      15: lload_1
      16: l2i
      17: iastore
      18: lload_1
      19: bipush        32
      21: lshr
      22: lstore_1
      23: lload_1
      24: lconst_0
      25: lcmp
      26: ifeq          38
      29: bipush        7
      31: aload_0
      32: iconst_1
      33: invokestatic  #36                 // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      36: i2l
      37: lstore_1
      38: lload_1
      39: aload_0
      40: bipush        7
      42: iaload
      43: i2l
      44: ldc2_w        #32                 // long 4294967295l
      47: land
      48: ldc2_w        #37                 // long 2147483648l
      51: ladd
      52: ladd
      53: lstore_1
      54: aload_0
      55: bipush        7
      57: lload_1
      58: l2i
      59: iastore
      60: lload_1
      61: bipush        32
      63: lshr
      64: lstore_1
      65: lload_1
      66: l2i
      67: ireturn

  private static int addPExtTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #32                 // long 4294967295l
       7: land
       8: getstatic     #7                  // Field PExt:[I
      11: iconst_0
      12: iaload
      13: i2l
      14: ldc2_w        #32                 // long 4294967295l
      17: land
      18: ladd
      19: lstore_1
      20: aload_0
      21: iconst_0
      22: lload_1
      23: l2i
      24: iastore
      25: lload_1
      26: bipush        32
      28: lshr
      29: lstore_1
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifeq          45
      36: bipush        8
      38: aload_0
      39: iconst_1
      40: invokestatic  #39                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      43: i2l
      44: lstore_1
      45: lload_1
      46: aload_0
      47: bipush        8
      49: iaload
      50: i2l
      51: ldc2_w        #32                 // long 4294967295l
      54: land
      55: ldc2_w        #34                 // long 19l
      58: lsub
      59: ladd
      60: lstore_1
      61: aload_0
      62: bipush        8
      64: lload_1
      65: l2i
      66: iastore
      67: lload_1
      68: bipush        32
      70: lshr
      71: lstore_1
      72: lload_1
      73: lconst_0
      74: lcmp
      75: ifeq          88
      78: bipush        15
      80: aload_0
      81: bipush        9
      83: invokestatic  #36                 // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      86: i2l
      87: lstore_1
      88: lload_1
      89: aload_0
      90: bipush        15
      92: iaload
      93: i2l
      94: ldc2_w        #32                 // long 4294967295l
      97: land
      98: getstatic     #7                  // Field PExt:[I
     101: bipush        15
     103: iaload
     104: iconst_1
     105: iadd
     106: i2l
     107: ldc2_w        #32                 // long 4294967295l
     110: land
     111: ladd
     112: ladd
     113: lstore_1
     114: aload_0
     115: bipush        15
     117: lload_1
     118: l2i
     119: iastore
     120: lload_1
     121: bipush        32
     123: lshr
     124: lstore_1
     125: lload_1
     126: l2i
     127: ireturn

  private static int subPFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #32                 // long 4294967295l
       7: land
       8: ldc2_w        #34                 // long 19l
      11: ladd
      12: lstore_1
      13: aload_0
      14: iconst_0
      15: lload_1
      16: l2i
      17: iastore
      18: lload_1
      19: bipush        32
      21: lshr
      22: lstore_1
      23: lload_1
      24: lconst_0
      25: lcmp
      26: ifeq          38
      29: bipush        7
      31: aload_0
      32: iconst_1
      33: invokestatic  #39                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      36: i2l
      37: lstore_1
      38: lload_1
      39: aload_0
      40: bipush        7
      42: iaload
      43: i2l
      44: ldc2_w        #32                 // long 4294967295l
      47: land
      48: ldc2_w        #37                 // long 2147483648l
      51: lsub
      52: ladd
      53: lstore_1
      54: aload_0
      55: bipush        7
      57: lload_1
      58: l2i
      59: iastore
      60: lload_1
      61: bipush        32
      63: lshr
      64: lstore_1
      65: lload_1
      66: l2i
      67: ireturn

  private static int subPExtFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #32                 // long 4294967295l
       7: land
       8: getstatic     #7                  // Field PExt:[I
      11: iconst_0
      12: iaload
      13: i2l
      14: ldc2_w        #32                 // long 4294967295l
      17: land
      18: lsub
      19: lstore_1
      20: aload_0
      21: iconst_0
      22: lload_1
      23: l2i
      24: iastore
      25: lload_1
      26: bipush        32
      28: lshr
      29: lstore_1
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifeq          45
      36: bipush        8
      38: aload_0
      39: iconst_1
      40: invokestatic  #36                 // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      43: i2l
      44: lstore_1
      45: lload_1
      46: aload_0
      47: bipush        8
      49: iaload
      50: i2l
      51: ldc2_w        #32                 // long 4294967295l
      54: land
      55: ldc2_w        #34                 // long 19l
      58: ladd
      59: ladd
      60: lstore_1
      61: aload_0
      62: bipush        8
      64: lload_1
      65: l2i
      66: iastore
      67: lload_1
      68: bipush        32
      70: lshr
      71: lstore_1
      72: lload_1
      73: lconst_0
      74: lcmp
      75: ifeq          88
      78: bipush        15
      80: aload_0
      81: bipush        9
      83: invokestatic  #39                 // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      86: i2l
      87: lstore_1
      88: lload_1
      89: aload_0
      90: bipush        15
      92: iaload
      93: i2l
      94: ldc2_w        #32                 // long 4294967295l
      97: land
      98: getstatic     #7                  // Field PExt:[I
     101: bipush        15
     103: iaload
     104: iconst_1
     105: iadd
     106: i2l
     107: ldc2_w        #32                 // long 4294967295l
     110: land
     111: lsub
     112: ladd
     113: lstore_1
     114: aload_0
     115: bipush        15
     117: lload_1
     118: l2i
     119: iastore
     120: lload_1
     121: bipush        32
     123: lshr
     124: lstore_1
     125: lload_1
     126: l2i
     127: ireturn

  static {};
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: bipush        -19
       8: iastore
       9: dup
      10: iconst_1
      11: iconst_m1
      12: iastore
      13: dup
      14: iconst_2
      15: iconst_m1
      16: iastore
      17: dup
      18: iconst_3
      19: iconst_m1
      20: iastore
      21: dup
      22: iconst_4
      23: iconst_m1
      24: iastore
      25: dup
      26: iconst_5
      27: iconst_m1
      28: iastore
      29: dup
      30: bipush        6
      32: iconst_m1
      33: iastore
      34: dup
      35: bipush        7
      37: ldc           #25                 // int 2147483647
      39: iastore
      40: putstatic     #3                  // Field P:[I
      43: bipush        16
      45: newarray       int
      47: dup
      48: iconst_0
      49: sipush        361
      52: iastore
      53: dup
      54: iconst_1
      55: iconst_0
      56: iastore
      57: dup
      58: iconst_2
      59: iconst_0
      60: iastore
      61: dup
      62: iconst_3
      63: iconst_0
      64: iastore
      65: dup
      66: iconst_4
      67: iconst_0
      68: iastore
      69: dup
      70: iconst_5
      71: iconst_0
      72: iastore
      73: dup
      74: bipush        6
      76: iconst_0
      77: iastore
      78: dup
      79: bipush        7
      81: iconst_0
      82: iastore
      83: dup
      84: bipush        8
      86: bipush        -19
      88: iastore
      89: dup
      90: bipush        9
      92: iconst_m1
      93: iastore
      94: dup
      95: bipush        10
      97: iconst_m1
      98: iastore
      99: dup
     100: bipush        11
     102: iconst_m1
     103: iastore
     104: dup
     105: bipush        12
     107: iconst_m1
     108: iastore
     109: dup
     110: bipush        13
     112: iconst_m1
     113: iastore
     114: dup
     115: bipush        14
     117: iconst_m1
     118: iastore
     119: dup
     120: bipush        15
     122: ldc           #40                 // int 1073741823
     124: iastore
     125: putstatic     #7                  // Field PExt:[I
     128: return
}
