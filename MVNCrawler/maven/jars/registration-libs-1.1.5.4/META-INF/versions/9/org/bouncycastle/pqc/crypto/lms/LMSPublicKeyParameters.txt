Compiled from "LMSPublicKeyParameters.java"
public class org.bouncycastle.pqc.crypto.lms.LMSPublicKeyParameters extends org.bouncycastle.pqc.crypto.lms.LMSKeyParameters implements org.bouncycastle.pqc.crypto.lms.LMSContextBasedVerifier {
  private final org.bouncycastle.pqc.crypto.lms.LMSigParameters parameterSet;

  private final org.bouncycastle.pqc.crypto.lms.LMOtsParameters lmOtsType;

  private final byte[] I;

  private final byte[] T1;

  public org.bouncycastle.pqc.crypto.lms.LMSPublicKeyParameters(org.bouncycastle.pqc.crypto.lms.LMSigParameters, org.bouncycastle.pqc.crypto.lms.LMOtsParameters, byte[], byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method org/bouncycastle/pqc/crypto/lms/LMSKeyParameters."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field parameterSet:Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field lmOtsType:Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      15: aload_0
      16: aload         4
      18: invokestatic  #4                  // Method org/bouncycastle/util/Arrays.clone:([B)[B
      21: putfield      #5                  // Field I:[B
      24: aload_0
      25: aload_3
      26: invokestatic  #4                  // Method org/bouncycastle/util/Arrays.clone:([B)[B
      29: putfield      #6                  // Field T1:[B
      32: return

  public static org.bouncycastle.pqc.crypto.lms.LMSPublicKeyParameters getInstance(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters
       4: ifeq          12
       7: aload_0
       8: checkcast     #7                  // class org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters
      11: areturn
      12: aload_0
      13: instanceof    #8                  // class java/io/DataInputStream
      16: ifeq          89
      19: aload_0
      20: checkcast     #8                  // class java/io/DataInputStream
      23: invokevirtual #9                  // Method java/io/DataInputStream.readInt:()I
      26: istore_1
      27: iload_1
      28: invokestatic  #10                 // Method org/bouncycastle/pqc/crypto/lms/LMSigParameters.getParametersForType:(I)Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
      31: astore_2
      32: aload_0
      33: checkcast     #8                  // class java/io/DataInputStream
      36: invokevirtual #9                  // Method java/io/DataInputStream.readInt:()I
      39: invokestatic  #11                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsParameters.getParametersForType:(I)Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      42: astore_3
      43: bipush        16
      45: newarray       byte
      47: astore        4
      49: aload_0
      50: checkcast     #8                  // class java/io/DataInputStream
      53: aload         4
      55: invokevirtual #12                 // Method java/io/DataInputStream.readFully:([B)V
      58: aload_2
      59: invokevirtual #13                 // Method org/bouncycastle/pqc/crypto/lms/LMSigParameters.getM:()I
      62: newarray       byte
      64: astore        5
      66: aload_0
      67: checkcast     #8                  // class java/io/DataInputStream
      70: aload         5
      72: invokevirtual #12                 // Method java/io/DataInputStream.readFully:([B)V
      75: new           #7                  // class org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters
      78: dup
      79: aload_2
      80: aload_3
      81: aload         5
      83: aload         4
      85: invokespecial #14                 // Method "<init>":(Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;[B[B)V
      88: areturn
      89: aload_0
      90: instanceof    #15                 // class "[B"
      93: ifeq          145
      96: aconst_null
      97: astore_1
      98: new           #8                  // class java/io/DataInputStream
     101: dup
     102: new           #16                 // class java/io/ByteArrayInputStream
     105: dup
     106: aload_0
     107: checkcast     #15                 // class "[B"
     110: invokespecial #17                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     113: invokespecial #18                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     116: astore_1
     117: aload_1
     118: invokestatic  #19                 // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters;
     121: astore_2
     122: aload_1
     123: ifnull        130
     126: aload_1
     127: invokevirtual #20                 // Method java/io/InputStream.close:()V
     130: aload_2
     131: areturn
     132: astore        6
     134: aload_1
     135: ifnull        142
     138: aload_1
     139: invokevirtual #20                 // Method java/io/InputStream.close:()V
     142: aload         6
     144: athrow
     145: aload_0
     146: instanceof    #21                 // class java/io/InputStream
     149: ifeq          163
     152: aload_0
     153: checkcast     #21                 // class java/io/InputStream
     156: invokestatic  #22                 // Method org/bouncycastle/util/io/Streams.readAll:(Ljava/io/InputStream;)[B
     159: invokestatic  #19                 // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters;
     162: areturn
     163: new           #23                 // class java/lang/IllegalArgumentException
     166: dup
     167: aload_0
     168: invokedynamic #24,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Object;)Ljava/lang/String;
     173: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     176: athrow
    Exception table:
       from    to  target type
          98   122   132   any
         132   134   132   any

  public byte[] getEncoded() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method toByteArray:()[B
       4: areturn

  public org.bouncycastle.pqc.crypto.lms.LMSigParameters getSigParameters();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameterSet:Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
       4: areturn

  public org.bouncycastle.pqc.crypto.lms.LMOtsParameters getOtsParameters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lmOtsType:Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
       4: areturn

  public org.bouncycastle.pqc.crypto.lms.LMSParameters getLMSParameters();
    Code:
       0: new           #27                 // class org/bouncycastle/pqc/crypto/lms/LMSParameters
       3: dup
       4: aload_0
       5: invokevirtual #28                 // Method getSigParameters:()Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
       8: aload_0
       9: invokevirtual #29                 // Method getOtsParameters:()Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      12: invokespecial #30                 // Method org/bouncycastle/pqc/crypto/lms/LMSParameters."<init>":(Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;)V
      15: areturn

  public byte[] getT1();
    Code:
       0: aload_0
       1: getfield      #6                  // Field T1:[B
       4: invokestatic  #4                  // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  boolean matchesT1(byte[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field T1:[B
       4: aload_1
       5: invokestatic  #31                 // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
       8: ireturn

  public byte[] getI();
    Code:
       0: aload_0
       1: getfield      #5                  // Field I:[B
       4: invokestatic  #4                  // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  byte[] refI();
    Code:
       0: aload_0
       1: getfield      #5                  // Field I:[B
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #7                  // class org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field parameterSet:Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
      33: aload_2
      34: getfield      #2                  // Field parameterSet:Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
      37: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #3                  // Field lmOtsType:Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      49: aload_2
      50: getfield      #3                  // Field lmOtsType:Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      53: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #5                  // Field I:[B
      65: aload_2
      66: getfield      #5                  // Field I:[B
      69: invokestatic  #31                 // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      72: ifne          77
      75: iconst_0
      76: ireturn
      77: aload_0
      78: getfield      #6                  // Field T1:[B
      81: aload_2
      82: getfield      #6                  // Field T1:[B
      85: invokestatic  #31                 // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      88: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameterSet:Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
       4: invokevirtual #34                 // Method java/lang/Object.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #3                  // Field lmOtsType:Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      16: invokevirtual #34                 // Method java/lang/Object.hashCode:()I
      19: iadd
      20: istore_1
      21: bipush        31
      23: iload_1
      24: imul
      25: aload_0
      26: getfield      #5                  // Field I:[B
      29: invokestatic  #35                 // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      32: iadd
      33: istore_1
      34: bipush        31
      36: iload_1
      37: imul
      38: aload_0
      39: getfield      #6                  // Field T1:[B
      42: invokestatic  #35                 // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      45: iadd
      46: istore_1
      47: iload_1
      48: ireturn

  byte[] toByteArray();
    Code:
       0: invokestatic  #36                 // Method org/bouncycastle/pqc/crypto/lms/Composer.compose:()Lorg/bouncycastle/pqc/crypto/lms/Composer;
       3: aload_0
       4: getfield      #2                  // Field parameterSet:Lorg/bouncycastle/pqc/crypto/lms/LMSigParameters;
       7: invokevirtual #37                 // Method org/bouncycastle/pqc/crypto/lms/LMSigParameters.getType:()I
      10: invokevirtual #38                 // Method org/bouncycastle/pqc/crypto/lms/Composer.u32str:(I)Lorg/bouncycastle/pqc/crypto/lms/Composer;
      13: aload_0
      14: getfield      #3                  // Field lmOtsType:Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      17: invokevirtual #39                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsParameters.getType:()I
      20: invokevirtual #38                 // Method org/bouncycastle/pqc/crypto/lms/Composer.u32str:(I)Lorg/bouncycastle/pqc/crypto/lms/Composer;
      23: aload_0
      24: getfield      #5                  // Field I:[B
      27: invokevirtual #40                 // Method org/bouncycastle/pqc/crypto/lms/Composer.bytes:([B)Lorg/bouncycastle/pqc/crypto/lms/Composer;
      30: aload_0
      31: getfield      #6                  // Field T1:[B
      34: invokevirtual #40                 // Method org/bouncycastle/pqc/crypto/lms/Composer.bytes:([B)Lorg/bouncycastle/pqc/crypto/lms/Composer;
      37: invokevirtual #41                 // Method org/bouncycastle/pqc/crypto/lms/Composer.build:()[B
      40: areturn

  public org.bouncycastle.pqc.crypto.lms.LMSContext generateLMSContext(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method org/bouncycastle/pqc/crypto/lms/LMSSignature.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/pqc/crypto/lms/LMSSignature;
       5: invokevirtual #43                 // Method generateOtsContext:(Lorg/bouncycastle/pqc/crypto/lms/LMSSignature;)Lorg/bouncycastle/pqc/crypto/lms/LMSContext;
       8: areturn
       9: astore_2
      10: new           #45                 // class java/lang/IllegalStateException
      13: dup
      14: aload_2
      15: invokevirtual #46                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      18: invokedynamic #47,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      23: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  org.bouncycastle.pqc.crypto.lms.LMSContext generateOtsContext(org.bouncycastle.pqc.crypto.lms.LMSSignature);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getOtsParameters:()Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
       4: invokevirtual #39                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsParameters.getType:()I
       7: istore_2
       8: aload_1
       9: invokevirtual #49                 // Method org/bouncycastle/pqc/crypto/lms/LMSSignature.getOtsSignature:()Lorg/bouncycastle/pqc/crypto/lms/LMOtsSignature;
      12: invokevirtual #50                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsSignature.getType:()Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      15: invokevirtual #39                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsParameters.getType:()I
      18: iload_2
      19: if_icmpeq     32
      22: new           #23                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #51                 // String ots type from lsm signature does not match ots signature type from embedded ots signature
      28: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: new           #52                 // class org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey
      35: dup
      36: iload_2
      37: invokestatic  #11                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsParameters.getParametersForType:(I)Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;
      40: aload_0
      41: getfield      #5                  // Field I:[B
      44: aload_1
      45: invokevirtual #53                 // Method org/bouncycastle/pqc/crypto/lms/LMSSignature.getQ:()I
      48: aconst_null
      49: invokespecial #54                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey."<init>":(Lorg/bouncycastle/pqc/crypto/lms/LMOtsParameters;[BI[B)V
      52: aload_1
      53: invokevirtual #55                 // Method org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey.createOtsContext:(Lorg/bouncycastle/pqc/crypto/lms/LMSSignature;)Lorg/bouncycastle/pqc/crypto/lms/LMSContext;
      56: areturn

  public boolean verify(org.bouncycastle.pqc.crypto.lms.LMSContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method org/bouncycastle/pqc/crypto/lms/LMS.verifySignature:(Lorg/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters;Lorg/bouncycastle/pqc/crypto/lms/LMSContext;)Z
       5: ireturn
}
