Compiled from "WNafUtil.java"
class org.bouncycastle.math.ec.WNafUtil$4 implements org.bouncycastle.math.ec.PreCompCallback {
  final org.bouncycastle.math.ec.WNafPreCompInfo val$fromWNaf;

  final boolean val$includeNegated;

  final org.bouncycastle.math.ec.ECPointMap val$pointMap;

  org.bouncycastle.math.ec.WNafUtil$4(org.bouncycastle.math.ec.WNafPreCompInfo, boolean, org.bouncycastle.math.ec.ECPointMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$fromWNaf:Lorg/bouncycastle/math/ec/WNafPreCompInfo;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$includeNegated:Z
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$pointMap:Lorg/bouncycastle/math/ec/ECPointMap;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public org.bouncycastle.math.ec.PreCompInfo precompute(org.bouncycastle.math.ec.PreCompInfo);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/bouncycastle/math/ec/WNafPreCompInfo
       4: ifeq          14
       7: aload_1
       8: checkcast     #5                  // class org/bouncycastle/math/ec/WNafPreCompInfo
      11: goto          15
      14: aconst_null
      15: astore_2
      16: aload_0
      17: getfield      #1                  // Field val$fromWNaf:Lorg/bouncycastle/math/ec/WNafPreCompInfo;
      20: invokevirtual #6                  // Method org/bouncycastle/math/ec/WNafPreCompInfo.getWidth:()I
      23: istore_3
      24: aload_0
      25: getfield      #1                  // Field val$fromWNaf:Lorg/bouncycastle/math/ec/WNafPreCompInfo;
      28: invokevirtual #7                  // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint;
      31: arraylength
      32: istore        4
      34: aload_0
      35: aload_2
      36: iload_3
      37: iload         4
      39: aload_0
      40: getfield      #2                  // Field val$includeNegated:Z
      43: invokespecial #8                  // Method checkExisting:(Lorg/bouncycastle/math/ec/WNafPreCompInfo;IIZ)Z
      46: ifeq          56
      49: aload_2
      50: invokevirtual #9                  // Method org/bouncycastle/math/ec/WNafPreCompInfo.decrementPromotionCountdown:()I
      53: pop
      54: aload_2
      55: areturn
      56: new           #5                  // class org/bouncycastle/math/ec/WNafPreCompInfo
      59: dup
      60: invokespecial #10                 // Method org/bouncycastle/math/ec/WNafPreCompInfo."<init>":()V
      63: astore        5
      65: aload         5
      67: aload_0
      68: getfield      #1                  // Field val$fromWNaf:Lorg/bouncycastle/math/ec/WNafPreCompInfo;
      71: invokevirtual #11                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPromotionCountdown:()I
      74: invokevirtual #12                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setPromotionCountdown:(I)V
      77: aload_0
      78: getfield      #1                  // Field val$fromWNaf:Lorg/bouncycastle/math/ec/WNafPreCompInfo;
      81: invokevirtual #13                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getTwice:()Lorg/bouncycastle/math/ec/ECPoint;
      84: astore        6
      86: aconst_null
      87: aload         6
      89: if_acmpeq     112
      92: aload_0
      93: getfield      #3                  // Field val$pointMap:Lorg/bouncycastle/math/ec/ECPointMap;
      96: aload         6
      98: invokeinterface #14,  2           // InterfaceMethod org/bouncycastle/math/ec/ECPointMap.map:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     103: astore        7
     105: aload         5
     107: aload         7
     109: invokevirtual #15                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setTwice:(Lorg/bouncycastle/math/ec/ECPoint;)V
     112: aload_0
     113: getfield      #1                  // Field val$fromWNaf:Lorg/bouncycastle/math/ec/WNafPreCompInfo;
     116: invokevirtual #7                  // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint;
     119: astore        7
     121: aload         7
     123: arraylength
     124: anewarray     #16                 // class org/bouncycastle/math/ec/ECPoint
     127: astore        8
     129: iconst_0
     130: istore        9
     132: iload         9
     134: aload         7
     136: arraylength
     137: if_icmpge     165
     140: aload         8
     142: iload         9
     144: aload_0
     145: getfield      #3                  // Field val$pointMap:Lorg/bouncycastle/math/ec/ECPointMap;
     148: aload         7
     150: iload         9
     152: aaload
     153: invokeinterface #14,  2           // InterfaceMethod org/bouncycastle/math/ec/ECPointMap.map:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     158: aastore
     159: iinc          9, 1
     162: goto          132
     165: aload         5
     167: aload         8
     169: invokevirtual #17                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setPreComp:([Lorg/bouncycastle/math/ec/ECPoint;)V
     172: aload         5
     174: iload_3
     175: invokevirtual #18                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setWidth:(I)V
     178: aload_0
     179: getfield      #2                  // Field val$includeNegated:Z
     182: ifeq          230
     185: aload         8
     187: arraylength
     188: anewarray     #16                 // class org/bouncycastle/math/ec/ECPoint
     191: astore        9
     193: iconst_0
     194: istore        10
     196: iload         10
     198: aload         9
     200: arraylength
     201: if_icmpge     223
     204: aload         9
     206: iload         10
     208: aload         8
     210: iload         10
     212: aaload
     213: invokevirtual #19                 // Method org/bouncycastle/math/ec/ECPoint.negate:()Lorg/bouncycastle/math/ec/ECPoint;
     216: aastore
     217: iinc          10, 1
     220: goto          196
     223: aload         5
     225: aload         9
     227: invokevirtual #20                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.setPreCompNeg:([Lorg/bouncycastle/math/ec/ECPoint;)V
     230: aload         5
     232: areturn

  private boolean checkExisting(org.bouncycastle.math.ec.WNafPreCompInfo, int, int, boolean);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     46
       5: aload_1
       6: invokevirtual #6                  // Method org/bouncycastle/math/ec/WNafPreCompInfo.getWidth:()I
       9: iload_2
      10: if_icmplt     46
      13: aload_0
      14: aload_1
      15: invokevirtual #7                  // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint;
      18: iload_3
      19: invokespecial #21                 // Method checkTable:([Lorg/bouncycastle/math/ec/ECPoint;I)Z
      22: ifeq          46
      25: iload         4
      27: ifeq          42
      30: aload_0
      31: aload_1
      32: invokevirtual #22                 // Method org/bouncycastle/math/ec/WNafPreCompInfo.getPreCompNeg:()[Lorg/bouncycastle/math/ec/ECPoint;
      35: iload_3
      36: invokespecial #21                 // Method checkTable:([Lorg/bouncycastle/math/ec/ECPoint;I)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  private boolean checkTable(org.bouncycastle.math.ec.ECPoint[], int);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     15
       5: aload_1
       6: arraylength
       7: iload_2
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
