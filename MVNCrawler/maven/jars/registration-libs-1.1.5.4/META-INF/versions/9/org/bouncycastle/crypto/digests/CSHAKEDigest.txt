Compiled from "CSHAKEDigest.java"
public class org.bouncycastle.crypto.digests.CSHAKEDigest extends org.bouncycastle.crypto.digests.SHAKEDigest {
  private static final byte[] padding;

  private final byte[] diff;

  public org.bouncycastle.crypto.digests.CSHAKEDigest(int, byte[], byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/bouncycastle/crypto/digests/SHAKEDigest."<init>":(I)V
       5: aload_2
       6: ifnull        14
       9: aload_2
      10: arraylength
      11: ifne          31
      14: aload_3
      15: ifnull        23
      18: aload_3
      19: arraylength
      20: ifne          31
      23: aload_0
      24: aconst_null
      25: putfield      #2                  // Field diff:[B
      28: goto          63
      31: aload_0
      32: aload_0
      33: getfield      #3                  // Field rate:I
      36: bipush        8
      38: idiv
      39: i2l
      40: invokestatic  #4                  // Method org/bouncycastle/crypto/digests/XofUtils.leftEncode:(J)[B
      43: aload_0
      44: aload_2
      45: invokespecial #5                  // Method encodeString:([B)[B
      48: aload_0
      49: aload_3
      50: invokespecial #5                  // Method encodeString:([B)[B
      53: invokestatic  #6                  // Method org/bouncycastle/util/Arrays.concatenate:([B[B[B)[B
      56: putfield      #2                  // Field diff:[B
      59: aload_0
      60: invokespecial #7                  // Method diffPadAndAbsorb:()V
      63: return

  private void diffPadAndAbsorb();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rate:I
       4: bipush        8
       6: idiv
       7: istore_1
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field diff:[B
      13: iconst_0
      14: aload_0
      15: getfield      #2                  // Field diff:[B
      18: arraylength
      19: invokevirtual #8                  // Method absorb:([BII)V
      22: aload_0
      23: getfield      #2                  // Field diff:[B
      26: arraylength
      27: iload_1
      28: irem
      29: istore_2
      30: iload_2
      31: ifeq          77
      34: iload_1
      35: iload_2
      36: isub
      37: istore_3
      38: iload_3
      39: getstatic     #9                  // Field padding:[B
      42: arraylength
      43: if_icmple     68
      46: aload_0
      47: getstatic     #9                  // Field padding:[B
      50: iconst_0
      51: getstatic     #9                  // Field padding:[B
      54: arraylength
      55: invokevirtual #8                  // Method absorb:([BII)V
      58: iload_3
      59: getstatic     #9                  // Field padding:[B
      62: arraylength
      63: isub
      64: istore_3
      65: goto          38
      68: aload_0
      69: getstatic     #9                  // Field padding:[B
      72: iconst_0
      73: iload_3
      74: invokevirtual #8                  // Method absorb:([BII)V
      77: return

  private byte[] encodeString(byte[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          14
       9: lconst_0
      10: invokestatic  #4                  // Method org/bouncycastle/crypto/digests/XofUtils.leftEncode:(J)[B
      13: areturn
      14: aload_1
      15: arraylength
      16: i2l
      17: ldc2_w        #10                 // long 8l
      20: lmul
      21: invokestatic  #4                  // Method org/bouncycastle/crypto/digests/XofUtils.leftEncode:(J)[B
      24: aload_1
      25: invokestatic  #12                 // Method org/bouncycastle/util/Arrays.concatenate:([B[B)[B
      28: areturn

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field fixedOutputLength:I
       4: invokedynamic #14,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
       9: areturn

  public int doOutput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field diff:[B
       4: ifnull        34
       7: aload_0
       8: getfield      #15                 // Field squeezing:Z
      11: ifne          20
      14: aload_0
      15: iconst_0
      16: iconst_2
      17: invokevirtual #16                 // Method absorbBits:(II)V
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: i2l
      25: ldc2_w        #10                 // long 8l
      28: lmul
      29: invokevirtual #17                 // Method squeeze:([BIJ)V
      32: iload_3
      33: ireturn
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload_3
      38: invokespecial #18                 // Method org/bouncycastle/crypto/digests/SHAKEDigest.doOutput:([BII)I
      41: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/bouncycastle/crypto/digests/SHAKEDigest.reset:()V
       4: aload_0
       5: getfield      #2                  // Field diff:[B
       8: ifnull        15
      11: aload_0
      12: invokespecial #7                  // Method diffPadAndAbsorb:()V
      15: return

  static {};
    Code:
       0: bipush        100
       2: newarray       byte
       4: putstatic     #9                  // Field padding:[B
       7: return
}
