Compiled from "ECCurve.java"
public abstract class org.bouncycastle.math.ec.ECCurve$AbstractFp extends org.bouncycastle.math.ec.ECCurve {
  protected org.bouncycastle.math.ec.ECCurve$AbstractFp(java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method org/bouncycastle/math/field/FiniteFields.getPrimeField:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/field/FiniteField;
       5: invokespecial #2                  // Method org/bouncycastle/math/ec/ECCurve."<init>":(Lorg/bouncycastle/math/field/FiniteField;)V
       8: return

  public boolean isValidFieldElement(java.math.BigInteger);
    Code:
       0: aload_1
       1: ifnull        31
       4: aload_1
       5: invokevirtual #3                  // Method java/math/BigInteger.signum:()I
       8: iflt          31
      11: aload_1
      12: aload_0
      13: invokevirtual #4                  // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
      16: invokeinterface #5,  1            // InterfaceMethod org/bouncycastle/math/field/FiniteField.getCharacteristic:()Ljava/math/BigInteger;
      21: invokevirtual #6                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      24: ifge          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public org.bouncycastle.math.ec.ECFieldElement randomFieldElement(java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
       4: invokeinterface #5,  1            // InterfaceMethod org/bouncycastle/math/field/FiniteField.getCharacteristic:()Ljava/math/BigInteger;
       9: astore_2
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokestatic  #7                  // Method implRandomFieldElement:(Ljava/security/SecureRandom;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      16: invokevirtual #8                  // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokestatic  #7                  // Method implRandomFieldElement:(Ljava/security/SecureRandom;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      26: invokevirtual #8                  // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      29: astore        4
      31: aload_3
      32: aload         4
      34: invokevirtual #9                  // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      37: areturn

  public org.bouncycastle.math.ec.ECFieldElement randomFieldElementMult(java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
       4: invokeinterface #5,  1            // InterfaceMethod org/bouncycastle/math/field/FiniteField.getCharacteristic:()Ljava/math/BigInteger;
       9: astore_2
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokestatic  #10                 // Method implRandomFieldElementMult:(Ljava/security/SecureRandom;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      16: invokevirtual #8                  // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokestatic  #10                 // Method implRandomFieldElementMult:(Ljava/security/SecureRandom;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      26: invokevirtual #8                  // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      29: astore        4
      31: aload_3
      32: aload         4
      34: invokevirtual #9                  // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      37: areturn

  protected org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #8                  // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       5: astore_3
       6: aload_3
       7: invokevirtual #11                 // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      10: aload_0
      11: getfield      #12                 // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
      14: invokevirtual #13                 // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      17: aload_3
      18: invokevirtual #9                  // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      21: aload_0
      22: getfield      #14                 // Field b:Lorg/bouncycastle/math/ec/ECFieldElement;
      25: invokevirtual #13                 // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      28: astore        4
      30: aload         4
      32: invokevirtual #15                 // Method org/bouncycastle/math/ec/ECFieldElement.sqrt:()Lorg/bouncycastle/math/ec/ECFieldElement;
      35: astore        5
      37: aload         5
      39: ifnonnull     52
      42: new           #16                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #17                 // String Invalid point compression
      48: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         5
      54: invokevirtual #19                 // Method org/bouncycastle/math/ec/ECFieldElement.testBitZero:()Z
      57: iload_1
      58: iconst_1
      59: if_icmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: if_icmpeq     77
      70: aload         5
      72: invokevirtual #20                 // Method org/bouncycastle/math/ec/ECFieldElement.negate:()Lorg/bouncycastle/math/ec/ECFieldElement;
      75: astore        5
      77: aload_0
      78: aload_3
      79: aload         5
      81: invokevirtual #21                 // Method createRawPoint:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
      84: areturn

  private static java.math.BigInteger implRandomFieldElement(java.security.SecureRandom, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/math/BigInteger.bitLength:()I
       4: aload_0
       5: invokestatic  #23                 // Method org/bouncycastle/util/BigIntegers.createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #6                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      14: ifge          0
      17: aload_2
      18: areturn

  private static java.math.BigInteger implRandomFieldElementMult(java.security.SecureRandom, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/math/BigInteger.bitLength:()I
       4: aload_0
       5: invokestatic  #23                 // Method org/bouncycastle/util/BigIntegers.createRandomBigInteger:(ILjava/security/SecureRandom;)Ljava/math/BigInteger;
       8: astore_2
       9: aload_2
      10: invokevirtual #3                  // Method java/math/BigInteger.signum:()I
      13: ifle          0
      16: aload_2
      17: aload_1
      18: invokevirtual #6                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      21: ifge          0
      24: aload_2
      25: areturn
}
