Compiled from "SWTexture.java"
abstract class com.sun.prism.sw.SWTexture implements com.sun.prism.Texture {
  boolean allocated;

  int physicalWidth;

  int physicalHeight;

  int contentWidth;

  int contentHeight;

  private com.sun.prism.sw.SWResourceFactory factory;

  private int lastImageSerial;

  private final com.sun.prism.Texture$WrapMode wrapMode;

  private int lockcount;

  boolean permanent;

  int employcount;

  static com.sun.prism.Texture create(com.sun.prism.sw.SWResourceFactory, com.sun.prism.PixelFormat, com.sun.prism.Texture$WrapMode, int, int);
    Code:
       0: getstatic     #1                  // Field com/sun/prism/sw/SWTexture$1.$SwitchMap$com$sun$prism$PixelFormat:[I
       3: aload_1
       4: invokevirtual #2                  // Method com/sun/prism/PixelFormat.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 41
          }
      28: new           #3                  // class com/sun/prism/sw/SWMaskTexture
      31: dup
      32: aload_0
      33: aload_2
      34: iload_3
      35: iload         4
      37: invokespecial #4                  // Method com/sun/prism/sw/SWMaskTexture."<init>":(Lcom/sun/prism/sw/SWResourceFactory;Lcom/sun/prism/Texture$WrapMode;II)V
      40: areturn
      41: new           #5                  // class com/sun/prism/sw/SWArgbPreTexture
      44: dup
      45: aload_0
      46: aload_2
      47: iload_3
      48: iload         4
      50: invokespecial #6                  // Method com/sun/prism/sw/SWArgbPreTexture."<init>":(Lcom/sun/prism/sw/SWResourceFactory;Lcom/sun/prism/Texture$WrapMode;II)V
      53: areturn

  com.sun.prism.sw.SWTexture(com.sun.prism.sw.SWResourceFactory, com.sun.prism.Texture$WrapMode, int, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field allocated:Z
       9: aload_0
      10: aload_1
      11: putfield      #9                  // Field factory:Lcom/sun/prism/sw/SWResourceFactory;
      14: aload_0
      15: aload_2
      16: putfield      #10                 // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      19: aload_0
      20: iload_3
      21: putfield      #11                 // Field physicalWidth:I
      24: aload_0
      25: iload         4
      27: putfield      #12                 // Field physicalHeight:I
      30: aload_0
      31: iload_3
      32: putfield      #13                 // Field contentWidth:I
      35: aload_0
      36: iload         4
      38: putfield      #14                 // Field contentHeight:I
      41: aload_0
      42: invokevirtual #15                 // Method lock:()V
      45: return

  com.sun.prism.sw.SWTexture(com.sun.prism.sw.SWTexture, com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field allocated:Z
       9: aload_0
      10: aload_1
      11: getfield      #8                  // Field allocated:Z
      14: putfield      #8                  // Field allocated:Z
      17: aload_0
      18: aload_1
      19: getfield      #11                 // Field physicalWidth:I
      22: putfield      #11                 // Field physicalWidth:I
      25: aload_0
      26: aload_1
      27: getfield      #12                 // Field physicalHeight:I
      30: putfield      #12                 // Field physicalHeight:I
      33: aload_0
      34: aload_1
      35: getfield      #13                 // Field contentWidth:I
      38: putfield      #13                 // Field contentWidth:I
      41: aload_0
      42: aload_1
      43: getfield      #14                 // Field contentHeight:I
      46: putfield      #14                 // Field contentHeight:I
      49: aload_0
      50: aload_1
      51: getfield      #9                  // Field factory:Lcom/sun/prism/sw/SWResourceFactory;
      54: putfield      #9                  // Field factory:Lcom/sun/prism/sw/SWResourceFactory;
      57: aload_0
      58: aload_1
      59: getfield      #16                 // Field lastImageSerial:I
      62: putfield      #16                 // Field lastImageSerial:I
      65: aload_0
      66: aload_2
      67: putfield      #10                 // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      70: aload_0
      71: invokevirtual #15                 // Method lock:()V
      74: return

  com.sun.prism.sw.SWResourceFactory getResourceFactory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field factory:Lcom/sun/prism/sw/SWResourceFactory;
       4: areturn

  int getOffset();
    Code:
       0: iconst_0
       1: ireturn

  public void lock();
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field lockcount:I
       5: iconst_1
       6: iadd
       7: putfield      #17                 // Field lockcount:I
      10: return

  public void unlock();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method assertLocked:()V
       4: aload_0
       5: dup
       6: getfield      #17                 // Field lockcount:I
       9: iconst_1
      10: isub
      11: putfield      #17                 // Field lockcount:I
      14: return

  public boolean isLocked();
    Code:
       0: aload_0
       1: getfield      #17                 // Field lockcount:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int getLockCount();
    Code:
       0: aload_0
       1: getfield      #17                 // Field lockcount:I
       4: ireturn

  public void assertLocked();
    Code:
       0: aload_0
       1: getfield      #17                 // Field lockcount:I
       4: ifgt          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String texture not locked
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void makePermanent();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field permanent:Z
       5: return

  public void contentsUseful();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method assertLocked:()V
       4: aload_0
       5: dup
       6: getfield      #23                 // Field employcount:I
       9: iconst_1
      10: iadd
      11: putfield      #23                 // Field employcount:I
      14: return

  public void contentsNotUseful();
    Code:
       0: aload_0
       1: getfield      #23                 // Field employcount:I
       4: ifgt          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #24                 // String Resource obsoleted too many times
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: dup
      19: getfield      #23                 // Field employcount:I
      22: iconst_1
      23: isub
      24: putfield      #23                 // Field employcount:I
      27: return

  public boolean isSurfaceLost();
    Code:
       0: iconst_0
       1: ireturn

  public void dispose();
    Code:
       0: return

  public int getPhysicalWidth();
    Code:
       0: aload_0
       1: getfield      #11                 // Field physicalWidth:I
       4: ireturn

  public int getPhysicalHeight();
    Code:
       0: aload_0
       1: getfield      #12                 // Field physicalHeight:I
       4: ireturn

  public int getContentX();
    Code:
       0: iconst_0
       1: ireturn

  public int getContentY();
    Code:
       0: iconst_0
       1: ireturn

  public int getContentWidth();
    Code:
       0: aload_0
       1: getfield      #13                 // Field contentWidth:I
       4: ireturn

  public void setContentWidth(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #11                 // Field physicalWidth:I
       5: if_icmple     18
       8: new           #25                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #26                 // String contentWidth cannot exceed physicalWidth
      14: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #13                 // Field contentWidth:I
      23: return

  public int getContentHeight();
    Code:
       0: aload_0
       1: getfield      #14                 // Field contentHeight:I
       4: ireturn

  public void setContentHeight(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #12                 // Field physicalHeight:I
       5: if_icmple     18
       8: new           #25                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #28                 // String contentHeight cannot exceed physicalHeight
      14: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #14                 // Field contentHeight:I
      23: return

  public int getMaxContentWidth();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getPhysicalWidth:()I
       4: ireturn

  public int getMaxContentHeight();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getPhysicalHeight:()I
       4: ireturn

  public int getLastImageSerial();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lastImageSerial:I
       4: ireturn

  public void setLastImageSerial(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field lastImageSerial:I
       5: return

  public void update(com.sun.prism.Image);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #31                 // Method update:(Lcom/sun/prism/Image;II)V
       7: return

  public void update(com.sun.prism.Image, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_1
       5: invokevirtual #32                 // Method com/sun/prism/Image.getWidth:()I
       8: aload_1
       9: invokevirtual #33                 // Method com/sun/prism/Image.getHeight:()I
      12: invokevirtual #34                 // Method update:(Lcom/sun/prism/Image;IIII)V
      15: return

  public void update(com.sun.prism.Image, int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iconst_0
       9: invokevirtual #35                 // Method update:(Lcom/sun/prism/Image;IIIIZ)V
      12: return

  public void update(com.sun.prism.Image, int, int, int, int, boolean);
    Code:
       0: getstatic     #36                 // Field com/sun/prism/impl/PrismSettings.debug:Z
       3: ifeq          36
       6: getstatic     #37                 // Field java/lang/System.out:Ljava/io/PrintStream;
       9: aload_1
      10: invokevirtual #38                 // Method com/sun/prism/Image.getBytesPerPixelUnit:()I
      13: invokedynamic #39,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      18: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      21: getstatic     #37                 // Field java/lang/System.out:Ljava/io/PrintStream;
      24: aload_1
      25: invokevirtual #41                 // Method com/sun/prism/Image.getScanlineStride:()I
      28: invokedynamic #42,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      36: aload_0
      37: aload_1
      38: invokevirtual #43                 // Method com/sun/prism/Image.getPixelBuffer:()Ljava/nio/Buffer;
      41: aload_1
      42: invokevirtual #44                 // Method com/sun/prism/Image.getPixelFormat:()Lcom/sun/prism/PixelFormat;
      45: iload_2
      46: iload_3
      47: aload_1
      48: invokevirtual #45                 // Method com/sun/prism/Image.getMinX:()I
      51: aload_1
      52: invokevirtual #46                 // Method com/sun/prism/Image.getMinY:()I
      55: iload         4
      57: iload         5
      59: aload_1
      60: invokevirtual #41                 // Method com/sun/prism/Image.getScanlineStride:()I
      63: iload         6
      65: invokevirtual #47                 // Method update:(Ljava/nio/Buffer;Lcom/sun/prism/PixelFormat;IIIIIIIZ)V
      68: return

  public com.sun.prism.Texture$WrapMode getWrapMode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
       4: areturn

  public boolean getUseMipmap();
    Code:
       0: iconst_0
       1: ireturn

  public com.sun.prism.Texture getSharedTexture(com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method assertLocked:()V
       4: aload_0
       5: getfield      #10                 // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
       8: aload_1
       9: if_acmpne     18
      12: aload_0
      13: invokevirtual #15                 // Method lock:()V
      16: aload_0
      17: areturn
      18: getstatic     #48                 // Field com/sun/prism/sw/SWTexture$1.$SwitchMap$com$sun$prism$Texture$WrapMode:[I
      21: aload_1
      22: invokevirtual #49                 // Method com/sun/prism/Texture$WrapMode.ordinal:()I
      25: iaload
      26: lookupswitch  { // 2
                     1: 52
                     2: 64
               default: 76
          }
      52: aload_0
      53: getfield      #10                 // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      56: getstatic     #50                 // Field com/sun/prism/Texture$WrapMode.CLAMP_TO_EDGE:Lcom/sun/prism/Texture$WrapMode;
      59: if_acmpeq     78
      62: aconst_null
      63: areturn
      64: aload_0
      65: getfield      #10                 // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      68: getstatic     #51                 // Field com/sun/prism/Texture$WrapMode.REPEAT:Lcom/sun/prism/Texture$WrapMode;
      71: if_acmpeq     78
      74: aconst_null
      75: areturn
      76: aconst_null
      77: areturn
      78: aload_0
      79: aload_1
      80: invokevirtual #52                 // Method createSharedLockedTexture:(Lcom/sun/prism/Texture$WrapMode;)Lcom/sun/prism/Texture;
      83: areturn

  public boolean getLinearFiltering();
    Code:
       0: iconst_0
       1: ireturn

  public void setLinearFiltering(boolean);
    Code:
       0: return

  void allocate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allocated:Z
       4: ifeq          8
       7: return
       8: getstatic     #36                 // Field com/sun/prism/impl/PrismSettings.debug:Z
      11: ifeq          34
      14: getstatic     #37                 // Field java/lang/System.out:Ljava/io/PrintStream;
      17: aload_0
      18: aload_0
      19: getfield      #11                 // Field physicalWidth:I
      22: aload_0
      23: getfield      #12                 // Field physicalHeight:I
      26: invokedynamic #53,  0             // InvokeDynamic #2:makeConcatWithConstants:(Lcom/sun/prism/sw/SWTexture;II)Ljava/lang/String;
      31: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      34: aload_0
      35: invokevirtual #54                 // Method allocateBuffer:()V
      38: aload_0
      39: iconst_1
      40: putfield      #8                  // Field allocated:Z
      43: return

  abstract void allocateBuffer();

  abstract com.sun.prism.Texture createSharedLockedTexture(com.sun.prism.Texture$WrapMode);
}
