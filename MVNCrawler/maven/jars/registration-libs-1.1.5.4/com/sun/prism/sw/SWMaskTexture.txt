Compiled from "SWMaskTexture.java"
public class com.sun.prism.sw.SWMaskTexture extends com.sun.prism.sw.SWTexture {
  private byte[] data;

  com.sun.prism.sw.SWMaskTexture(com.sun.prism.sw.SWResourceFactory, com.sun.prism.Texture$WrapMode, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #1                  // Method com/sun/prism/sw/SWTexture."<init>":(Lcom/sun/prism/sw/SWResourceFactory;Lcom/sun/prism/Texture$WrapMode;II)V
       9: return

  com.sun.prism.sw.SWMaskTexture(com.sun.prism.sw.SWMaskTexture, com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method com/sun/prism/sw/SWTexture."<init>":(Lcom/sun/prism/sw/SWTexture;Lcom/sun/prism/Texture$WrapMode;)V
       6: aload_0
       7: aload_1
       8: getfield      #3                  // Field data:[B
      11: putfield      #3                  // Field data:[B
      14: return

  byte[] getDataNoClone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:[B
       4: areturn

  public com.sun.prism.PixelFormat getPixelFormat();
    Code:
       0: getstatic     #4                  // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
       3: areturn

  public void update(java.nio.Buffer, com.sun.prism.PixelFormat, int, int, int, int, int, int, int, boolean);
    Code:
       0: getstatic     #5                  // Field com/sun/prism/impl/PrismSettings.debug:Z
       3: ifeq          54
       6: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       9: aload_2
      10: aload_1
      11: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;)Ljava/lang/String;
      16: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      19: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
      22: iload_3
      23: iload         4
      25: invokedynamic #9,  0              // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;
      30: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      33: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
      36: iload         5
      38: iload         6
      40: iload         7
      42: iload         8
      44: iload         9
      46: invokedynamic #10,  0             // InvokeDynamic #2:makeConcatWithConstants:(IIIII)Ljava/lang/String;
      51: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      54: aload_2
      55: getstatic     #4                  // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
      58: if_acmpeq     71
      61: new           #11                 // class java/lang/IllegalArgumentException
      64: dup
      65: ldc           #12                 // String SWMaskTexture supports BYTE_ALPHA format only.
      67: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: iload         7
      74: iload         8
      76: invokevirtual #14                 // Method checkAllocation:(II)V
      79: aload_0
      80: iload         7
      82: putfield      #15                 // Field physicalWidth:I
      85: aload_0
      86: iload         8
      88: putfield      #16                 // Field physicalHeight:I
      91: aload_0
      92: invokevirtual #17                 // Method allocate:()V
      95: aload_1
      96: checkcast     #18                 // class java/nio/ByteBuffer
      99: astore        11
     101: iconst_0
     102: istore        12
     104: iload         12
     106: iload         8
     108: if_icmpge     153
     111: aload         11
     113: iload         6
     115: iload         12
     117: iadd
     118: iload         9
     120: imul
     121: iload         5
     123: iadd
     124: invokevirtual #19                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     127: pop
     128: aload         11
     130: aload_0
     131: getfield      #3                  // Field data:[B
     134: iload         12
     136: aload_0
     137: getfield      #15                 // Field physicalWidth:I
     140: imul
     141: iload         7
     143: invokevirtual #20                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     146: pop
     147: iinc          12, 1
     150: goto          104
     153: return

  public void update(com.sun.prism.MediaFrame, boolean);
    Code:
       0: new           #21                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #22                 // String update6:unimp
       6: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  void checkAllocation(int, int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field allocated:Z
       4: ifeq          30
       7: iload_1
       8: iload_2
       9: imul
      10: istore_3
      11: iload_3
      12: aload_0
      13: getfield      #3                  // Field data:[B
      16: arraylength
      17: if_icmple     30
      20: new           #11                 // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #25                 // String SRCW * SRCH exceeds buffer length
      26: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: return

  void allocateBuffer();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #15                 // Field physicalWidth:I
       5: aload_0
       6: getfield      #16                 // Field physicalHeight:I
       9: imul
      10: newarray       byte
      12: putfield      #3                  // Field data:[B
      15: return

  com.sun.prism.Texture createSharedLockedTexture(com.sun.prism.Texture$WrapMode);
    Code:
       0: new           #26                 // class com/sun/prism/sw/SWMaskTexture
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #27                 // Method "<init>":(Lcom/sun/prism/sw/SWMaskTexture;Lcom/sun/prism/Texture$WrapMode;)V
       9: areturn

  public void setLinearFiltering(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #28                 // Method com/sun/prism/sw/SWTexture.setLinearFiltering:(Z)V
       5: return

  public boolean getLinearFiltering();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/sun/prism/sw/SWTexture.getLinearFiltering:()Z
       4: ireturn

  public com.sun.prism.Texture getSharedTexture(com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method com/sun/prism/sw/SWTexture.getSharedTexture:(Lcom/sun/prism/Texture$WrapMode;)Lcom/sun/prism/Texture;
       5: areturn

  public boolean getUseMipmap();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method com/sun/prism/sw/SWTexture.getUseMipmap:()Z
       4: ireturn

  public com.sun.prism.Texture$WrapMode getWrapMode();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method com/sun/prism/sw/SWTexture.getWrapMode:()Lcom/sun/prism/Texture$WrapMode;
       4: areturn

  public void update(com.sun.prism.Image, int, int, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: invokespecial #33                 // Method com/sun/prism/sw/SWTexture.update:(Lcom/sun/prism/Image;IIIIZ)V
      13: return

  public void update(com.sun.prism.Image, int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokespecial #34                 // Method com/sun/prism/sw/SWTexture.update:(Lcom/sun/prism/Image;IIII)V
      11: return

  public void update(com.sun.prism.Image, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #35                 // Method com/sun/prism/sw/SWTexture.update:(Lcom/sun/prism/Image;II)V
       7: return

  public void update(com.sun.prism.Image);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method com/sun/prism/sw/SWTexture.update:(Lcom/sun/prism/Image;)V
       5: return

  public void setLastImageSerial(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #37                 // Method com/sun/prism/sw/SWTexture.setLastImageSerial:(I)V
       5: return

  public int getLastImageSerial();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method com/sun/prism/sw/SWTexture.getLastImageSerial:()I
       4: ireturn

  public int getMaxContentHeight();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method com/sun/prism/sw/SWTexture.getMaxContentHeight:()I
       4: ireturn

  public int getMaxContentWidth();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method com/sun/prism/sw/SWTexture.getMaxContentWidth:()I
       4: ireturn

  public void setContentHeight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method com/sun/prism/sw/SWTexture.setContentHeight:(I)V
       5: return

  public int getContentHeight();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method com/sun/prism/sw/SWTexture.getContentHeight:()I
       4: ireturn

  public void setContentWidth(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #43                 // Method com/sun/prism/sw/SWTexture.setContentWidth:(I)V
       5: return

  public int getContentWidth();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method com/sun/prism/sw/SWTexture.getContentWidth:()I
       4: ireturn

  public int getContentY();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method com/sun/prism/sw/SWTexture.getContentY:()I
       4: ireturn

  public int getContentX();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method com/sun/prism/sw/SWTexture.getContentX:()I
       4: ireturn

  public int getPhysicalHeight();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method com/sun/prism/sw/SWTexture.getPhysicalHeight:()I
       4: ireturn

  public int getPhysicalWidth();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method com/sun/prism/sw/SWTexture.getPhysicalWidth:()I
       4: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method com/sun/prism/sw/SWTexture.dispose:()V
       4: return

  public boolean isSurfaceLost();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method com/sun/prism/sw/SWTexture.isSurfaceLost:()Z
       4: ireturn

  public void contentsNotUseful();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method com/sun/prism/sw/SWTexture.contentsNotUseful:()V
       4: return

  public void contentsUseful();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method com/sun/prism/sw/SWTexture.contentsUseful:()V
       4: return

  public void makePermanent();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method com/sun/prism/sw/SWTexture.makePermanent:()V
       4: return

  public void assertLocked();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method com/sun/prism/sw/SWTexture.assertLocked:()V
       4: return

  public int getLockCount();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method com/sun/prism/sw/SWTexture.getLockCount:()I
       4: ireturn

  public boolean isLocked();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method com/sun/prism/sw/SWTexture.isLocked:()Z
       4: ireturn

  public void unlock();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method com/sun/prism/sw/SWTexture.unlock:()V
       4: return

  public void lock();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method com/sun/prism/sw/SWTexture.lock:()V
       4: return
}
