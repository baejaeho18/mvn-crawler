Compiled from "BaseTexture.java"
public abstract class com.sun.prism.impl.BaseTexture<T extends com.sun.prism.impl.ManagedResource> implements com.sun.prism.Texture {
  protected final T resource;

  private final com.sun.prism.PixelFormat format;

  private final int physicalWidth;

  private final int physicalHeight;

  private final int contentX;

  private final int contentY;

  protected int contentWidth;

  protected int contentHeight;

  private final int maxContentWidth;

  private final int maxContentHeight;

  private final com.sun.prism.Texture$WrapMode wrapMode;

  private final boolean useMipmap;

  private boolean linearFiltering;

  private int lastImageSerial;

  protected com.sun.prism.impl.BaseTexture(com.sun.prism.impl.BaseTexture<T>, com.sun.prism.Texture$WrapMode, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field linearFiltering:Z
       9: aload_0
      10: aload_1
      11: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
      14: putfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
      17: aload_0
      18: aload_1
      19: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
      22: putfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
      25: aload_0
      26: aload_2
      27: putfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      30: aload_0
      31: aload_1
      32: getfield      #6                  // Field physicalWidth:I
      35: putfield      #6                  // Field physicalWidth:I
      38: aload_0
      39: aload_1
      40: getfield      #7                  // Field physicalHeight:I
      43: putfield      #7                  // Field physicalHeight:I
      46: aload_0
      47: aload_1
      48: getfield      #8                  // Field contentX:I
      51: putfield      #8                  // Field contentX:I
      54: aload_0
      55: aload_1
      56: getfield      #9                  // Field contentY:I
      59: putfield      #9                  // Field contentY:I
      62: aload_0
      63: aload_1
      64: getfield      #10                 // Field contentWidth:I
      67: putfield      #10                 // Field contentWidth:I
      70: aload_0
      71: aload_1
      72: getfield      #11                 // Field contentHeight:I
      75: putfield      #11                 // Field contentHeight:I
      78: aload_0
      79: aload_1
      80: getfield      #12                 // Field maxContentWidth:I
      83: putfield      #12                 // Field maxContentWidth:I
      86: aload_0
      87: aload_1
      88: getfield      #13                 // Field maxContentHeight:I
      91: putfield      #13                 // Field maxContentHeight:I
      94: aload_0
      95: iload_3
      96: putfield      #14                 // Field useMipmap:Z
      99: return

  protected com.sun.prism.impl.BaseTexture(T, com.sun.prism.PixelFormat, com.sun.prism.Texture$WrapMode, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: iconst_0
       9: iconst_0
      10: iload         4
      12: iload         5
      14: iconst_0
      15: invokespecial #15                 // Method "<init>":(Lcom/sun/prism/impl/ManagedResource;Lcom/sun/prism/PixelFormat;Lcom/sun/prism/Texture$WrapMode;IIIIIIZ)V
      18: return

  protected com.sun.prism.impl.BaseTexture(T, com.sun.prism.PixelFormat, com.sun.prism.Texture$WrapMode, int, int, int, int, int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field linearFiltering:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      24: aload_0
      25: iload         4
      27: putfield      #6                  // Field physicalWidth:I
      30: aload_0
      31: iload         5
      33: putfield      #7                  // Field physicalHeight:I
      36: aload_0
      37: iload         6
      39: putfield      #8                  // Field contentX:I
      42: aload_0
      43: iload         7
      45: putfield      #9                  // Field contentY:I
      48: aload_0
      49: iload         8
      51: putfield      #10                 // Field contentWidth:I
      54: aload_0
      55: iload         9
      57: putfield      #11                 // Field contentHeight:I
      60: aload_0
      61: iload         4
      63: putfield      #12                 // Field maxContentWidth:I
      66: aload_0
      67: iload         5
      69: putfield      #13                 // Field maxContentHeight:I
      72: aload_0
      73: iload         10
      75: putfield      #14                 // Field useMipmap:Z
      78: return

  protected com.sun.prism.impl.BaseTexture(T, com.sun.prism.PixelFormat, com.sun.prism.Texture$WrapMode, int, int, int, int, int, int, int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field linearFiltering:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      24: aload_0
      25: iload         4
      27: putfield      #6                  // Field physicalWidth:I
      30: aload_0
      31: iload         5
      33: putfield      #7                  // Field physicalHeight:I
      36: aload_0
      37: iload         6
      39: putfield      #8                  // Field contentX:I
      42: aload_0
      43: iload         7
      45: putfield      #9                  // Field contentY:I
      48: aload_0
      49: iload         8
      51: putfield      #10                 // Field contentWidth:I
      54: aload_0
      55: iload         9
      57: putfield      #11                 // Field contentHeight:I
      60: aload_0
      61: iload         10
      63: putfield      #12                 // Field maxContentWidth:I
      66: aload_0
      67: iload         11
      69: putfield      #13                 // Field maxContentHeight:I
      72: aload_0
      73: iload         12
      75: putfield      #14                 // Field useMipmap:Z
      78: return

  public final com.sun.prism.PixelFormat getPixelFormat();
    Code:
       0: aload_0
       1: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
       4: areturn

  public final int getPhysicalWidth();
    Code:
       0: aload_0
       1: getfield      #6                  // Field physicalWidth:I
       4: ireturn

  public final int getPhysicalHeight();
    Code:
       0: aload_0
       1: getfield      #7                  // Field physicalHeight:I
       4: ireturn

  public final int getContentX();
    Code:
       0: aload_0
       1: getfield      #8                  // Field contentX:I
       4: ireturn

  public final int getContentY();
    Code:
       0: aload_0
       1: getfield      #9                  // Field contentY:I
       4: ireturn

  public final int getContentWidth();
    Code:
       0: aload_0
       1: getfield      #10                 // Field contentWidth:I
       4: ireturn

  public final int getContentHeight();
    Code:
       0: aload_0
       1: getfield      #11                 // Field contentHeight:I
       4: ireturn

  public int getMaxContentWidth();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxContentWidth:I
       4: ireturn

  public int getMaxContentHeight();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxContentHeight:I
       4: ireturn

  public void setContentWidth(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #12                 // Field maxContentWidth:I
       5: if_icmple     18
       8: new           #16                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #17                 // String ContentWidth must be less than or equal to maxContentWidth
      14: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #10                 // Field contentWidth:I
      23: return

  public void setContentHeight(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #13                 // Field maxContentHeight:I
       5: if_icmple     18
       8: new           #16                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #19                 // String ContentWidth must be less than or equal to maxContentHeight
      14: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #11                 // Field contentHeight:I
      23: return

  public final com.sun.prism.Texture$WrapMode getWrapMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
       4: areturn

  public boolean getUseMipmap();
    Code:
       0: aload_0
       1: getfield      #14                 // Field useMipmap:Z
       4: ireturn

  public com.sun.prism.Texture getSharedTexture(com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method assertLocked:()V
       4: aload_0
       5: getfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
       8: aload_1
       9: if_acmpne     18
      12: aload_0
      13: invokevirtual #21                 // Method lock:()V
      16: aload_0
      17: areturn
      18: getstatic     #22                 // Field com/sun/prism/impl/BaseTexture$1.$SwitchMap$com$sun$prism$Texture$WrapMode:[I
      21: aload_1
      22: invokevirtual #23                 // Method com/sun/prism/Texture$WrapMode.ordinal:()I
      25: iaload
      26: lookupswitch  { // 2
                     1: 52
                     2: 64
               default: 76
          }
      52: aload_0
      53: getfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      56: getstatic     #24                 // Field com/sun/prism/Texture$WrapMode.CLAMP_TO_EDGE:Lcom/sun/prism/Texture$WrapMode;
      59: if_acmpeq     78
      62: aconst_null
      63: areturn
      64: aload_0
      65: getfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      68: getstatic     #25                 // Field com/sun/prism/Texture$WrapMode.REPEAT:Lcom/sun/prism/Texture$WrapMode;
      71: if_acmpeq     78
      74: aconst_null
      75: areturn
      76: aconst_null
      77: areturn
      78: aload_0
      79: aload_1
      80: invokevirtual #26                 // Method createSharedTexture:(Lcom/sun/prism/Texture$WrapMode;)Lcom/sun/prism/Texture;
      83: astore_2
      84: aload_2
      85: invokeinterface #27,  1           // InterfaceMethod com/sun/prism/Texture.lock:()V
      90: aload_2
      91: areturn

  protected abstract com.sun.prism.Texture createSharedTexture(com.sun.prism.Texture$WrapMode);

  public final boolean getLinearFiltering();
    Code:
       0: aload_0
       1: getfield      #2                  // Field linearFiltering:Z
       4: ireturn

  public void setLinearFiltering(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field linearFiltering:Z
       5: return

  public final int getLastImageSerial();
    Code:
       0: aload_0
       1: getfield      #28                 // Field lastImageSerial:I
       4: ireturn

  public final void setLastImageSerial(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field lastImageSerial:I
       5: return

  public final void lock();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #29                 // Method com/sun/prism/impl/ManagedResource.lock:()Ljava/lang/Object;
       7: pop
       8: return

  public final boolean isLocked();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #30                 // Method com/sun/prism/impl/ManagedResource.isLocked:()Z
       7: ireturn

  public final int getLockCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #31                 // Method com/sun/prism/impl/ManagedResource.getLockCount:()I
       7: ireturn

  public final void assertLocked();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #32                 // Method com/sun/prism/impl/ManagedResource.assertLocked:()V
       7: return

  public final void unlock();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #33                 // Method com/sun/prism/impl/ManagedResource.unlock:()V
       7: return

  public final void makePermanent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #34                 // Method com/sun/prism/impl/ManagedResource.makePermanent:()V
       7: return

  public final void contentsUseful();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #35                 // Method com/sun/prism/impl/ManagedResource.contentsUseful:()V
       7: return

  public final void contentsNotUseful();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #36                 // Method com/sun/prism/impl/ManagedResource.contentsNotUseful:()V
       7: return

  public final boolean isSurfaceLost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #37                 // Method com/sun/prism/impl/ManagedResource.isValid:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final void dispose();
    Code:
       0: aload_0
       1: getfield      #3                  // Field resource:Lcom/sun/prism/impl/ManagedResource;
       4: invokevirtual #38                 // Method com/sun/prism/impl/ManagedResource.dispose:()V
       7: return

  public void update(com.sun.prism.Image);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #39                 // Method update:(Lcom/sun/prism/Image;II)V
       7: return

  public void update(com.sun.prism.Image, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_1
       5: invokevirtual #40                 // Method com/sun/prism/Image.getWidth:()I
       8: aload_1
       9: invokevirtual #41                 // Method com/sun/prism/Image.getHeight:()I
      12: invokevirtual #42                 // Method update:(Lcom/sun/prism/Image;IIII)V
      15: return

  public void update(com.sun.prism.Image, int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iconst_0
       9: invokevirtual #43                 // Method update:(Lcom/sun/prism/Image;IIIIZ)V
      12: return

  public void update(com.sun.prism.Image, int, int, int, int, boolean);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method com/sun/prism/Image.getPixelBuffer:()Ljava/nio/Buffer;
       4: astore        7
       6: aload         7
       8: invokevirtual #45                 // Method java/nio/Buffer.position:()I
      11: istore        8
      13: aload_0
      14: aload         7
      16: aload_1
      17: invokevirtual #46                 // Method com/sun/prism/Image.getPixelFormat:()Lcom/sun/prism/PixelFormat;
      20: iload_2
      21: iload_3
      22: aload_1
      23: invokevirtual #47                 // Method com/sun/prism/Image.getMinX:()I
      26: aload_1
      27: invokevirtual #48                 // Method com/sun/prism/Image.getMinY:()I
      30: iload         4
      32: iload         5
      34: aload_1
      35: invokevirtual #49                 // Method com/sun/prism/Image.getScanlineStride:()I
      38: iload         6
      40: invokevirtual #50                 // Method update:(Ljava/nio/Buffer;Lcom/sun/prism/PixelFormat;IIIIIIIZ)V
      43: aload         7
      45: iload         8
      47: invokevirtual #51                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      50: pop
      51: return

  protected void checkUpdateParams(java.nio.Buffer, com.sun.prism.PixelFormat, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
       4: getstatic     #52                 // Field com/sun/prism/PixelFormat.MULTI_YCbCr_420:Lcom/sun/prism/PixelFormat;
       7: if_acmpne     20
      10: new           #16                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #53                 // String MULTI_YCbCr_420 requires multitexturing
      16: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: ifnonnull     34
      24: new           #16                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #54                 // String Pixel buffer must be non-null
      30: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_2
      35: aload_0
      36: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
      39: if_acmpeq     60
      42: new           #16                 // class java/lang/IllegalArgumentException
      45: dup
      46: aload_2
      47: aload_0
      48: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
      51: invokedynamic #55,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lcom/sun/prism/PixelFormat;Lcom/sun/prism/PixelFormat;)Ljava/lang/String;
      56: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: iload_3
      61: iflt          69
      64: iload         4
      66: ifge          85
      69: new           #16                 // class java/lang/IllegalArgumentException
      72: dup
      73: iload_3
      74: iload         4
      76: invokedynamic #56,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;
      81: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: iload         5
      87: iflt          95
      90: iload         6
      92: ifge          112
      95: new           #16                 // class java/lang/IllegalArgumentException
      98: dup
      99: iload         5
     101: iload         6
     103: invokedynamic #57,  0             // InvokeDynamic #2:makeConcatWithConstants:(II)Ljava/lang/String;
     108: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: iload         7
     114: ifle          122
     117: iload         8
     119: ifgt          139
     122: new           #16                 // class java/lang/IllegalArgumentException
     125: dup
     126: iload         7
     128: iload         8
     130: invokedynamic #58,  0             // InvokeDynamic #3:makeConcatWithConstants:(II)Ljava/lang/String;
     135: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: aload_2
     140: invokevirtual #59                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
     143: istore        10
     145: iload         9
     147: iload         10
     149: irem
     150: ifeq          170
     153: new           #16                 // class java/lang/IllegalArgumentException
     156: dup
     157: iload         9
     159: iload         10
     161: invokedynamic #60,  0             // InvokeDynamic #4:makeConcatWithConstants:(II)Ljava/lang/String;
     166: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: iload         7
     172: iload         9
     174: iload         10
     176: idiv
     177: if_icmple     200
     180: new           #16                 // class java/lang/IllegalArgumentException
     183: dup
     184: iload         7
     186: iload         9
     188: iload         10
     190: idiv
     191: invokedynamic #61,  0             // InvokeDynamic #5:makeConcatWithConstants:(II)Ljava/lang/String;
     196: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     199: athrow
     200: iload_3
     201: iload         7
     203: iadd
     204: aload_0
     205: getfield      #10                 // Field contentWidth:I
     208: if_icmpgt     223
     211: iload         4
     213: iload         8
     215: iadd
     216: aload_0
     217: getfield      #11                 // Field contentHeight:I
     220: if_icmple     251
     223: new           #16                 // class java/lang/IllegalArgumentException
     226: dup
     227: iload_3
     228: iload         4
     230: iload         7
     232: iload         8
     234: aload_0
     235: getfield      #10                 // Field contentWidth:I
     238: aload_0
     239: getfield      #11                 // Field contentHeight:I
     242: invokedynamic #62,  0             // InvokeDynamic #6:makeConcatWithConstants:(IIIIII)Ljava/lang/String;
     247: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     250: athrow
     251: iload         5
     253: iload         10
     255: imul
     256: iload         6
     258: iload         9
     260: imul
     261: iadd
     262: iload         8
     264: iconst_1
     265: isub
     266: iload         9
     268: imul
     269: iadd
     270: iload         7
     272: iload         10
     274: imul
     275: iadd
     276: istore        11
     278: iload         11
     280: aload_0
     281: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
     284: invokevirtual #63                 // Method com/sun/prism/PixelFormat.getDataType:()Lcom/sun/prism/PixelFormat$DataType;
     287: invokevirtual #64                 // Method com/sun/prism/PixelFormat$DataType.getSizeInBytes:()I
     290: idiv
     291: istore        12
     293: iload         12
     295: aload_1
     296: invokevirtual #65                 // Method java/nio/Buffer.remaining:()I
     299: if_icmple     321
     302: new           #16                 // class java/lang/IllegalArgumentException
     305: dup
     306: iload         12
     308: aload_1
     309: invokevirtual #65                 // Method java/nio/Buffer.remaining:()I
     312: invokedynamic #66,  0             // InvokeDynamic #7:makeConcatWithConstants:(II)Ljava/lang/String;
     317: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     320: athrow
     321: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: aload_0
       5: getfield      #4                  // Field format:Lcom/sun/prism/PixelFormat;
       8: aload_0
       9: getfield      #6                  // Field physicalWidth:I
      12: aload_0
      13: getfield      #7                  // Field physicalHeight:I
      16: aload_0
      17: getfield      #8                  // Field contentX:I
      20: aload_0
      21: getfield      #9                  // Field contentY:I
      24: aload_0
      25: getfield      #10                 // Field contentWidth:I
      28: aload_0
      29: getfield      #11                 // Field contentHeight:I
      32: aload_0
      33: getfield      #5                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      36: aload_0
      37: getfield      #2                  // Field linearFiltering:Z
      40: invokedynamic #68,  0             // InvokeDynamic #8:makeConcatWithConstants:(Ljava/lang/String;Lcom/sun/prism/PixelFormat;IIIIIILcom/sun/prism/Texture$WrapMode;Z)Ljava/lang/String;
      45: areturn
}
