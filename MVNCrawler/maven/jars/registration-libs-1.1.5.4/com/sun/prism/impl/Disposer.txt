Compiled from "Disposer.java"
public class com.sun.prism.impl.Disposer {
  private static com.sun.prism.impl.Disposer disposerInstance;

  private static final int WEAK;

  private static final int PHANTOM;

  private static final int SOFT;

  private static int refType;

  private final java.lang.ref.ReferenceQueue queue;

  private final java.util.Hashtable records;

  private final java.util.LinkedList<com.sun.prism.impl.Disposer$Record> disposalQueue;

  private com.sun.prism.impl.Disposer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #5                  // class java/util/Hashtable
      19: dup
      20: invokespecial #6                  // Method java/util/Hashtable."<init>":()V
      23: putfield      #7                  // Field records:Ljava/util/Hashtable;
      26: aload_0
      27: new           #8                  // class java/util/LinkedList
      30: dup
      31: invokespecial #9                  // Method java/util/LinkedList."<init>":()V
      34: putfield      #10                 // Field disposalQueue:Ljava/util/LinkedList;
      37: return

  public static void addRecord(java.lang.Object, com.sun.prism.impl.Disposer$Record);
    Code:
       0: getstatic     #11                 // Field disposerInstance:Lcom/sun/prism/impl/Disposer;
       3: aload_0
       4: aload_1
       5: invokespecial #12                 // Method add:(Ljava/lang/Object;Lcom/sun/prism/impl/Disposer$Record;)V
       8: return

  public static void disposeRecord(com.sun.prism.impl.Disposer$Record);
    Code:
       0: getstatic     #11                 // Field disposerInstance:Lcom/sun/prism/impl/Disposer;
       3: aload_0
       4: invokespecial #13                 // Method addToDisposalQueue:(Lcom/sun/prism/impl/Disposer$Record;)V
       7: return

  public static void cleanUp();
    Code:
       0: getstatic     #11                 // Field disposerInstance:Lcom/sun/prism/impl/Disposer;
       3: invokespecial #14                 // Method disposeUnreachables:()V
       6: getstatic     #11                 // Field disposerInstance:Lcom/sun/prism/impl/Disposer;
       9: invokespecial #15                 // Method processDisposalQueue:()V
      12: return

  private synchronized void add(java.lang.Object, com.sun.prism.impl.Disposer$Record);
    Code:
       0: aload_1
       1: instanceof    #16                 // class com/sun/prism/impl/Disposer$Target
       4: ifeq          17
       7: aload_1
       8: checkcast     #16                 // class com/sun/prism/impl/Disposer$Target
      11: invokeinterface #17,  1           // InterfaceMethod com/sun/prism/impl/Disposer$Target.getDisposerReferent:()Ljava/lang/Object;
      16: astore_1
      17: getstatic     #18                 // Field refType:I
      20: iconst_1
      21: if_icmpne     40
      24: new           #20                 // class java/lang/ref/PhantomReference
      27: dup
      28: aload_1
      29: aload_0
      30: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      33: invokespecial #21                 // Method java/lang/ref/PhantomReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      36: astore_3
      37: goto          76
      40: getstatic     #18                 // Field refType:I
      43: iconst_2
      44: if_icmpne     63
      47: new           #22                 // class java/lang/ref/SoftReference
      50: dup
      51: aload_1
      52: aload_0
      53: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      56: invokespecial #23                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      59: astore_3
      60: goto          76
      63: new           #24                 // class java/lang/ref/WeakReference
      66: dup
      67: aload_1
      68: aload_0
      69: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      72: invokespecial #25                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      75: astore_3
      76: aload_0
      77: getfield      #7                  // Field records:Ljava/util/Hashtable;
      80: aload_3
      81: aload_2
      82: invokevirtual #26                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: return

  private synchronized void addToDisposalQueue(com.sun.prism.impl.Disposer$Record);
    Code:
       0: aload_0
       1: getfield      #10                 // Field disposalQueue:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #27                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  private synchronized void disposeUnreachables();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #28                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: dup
       8: astore_1
       9: ifnull        64
      12: aload_1
      13: checkcast     #29                 // class java/lang/ref/Reference
      16: invokevirtual #30                 // Method java/lang/ref/Reference.clear:()V
      19: aload_0
      20: getfield      #7                  // Field records:Ljava/util/Hashtable;
      23: aload_1
      24: invokevirtual #31                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #32                 // class com/sun/prism/impl/Disposer$Record
      30: astore_2
      31: aload_2
      32: invokeinterface #33,  1           // InterfaceMethod com/sun/prism/impl/Disposer$Record.dispose:()V
      37: aconst_null
      38: astore_1
      39: aconst_null
      40: astore_2
      41: goto          0
      44: astore_2
      45: getstatic     #35                 // Field java/lang/System.out:Ljava/io/PrintStream;
      48: aload_2
      49: invokedynamic #36,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Exception;)Ljava/lang/String;
      54: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      57: aload_2
      58: invokevirtual #38                 // Method java/lang/Exception.printStackTrace:()V
      61: goto          0
      64: return
    Exception table:
       from    to  target type
          12    41    44   Class java/lang/Exception

  private synchronized void processDisposalQueue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field disposalQueue:Ljava/util/LinkedList;
       4: invokevirtual #39                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          28
      10: aload_0
      11: getfield      #10                 // Field disposalQueue:Ljava/util/LinkedList;
      14: invokevirtual #40                 // Method java/util/LinkedList.remove:()Ljava/lang/Object;
      17: checkcast     #32                 // class com/sun/prism/impl/Disposer$Record
      20: invokeinterface #33,  1           // InterfaceMethod com/sun/prism/impl/Disposer$Record.dispose:()V
      25: goto          0
      28: return

  static {};
    Code:
       0: iconst_1
       1: putstatic     #18                 // Field refType:I
       4: getstatic     #41                 // Field com/sun/prism/impl/PrismSettings.refType:Ljava/lang/String;
       7: astore_0
       8: aload_0
       9: ifnull        90
      12: aload_0
      13: ldc           #42                 // String weak
      15: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          42
      21: iconst_0
      22: putstatic     #18                 // Field refType:I
      25: getstatic     #44                 // Field com/sun/prism/impl/PrismSettings.verbose:Z
      28: ifeq          90
      31: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
      34: ldc           #46                 // String Using WEAK refs
      36: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      39: goto          90
      42: aload_0
      43: ldc           #47                 // String soft
      45: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          72
      51: iconst_2
      52: putstatic     #18                 // Field refType:I
      55: getstatic     #44                 // Field com/sun/prism/impl/PrismSettings.verbose:Z
      58: ifeq          90
      61: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
      64: ldc           #48                 // String Using SOFT refs
      66: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      69: goto          90
      72: iconst_1
      73: putstatic     #18                 // Field refType:I
      76: getstatic     #44                 // Field com/sun/prism/impl/PrismSettings.verbose:Z
      79: ifeq          90
      82: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
      85: ldc           #49                 // String Using PHANTOM refs
      87: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      90: new           #19                 // class com/sun/prism/impl/Disposer
      93: dup
      94: invokespecial #50                 // Method "<init>":()V
      97: putstatic     #11                 // Field disposerInstance:Lcom/sun/prism/impl/Disposer;
     100: return
}
