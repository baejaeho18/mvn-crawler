Compiled from "MaskData.java"
public class com.sun.prism.impl.shape.MaskData {
  private java.nio.ByteBuffer maskBuffer;

  private int originX;

  private int originY;

  private int width;

  private int height;

  public com.sun.prism.impl.shape.MaskData();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.nio.ByteBuffer getMaskBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maskBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public int getOriginX();
    Code:
       0: aload_0
       1: getfield      #3                  // Field originX:I
       4: ireturn

  public int getOriginY();
    Code:
       0: aload_0
       1: getfield      #4                  // Field originY:I
       4: ireturn

  public int getWidth();
    Code:
       0: aload_0
       1: getfield      #5                  // Field width:I
       4: ireturn

  public int getHeight();
    Code:
       0: aload_0
       1: getfield      #6                  // Field height:I
       4: ireturn

  public void uploadToTexture(com.sun.prism.Texture, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field width:I
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod com/sun/prism/Texture.getPixelFormat:()Lcom/sun/prism/PixelFormat;
      10: invokevirtual #8                  // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
      13: imul
      14: istore        5
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field maskBuffer:Ljava/nio/ByteBuffer;
      21: aload_1
      22: invokeinterface #7,  1            // InterfaceMethod com/sun/prism/Texture.getPixelFormat:()Lcom/sun/prism/PixelFormat;
      27: iload_2
      28: iload_3
      29: iconst_0
      30: iconst_0
      31: aload_0
      32: getfield      #5                  // Field width:I
      35: aload_0
      36: getfield      #6                  // Field height:I
      39: iload         5
      41: iload         4
      43: invokeinterface #9,  11           // InterfaceMethod com/sun/prism/Texture.update:(Ljava/nio/Buffer;Lcom/sun/prism/PixelFormat;IIIIIIIZ)V
      48: return

  public void update(java.nio.ByteBuffer, int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field maskBuffer:Ljava/nio/ByteBuffer;
       5: aload_0
       6: iload_2
       7: putfield      #3                  // Field originX:I
      10: aload_0
      11: iload_3
      12: putfield      #4                  // Field originY:I
      15: aload_0
      16: iload         4
      18: putfield      #5                  // Field width:I
      21: aload_0
      22: iload         5
      24: putfield      #6                  // Field height:I
      27: return

  public static com.sun.prism.impl.shape.MaskData create(byte[], int, int, int, int);
    Code:
       0: new           #10                 // class com/sun/prism/impl/shape/MaskData
       3: dup
       4: invokespecial #11                 // Method "<init>":()V
       7: astore        5
       9: aload         5
      11: aload_0
      12: invokestatic  #12                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      15: iload_1
      16: iload_2
      17: iload_3
      18: iload         4
      20: invokevirtual #13                 // Method update:(Ljava/nio/ByteBuffer;IIII)V
      23: aload         5
      25: areturn
}
