Compiled from "MultipleGradientContext.java"
abstract class com.sun.prism.impl.paint.MultipleGradientContext {
  protected int cycleMethod;

  protected float a00;

  protected float a01;

  protected float a10;

  protected float a11;

  protected float a02;

  protected float a12;

  protected boolean isSimpleLookup;

  protected int fastGradientArraySize;

  protected int[] gradient;

  private int[][] gradients;

  private float[] normalizedIntervals;

  private float[] fractions;

  private int transparencyTest;

  protected static final int GRADIENT_SIZE;

  protected static final int GRADIENT_SIZE_INDEX;

  private static final int MAX_GRADIENT_ARRAY_SIZE;

  protected com.sun.prism.impl.paint.MultipleGradientContext(com.sun.prism.paint.Gradient, com.sun.javafx.geom.transform.BaseTransform, float[], com.sun.prism.paint.Color[], int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnonnull     18
       8: new           #3                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #4                  // String Transform cannot be null
      14: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: invokevirtual #6                  // Method com/sun/javafx/geom/transform/BaseTransform.createInverse:()Lcom/sun/javafx/geom/transform/BaseTransform;
      22: astore        6
      24: goto          34
      27: astore        7
      29: getstatic     #8                  // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      32: astore        6
      34: aload_0
      35: aload         6
      37: invokevirtual #9                  // Method com/sun/javafx/geom/transform/BaseTransform.getMxx:()D
      40: d2f
      41: putfield      #10                 // Field a00:F
      44: aload_0
      45: aload         6
      47: invokevirtual #11                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyx:()D
      50: d2f
      51: putfield      #12                 // Field a10:F
      54: aload_0
      55: aload         6
      57: invokevirtual #13                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxy:()D
      60: d2f
      61: putfield      #14                 // Field a01:F
      64: aload_0
      65: aload         6
      67: invokevirtual #15                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyy:()D
      70: d2f
      71: putfield      #16                 // Field a11:F
      74: aload_0
      75: aload         6
      77: invokevirtual #17                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxt:()D
      80: d2f
      81: putfield      #18                 // Field a02:F
      84: aload_0
      85: aload         6
      87: invokevirtual #19                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyt:()D
      90: d2f
      91: putfield      #20                 // Field a12:F
      94: aload_0
      95: iload         5
      97: putfield      #21                 // Field cycleMethod:I
     100: aload_0
     101: aload_3
     102: putfield      #22                 // Field fractions:[F
     105: aload_0
     106: aload         4
     108: invokespecial #23                 // Method calculateLookupData:([Lcom/sun/prism/paint/Color;)V
     111: return
    Exception table:
       from    to  target type
          18    24    27   Class com/sun/javafx/geom/transform/NoninvertibleTransformException

  private void calculateLookupData(com.sun.prism.paint.Color[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: aload_0
       4: getfield      #22                 // Field fractions:[F
       7: arraylength
       8: iconst_1
       9: isub
      10: newarray       float
      12: putfield      #24                 // Field normalizedIntervals:[F
      15: iconst_0
      16: istore_3
      17: iload_3
      18: aload_0
      19: getfield      #24                 // Field normalizedIntervals:[F
      22: arraylength
      23: if_icmpge     53
      26: aload_0
      27: getfield      #24                 // Field normalizedIntervals:[F
      30: iload_3
      31: aload_0
      32: getfield      #22                 // Field fractions:[F
      35: iload_3
      36: iconst_1
      37: iadd
      38: faload
      39: aload_0
      40: getfield      #22                 // Field fractions:[F
      43: iload_3
      44: faload
      45: fsub
      46: fastore
      47: iinc          3, 1
      50: goto          17
      53: aload_0
      54: ldc           #25                 // int -16777216
      56: putfield      #26                 // Field transparencyTest:I
      59: aload_0
      60: aload_0
      61: getfield      #24                 // Field normalizedIntervals:[F
      64: arraylength
      65: anewarray     #27                 // class "[I"
      68: putfield      #28                 // Field gradients:[[I
      71: fconst_1
      72: fstore_3
      73: iconst_0
      74: istore        4
      76: iload         4
      78: aload_0
      79: getfield      #24                 // Field normalizedIntervals:[F
      82: arraylength
      83: if_icmpge     116
      86: fload_3
      87: aload_0
      88: getfield      #24                 // Field normalizedIntervals:[F
      91: iload         4
      93: faload
      94: fcmpl
      95: ifle          108
      98: aload_0
      99: getfield      #24                 // Field normalizedIntervals:[F
     102: iload         4
     104: faload
     105: goto          109
     108: fload_3
     109: fstore_3
     110: iinc          4, 1
     113: goto          76
     116: fconst_0
     117: fstore        4
     119: iconst_0
     120: istore        5
     122: iload         5
     124: aload_0
     125: getfield      #24                 // Field normalizedIntervals:[F
     128: arraylength
     129: if_icmpge     163
     132: fload         4
     134: invokestatic  #29                 // Method java/lang/Float.isFinite:(F)Z
     137: ifeq          163
     140: fload         4
     142: aload_0
     143: getfield      #24                 // Field normalizedIntervals:[F
     146: iload         5
     148: faload
     149: fload_3
     150: fdiv
     151: ldc           #30                 // float 256.0f
     153: fmul
     154: fadd
     155: fstore        4
     157: iinc          5, 1
     160: goto          122
     163: fload         4
     165: ldc           #31                 // float 5000.0f
     167: fcmpg
     168: ifgt          180
     171: aload_0
     172: aload_2
     173: fload_3
     174: invokespecial #32                 // Method calculateSingleArrayGradient:([Lcom/sun/prism/paint/Color;F)V
     177: goto          185
     180: aload_0
     181: aload_2
     182: invokespecial #33                 // Method calculateMultipleArrayGradient:([Lcom/sun/prism/paint/Color;)V
     185: return

  private void calculateSingleArrayGradient(com.sun.prism.paint.Color[], float);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field isSimpleLookup:Z
       5: iconst_1
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: aload_0
      14: getfield      #28                 // Field gradients:[[I
      17: arraylength
      18: if_icmpge     114
      21: aload_0
      22: getfield      #24                 // Field normalizedIntervals:[F
      25: iload         6
      27: faload
      28: fload_2
      29: fdiv
      30: ldc           #35                 // float 255.0f
      32: fmul
      33: f2i
      34: istore        7
      36: iload         5
      38: iload         7
      40: iadd
      41: istore        5
      43: aload_0
      44: getfield      #28                 // Field gradients:[[I
      47: iload         6
      49: iload         7
      51: newarray       int
      53: aastore
      54: aload_1
      55: iload         6
      57: aaload
      58: invokevirtual #36                 // Method com/sun/prism/paint/Color.getIntArgbPre:()I
      61: istore_3
      62: aload_1
      63: iload         6
      65: iconst_1
      66: iadd
      67: aaload
      68: invokevirtual #36                 // Method com/sun/prism/paint/Color.getIntArgbPre:()I
      71: istore        4
      73: aload_0
      74: iload_3
      75: iload         4
      77: aload_0
      78: getfield      #28                 // Field gradients:[[I
      81: iload         6
      83: aaload
      84: invokespecial #37                 // Method interpolate:(II[I)V
      87: aload_0
      88: dup
      89: getfield      #26                 // Field transparencyTest:I
      92: iload_3
      93: iand
      94: putfield      #26                 // Field transparencyTest:I
      97: aload_0
      98: dup
      99: getfield      #26                 // Field transparencyTest:I
     102: iload         4
     104: iand
     105: putfield      #26                 // Field transparencyTest:I
     108: iinc          6, 1
     111: goto          11
     114: aload_0
     115: iload         5
     117: newarray       int
     119: putfield      #38                 // Field gradient:[I
     122: iconst_0
     123: istore        6
     125: iconst_0
     126: istore        7
     128: iload         7
     130: aload_0
     131: getfield      #28                 // Field gradients:[[I
     134: arraylength
     135: if_icmpge     182
     138: aload_0
     139: getfield      #28                 // Field gradients:[[I
     142: iload         7
     144: aaload
     145: iconst_0
     146: aload_0
     147: getfield      #38                 // Field gradient:[I
     150: iload         6
     152: aload_0
     153: getfield      #28                 // Field gradients:[[I
     156: iload         7
     158: aaload
     159: arraylength
     160: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     163: iload         6
     165: aload_0
     166: getfield      #28                 // Field gradients:[[I
     169: iload         7
     171: aaload
     172: arraylength
     173: iadd
     174: istore        6
     176: iinc          7, 1
     179: goto          128
     182: aload_0
     183: getfield      #38                 // Field gradient:[I
     186: aload_0
     187: getfield      #38                 // Field gradient:[I
     190: arraylength
     191: iconst_1
     192: isub
     193: aload_1
     194: aload_1
     195: arraylength
     196: iconst_1
     197: isub
     198: aaload
     199: invokevirtual #36                 // Method com/sun/prism/paint/Color.getIntArgbPre:()I
     202: iastore
     203: aload_0
     204: aload_0
     205: getfield      #38                 // Field gradient:[I
     208: arraylength
     209: iconst_1
     210: isub
     211: putfield      #40                 // Field fastGradientArraySize:I
     214: return

  private void calculateMultipleArrayGradient(com.sun.prism.paint.Color[]);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #34                 // Field isSimpleLookup:Z
       5: iconst_0
       6: istore        4
       8: iload         4
      10: aload_0
      11: getfield      #28                 // Field gradients:[[I
      14: arraylength
      15: if_icmpge     87
      18: aload_0
      19: getfield      #28                 // Field gradients:[[I
      22: iload         4
      24: sipush        256
      27: newarray       int
      29: aastore
      30: aload_1
      31: iload         4
      33: aaload
      34: invokevirtual #36                 // Method com/sun/prism/paint/Color.getIntArgbPre:()I
      37: istore_2
      38: aload_1
      39: iload         4
      41: iconst_1
      42: iadd
      43: aaload
      44: invokevirtual #36                 // Method com/sun/prism/paint/Color.getIntArgbPre:()I
      47: istore_3
      48: aload_0
      49: iload_2
      50: iload_3
      51: aload_0
      52: getfield      #28                 // Field gradients:[[I
      55: iload         4
      57: aaload
      58: invokespecial #37                 // Method interpolate:(II[I)V
      61: aload_0
      62: dup
      63: getfield      #26                 // Field transparencyTest:I
      66: iload_2
      67: iand
      68: putfield      #26                 // Field transparencyTest:I
      71: aload_0
      72: dup
      73: getfield      #26                 // Field transparencyTest:I
      76: iload_3
      77: iand
      78: putfield      #26                 // Field transparencyTest:I
      81: iinc          4, 1
      84: goto          8
      87: return

  private void interpolate(int, int, int[]);
    Code:
       0: fconst_1
       1: aload_3
       2: arraylength
       3: i2f
       4: fdiv
       5: fstore        12
       7: iload_1
       8: bipush        24
      10: ishr
      11: sipush        255
      14: iand
      15: istore        4
      17: iload_1
      18: bipush        16
      20: ishr
      21: sipush        255
      24: iand
      25: istore        5
      27: iload_1
      28: bipush        8
      30: ishr
      31: sipush        255
      34: iand
      35: istore        6
      37: iload_1
      38: sipush        255
      41: iand
      42: istore        7
      44: iload_2
      45: bipush        24
      47: ishr
      48: sipush        255
      51: iand
      52: iload         4
      54: isub
      55: istore        8
      57: iload_2
      58: bipush        16
      60: ishr
      61: sipush        255
      64: iand
      65: iload         5
      67: isub
      68: istore        9
      70: iload_2
      71: bipush        8
      73: ishr
      74: sipush        255
      77: iand
      78: iload         6
      80: isub
      81: istore        10
      83: iload_2
      84: sipush        255
      87: iand
      88: iload         7
      90: isub
      91: istore        11
      93: iconst_0
      94: istore        13
      96: iload         13
      98: aload_3
      99: arraylength
     100: if_icmpge     201
     103: aload_3
     104: iload         13
     106: iload         4
     108: i2f
     109: iload         13
     111: iload         8
     113: imul
     114: i2f
     115: fload         12
     117: fmul
     118: fadd
     119: f2d
     120: ldc2_w        #41                 // double 0.5d
     123: dadd
     124: d2i
     125: bipush        24
     127: ishl
     128: iload         5
     130: i2f
     131: iload         13
     133: iload         9
     135: imul
     136: i2f
     137: fload         12
     139: fmul
     140: fadd
     141: f2d
     142: ldc2_w        #41                 // double 0.5d
     145: dadd
     146: d2i
     147: bipush        16
     149: ishl
     150: ior
     151: iload         6
     153: i2f
     154: iload         13
     156: iload         10
     158: imul
     159: i2f
     160: fload         12
     162: fmul
     163: fadd
     164: f2d
     165: ldc2_w        #41                 // double 0.5d
     168: dadd
     169: d2i
     170: bipush        8
     172: ishl
     173: ior
     174: iload         7
     176: i2f
     177: iload         13
     179: iload         11
     181: imul
     182: i2f
     183: fload         12
     185: fmul
     186: fadd
     187: f2d
     188: ldc2_w        #41                 // double 0.5d
     191: dadd
     192: d2i
     193: ior
     194: iastore
     195: iinc          13, 1
     198: goto          96
     201: return

  protected final int indexIntoGradientsArrays(float);
    Code:
       0: aload_0
       1: getfield      #21                 // Field cycleMethod:I
       4: ifne          29
       7: fload_1
       8: fconst_1
       9: fcmpl
      10: ifle          18
      13: fconst_1
      14: fstore_1
      15: goto          84
      18: fload_1
      19: fconst_0
      20: fcmpg
      21: ifge          84
      24: fconst_0
      25: fstore_1
      26: goto          84
      29: aload_0
      30: getfield      #21                 // Field cycleMethod:I
      33: iconst_2
      34: if_icmpne     56
      37: fload_1
      38: fload_1
      39: f2i
      40: i2f
      41: fsub
      42: fstore_1
      43: fload_1
      44: fconst_0
      45: fcmpg
      46: ifge          84
      49: fload_1
      50: fconst_1
      51: fadd
      52: fstore_1
      53: goto          84
      56: fload_1
      57: fconst_0
      58: fcmpg
      59: ifge          65
      62: fload_1
      63: fneg
      64: fstore_1
      65: fload_1
      66: f2i
      67: istore_2
      68: fload_1
      69: iload_2
      70: i2f
      71: fsub
      72: fstore_1
      73: iload_2
      74: iconst_1
      75: iand
      76: iconst_1
      77: if_icmpne     84
      80: fconst_1
      81: fload_1
      82: fsub
      83: fstore_1
      84: aload_0
      85: getfield      #34                 // Field isSimpleLookup:Z
      88: ifeq          105
      91: aload_0
      92: getfield      #38                 // Field gradient:[I
      95: fload_1
      96: aload_0
      97: getfield      #40                 // Field fastGradientArraySize:I
     100: i2f
     101: fmul
     102: f2i
     103: iaload
     104: ireturn
     105: fload_1
     106: aload_0
     107: getfield      #22                 // Field fractions:[F
     110: iconst_0
     111: faload
     112: fcmpg
     113: ifge          125
     116: aload_0
     117: getfield      #28                 // Field gradients:[[I
     120: iconst_0
     121: aaload
     122: iconst_0
     123: iaload
     124: ireturn
     125: iconst_0
     126: istore_2
     127: iload_2
     128: aload_0
     129: getfield      #28                 // Field gradients:[[I
     132: arraylength
     133: if_icmpge     188
     136: fload_1
     137: aload_0
     138: getfield      #22                 // Field fractions:[F
     141: iload_2
     142: iconst_1
     143: iadd
     144: faload
     145: fcmpg
     146: ifge          182
     149: fload_1
     150: aload_0
     151: getfield      #22                 // Field fractions:[F
     154: iload_2
     155: faload
     156: fsub
     157: fstore_3
     158: fload_3
     159: aload_0
     160: getfield      #24                 // Field normalizedIntervals:[F
     163: iload_2
     164: faload
     165: fdiv
     166: ldc           #35                 // float 255.0f
     168: fmul
     169: f2i
     170: istore        4
     172: aload_0
     173: getfield      #28                 // Field gradients:[[I
     176: iload_2
     177: aaload
     178: iload         4
     180: iaload
     181: ireturn
     182: iinc          2, 1
     185: goto          127
     188: aload_0
     189: getfield      #28                 // Field gradients:[[I
     192: aload_0
     193: getfield      #28                 // Field gradients:[[I
     196: arraylength
     197: iconst_1
     198: isub
     199: aaload
     200: sipush        255
     203: iaload
     204: ireturn

  protected abstract void fillRaster(int[], int, int, int, int, int, int);
}
