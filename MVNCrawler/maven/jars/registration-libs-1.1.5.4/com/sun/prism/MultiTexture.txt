Compiled from "MultiTexture.java"
public final class com.sun.prism.MultiTexture implements com.sun.prism.Texture {
  private int width;

  private int height;

  private com.sun.prism.PixelFormat format;

  private com.sun.prism.Texture$WrapMode wrapMode;

  private boolean linearFiltering;

  private final java.util.ArrayList<com.sun.prism.Texture> textures;

  private int lastImageSerial;

  public com.sun.prism.MultiTexture(com.sun.prism.PixelFormat, com.sun.prism.Texture$WrapMode, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field linearFiltering:Z
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field width:I
      14: aload_0
      15: iload         4
      17: putfield      #4                  // Field height:I
      20: aload_0
      21: aload_1
      22: putfield      #5                  // Field format:Lcom/sun/prism/PixelFormat;
      25: aload_0
      26: aload_2
      27: putfield      #6                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      30: aload_0
      31: new           #7                  // class java/util/ArrayList
      34: dup
      35: iconst_4
      36: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      39: putfield      #9                  // Field textures:Ljava/util/ArrayList;
      42: return

  private com.sun.prism.MultiTexture(com.sun.prism.MultiTexture, com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #5                  // Field format:Lcom/sun/prism/PixelFormat;
       5: aload_2
       6: aload_1
       7: getfield      #3                  // Field width:I
      10: aload_1
      11: getfield      #4                  // Field height:I
      14: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Lcom/sun/prism/Texture$WrapMode;II)V
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_1
      21: invokevirtual #11                 // Method textureCount:()I
      24: if_icmpge     53
      27: aload_1
      28: iload_3
      29: invokevirtual #12                 // Method getTexture:(I)Lcom/sun/prism/Texture;
      32: astore        4
      34: aload_0
      35: aload         4
      37: aload_2
      38: invokeinterface #13,  2           // InterfaceMethod com/sun/prism/Texture.getSharedTexture:(Lcom/sun/prism/Texture$WrapMode;)Lcom/sun/prism/Texture;
      43: iload_3
      44: invokevirtual #14                 // Method setTexture:(Lcom/sun/prism/Texture;I)V
      47: iinc          3, 1
      50: goto          19
      53: aload_0
      54: aload_1
      55: getfield      #2                  // Field linearFiltering:Z
      58: putfield      #2                  // Field linearFiltering:Z
      61: aload_0
      62: aload_1
      63: getfield      #15                 // Field lastImageSerial:I
      66: putfield      #15                 // Field lastImageSerial:I
      69: return

  public com.sun.prism.Texture getSharedTexture(com.sun.prism.Texture$WrapMode);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method assertLocked:()V
       4: aload_0
       5: getfield      #6                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
       8: aload_1
       9: if_acmpne     18
      12: aload_0
      13: invokevirtual #17                 // Method lock:()V
      16: aload_0
      17: areturn
      18: getstatic     #18                 // Field com/sun/prism/MultiTexture$1.$SwitchMap$com$sun$prism$Texture$WrapMode:[I
      21: aload_1
      22: invokevirtual #19                 // Method com/sun/prism/Texture$WrapMode.ordinal:()I
      25: iaload
      26: lookupswitch  { // 2
                     1: 52
                     2: 64
               default: 76
          }
      52: aload_0
      53: getfield      #6                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      56: getstatic     #20                 // Field com/sun/prism/Texture$WrapMode.CLAMP_TO_EDGE:Lcom/sun/prism/Texture$WrapMode;
      59: if_acmpeq     78
      62: aconst_null
      63: areturn
      64: aload_0
      65: getfield      #6                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      68: getstatic     #21                 // Field com/sun/prism/Texture$WrapMode.REPEAT:Lcom/sun/prism/Texture$WrapMode;
      71: if_acmpeq     78
      74: aconst_null
      75: areturn
      76: aconst_null
      77: areturn
      78: new           #22                 // class com/sun/prism/MultiTexture
      81: dup
      82: aload_0
      83: aload_1
      84: invokespecial #23                 // Method "<init>":(Lcom/sun/prism/MultiTexture;Lcom/sun/prism/Texture$WrapMode;)V
      87: astore_2
      88: aload_2
      89: invokeinterface #24,  1           // InterfaceMethod com/sun/prism/Texture.lock:()V
      94: aload_2
      95: areturn

  public int textureCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #25                 // Method java/util/ArrayList.size:()I
       7: ireturn

  public void setTexture(com.sun.prism.Texture, int);
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod com/sun/prism/Texture.getWrapMode:()Lcom/sun/prism/Texture$WrapMode;
       6: aload_0
       7: getfield      #6                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
      10: invokevirtual #27                 // Method com/sun/prism/Texture$WrapMode.isCompatibleWith:(Lcom/sun/prism/Texture$WrapMode;)Z
      13: ifne          26
      16: new           #28                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #29                 // String texture wrap mode must match multi-texture mode
      22: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      30: invokevirtual #25                 // Method java/util/ArrayList.size:()I
      33: iload_2
      34: iconst_1
      35: iadd
      36: if_icmpge     79
      39: aload_0
      40: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      43: invokevirtual #25                 // Method java/util/ArrayList.size:()I
      46: istore_3
      47: iload_3
      48: iload_2
      49: if_icmpge     67
      52: aload_0
      53: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      56: aconst_null
      57: invokevirtual #31                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          3, 1
      64: goto          47
      67: aload_0
      68: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      71: aload_1
      72: invokevirtual #31                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      75: pop
      76: goto          89
      79: aload_0
      80: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      83: iload_2
      84: aload_1
      85: invokevirtual #32                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload_1
      90: aload_0
      91: getfield      #2                  // Field linearFiltering:Z
      94: invokeinterface #33,  2           // InterfaceMethod com/sun/prism/Texture.setLinearFiltering:(Z)V
      99: return

  public com.sun.prism.Texture getTexture(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #34                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #35                 // class com/sun/prism/Texture
      11: areturn

  public com.sun.prism.Texture[] getTextures();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       8: invokevirtual #25                 // Method java/util/ArrayList.size:()I
      11: anewarray     #35                 // class com/sun/prism/Texture
      14: invokevirtual #36                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: checkcast     #37                 // class "[Lcom/sun/prism/Texture;"
      20: areturn

  public void removeTexture(com.sun.prism.Texture);
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #38                 // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void removeTexture(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #39                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
       8: pop
       9: return

  public com.sun.prism.PixelFormat getPixelFormat();
    Code:
       0: aload_0
       1: getfield      #5                  // Field format:Lcom/sun/prism/PixelFormat;
       4: areturn

  public int getPhysicalWidth();
    Code:
       0: aload_0
       1: getfield      #3                  // Field width:I
       4: ireturn

  public int getPhysicalHeight();
    Code:
       0: aload_0
       1: getfield      #4                  // Field height:I
       4: ireturn

  public int getContentX();
    Code:
       0: iconst_0
       1: ireturn

  public int getContentY();
    Code:
       0: iconst_0
       1: ireturn

  public int getContentWidth();
    Code:
       0: aload_0
       1: getfield      #3                  // Field width:I
       4: ireturn

  public int getContentHeight();
    Code:
       0: aload_0
       1: getfield      #4                  // Field height:I
       4: ireturn

  public int getLastImageSerial();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lastImageSerial:I
       4: ireturn

  public void setLastImageSerial(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field lastImageSerial:I
       5: return

  public void update(com.sun.prism.Image);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #41                 // String Update from Image not supported
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void update(com.sun.prism.Image, int, int);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #41                 // String Update from Image not supported
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void update(com.sun.prism.Image, int, int, int, int);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #41                 // String Update from Image not supported
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void update(com.sun.prism.Image, int, int, int, int, boolean);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #41                 // String Update from Image not supported
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void update(java.nio.Buffer, com.sun.prism.PixelFormat, int, int, int, int, int, int, int, boolean);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #43                 // String Update from generic Buffer not supported
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void update(com.sun.prism.MediaFrame, boolean);
    Code:
       0: aload_1
       1: invokeinterface #44,  1           // InterfaceMethod com/sun/prism/MediaFrame.getPixelFormat:()Lcom/sun/prism/PixelFormat;
       6: getstatic     #45                 // Field com/sun/prism/PixelFormat.MULTI_YCbCr_420:Lcom/sun/prism/PixelFormat;
       9: if_acmpne     139
      12: aload_1
      13: invokeinterface #46,  1           // InterfaceMethod com/sun/prism/MediaFrame.getEncodedWidth:()I
      18: istore        4
      20: aload_1
      21: invokeinterface #47,  1           // InterfaceMethod com/sun/prism/MediaFrame.getEncodedHeight:()I
      26: istore        5
      28: iconst_0
      29: istore        6
      31: iload         6
      33: aload_1
      34: invokeinterface #48,  1           // InterfaceMethod com/sun/prism/MediaFrame.planeCount:()I
      39: if_icmpge     136
      42: aload_0
      43: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      46: iload         6
      48: invokevirtual #34                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      51: checkcast     #35                 // class com/sun/prism/Texture
      54: astore_3
      55: aconst_null
      56: aload_3
      57: if_acmpeq     130
      60: iload         4
      62: istore        7
      64: iload         5
      66: istore        8
      68: iload         6
      70: iconst_2
      71: if_icmpeq     80
      74: iload         6
      76: iconst_1
      77: if_icmpne     92
      80: iload         7
      82: iconst_2
      83: idiv
      84: istore        7
      86: iload         8
      88: iconst_2
      89: idiv
      90: istore        8
      92: aload_1
      93: iload         6
      95: invokeinterface #50,  2           // InterfaceMethod com/sun/prism/MediaFrame.getBufferForPlane:(I)Ljava/nio/ByteBuffer;
     100: astore        9
     102: aload_3
     103: aload         9
     105: getstatic     #51                 // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
     108: iconst_0
     109: iconst_0
     110: iconst_0
     111: iconst_0
     112: iload         7
     114: iload         8
     116: aload_1
     117: iload         6
     119: invokeinterface #52,  2           // InterfaceMethod com/sun/prism/MediaFrame.strideForPlane:(I)I
     124: iload_2
     125: invokeinterface #53,  11          // InterfaceMethod com/sun/prism/Texture.update:(Ljava/nio/Buffer;Lcom/sun/prism/PixelFormat;IIIIIIIZ)V
     130: iinc          6, 1
     133: goto          31
     136: goto          149
     139: new           #28                 // class java/lang/IllegalArgumentException
     142: dup
     143: ldc           #54                 // String Invalid pixel format in MediaFrame
     145: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: return

  public com.sun.prism.Texture$WrapMode getWrapMode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field wrapMode:Lcom/sun/prism/Texture$WrapMode;
       4: areturn

  public boolean getUseMipmap();
    Code:
       0: iconst_0
       1: ireturn

  public boolean getLinearFiltering();
    Code:
       0: aload_0
       1: getfield      #2                  // Field linearFiltering:Z
       4: ireturn

  public void setLinearFiltering(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field linearFiltering:Z
       5: aload_0
       6: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       9: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          42
      22: aload_2
      23: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #35                 // class com/sun/prism/Texture
      31: astore_3
      32: aload_3
      33: iload_1
      34: invokeinterface #33,  2           // InterfaceMethod com/sun/prism/Texture.setLinearFiltering:(Z)V
      39: goto          13
      42: return

  public void lock();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #24,  1           // InterfaceMethod com/sun/prism/Texture.lock:()V
      33: goto          8
      36: return

  public void unlock();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #58,  1           // InterfaceMethod com/sun/prism/Texture.unlock:()V
      33: goto          8
      36: return

  public boolean isLocked();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          41
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #59,  1           // InterfaceMethod com/sun/prism/Texture.isLocked:()Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: goto          8
      41: iconst_0
      42: ireturn

  public int getLockCount();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       6: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_2
      20: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #35                 // class com/sun/prism/Texture
      28: astore_3
      29: iload_1
      30: aload_3
      31: invokeinterface #60,  1           // InterfaceMethod com/sun/prism/Texture.getLockCount:()I
      36: invokestatic  #61                 // Method java/lang/Math.max:(II)I
      39: istore_1
      40: goto          10
      43: iload_1
      44: ireturn

  public void assertLocked();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #62,  1           // InterfaceMethod com/sun/prism/Texture.assertLocked:()V
      33: goto          8
      36: return

  public void makePermanent();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #63,  1           // InterfaceMethod com/sun/prism/Texture.makePermanent:()V
      33: goto          8
      36: return

  public void contentsUseful();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #64,  1           // InterfaceMethod com/sun/prism/Texture.contentsUseful:()V
      33: goto          8
      36: return

  public void contentsNotUseful();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #65,  1           // InterfaceMethod com/sun/prism/Texture.contentsNotUseful:()V
      33: goto          8
      36: return

  public boolean isSurfaceLost();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          41
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #66,  1           // InterfaceMethod com/sun/prism/Texture.isSurfaceLost:()Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: goto          8
      41: iconst_0
      42: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #9                  // Field textures:Ljava/util/ArrayList;
       4: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class com/sun/prism/Texture
      26: astore_2
      27: aload_2
      28: invokeinterface #67,  1           // InterfaceMethod com/sun/prism/Texture.dispose:()V
      33: goto          8
      36: aload_0
      37: getfield      #9                  // Field textures:Ljava/util/ArrayList;
      40: invokevirtual #68                 // Method java/util/ArrayList.clear:()V
      43: return

  public int getMaxContentWidth();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getPhysicalWidth:()I
       4: ireturn

  public int getMaxContentHeight();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method getPhysicalHeight:()I
       4: ireturn

  public void setContentWidth(int);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #71                 // String Not supported.
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setContentHeight(int);
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #71                 // String Not supported.
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
