Compiled from "Image.java"
public class com.sun.prism.Image implements com.sun.javafx.tk.PlatformImage {
  static final javafx.scene.image.WritablePixelFormat<java.nio.ByteBuffer> FX_ByteBgraPre_FORMAT;

  static final javafx.scene.image.WritablePixelFormat<java.nio.IntBuffer> FX_IntArgbPre_FORMAT;

  static final javafx.scene.image.PixelFormat<java.nio.ByteBuffer> FX_ByteRgb_FORMAT;

  private final java.nio.Buffer pixelBuffer;

  private final int minX;

  private final int minY;

  private final int width;

  private final int height;

  private final int scanlineStride;

  private final com.sun.prism.PixelFormat pixelFormat;

  private final float pixelScale;

  int[] serial;

  private com.sun.prism.Image$Accessor<?> pixelaccessor;

  static javafx.scene.image.PixelFormat<java.nio.ByteBuffer> FX_ByteGray_FORMAT;

  public static com.sun.prism.Image fromIntArgbPreData(int[], int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #8                  // Field com/sun/prism/PixelFormat.INT_ARGB_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #9                  // Method "<init>":(Lcom/sun/prism/PixelFormat;[III)V
      13: areturn

  public static com.sun.prism.Image fromIntArgbPreData(java.nio.IntBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #8                  // Field com/sun/prism/PixelFormat.INT_ARGB_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image fromIntArgbPreData(java.nio.IntBuffer, int, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #8                  // Field com/sun/prism/PixelFormat.INT_ARGB_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      16: areturn

  public static com.sun.prism.Image fromIntArgbPreData(java.nio.IntBuffer, int, int, int, float);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #8                  // Field com/sun/prism/PixelFormat.INT_ARGB_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: fload         4
      15: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      18: areturn

  public static com.sun.prism.Image fromByteBgraPreData(byte[], int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #14                 // Method "<init>":(Lcom/sun/prism/PixelFormat;[BII)V
      13: areturn

  public static com.sun.prism.Image fromByteBgraPreData(byte[], int, int, float);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: invokestatic  #15                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      11: iload_1
      12: iload_2
      13: iconst_0
      14: iconst_0
      15: iconst_0
      16: fload_3
      17: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      20: areturn

  public static com.sun.prism.Image fromByteBgraPreData(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image fromByteBgraPreData(java.nio.ByteBuffer, int, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      16: areturn

  public static com.sun.prism.Image fromByteBgraPreData(java.nio.ByteBuffer, int, int, int, float);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: fload         4
      15: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      18: areturn

  public static com.sun.prism.Image fromByteRgbData(byte[], int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #16                 // Field com/sun/prism/PixelFormat.BYTE_RGB:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #14                 // Method "<init>":(Lcom/sun/prism/PixelFormat;[BII)V
      13: areturn

  public static com.sun.prism.Image fromByteRgbData(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #16                 // Field com/sun/prism/PixelFormat.BYTE_RGB:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image fromByteRgbData(java.nio.ByteBuffer, int, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #16                 // Field com/sun/prism/PixelFormat.BYTE_RGB:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      16: areturn

  public static com.sun.prism.Image fromByteRgbData(java.nio.ByteBuffer, int, int, int, float);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #16                 // Field com/sun/prism/PixelFormat.BYTE_RGB:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: fload         4
      15: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      18: areturn

  public static com.sun.prism.Image fromByteGrayData(byte[], int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #17                 // Field com/sun/prism/PixelFormat.BYTE_GRAY:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #14                 // Method "<init>":(Lcom/sun/prism/PixelFormat;[BII)V
      13: areturn

  public static com.sun.prism.Image fromByteGrayData(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #17                 // Field com/sun/prism/PixelFormat.BYTE_GRAY:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image fromByteGrayData(java.nio.ByteBuffer, int, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #17                 // Field com/sun/prism/PixelFormat.BYTE_GRAY:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      16: areturn

  public static com.sun.prism.Image fromByteGrayData(java.nio.ByteBuffer, int, int, int, float);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #17                 // Field com/sun/prism/PixelFormat.BYTE_GRAY:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: fload         4
      15: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      18: areturn

  public static com.sun.prism.Image fromByteAlphaData(byte[], int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #18                 // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #14                 // Method "<init>":(Lcom/sun/prism/PixelFormat;[BII)V
      13: areturn

  public static com.sun.prism.Image fromByteAlphaData(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #18                 // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image fromByteAlphaData(java.nio.ByteBuffer, int, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #18                 // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      16: areturn

  public static com.sun.prism.Image fromByteApple422Data(byte[], int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #19                 // Field com/sun/prism/PixelFormat.BYTE_APPLE_422:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #14                 // Method "<init>":(Lcom/sun/prism/PixelFormat;[BII)V
      13: areturn

  public static com.sun.prism.Image fromByteApple422Data(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #19                 // Field com/sun/prism/PixelFormat.BYTE_APPLE_422:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image fromByteApple422Data(java.nio.ByteBuffer, int, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #19                 // Field com/sun/prism/PixelFormat.BYTE_APPLE_422:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: iconst_0
      11: iconst_0
      12: iload_3
      13: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      16: areturn

  public static com.sun.prism.Image fromFloatMapData(java.nio.FloatBuffer, int, int);
    Code:
       0: new           #7                  // class com/sun/prism/Image
       3: dup
       4: getstatic     #20                 // Field com/sun/prism/PixelFormat.FLOAT_XYZW:Lcom/sun/prism/PixelFormat;
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #10                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;II)V
      13: areturn

  public static com.sun.prism.Image convertImageFrame(com.sun.javafx.iio.ImageFrame);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method com/sun/javafx/iio/ImageFrame.getImageData:()Ljava/nio/Buffer;
       4: checkcast     #22                 // class java/nio/ByteBuffer
       7: astore_1
       8: aload_0
       9: invokevirtual #23                 // Method com/sun/javafx/iio/ImageFrame.getImageType:()Lcom/sun/javafx/iio/ImageStorage$ImageType;
      12: astore_2
      13: aload_0
      14: invokevirtual #24                 // Method com/sun/javafx/iio/ImageFrame.getWidth:()I
      17: istore_3
      18: aload_0
      19: invokevirtual #25                 // Method com/sun/javafx/iio/ImageFrame.getHeight:()I
      22: istore        4
      24: aload_0
      25: invokevirtual #26                 // Method com/sun/javafx/iio/ImageFrame.getStride:()I
      28: istore        5
      30: aload_0
      31: invokevirtual #27                 // Method com/sun/javafx/iio/ImageFrame.getPixelScale:()F
      34: fstore        6
      36: getstatic     #28                 // Field com/sun/prism/Image$1.$SwitchMap$com$sun$javafx$iio$ImageStorage$ImageType:[I
      39: aload_2
      40: invokevirtual #29                 // Method com/sun/javafx/iio/ImageStorage$ImageType.ordinal:()I
      43: iaload
      44: tableswitch   { // 1 to 6
                     1: 84
                     2: 96
                     3: 108
                     4: 127
                     5: 158
                     6: 177
               default: 237
          }
      84: aload_1
      85: iload_3
      86: iload         4
      88: iload         5
      90: fload         6
      92: invokestatic  #30                 // Method fromByteGrayData:(Ljava/nio/ByteBuffer;IIIF)Lcom/sun/prism/Image;
      95: areturn
      96: aload_1
      97: iload_3
      98: iload         4
     100: iload         5
     102: fload         6
     104: invokestatic  #31                 // Method fromByteRgbData:(Ljava/nio/ByteBuffer;IIIF)Lcom/sun/prism/Image;
     107: areturn
     108: invokestatic  #32                 // Method com/sun/javafx/image/impl/ByteBgra.ToByteBgraPreConverter:()Lcom/sun/javafx/image/ByteToBytePixelConverter;
     111: aload_1
     112: iconst_0
     113: iload         5
     115: aload_1
     116: iconst_0
     117: iload         5
     119: iload_3
     120: iload         4
     122: invokeinterface #33,  9           // InterfaceMethod com/sun/javafx/image/ByteToBytePixelConverter.convert:(Ljava/nio/Buffer;IILjava/nio/Buffer;IIII)V
     127: invokestatic  #34                 // Method com/sun/javafx/image/impl/ByteRgba.ToByteBgraConverter:()Lcom/sun/javafx/image/ByteToBytePixelConverter;
     130: aload_1
     131: iconst_0
     132: iload         5
     134: aload_1
     135: iconst_0
     136: iload         5
     138: iload_3
     139: iload         4
     141: invokeinterface #33,  9           // InterfaceMethod com/sun/javafx/image/ByteToBytePixelConverter.convert:(Ljava/nio/Buffer;IILjava/nio/Buffer;IIII)V
     146: aload_1
     147: iload_3
     148: iload         4
     150: iload         5
     152: fload         6
     154: invokestatic  #35                 // Method fromByteBgraPreData:(Ljava/nio/ByteBuffer;IIIF)Lcom/sun/prism/Image;
     157: areturn
     158: invokestatic  #36                 // Method com/sun/javafx/image/impl/ByteGrayAlpha.ToByteGrayAlphaPreConverter:()Lcom/sun/javafx/image/ByteToBytePixelConverter;
     161: aload_1
     162: iconst_0
     163: iload         5
     165: aload_1
     166: iconst_0
     167: iload         5
     169: iload_3
     170: iload         4
     172: invokeinterface #33,  9           // InterfaceMethod com/sun/javafx/image/ByteToBytePixelConverter.convert:(Ljava/nio/Buffer;IILjava/nio/Buffer;IIII)V
     177: iload         5
     179: iload_3
     180: iconst_2
     181: imul
     182: if_icmpeq     195
     185: new           #37                 // class java/lang/AssertionError
     188: dup
     189: ldc           #38                 // String Bad stride for GRAY_ALPHA
     191: invokespecial #39                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     194: athrow
     195: iload_3
     196: iload         4
     198: imul
     199: iconst_4
     200: imul
     201: newarray       byte
     203: astore        7
     205: invokestatic  #40                 // Method com/sun/javafx/image/impl/ByteGrayAlphaPre.ToByteBgraPreConverter:()Lcom/sun/javafx/image/ByteToBytePixelConverter;
     208: aload_1
     209: iconst_0
     210: iload         5
     212: aload         7
     214: iconst_0
     215: iload_3
     216: iconst_4
     217: imul
     218: iload_3
     219: iload         4
     221: invokeinterface #41,  9           // InterfaceMethod com/sun/javafx/image/ByteToBytePixelConverter.convert:(Ljava/nio/ByteBuffer;II[BIIII)V
     226: aload         7
     228: iload_3
     229: iload         4
     231: fload         6
     233: invokestatic  #42                 // Method fromByteBgraPreData:([BIIF)Lcom/sun/prism/Image;
     236: areturn
     237: new           #43                 // class java/lang/RuntimeException
     240: dup
     241: aload_2
     242: invokedynamic #44,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lcom/sun/javafx/iio/ImageStorage$ImageType;)Ljava/lang/String;
     247: invokespecial #45                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     250: athrow

  private com.sun.prism.Image(com.sun.prism.PixelFormat, int[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #46                 // Method java/nio/IntBuffer.wrap:([I)Ljava/nio/IntBuffer;
       6: iload_3
       7: iload         4
       9: iconst_0
      10: iconst_0
      11: iconst_0
      12: fconst_1
      13: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      16: return

  private com.sun.prism.Image(com.sun.prism.PixelFormat, byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #15                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       6: iload_3
       7: iload         4
       9: iconst_0
      10: iconst_0
      11: iconst_0
      12: fconst_1
      13: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      16: return

  private com.sun.prism.Image(com.sun.prism.PixelFormat, java.nio.Buffer, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iconst_0
       7: iconst_0
       8: iconst_0
       9: fconst_1
      10: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      13: return

  private com.sun.prism.Image(com.sun.prism.PixelFormat, java.nio.Buffer, int, int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: fconst_1
      13: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
      16: return

  private com.sun.prism.Image(com.sun.prism.PixelFormat, java.nio.Buffer, int, int, int, int, int, float);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       int
       8: putfield      #48                 // Field serial:[I
      11: aload_1
      12: getstatic     #49                 // Field com/sun/prism/PixelFormat.MULTI_YCbCr_420:Lcom/sun/prism/PixelFormat;
      15: if_acmpne     35
      18: new           #50                 // class java/lang/IllegalArgumentException
      21: dup
      22: aload_1
      23: invokevirtual #51                 // Method com/sun/prism/PixelFormat.name:()Ljava/lang/String;
      26: invokedynamic #52,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      31: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload         7
      37: ifne          48
      40: iload_3
      41: aload_1
      42: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
      45: imul
      46: istore        7
      48: aload_2
      49: ifnonnull     62
      52: new           #50                 // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #55                 // String Pixel buffer must be non-null
      58: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: iload_3
      63: ifle          71
      66: iload         4
      68: ifgt          81
      71: new           #50                 // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #56                 // String Image dimensions must be > 0
      77: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: iload         5
      83: iflt          91
      86: iload         6
      88: ifge          101
      91: new           #50                 // class java/lang/IllegalArgumentException
      94: dup
      95: ldc           #57                 // String Image minX and minY must be >= 0
      97: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: iload         5
     103: iload_3
     104: iadd
     105: aload_1
     106: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
     109: imul
     110: iload         7
     112: if_icmple     125
     115: new           #50                 // class java/lang/IllegalArgumentException
     118: dup
     119: ldc           #58                 // String Image scanlineStride is too small
     121: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: iload         7
     127: aload_1
     128: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
     131: irem
     132: ifeq          145
     135: new           #50                 // class java/lang/IllegalArgumentException
     138: dup
     139: ldc           #59                 // String Image scanlineStride must be a multiple of the pixel stride
     141: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: aload_0
     146: aload_1
     147: putfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
     150: aload_0
     151: aload_2
     152: putfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
     155: aload_0
     156: iload_3
     157: putfield      #2                  // Field width:I
     160: aload_0
     161: iload         4
     163: putfield      #1                  // Field height:I
     166: aload_0
     167: iload         5
     169: putfield      #3                  // Field minX:I
     172: aload_0
     173: iload         6
     175: putfield      #4                  // Field minY:I
     178: aload_0
     179: iload         7
     181: putfield      #6                  // Field scanlineStride:I
     184: aload_0
     185: fload         8
     187: putfield      #61                 // Field pixelScale:F
     190: return

  public com.sun.prism.PixelFormat getPixelFormat();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       4: areturn

  public com.sun.prism.PixelFormat$DataType getDataType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       4: invokevirtual #62                 // Method com/sun/prism/PixelFormat.getDataType:()Lcom/sun/prism/PixelFormat$DataType;
       7: areturn

  public int getBytesPerPixelUnit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       4: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
       7: ireturn

  public java.nio.Buffer getPixelBuffer();
    Code:
       0: aload_0
       1: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
       4: areturn

  public int getMinX();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minX:I
       4: ireturn

  public int getMinY();
    Code:
       0: aload_0
       1: getfield      #4                  // Field minY:I
       4: ireturn

  public int getWidth();
    Code:
       0: aload_0
       1: getfield      #2                  // Field width:I
       4: ireturn

  public int getHeight();
    Code:
       0: aload_0
       1: getfield      #1                  // Field height:I
       4: ireturn

  public int getScanlineStride();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scanlineStride:I
       4: ireturn

  public float getPixelScale();
    Code:
       0: aload_0
       1: getfield      #61                 // Field pixelScale:F
       4: freturn

  public int getRowLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scanlineStride:I
       4: aload_0
       5: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       8: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
      11: idiv
      12: ireturn

  public boolean isTightlyPacked();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minX:I
       4: ifne          29
       7: aload_0
       8: getfield      #4                  // Field minY:I
      11: ifne          29
      14: aload_0
      15: getfield      #2                  // Field width:I
      18: aload_0
      19: invokevirtual #63                 // Method getRowLength:()I
      22: if_icmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public com.sun.prism.Image createSubImage(int, int, int, int);
    Code:
       0: iload_3
       1: ifle          9
       4: iload         4
       6: ifgt          19
       9: new           #50                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #64                 // String Subimage dimensions must be > 0
      15: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_1
      20: iflt          27
      23: iload_2
      24: ifge          37
      27: new           #50                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #65                 // String Subimage minX and minY must be >= 0
      33: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_1
      38: iload_3
      39: iadd
      40: aload_0
      41: getfield      #2                  // Field width:I
      44: if_icmple     57
      47: new           #50                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #66                 // String Subimage minX+width must be <= width of parent image
      53: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iload_2
      58: iload         4
      60: iadd
      61: aload_0
      62: getfield      #1                  // Field height:I
      65: if_icmple     78
      68: new           #50                 // class java/lang/IllegalArgumentException
      71: dup
      72: ldc           #67                 // String Subimage minY+height must be <= height of parent image
      74: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: new           #7                  // class com/sun/prism/Image
      81: dup
      82: aload_0
      83: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
      86: aload_0
      87: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
      90: iload_3
      91: iload         4
      93: aload_0
      94: getfield      #3                  // Field minX:I
      97: iload_1
      98: iadd
      99: aload_0
     100: getfield      #4                  // Field minY:I
     103: iload_2
     104: iadd
     105: aload_0
     106: getfield      #6                  // Field scanlineStride:I
     109: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
     112: astore        5
     114: aload         5
     116: aload_0
     117: getfield      #48                 // Field serial:[I
     120: putfield      #48                 // Field serial:[I
     123: aload         5
     125: areturn

  public com.sun.prism.Image createPackedCopy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field width:I
       4: aload_0
       5: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       8: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
      11: imul
      12: istore_1
      13: aload_0
      14: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
      17: aload_0
      18: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
      21: aload_0
      22: getfield      #3                  // Field minX:I
      25: aload_0
      26: getfield      #4                  // Field minY:I
      29: aload_0
      30: getfield      #2                  // Field width:I
      33: aload_0
      34: getfield      #1                  // Field height:I
      37: aload_0
      38: getfield      #6                  // Field scanlineStride:I
      41: invokestatic  #68                 // Method createPackedBuffer:(Ljava/nio/Buffer;Lcom/sun/prism/PixelFormat;IIIII)Ljava/nio/Buffer;
      44: astore_2
      45: new           #7                  // class com/sun/prism/Image
      48: dup
      49: aload_0
      50: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
      53: aload_2
      54: aload_0
      55: getfield      #2                  // Field width:I
      58: aload_0
      59: getfield      #1                  // Field height:I
      62: iconst_0
      63: iconst_0
      64: iload_1
      65: invokespecial #11                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIII)V
      68: areturn

  public com.sun.prism.Image createPackedCopyIfNeeded();
    Code:
       0: aload_0
       1: getfield      #2                  // Field width:I
       4: aload_0
       5: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       8: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
      11: imul
      12: istore_1
      13: iload_1
      14: aload_0
      15: getfield      #6                  // Field scanlineStride:I
      18: if_icmpne     37
      21: aload_0
      22: getfield      #3                  // Field minX:I
      25: ifne          37
      28: aload_0
      29: getfield      #4                  // Field minY:I
      32: ifne          37
      35: aload_0
      36: areturn
      37: aload_0
      38: invokevirtual #69                 // Method createPackedCopy:()Lcom/sun/prism/Image;
      41: areturn

  public static java.nio.Buffer createPackedBuffer(java.nio.Buffer, com.sun.prism.PixelFormat, int, int, int, int, int);
    Code:
       0: iload         6
       2: aload_1
       3: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
       6: irem
       7: ifeq          20
      10: new           #50                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #59                 // String Image scanlineStride must be a multiple of the pixel stride
      16: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: getstatic     #49                 // Field com/sun/prism/PixelFormat.MULTI_YCbCr_420:Lcom/sun/prism/PixelFormat;
      24: if_acmpne     41
      27: new           #50                 // class java/lang/IllegalArgumentException
      30: dup
      31: aload_1
      32: invokedynamic #70,  0             // InvokeDynamic #2:makeConcatWithConstants:(Lcom/sun/prism/PixelFormat;)Ljava/lang/String;
      37: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_1
      42: invokevirtual #71                 // Method com/sun/prism/PixelFormat.getElemsPerPixelUnit:()I
      45: istore        7
      47: iload         6
      49: aload_1
      50: invokevirtual #54                 // Method com/sun/prism/PixelFormat.getBytesPerPixelUnit:()I
      53: idiv
      54: istore        8
      56: iload         8
      58: iload         7
      60: imul
      61: istore        9
      63: iload         4
      65: iload         7
      67: imul
      68: istore        10
      70: iload         10
      72: iload         5
      74: imul
      75: istore        11
      77: iload_2
      78: iload         7
      80: imul
      81: iload_3
      82: iload         9
      84: imul
      85: iadd
      86: istore        12
      88: iconst_0
      89: istore        13
      91: getstatic     #72                 // Field com/sun/prism/Image$1.$SwitchMap$com$sun$prism$PixelFormat$DataType:[I
      94: aload_1
      95: invokevirtual #62                 // Method com/sun/prism/PixelFormat.getDataType:()Lcom/sun/prism/PixelFormat$DataType;
      98: invokevirtual #73                 // Method com/sun/prism/PixelFormat$DataType.ordinal:()I
     101: iaload
     102: tableswitch   { // 1 to 3
                     1: 128
                     2: 224
                     3: 320
               default: 416
          }
     128: aload_0
     129: checkcast     #22                 // class java/nio/ByteBuffer
     132: astore        15
     134: iload         11
     136: invokestatic  #74                 // Method com/sun/prism/impl/BufferUtil.newByteBuffer:(I)Ljava/nio/ByteBuffer;
     139: astore        16
     141: iconst_0
     142: istore        17
     144: iload         17
     146: iload         5
     148: if_icmpge     217
     151: aload         15
     153: iload         12
     155: iload         10
     157: iadd
     158: invokevirtual #75                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     161: pop
     162: aload         15
     164: iload         12
     166: invokevirtual #76                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     169: pop
     170: aload         16
     172: iload         13
     174: iload         10
     176: iadd
     177: invokevirtual #75                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
     180: pop
     181: aload         16
     183: iload         13
     185: invokevirtual #76                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     188: pop
     189: aload         16
     191: aload         15
     193: invokevirtual #77                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     196: pop
     197: iload         12
     199: iload         9
     201: iadd
     202: istore        12
     204: iload         13
     206: iload         10
     208: iadd
     209: istore        13
     211: iinc          17, 1
     214: goto          144
     217: aload         16
     219: astore        14
     221: goto          426
     224: aload_0
     225: checkcast     #78                 // class java/nio/IntBuffer
     228: astore        17
     230: iload         11
     232: invokestatic  #79                 // Method com/sun/prism/impl/BufferUtil.newIntBuffer:(I)Ljava/nio/IntBuffer;
     235: astore        18
     237: iconst_0
     238: istore        19
     240: iload         19
     242: iload         5
     244: if_icmpge     313
     247: aload         17
     249: iload         12
     251: iload         10
     253: iadd
     254: invokevirtual #80                 // Method java/nio/IntBuffer.limit:(I)Ljava/nio/IntBuffer;
     257: pop
     258: aload         17
     260: iload         12
     262: invokevirtual #81                 // Method java/nio/IntBuffer.position:(I)Ljava/nio/IntBuffer;
     265: pop
     266: aload         18
     268: iload         13
     270: iload         10
     272: iadd
     273: invokevirtual #80                 // Method java/nio/IntBuffer.limit:(I)Ljava/nio/IntBuffer;
     276: pop
     277: aload         18
     279: iload         13
     281: invokevirtual #81                 // Method java/nio/IntBuffer.position:(I)Ljava/nio/IntBuffer;
     284: pop
     285: aload         18
     287: aload         17
     289: invokevirtual #82                 // Method java/nio/IntBuffer.put:(Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer;
     292: pop
     293: iload         12
     295: iload         9
     297: iadd
     298: istore        12
     300: iload         13
     302: iload         10
     304: iadd
     305: istore        13
     307: iinc          19, 1
     310: goto          240
     313: aload         18
     315: astore        14
     317: goto          426
     320: aload_0
     321: checkcast     #83                 // class java/nio/FloatBuffer
     324: astore        19
     326: iload         11
     328: invokestatic  #84                 // Method com/sun/prism/impl/BufferUtil.newFloatBuffer:(I)Ljava/nio/FloatBuffer;
     331: astore        20
     333: iconst_0
     334: istore        21
     336: iload         21
     338: iload         5
     340: if_icmpge     409
     343: aload         19
     345: iload         12
     347: iload         10
     349: iadd
     350: invokevirtual #85                 // Method java/nio/FloatBuffer.limit:(I)Ljava/nio/FloatBuffer;
     353: pop
     354: aload         19
     356: iload         12
     358: invokevirtual #86                 // Method java/nio/FloatBuffer.position:(I)Ljava/nio/FloatBuffer;
     361: pop
     362: aload         20
     364: iload         13
     366: iload         10
     368: iadd
     369: invokevirtual #85                 // Method java/nio/FloatBuffer.limit:(I)Ljava/nio/FloatBuffer;
     372: pop
     373: aload         20
     375: iload         13
     377: invokevirtual #86                 // Method java/nio/FloatBuffer.position:(I)Ljava/nio/FloatBuffer;
     380: pop
     381: aload         20
     383: aload         19
     385: invokevirtual #87                 // Method java/nio/FloatBuffer.put:(Ljava/nio/FloatBuffer;)Ljava/nio/FloatBuffer;
     388: pop
     389: iload         12
     391: iload         9
     393: iadd
     394: istore        12
     396: iload         13
     398: iload         10
     400: iadd
     401: istore        13
     403: iinc          21, 1
     406: goto          336
     409: aload         20
     411: astore        14
     413: goto          426
     416: new           #88                 // class java/lang/InternalError
     419: dup
     420: ldc           #89                 // String Unknown data type
     422: invokespecial #90                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
     425: athrow
     426: aload_0
     427: aload_0
     428: invokevirtual #91                 // Method java/nio/Buffer.capacity:()I
     431: invokevirtual #92                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     434: pop
     435: aload_0
     436: invokevirtual #93                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
     439: pop
     440: aload         14
     442: aload         14
     444: invokevirtual #91                 // Method java/nio/Buffer.capacity:()I
     447: invokevirtual #92                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     450: pop
     451: aload         14
     453: invokevirtual #93                 // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
     456: pop
     457: aload         14
     459: areturn

  public com.sun.prism.Image iconify(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       4: getstatic     #49                 // Field com/sun/prism/PixelFormat.MULTI_YCbCr_420:Lcom/sun/prism/PixelFormat;
       7: if_acmpne     27
      10: new           #50                 // class java/lang/IllegalArgumentException
      13: dup
      14: aload_0
      15: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
      18: invokedynamic #94,  0             // InvokeDynamic #1:makeConcatWithConstants:(Lcom/sun/prism/PixelFormat;)Ljava/lang/String;
      23: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: invokevirtual #95                 // Method getBytesPerPixelUnit:()I
      31: istore        4
      33: iload_2
      34: iload         4
      36: imul
      37: istore        5
      39: iload         4
      41: iconst_1
      42: if_icmpne     53
      45: invokestatic  #96                 // Method com/sun/javafx/image/impl/ByteGray.ToIntArgbPreConverter:()Lcom/sun/javafx/image/ByteToIntPixelConverter;
      48: astore        6
      50: goto          76
      53: aload_0
      54: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
      57: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
      60: if_acmpne     71
      63: invokestatic  #97                 // Method com/sun/javafx/image/impl/ByteBgraPre.ToIntArgbPreConverter:()Lcom/sun/javafx/image/ByteToIntPixelConverter;
      66: astore        6
      68: goto          76
      71: invokestatic  #98                 // Method com/sun/javafx/image/impl/ByteRgb.ToIntArgbPreConverter:()Lcom/sun/javafx/image/ByteToIntPixelConverter;
      74: astore        6
      76: iload_2
      77: iload_3
      78: imul
      79: newarray       int
      81: astore        7
      83: aload         6
      85: aload_1
      86: iconst_0
      87: iload         5
      89: aload         7
      91: iconst_0
      92: iload_2
      93: iload_2
      94: iload_3
      95: invokeinterface #99,  9           // InterfaceMethod com/sun/javafx/image/ByteToIntPixelConverter.convert:(Ljava/nio/ByteBuffer;II[IIIII)V
     100: new           #7                  // class com/sun/prism/Image
     103: dup
     104: getstatic     #8                  // Field com/sun/prism/PixelFormat.INT_ARGB_PRE:Lcom/sun/prism/PixelFormat;
     107: aload         7
     109: iload_2
     110: iload_3
     111: invokespecial #9                  // Method "<init>":(Lcom/sun/prism/PixelFormat;[III)V
     114: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #100                // Method java/lang/Object.toString:()Ljava/lang/String;
       4: aload_0
       5: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       8: aload_0
       9: getfield      #2                  // Field width:I
      12: aload_0
      13: getfield      #1                  // Field height:I
      16: aload_0
      17: getfield      #6                  // Field scanlineStride:I
      20: aload_0
      21: getfield      #3                  // Field minX:I
      24: aload_0
      25: getfield      #4                  // Field minY:I
      28: aload_0
      29: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
      32: aload_0
      33: invokevirtual #95                 // Method getBytesPerPixelUnit:()I
      36: invokedynamic #101,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Lcom/sun/prism/PixelFormat;IIIIILjava/nio/Buffer;I)Ljava/lang/String;
      41: areturn

  public int getSerial();
    Code:
       0: aload_0
       1: getfield      #48                 // Field serial:[I
       4: iconst_0
       5: iaload
       6: ireturn

  public com.sun.prism.Image promoteByteRgbToByteBgra();
    Code:
       0: aload_0
       1: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
       4: checkcast     #22                 // class java/nio/ByteBuffer
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field width:I
      12: aload_0
      13: getfield      #1                  // Field height:I
      16: imul
      17: iconst_4
      18: imul
      19: invokestatic  #102                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      22: astore_2
      23: aload_0
      24: getfield      #4                  // Field minY:I
      27: aload_0
      28: getfield      #6                  // Field scanlineStride:I
      31: imul
      32: aload_0
      33: getfield      #3                  // Field minX:I
      36: iconst_3
      37: imul
      38: iadd
      39: istore_3
      40: invokestatic  #103                // Method com/sun/javafx/image/impl/ByteRgb.ToByteBgraPreConverter:()Lcom/sun/javafx/image/ByteToBytePixelConverter;
      43: aload_1
      44: iload_3
      45: aload_0
      46: getfield      #6                  // Field scanlineStride:I
      49: aload_2
      50: iconst_0
      51: aload_0
      52: getfield      #2                  // Field width:I
      55: iconst_4
      56: imul
      57: aload_0
      58: getfield      #2                  // Field width:I
      61: aload_0
      62: getfield      #1                  // Field height:I
      65: invokeinterface #33,  9           // InterfaceMethod com/sun/javafx/image/ByteToBytePixelConverter.convert:(Ljava/nio/Buffer;IILjava/nio/Buffer;IIII)V
      70: new           #7                  // class com/sun/prism/Image
      73: dup
      74: getstatic     #13                 // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
      77: aload_2
      78: aload_0
      79: getfield      #2                  // Field width:I
      82: aload_0
      83: getfield      #1                  // Field height:I
      86: iconst_0
      87: iconst_0
      88: aload_0
      89: getfield      #2                  // Field width:I
      92: iconst_4
      93: imul
      94: aload_0
      95: invokevirtual #104                // Method getPixelScale:()F
      98: invokespecial #12                 // Method "<init>":(Lcom/sun/prism/PixelFormat;Ljava/nio/Buffer;IIIIIF)V
     101: areturn

  private com.sun.prism.Image$Accessor<?> getPixelAccessor();
    Code:
       0: aload_0
       1: getfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
       4: ifnonnull     180
       7: getstatic     #106                // Field com/sun/prism/Image$1.$SwitchMap$com$sun$prism$PixelFormat:[I
      10: aload_0
      11: invokevirtual #107                // Method getPixelFormat:()Lcom/sun/prism/PixelFormat;
      14: invokevirtual #108                // Method com/sun/prism/PixelFormat.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 8
                     1: 64
                     2: 64
                     3: 64
                     4: 64
                     5: 80
                     6: 110
                     7: 132
                     8: 158
               default: 64
          }
      64: aload_0
      65: new           #109                // class com/sun/prism/Image$UnsupportedAccess
      68: dup
      69: aload_0
      70: aconst_null
      71: invokespecial #110                // Method com/sun/prism/Image$UnsupportedAccess."<init>":(Lcom/sun/prism/Image;Lcom/sun/prism/Image$1;)V
      74: putfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
      77: goto          180
      80: aload_0
      81: new           #111                // class com/sun/prism/Image$ByteAccess
      84: dup
      85: aload_0
      86: invokestatic  #112                // Method getGrayFXPixelFormat:()Ljavafx/scene/image/PixelFormat;
      89: getstatic     #113                // Field com/sun/javafx/image/impl/ByteGray.getter:Lcom/sun/javafx/image/BytePixelGetter;
      92: aconst_null
      93: aload_0
      94: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
      97: checkcast     #22                 // class java/nio/ByteBuffer
     100: iconst_1
     101: invokespecial #114                // Method com/sun/prism/Image$ByteAccess."<init>":(Lcom/sun/prism/Image;Ljavafx/scene/image/PixelFormat;Lcom/sun/javafx/image/PixelGetter;Lcom/sun/javafx/image/PixelSetter;Ljava/nio/ByteBuffer;I)V
     104: putfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     107: goto          180
     110: aload_0
     111: new           #115                // class com/sun/prism/Image$ByteRgbAccess
     114: dup
     115: aload_0
     116: aload_0
     117: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
     120: checkcast     #22                 // class java/nio/ByteBuffer
     123: invokespecial #116                // Method com/sun/prism/Image$ByteRgbAccess."<init>":(Lcom/sun/prism/Image;Ljava/nio/ByteBuffer;)V
     126: putfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     129: goto          180
     132: aload_0
     133: new           #111                // class com/sun/prism/Image$ByteAccess
     136: dup
     137: aload_0
     138: getstatic     #117                // Field FX_ByteBgraPre_FORMAT:Ljavafx/scene/image/WritablePixelFormat;
     141: aload_0
     142: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
     145: checkcast     #22                 // class java/nio/ByteBuffer
     148: iconst_4
     149: invokespecial #118                // Method com/sun/prism/Image$ByteAccess."<init>":(Lcom/sun/prism/Image;Ljavafx/scene/image/PixelFormat;Ljava/nio/ByteBuffer;I)V
     152: putfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     155: goto          180
     158: aload_0
     159: new           #119                // class com/sun/prism/Image$IntAccess
     162: dup
     163: aload_0
     164: getstatic     #120                // Field FX_IntArgbPre_FORMAT:Ljavafx/scene/image/WritablePixelFormat;
     167: aload_0
     168: getfield      #60                 // Field pixelBuffer:Ljava/nio/Buffer;
     171: checkcast     #78                 // class java/nio/IntBuffer
     174: invokespecial #121                // Method com/sun/prism/Image$IntAccess."<init>":(Lcom/sun/prism/Image;Ljavafx/scene/image/PixelFormat;Ljava/nio/IntBuffer;)V
     177: putfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     180: aload_0
     181: getfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     184: ifnull        216
     187: aload_0
     188: getfield      #61                 // Field pixelScale:F
     191: fconst_1
     192: fcmpl
     193: ifeq          216
     196: aload_0
     197: new           #122                // class com/sun/prism/Image$ScaledAccessor
     200: dup
     201: aload_0
     202: aload_0
     203: getfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     206: aload_0
     207: getfield      #61                 // Field pixelScale:F
     210: invokespecial #123                // Method com/sun/prism/Image$ScaledAccessor."<init>":(Lcom/sun/prism/Image;Lcom/sun/prism/Image$Accessor;F)V
     213: putfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     216: aload_0
     217: getfield      #105                // Field pixelaccessor:Lcom/sun/prism/Image$Accessor;
     220: areturn

  public javafx.scene.image.PixelFormat<?> getPlatformPixelFormat();
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: invokevirtual #125                // Method com/sun/prism/Image$Accessor.getPlatformPixelFormat:()Ljavafx/scene/image/PixelFormat;
       7: areturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: invokevirtual #126                // Method com/sun/prism/Image$Accessor.isWritable:()Z
       7: ireturn

  public com.sun.javafx.tk.PlatformImage promoteToWritableImage();
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: invokevirtual #127                // Method com/sun/prism/Image$Accessor.promoteToWritableImage:()Lcom/sun/javafx/tk/PlatformImage;
       7: areturn

  public int getArgb(int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: invokevirtual #128                // Method com/sun/prism/Image$Accessor.getArgb:(II)I
       9: ireturn

  public void setArgb(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #129                // Method com/sun/prism/Image$Accessor.setArgb:(III)V
      10: aload_0
      11: getfield      #48                 // Field serial:[I
      14: iconst_0
      15: dup2
      16: iaload
      17: iconst_1
      18: iadd
      19: iastore
      20: return

  public <T extends java.nio.Buffer> void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<T>, T, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: iload         7
      15: invokevirtual #130                // Method com/sun/prism/Image$Accessor.getPixels:(IIIILjavafx/scene/image/WritablePixelFormat;Ljava/nio/Buffer;I)V
      18: return

  public void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<java.nio.ByteBuffer>, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: iload         7
      15: iload         8
      17: invokevirtual #131                // Method com/sun/prism/Image$Accessor.getPixels:(IIIILjavafx/scene/image/WritablePixelFormat;[BII)V
      20: return

  public void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<java.nio.IntBuffer>, int[], int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: iload         7
      15: iload         8
      17: invokevirtual #132                // Method com/sun/prism/Image$Accessor.getPixels:(IIIILjavafx/scene/image/WritablePixelFormat;[III)V
      20: return

  public <T extends java.nio.Buffer> void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<T>, T, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: iload         7
      15: invokevirtual #133                // Method com/sun/prism/Image$Accessor.setPixels:(IIIILjavafx/scene/image/PixelFormat;Ljava/nio/Buffer;I)V
      18: aload_0
      19: getfield      #48                 // Field serial:[I
      22: iconst_0
      23: dup2
      24: iaload
      25: iconst_1
      26: iadd
      27: iastore
      28: return

  public void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<java.nio.ByteBuffer>, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: iload         7
      15: iload         8
      17: invokevirtual #134                // Method com/sun/prism/Image$Accessor.setPixels:(IIIILjavafx/scene/image/PixelFormat;[BII)V
      20: aload_0
      21: getfield      #48                 // Field serial:[I
      24: iconst_0
      25: dup2
      26: iaload
      27: iconst_1
      28: iadd
      29: iastore
      30: return

  public void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<java.nio.IntBuffer>, int[], int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: iload         7
      15: iload         8
      17: invokevirtual #135                // Method com/sun/prism/Image$Accessor.setPixels:(IIIILjavafx/scene/image/PixelFormat;[III)V
      20: aload_0
      21: getfield      #48                 // Field serial:[I
      24: iconst_0
      25: dup2
      26: iaload
      27: iconst_1
      28: iadd
      29: iastore
      30: return

  public void setPixels(int, int, int, int, javafx.scene.image.PixelReader, int, int);
    Code:
       0: aload_0
       1: invokespecial #124                // Method getPixelAccessor:()Lcom/sun/prism/Image$Accessor;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: iload         6
      13: iload         7
      15: invokevirtual #136                // Method com/sun/prism/Image$Accessor.setPixels:(IIIILjavafx/scene/image/PixelReader;II)V
      18: aload_0
      19: getfield      #48                 // Field serial:[I
      22: iconst_0
      23: dup2
      24: iaload
      25: iconst_1
      26: iadd
      27: iastore
      28: return

  public boolean isOpaque();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       4: invokevirtual #137                // Method com/sun/prism/PixelFormat.isOpaque:()Z
       7: ireturn

  static <I extends java.nio.Buffer> com.sun.javafx.image.PixelSetter<I> getSetterIfWritable(javafx.scene.image.PixelFormat<I>);
    Code:
       0: aload_0
       1: instanceof    #138                // class javafx/scene/image/WritablePixelFormat
       4: ifeq          15
       7: aload_0
       8: checkcast     #138                // class javafx/scene/image/WritablePixelFormat
      11: invokestatic  #139                // Method com/sun/javafx/image/PixelUtils.getSetter:(Ljavafx/scene/image/WritablePixelFormat;)Lcom/sun/javafx/image/PixelSetter;
      14: areturn
      15: aconst_null
      16: areturn

  static javafx.scene.image.PixelFormat<java.nio.ByteBuffer> getGrayFXPixelFormat();
    Code:
       0: getstatic     #140                // Field FX_ByteGray_FORMAT:Ljavafx/scene/image/PixelFormat;
       3: ifnonnull     46
       6: sipush        256
       9: newarray       int
      11: astore_0
      12: ldc           #141                // int -16777216
      14: istore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: sipush        256
      21: if_icmpge     39
      24: aload_0
      25: iload_2
      26: iload_1
      27: iastore
      28: iload_1
      29: ldc           #142                // int 65793
      31: iadd
      32: istore_1
      33: iinc          2, 1
      36: goto          17
      39: aload_0
      40: invokestatic  #143                // Method javafx/scene/image/PixelFormat.createByteIndexedPremultipliedInstance:([I)Ljavafx/scene/image/PixelFormat;
      43: putstatic     #140                // Field FX_ByteGray_FORMAT:Ljavafx/scene/image/PixelFormat;
      46: getstatic     #140                // Field FX_ByteGray_FORMAT:Ljavafx/scene/image/PixelFormat;
      49: areturn

  static int access$100(com.sun.prism.Image);
    Code:
       0: aload_0
       1: getfield      #6                  // Field scanlineStride:I
       4: ireturn

  static com.sun.prism.PixelFormat access$200(com.sun.prism.Image);
    Code:
       0: aload_0
       1: getfield      #5                  // Field pixelFormat:Lcom/sun/prism/PixelFormat;
       4: areturn

  static int access$300(com.sun.prism.Image);
    Code:
       0: aload_0
       1: getfield      #4                  // Field minY:I
       4: ireturn

  static int access$400(com.sun.prism.Image);
    Code:
       0: aload_0
       1: getfield      #3                  // Field minX:I
       4: ireturn

  static int access$500(com.sun.prism.Image);
    Code:
       0: aload_0
       1: getfield      #2                  // Field width:I
       4: ireturn

  static int access$600(com.sun.prism.Image);
    Code:
       0: aload_0
       1: getfield      #1                  // Field height:I
       4: ireturn

  static {};
    Code:
       0: invokestatic  #144                // Method javafx/scene/image/PixelFormat.getByteBgraPreInstance:()Ljavafx/scene/image/WritablePixelFormat;
       3: putstatic     #117                // Field FX_ByteBgraPre_FORMAT:Ljavafx/scene/image/WritablePixelFormat;
       6: invokestatic  #145                // Method javafx/scene/image/PixelFormat.getIntArgbPreInstance:()Ljavafx/scene/image/WritablePixelFormat;
       9: putstatic     #120                // Field FX_IntArgbPre_FORMAT:Ljavafx/scene/image/WritablePixelFormat;
      12: invokestatic  #146                // Method javafx/scene/image/PixelFormat.getByteRgbInstance:()Ljavafx/scene/image/PixelFormat;
      15: putstatic     #147                // Field FX_ByteRgb_FORMAT:Ljavafx/scene/image/PixelFormat;
      18: return
}
