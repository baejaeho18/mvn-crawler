Compiled from "MultipleGradientPaintContext.java"
abstract class com.sun.prism.j2d.paint.MultipleGradientPaintContext implements java.awt.PaintContext {
  protected java.awt.image.ColorModel model;

  private static java.awt.image.ColorModel xrgbmodel;

  protected static java.awt.image.ColorModel cachedModel;

  protected static java.lang.ref.WeakReference<java.awt.image.Raster> cached;

  protected java.awt.image.Raster saved;

  protected com.sun.prism.j2d.paint.MultipleGradientPaint$CycleMethod cycleMethod;

  protected com.sun.prism.j2d.paint.MultipleGradientPaint$ColorSpaceType colorSpace;

  protected float a00;

  protected float a01;

  protected float a10;

  protected float a11;

  protected float a02;

  protected float a12;

  protected boolean isSimpleLookup;

  protected int fastGradientArraySize;

  protected int[] gradient;

  private int[][] gradients;

  private float[] normalizedIntervals;

  private float[] fractions;

  private int transparencyTest;

  private static final int[] SRGBtoLinearRGB;

  private static final int[] LinearRGBtoSRGB;

  protected static final int GRADIENT_SIZE;

  protected static final int GRADIENT_SIZE_INDEX;

  private static final int MAX_GRADIENT_ARRAY_SIZE;

  protected com.sun.prism.j2d.paint.MultipleGradientPaintContext(com.sun.prism.j2d.paint.MultipleGradientPaint, java.awt.image.ColorModel, java.awt.Rectangle, java.awt.geom.Rectangle2D, java.awt.geom.AffineTransform, java.awt.RenderingHints, float[], java.awt.Color[], com.sun.prism.j2d.paint.MultipleGradientPaint$CycleMethod, com.sun.prism.j2d.paint.MultipleGradientPaint$ColorSpaceType);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_3
       5: ifnonnull     18
       8: new           #3                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #4                  // String Device bounds cannot be null
      14: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload         4
      20: ifnonnull     33
      23: new           #3                  // class java/lang/NullPointerException
      26: dup
      27: ldc           #6                  // String User bounds cannot be null
      29: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload         5
      35: ifnonnull     48
      38: new           #3                  // class java/lang/NullPointerException
      41: dup
      42: ldc           #7                  // String Transform cannot be null
      44: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload         5
      50: invokevirtual #8                  // Method java/awt/geom/AffineTransform.createInverse:()Ljava/awt/geom/AffineTransform;
      53: astore        11
      55: goto          69
      58: astore        12
      60: new           #10                 // class java/awt/geom/AffineTransform
      63: dup
      64: invokespecial #11                 // Method java/awt/geom/AffineTransform."<init>":()V
      67: astore        11
      69: bipush        6
      71: newarray       double
      73: astore        12
      75: aload         11
      77: aload         12
      79: invokevirtual #12                 // Method java/awt/geom/AffineTransform.getMatrix:([D)V
      82: aload_0
      83: aload         12
      85: iconst_0
      86: daload
      87: d2f
      88: putfield      #13                 // Field a00:F
      91: aload_0
      92: aload         12
      94: iconst_1
      95: daload
      96: d2f
      97: putfield      #14                 // Field a10:F
     100: aload_0
     101: aload         12
     103: iconst_2
     104: daload
     105: d2f
     106: putfield      #15                 // Field a01:F
     109: aload_0
     110: aload         12
     112: iconst_3
     113: daload
     114: d2f
     115: putfield      #16                 // Field a11:F
     118: aload_0
     119: aload         12
     121: iconst_4
     122: daload
     123: d2f
     124: putfield      #17                 // Field a02:F
     127: aload_0
     128: aload         12
     130: iconst_5
     131: daload
     132: d2f
     133: putfield      #18                 // Field a12:F
     136: aload_0
     137: aload         9
     139: putfield      #19                 // Field cycleMethod:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod;
     142: aload_0
     143: aload         10
     145: putfield      #20                 // Field colorSpace:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
     148: aload_0
     149: aload         7
     151: putfield      #21                 // Field fractions:[F
     154: aload_0
     155: aload_1
     156: getfield      #22                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.gradient:Ljava/lang/ref/SoftReference;
     159: ifnull        175
     162: aload_1
     163: getfield      #22                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.gradient:Ljava/lang/ref/SoftReference;
     166: invokevirtual #23                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
     169: checkcast     #24                 // class "[I"
     172: goto          176
     175: aconst_null
     176: putfield      #25                 // Field gradient:[I
     179: aload_0
     180: aload_1
     181: getfield      #26                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.gradients:Ljava/lang/ref/SoftReference;
     184: ifnull        200
     187: aload_1
     188: getfield      #26                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.gradients:Ljava/lang/ref/SoftReference;
     191: invokevirtual #23                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
     194: checkcast     #27                 // class "[[I"
     197: goto          201
     200: aconst_null
     201: putfield      #28                 // Field gradients:[[I
     204: aload_0
     205: getfield      #25                 // Field gradient:[I
     208: ifnonnull     299
     211: aload_0
     212: getfield      #28                 // Field gradients:[[I
     215: ifnonnull     299
     218: aload_0
     219: aload         8
     221: invokespecial #29                 // Method calculateLookupData:([Ljava/awt/Color;)V
     224: aload_1
     225: aload_0
     226: getfield      #30                 // Field model:Ljava/awt/image/ColorModel;
     229: putfield      #31                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.model:Ljava/awt/image/ColorModel;
     232: aload_1
     233: aload_0
     234: getfield      #32                 // Field normalizedIntervals:[F
     237: putfield      #33                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.normalizedIntervals:[F
     240: aload_1
     241: aload_0
     242: getfield      #34                 // Field isSimpleLookup:Z
     245: putfield      #35                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.isSimpleLookup:Z
     248: aload_0
     249: getfield      #34                 // Field isSimpleLookup:Z
     252: ifeq          281
     255: aload_1
     256: aload_0
     257: getfield      #36                 // Field fastGradientArraySize:I
     260: putfield      #37                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.fastGradientArraySize:I
     263: aload_1
     264: new           #38                 // class java/lang/ref/SoftReference
     267: dup
     268: aload_0
     269: getfield      #25                 // Field gradient:[I
     272: invokespecial #39                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
     275: putfield      #22                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.gradient:Ljava/lang/ref/SoftReference;
     278: goto          331
     281: aload_1
     282: new           #38                 // class java/lang/ref/SoftReference
     285: dup
     286: aload_0
     287: getfield      #28                 // Field gradients:[[I
     290: invokespecial #39                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
     293: putfield      #26                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.gradients:Ljava/lang/ref/SoftReference;
     296: goto          331
     299: aload_0
     300: aload_1
     301: getfield      #31                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.model:Ljava/awt/image/ColorModel;
     304: putfield      #30                 // Field model:Ljava/awt/image/ColorModel;
     307: aload_0
     308: aload_1
     309: getfield      #33                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.normalizedIntervals:[F
     312: putfield      #32                 // Field normalizedIntervals:[F
     315: aload_0
     316: aload_1
     317: getfield      #35                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.isSimpleLookup:Z
     320: putfield      #34                 // Field isSimpleLookup:Z
     323: aload_0
     324: aload_1
     325: getfield      #37                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint.fastGradientArraySize:I
     328: putfield      #36                 // Field fastGradientArraySize:I
     331: return
    Exception table:
       from    to  target type
          48    55    58   Class java/awt/geom/NoninvertibleTransformException

  private void calculateLookupData(java.awt.Color[]);
    Code:
       0: aload_0
       1: getfield      #20                 // Field colorSpace:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
       4: getstatic     #40                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType.LINEAR_RGB:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
       7: if_acmpne     108
      10: aload_1
      11: arraylength
      12: anewarray     #41                 // class java/awt/Color
      15: astore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_1
      20: arraylength
      21: if_icmpge     105
      24: aload_1
      25: iload_3
      26: aaload
      27: invokevirtual #42                 // Method java/awt/Color.getRGB:()I
      30: istore        4
      32: iload         4
      34: bipush        24
      36: iushr
      37: istore        5
      39: getstatic     #43                 // Field SRGBtoLinearRGB:[I
      42: iload         4
      44: bipush        16
      46: ishr
      47: sipush        255
      50: iand
      51: iaload
      52: istore        6
      54: getstatic     #43                 // Field SRGBtoLinearRGB:[I
      57: iload         4
      59: bipush        8
      61: ishr
      62: sipush        255
      65: iand
      66: iaload
      67: istore        7
      69: getstatic     #43                 // Field SRGBtoLinearRGB:[I
      72: iload         4
      74: sipush        255
      77: iand
      78: iaload
      79: istore        8
      81: aload_2
      82: iload_3
      83: new           #41                 // class java/awt/Color
      86: dup
      87: iload         6
      89: iload         7
      91: iload         8
      93: iload         5
      95: invokespecial #44                 // Method java/awt/Color."<init>":(IIII)V
      98: aastore
      99: iinc          3, 1
     102: goto          18
     105: goto          110
     108: aload_1
     109: astore_2
     110: aload_0
     111: aload_0
     112: getfield      #21                 // Field fractions:[F
     115: arraylength
     116: iconst_1
     117: isub
     118: newarray       float
     120: putfield      #32                 // Field normalizedIntervals:[F
     123: iconst_0
     124: istore_3
     125: iload_3
     126: aload_0
     127: getfield      #32                 // Field normalizedIntervals:[F
     130: arraylength
     131: if_icmpge     161
     134: aload_0
     135: getfield      #32                 // Field normalizedIntervals:[F
     138: iload_3
     139: aload_0
     140: getfield      #21                 // Field fractions:[F
     143: iload_3
     144: iconst_1
     145: iadd
     146: faload
     147: aload_0
     148: getfield      #21                 // Field fractions:[F
     151: iload_3
     152: faload
     153: fsub
     154: fastore
     155: iinc          3, 1
     158: goto          125
     161: aload_0
     162: ldc           #45                 // int -16777216
     164: putfield      #46                 // Field transparencyTest:I
     167: aload_0
     168: aload_0
     169: getfield      #32                 // Field normalizedIntervals:[F
     172: arraylength
     173: anewarray     #24                 // class "[I"
     176: putfield      #28                 // Field gradients:[[I
     179: fconst_1
     180: fstore_3
     181: iconst_0
     182: istore        4
     184: iload         4
     186: aload_0
     187: getfield      #32                 // Field normalizedIntervals:[F
     190: arraylength
     191: if_icmpge     224
     194: fload_3
     195: aload_0
     196: getfield      #32                 // Field normalizedIntervals:[F
     199: iload         4
     201: faload
     202: fcmpl
     203: ifle          216
     206: aload_0
     207: getfield      #32                 // Field normalizedIntervals:[F
     210: iload         4
     212: faload
     213: goto          217
     216: fload_3
     217: fstore_3
     218: iinc          4, 1
     221: goto          184
     224: iconst_0
     225: istore        4
     227: iconst_0
     228: istore        5
     230: iload         5
     232: aload_0
     233: getfield      #32                 // Field normalizedIntervals:[F
     236: arraylength
     237: if_icmpge     265
     240: iload         4
     242: i2f
     243: aload_0
     244: getfield      #32                 // Field normalizedIntervals:[F
     247: iload         5
     249: faload
     250: fload_3
     251: fdiv
     252: ldc           #47                 // float 256.0f
     254: fmul
     255: fadd
     256: f2i
     257: istore        4
     259: iinc          5, 1
     262: goto          230
     265: iload         4
     267: sipush        5000
     270: if_icmple     281
     273: aload_0
     274: aload_2
     275: invokespecial #48                 // Method calculateMultipleArrayGradient:([Ljava/awt/Color;)V
     278: goto          287
     281: aload_0
     282: aload_2
     283: fload_3
     284: invokespecial #49                 // Method calculateSingleArrayGradient:([Ljava/awt/Color;F)V
     287: aload_0
     288: getfield      #46                 // Field transparencyTest:I
     291: bipush        24
     293: iushr
     294: sipush        255
     297: if_icmpne     310
     300: aload_0
     301: getstatic     #50                 // Field xrgbmodel:Ljava/awt/image/ColorModel;
     304: putfield      #30                 // Field model:Ljava/awt/image/ColorModel;
     307: goto          317
     310: aload_0
     311: invokestatic  #51                 // Method java/awt/image/ColorModel.getRGBdefault:()Ljava/awt/image/ColorModel;
     314: putfield      #30                 // Field model:Ljava/awt/image/ColorModel;
     317: return

  private void calculateSingleArrayGradient(java.awt.Color[], float);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field isSimpleLookup:Z
       5: iconst_1
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: aload_0
      14: getfield      #28                 // Field gradients:[[I
      17: arraylength
      18: if_icmpge     114
      21: aload_0
      22: getfield      #32                 // Field normalizedIntervals:[F
      25: iload         6
      27: faload
      28: fload_2
      29: fdiv
      30: ldc           #52                 // float 255.0f
      32: fmul
      33: f2i
      34: istore        7
      36: iload         5
      38: iload         7
      40: iadd
      41: istore        5
      43: aload_0
      44: getfield      #28                 // Field gradients:[[I
      47: iload         6
      49: iload         7
      51: newarray       int
      53: aastore
      54: aload_1
      55: iload         6
      57: aaload
      58: invokevirtual #42                 // Method java/awt/Color.getRGB:()I
      61: istore_3
      62: aload_1
      63: iload         6
      65: iconst_1
      66: iadd
      67: aaload
      68: invokevirtual #42                 // Method java/awt/Color.getRGB:()I
      71: istore        4
      73: aload_0
      74: iload_3
      75: iload         4
      77: aload_0
      78: getfield      #28                 // Field gradients:[[I
      81: iload         6
      83: aaload
      84: invokespecial #53                 // Method interpolate:(II[I)V
      87: aload_0
      88: dup
      89: getfield      #46                 // Field transparencyTest:I
      92: iload_3
      93: iand
      94: putfield      #46                 // Field transparencyTest:I
      97: aload_0
      98: dup
      99: getfield      #46                 // Field transparencyTest:I
     102: iload         4
     104: iand
     105: putfield      #46                 // Field transparencyTest:I
     108: iinc          6, 1
     111: goto          11
     114: aload_0
     115: iload         5
     117: newarray       int
     119: putfield      #25                 // Field gradient:[I
     122: iconst_0
     123: istore        6
     125: iconst_0
     126: istore        7
     128: iload         7
     130: aload_0
     131: getfield      #28                 // Field gradients:[[I
     134: arraylength
     135: if_icmpge     182
     138: aload_0
     139: getfield      #28                 // Field gradients:[[I
     142: iload         7
     144: aaload
     145: iconst_0
     146: aload_0
     147: getfield      #25                 // Field gradient:[I
     150: iload         6
     152: aload_0
     153: getfield      #28                 // Field gradients:[[I
     156: iload         7
     158: aaload
     159: arraylength
     160: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     163: iload         6
     165: aload_0
     166: getfield      #28                 // Field gradients:[[I
     169: iload         7
     171: aaload
     172: arraylength
     173: iadd
     174: istore        6
     176: iinc          7, 1
     179: goto          128
     182: aload_0
     183: getfield      #25                 // Field gradient:[I
     186: aload_0
     187: getfield      #25                 // Field gradient:[I
     190: arraylength
     191: iconst_1
     192: isub
     193: aload_1
     194: aload_1
     195: arraylength
     196: iconst_1
     197: isub
     198: aaload
     199: invokevirtual #42                 // Method java/awt/Color.getRGB:()I
     202: iastore
     203: aload_0
     204: getfield      #20                 // Field colorSpace:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
     207: getstatic     #40                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType.LINEAR_RGB:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
     210: if_acmpne     250
     213: iconst_0
     214: istore        7
     216: iload         7
     218: aload_0
     219: getfield      #25                 // Field gradient:[I
     222: arraylength
     223: if_icmpge     250
     226: aload_0
     227: getfield      #25                 // Field gradient:[I
     230: iload         7
     232: aload_0
     233: aload_0
     234: getfield      #25                 // Field gradient:[I
     237: iload         7
     239: iaload
     240: invokespecial #55                 // Method convertEntireColorLinearRGBtoSRGB:(I)I
     243: iastore
     244: iinc          7, 1
     247: goto          216
     250: aload_0
     251: aload_0
     252: getfield      #25                 // Field gradient:[I
     255: arraylength
     256: iconst_1
     257: isub
     258: putfield      #36                 // Field fastGradientArraySize:I
     261: return

  private void calculateMultipleArrayGradient(java.awt.Color[]);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #34                 // Field isSimpleLookup:Z
       5: iconst_0
       6: istore        4
       8: iload         4
      10: aload_0
      11: getfield      #28                 // Field gradients:[[I
      14: arraylength
      15: if_icmpge     87
      18: aload_0
      19: getfield      #28                 // Field gradients:[[I
      22: iload         4
      24: sipush        256
      27: newarray       int
      29: aastore
      30: aload_1
      31: iload         4
      33: aaload
      34: invokevirtual #42                 // Method java/awt/Color.getRGB:()I
      37: istore_2
      38: aload_1
      39: iload         4
      41: iconst_1
      42: iadd
      43: aaload
      44: invokevirtual #42                 // Method java/awt/Color.getRGB:()I
      47: istore_3
      48: aload_0
      49: iload_2
      50: iload_3
      51: aload_0
      52: getfield      #28                 // Field gradients:[[I
      55: iload         4
      57: aaload
      58: invokespecial #53                 // Method interpolate:(II[I)V
      61: aload_0
      62: dup
      63: getfield      #46                 // Field transparencyTest:I
      66: iload_2
      67: iand
      68: putfield      #46                 // Field transparencyTest:I
      71: aload_0
      72: dup
      73: getfield      #46                 // Field transparencyTest:I
      76: iload_3
      77: iand
      78: putfield      #46                 // Field transparencyTest:I
      81: iinc          4, 1
      84: goto          8
      87: aload_0
      88: getfield      #20                 // Field colorSpace:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
      91: getstatic     #40                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType.LINEAR_RGB:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$ColorSpaceType;
      94: if_acmpne     162
      97: iconst_0
      98: istore        4
     100: iload         4
     102: aload_0
     103: getfield      #28                 // Field gradients:[[I
     106: arraylength
     107: if_icmpge     162
     110: iconst_0
     111: istore        5
     113: iload         5
     115: aload_0
     116: getfield      #28                 // Field gradients:[[I
     119: iload         4
     121: aaload
     122: arraylength
     123: if_icmpge     156
     126: aload_0
     127: getfield      #28                 // Field gradients:[[I
     130: iload         4
     132: aaload
     133: iload         5
     135: aload_0
     136: aload_0
     137: getfield      #28                 // Field gradients:[[I
     140: iload         4
     142: aaload
     143: iload         5
     145: iaload
     146: invokespecial #55                 // Method convertEntireColorLinearRGBtoSRGB:(I)I
     149: iastore
     150: iinc          5, 1
     153: goto          113
     156: iinc          4, 1
     159: goto          100
     162: return

  private void interpolate(int, int, int[]);
    Code:
       0: fconst_1
       1: aload_3
       2: arraylength
       3: i2f
       4: fdiv
       5: fstore        12
       7: iload_1
       8: bipush        24
      10: ishr
      11: sipush        255
      14: iand
      15: istore        4
      17: iload_1
      18: bipush        16
      20: ishr
      21: sipush        255
      24: iand
      25: istore        5
      27: iload_1
      28: bipush        8
      30: ishr
      31: sipush        255
      34: iand
      35: istore        6
      37: iload_1
      38: sipush        255
      41: iand
      42: istore        7
      44: iload_2
      45: bipush        24
      47: ishr
      48: sipush        255
      51: iand
      52: iload         4
      54: isub
      55: istore        8
      57: iload_2
      58: bipush        16
      60: ishr
      61: sipush        255
      64: iand
      65: iload         5
      67: isub
      68: istore        9
      70: iload_2
      71: bipush        8
      73: ishr
      74: sipush        255
      77: iand
      78: iload         6
      80: isub
      81: istore        10
      83: iload_2
      84: sipush        255
      87: iand
      88: iload         7
      90: isub
      91: istore        11
      93: iconst_0
      94: istore        13
      96: iload         13
      98: aload_3
      99: arraylength
     100: if_icmpge     201
     103: aload_3
     104: iload         13
     106: iload         4
     108: i2f
     109: iload         13
     111: iload         8
     113: imul
     114: i2f
     115: fload         12
     117: fmul
     118: fadd
     119: f2d
     120: ldc2_w        #56                 // double 0.5d
     123: dadd
     124: d2i
     125: bipush        24
     127: ishl
     128: iload         5
     130: i2f
     131: iload         13
     133: iload         9
     135: imul
     136: i2f
     137: fload         12
     139: fmul
     140: fadd
     141: f2d
     142: ldc2_w        #56                 // double 0.5d
     145: dadd
     146: d2i
     147: bipush        16
     149: ishl
     150: ior
     151: iload         6
     153: i2f
     154: iload         13
     156: iload         10
     158: imul
     159: i2f
     160: fload         12
     162: fmul
     163: fadd
     164: f2d
     165: ldc2_w        #56                 // double 0.5d
     168: dadd
     169: d2i
     170: bipush        8
     172: ishl
     173: ior
     174: iload         7
     176: i2f
     177: iload         13
     179: iload         11
     181: imul
     182: i2f
     183: fload         12
     185: fmul
     186: fadd
     187: f2d
     188: ldc2_w        #56                 // double 0.5d
     191: dadd
     192: d2i
     193: ior
     194: iastore
     195: iinc          13, 1
     198: goto          96
     201: return

  private int convertEntireColorLinearRGBtoSRGB(int);
    Code:
       0: iload_1
       1: bipush        24
       3: ishr
       4: sipush        255
       7: iand
       8: istore_2
       9: iload_1
      10: bipush        16
      12: ishr
      13: sipush        255
      16: iand
      17: istore_3
      18: iload_1
      19: bipush        8
      21: ishr
      22: sipush        255
      25: iand
      26: istore        4
      28: iload_1
      29: sipush        255
      32: iand
      33: istore        5
      35: getstatic     #58                 // Field LinearRGBtoSRGB:[I
      38: iload_3
      39: iaload
      40: istore_3
      41: getstatic     #58                 // Field LinearRGBtoSRGB:[I
      44: iload         4
      46: iaload
      47: istore        4
      49: getstatic     #58                 // Field LinearRGBtoSRGB:[I
      52: iload         5
      54: iaload
      55: istore        5
      57: iload_2
      58: bipush        24
      60: ishl
      61: iload_3
      62: bipush        16
      64: ishl
      65: ior
      66: iload         4
      68: bipush        8
      70: ishl
      71: ior
      72: iload         5
      74: ior
      75: ireturn

  protected final int indexIntoGradientsArrays(float);
    Code:
       0: aload_0
       1: getfield      #19                 // Field cycleMethod:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod;
       4: getstatic     #59                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod.NO_CYCLE:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod;
       7: if_acmpne     32
      10: fload_1
      11: fconst_1
      12: fcmpl
      13: ifle          21
      16: fconst_1
      17: fstore_1
      18: goto          89
      21: fload_1
      22: fconst_0
      23: fcmpg
      24: ifge          89
      27: fconst_0
      28: fstore_1
      29: goto          89
      32: aload_0
      33: getfield      #19                 // Field cycleMethod:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod;
      36: getstatic     #60                 // Field com/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod.REPEAT:Lcom/sun/prism/j2d/paint/MultipleGradientPaint$CycleMethod;
      39: if_acmpne     61
      42: fload_1
      43: fload_1
      44: f2i
      45: i2f
      46: fsub
      47: fstore_1
      48: fload_1
      49: fconst_0
      50: fcmpg
      51: ifge          89
      54: fload_1
      55: fconst_1
      56: fadd
      57: fstore_1
      58: goto          89
      61: fload_1
      62: fconst_0
      63: fcmpg
      64: ifge          70
      67: fload_1
      68: fneg
      69: fstore_1
      70: fload_1
      71: f2i
      72: istore_2
      73: fload_1
      74: iload_2
      75: i2f
      76: fsub
      77: fstore_1
      78: iload_2
      79: iconst_1
      80: iand
      81: iconst_1
      82: if_icmpne     89
      85: fconst_1
      86: fload_1
      87: fsub
      88: fstore_1
      89: aload_0
      90: getfield      #34                 // Field isSimpleLookup:Z
      93: ifeq          110
      96: aload_0
      97: getfield      #25                 // Field gradient:[I
     100: fload_1
     101: aload_0
     102: getfield      #36                 // Field fastGradientArraySize:I
     105: i2f
     106: fmul
     107: f2i
     108: iaload
     109: ireturn
     110: iconst_0
     111: istore_2
     112: iload_2
     113: aload_0
     114: getfield      #28                 // Field gradients:[[I
     117: arraylength
     118: if_icmpge     173
     121: fload_1
     122: aload_0
     123: getfield      #21                 // Field fractions:[F
     126: iload_2
     127: iconst_1
     128: iadd
     129: faload
     130: fcmpg
     131: ifge          167
     134: fload_1
     135: aload_0
     136: getfield      #21                 // Field fractions:[F
     139: iload_2
     140: faload
     141: fsub
     142: fstore_3
     143: fload_3
     144: aload_0
     145: getfield      #32                 // Field normalizedIntervals:[F
     148: iload_2
     149: faload
     150: fdiv
     151: ldc           #52                 // float 255.0f
     153: fmul
     154: f2i
     155: istore        4
     157: aload_0
     158: getfield      #28                 // Field gradients:[[I
     161: iload_2
     162: aaload
     163: iload         4
     165: iaload
     166: ireturn
     167: iinc          2, 1
     170: goto          112
     173: aload_0
     174: getfield      #28                 // Field gradients:[[I
     177: aload_0
     178: getfield      #28                 // Field gradients:[[I
     181: arraylength
     182: iconst_1
     183: isub
     184: aaload
     185: sipush        255
     188: iaload
     189: ireturn

  private static int convertSRGBtoLinearRGB(int);
    Code:
       0: iload_0
       1: i2f
       2: ldc           #52                 // float 255.0f
       4: fdiv
       5: fstore_1
       6: fload_1
       7: ldc           #61                 // float 0.04045f
       9: fcmpg
      10: ifgt          21
      13: fload_1
      14: ldc           #62                 // float 12.92f
      16: fdiv
      17: fstore_2
      18: goto          39
      21: fload_1
      22: f2d
      23: ldc2_w        #63                 // double 0.055d
      26: dadd
      27: ldc2_w        #65                 // double 1.055d
      30: ddiv
      31: ldc2_w        #67                 // double 2.4d
      34: invokestatic  #69                 // Method java/lang/Math.pow:(DD)D
      37: d2f
      38: fstore_2
      39: fload_2
      40: ldc           #52                 // float 255.0f
      42: fmul
      43: invokestatic  #70                 // Method java/lang/Math.round:(F)I
      46: ireturn

  private static int convertLinearRGBtoSRGB(int);
    Code:
       0: iload_0
       1: i2f
       2: ldc           #52                 // float 255.0f
       4: fdiv
       5: fstore_1
       6: fload_1
       7: f2d
       8: ldc2_w        #71                 // double 0.0031308d
      11: dcmpg
      12: ifgt          23
      15: fload_1
      16: ldc           #62                 // float 12.92f
      18: fmul
      19: fstore_2
      20: goto          39
      23: ldc           #73                 // float 1.055f
      25: fload_1
      26: f2d
      27: ldc2_w        #74                 // double 0.4166666666666667d
      30: invokestatic  #69                 // Method java/lang/Math.pow:(DD)D
      33: d2f
      34: fmul
      35: ldc           #76                 // float 0.055f
      37: fsub
      38: fstore_2
      39: fload_2
      40: ldc           #52                 // float 255.0f
      42: fmul
      43: invokestatic  #70                 // Method java/lang/Math.round:(F)I
      46: ireturn

  public final java.awt.image.Raster getRaster(int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #77                 // Field saved:Ljava/awt/image/Raster;
       4: astore        5
       6: aload         5
       8: ifnull        30
      11: aload         5
      13: invokevirtual #78                 // Method java/awt/image/Raster.getWidth:()I
      16: iload_3
      17: if_icmplt     30
      20: aload         5
      22: invokevirtual #79                 // Method java/awt/image/Raster.getHeight:()I
      25: iload         4
      27: if_icmpge     48
      30: aload_0
      31: getfield      #30                 // Field model:Ljava/awt/image/ColorModel;
      34: iload_3
      35: iload         4
      37: invokestatic  #80                 // Method getCachedRaster:(Ljava/awt/image/ColorModel;II)Ljava/awt/image/Raster;
      40: astore        5
      42: aload_0
      43: aload         5
      45: putfield      #77                 // Field saved:Ljava/awt/image/Raster;
      48: aload         5
      50: invokevirtual #81                 // Method java/awt/image/Raster.getDataBuffer:()Ljava/awt/image/DataBuffer;
      53: checkcast     #82                 // class java/awt/image/DataBufferInt
      56: astore        6
      58: aload         6
      60: iconst_0
      61: invokevirtual #83                 // Method java/awt/image/DataBufferInt.getData:(I)[I
      64: astore        7
      66: aload         6
      68: invokevirtual #84                 // Method java/awt/image/DataBufferInt.getOffset:()I
      71: istore        8
      73: aload         5
      75: invokevirtual #85                 // Method java/awt/image/Raster.getSampleModel:()Ljava/awt/image/SampleModel;
      78: checkcast     #86                 // class java/awt/image/SinglePixelPackedSampleModel
      81: invokevirtual #87                 // Method java/awt/image/SinglePixelPackedSampleModel.getScanlineStride:()I
      84: istore        9
      86: iload         9
      88: iload_3
      89: isub
      90: istore        10
      92: aload_0
      93: aload         7
      95: iload         8
      97: iload         10
      99: iload_1
     100: iload_2
     101: iload_3
     102: iload         4
     104: invokevirtual #88                 // Method fillRaster:([IIIIIII)V
     107: aload         5
     109: areturn

  protected abstract void fillRaster(int[], int, int, int, int, int, int);

  private static synchronized java.awt.image.Raster getCachedRaster(java.awt.image.ColorModel, int, int);
    Code:
       0: aload_0
       1: getstatic     #89                 // Field cachedModel:Ljava/awt/image/ColorModel;
       4: if_acmpne     49
       7: getstatic     #90                 // Field cached:Ljava/lang/ref/WeakReference;
      10: ifnull        49
      13: getstatic     #90                 // Field cached:Ljava/lang/ref/WeakReference;
      16: invokevirtual #91                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      19: checkcast     #92                 // class java/awt/image/Raster
      22: astore_3
      23: aload_3
      24: ifnull        49
      27: aload_3
      28: invokevirtual #78                 // Method java/awt/image/Raster.getWidth:()I
      31: iload_1
      32: if_icmplt     49
      35: aload_3
      36: invokevirtual #79                 // Method java/awt/image/Raster.getHeight:()I
      39: iload_2
      40: if_icmplt     49
      43: aconst_null
      44: putstatic     #90                 // Field cached:Ljava/lang/ref/WeakReference;
      47: aload_3
      48: areturn
      49: aload_0
      50: iload_1
      51: iload_2
      52: invokevirtual #93                 // Method java/awt/image/ColorModel.createCompatibleWritableRaster:(II)Ljava/awt/image/WritableRaster;
      55: areturn

  private static synchronized void putCachedRaster(java.awt.image.ColorModel, java.awt.image.Raster);
    Code:
       0: getstatic     #90                 // Field cached:Ljava/lang/ref/WeakReference;
       3: ifnull        70
       6: getstatic     #90                 // Field cached:Ljava/lang/ref/WeakReference;
       9: invokevirtual #91                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      12: checkcast     #92                 // class java/awt/image/Raster
      15: astore_2
      16: aload_2
      17: ifnull        70
      20: aload_2
      21: invokevirtual #78                 // Method java/awt/image/Raster.getWidth:()I
      24: istore_3
      25: aload_2
      26: invokevirtual #79                 // Method java/awt/image/Raster.getHeight:()I
      29: istore        4
      31: aload_1
      32: invokevirtual #78                 // Method java/awt/image/Raster.getWidth:()I
      35: istore        5
      37: aload_1
      38: invokevirtual #79                 // Method java/awt/image/Raster.getHeight:()I
      41: istore        6
      43: iload_3
      44: iload         5
      46: if_icmplt     57
      49: iload         4
      51: iload         6
      53: if_icmplt     57
      56: return
      57: iload_3
      58: iload         4
      60: imul
      61: iload         5
      63: iload         6
      65: imul
      66: if_icmplt     70
      69: return
      70: aload_0
      71: putstatic     #89                 // Field cachedModel:Ljava/awt/image/ColorModel;
      74: new           #94                 // class java/lang/ref/WeakReference
      77: dup
      78: aload_1
      79: invokespecial #95                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      82: putstatic     #90                 // Field cached:Ljava/lang/ref/WeakReference;
      85: return

  public final void dispose();
    Code:
       0: aload_0
       1: getfield      #77                 // Field saved:Ljava/awt/image/Raster;
       4: ifnull        23
       7: aload_0
       8: getfield      #30                 // Field model:Ljava/awt/image/ColorModel;
      11: aload_0
      12: getfield      #77                 // Field saved:Ljava/awt/image/Raster;
      15: invokestatic  #96                 // Method putCachedRaster:(Ljava/awt/image/ColorModel;Ljava/awt/image/Raster;)V
      18: aload_0
      19: aconst_null
      20: putfield      #77                 // Field saved:Ljava/awt/image/Raster;
      23: return

  public final java.awt.image.ColorModel getColorModel();
    Code:
       0: aload_0
       1: getfield      #30                 // Field model:Ljava/awt/image/ColorModel;
       4: areturn

  static {};
    Code:
       0: new           #97                 // class java/awt/image/DirectColorModel
       3: dup
       4: bipush        24
       6: ldc           #98                 // int 16711680
       8: ldc           #99                 // int 65280
      10: sipush        255
      13: invokespecial #100                // Method java/awt/image/DirectColorModel."<init>":(IIII)V
      16: putstatic     #50                 // Field xrgbmodel:Ljava/awt/image/ColorModel;
      19: sipush        256
      22: newarray       int
      24: putstatic     #43                 // Field SRGBtoLinearRGB:[I
      27: sipush        256
      30: newarray       int
      32: putstatic     #58                 // Field LinearRGBtoSRGB:[I
      35: iconst_0
      36: istore_0
      37: iload_0
      38: sipush        256
      41: if_icmpge     68
      44: getstatic     #43                 // Field SRGBtoLinearRGB:[I
      47: iload_0
      48: iload_0
      49: invokestatic  #101                // Method convertSRGBtoLinearRGB:(I)I
      52: iastore
      53: getstatic     #58                 // Field LinearRGBtoSRGB:[I
      56: iload_0
      57: iload_0
      58: invokestatic  #102                // Method convertLinearRGBtoSRGB:(I)I
      61: iastore
      62: iinc          0, 1
      65: goto          37
      68: return
}
