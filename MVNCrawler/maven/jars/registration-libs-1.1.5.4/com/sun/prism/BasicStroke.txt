Compiled from "BasicStroke.java"
public final class com.sun.prism.BasicStroke {
  public static final int CAP_BUTT;

  public static final int CAP_ROUND;

  public static final int CAP_SQUARE;

  public static final int JOIN_MITER;

  public static final int JOIN_ROUND;

  public static final int JOIN_BEVEL;

  public static final int TYPE_CENTERED;

  public static final int TYPE_INNER;

  public static final int TYPE_OUTER;

  float width;

  int type;

  int cap;

  int join;

  float miterLimit;

  float[] dash;

  float dashPhase;

  private static final int SAFE_ACCUMULATE_MASK;

  private float[] tmpMiter;

  static final float SQRT_2;

  public com.sun.prism.BasicStroke();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iconst_0
      13: fconst_1
      14: iconst_2
      15: iconst_0
      16: ldc           #5                  // float 10.0f
      18: invokevirtual #6                  // Method set:(IFIIF)V
      21: return

  public com.sun.prism.BasicStroke(float, int, int, float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iconst_0
      13: fload_1
      14: iload_2
      15: iload_3
      16: fload         4
      18: invokevirtual #6                  // Method set:(IFIIF)V
      21: return

  public com.sun.prism.BasicStroke(int, float, int, int, float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iload_1
      13: fload_2
      14: iload_3
      15: iload         4
      17: fload         5
      19: invokevirtual #6                  // Method set:(IFIIF)V
      22: return

  public com.sun.prism.BasicStroke(float, int, int, float, float[], float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iconst_0
      13: fload_1
      14: iload_2
      15: iload_3
      16: fload         4
      18: invokevirtual #6                  // Method set:(IFIIF)V
      21: aload_0
      22: aload         5
      24: fload         6
      26: invokevirtual #7                  // Method set:([FF)V
      29: return

  public com.sun.prism.BasicStroke(float, int, int, float, double[], float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iconst_0
      13: fload_1
      14: iload_2
      15: iload_3
      16: fload         4
      18: invokevirtual #6                  // Method set:(IFIIF)V
      21: aload_0
      22: aload         5
      24: fload         6
      26: invokevirtual #8                  // Method set:([DF)V
      29: return

  public com.sun.prism.BasicStroke(int, float, int, int, float, float[], float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iload_1
      13: fload_2
      14: iload_3
      15: iload         4
      17: fload         5
      19: invokevirtual #6                  // Method set:(IFIIF)V
      22: aload_0
      23: aload         6
      25: fload         7
      27: invokevirtual #7                  // Method set:([FF)V
      30: return

  public com.sun.prism.BasicStroke(int, float, int, int, float, double[], float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field tmpMiter:[F
      11: aload_0
      12: iload_1
      13: fload_2
      14: iload_3
      15: iload         4
      17: fload         5
      19: invokevirtual #6                  // Method set:(IFIIF)V
      22: aload_0
      23: aload         6
      25: fload         7
      27: invokevirtual #8                  // Method set:([DF)V
      30: return

  public void set(int, float, int, int, float);
    Code:
       0: iload_1
       1: ifeq          24
       4: iload_1
       5: iconst_1
       6: if_icmpeq     24
       9: iload_1
      10: iconst_2
      11: if_icmpeq     24
      14: new           #9                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #10                 // String illegal type
      20: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: fload_2
      25: fconst_0
      26: fcmpg
      27: ifge          40
      30: new           #9                  // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #12                 // String negative width
      36: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_3
      41: ifeq          64
      44: iload_3
      45: iconst_1
      46: if_icmpeq     64
      49: iload_3
      50: iconst_2
      51: if_icmpeq     64
      54: new           #9                  // class java/lang/IllegalArgumentException
      57: dup
      58: ldc           #13                 // String illegal end cap value
      60: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iload         4
      66: ifne          86
      69: fload         5
      71: fconst_1
      72: fcmpg
      73: ifge          108
      76: new           #9                  // class java/lang/IllegalArgumentException
      79: dup
      80: ldc           #14                 // String miter limit < 1
      82: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: iload         4
      88: iconst_1
      89: if_icmpeq     108
      92: iload         4
      94: iconst_2
      95: if_icmpeq     108
      98: new           #9                  // class java/lang/IllegalArgumentException
     101: dup
     102: ldc           #15                 // String illegal line join value
     104: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: iload_1
     110: putfield      #16                 // Field type:I
     113: aload_0
     114: fload_2
     115: putfield      #17                 // Field width:F
     118: aload_0
     119: iload_3
     120: putfield      #18                 // Field cap:I
     123: aload_0
     124: iload         4
     126: putfield      #19                 // Field join:I
     129: aload_0
     130: fload         5
     132: putfield      #20                 // Field miterLimit:F
     135: return

  public void set(float[], float);
    Code:
       0: aload_1
       1: ifnull        73
       4: iconst_1
       5: istore_3
       6: iconst_0
       7: istore        4
       9: iload         4
      11: aload_1
      12: arraylength
      13: if_icmpge     59
      16: aload_1
      17: iload         4
      19: faload
      20: fstore        5
      22: fload         5
      24: f2d
      25: dconst_0
      26: dcmpl
      27: ifle          35
      30: iconst_0
      31: istore_3
      32: goto          53
      35: fload         5
      37: f2d
      38: dconst_0
      39: dcmpg
      40: ifge          53
      43: new           #9                  // class java/lang/IllegalArgumentException
      46: dup
      47: ldc           #21                 // String negative dash length
      49: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: iinc          4, 1
      56: goto          9
      59: iload_3
      60: ifeq          73
      63: new           #9                  // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #22                 // String dash lengths all zero
      69: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: aload_1
      75: putfield      #23                 // Field dash:[F
      78: aload_0
      79: fload_2
      80: putfield      #24                 // Field dashPhase:F
      83: return

  public void set(double[], float);
    Code:
       0: aload_1
       1: ifnull        96
       4: aload_1
       5: arraylength
       6: newarray       float
       8: astore_3
       9: iconst_1
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: aload_1
      18: arraylength
      19: if_icmpge     73
      22: aload_1
      23: iload         5
      25: daload
      26: d2f
      27: fstore        6
      29: fload         6
      31: f2d
      32: dconst_0
      33: dcmpl
      34: ifle          43
      37: iconst_0
      38: istore        4
      40: goto          61
      43: fload         6
      45: f2d
      46: dconst_0
      47: dcmpg
      48: ifge          61
      51: new           #9                  // class java/lang/IllegalArgumentException
      54: dup
      55: ldc           #21                 // String negative dash length
      57: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_3
      62: iload         5
      64: fload         6
      66: fastore
      67: iinc          5, 1
      70: goto          15
      73: iload         4
      75: ifeq          88
      78: new           #9                  // class java/lang/IllegalArgumentException
      81: dup
      82: ldc           #22                 // String dash lengths all zero
      84: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: aload_3
      90: putfield      #23                 // Field dash:[F
      93: goto          101
      96: aload_0
      97: aconst_null
      98: putfield      #23                 // Field dash:[F
     101: aload_0
     102: fload_2
     103: putfield      #24                 // Field dashPhase:F
     106: return

  public int getType();
    Code:
       0: aload_0
       1: getfield      #16                 // Field type:I
       4: ireturn

  public float getLineWidth();
    Code:
       0: aload_0
       1: getfield      #17                 // Field width:F
       4: freturn

  public int getEndCap();
    Code:
       0: aload_0
       1: getfield      #18                 // Field cap:I
       4: ireturn

  public int getLineJoin();
    Code:
       0: aload_0
       1: getfield      #19                 // Field join:I
       4: ireturn

  public float getMiterLimit();
    Code:
       0: aload_0
       1: getfield      #20                 // Field miterLimit:F
       4: freturn

  public boolean isDashed();
    Code:
       0: aload_0
       1: getfield      #23                 // Field dash:[F
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public float[] getDashArray();
    Code:
       0: aload_0
       1: getfield      #23                 // Field dash:[F
       4: areturn

  public float getDashPhase();
    Code:
       0: aload_0
       1: getfield      #24                 // Field dashPhase:F
       4: freturn

  public com.sun.javafx.geom.Shape createStrokedShape(com.sun.javafx.geom.Shape);
    Code:
       0: aload_1
       1: instanceof    #25                 // class com/sun/javafx/geom/RoundRectangle2D
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #25                 // class com/sun/javafx/geom/RoundRectangle2D
      12: invokevirtual #26                 // Method strokeRoundRectangle:(Lcom/sun/javafx/geom/RoundRectangle2D;)Lcom/sun/javafx/geom/Shape;
      15: astore_2
      16: goto          21
      19: aconst_null
      20: astore_2
      21: aload_2
      22: ifnull        27
      25: aload_2
      26: areturn
      27: aload_0
      28: aload_1
      29: invokevirtual #27                 // Method createCenteredStrokedShape:(Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      32: astore_2
      33: aload_0
      34: getfield      #16                 // Field type:I
      37: iconst_1
      38: if_icmpne     51
      41: aload_0
      42: aload_2
      43: aload_1
      44: invokevirtual #28                 // Method makeIntersectedShape:(Lcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      47: astore_2
      48: goto          66
      51: aload_0
      52: getfield      #16                 // Field type:I
      55: iconst_2
      56: if_icmpne     66
      59: aload_0
      60: aload_2
      61: aload_1
      62: invokevirtual #29                 // Method makeSubtractedShape:(Lcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      65: astore_2
      66: aload_2
      67: areturn

  private boolean isCW(float, float, float, float);
    Code:
       0: fload_1
       1: fload         4
       3: fmul
       4: fload_2
       5: fload_3
       6: fmul
       7: fcmpg
       8: ifgt          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private void computeOffset(float, float, float, float[], int);
    Code:
       0: fload_1
       1: fload_1
       2: fmul
       3: fload_2
       4: fload_2
       5: fmul
       6: fadd
       7: f2d
       8: invokestatic  #30                 // Method java/lang/Math.sqrt:(D)D
      11: d2f
      12: fstore        6
      14: fload         6
      16: fconst_0
      17: fcmpl
      18: ifne          40
      21: aload         4
      23: iload         5
      25: iconst_0
      26: iadd
      27: aload         4
      29: iload         5
      31: iconst_1
      32: iadd
      33: fconst_0
      34: dup_x2
      35: fastore
      36: fastore
      37: goto          67
      40: aload         4
      42: iload         5
      44: iconst_0
      45: iadd
      46: fload_2
      47: fload_3
      48: fmul
      49: fload         6
      51: fdiv
      52: fastore
      53: aload         4
      55: iload         5
      57: iconst_1
      58: iadd
      59: fload_1
      60: fload_3
      61: fmul
      62: fneg
      63: fload         6
      65: fdiv
      66: fastore
      67: return

  private void computeMiter(float, float, float, float, float, float, float, float, float[], int);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fstore        11
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        12
      11: fload         7
      13: fload         5
      15: fsub
      16: fstore        13
      18: fload         8
      20: fload         6
      22: fsub
      23: fstore        14
      25: fload         11
      27: fload         14
      29: fmul
      30: fload         13
      32: fload         12
      34: fmul
      35: fsub
      36: fstore        15
      38: fload         13
      40: fload_2
      41: fload         6
      43: fsub
      44: fmul
      45: fload         14
      47: fload_1
      48: fload         5
      50: fsub
      51: fmul
      52: fsub
      53: fstore        16
      55: fload         16
      57: fload         15
      59: fdiv
      60: fstore        16
      62: aload         9
      64: iload         10
      66: iinc          10, 1
      69: fload_1
      70: fload         16
      72: fload         11
      74: fmul
      75: fadd
      76: fastore
      77: aload         9
      79: iload         10
      81: fload_2
      82: fload         16
      84: fload         12
      86: fmul
      87: fadd
      88: fastore
      89: return

  private void accumulateQuad(float[], int, float, float, float, float);
    Code:
       0: fload_3
       1: fload         4
       3: fsub
       4: fstore        7
       6: fload         5
       8: fload         4
      10: fsub
      11: fload         7
      13: fadd
      14: fstore        8
      16: fload         8
      18: fconst_0
      19: fcmpl
      20: ifeq          123
      23: fload         7
      25: fload         8
      27: fdiv
      28: fstore        9
      30: fload         9
      32: fconst_0
      33: fcmpl
      34: ifle          123
      37: fload         9
      39: fconst_1
      40: fcmpg
      41: ifge          123
      44: fconst_1
      45: fload         9
      47: fsub
      48: fstore        10
      50: fload_3
      51: fload         10
      53: fmul
      54: fload         10
      56: fmul
      57: fconst_2
      58: fload         4
      60: fmul
      61: fload         9
      63: fmul
      64: fload         10
      66: fmul
      67: fadd
      68: fload         5
      70: fload         9
      72: fmul
      73: fload         9
      75: fmul
      76: fadd
      77: fstore        11
      79: aload_1
      80: iload_2
      81: faload
      82: fload         11
      84: fload         6
      86: fsub
      87: fcmpl
      88: ifle          99
      91: aload_1
      92: iload_2
      93: fload         11
      95: fload         6
      97: fsub
      98: fastore
      99: aload_1
     100: iload_2
     101: iconst_2
     102: iadd
     103: faload
     104: fload         11
     106: fload         6
     108: fadd
     109: fcmpg
     110: ifge          123
     113: aload_1
     114: iload_2
     115: iconst_2
     116: iadd
     117: fload         11
     119: fload         6
     121: fadd
     122: fastore
     123: return

  private void accumulateCubic(float[], int, float, float, float, float, float, float);
    Code:
       0: fload_3
       1: fconst_0
       2: fcmpl
       3: ifle          110
       6: fload_3
       7: fconst_1
       8: fcmpg
       9: ifge          110
      12: fconst_1
      13: fload_3
      14: fsub
      15: fstore        9
      17: fload         4
      19: fload         9
      21: fmul
      22: fload         9
      24: fmul
      25: fload         9
      27: fmul
      28: ldc           #31                 // float 3.0f
      30: fload         5
      32: fmul
      33: fload_3
      34: fmul
      35: fload         9
      37: fmul
      38: fload         9
      40: fmul
      41: fadd
      42: ldc           #31                 // float 3.0f
      44: fload         6
      46: fmul
      47: fload_3
      48: fmul
      49: fload_3
      50: fmul
      51: fload         9
      53: fmul
      54: fadd
      55: fload         7
      57: fload_3
      58: fmul
      59: fload_3
      60: fmul
      61: fload_3
      62: fmul
      63: fadd
      64: fstore        10
      66: aload_1
      67: iload_2
      68: faload
      69: fload         10
      71: fload         8
      73: fsub
      74: fcmpl
      75: ifle          86
      78: aload_1
      79: iload_2
      80: fload         10
      82: fload         8
      84: fsub
      85: fastore
      86: aload_1
      87: iload_2
      88: iconst_2
      89: iadd
      90: faload
      91: fload         10
      93: fload         8
      95: fadd
      96: fcmpg
      97: ifge          110
     100: aload_1
     101: iload_2
     102: iconst_2
     103: iadd
     104: fload         10
     106: fload         8
     108: fadd
     109: fastore
     110: return

  private void accumulateCubic(float[], int, float, float, float, float, float);
    Code:
       0: fload         4
       2: fload_3
       3: fsub
       4: fstore        8
       6: fconst_2
       7: fload         5
       9: fload         4
      11: fsub
      12: fload         8
      14: fsub
      15: fmul
      16: fstore        9
      18: fload         6
      20: fload         5
      22: fsub
      23: fload         9
      25: fsub
      26: fload         8
      28: fsub
      29: fstore        10
      31: fload         10
      33: fconst_0
      34: fcmpl
      35: ifne          70
      38: fload         9
      40: fconst_0
      41: fcmpl
      42: ifne          46
      45: return
      46: aload_0
      47: aload_1
      48: iload_2
      49: fload         8
      51: fneg
      52: fload         9
      54: fdiv
      55: fload_3
      56: fload         4
      58: fload         5
      60: fload         6
      62: fload         7
      64: invokespecial #32                 // Method accumulateCubic:([FIFFFFFF)V
      67: goto          172
      70: fload         9
      72: fload         9
      74: fmul
      75: ldc           #33                 // float 4.0f
      77: fload         10
      79: fmul
      80: fload         8
      82: fmul
      83: fsub
      84: fstore        11
      86: fload         11
      88: fconst_0
      89: fcmpg
      90: ifge          94
      93: return
      94: fload         11
      96: f2d
      97: invokestatic  #30                 // Method java/lang/Math.sqrt:(D)D
     100: d2f
     101: fstore        11
     103: fload         9
     105: fconst_0
     106: fcmpg
     107: ifge          115
     110: fload         11
     112: fneg
     113: fstore        11
     115: fload         9
     117: fload         11
     119: fadd
     120: ldc           #34                 // float -2.0f
     122: fdiv
     123: fstore        12
     125: aload_0
     126: aload_1
     127: iload_2
     128: fload         12
     130: fload         10
     132: fdiv
     133: fload_3
     134: fload         4
     136: fload         5
     138: fload         6
     140: fload         7
     142: invokespecial #32                 // Method accumulateCubic:([FIFFFFFF)V
     145: fload         12
     147: fconst_0
     148: fcmpl
     149: ifeq          172
     152: aload_0
     153: aload_1
     154: iload_2
     155: fload         8
     157: fload         12
     159: fdiv
     160: fload_3
     161: fload         4
     163: fload         5
     165: fload         6
     167: fload         7
     169: invokespecial #32                 // Method accumulateCubic:([FIFFFFFF)V
     172: return

  public void accumulateShapeBounds(float[], com.sun.javafx.geom.Shape, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: getfield      #16                 // Field type:I
       4: iconst_1
       5: if_icmpne     15
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokestatic  #35                 // Method com/sun/javafx/geom/Shape.accumulate:([FLcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/transform/BaseTransform;)V
      14: return
      15: aload_3
      16: invokevirtual #36                 // Method com/sun/javafx/geom/transform/BaseTransform.getType:()I
      19: bipush        -92
      21: iand
      22: ifeq          36
      25: aload_1
      26: aload_0
      27: aload_2
      28: invokevirtual #37                 // Method createStrokedShape:(Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      31: aload_3
      32: invokestatic  #35                 // Method com/sun/javafx/geom/Shape.accumulate:([FLcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/transform/BaseTransform;)V
      35: return
      36: aload_2
      37: aload_3
      38: invokevirtual #38                 // Method com/sun/javafx/geom/Shape.getPathIterator:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/PathIterator;
      41: astore        4
      43: iconst_1
      44: istore        5
      46: bipush        6
      48: newarray       float
      50: astore        6
      52: aload_0
      53: getfield      #16                 // Field type:I
      56: ifne          68
      59: aload_0
      60: invokevirtual #39                 // Method getLineWidth:()F
      63: fconst_2
      64: fdiv
      65: goto          72
      68: aload_0
      69: invokevirtual #39                 // Method getLineWidth:()F
      72: fstore        7
      74: fload         7
      76: f2d
      77: aload_3
      78: invokevirtual #40                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxx:()D
      81: aload_3
      82: invokevirtual #41                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyx:()D
      85: invokestatic  #42                 // Method java/lang/Math.hypot:(DD)D
      88: dmul
      89: d2f
      90: fstore        7
      92: fconst_0
      93: fstore        8
      95: fconst_0
      96: fstore        9
      98: fconst_0
      99: fstore        10
     101: fconst_0
     102: fstore        11
     104: fconst_0
     105: fstore        14
     107: fconst_0
     108: fstore        15
     110: fconst_0
     111: fstore        18
     113: fconst_0
     114: fstore        19
     116: iconst_4
     117: newarray       float
     119: astore        20
     121: fconst_0
     122: fstore        21
     124: fconst_0
     125: fstore        22
     127: fconst_0
     128: fstore        23
     130: fconst_0
     131: fstore        24
     133: aload         4
     135: invokeinterface #43,  1           // InterfaceMethod com/sun/javafx/geom/PathIterator.isDone:()Z
     140: ifne          1163
     143: aload         4
     145: aload         6
     147: invokeinterface #44,  2           // InterfaceMethod com/sun/javafx/geom/PathIterator.currentSegment:([F)I
     152: istore        25
     154: iload         25
     156: tableswitch   { // 0 to 4
                     0: 192
                     1: 260
                     2: 404
                     3: 650
                     4: 960
               default: 1135
          }
     192: iload         5
     194: ifne          239
     197: aload_0
     198: fload         18
     200: fload         19
     202: fload         10
     204: fload         11
     206: fload         21
     208: fload         22
     210: aload_1
     211: fload         7
     213: invokespecial #45                 // Method accumulateCap:(FFFFFF[FF)V
     216: aload_0
     217: fload         14
     219: fneg
     220: fload         15
     222: fneg
     223: fload         8
     225: fload         9
     227: fload         23
     229: fneg
     230: fload         24
     232: fneg
     233: aload_1
     234: fload         7
     236: invokespecial #45                 // Method accumulateCap:(FFFFFF[FF)V
     239: aload         6
     241: iconst_0
     242: faload
     243: dup
     244: fstore        8
     246: fstore        10
     248: aload         6
     250: iconst_1
     251: faload
     252: dup
     253: fstore        9
     255: fstore        11
     257: goto          1135
     260: aload         6
     262: iconst_0
     263: faload
     264: fstore        12
     266: aload         6
     268: iconst_1
     269: faload
     270: fstore        13
     272: fload         12
     274: fload         10
     276: fsub
     277: fstore        16
     279: fload         13
     281: fload         11
     283: fsub
     284: fstore        17
     286: fload         16
     288: fconst_0
     289: fcmpl
     290: ifne          303
     293: fload         17
     295: fconst_0
     296: fcmpl
     297: ifne          303
     300: fconst_1
     301: fstore        16
     303: aload_0
     304: fload         16
     306: fload         17
     308: fload         7
     310: aload         20
     312: iconst_0
     313: invokespecial #46                 // Method computeOffset:(FFF[FI)V
     316: iload         5
     318: ifne          352
     321: aload_0
     322: fload         18
     324: fload         19
     326: fload         16
     328: fload         17
     330: fload         10
     332: fload         11
     334: fload         21
     336: fload         22
     338: aload         20
     340: iconst_0
     341: faload
     342: aload         20
     344: iconst_1
     345: faload
     346: aload_1
     347: fload         7
     349: invokespecial #47                 // Method accumulateJoin:(FFFFFFFFFF[FF)V
     352: fload         12
     354: fstore        10
     356: fload         13
     358: fstore        11
     360: fload         16
     362: fstore        18
     364: fload         17
     366: fstore        19
     368: aload         20
     370: iconst_0
     371: faload
     372: fstore        21
     374: aload         20
     376: iconst_1
     377: faload
     378: fstore        22
     380: iload         5
     382: ifeq          1135
     385: fload         18
     387: fstore        14
     389: fload         19
     391: fstore        15
     393: fload         21
     395: fstore        23
     397: fload         22
     399: fstore        24
     401: goto          1135
     404: aload         6
     406: iconst_2
     407: faload
     408: fstore        12
     410: aload         6
     412: iconst_3
     413: faload
     414: fstore        13
     416: aload         6
     418: iconst_0
     419: faload
     420: fload         10
     422: fsub
     423: fstore        16
     425: aload         6
     427: iconst_1
     428: faload
     429: fload         11
     431: fsub
     432: fstore        17
     434: aload_0
     435: fload         16
     437: fload         17
     439: fload         7
     441: aload         20
     443: iconst_0
     444: invokespecial #46                 // Method computeOffset:(FFF[FI)V
     447: iload         5
     449: ifne          483
     452: aload_0
     453: fload         18
     455: fload         19
     457: fload         16
     459: fload         17
     461: fload         10
     463: fload         11
     465: fload         21
     467: fload         22
     469: aload         20
     471: iconst_0
     472: faload
     473: aload         20
     475: iconst_1
     476: faload
     477: aload_1
     478: fload         7
     480: invokespecial #47                 // Method accumulateJoin:(FFFFFFFFFF[FF)V
     483: aload_1
     484: iconst_0
     485: faload
     486: aload         6
     488: iconst_0
     489: faload
     490: fload         7
     492: fsub
     493: fcmpl
     494: ifgt          511
     497: aload_1
     498: iconst_2
     499: faload
     500: aload         6
     502: iconst_0
     503: faload
     504: fload         7
     506: fadd
     507: fcmpg
     508: ifge          527
     511: aload_0
     512: aload_1
     513: iconst_0
     514: fload         10
     516: aload         6
     518: iconst_0
     519: faload
     520: fload         12
     522: fload         7
     524: invokespecial #48                 // Method accumulateQuad:([FIFFFF)V
     527: aload_1
     528: iconst_1
     529: faload
     530: aload         6
     532: iconst_1
     533: faload
     534: fload         7
     536: fsub
     537: fcmpl
     538: ifgt          555
     541: aload_1
     542: iconst_3
     543: faload
     544: aload         6
     546: iconst_1
     547: faload
     548: fload         7
     550: fadd
     551: fcmpg
     552: ifge          571
     555: aload_0
     556: aload_1
     557: iconst_1
     558: fload         11
     560: aload         6
     562: iconst_1
     563: faload
     564: fload         13
     566: fload         7
     568: invokespecial #48                 // Method accumulateQuad:([FIFFFF)V
     571: fload         12
     573: fstore        10
     575: fload         13
     577: fstore        11
     579: iload         5
     581: ifeq          604
     584: fload         16
     586: fstore        14
     588: fload         17
     590: fstore        15
     592: aload         20
     594: iconst_0
     595: faload
     596: fstore        23
     598: aload         20
     600: iconst_1
     601: faload
     602: fstore        24
     604: fload         12
     606: aload         6
     608: iconst_0
     609: faload
     610: fsub
     611: fstore        18
     613: fload         13
     615: aload         6
     617: iconst_1
     618: faload
     619: fsub
     620: fstore        19
     622: aload_0
     623: fload         18
     625: fload         19
     627: fload         7
     629: aload         20
     631: iconst_0
     632: invokespecial #46                 // Method computeOffset:(FFF[FI)V
     635: aload         20
     637: iconst_0
     638: faload
     639: fstore        21
     641: aload         20
     643: iconst_1
     644: faload
     645: fstore        22
     647: goto          1135
     650: aload         6
     652: iconst_4
     653: faload
     654: fstore        12
     656: aload         6
     658: iconst_5
     659: faload
     660: fstore        13
     662: aload         6
     664: iconst_0
     665: faload
     666: fload         10
     668: fsub
     669: fstore        16
     671: aload         6
     673: iconst_1
     674: faload
     675: fload         11
     677: fsub
     678: fstore        17
     680: aload_0
     681: fload         16
     683: fload         17
     685: fload         7
     687: aload         20
     689: iconst_0
     690: invokespecial #46                 // Method computeOffset:(FFF[FI)V
     693: iload         5
     695: ifne          729
     698: aload_0
     699: fload         18
     701: fload         19
     703: fload         16
     705: fload         17
     707: fload         10
     709: fload         11
     711: fload         21
     713: fload         22
     715: aload         20
     717: iconst_0
     718: faload
     719: aload         20
     721: iconst_1
     722: faload
     723: aload_1
     724: fload         7
     726: invokespecial #47                 // Method accumulateJoin:(FFFFFFFFFF[FF)V
     729: aload_1
     730: iconst_0
     731: faload
     732: aload         6
     734: iconst_0
     735: faload
     736: fload         7
     738: fsub
     739: fcmpl
     740: ifgt          785
     743: aload_1
     744: iconst_2
     745: faload
     746: aload         6
     748: iconst_0
     749: faload
     750: fload         7
     752: fadd
     753: fcmpg
     754: iflt          785
     757: aload_1
     758: iconst_0
     759: faload
     760: aload         6
     762: iconst_2
     763: faload
     764: fload         7
     766: fsub
     767: fcmpl
     768: ifgt          785
     771: aload_1
     772: iconst_2
     773: faload
     774: aload         6
     776: iconst_2
     777: faload
     778: fload         7
     780: fadd
     781: fcmpg
     782: ifge          805
     785: aload_0
     786: aload_1
     787: iconst_0
     788: fload         10
     790: aload         6
     792: iconst_0
     793: faload
     794: aload         6
     796: iconst_2
     797: faload
     798: fload         12
     800: fload         7
     802: invokespecial #49                 // Method accumulateCubic:([FIFFFFF)V
     805: aload_1
     806: iconst_1
     807: faload
     808: aload         6
     810: iconst_1
     811: faload
     812: fload         7
     814: fsub
     815: fcmpl
     816: ifgt          861
     819: aload_1
     820: iconst_3
     821: faload
     822: aload         6
     824: iconst_1
     825: faload
     826: fload         7
     828: fadd
     829: fcmpg
     830: iflt          861
     833: aload_1
     834: iconst_1
     835: faload
     836: aload         6
     838: iconst_3
     839: faload
     840: fload         7
     842: fsub
     843: fcmpl
     844: ifgt          861
     847: aload_1
     848: iconst_3
     849: faload
     850: aload         6
     852: iconst_3
     853: faload
     854: fload         7
     856: fadd
     857: fcmpg
     858: ifge          881
     861: aload_0
     862: aload_1
     863: iconst_1
     864: fload         11
     866: aload         6
     868: iconst_1
     869: faload
     870: aload         6
     872: iconst_3
     873: faload
     874: fload         13
     876: fload         7
     878: invokespecial #49                 // Method accumulateCubic:([FIFFFFF)V
     881: fload         12
     883: fstore        10
     885: fload         13
     887: fstore        11
     889: iload         5
     891: ifeq          914
     894: fload         16
     896: fstore        14
     898: fload         17
     900: fstore        15
     902: aload         20
     904: iconst_0
     905: faload
     906: fstore        23
     908: aload         20
     910: iconst_1
     911: faload
     912: fstore        24
     914: fload         12
     916: aload         6
     918: iconst_2
     919: faload
     920: fsub
     921: fstore        18
     923: fload         13
     925: aload         6
     927: iconst_3
     928: faload
     929: fsub
     930: fstore        19
     932: aload_0
     933: fload         18
     935: fload         19
     937: fload         7
     939: aload         20
     941: iconst_0
     942: invokespecial #46                 // Method computeOffset:(FFF[FI)V
     945: aload         20
     947: iconst_0
     948: faload
     949: fstore        21
     951: aload         20
     953: iconst_1
     954: faload
     955: fstore        22
     957: goto          1135
     960: fload         8
     962: fload         10
     964: fsub
     965: fstore        16
     967: fload         9
     969: fload         11
     971: fsub
     972: fstore        17
     974: fload         8
     976: fstore        12
     978: fload         9
     980: fstore        13
     982: iload         5
     984: ifne          1127
     987: aload_0
     988: fload         14
     990: fload         15
     992: fload         7
     994: aload         20
     996: iconst_2
     997: invokespecial #46                 // Method computeOffset:(FFF[FI)V
    1000: fload         16
    1002: fconst_0
    1003: fcmpl
    1004: ifne          1048
    1007: fload         17
    1009: fconst_0
    1010: fcmpl
    1011: ifne          1048
    1014: aload_0
    1015: fload         18
    1017: fload         19
    1019: fload         14
    1021: fload         15
    1023: fload         8
    1025: fload         9
    1027: fload         21
    1029: fload         22
    1031: aload         20
    1033: iconst_2
    1034: faload
    1035: aload         20
    1037: iconst_3
    1038: faload
    1039: aload_1
    1040: fload         7
    1042: invokespecial #47                 // Method accumulateJoin:(FFFFFFFFFF[FF)V
    1045: goto          1127
    1048: aload_0
    1049: fload         16
    1051: fload         17
    1053: fload         7
    1055: aload         20
    1057: iconst_0
    1058: invokespecial #46                 // Method computeOffset:(FFF[FI)V
    1061: aload_0
    1062: fload         18
    1064: fload         19
    1066: fload         16
    1068: fload         17
    1070: fload         10
    1072: fload         11
    1074: fload         21
    1076: fload         22
    1078: aload         20
    1080: iconst_0
    1081: faload
    1082: aload         20
    1084: iconst_1
    1085: faload
    1086: aload_1
    1087: fload         7
    1089: invokespecial #47                 // Method accumulateJoin:(FFFFFFFFFF[FF)V
    1092: aload_0
    1093: fload         16
    1095: fload         17
    1097: fload         14
    1099: fload         15
    1101: fload         12
    1103: fload         13
    1105: aload         20
    1107: iconst_0
    1108: faload
    1109: aload         20
    1111: iconst_1
    1112: faload
    1113: aload         20
    1115: iconst_2
    1116: faload
    1117: aload         20
    1119: iconst_3
    1120: faload
    1121: aload_1
    1122: fload         7
    1124: invokespecial #47                 // Method accumulateJoin:(FFFFFFFFFF[FF)V
    1127: fload         12
    1129: fstore        10
    1131: fload         13
    1133: fstore        11
    1135: iload         25
    1137: ifeq          1146
    1140: iload         25
    1142: iconst_4
    1143: if_icmpne     1150
    1146: iconst_1
    1147: goto          1151
    1150: iconst_0
    1151: istore        5
    1153: aload         4
    1155: invokeinterface #51,  1           // InterfaceMethod com/sun/javafx/geom/PathIterator.next:()V
    1160: goto          133
    1163: iload         5
    1165: ifne          1210
    1168: aload_0
    1169: fload         18
    1171: fload         19
    1173: fload         10
    1175: fload         11
    1177: fload         21
    1179: fload         22
    1181: aload_1
    1182: fload         7
    1184: invokespecial #45                 // Method accumulateCap:(FFFFFF[FF)V
    1187: aload_0
    1188: fload         14
    1190: fneg
    1191: fload         15
    1193: fneg
    1194: fload         8
    1196: fload         9
    1198: fload         23
    1200: fneg
    1201: fload         24
    1203: fneg
    1204: aload_1
    1205: fload         7
    1207: invokespecial #45                 // Method accumulateCap:(FFFFFF[FF)V
    1210: return

  private void accumulate(float, float, float, float, float[]);
    Code:
       0: fload_1
       1: fload_3
       2: fcmpg
       3: ifgt          37
       6: fload_1
       7: aload         5
       9: iconst_0
      10: faload
      11: fcmpg
      12: ifge          20
      15: aload         5
      17: iconst_0
      18: fload_1
      19: fastore
      20: fload_3
      21: aload         5
      23: iconst_2
      24: faload
      25: fcmpl
      26: ifle          65
      29: aload         5
      31: iconst_2
      32: fload_3
      33: fastore
      34: goto          65
      37: fload_3
      38: aload         5
      40: iconst_0
      41: faload
      42: fcmpg
      43: ifge          51
      46: aload         5
      48: iconst_0
      49: fload_3
      50: fastore
      51: fload_1
      52: aload         5
      54: iconst_2
      55: faload
      56: fcmpl
      57: ifle          65
      60: aload         5
      62: iconst_2
      63: fload_1
      64: fastore
      65: fload_2
      66: fload         4
      68: fcmpg
      69: ifgt          105
      72: fload_2
      73: aload         5
      75: iconst_1
      76: faload
      77: fcmpg
      78: ifge          86
      81: aload         5
      83: iconst_1
      84: fload_2
      85: fastore
      86: fload         4
      88: aload         5
      90: iconst_3
      91: faload
      92: fcmpl
      93: ifle          135
      96: aload         5
      98: iconst_3
      99: fload         4
     101: fastore
     102: goto          135
     105: fload         4
     107: aload         5
     109: iconst_1
     110: faload
     111: fcmpg
     112: ifge          121
     115: aload         5
     117: iconst_1
     118: fload         4
     120: fastore
     121: fload_2
     122: aload         5
     124: iconst_3
     125: faload
     126: fcmpl
     127: ifle          135
     130: aload         5
     132: iconst_3
     133: fload_2
     134: fastore
     135: return

  private void accumulateOrdered(float, float, float, float, float[]);
    Code:
       0: fload_1
       1: aload         5
       3: iconst_0
       4: faload
       5: fcmpg
       6: ifge          14
       9: aload         5
      11: iconst_0
      12: fload_1
      13: fastore
      14: fload_3
      15: aload         5
      17: iconst_2
      18: faload
      19: fcmpl
      20: ifle          28
      23: aload         5
      25: iconst_2
      26: fload_3
      27: fastore
      28: fload_2
      29: aload         5
      31: iconst_1
      32: faload
      33: fcmpg
      34: ifge          42
      37: aload         5
      39: iconst_1
      40: fload_2
      41: fastore
      42: fload         4
      44: aload         5
      46: iconst_3
      47: faload
      48: fcmpl
      49: ifle          58
      52: aload         5
      54: iconst_3
      55: fload         4
      57: fastore
      58: return

  private void accumulateJoin(float, float, float, float, float, float, float, float, float, float, float[], float);
    Code:
       0: aload_0
       1: getfield      #19                 // Field join:I
       4: iconst_2
       5: if_icmpne     29
       8: aload_0
       9: fload         5
      11: fload         6
      13: fload         7
      15: fload         8
      17: fload         9
      19: fload         10
      21: aload         11
      23: invokespecial #52                 // Method accumulateBevel:(FFFFFF[F)V
      26: goto          90
      29: aload_0
      30: getfield      #19                 // Field join:I
      33: ifne          64
      36: aload_0
      37: fload_1
      38: fload_2
      39: fload_3
      40: fload         4
      42: fload         7
      44: fload         8
      46: fload         9
      48: fload         10
      50: fload         5
      52: fload         6
      54: aload         11
      56: fload         12
      58: invokespecial #53                 // Method accumulateMiter:(FFFFFFFFFF[FF)V
      61: goto          90
      64: aload_0
      65: fload         5
      67: fload         12
      69: fsub
      70: fload         6
      72: fload         12
      74: fsub
      75: fload         5
      77: fload         12
      79: fadd
      80: fload         6
      82: fload         12
      84: fadd
      85: aload         11
      87: invokespecial #54                 // Method accumulateOrdered:(FFFF[F)V
      90: return

  private void accumulateCap(float, float, float, float, float, float, float[], float);
    Code:
       0: aload_0
       1: getfield      #18                 // Field cap:I
       4: iconst_2
       5: if_icmpne     47
       8: aload_0
       9: fload_3
      10: fload         5
      12: fadd
      13: fload         6
      15: fsub
      16: fload         4
      18: fload         6
      20: fadd
      21: fload         5
      23: fadd
      24: fload_3
      25: fload         5
      27: fsub
      28: fload         6
      30: fsub
      31: fload         4
      33: fload         6
      35: fsub
      36: fload         5
      38: fadd
      39: aload         7
      41: invokespecial #55                 // Method accumulate:(FFFF[F)V
      44: goto          105
      47: aload_0
      48: getfield      #18                 // Field cap:I
      51: ifne          81
      54: aload_0
      55: fload_3
      56: fload         5
      58: fadd
      59: fload         4
      61: fload         6
      63: fadd
      64: fload_3
      65: fload         5
      67: fsub
      68: fload         4
      70: fload         6
      72: fsub
      73: aload         7
      75: invokespecial #55                 // Method accumulate:(FFFF[F)V
      78: goto          105
      81: aload_0
      82: fload_3
      83: fload         8
      85: fsub
      86: fload         4
      88: fload         8
      90: fsub
      91: fload_3
      92: fload         8
      94: fadd
      95: fload         4
      97: fload         8
      99: fadd
     100: aload         7
     102: invokespecial #54                 // Method accumulateOrdered:(FFFF[F)V
     105: return

  private void accumulateMiter(float, float, float, float, float, float, float, float, float, float, float[], float);
    Code:
       0: aload_0
       1: fload         9
       3: fload         10
       5: fload         5
       7: fload         6
       9: fload         7
      11: fload         8
      13: aload         11
      15: invokespecial #52                 // Method accumulateBevel:(FFFFFF[F)V
      18: aload_0
      19: fload_1
      20: fload_2
      21: fload_3
      22: fload         4
      24: invokespecial #56                 // Method isCW:(FFFF)Z
      27: istore        13
      29: iload         13
      31: ifeq          54
      34: fload         5
      36: fneg
      37: fstore        5
      39: fload         6
      41: fneg
      42: fstore        6
      44: fload         7
      46: fneg
      47: fstore        7
      49: fload         8
      51: fneg
      52: fstore        8
      54: aload_0
      55: fload         9
      57: fload_1
      58: fsub
      59: fload         5
      61: fadd
      62: fload         10
      64: fload_2
      65: fsub
      66: fload         6
      68: fadd
      69: fload         9
      71: fload         5
      73: fadd
      74: fload         10
      76: fload         6
      78: fadd
      79: fload         9
      81: fload_3
      82: fadd
      83: fload         7
      85: fadd
      86: fload         10
      88: fload         4
      90: fadd
      91: fload         8
      93: fadd
      94: fload         9
      96: fload         7
      98: fadd
      99: fload         10
     101: fload         8
     103: fadd
     104: aload_0
     105: getfield      #3                  // Field tmpMiter:[F
     108: iconst_0
     109: invokespecial #57                 // Method computeMiter:(FFFFFFFF[FI)V
     112: aload_0
     113: getfield      #3                  // Field tmpMiter:[F
     116: iconst_0
     117: faload
     118: fload         9
     120: fsub
     121: aload_0
     122: getfield      #3                  // Field tmpMiter:[F
     125: iconst_0
     126: faload
     127: fload         9
     129: fsub
     130: fmul
     131: aload_0
     132: getfield      #3                  // Field tmpMiter:[F
     135: iconst_1
     136: faload
     137: fload         10
     139: fsub
     140: aload_0
     141: getfield      #3                  // Field tmpMiter:[F
     144: iconst_1
     145: faload
     146: fload         10
     148: fsub
     149: fmul
     150: fadd
     151: fstore        14
     153: aload_0
     154: getfield      #20                 // Field miterLimit:F
     157: fload         12
     159: fmul
     160: fstore        15
     162: fload         14
     164: fload         15
     166: fload         15
     168: fmul
     169: fcmpg
     170: ifge          203
     173: aload_0
     174: aload_0
     175: getfield      #3                  // Field tmpMiter:[F
     178: iconst_0
     179: faload
     180: aload_0
     181: getfield      #3                  // Field tmpMiter:[F
     184: iconst_1
     185: faload
     186: aload_0
     187: getfield      #3                  // Field tmpMiter:[F
     190: iconst_0
     191: faload
     192: aload_0
     193: getfield      #3                  // Field tmpMiter:[F
     196: iconst_1
     197: faload
     198: aload         11
     200: invokespecial #54                 // Method accumulateOrdered:(FFFF[F)V
     203: return

  private void accumulateBevel(float, float, float, float, float, float, float[]);
    Code:
       0: aload_0
       1: fload_1
       2: fload_3
       3: fadd
       4: fload_2
       5: fload         4
       7: fadd
       8: fload_1
       9: fload_3
      10: fsub
      11: fload_2
      12: fload         4
      14: fsub
      15: aload         7
      17: invokespecial #55                 // Method accumulate:(FFFF[F)V
      20: aload_0
      21: fload_1
      22: fload         5
      24: fadd
      25: fload_2
      26: fload         6
      28: fadd
      29: fload_1
      30: fload         5
      32: fsub
      33: fload_2
      34: fload         6
      36: fsub
      37: aload         7
      39: invokespecial #55                 // Method accumulate:(FFFF[F)V
      42: return

  public com.sun.javafx.geom.Shape createCenteredStrokedShape(com.sun.javafx.geom.Shape);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #58                 // Method com/sun/prism/impl/shape/ShapeUtil.createCenteredStrokedShape:(Lcom/sun/javafx/geom/Shape;Lcom/sun/prism/BasicStroke;)Lcom/sun/javafx/geom/Shape;
       5: areturn

  com.sun.javafx.geom.Shape strokeRoundRectangle(com.sun.javafx.geom.RoundRectangle2D);
    Code:
       0: aload_1
       1: getfield      #59                 // Field com/sun/javafx/geom/RoundRectangle2D.width:F
       4: fconst_0
       5: fcmpg
       6: iflt          18
       9: aload_1
      10: getfield      #60                 // Field com/sun/javafx/geom/RoundRectangle2D.height:F
      13: fconst_0
      14: fcmpg
      15: ifge          26
      18: new           #61                 // class com/sun/javafx/geom/Path2D
      21: dup
      22: invokespecial #62                 // Method com/sun/javafx/geom/Path2D."<init>":()V
      25: areturn
      26: aload_0
      27: invokevirtual #63                 // Method isDashed:()Z
      30: ifeq          35
      33: aconst_null
      34: areturn
      35: aload_1
      36: getfield      #64                 // Field com/sun/javafx/geom/RoundRectangle2D.arcWidth:F
      39: fstore_3
      40: aload_1
      41: getfield      #65                 // Field com/sun/javafx/geom/RoundRectangle2D.arcHeight:F
      44: fstore        4
      46: fload_3
      47: fconst_0
      48: fcmpg
      49: ifle          59
      52: fload         4
      54: fconst_0
      55: fcmpg
      56: ifgt          102
      59: fconst_0
      60: dup
      61: fstore        4
      63: fstore_3
      64: aload_0
      65: getfield      #16                 // Field type:I
      68: iconst_1
      69: if_icmpne     77
      72: iconst_0
      73: istore_2
      74: goto          126
      77: aload_0
      78: getfield      #19                 // Field join:I
      81: istore_2
      82: iload_2
      83: ifne          126
      86: aload_0
      87: getfield      #20                 // Field miterLimit:F
      90: getstatic     #66                 // Field SQRT_2:F
      93: fcmpg
      94: ifge          126
      97: iconst_2
      98: istore_2
      99: goto          126
     102: fload_3
     103: fload         4
     105: ldc           #67                 // float 0.9f
     107: fmul
     108: fcmpg
     109: iflt          122
     112: fload         4
     114: fload_3
     115: ldc           #67                 // float 0.9f
     117: fmul
     118: fcmpg
     119: ifge          124
     122: aconst_null
     123: areturn
     124: iconst_1
     125: istore_2
     126: aload_0
     127: getfield      #16                 // Field type:I
     130: iconst_1
     131: if_icmpne     146
     134: fconst_0
     135: fstore        6
     137: aload_0
     138: getfield      #17                 // Field width:F
     141: fstore        5
     143: goto          177
     146: aload_0
     147: getfield      #16                 // Field type:I
     150: iconst_2
     151: if_icmpne     166
     154: aload_0
     155: getfield      #17                 // Field width:F
     158: fstore        6
     160: fconst_0
     161: fstore        5
     163: goto          177
     166: aload_0
     167: getfield      #17                 // Field width:F
     170: fconst_2
     171: fdiv
     172: dup
     173: fstore        5
     175: fstore        6
     177: iload_2
     178: tableswitch   { // 0 to 2
                     0: 204
                     1: 276
                     2: 250
               default: 333
          }
     204: new           #25                 // class com/sun/javafx/geom/RoundRectangle2D
     207: dup
     208: aload_1
     209: getfield      #68                 // Field com/sun/javafx/geom/RoundRectangle2D.x:F
     212: fload         6
     214: fsub
     215: aload_1
     216: getfield      #69                 // Field com/sun/javafx/geom/RoundRectangle2D.y:F
     219: fload         6
     221: fsub
     222: aload_1
     223: getfield      #59                 // Field com/sun/javafx/geom/RoundRectangle2D.width:F
     226: fload         6
     228: fconst_2
     229: fmul
     230: fadd
     231: aload_1
     232: getfield      #60                 // Field com/sun/javafx/geom/RoundRectangle2D.height:F
     235: fload         6
     237: fconst_2
     238: fmul
     239: fadd
     240: fconst_0
     241: fconst_0
     242: invokespecial #70                 // Method com/sun/javafx/geom/RoundRectangle2D."<init>":(FFFFFF)V
     245: astore        7
     247: goto          343
     250: aload_1
     251: getfield      #68                 // Field com/sun/javafx/geom/RoundRectangle2D.x:F
     254: aload_1
     255: getfield      #69                 // Field com/sun/javafx/geom/RoundRectangle2D.y:F
     258: aload_1
     259: getfield      #59                 // Field com/sun/javafx/geom/RoundRectangle2D.width:F
     262: aload_1
     263: getfield      #60                 // Field com/sun/javafx/geom/RoundRectangle2D.height:F
     266: fload         6
     268: invokestatic  #71                 // Method makeBeveledRect:(FFFFF)Lcom/sun/javafx/geom/Shape;
     271: astore        7
     273: goto          343
     276: new           #25                 // class com/sun/javafx/geom/RoundRectangle2D
     279: dup
     280: aload_1
     281: getfield      #68                 // Field com/sun/javafx/geom/RoundRectangle2D.x:F
     284: fload         6
     286: fsub
     287: aload_1
     288: getfield      #69                 // Field com/sun/javafx/geom/RoundRectangle2D.y:F
     291: fload         6
     293: fsub
     294: aload_1
     295: getfield      #59                 // Field com/sun/javafx/geom/RoundRectangle2D.width:F
     298: fload         6
     300: fconst_2
     301: fmul
     302: fadd
     303: aload_1
     304: getfield      #60                 // Field com/sun/javafx/geom/RoundRectangle2D.height:F
     307: fload         6
     309: fconst_2
     310: fmul
     311: fadd
     312: fload_3
     313: fload         6
     315: fconst_2
     316: fmul
     317: fadd
     318: fload         4
     320: fload         6
     322: fconst_2
     323: fmul
     324: fadd
     325: invokespecial #70                 // Method com/sun/javafx/geom/RoundRectangle2D."<init>":(FFFFFF)V
     328: astore        7
     330: goto          343
     333: new           #72                 // class java/lang/InternalError
     336: dup
     337: ldc           #73                 // String Unrecognized line join style
     339: invokespecial #74                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
     342: athrow
     343: aload_1
     344: getfield      #59                 // Field com/sun/javafx/geom/RoundRectangle2D.width:F
     347: fload         5
     349: fconst_2
     350: fmul
     351: fcmpg
     352: ifle          367
     355: aload_1
     356: getfield      #60                 // Field com/sun/javafx/geom/RoundRectangle2D.height:F
     359: fload         5
     361: fconst_2
     362: fmul
     363: fcmpg
     364: ifgt          370
     367: aload         7
     369: areturn
     370: fload_3
     371: fload         5
     373: fconst_2
     374: fmul
     375: fsub
     376: fstore_3
     377: fload         4
     379: fload         5
     381: fconst_2
     382: fmul
     383: fsub
     384: fstore        4
     386: fload_3
     387: fconst_0
     388: fcmpg
     389: ifle          399
     392: fload         4
     394: fconst_0
     395: fcmpg
     396: ifgt          404
     399: fconst_0
     400: dup
     401: fstore        4
     403: fstore_3
     404: new           #25                 // class com/sun/javafx/geom/RoundRectangle2D
     407: dup
     408: aload_1
     409: getfield      #68                 // Field com/sun/javafx/geom/RoundRectangle2D.x:F
     412: fload         5
     414: fadd
     415: aload_1
     416: getfield      #69                 // Field com/sun/javafx/geom/RoundRectangle2D.y:F
     419: fload         5
     421: fadd
     422: aload_1
     423: getfield      #59                 // Field com/sun/javafx/geom/RoundRectangle2D.width:F
     426: fload         5
     428: fconst_2
     429: fmul
     430: fsub
     431: aload_1
     432: getfield      #60                 // Field com/sun/javafx/geom/RoundRectangle2D.height:F
     435: fload         5
     437: fconst_2
     438: fmul
     439: fsub
     440: fload_3
     441: fload         4
     443: invokespecial #70                 // Method com/sun/javafx/geom/RoundRectangle2D."<init>":(FFFFFF)V
     446: astore        8
     448: aload         7
     450: instanceof    #61                 // class com/sun/javafx/geom/Path2D
     453: ifeq          464
     456: aload         7
     458: checkcast     #61                 // class com/sun/javafx/geom/Path2D
     461: goto          473
     464: new           #61                 // class com/sun/javafx/geom/Path2D
     467: dup
     468: aload         7
     470: invokespecial #75                 // Method com/sun/javafx/geom/Path2D."<init>":(Lcom/sun/javafx/geom/Shape;)V
     473: astore        9
     475: aload         9
     477: iconst_0
     478: invokevirtual #76                 // Method com/sun/javafx/geom/Path2D.setWindingRule:(I)V
     481: aload         9
     483: aload         8
     485: iconst_0
     486: invokevirtual #77                 // Method com/sun/javafx/geom/Path2D.append:(Lcom/sun/javafx/geom/Shape;Z)V
     489: aload         9
     491: areturn

  static com.sun.javafx.geom.Shape makeBeveledRect(float, float, float, float, float);
    Code:
       0: fload_0
       1: fstore        5
       3: fload_1
       4: fstore        6
       6: fload_0
       7: fload_2
       8: fadd
       9: fstore        7
      11: fload_1
      12: fload_3
      13: fadd
      14: fstore        8
      16: new           #61                 // class com/sun/javafx/geom/Path2D
      19: dup
      20: invokespecial #62                 // Method com/sun/javafx/geom/Path2D."<init>":()V
      23: astore        9
      25: aload         9
      27: fload         5
      29: fload         6
      31: fload         4
      33: fsub
      34: invokevirtual #78                 // Method com/sun/javafx/geom/Path2D.moveTo:(FF)V
      37: aload         9
      39: fload         7
      41: fload         6
      43: fload         4
      45: fsub
      46: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
      49: aload         9
      51: fload         7
      53: fload         4
      55: fadd
      56: fload         6
      58: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
      61: aload         9
      63: fload         7
      65: fload         4
      67: fadd
      68: fload         8
      70: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
      73: aload         9
      75: fload         7
      77: fload         8
      79: fload         4
      81: fadd
      82: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
      85: aload         9
      87: fload         5
      89: fload         8
      91: fload         4
      93: fadd
      94: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
      97: aload         9
      99: fload         5
     101: fload         4
     103: fsub
     104: fload         8
     106: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
     109: aload         9
     111: fload         5
     113: fload         4
     115: fsub
     116: fload         6
     118: invokevirtual #79                 // Method com/sun/javafx/geom/Path2D.lineTo:(FF)V
     121: aload         9
     123: invokevirtual #80                 // Method com/sun/javafx/geom/Path2D.closePath:()V
     126: aload         9
     128: areturn

  protected com.sun.javafx.geom.Shape makeIntersectedShape(com.sun.javafx.geom.Shape, com.sun.javafx.geom.Shape);
    Code:
       0: new           #81                 // class com/sun/prism/BasicStroke$CAGShapePair
       3: dup
       4: aload_1
       5: aload_2
       6: iconst_4
       7: invokespecial #83                 // Method com/sun/prism/BasicStroke$CAGShapePair."<init>":(Lcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/Shape;I)V
      10: areturn

  protected com.sun.javafx.geom.Shape makeSubtractedShape(com.sun.javafx.geom.Shape, com.sun.javafx.geom.Shape);
    Code:
       0: new           #81                 // class com/sun/prism/BasicStroke$CAGShapePair
       3: dup
       4: aload_1
       5: aload_2
       6: iconst_1
       7: invokespecial #83                 // Method com/sun/prism/BasicStroke$CAGShapePair."<init>":(Lcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/Shape;I)V
      10: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #17                 // Field width:F
       4: invokestatic  #84                 // Method java/lang/Float.floatToIntBits:(F)I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: getfield      #19                 // Field join:I
      16: iadd
      17: istore_1
      18: iload_1
      19: bipush        31
      21: imul
      22: aload_0
      23: getfield      #18                 // Field cap:I
      26: iadd
      27: istore_1
      28: iload_1
      29: bipush        31
      31: imul
      32: aload_0
      33: getfield      #20                 // Field miterLimit:F
      36: invokestatic  #84                 // Method java/lang/Float.floatToIntBits:(F)I
      39: iadd
      40: istore_1
      41: aload_0
      42: getfield      #23                 // Field dash:[F
      45: ifnull        93
      48: iload_1
      49: bipush        31
      51: imul
      52: aload_0
      53: getfield      #24                 // Field dashPhase:F
      56: invokestatic  #84                 // Method java/lang/Float.floatToIntBits:(F)I
      59: iadd
      60: istore_1
      61: iconst_0
      62: istore_2
      63: iload_2
      64: aload_0
      65: getfield      #23                 // Field dash:[F
      68: arraylength
      69: if_icmpge     93
      72: iload_1
      73: bipush        31
      75: imul
      76: aload_0
      77: getfield      #23                 // Field dash:[F
      80: iload_2
      81: faload
      82: invokestatic  #84                 // Method java/lang/Float.floatToIntBits:(F)I
      85: iadd
      86: istore_1
      87: iinc          2, 1
      90: goto          63
      93: iload_1
      94: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class com/sun/prism/BasicStroke
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #4                  // class com/sun/prism/BasicStroke
      13: astore_2
      14: aload_0
      15: getfield      #17                 // Field width:F
      18: aload_2
      19: getfield      #17                 // Field width:F
      22: fcmpl
      23: ifeq          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: getfield      #19                 // Field join:I
      32: aload_2
      33: getfield      #19                 // Field join:I
      36: if_icmpeq     41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #18                 // Field cap:I
      45: aload_2
      46: getfield      #18                 // Field cap:I
      49: if_icmpeq     54
      52: iconst_0
      53: ireturn
      54: aload_0
      55: getfield      #20                 // Field miterLimit:F
      58: aload_2
      59: getfield      #20                 // Field miterLimit:F
      62: fcmpl
      63: ifeq          68
      66: iconst_0
      67: ireturn
      68: aload_0
      69: getfield      #23                 // Field dash:[F
      72: ifnull        105
      75: aload_0
      76: getfield      #24                 // Field dashPhase:F
      79: aload_2
      80: getfield      #24                 // Field dashPhase:F
      83: fcmpl
      84: ifeq          89
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #23                 // Field dash:[F
      93: aload_2
      94: getfield      #23                 // Field dash:[F
      97: invokestatic  #85                 // Method java/util/Arrays.equals:([F[F)Z
     100: ifne          114
     103: iconst_0
     104: ireturn
     105: aload_2
     106: getfield      #23                 // Field dash:[F
     109: ifnull        114
     112: iconst_0
     113: ireturn
     114: iconst_1
     115: ireturn

  public com.sun.prism.BasicStroke copy();
    Code:
       0: new           #4                  // class com/sun/prism/BasicStroke
       3: dup
       4: aload_0
       5: getfield      #16                 // Field type:I
       8: aload_0
       9: getfield      #17                 // Field width:F
      12: aload_0
      13: getfield      #18                 // Field cap:I
      16: aload_0
      17: getfield      #19                 // Field join:I
      20: aload_0
      21: getfield      #20                 // Field miterLimit:F
      24: aload_0
      25: getfield      #23                 // Field dash:[F
      28: aload_0
      29: getfield      #24                 // Field dashPhase:F
      32: invokespecial #86                 // Method "<init>":(IFIIF[FF)V
      35: areturn

  static {};
    Code:
       0: ldc2_w        #87                 // double 2.0d
       3: invokestatic  #30                 // Method java/lang/Math.sqrt:(D)D
       6: d2f
       7: putstatic     #66                 // Field SQRT_2:F
      10: return
}
