Compiled from "Texture.java"
public interface com.sun.prism.Texture extends com.sun.prism.GraphicsResource {
  public abstract com.sun.prism.PixelFormat getPixelFormat();

  public abstract int getPhysicalWidth();

  public abstract int getPhysicalHeight();

  public abstract int getContentX();

  public abstract int getContentY();

  public abstract int getContentWidth();

  public abstract int getContentHeight();

  public abstract int getMaxContentWidth();

  public abstract int getMaxContentHeight();

  public abstract void setContentWidth(int);

  public abstract void setContentHeight(int);

  public abstract int getLastImageSerial();

  public abstract void setLastImageSerial(int);

  public abstract void update(com.sun.prism.Image);

  public abstract void update(com.sun.prism.Image, int, int);

  public abstract void update(com.sun.prism.Image, int, int, int, int);

  public abstract void update(com.sun.prism.Image, int, int, int, int, boolean);

  public abstract void update(java.nio.Buffer, com.sun.prism.PixelFormat, int, int, int, int, int, int, int, boolean);

  public abstract void update(com.sun.prism.MediaFrame, boolean);

  public abstract com.sun.prism.Texture$WrapMode getWrapMode();

  public abstract boolean getUseMipmap();

  public abstract com.sun.prism.Texture getSharedTexture(com.sun.prism.Texture$WrapMode);

  public abstract boolean getLinearFiltering();

  public abstract void setLinearFiltering(boolean);

  public abstract void lock();

  public abstract void unlock();

  public abstract boolean isLocked();

  public abstract int getLockCount();

  public abstract void assertLocked();

  public abstract void makePermanent();

  public abstract void contentsUseful();

  public abstract void contentsNotUseful();

  public abstract boolean isSurfaceLost();
}
