Compiled from "Image.java"
class com.sun.prism.Image$ScaledAccessor<I extends java.nio.Buffer> extends com.sun.prism.Image$Accessor<I> {
  com.sun.prism.Image$Accessor<I> theDelegate;

  float pixelScale;

  final com.sun.prism.Image this$0;

  com.sun.prism.Image$ScaledAccessor(com.sun.prism.Image$Accessor<I>, float);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/sun/prism/Image;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method com/sun/prism/Image$Accessor."<init>":(Lcom/sun/prism/Image;)V
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field theDelegate:Lcom/sun/prism/Image$Accessor;
      15: aload_0
      16: fload_3
      17: putfield      #4                  // Field pixelScale:F
      20: return

  private int scale(int);
    Code:
       0: iload_1
       1: i2f
       2: ldc           #5                  // float 0.5f
       4: fadd
       5: aload_0
       6: getfield      #4                  // Field pixelScale:F
       9: fmul
      10: f2i
      11: ireturn

  public int getArgb(int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field theDelegate:Lcom/sun/prism/Image$Accessor;
       4: aload_0
       5: iload_1
       6: invokespecial #6                  // Method scale:(I)I
       9: aload_0
      10: iload_2
      11: invokespecial #6                  // Method scale:(I)I
      14: invokevirtual #7                  // Method com/sun/prism/Image$Accessor.getArgb:(II)I
      17: ireturn

  public void setArgb(int, int, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Pixel setting for scaled images not supported yet
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javafx.scene.image.PixelFormat<I> getPlatformPixelFormat();
    Code:
       0: aload_0
       1: getfield      #3                  // Field theDelegate:Lcom/sun/prism/Image$Accessor;
       4: invokevirtual #11                 // Method com/sun/prism/Image$Accessor.getPlatformPixelFormat:()Ljavafx/scene/image/PixelFormat;
       7: areturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field theDelegate:Lcom/sun/prism/Image$Accessor;
       4: invokevirtual #12                 // Method com/sun/prism/Image$Accessor.isWritable:()Z
       7: ireturn

  public com.sun.javafx.tk.PlatformImage promoteToWritableImage();
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Pixel setting for scaled images not supported yet
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <T extends java.nio.Buffer> void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<T>, T, int);
    Code:
       0: aload         5
       2: invokestatic  #13                 // Method com/sun/javafx/image/PixelUtils.getSetter:(Ljavafx/scene/image/WritablePixelFormat;)Lcom/sun/javafx/image/PixelSetter;
       5: astore        8
       7: aload         6
       9: invokevirtual #14                 // Method java/nio/Buffer.position:()I
      12: istore        9
      14: aload         8
      16: invokeinterface #15,  1           // InterfaceMethod com/sun/javafx/image/PixelSetter.getNumElements:()I
      21: istore        10
      23: iconst_0
      24: istore        11
      26: iload         11
      28: iload         4
      30: if_icmpge     114
      33: aload_0
      34: iload_2
      35: iload         11
      37: iadd
      38: invokespecial #6                  // Method scale:(I)I
      41: istore        12
      43: iload         9
      45: istore        13
      47: iconst_0
      48: istore        14
      50: iload         14
      52: iload_3
      53: if_icmpge     101
      56: aload_0
      57: iload_1
      58: iload         14
      60: iadd
      61: invokespecial #6                  // Method scale:(I)I
      64: istore        15
      66: aload         8
      68: aload         6
      70: iload         13
      72: aload_0
      73: getfield      #3                  // Field theDelegate:Lcom/sun/prism/Image$Accessor;
      76: iload         15
      78: iload         12
      80: invokevirtual #7                  // Method com/sun/prism/Image$Accessor.getArgb:(II)I
      83: invokeinterface #16,  4           // InterfaceMethod com/sun/javafx/image/PixelSetter.setArgb:(Ljava/nio/Buffer;II)V
      88: iload         13
      90: iload         10
      92: iadd
      93: istore        13
      95: iinc          14, 1
      98: goto          50
     101: iload         9
     103: iload         7
     105: iadd
     106: istore        9
     108: iinc          11, 1
     111: goto          26
     114: return

  public void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<java.nio.ByteBuffer>, byte[], int, int);
    Code:
       0: aload         6
       2: invokestatic  #17                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       5: astore        9
       7: aload         9
       9: iload         7
      11: invokevirtual #18                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_0
      16: iload_1
      17: iload_2
      18: iload_3
      19: iload         4
      21: aload         5
      23: aload         9
      25: iload         8
      27: invokevirtual #19                 // Method getPixels:(IIIILjavafx/scene/image/WritablePixelFormat;Ljava/nio/Buffer;I)V
      30: return

  public void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<java.nio.IntBuffer>, int[], int, int);
    Code:
       0: aload         6
       2: invokestatic  #20                 // Method java/nio/IntBuffer.wrap:([I)Ljava/nio/IntBuffer;
       5: astore        9
       7: aload         9
       9: iload         7
      11: invokevirtual #21                 // Method java/nio/IntBuffer.position:(I)Ljava/nio/IntBuffer;
      14: pop
      15: aload_0
      16: iload_1
      17: iload_2
      18: iload_3
      19: iload         4
      21: aload         5
      23: aload         9
      25: iload         8
      27: invokevirtual #19                 // Method getPixels:(IIIILjavafx/scene/image/WritablePixelFormat;Ljava/nio/Buffer;I)V
      30: return

  public <T extends java.nio.Buffer> void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<T>, T, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Pixel setting for scaled images not supported yet
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<java.nio.ByteBuffer>, byte[], int, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Pixel setting for scaled images not supported yet
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<java.nio.IntBuffer>, int[], int, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Pixel setting for scaled images not supported yet
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setPixels(int, int, int, int, javafx.scene.image.PixelReader, int, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String Pixel setting for scaled images not supported yet
       6: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
