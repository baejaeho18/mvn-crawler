Compiled from "GLContext.java"
abstract class com.sun.prism.es2.GLContext {
  static final int GL_ZERO;

  static final int GL_ONE;

  static final int GL_SRC_COLOR;

  static final int GL_ONE_MINUS_SRC_COLOR;

  static final int GL_DST_COLOR;

  static final int GL_ONE_MINUS_DST_COLOR;

  static final int GL_SRC_ALPHA;

  static final int GL_ONE_MINUS_SRC_ALPHA;

  static final int GL_DST_ALPHA;

  static final int GL_ONE_MINUS_DST_ALPHA;

  static final int GL_CONSTANT_COLOR;

  static final int GL_ONE_MINUS_CONSTANT_COLOR;

  static final int GL_CONSTANT_ALPHA;

  static final int GL_ONE_MINUS_CONSTANT_ALPHA;

  static final int GL_SRC_ALPHA_SATURATE;

  static final int GL_FLOAT;

  static final int GL_UNSIGNED_BYTE;

  static final int GL_UNSIGNED_INT_8_8_8_8_REV;

  static final int GL_UNSIGNED_INT_8_8_8_8;

  static final int GL_UNSIGNED_SHORT_8_8_APPLE;

  static final int GL_RGBA;

  static final int GL_BGRA;

  static final int GL_RGB;

  static final int GL_LUMINANCE;

  static final int GL_ALPHA;

  static final int GL_RGBA32F;

  static final int GL_YCBCR_422_APPLE;

  static final int GL_TEXTURE_2D;

  static final int GL_TEXTURE_BINDING_2D;

  static final int GL_NEAREST;

  static final int GL_LINEAR;

  static final int GL_NEAREST_MIPMAP_NEAREST;

  static final int GL_LINEAR_MIPMAP_LINEAR;

  static final int GL_UNPACK_ALIGNMENT;

  static final int GL_UNPACK_ROW_LENGTH;

  static final int GL_UNPACK_SKIP_PIXELS;

  static final int GL_UNPACK_SKIP_ROWS;

  static final int WRAPMODE_REPEAT;

  static final int WRAPMODE_CLAMP_TO_EDGE;

  static final int WRAPMODE_CLAMP_TO_BORDER;

  static final int GL_BACK;

  static final int GL_FRONT;

  static final int GL_NONE;

  static final int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS;

  static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS;

  static final int GL_MAX_TEXTURE_IMAGE_UNITS;

  static final int GL_MAX_TEXTURE_SIZE;

  static final int GL_MAX_VERTEX_ATTRIBS;

  static final int GL_MAX_VARYING_COMPONENTS;

  static final int GL_MAX_VARYING_VECTORS;

  static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS;

  static final int GL_MAX_VERTEX_UNIFORM_COMPONENTS;

  static final int GL_MAX_VERTEX_UNIFORM_VECTORS;

  static final int MAPTYPE_DIFFUSE;

  static final int MAPTYPE_SPECULAR;

  static final int MAPTYPE_BUMP;

  static final int MAPTYPE_SELFILLUM;

  static final int NUM_MATRIX_ELEMENTS;

  long nativeCtxInfo;

  private int maxTextureSize;

  private java.lang.Boolean nonPowTwoExtAvailable;

  private java.lang.Boolean clampToZeroAvailable;

  private int activeTexUnit;

  private int[] boundTextures;

  private int viewportX;

  private int viewportY;

  private int viewportWidth;

  private int viewportHeight;

  private boolean depthTest;

  private boolean msaa;

  private int maxSampleSize;

  private static final int FBO_ID_UNSET;

  private static final int FBO_ID_NOCACHE;

  private int nativeFBOID;

  com.sun.prism.es2.GLContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field maxTextureSize:I
       9: aload_0
      10: iconst_4
      11: newarray       int
      13: putfield      #3                  // Field boundTextures:[I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field depthTest:Z
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field msaa:Z
      26: aload_0
      27: iconst_m1
      28: putfield      #6                  // Field maxSampleSize:I
      31: aload_0
      32: invokestatic  #7                  // Method com/sun/javafx/PlatformUtil.isMac:()Z
      35: ifne          44
      38: invokestatic  #8                  // Method com/sun/javafx/PlatformUtil.isIOS:()Z
      41: ifeq          49
      44: bipush        -2
      46: goto          50
      49: iconst_m1
      50: putfield      #10                 // Field nativeFBOID:I
      53: return

  private static native void nActiveTexture(long, int);

  private static native void nBindFBO(long, int);

  private static native void nBindTexture(long, int);

  private static native void nBlendFunc(int, int);

  private static native void nClearBuffers(long, float, float, float, float, boolean, boolean, boolean);

  private static native int nCompileShader(long, java.lang.String, boolean);

  private static native int nCreateDepthBuffer(long, int, int, int);

  private static native int nCreateRenderBuffer(long, int, int, int);

  private static native int nCreateFBO(long, int);

  private static native int nCreateProgram(long, int, int[], int, java.lang.String[], int[]);

  private static native int nCreateTexture(long, int, int);

  private static native void nDeleteRenderBuffer(long, int);

  private static native void nDeleteFBO(long, int);

  private static native void nDeleteShader(long, int);

  private static native void nDeleteTexture(long, int);

  private static native void nDisposeShaders(long, int, int, int[]);

  private static native void nFinish();

  private static native int nGenAndBindTexture();

  private static native int nGetFBO();

  private static native int nGetIntParam(int);

  private static native int nGetMaxSampleSize();

  private static native int nGetUniformLocation(long, int, java.lang.String);

  private static native void nPixelStorei(int, int);

  private static native boolean nReadPixelsByte(long, int, java.nio.Buffer, byte[], int, int, int, int);

  private static native boolean nReadPixelsInt(long, int, java.nio.Buffer, int[], int, int, int, int);

  private static native void nScissorTest(long, boolean, int, int, int, int);

  private static native void nSetDepthTest(long, boolean);

  private static native void nSetMSAA(long, boolean);

  private static native void nTexParamsMinMax(int, int);

  private static native boolean nTexImage2D0(int, int, int, int, int, int, int, int, java.lang.Object, int, boolean);

  private static native boolean nTexImage2D1(int, int, int, int, int, int, int, int, java.lang.Object, int, boolean);

  private static native void nTexSubImage2D0(int, int, int, int, int, int, int, int, java.lang.Object, int);

  private static native void nTexSubImage2D1(int, int, int, int, int, int, int, int, java.lang.Object, int);

  private static native void nUpdateViewport(long, int, int, int, int);

  private static native void nUniform1f(long, int, float);

  private static native void nUniform2f(long, int, float, float);

  private static native void nUniform3f(long, int, float, float, float);

  private static native void nUniform4f(long, int, float, float, float, float);

  private static native void nUniform4fv0(long, int, int, java.lang.Object, int);

  private static native void nUniform4fv1(long, int, int, java.lang.Object, int);

  private static native void nUniform1i(long, int, int);

  private static native void nUniform2i(long, int, int, int);

  private static native void nUniform3i(long, int, int, int, int);

  private static native void nUniform4i(long, int, int, int, int, int);

  private static native void nUniform4iv0(long, int, int, java.lang.Object, int);

  private static native void nUniform4iv1(long, int, int, java.lang.Object, int);

  private static native void nUniformMatrix4fv(long, int, boolean, float[]);

  private static native void nUpdateFilterState(long, int, boolean);

  private static native void nUpdateWrapState(long, int, int);

  private static native void nUseProgram(long, int);

  private static native void nEnableVertexAttributes(long);

  private static native void nDisableVertexAttributes(long);

  private static native void nDrawIndexedQuads(long, int, float[], byte[]);

  private static native int nCreateIndexBuffer16(long, short[], int);

  private static native void nSetIndexBuffer(long, int);

  private static native void nSetDeviceParametersFor2D(long);

  private static native void nSetDeviceParametersFor3D(long);

  private static native long nCreateES2Mesh(long);

  private static native void nReleaseES2Mesh(long, long);

  private static native boolean nBuildNativeGeometryShort(long, long, float[], int, short[], int);

  private static native boolean nBuildNativeGeometryInt(long, long, float[], int, int[], int);

  private static native long nCreateES2PhongMaterial(long);

  private static native void nReleaseES2PhongMaterial(long, long);

  private static native void nSetSolidColor(long, long, float, float, float, float);

  private static native void nSetMap(long, long, int, int);

  private static native long nCreateES2MeshView(long, long);

  private static native void nReleaseES2MeshView(long, long);

  private static native void nSetCullingMode(long, long, int);

  private static native void nSetMaterial(long, long, long);

  private static native void nSetWireframe(long, long, boolean);

  private static native void nSetAmbientLight(long, long, float, float, float);

  private static native void nSetPointLight(long, long, int, float, float, float, float, float, float, float);

  private static native void nRenderMeshView(long, long);

  private static native void nBlit(long, int, int, int, int, int, int, int, int, int, int);

  void activeTexture(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #12                 // Method nActiveTexture:(JI)V
       8: return

  void bindFBO(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field nativeFBOID:I
       4: lookupswitch  { // 2
                    -2: 48
                    -1: 32
               default: 59
          }
      32: aload_0
      33: iload_1
      34: putfield      #10                 // Field nativeFBOID:I
      37: aload_0
      38: getfield      #11                 // Field nativeCtxInfo:J
      41: iload_1
      42: invokestatic  #13                 // Method nBindFBO:(JI)V
      45: goto          80
      48: aload_0
      49: getfield      #11                 // Field nativeCtxInfo:J
      52: iload_1
      53: invokestatic  #13                 // Method nBindFBO:(JI)V
      56: goto          80
      59: aload_0
      60: getfield      #10                 // Field nativeFBOID:I
      63: iload_1
      64: if_icmpeq     80
      67: aload_0
      68: getfield      #11                 // Field nativeCtxInfo:J
      71: iload_1
      72: invokestatic  #13                 // Method nBindFBO:(JI)V
      75: aload_0
      76: iload_1
      77: putfield      #10                 // Field nativeFBOID:I
      80: return

  void bindTexture(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #14                 // Method nBindTexture:(JI)V
       8: return

  void blendFunc(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #15                 // Method nBlendFunc:(II)V
       5: return

  boolean canCreateNonPowTwoTextures();
    Code:
       0: aload_0
       1: getfield      #16                 // Field nonPowTwoExtAvailable:Ljava/lang/Boolean;
       4: ifnonnull     35
       7: aload_0
       8: getstatic     #17                 // Field com/sun/prism/impl/PrismSettings.forcePow2:Z
      11: ifeq          23
      14: getstatic     #18                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      17: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      20: goto          29
      23: getstatic     #20                 // Field com/sun/prism/es2/ES2Pipeline.glFactory:Lcom/sun/prism/es2/GLFactory;
      26: invokevirtual #21                 // Method com/sun/prism/es2/GLFactory.isNPOTSupported:()Z
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: putfield      #16                 // Field nonPowTwoExtAvailable:Ljava/lang/Boolean;
      35: aload_0
      36: getfield      #16                 // Field nonPowTwoExtAvailable:Ljava/lang/Boolean;
      39: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      42: ireturn

  boolean canClampToZero();
    Code:
       0: aload_0
       1: getfield      #23                 // Field clampToZeroAvailable:Ljava/lang/Boolean;
       4: ifnonnull     35
       7: aload_0
       8: getstatic     #24                 // Field com/sun/prism/impl/PrismSettings.noClampToZero:Z
      11: ifeq          23
      14: getstatic     #18                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      17: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      20: goto          29
      23: getstatic     #20                 // Field com/sun/prism/es2/ES2Pipeline.glFactory:Lcom/sun/prism/es2/GLFactory;
      26: invokevirtual #25                 // Method com/sun/prism/es2/GLFactory.isGL2:()Z
      29: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: putfield      #23                 // Field clampToZeroAvailable:Ljava/lang/Boolean;
      35: aload_0
      36: getfield      #23                 // Field clampToZeroAvailable:Ljava/lang/Boolean;
      39: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      42: ireturn

  void clearBuffers(com.sun.prism.paint.Color, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method com/sun/prism/paint/Color.getRedPremult:()F
       4: fstore        5
       6: aload_1
       7: invokevirtual #27                 // Method com/sun/prism/paint/Color.getGreenPremult:()F
      10: fstore        6
      12: aload_1
      13: invokevirtual #28                 // Method com/sun/prism/paint/Color.getBluePremult:()F
      16: fstore        7
      18: aload_1
      19: invokevirtual #29                 // Method com/sun/prism/paint/Color.getAlpha:()F
      22: fstore        8
      24: aload_0
      25: getfield      #11                 // Field nativeCtxInfo:J
      28: fload         5
      30: fload         6
      32: fload         7
      34: fload         8
      36: iload_2
      37: iload_3
      38: iload         4
      40: invokestatic  #30                 // Method nClearBuffers:(JFFFFZZZ)V
      43: return

  int compileShader(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: aload_1
       5: iload_2
       6: invokestatic  #31                 // Method nCompileShader:(JLjava/lang/String;Z)I
       9: ireturn

  int createDepthBuffer(int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #32                 // Method nCreateDepthBuffer:(JIII)I
      10: ireturn

  int createRenderBuffer(int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #33                 // Method nCreateRenderBuffer:(JIII)I
      10: ireturn

  int createFBO(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field nativeFBOID:I
       4: bipush        -2
       6: if_icmpeq     14
       9: aload_0
      10: iconst_m1
      11: putfield      #10                 // Field nativeFBOID:I
      14: aload_0
      15: getfield      #11                 // Field nativeCtxInfo:J
      18: iload_1
      19: invokestatic  #34                 // Method nCreateFBO:(JI)I
      22: ireturn

  int createProgram(int, int[], java.lang.String[], int[]);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: getstatic     #35                 // Field java/lang/System.err:Ljava/io/PrintStream;
       7: ldc           #36                 // String Error: fragmentShaderIDArr is null
       9: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      12: iconst_0
      13: ireturn
      14: iconst_1
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: aload_2
      23: arraylength
      24: if_icmpge     46
      27: aload_2
      28: iload         6
      30: iaload
      31: ifne          40
      34: iconst_0
      35: istore        5
      37: goto          46
      40: iinc          6, 1
      43: goto          20
      46: iload_1
      47: ifeq          60
      50: aload_2
      51: arraylength
      52: ifeq          60
      55: iload         5
      57: ifne          68
      60: getstatic     #35                 // Field java/lang/System.err:Ljava/io/PrintStream;
      63: ldc           #38                 // String Both vertexShader and fragmentShader(s) must be specified
      65: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      68: aload_3
      69: arraylength
      70: aload         4
      72: arraylength
      73: if_icmpeq     84
      76: getstatic     #35                 // Field java/lang/System.err:Ljava/io/PrintStream;
      79: ldc           #39                 // String attrs.length must be equal to index.length
      81: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      84: aload_0
      85: getfield      #11                 // Field nativeCtxInfo:J
      88: iload_1
      89: aload_2
      90: aload_3
      91: arraylength
      92: aload_3
      93: aload         4
      95: invokestatic  #40                 // Method nCreateProgram:(JI[II[Ljava/lang/String;[I)I
      98: ireturn

  int createTexture(int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: invokestatic  #41                 // Method nCreateTexture:(JII)I
       9: ireturn

  void deleteRenderBuffer(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #42                 // Method nDeleteRenderBuffer:(JI)V
       8: return

  void deleteFBO(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #43                 // Method nDeleteFBO:(JI)V
       8: return

  void deleteShader(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #44                 // Method nDeleteShader:(JI)V
       8: return

  void blitFBO(int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: iload         5
      11: iload         6
      13: iload         7
      15: iload         8
      17: iload         9
      19: iload         10
      21: invokestatic  #45                 // Method nBlit:(JIIIIIIIIII)V
      24: return

  void deleteTexture(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #46                 // Method nDeleteTexture:(JI)V
       8: return

  void disposeShaders(int, int, int[]);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokestatic  #47                 // Method nDisposeShaders:(JII[I)V
      10: return

  void finish();
    Code:
       0: invokestatic  #48                 // Method nFinish:()V
       3: return

  int genAndBindTexture();
    Code:
       0: invokestatic  #49                 // Method nGenAndBindTexture:()I
       3: istore_1
       4: aload_0
       5: getfield      #3                  // Field boundTextures:[I
       8: aload_0
       9: getfield      #50                 // Field activeTexUnit:I
      12: iload_1
      13: iastore
      14: iload_1
      15: ireturn

  int getBoundFBO();
    Code:
       0: aload_0
       1: getfield      #10                 // Field nativeFBOID:I
       4: lookupswitch  { // 2
                    -2: 44
                    -1: 32
               default: 48
          }
      32: aload_0
      33: invokestatic  #51                 // Method nGetFBO:()I
      36: putfield      #10                 // Field nativeFBOID:I
      39: aload_0
      40: getfield      #10                 // Field nativeFBOID:I
      43: ireturn
      44: invokestatic  #51                 // Method nGetFBO:()I
      47: ireturn
      48: aload_0
      49: getfield      #10                 // Field nativeFBOID:I
      52: ireturn

  long getNativeCtxInfo();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lreturn

  abstract long getNativeHandle();

  int getActiveTextureUnit();
    Code:
       0: aload_0
       1: getfield      #50                 // Field activeTexUnit:I
       4: ireturn

  void setActiveTextureUnit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method activeTexture:(I)V
       5: aload_0
       6: iload_1
       7: putfield      #50                 // Field activeTexUnit:I
      10: return

  void updateActiveTextureUnit(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #53                 // Method getActiveTextureUnit:()I
       5: if_icmpeq     13
       8: aload_0
       9: iload_1
      10: invokevirtual #54                 // Method setActiveTextureUnit:(I)V
      13: return

  int getBoundTexture();
    Code:
       0: aload_0
       1: getfield      #3                  // Field boundTextures:[I
       4: aload_0
       5: getfield      #50                 // Field activeTexUnit:I
       8: iaload
       9: ireturn

  int getBoundTexture(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field boundTextures:[I
       4: iload_1
       5: iaload
       6: ireturn

  int getNumBoundTexture();
    Code:
       0: aload_0
       1: getfield      #3                  // Field boundTextures:[I
       4: arraylength
       5: ireturn

  void setBoundTexture(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method bindTexture:(I)V
       5: aload_0
       6: getfield      #3                  // Field boundTextures:[I
       9: aload_0
      10: getfield      #50                 // Field activeTexUnit:I
      13: iload_1
      14: iastore
      15: return

  void updateBoundTexture(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #56                 // Method getBoundTexture:()I
       5: if_icmpeq     13
       8: aload_0
       9: iload_1
      10: invokevirtual #57                 // Method setBoundTexture:(I)V
      13: return

  int getIntParam(int);
    Code:
       0: iload_1
       1: invokestatic  #58                 // Method nGetIntParam:(I)I
       4: ireturn

  int getSampleSize();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getMaxSampleSize:()I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: if_icmpge     14
      10: iconst_0
      11: goto          24
      14: iload_1
      15: iconst_4
      16: if_icmpge     23
      19: iconst_2
      20: goto          24
      23: iconst_4
      24: ireturn

  int getMaxSampleSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxSampleSize:I
       4: iconst_m1
       5: if_icmple     13
       8: aload_0
       9: getfield      #6                  // Field maxSampleSize:I
      12: ireturn
      13: aload_0
      14: getstatic     #60                 // Field com/sun/prism/es2/ES2Pipeline.msaa:Z
      17: ifeq          26
      20: invokestatic  #61                 // Method nGetMaxSampleSize:()I
      23: goto          27
      26: iconst_0
      27: putfield      #6                  // Field maxSampleSize:I
      30: aload_0
      31: getfield      #6                  // Field maxSampleSize:I
      34: ireturn

  int getMaxTextureSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxTextureSize:I
       4: iconst_m1
       5: if_icmple     13
       8: aload_0
       9: getfield      #2                  // Field maxTextureSize:I
      12: ireturn
      13: aload_0
      14: aload_0
      15: bipush        123
      17: invokevirtual #62                 // Method getIntParam:(I)I
      20: dup_x1
      21: putfield      #2                  // Field maxTextureSize:I
      24: ireturn

  int getUniformLocation(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: aload_2
       6: invokestatic  #63                 // Method nGetUniformLocation:(JILjava/lang/String;)I
       9: ireturn

  boolean isShaderCompilerSupported();
    Code:
       0: iconst_1
       1: ireturn

  abstract void makeCurrent(com.sun.prism.es2.GLDrawable);

  void pixelStorei(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #64                 // Method nPixelStorei:(II)V
       5: return

  boolean readPixels(java.nio.Buffer, int, int, int, int);
    Code:
       0: iconst_0
       1: istore        6
       3: aload_1
       4: instanceof    #65                 // class java/nio/ByteBuffer
       7: ifeq          65
      10: aload_1
      11: checkcast     #65                 // class java/nio/ByteBuffer
      14: astore        7
      16: aload         7
      18: invokevirtual #66                 // Method java/nio/ByteBuffer.hasArray:()Z
      21: ifeq          32
      24: aload         7
      26: invokevirtual #67                 // Method java/nio/ByteBuffer.array:()[B
      29: goto          33
      32: aconst_null
      33: astore        8
      35: aload         7
      37: invokevirtual #68                 // Method java/nio/ByteBuffer.capacity:()I
      40: istore        9
      42: aload_0
      43: getfield      #11                 // Field nativeCtxInfo:J
      46: iload         9
      48: aload_1
      49: aload         8
      51: iload_2
      52: iload_3
      53: iload         4
      55: iload         5
      57: invokestatic  #69                 // Method nReadPixelsByte:(JILjava/nio/Buffer;[BIIII)Z
      60: istore        6
      62: goto          143
      65: aload_1
      66: instanceof    #70                 // class java/nio/IntBuffer
      69: ifeq          129
      72: aload_1
      73: checkcast     #70                 // class java/nio/IntBuffer
      76: astore        7
      78: aload         7
      80: invokevirtual #71                 // Method java/nio/IntBuffer.hasArray:()Z
      83: ifeq          94
      86: aload         7
      88: invokevirtual #72                 // Method java/nio/IntBuffer.array:()[I
      91: goto          95
      94: aconst_null
      95: astore        8
      97: aload         7
      99: invokevirtual #73                 // Method java/nio/IntBuffer.capacity:()I
     102: iconst_4
     103: imul
     104: istore        9
     106: aload_0
     107: getfield      #11                 // Field nativeCtxInfo:J
     110: iload         9
     112: aload_1
     113: aload         8
     115: iload_2
     116: iload_3
     117: iload         4
     119: iload         5
     121: invokestatic  #74                 // Method nReadPixelsInt:(JILjava/nio/Buffer;[IIIII)Z
     124: istore        6
     126: goto          143
     129: new           #75                 // class java/lang/IllegalArgumentException
     132: dup
     133: aload_1
     134: invokedynamic #76,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/Buffer;)Ljava/lang/String;
     139: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: iload         6
     145: ireturn

  void scissorTest(boolean, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: iload         5
      11: invokestatic  #78                 // Method nScissorTest:(JZIIII)V
      14: return

  void setShaderProgram(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #79                 // Method nUseProgram:(JI)V
       8: return

  void texParamsMinMax(int, boolean);
    Code:
       0: iload_1
       1: istore_3
       2: iload_1
       3: istore        4
       5: iload_2
       6: ifeq          23
       9: iload_3
      10: bipush        53
      12: if_icmpne     20
      15: bipush        55
      17: goto          22
      20: bipush        54
      22: istore_3
      23: iload_3
      24: iload         4
      26: invokestatic  #80                 // Method nTexParamsMinMax:(II)V
      29: return

  boolean texImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer, boolean);
    Code:
       0: aload         9
       2: invokestatic  #81                 // Method com/sun/prism/es2/BufferFactory.isDirect:(Ljava/lang/Object;)Z
       5: istore        12
       7: iload         12
       9: ifeq          42
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: iload         6
      21: iload         7
      23: iload         8
      25: aload         9
      27: aload         9
      29: invokestatic  #82                 // Method com/sun/prism/es2/BufferFactory.getDirectBufferByteOffset:(Ljava/lang/Object;)I
      32: iload         10
      34: invokestatic  #83                 // Method nTexImage2D0:(IIIIIIIILjava/lang/Object;IZ)Z
      37: istore        11
      39: goto          72
      42: iload_1
      43: iload_2
      44: iload_3
      45: iload         4
      47: iload         5
      49: iload         6
      51: iload         7
      53: iload         8
      55: aload         9
      57: invokestatic  #84                 // Method com/sun/prism/es2/BufferFactory.getArray:(Ljava/lang/Object;)Ljava/lang/Object;
      60: aload         9
      62: invokestatic  #85                 // Method com/sun/prism/es2/BufferFactory.getIndirectBufferByteOffset:(Ljava/lang/Object;)I
      65: iload         10
      67: invokestatic  #86                 // Method nTexImage2D1:(IIIIIIIILjava/lang/Object;IZ)Z
      70: istore        11
      72: iload         11
      74: ireturn

  void texSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);
    Code:
       0: aload         9
       2: invokestatic  #81                 // Method com/sun/prism/es2/BufferFactory.isDirect:(Ljava/lang/Object;)Z
       5: istore        10
       7: iload         10
       9: ifeq          38
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: iload         6
      21: iload         7
      23: iload         8
      25: aload         9
      27: aload         9
      29: invokestatic  #82                 // Method com/sun/prism/es2/BufferFactory.getDirectBufferByteOffset:(Ljava/lang/Object;)I
      32: invokestatic  #87                 // Method nTexSubImage2D0:(IIIIIIIILjava/lang/Object;I)V
      35: goto          64
      38: iload_1
      39: iload_2
      40: iload_3
      41: iload         4
      43: iload         5
      45: iload         6
      47: iload         7
      49: iload         8
      51: aload         9
      53: invokestatic  #84                 // Method com/sun/prism/es2/BufferFactory.getArray:(Ljava/lang/Object;)Ljava/lang/Object;
      56: aload         9
      58: invokestatic  #85                 // Method com/sun/prism/es2/BufferFactory.getIndirectBufferByteOffset:(Ljava/lang/Object;)I
      61: invokestatic  #88                 // Method nTexSubImage2D1:(IIIIIIIILjava/lang/Object;I)V
      64: return

  void updateViewportAndDepthTest(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #89                 // Field viewportX:I
       4: iload_1
       5: if_icmpne     33
       8: aload_0
       9: getfield      #90                 // Field viewportY:I
      12: iload_2
      13: if_icmpne     33
      16: aload_0
      17: getfield      #91                 // Field viewportWidth:I
      20: iload_3
      21: if_icmpne     33
      24: aload_0
      25: getfield      #92                 // Field viewportHeight:I
      28: iload         4
      30: if_icmpeq     66
      33: aload_0
      34: iload_1
      35: putfield      #89                 // Field viewportX:I
      38: aload_0
      39: iload_2
      40: putfield      #90                 // Field viewportY:I
      43: aload_0
      44: iload_3
      45: putfield      #91                 // Field viewportWidth:I
      48: aload_0
      49: iload         4
      51: putfield      #92                 // Field viewportHeight:I
      54: aload_0
      55: getfield      #11                 // Field nativeCtxInfo:J
      58: iload_1
      59: iload_2
      60: iload_3
      61: iload         4
      63: invokestatic  #93                 // Method nUpdateViewport:(JIIII)V
      66: aload_0
      67: getfield      #4                  // Field depthTest:Z
      70: iload         5
      72: if_icmpeq     90
      75: aload_0
      76: getfield      #11                 // Field nativeCtxInfo:J
      79: iload         5
      81: invokestatic  #94                 // Method nSetDepthTest:(JZ)V
      84: aload_0
      85: iload         5
      87: putfield      #4                  // Field depthTest:Z
      90: return

  void updateMSAAState(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field msaa:Z
       4: iload_1
       5: if_icmpeq     21
       8: aload_0
       9: getfield      #11                 // Field nativeCtxInfo:J
      12: iload_1
      13: invokestatic  #95                 // Method nSetMSAA:(JZ)V
      16: aload_0
      17: iload_1
      18: putfield      #5                  // Field msaa:Z
      21: return

  void updateFilterState(int, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: invokestatic  #96                 // Method nUpdateFilterState:(JIZ)V
       9: return

  void updateWrapState(int, com.sun.prism.Texture$WrapMode);
    Code:
       0: getstatic     #97                 // Field com/sun/prism/es2/GLContext$1.$SwitchMap$com$sun$prism$Texture$WrapMode:[I
       3: aload_2
       4: invokevirtual #98                 // Method com/sun/prism/Texture$WrapMode.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 7
                     1: 52
                     2: 52
                     3: 58
                     4: 58
                     5: 58
                     6: 64
                     7: 70
               default: 71
          }
      52: bipush        100
      54: istore_3
      55: goto          85
      58: bipush        101
      60: istore_3
      61: goto          85
      64: bipush        102
      66: istore_3
      67: goto          85
      70: return
      71: new           #99                 // class java/lang/InternalError
      74: dup
      75: aload_2
      76: invokedynamic #100,  0            // InvokeDynamic #1:makeConcatWithConstants:(Lcom/sun/prism/Texture$WrapMode;)Ljava/lang/String;
      81: invokespecial #101                // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #11                 // Field nativeCtxInfo:J
      89: iload_1
      90: iload_3
      91: invokestatic  #102                // Method nUpdateWrapState:(JII)V
      94: return

  void uniform1f(int, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: fload_2
       6: invokestatic  #103                // Method nUniform1f:(JIF)V
       9: return

  void uniform2f(int, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: fload_2
       6: fload_3
       7: invokestatic  #104                // Method nUniform2f:(JIFF)V
      10: return

  void uniform3f(int, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: invokestatic  #105                // Method nUniform3f:(JIFFF)V
      12: return

  void uniform4f(int, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: fload         5
      11: invokestatic  #106                // Method nUniform4f:(JIFFFF)V
      14: return

  void uniform4fv(int, int, java.nio.FloatBuffer);
    Code:
       0: aload_3
       1: invokestatic  #81                 // Method com/sun/prism/es2/BufferFactory.isDirect:(Ljava/lang/Object;)Z
       4: istore        4
       6: iload         4
       8: ifeq          28
      11: aload_0
      12: getfield      #11                 // Field nativeCtxInfo:J
      15: iload_1
      16: iload_2
      17: aload_3
      18: aload_3
      19: invokestatic  #82                 // Method com/sun/prism/es2/BufferFactory.getDirectBufferByteOffset:(Ljava/lang/Object;)I
      22: invokestatic  #107                // Method nUniform4fv0:(JIILjava/lang/Object;I)V
      25: goto          45
      28: aload_0
      29: getfield      #11                 // Field nativeCtxInfo:J
      32: iload_1
      33: iload_2
      34: aload_3
      35: invokestatic  #84                 // Method com/sun/prism/es2/BufferFactory.getArray:(Ljava/lang/Object;)Ljava/lang/Object;
      38: aload_3
      39: invokestatic  #85                 // Method com/sun/prism/es2/BufferFactory.getIndirectBufferByteOffset:(Ljava/lang/Object;)I
      42: invokestatic  #108                // Method nUniform4fv1:(JIILjava/lang/Object;I)V
      45: return

  void uniform1i(int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: invokestatic  #109                // Method nUniform1i:(JII)V
       9: return

  void uniform2i(int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #110                // Method nUniform2i:(JIII)V
      10: return

  void uniform3i(int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: invokestatic  #111                // Method nUniform3i:(JIIII)V
      12: return

  void uniform4i(int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: iload         5
      11: invokestatic  #112                // Method nUniform4i:(JIIIII)V
      14: return

  void uniform4iv(int, int, java.nio.IntBuffer);
    Code:
       0: aload_3
       1: invokestatic  #81                 // Method com/sun/prism/es2/BufferFactory.isDirect:(Ljava/lang/Object;)Z
       4: istore        4
       6: iload         4
       8: ifeq          28
      11: aload_0
      12: getfield      #11                 // Field nativeCtxInfo:J
      15: iload_1
      16: iload_2
      17: aload_3
      18: aload_3
      19: invokestatic  #82                 // Method com/sun/prism/es2/BufferFactory.getDirectBufferByteOffset:(Ljava/lang/Object;)I
      22: invokestatic  #113                // Method nUniform4iv0:(JIILjava/lang/Object;I)V
      25: goto          45
      28: aload_0
      29: getfield      #11                 // Field nativeCtxInfo:J
      32: iload_1
      33: iload_2
      34: aload_3
      35: invokestatic  #84                 // Method com/sun/prism/es2/BufferFactory.getArray:(Ljava/lang/Object;)Ljava/lang/Object;
      38: aload_3
      39: invokestatic  #85                 // Method com/sun/prism/es2/BufferFactory.getIndirectBufferByteOffset:(Ljava/lang/Object;)I
      42: invokestatic  #114                // Method nUniform4iv1:(JIILjava/lang/Object;I)V
      45: return

  void uniformMatrix4fv(int, boolean, float[]);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokestatic  #115                // Method nUniformMatrix4fv:(JIZ[F)V
      10: return

  void enableVertexAttributes();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: invokestatic  #116                // Method nEnableVertexAttributes:(J)V
       7: return

  void disableVertexAttributes();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: invokestatic  #117                // Method nDisableVertexAttributes:(J)V
       7: return

  void drawIndexedQuads(float[], byte[], int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_3
       5: aload_1
       6: aload_2
       7: invokestatic  #118                // Method nDrawIndexedQuads:(JI[F[B)V
      10: return

  int createIndexBuffer16(short[]);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: aload_1
       5: aload_1
       6: arraylength
       7: invokestatic  #119                // Method nCreateIndexBuffer16:(J[SI)I
      10: ireturn

  void setIndexBuffer(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: iload_1
       5: invokestatic  #120                // Method nSetIndexBuffer:(JI)V
       8: return

  void setDeviceParametersFor2D();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: invokestatic  #121                // Method nSetDeviceParametersFor2D:(J)V
       7: return

  void setDeviceParametersFor3D();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: invokestatic  #122                // Method nSetDeviceParametersFor3D:(J)V
       7: return

  long createES2Mesh();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: invokestatic  #123                // Method nCreateES2Mesh:(J)J
       7: lreturn

  void releaseES2Mesh(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: invokestatic  #124                // Method nReleaseES2Mesh:(JJ)V
       8: return

  boolean buildNativeGeometry(long, float[], int, short[], int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: aload_3
       6: iload         4
       8: aload         5
      10: iload         6
      12: invokestatic  #125                // Method nBuildNativeGeometryShort:(JJ[FI[SI)Z
      15: ireturn

  boolean buildNativeGeometry(long, float[], int, int[], int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: aload_3
       6: iload         4
       8: aload         5
      10: iload         6
      12: invokestatic  #126                // Method nBuildNativeGeometryInt:(JJ[FI[II)Z
      15: ireturn

  long createES2PhongMaterial();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: invokestatic  #127                // Method nCreateES2PhongMaterial:(J)J
       7: lreturn

  void releaseES2PhongMaterial(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: invokestatic  #128                // Method nReleaseES2PhongMaterial:(JJ)V
       8: return

  void setSolidColor(long, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: fload_3
       6: fload         4
       8: fload         5
      10: fload         6
      12: invokestatic  #129                // Method nSetSolidColor:(JJFFFF)V
      15: return

  void setMap(long, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: iload_3
       6: iload         4
       8: invokestatic  #130                // Method nSetMap:(JJII)V
      11: return

  long createES2MeshView(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: invokestatic  #131                // Method nCreateES2MeshView:(JJ)J
       8: lreturn

  void releaseES2MeshView(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: invokestatic  #132                // Method nReleaseES2MeshView:(JJ)V
       8: return

  void setCullingMode(long, int);
    Code:
       0: iload_3
       1: getstatic     #133                // Field com/sun/prism/MeshView.CULL_NONE:I
       4: if_icmpne     14
       7: bipush        112
       9: istore        4
      11: goto          56
      14: iload_3
      15: getstatic     #134                // Field com/sun/prism/MeshView.CULL_BACK:I
      18: if_icmpne     28
      21: bipush        110
      23: istore        4
      25: goto          56
      28: iload_3
      29: getstatic     #135                // Field com/sun/prism/MeshView.CULL_FRONT:I
      32: if_icmpne     42
      35: bipush        111
      37: istore        4
      39: goto          56
      42: new           #75                 // class java/lang/IllegalArgumentException
      45: dup
      46: iload_3
      47: invokedynamic #136,  0            // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;
      52: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #11                 // Field nativeCtxInfo:J
      60: lload_1
      61: iload         4
      63: invokestatic  #137                // Method nSetCullingMode:(JJI)V
      66: return

  void setMaterial(long, long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: lload_3
       6: invokestatic  #138                // Method nSetMaterial:(JJJ)V
       9: return

  void setWireframe(long, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: iload_3
       6: invokestatic  #139                // Method nSetWireframe:(JJZ)V
       9: return

  void setAmbientLight(long, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: fload_3
       6: fload         4
       8: fload         5
      10: invokestatic  #140                // Method nSetAmbientLight:(JJFFF)V
      13: return

  void setPointLight(long, int, float, float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: iload_3
       6: fload         4
       8: fload         5
      10: fload         6
      12: fload         7
      14: fload         8
      16: fload         9
      18: fload         10
      20: invokestatic  #141                // Method nSetPointLight:(JJIFFFFFFF)V
      23: return

  void renderMeshView(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nativeCtxInfo:J
       4: lload_1
       5: invokestatic  #142                // Method nRenderMeshView:(JJ)V
       8: return

  static {};
    Code:
       0: getstatic     #143                // Field com/sun/prism/PhongMaterial$MapType.DIFFUSE:Lcom/sun/prism/PhongMaterial$MapType;
       3: invokevirtual #144                // Method com/sun/prism/PhongMaterial$MapType.ordinal:()I
       6: putstatic     #145                // Field MAPTYPE_DIFFUSE:I
       9: getstatic     #146                // Field com/sun/prism/PhongMaterial$MapType.SPECULAR:Lcom/sun/prism/PhongMaterial$MapType;
      12: invokevirtual #144                // Method com/sun/prism/PhongMaterial$MapType.ordinal:()I
      15: putstatic     #147                // Field MAPTYPE_SPECULAR:I
      18: getstatic     #148                // Field com/sun/prism/PhongMaterial$MapType.BUMP:Lcom/sun/prism/PhongMaterial$MapType;
      21: invokevirtual #144                // Method com/sun/prism/PhongMaterial$MapType.ordinal:()I
      24: putstatic     #149                // Field MAPTYPE_BUMP:I
      27: getstatic     #150                // Field com/sun/prism/PhongMaterial$MapType.SELF_ILLUM:Lcom/sun/prism/PhongMaterial$MapType;
      30: invokevirtual #144                // Method com/sun/prism/PhongMaterial$MapType.ordinal:()I
      33: putstatic     #151                // Field MAPTYPE_SELFILLUM:I
      36: return
}
