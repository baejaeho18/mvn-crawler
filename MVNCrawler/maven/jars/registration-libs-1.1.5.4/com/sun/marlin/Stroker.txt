Compiled from "Stroker.java"
public final class com.sun.marlin.Stroker implements com.sun.javafx.geom.PathConsumer2D,com.sun.marlin.MarlinConst {
  private static final int MOVE_TO;

  private static final int DRAWING_OP_TO;

  private static final int CLOSE;

  private static final float ERR_JOIN;

  private static final float ROUND_JOIN_THRESHOLD;

  private static final float C;

  private static final float SQRT_2;

  private com.sun.javafx.geom.PathConsumer2D out;

  private int capStyle;

  private int joinStyle;

  private float lineWidth2;

  private float invHalfLineWidth2Sq;

  private final float[] offset0;

  private final float[] offset1;

  private final float[] offset2;

  private final float[] miter;

  private float miterLimitSq;

  private int prev;

  private float sx0;

  private float sy0;

  private float sdx;

  private float sdy;

  private float cx0;

  private float cy0;

  private float cdx;

  private float cdy;

  private float smx;

  private float smy;

  private float cmx;

  private float cmy;

  private final com.sun.marlin.Helpers$PolyStack reverse;

  private final float[] lp;

  private final float[] rp;

  final com.sun.marlin.RendererContext rdrCtx;

  final com.sun.marlin.Curve curve;

  private float[] clipRect;

  private int cOutCode;

  private int sOutCode;

  private boolean opened;

  private boolean capStart;

  private boolean monotonize;

  private boolean subdivide;

  private final com.sun.marlin.TransformingPathConsumer2D$CurveClipSplitter curveSplitter;

  static final boolean $assertionsDisabled;

  com.sun.marlin.Stroker(com.sun.marlin.RendererContext);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_2
       6: newarray       float
       8: putfield      #3                  // Field offset0:[F
      11: aload_0
      12: iconst_2
      13: newarray       float
      15: putfield      #4                  // Field offset1:[F
      18: aload_0
      19: iconst_2
      20: newarray       float
      22: putfield      #5                  // Field offset2:[F
      25: aload_0
      26: iconst_2
      27: newarray       float
      29: putfield      #6                  // Field miter:[F
      32: aload_0
      33: bipush        8
      35: newarray       float
      37: putfield      #7                  // Field lp:[F
      40: aload_0
      41: bipush        8
      43: newarray       float
      45: putfield      #8                  // Field rp:[F
      48: aload_0
      49: iconst_0
      50: putfield      #9                  // Field cOutCode:I
      53: aload_0
      54: iconst_0
      55: putfield      #10                 // Field sOutCode:I
      58: aload_0
      59: iconst_0
      60: putfield      #11                 // Field opened:Z
      63: aload_0
      64: iconst_0
      65: putfield      #12                 // Field capStart:Z
      68: aload_0
      69: getstatic     #13                 // Field DO_CLIP_SUBDIVIDER:Z
      72: putfield      #14                 // Field subdivide:Z
      75: aload_0
      76: aload_1
      77: putfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      80: aload_0
      81: aload_1
      82: getfield      #16                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
      85: ifnull        134
      88: new           #17                 // class com/sun/marlin/Helpers$PolyStack
      91: dup
      92: aload_1
      93: aload_1
      94: getfield      #16                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
      97: getfield      #18                 // Field com/sun/marlin/RendererStats.stat_str_polystack_types:Lcom/sun/marlin/stats/StatLong;
     100: aload_1
     101: getfield      #16                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
     104: getfield      #19                 // Field com/sun/marlin/RendererStats.stat_str_polystack_curves:Lcom/sun/marlin/stats/StatLong;
     107: aload_1
     108: getfield      #16                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
     111: getfield      #20                 // Field com/sun/marlin/RendererStats.hist_str_polystack_curves:Lcom/sun/marlin/stats/Histogram;
     114: aload_1
     115: getfield      #16                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
     118: getfield      #21                 // Field com/sun/marlin/RendererStats.stat_array_str_polystack_curves:Lcom/sun/marlin/stats/StatLong;
     121: aload_1
     122: getfield      #16                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
     125: getfield      #22                 // Field com/sun/marlin/RendererStats.stat_array_str_polystack_types:Lcom/sun/marlin/stats/StatLong;
     128: invokespecial #23                 // Method com/sun/marlin/Helpers$PolyStack."<init>":(Lcom/sun/marlin/RendererContext;Lcom/sun/marlin/stats/StatLong;Lcom/sun/marlin/stats/StatLong;Lcom/sun/marlin/stats/Histogram;Lcom/sun/marlin/stats/StatLong;Lcom/sun/marlin/stats/StatLong;)V
     131: goto          142
     134: new           #17                 // class com/sun/marlin/Helpers$PolyStack
     137: dup
     138: aload_1
     139: invokespecial #24                 // Method com/sun/marlin/Helpers$PolyStack."<init>":(Lcom/sun/marlin/RendererContext;)V
     142: putfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
     145: aload_0
     146: aload_1
     147: getfield      #26                 // Field com/sun/marlin/RendererContext.curve:Lcom/sun/marlin/Curve;
     150: putfield      #27                 // Field curve:Lcom/sun/marlin/Curve;
     153: aload_0
     154: aload_1
     155: getfield      #28                 // Field com/sun/marlin/RendererContext.curveClipSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
     158: putfield      #29                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
     161: return

  public com.sun.marlin.Stroker init(com.sun.javafx.geom.PathConsumer2D, float, int, int, float, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       5: aload_0
       6: fload_2
       7: fconst_2
       8: fdiv
       9: putfield      #31                 // Field lineWidth2:F
      12: aload_0
      13: fconst_1
      14: fconst_2
      15: aload_0
      16: getfield      #31                 // Field lineWidth2:F
      19: fmul
      20: aload_0
      21: getfield      #31                 // Field lineWidth2:F
      24: fmul
      25: fdiv
      26: putfield      #32                 // Field invHalfLineWidth2Sq:F
      29: aload_0
      30: iload         6
      32: putfield      #33                 // Field monotonize:Z
      35: aload_0
      36: iload_3
      37: putfield      #34                 // Field capStyle:I
      40: aload_0
      41: iload         4
      43: putfield      #35                 // Field joinStyle:I
      46: fload         5
      48: aload_0
      49: getfield      #31                 // Field lineWidth2:F
      52: fmul
      53: fstore        7
      55: aload_0
      56: fload         7
      58: fload         7
      60: fmul
      61: putfield      #36                 // Field miterLimitSq:F
      64: aload_0
      65: iconst_2
      66: putfield      #38                 // Field prev:I
      69: aload_0
      70: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      73: iconst_1
      74: putfield      #39                 // Field com/sun/marlin/RendererContext.stroking:I
      77: aload_0
      78: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      81: getfield      #40                 // Field com/sun/marlin/RendererContext.doClip:Z
      84: ifeq          228
      87: aload_0
      88: getfield      #31                 // Field lineWidth2:F
      91: fstore        8
      93: iload_3
      94: iconst_2
      95: if_icmpne     106
      98: fload         8
     100: getstatic     #41                 // Field SQRT_2:F
     103: fmul
     104: fstore        8
     106: iload         4
     108: ifne          123
     111: fload         8
     113: fload         7
     115: fcmpg
     116: ifge          123
     119: fload         7
     121: fstore        8
     123: aload_0
     124: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
     127: getfield      #42                 // Field com/sun/marlin/RendererContext.clipRect:[F
     130: astore        9
     132: aload         9
     134: iconst_0
     135: dup2
     136: faload
     137: fload         8
     139: fsub
     140: fastore
     141: aload         9
     143: iconst_1
     144: dup2
     145: faload
     146: fload         8
     148: fadd
     149: fastore
     150: aload         9
     152: iconst_2
     153: dup2
     154: faload
     155: fload         8
     157: fsub
     158: fastore
     159: aload         9
     161: iconst_3
     162: dup2
     163: faload
     164: fload         8
     166: fadd
     167: fastore
     168: aload_0
     169: aload         9
     171: putfield      #43                 // Field clipRect:[F
     174: getstatic     #44                 // Field com/sun/marlin/MarlinConst.DO_LOG_CLIP:Z
     177: ifeq          198
     180: aload_0
     181: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
     184: getfield      #42                 // Field com/sun/marlin/RendererContext.clipRect:[F
     187: invokestatic  #45                 // Method java/util/Arrays.toString:([F)Ljava/lang/String;
     190: invokedynamic #46,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     195: invokestatic  #47                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
     198: getstatic     #13                 // Field DO_CLIP_SUBDIVIDER:Z
     201: ifeq          220
     204: aload_0
     205: iload         6
     207: putfield      #14                 // Field subdivide:Z
     210: aload_0
     211: getfield      #29                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
     214: invokevirtual #48                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.init:()V
     217: goto          225
     220: aload_0
     221: iconst_0
     222: putfield      #14                 // Field subdivide:Z
     225: goto          243
     228: aload_0
     229: aconst_null
     230: putfield      #43                 // Field clipRect:[F
     233: aload_0
     234: iconst_0
     235: putfield      #9                  // Field cOutCode:I
     238: aload_0
     239: iconst_0
     240: putfield      #10                 // Field sOutCode:I
     243: aload_0
     244: areturn

  public void disableClipping();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #43                 // Field clipRect:[F
       5: aload_0
       6: iconst_0
       7: putfield      #9                  // Field cOutCode:I
      10: aload_0
      11: iconst_0
      12: putfield      #10                 // Field sOutCode:I
      15: return

  void dispose();
    Code:
       0: aload_0
       1: getfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
       4: invokevirtual #49                 // Method com/sun/marlin/Helpers$PolyStack.dispose:()V
       7: aload_0
       8: iconst_0
       9: putfield      #11                 // Field opened:Z
      12: aload_0
      13: iconst_0
      14: putfield      #12                 // Field capStart:Z
      17: return

  private static void computeOffset(float, float, float, float[]);
    Code:
       0: fload_0
       1: fload_0
       2: fmul
       3: fload_1
       4: fload_1
       5: fmul
       6: fadd
       7: fstore        4
       9: fload         4
      11: fconst_0
      12: fcmpl
      13: ifne          27
      16: aload_3
      17: iconst_0
      18: fconst_0
      19: fastore
      20: aload_3
      21: iconst_1
      22: fconst_0
      23: fastore
      24: goto          55
      27: fload         4
      29: f2d
      30: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
      33: d2f
      34: fstore        4
      36: aload_3
      37: iconst_0
      38: fload_1
      39: fload_2
      40: fmul
      41: fload         4
      43: fdiv
      44: fastore
      45: aload_3
      46: iconst_1
      47: fload_0
      48: fload_2
      49: fmul
      50: fneg
      51: fload         4
      53: fdiv
      54: fastore
      55: return

  private static boolean isCW(float, float, float, float);
    Code:
       0: fload_0
       1: fload_3
       2: fmul
       3: fload_1
       4: fload_2
       5: fmul
       6: fcmpg
       7: ifgt          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void mayDrawRoundJoin(float, float, float, float, float, float, boolean);
    Code:
       0: fload_3
       1: fconst_0
       2: fcmpl
       3: ifne          13
       6: fload         4
       8: fconst_0
       9: fcmpl
      10: ifeq          27
      13: fload         5
      15: fconst_0
      16: fcmpl
      17: ifne          28
      20: fload         6
      22: fconst_0
      23: fcmpl
      24: ifne          28
      27: return
      28: fload_3
      29: fload         5
      31: fsub
      32: fstore        8
      34: fload         4
      36: fload         6
      38: fsub
      39: fstore        9
      41: fload         8
      43: fload         8
      45: fmul
      46: fload         9
      48: fload         9
      50: fmul
      51: fadd
      52: fstore        10
      54: fload         10
      56: getstatic     #51                 // Field ROUND_JOIN_THRESHOLD:F
      59: fcmpg
      60: ifge          64
      63: return
      64: iload         7
      66: ifeq          87
      69: fload_3
      70: fneg
      71: fstore_3
      72: fload         4
      74: fneg
      75: fstore        4
      77: fload         5
      79: fneg
      80: fstore        5
      82: fload         6
      84: fneg
      85: fstore        6
      87: aload_0
      88: fload_1
      89: fload_2
      90: fload_3
      91: fload         4
      93: fload         5
      95: fload         6
      97: iload         7
      99: invokespecial #52                 // Method drawRoundJoin:(FFFFFFZ)V
     102: return

  private void drawRoundJoin(float, float, float, float, float, float, boolean);
    Code:
       0: fload_3
       1: fload         5
       3: fmul
       4: fload         4
       6: fload         6
       8: fmul
       9: fadd
      10: fstore        8
      12: fload         8
      14: fconst_0
      15: fcmpl
      16: iflt          37
      19: aload_0
      20: fload_1
      21: fload_2
      22: fload_3
      23: fload         4
      25: fload         5
      27: fload         6
      29: iload         7
      31: invokespecial #53                 // Method drawBezApproxForArc:(FFFFFFZ)V
      34: goto          137
      37: fload         6
      39: fload         4
      41: fsub
      42: fstore        9
      44: fload_3
      45: fload         5
      47: fsub
      48: fstore        10
      50: fload         9
      52: fload         9
      54: fmul
      55: fload         10
      57: fload         10
      59: fmul
      60: fadd
      61: f2d
      62: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
      65: d2f
      66: fstore        11
      68: aload_0
      69: getfield      #31                 // Field lineWidth2:F
      72: fload         11
      74: fdiv
      75: fstore        12
      77: fload         9
      79: fload         12
      81: fmul
      82: fstore        13
      84: fload         10
      86: fload         12
      88: fmul
      89: fstore        14
      91: iload         7
      93: ifeq          106
      96: fload         13
      98: fneg
      99: fstore        13
     101: fload         14
     103: fneg
     104: fstore        14
     106: aload_0
     107: fload_1
     108: fload_2
     109: fload_3
     110: fload         4
     112: fload         13
     114: fload         14
     116: iload         7
     118: invokespecial #53                 // Method drawBezApproxForArc:(FFFFFFZ)V
     121: aload_0
     122: fload_1
     123: fload_2
     124: fload         13
     126: fload         14
     128: fload         5
     130: fload         6
     132: iload         7
     134: invokespecial #53                 // Method drawBezApproxForArc:(FFFFFFZ)V
     137: return

  private void drawBezApproxForArc(float, float, float, float, float, float, boolean);
    Code:
       0: fload_3
       1: fload         5
       3: fmul
       4: fload         4
       6: fload         6
       8: fmul
       9: fadd
      10: aload_0
      11: getfield      #32                 // Field invHalfLineWidth2Sq:F
      14: fmul
      15: fstore        8
      17: fload         8
      19: ldc           #54                 // float 0.5f
      21: fcmpl
      22: iflt          26
      25: return
      26: ldc2_w        #55                 // double 1.3333333333333333d
      29: ldc2_w        #57                 // double 0.5d
      32: fload         8
      34: f2d
      35: dsub
      36: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
      39: dmul
      40: dconst_1
      41: fload         8
      43: f2d
      44: ldc2_w        #57                 // double 0.5d
      47: dadd
      48: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
      51: dadd
      52: ddiv
      53: d2f
      54: fstore        9
      56: iload         7
      58: ifeq          66
      61: fload         9
      63: fneg
      64: fstore        9
      66: fload_1
      67: fload_3
      68: fadd
      69: fstore        10
      71: fload_2
      72: fload         4
      74: fadd
      75: fstore        11
      77: fload         10
      79: fload         9
      81: fload         4
      83: fmul
      84: fsub
      85: fstore        12
      87: fload         11
      89: fload         9
      91: fload_3
      92: fmul
      93: fadd
      94: fstore        13
      96: fload_1
      97: fload         5
      99: fadd
     100: fstore        14
     102: fload_2
     103: fload         6
     105: fadd
     106: fstore        15
     108: fload         14
     110: fload         9
     112: fload         6
     114: fmul
     115: fadd
     116: fstore        16
     118: fload         15
     120: fload         9
     122: fload         5
     124: fmul
     125: fsub
     126: fstore        17
     128: aload_0
     129: fload         10
     131: fload         11
     133: fload         12
     135: fload         13
     137: fload         16
     139: fload         17
     141: fload         14
     143: fload         15
     145: iload         7
     147: invokespecial #59                 // Method emitCurveTo:(FFFFFFFFZ)V
     150: return

  private void drawRoundCap(float, float, float, float);
    Code:
       0: getstatic     #60                 // Field C:F
       3: fload_3
       4: fmul
       5: fstore        5
       7: getstatic     #60                 // Field C:F
      10: fload         4
      12: fmul
      13: fstore        6
      15: aload_0
      16: fload_1
      17: fload_3
      18: fadd
      19: fload         6
      21: fsub
      22: fload_2
      23: fload         4
      25: fadd
      26: fload         5
      28: fadd
      29: fload_1
      30: fload         4
      32: fsub
      33: fload         5
      35: fadd
      36: fload_2
      37: fload_3
      38: fadd
      39: fload         6
      41: fadd
      42: fload_1
      43: fload         4
      45: fsub
      46: fload_2
      47: fload_3
      48: fadd
      49: invokespecial #61                 // Method emitCurveTo:(FFFFFF)V
      52: aload_0
      53: fload_1
      54: fload         4
      56: fsub
      57: fload         5
      59: fsub
      60: fload_2
      61: fload_3
      62: fadd
      63: fload         6
      65: fsub
      66: fload_1
      67: fload_3
      68: fsub
      69: fload         6
      71: fsub
      72: fload_2
      73: fload         4
      75: fsub
      76: fload         5
      78: fadd
      79: fload_1
      80: fload_3
      81: fsub
      82: fload_2
      83: fload         4
      85: fsub
      86: invokespecial #61                 // Method emitCurveTo:(FFFFFF)V
      89: return

  private static void computeMiter(float, float, float, float, float, float, float, float, float[]);
    Code:
       0: fload_2
       1: fload_0
       2: fsub
       3: fstore        9
       5: fload_3
       6: fload_1
       7: fsub
       8: fstore        10
      10: fload         6
      12: fload         4
      14: fsub
      15: fstore        11
      17: fload         7
      19: fload         5
      21: fsub
      22: fstore        12
      24: fload         9
      26: fload         12
      28: fmul
      29: fload         11
      31: fload         10
      33: fmul
      34: fsub
      35: fstore        13
      37: fload         11
      39: fload_1
      40: fload         5
      42: fsub
      43: fmul
      44: fload         12
      46: fload_0
      47: fload         4
      49: fsub
      50: fmul
      51: fsub
      52: fstore        14
      54: fload         14
      56: fload         13
      58: fdiv
      59: fstore        14
      61: aload         8
      63: iconst_0
      64: fload_0
      65: fload         14
      67: fload         9
      69: fmul
      70: fadd
      71: fastore
      72: aload         8
      74: iconst_1
      75: fload_1
      76: fload         14
      78: fload         10
      80: fmul
      81: fadd
      82: fastore
      83: return

  private static void safeComputeMiter(float, float, float, float, float, float, float, float, float[]);
    Code:
       0: fload_2
       1: fload_0
       2: fsub
       3: fstore        9
       5: fload_3
       6: fload_1
       7: fsub
       8: fstore        10
      10: fload         6
      12: fload         4
      14: fsub
      15: fstore        11
      17: fload         7
      19: fload         5
      21: fsub
      22: fstore        12
      24: fload         9
      26: fload         12
      28: fmul
      29: fload         11
      31: fload         10
      33: fmul
      34: fsub
      35: fstore        13
      37: fload         13
      39: fconst_0
      40: fcmpl
      41: ifne          67
      44: aload         8
      46: iconst_2
      47: fload_0
      48: fload         4
      50: fadd
      51: fconst_2
      52: fdiv
      53: fastore
      54: aload         8
      56: iconst_3
      57: fload_1
      58: fload         5
      60: fadd
      61: fconst_2
      62: fdiv
      63: fastore
      64: goto          113
      67: fload         11
      69: fload_1
      70: fload         5
      72: fsub
      73: fmul
      74: fload         12
      76: fload_0
      77: fload         4
      79: fsub
      80: fmul
      81: fsub
      82: fstore        14
      84: fload         14
      86: fload         13
      88: fdiv
      89: fstore        14
      91: aload         8
      93: iconst_2
      94: fload_0
      95: fload         14
      97: fload         9
      99: fmul
     100: fadd
     101: fastore
     102: aload         8
     104: iconst_3
     105: fload_1
     106: fload         14
     108: fload         10
     110: fmul
     111: fadd
     112: fastore
     113: return

  private void drawMiter(float, float, float, float, float, float, float, float, float, float, boolean);
    Code:
       0: fload         9
       2: fload         7
       4: fcmpl
       5: ifne          16
       8: fload         10
      10: fload         8
      12: fcmpl
      13: ifeq          42
      16: fload_1
      17: fconst_0
      18: fcmpl
      19: ifne          28
      22: fload_2
      23: fconst_0
      24: fcmpl
      25: ifeq          42
      28: fload         5
      30: fconst_0
      31: fcmpl
      32: ifne          43
      35: fload         6
      37: fconst_0
      38: fcmpl
      39: ifne          43
      42: return
      43: iload         11
      45: ifeq          68
      48: fload         7
      50: fneg
      51: fstore        7
      53: fload         8
      55: fneg
      56: fstore        8
      58: fload         9
      60: fneg
      61: fstore        9
      63: fload         10
      65: fneg
      66: fstore        10
      68: fload_3
      69: fload_1
      70: fsub
      71: fload         7
      73: fadd
      74: fload         4
      76: fload_2
      77: fsub
      78: fload         8
      80: fadd
      81: fload_3
      82: fload         7
      84: fadd
      85: fload         4
      87: fload         8
      89: fadd
      90: fload         5
      92: fload_3
      93: fadd
      94: fload         9
      96: fadd
      97: fload         6
      99: fload         4
     101: fadd
     102: fload         10
     104: fadd
     105: fload_3
     106: fload         9
     108: fadd
     109: fload         4
     111: fload         10
     113: fadd
     114: aload_0
     115: getfield      #6                  // Field miter:[F
     118: invokestatic  #62                 // Method computeMiter:(FFFFFFFF[F)V
     121: aload_0
     122: getfield      #6                  // Field miter:[F
     125: iconst_0
     126: faload
     127: fstore        12
     129: aload_0
     130: getfield      #6                  // Field miter:[F
     133: iconst_1
     134: faload
     135: fstore        13
     137: fload         12
     139: fload_3
     140: fsub
     141: fload         12
     143: fload_3
     144: fsub
     145: fmul
     146: fload         13
     148: fload         4
     150: fsub
     151: fload         13
     153: fload         4
     155: fsub
     156: fmul
     157: fadd
     158: fstore        14
     160: fload         14
     162: aload_0
     163: getfield      #36                 // Field miterLimitSq:F
     166: fcmpg
     167: ifge          180
     170: aload_0
     171: fload         12
     173: fload         13
     175: iload         11
     177: invokespecial #63                 // Method emitLineTo:(FFZ)V
     180: return

  public void moveTo(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: aload_0
       4: getfield      #9                  // Field cOutCode:I
       7: invokespecial #64                 // Method _moveTo:(FFI)V
      10: aload_0
      11: fload_1
      12: putfield      #65                 // Field sx0:F
      15: aload_0
      16: fload_2
      17: putfield      #66                 // Field sy0:F
      20: aload_0
      21: fconst_1
      22: putfield      #67                 // Field sdx:F
      25: aload_0
      26: fconst_0
      27: putfield      #68                 // Field sdy:F
      30: aload_0
      31: iconst_0
      32: putfield      #11                 // Field opened:Z
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field capStart:Z
      40: aload_0
      41: getfield      #43                 // Field clipRect:[F
      44: ifnull        67
      47: fload_1
      48: fload_2
      49: aload_0
      50: getfield      #43                 // Field clipRect:[F
      53: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      56: istore_3
      57: aload_0
      58: iload_3
      59: putfield      #9                  // Field cOutCode:I
      62: aload_0
      63: iload_3
      64: putfield      #10                 // Field sOutCode:I
      67: return

  private void _moveTo(float, float, int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field prev:I
       4: ifne          20
       7: aload_0
       8: fload_1
       9: putfield      #70                 // Field cx0:F
      12: aload_0
      13: fload_2
      14: putfield      #71                 // Field cy0:F
      17: goto          58
      20: aload_0
      21: getfield      #38                 // Field prev:I
      24: iconst_1
      25: if_icmpne     33
      28: aload_0
      29: iload_3
      30: invokespecial #72                 // Method finish:(I)V
      33: aload_0
      34: iconst_0
      35: putfield      #38                 // Field prev:I
      38: aload_0
      39: fload_1
      40: putfield      #70                 // Field cx0:F
      43: aload_0
      44: fload_2
      45: putfield      #71                 // Field cy0:F
      48: aload_0
      49: fconst_1
      50: putfield      #73                 // Field cdx:F
      53: aload_0
      54: fconst_0
      55: putfield      #74                 // Field cdy:F
      58: return

  public void lineTo(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: iconst_0
       4: invokespecial #75                 // Method lineTo:(FFZ)V
       7: return

  private void lineTo(float, float, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field cOutCode:I
       4: istore        4
       6: iload_3
       7: ifne          126
      10: aload_0
      11: getfield      #43                 // Field clipRect:[F
      14: ifnull        126
      17: fload_1
      18: fload_2
      19: aload_0
      20: getfield      #43                 // Field clipRect:[F
      23: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      26: istore        5
      28: iload         4
      30: iload         5
      32: ior
      33: istore        6
      35: iload         6
      37: ifeq          120
      40: iload         4
      42: iload         5
      44: iand
      45: istore        7
      47: iload         7
      49: ifne          100
      52: aload_0
      53: getfield      #14                 // Field subdivide:Z
      56: ifeq          120
      59: aload_0
      60: iconst_0
      61: putfield      #14                 // Field subdivide:Z
      64: aload_0
      65: getfield      #29                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
      68: aload_0
      69: getfield      #70                 // Field cx0:F
      72: aload_0
      73: getfield      #71                 // Field cy0:F
      76: fload_1
      77: fload_2
      78: iload         6
      80: aload_0
      81: invokevirtual #76                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.splitLine:(FFFFILcom/sun/javafx/geom/PathConsumer2D;)Z
      84: istore        8
      86: aload_0
      87: iconst_1
      88: putfield      #14                 // Field subdivide:Z
      91: iload         8
      93: ifeq          97
      96: return
      97: goto          120
     100: aload_0
     101: iload         5
     103: putfield      #9                  // Field cOutCode:I
     106: aload_0
     107: fload_1
     108: fload_2
     109: iload         4
     111: invokespecial #64                 // Method _moveTo:(FFI)V
     114: aload_0
     115: iconst_1
     116: putfield      #11                 // Field opened:Z
     119: return
     120: aload_0
     121: iload         5
     123: putfield      #9                  // Field cOutCode:I
     126: fload_1
     127: aload_0
     128: getfield      #70                 // Field cx0:F
     131: fsub
     132: fstore        5
     134: fload_2
     135: aload_0
     136: getfield      #71                 // Field cy0:F
     139: fsub
     140: fstore        6
     142: fload         5
     144: fconst_0
     145: fcmpl
     146: ifne          159
     149: fload         6
     151: fconst_0
     152: fcmpl
     153: ifne          159
     156: fconst_1
     157: fstore        5
     159: fload         5
     161: fload         6
     163: aload_0
     164: getfield      #31                 // Field lineWidth2:F
     167: aload_0
     168: getfield      #3                  // Field offset0:[F
     171: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     174: aload_0
     175: getfield      #3                  // Field offset0:[F
     178: iconst_0
     179: faload
     180: fstore        7
     182: aload_0
     183: getfield      #3                  // Field offset0:[F
     186: iconst_1
     187: faload
     188: fstore        8
     190: aload_0
     191: aload_0
     192: getfield      #73                 // Field cdx:F
     195: aload_0
     196: getfield      #74                 // Field cdy:F
     199: aload_0
     200: getfield      #70                 // Field cx0:F
     203: aload_0
     204: getfield      #71                 // Field cy0:F
     207: fload         5
     209: fload         6
     211: aload_0
     212: getfield      #78                 // Field cmx:F
     215: aload_0
     216: getfield      #79                 // Field cmy:F
     219: fload         7
     221: fload         8
     223: iload         4
     225: invokespecial #80                 // Method drawJoin:(FFFFFFFFFFI)V
     228: aload_0
     229: aload_0
     230: getfield      #70                 // Field cx0:F
     233: fload         7
     235: fadd
     236: aload_0
     237: getfield      #71                 // Field cy0:F
     240: fload         8
     242: fadd
     243: invokespecial #81                 // Method emitLineTo:(FF)V
     246: aload_0
     247: fload_1
     248: fload         7
     250: fadd
     251: fload_2
     252: fload         8
     254: fadd
     255: invokespecial #81                 // Method emitLineTo:(FF)V
     258: aload_0
     259: aload_0
     260: getfield      #70                 // Field cx0:F
     263: fload         7
     265: fsub
     266: aload_0
     267: getfield      #71                 // Field cy0:F
     270: fload         8
     272: fsub
     273: invokespecial #82                 // Method emitLineToRev:(FF)V
     276: aload_0
     277: fload_1
     278: fload         7
     280: fsub
     281: fload_2
     282: fload         8
     284: fsub
     285: invokespecial #82                 // Method emitLineToRev:(FF)V
     288: aload_0
     289: iconst_1
     290: putfield      #38                 // Field prev:I
     293: aload_0
     294: fload_1
     295: putfield      #70                 // Field cx0:F
     298: aload_0
     299: fload_2
     300: putfield      #71                 // Field cy0:F
     303: aload_0
     304: fload         5
     306: putfield      #73                 // Field cdx:F
     309: aload_0
     310: fload         6
     312: putfield      #74                 // Field cdy:F
     315: aload_0
     316: fload         7
     318: putfield      #78                 // Field cmx:F
     321: aload_0
     322: fload         8
     324: putfield      #79                 // Field cmy:F
     327: return

  public void closePath();
    Code:
       0: aload_0
       1: getfield      #38                 // Field prev:I
       4: iconst_1
       5: if_icmpeq     98
       8: aload_0
       9: getfield      #11                 // Field opened:Z
      12: ifne          98
      15: aload_0
      16: getfield      #38                 // Field prev:I
      19: iconst_2
      20: if_icmpne     24
      23: return
      24: aload_0
      25: aload_0
      26: getfield      #70                 // Field cx0:F
      29: aload_0
      30: getfield      #71                 // Field cy0:F
      33: aload_0
      34: getfield      #31                 // Field lineWidth2:F
      37: fsub
      38: invokespecial #83                 // Method emitMoveTo:(FF)V
      41: aload_0
      42: fconst_1
      43: putfield      #67                 // Field sdx:F
      46: aload_0
      47: fconst_0
      48: putfield      #68                 // Field sdy:F
      51: aload_0
      52: fconst_1
      53: putfield      #73                 // Field cdx:F
      56: aload_0
      57: fconst_0
      58: putfield      #74                 // Field cdy:F
      61: aload_0
      62: fconst_0
      63: putfield      #84                 // Field smx:F
      66: aload_0
      67: aload_0
      68: getfield      #31                 // Field lineWidth2:F
      71: fneg
      72: putfield      #85                 // Field smy:F
      75: aload_0
      76: fconst_0
      77: putfield      #78                 // Field cmx:F
      80: aload_0
      81: aload_0
      82: getfield      #31                 // Field lineWidth2:F
      85: fneg
      86: putfield      #79                 // Field cmy:F
      89: aload_0
      90: aload_0
      91: getfield      #9                  // Field cOutCode:I
      94: invokespecial #72                 // Method finish:(I)V
      97: return
      98: aload_0
      99: getfield      #10                 // Field sOutCode:I
     102: aload_0
     103: getfield      #9                  // Field cOutCode:I
     106: iand
     107: ifne          271
     110: aload_0
     111: getfield      #70                 // Field cx0:F
     114: aload_0
     115: getfield      #65                 // Field sx0:F
     118: fcmpl
     119: ifne          134
     122: aload_0
     123: getfield      #71                 // Field cy0:F
     126: aload_0
     127: getfield      #66                 // Field sy0:F
     130: fcmpl
     131: ifeq          147
     134: aload_0
     135: aload_0
     136: getfield      #65                 // Field sx0:F
     139: aload_0
     140: getfield      #66                 // Field sy0:F
     143: iconst_1
     144: invokespecial #75                 // Method lineTo:(FFZ)V
     147: aload_0
     148: aload_0
     149: getfield      #73                 // Field cdx:F
     152: aload_0
     153: getfield      #74                 // Field cdy:F
     156: aload_0
     157: getfield      #70                 // Field cx0:F
     160: aload_0
     161: getfield      #71                 // Field cy0:F
     164: aload_0
     165: getfield      #67                 // Field sdx:F
     168: aload_0
     169: getfield      #68                 // Field sdy:F
     172: aload_0
     173: getfield      #78                 // Field cmx:F
     176: aload_0
     177: getfield      #79                 // Field cmy:F
     180: aload_0
     181: getfield      #84                 // Field smx:F
     184: aload_0
     185: getfield      #85                 // Field smy:F
     188: aload_0
     189: getfield      #10                 // Field sOutCode:I
     192: invokespecial #80                 // Method drawJoin:(FFFFFFFFFFI)V
     195: aload_0
     196: aload_0
     197: getfield      #65                 // Field sx0:F
     200: aload_0
     201: getfield      #84                 // Field smx:F
     204: fadd
     205: aload_0
     206: getfield      #66                 // Field sy0:F
     209: aload_0
     210: getfield      #85                 // Field smy:F
     213: fadd
     214: invokespecial #81                 // Method emitLineTo:(FF)V
     217: aload_0
     218: getfield      #11                 // Field opened:Z
     221: ifeq          249
     224: aload_0
     225: aload_0
     226: getfield      #65                 // Field sx0:F
     229: aload_0
     230: getfield      #84                 // Field smx:F
     233: fsub
     234: aload_0
     235: getfield      #66                 // Field sy0:F
     238: aload_0
     239: getfield      #85                 // Field smy:F
     242: fsub
     243: invokespecial #81                 // Method emitLineTo:(FF)V
     246: goto          271
     249: aload_0
     250: aload_0
     251: getfield      #65                 // Field sx0:F
     254: aload_0
     255: getfield      #84                 // Field smx:F
     258: fsub
     259: aload_0
     260: getfield      #66                 // Field sy0:F
     263: aload_0
     264: getfield      #85                 // Field smy:F
     267: fsub
     268: invokespecial #83                 // Method emitMoveTo:(FF)V
     271: aload_0
     272: invokespecial #86                 // Method emitReverse:()V
     275: aload_0
     276: iconst_2
     277: putfield      #38                 // Field prev:I
     280: aload_0
     281: getfield      #11                 // Field opened:Z
     284: ifeq          295
     287: aload_0
     288: iconst_0
     289: putfield      #11                 // Field opened:Z
     292: goto          299
     295: aload_0
     296: invokespecial #87                 // Method emitClose:()V
     299: return

  private void emitReverse();
    Code:
       0: aload_0
       1: getfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
       4: aload_0
       5: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       8: invokevirtual #88                 // Method com/sun/marlin/Helpers$PolyStack.popAll:(Lcom/sun/javafx/geom/PathConsumer2D;)V
      11: return

  public void pathDone();
    Code:
       0: aload_0
       1: getfield      #38                 // Field prev:I
       4: iconst_1
       5: if_icmpne     16
       8: aload_0
       9: aload_0
      10: getfield      #9                  // Field cOutCode:I
      13: invokespecial #72                 // Method finish:(I)V
      16: aload_0
      17: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      20: invokeinterface #89,  1           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.pathDone:()V
      25: aload_0
      26: iconst_2
      27: putfield      #38                 // Field prev:I
      30: aload_0
      31: invokevirtual #90                 // Method dispose:()V
      34: return

  private void finish(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
       4: getfield      #91                 // Field com/sun/marlin/RendererContext.closedPath:Z
       7: ifne          248
      10: iload_1
      11: ifne          117
      14: aload_0
      15: getfield      #34                 // Field capStyle:I
      18: iconst_1
      19: if_icmpne     45
      22: aload_0
      23: aload_0
      24: getfield      #70                 // Field cx0:F
      27: aload_0
      28: getfield      #71                 // Field cy0:F
      31: aload_0
      32: getfield      #78                 // Field cmx:F
      35: aload_0
      36: getfield      #79                 // Field cmy:F
      39: invokespecial #92                 // Method drawRoundCap:(FFFF)V
      42: goto          117
      45: aload_0
      46: getfield      #34                 // Field capStyle:I
      49: iconst_2
      50: if_icmpne     117
      53: aload_0
      54: aload_0
      55: getfield      #70                 // Field cx0:F
      58: aload_0
      59: getfield      #79                 // Field cmy:F
      62: fsub
      63: aload_0
      64: getfield      #78                 // Field cmx:F
      67: fadd
      68: aload_0
      69: getfield      #71                 // Field cy0:F
      72: aload_0
      73: getfield      #78                 // Field cmx:F
      76: fadd
      77: aload_0
      78: getfield      #79                 // Field cmy:F
      81: fadd
      82: invokespecial #81                 // Method emitLineTo:(FF)V
      85: aload_0
      86: aload_0
      87: getfield      #70                 // Field cx0:F
      90: aload_0
      91: getfield      #79                 // Field cmy:F
      94: fsub
      95: aload_0
      96: getfield      #78                 // Field cmx:F
      99: fsub
     100: aload_0
     101: getfield      #71                 // Field cy0:F
     104: aload_0
     105: getfield      #78                 // Field cmx:F
     108: fadd
     109: aload_0
     110: getfield      #79                 // Field cmy:F
     113: fsub
     114: invokespecial #81                 // Method emitLineTo:(FF)V
     117: aload_0
     118: invokespecial #86                 // Method emitReverse:()V
     121: aload_0
     122: getfield      #12                 // Field capStart:Z
     125: ifne          252
     128: aload_0
     129: iconst_1
     130: putfield      #12                 // Field capStart:Z
     133: aload_0
     134: getfield      #10                 // Field sOutCode:I
     137: ifne          252
     140: aload_0
     141: getfield      #34                 // Field capStyle:I
     144: iconst_1
     145: if_icmpne     173
     148: aload_0
     149: aload_0
     150: getfield      #65                 // Field sx0:F
     153: aload_0
     154: getfield      #66                 // Field sy0:F
     157: aload_0
     158: getfield      #84                 // Field smx:F
     161: fneg
     162: aload_0
     163: getfield      #85                 // Field smy:F
     166: fneg
     167: invokespecial #92                 // Method drawRoundCap:(FFFF)V
     170: goto          252
     173: aload_0
     174: getfield      #34                 // Field capStyle:I
     177: iconst_2
     178: if_icmpne     252
     181: aload_0
     182: aload_0
     183: getfield      #65                 // Field sx0:F
     186: aload_0
     187: getfield      #85                 // Field smy:F
     190: fadd
     191: aload_0
     192: getfield      #84                 // Field smx:F
     195: fsub
     196: aload_0
     197: getfield      #66                 // Field sy0:F
     200: aload_0
     201: getfield      #84                 // Field smx:F
     204: fsub
     205: aload_0
     206: getfield      #85                 // Field smy:F
     209: fsub
     210: invokespecial #81                 // Method emitLineTo:(FF)V
     213: aload_0
     214: aload_0
     215: getfield      #65                 // Field sx0:F
     218: aload_0
     219: getfield      #85                 // Field smy:F
     222: fadd
     223: aload_0
     224: getfield      #84                 // Field smx:F
     227: fadd
     228: aload_0
     229: getfield      #66                 // Field sy0:F
     232: aload_0
     233: getfield      #84                 // Field smx:F
     236: fsub
     237: aload_0
     238: getfield      #85                 // Field smy:F
     241: fadd
     242: invokespecial #81                 // Method emitLineTo:(FF)V
     245: goto          252
     248: aload_0
     249: invokespecial #86                 // Method emitReverse:()V
     252: aload_0
     253: invokespecial #87                 // Method emitClose:()V
     256: return

  private void emitMoveTo(float, float);
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: fload_1
       5: fload_2
       6: invokeinterface #93,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.moveTo:(FF)V
      11: return

  private void emitLineTo(float, float);
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: fload_1
       5: fload_2
       6: invokeinterface #94,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.lineTo:(FF)V
      11: return

  private void emitLineToRev(float, float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
       4: fload_1
       5: fload_2
       6: invokevirtual #95                 // Method com/sun/marlin/Helpers$PolyStack.pushLine:(FF)V
       9: return

  private void emitLineTo(float, float, boolean);
    Code:
       0: iload_3
       1: ifeq          13
       4: aload_0
       5: fload_1
       6: fload_2
       7: invokespecial #82                 // Method emitLineToRev:(FF)V
      10: goto          19
      13: aload_0
      14: fload_1
      15: fload_2
      16: invokespecial #81                 // Method emitLineTo:(FF)V
      19: return

  private void emitQuadTo(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: fload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: invokeinterface #96,  5           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.quadTo:(FFFF)V
      14: return

  private void emitQuadToRev(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
       4: fload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: invokevirtual #97                 // Method com/sun/marlin/Helpers$PolyStack.pushQuad:(FFFF)V
      12: return

  private void emitCurveTo(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: fload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: fload         5
      11: fload         6
      13: invokeinterface #98,  7           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.curveTo:(FFFFFF)V
      18: return

  private void emitCurveToRev(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
       4: fload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: fload         5
      11: fload         6
      13: invokevirtual #99                 // Method com/sun/marlin/Helpers$PolyStack.pushCubic:(FFFFFF)V
      16: return

  private void emitCurveTo(float, float, float, float, float, float, float, float, boolean);
    Code:
       0: iload         9
       2: ifeq          24
       5: aload_0
       6: getfield      #25                 // Field reverse:Lcom/sun/marlin/Helpers$PolyStack;
       9: fload_1
      10: fload_2
      11: fload_3
      12: fload         4
      14: fload         5
      16: fload         6
      18: invokevirtual #99                 // Method com/sun/marlin/Helpers$PolyStack.pushCubic:(FFFFFF)V
      21: goto          44
      24: aload_0
      25: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      28: fload_3
      29: fload         4
      31: fload         5
      33: fload         6
      35: fload         7
      37: fload         8
      39: invokeinterface #98,  7           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.curveTo:(FFFFFF)V
      44: return

  private void emitClose();
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: invokeinterface #100,  1          // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.closePath:()V
       9: return

  private void drawJoin(float, float, float, float, float, float, float, float, float, float, int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field prev:I
       4: iconst_1
       5: if_icmpeq     55
       8: aload_0
       9: fload_3
      10: fload         9
      12: fadd
      13: fload         4
      15: fload         10
      17: fadd
      18: invokespecial #83                 // Method emitMoveTo:(FF)V
      21: aload_0
      22: getfield      #11                 // Field opened:Z
      25: ifne          146
      28: aload_0
      29: fload         5
      31: putfield      #67                 // Field sdx:F
      34: aload_0
      35: fload         6
      37: putfield      #68                 // Field sdy:F
      40: aload_0
      41: fload         9
      43: putfield      #84                 // Field smx:F
      46: aload_0
      47: fload         10
      49: putfield      #85                 // Field smy:F
      52: goto          146
      55: fload_1
      56: fload_2
      57: fload         5
      59: fload         6
      61: invokestatic  #101                // Method isCW:(FFFF)Z
      64: istore        12
      66: iload         11
      68: ifne          129
      71: aload_0
      72: getfield      #35                 // Field joinStyle:I
      75: ifne          104
      78: aload_0
      79: fload_1
      80: fload_2
      81: fload_3
      82: fload         4
      84: fload         5
      86: fload         6
      88: fload         7
      90: fload         8
      92: fload         9
      94: fload         10
      96: iload         12
      98: invokespecial #102                // Method drawMiter:(FFFFFFFFFFZ)V
     101: goto          129
     104: aload_0
     105: getfield      #35                 // Field joinStyle:I
     108: iconst_1
     109: if_icmpne     129
     112: aload_0
     113: fload_3
     114: fload         4
     116: fload         7
     118: fload         8
     120: fload         9
     122: fload         10
     124: iload         12
     126: invokespecial #103                // Method mayDrawRoundJoin:(FFFFFFZ)V
     129: aload_0
     130: fload_3
     131: fload         4
     133: iload         12
     135: ifne          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: invokespecial #63                 // Method emitLineTo:(FFZ)V
     146: aload_0
     147: iconst_1
     148: putfield      #38                 // Field prev:I
     151: return

  private static boolean within(float, float, float, float, float);
    Code:
       0: getstatic     #104                // Field $assertionsDisabled:Z
       3: ifne          23
       6: fload         4
       8: fconst_0
       9: fcmpl
      10: ifgt          23
      13: new           #105                // class java/lang/AssertionError
      16: dup
      17: ldc           #106                // String
      19: invokespecial #107                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      22: athrow
      23: fload_0
      24: fload_2
      25: fload         4
      27: invokestatic  #108                // Method com/sun/marlin/Helpers.within:(FFF)Z
      30: ifeq          47
      33: fload_1
      34: fload_3
      35: fload         4
      37: invokestatic  #108                // Method com/sun/marlin/Helpers.within:(FFF)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  private void getLineOffsets(float, float, float, float, float[], float[]);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fload         4
       5: fload_2
       6: fsub
       7: aload_0
       8: getfield      #31                 // Field lineWidth2:F
      11: aload_0
      12: getfield      #3                  // Field offset0:[F
      15: invokestatic  #77                 // Method computeOffset:(FFF[F)V
      18: aload_0
      19: getfield      #3                  // Field offset0:[F
      22: iconst_0
      23: faload
      24: fstore        7
      26: aload_0
      27: getfield      #3                  // Field offset0:[F
      30: iconst_1
      31: faload
      32: fstore        8
      34: aload         5
      36: iconst_0
      37: fload_1
      38: fload         7
      40: fadd
      41: fastore
      42: aload         5
      44: iconst_1
      45: fload_2
      46: fload         8
      48: fadd
      49: fastore
      50: aload         5
      52: iconst_2
      53: fload_3
      54: fload         7
      56: fadd
      57: fastore
      58: aload         5
      60: iconst_3
      61: fload         4
      63: fload         8
      65: fadd
      66: fastore
      67: aload         6
      69: iconst_0
      70: fload_1
      71: fload         7
      73: fsub
      74: fastore
      75: aload         6
      77: iconst_1
      78: fload_2
      79: fload         8
      81: fsub
      82: fastore
      83: aload         6
      85: iconst_2
      86: fload_3
      87: fload         7
      89: fsub
      90: fastore
      91: aload         6
      93: iconst_3
      94: fload         4
      96: fload         8
      98: fsub
      99: fastore
     100: return

  private int computeOffsetCubic(float[], int, float[], float[]);
    Code:
       0: aload_1
       1: iload_2
       2: faload
       3: fstore        5
       5: aload_1
       6: iload_2
       7: iconst_1
       8: iadd
       9: faload
      10: fstore        6
      12: aload_1
      13: iload_2
      14: iconst_2
      15: iadd
      16: faload
      17: fstore        7
      19: aload_1
      20: iload_2
      21: iconst_3
      22: iadd
      23: faload
      24: fstore        8
      26: aload_1
      27: iload_2
      28: iconst_4
      29: iadd
      30: faload
      31: fstore        9
      33: aload_1
      34: iload_2
      35: iconst_5
      36: iadd
      37: faload
      38: fstore        10
      40: aload_1
      41: iload_2
      42: bipush        6
      44: iadd
      45: faload
      46: fstore        11
      48: aload_1
      49: iload_2
      50: bipush        7
      52: iadd
      53: faload
      54: fstore        12
      56: fload         11
      58: fload         9
      60: fsub
      61: fstore        13
      63: fload         12
      65: fload         10
      67: fsub
      68: fstore        14
      70: fload         7
      72: fload         5
      74: fsub
      75: fstore        15
      77: fload         8
      79: fload         6
      81: fsub
      82: fstore        16
      84: fload         5
      86: fload         6
      88: fload         7
      90: fload         8
      92: ldc           #109                // float 6.0f
      94: fload         8
      96: invokestatic  #110                // Method java/lang/Math.ulp:(F)F
      99: fmul
     100: invokestatic  #111                // Method within:(FFFFF)Z
     103: istore        17
     105: fload         9
     107: fload         10
     109: fload         11
     111: fload         12
     113: ldc           #109                // float 6.0f
     115: fload         12
     117: invokestatic  #110                // Method java/lang/Math.ulp:(F)F
     120: fmul
     121: invokestatic  #111                // Method within:(FFFFF)Z
     124: istore        18
     126: iload         17
     128: ifeq          153
     131: iload         18
     133: ifeq          153
     136: aload_0
     137: fload         5
     139: fload         6
     141: fload         11
     143: fload         12
     145: aload_3
     146: aload         4
     148: invokespecial #112                // Method getLineOffsets:(FFFF[F[F)V
     151: iconst_4
     152: ireturn
     153: iload         17
     155: ifeq          175
     158: fload         9
     160: fload         5
     162: fsub
     163: fstore        15
     165: fload         10
     167: fload         6
     169: fsub
     170: fstore        16
     172: goto          194
     175: iload         18
     177: ifeq          194
     180: fload         11
     182: fload         7
     184: fsub
     185: fstore        13
     187: fload         12
     189: fload         8
     191: fsub
     192: fstore        14
     194: fload         15
     196: fload         13
     198: fmul
     199: fload         16
     201: fload         14
     203: fmul
     204: fadd
     205: fstore        19
     207: fload         19
     209: fload         19
     211: fmul
     212: fstore        19
     214: fload         15
     216: fload         15
     218: fmul
     219: fload         16
     221: fload         16
     223: fmul
     224: fadd
     225: fstore        20
     227: fload         13
     229: fload         13
     231: fmul
     232: fload         14
     234: fload         14
     236: fmul
     237: fadd
     238: fstore        21
     240: fload         19
     242: fload         20
     244: fload         21
     246: fmul
     247: ldc           #113                // float 4.0f
     249: fload         19
     251: invokestatic  #110                // Method java/lang/Math.ulp:(F)F
     254: fmul
     255: invokestatic  #108                // Method com/sun/marlin/Helpers.within:(FFF)Z
     258: ifeq          278
     261: aload_0
     262: fload         5
     264: fload         6
     266: fload         11
     268: fload         12
     270: aload_3
     271: aload         4
     273: invokespecial #112                // Method getLineOffsets:(FFFF[F[F)V
     276: iconst_4
     277: ireturn
     278: fload         5
     280: ldc           #114                // float 3.0f
     282: fload         7
     284: fload         9
     286: fadd
     287: fmul
     288: fadd
     289: fload         11
     291: fadd
     292: ldc           #115                // float 8.0f
     294: fdiv
     295: fstore        22
     297: fload         6
     299: ldc           #114                // float 3.0f
     301: fload         8
     303: fload         10
     305: fadd
     306: fmul
     307: fadd
     308: fload         12
     310: fadd
     311: ldc           #115                // float 8.0f
     313: fdiv
     314: fstore        23
     316: fload         9
     318: fload         11
     320: fadd
     321: fload         5
     323: fsub
     324: fload         7
     326: fsub
     327: fstore        24
     329: fload         10
     331: fload         12
     333: fadd
     334: fload         6
     336: fsub
     337: fload         8
     339: fsub
     340: fstore        25
     342: fload         15
     344: fload         16
     346: aload_0
     347: getfield      #31                 // Field lineWidth2:F
     350: aload_0
     351: getfield      #3                  // Field offset0:[F
     354: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     357: fload         24
     359: fload         25
     361: aload_0
     362: getfield      #31                 // Field lineWidth2:F
     365: aload_0
     366: getfield      #4                  // Field offset1:[F
     369: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     372: fload         13
     374: fload         14
     376: aload_0
     377: getfield      #31                 // Field lineWidth2:F
     380: aload_0
     381: getfield      #5                  // Field offset2:[F
     384: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     387: fload         5
     389: aload_0
     390: getfield      #3                  // Field offset0:[F
     393: iconst_0
     394: faload
     395: fadd
     396: fstore        26
     398: fload         6
     400: aload_0
     401: getfield      #3                  // Field offset0:[F
     404: iconst_1
     405: faload
     406: fadd
     407: fstore        27
     409: fload         22
     411: aload_0
     412: getfield      #4                  // Field offset1:[F
     415: iconst_0
     416: faload
     417: fadd
     418: fstore        28
     420: fload         23
     422: aload_0
     423: getfield      #4                  // Field offset1:[F
     426: iconst_1
     427: faload
     428: fadd
     429: fstore        29
     431: fload         11
     433: aload_0
     434: getfield      #5                  // Field offset2:[F
     437: iconst_0
     438: faload
     439: fadd
     440: fstore        30
     442: fload         12
     444: aload_0
     445: getfield      #5                  // Field offset2:[F
     448: iconst_1
     449: faload
     450: fadd
     451: fstore        31
     453: ldc           #113                // float 4.0f
     455: ldc           #114                // float 3.0f
     457: fload         15
     459: fload         14
     461: fmul
     462: fload         16
     464: fload         13
     466: fmul
     467: fsub
     468: fmul
     469: fdiv
     470: fstore        32
     472: fconst_2
     473: fload         28
     475: fmul
     476: fload         26
     478: fsub
     479: fload         30
     481: fsub
     482: fstore        33
     484: fconst_2
     485: fload         29
     487: fmul
     488: fload         27
     490: fsub
     491: fload         31
     493: fsub
     494: fstore        34
     496: fload         32
     498: fload         14
     500: fload         33
     502: fmul
     503: fload         13
     505: fload         34
     507: fmul
     508: fsub
     509: fmul
     510: fstore        35
     512: fload         32
     514: fload         15
     516: fload         34
     518: fmul
     519: fload         16
     521: fload         33
     523: fmul
     524: fsub
     525: fmul
     526: fstore        36
     528: fload         26
     530: fload         35
     532: fload         15
     534: fmul
     535: fadd
     536: fstore        37
     538: fload         27
     540: fload         35
     542: fload         16
     544: fmul
     545: fadd
     546: fstore        38
     548: fload         30
     550: fload         36
     552: fload         13
     554: fmul
     555: fadd
     556: fstore        39
     558: fload         31
     560: fload         36
     562: fload         14
     564: fmul
     565: fadd
     566: fstore        40
     568: aload_3
     569: iconst_0
     570: fload         26
     572: fastore
     573: aload_3
     574: iconst_1
     575: fload         27
     577: fastore
     578: aload_3
     579: iconst_2
     580: fload         37
     582: fastore
     583: aload_3
     584: iconst_3
     585: fload         38
     587: fastore
     588: aload_3
     589: iconst_4
     590: fload         39
     592: fastore
     593: aload_3
     594: iconst_5
     595: fload         40
     597: fastore
     598: aload_3
     599: bipush        6
     601: fload         30
     603: fastore
     604: aload_3
     605: bipush        7
     607: fload         31
     609: fastore
     610: fload         5
     612: aload_0
     613: getfield      #3                  // Field offset0:[F
     616: iconst_0
     617: faload
     618: fsub
     619: fstore        26
     621: fload         6
     623: aload_0
     624: getfield      #3                  // Field offset0:[F
     627: iconst_1
     628: faload
     629: fsub
     630: fstore        27
     632: fload         28
     634: fconst_2
     635: aload_0
     636: getfield      #4                  // Field offset1:[F
     639: iconst_0
     640: faload
     641: fmul
     642: fsub
     643: fstore        28
     645: fload         29
     647: fconst_2
     648: aload_0
     649: getfield      #4                  // Field offset1:[F
     652: iconst_1
     653: faload
     654: fmul
     655: fsub
     656: fstore        29
     658: fload         11
     660: aload_0
     661: getfield      #5                  // Field offset2:[F
     664: iconst_0
     665: faload
     666: fsub
     667: fstore        30
     669: fload         12
     671: aload_0
     672: getfield      #5                  // Field offset2:[F
     675: iconst_1
     676: faload
     677: fsub
     678: fstore        31
     680: fconst_2
     681: fload         28
     683: fmul
     684: fload         26
     686: fsub
     687: fload         30
     689: fsub
     690: fstore        33
     692: fconst_2
     693: fload         29
     695: fmul
     696: fload         27
     698: fsub
     699: fload         31
     701: fsub
     702: fstore        34
     704: fload         32
     706: fload         14
     708: fload         33
     710: fmul
     711: fload         13
     713: fload         34
     715: fmul
     716: fsub
     717: fmul
     718: fstore        35
     720: fload         32
     722: fload         15
     724: fload         34
     726: fmul
     727: fload         16
     729: fload         33
     731: fmul
     732: fsub
     733: fmul
     734: fstore        36
     736: fload         26
     738: fload         35
     740: fload         15
     742: fmul
     743: fadd
     744: fstore        37
     746: fload         27
     748: fload         35
     750: fload         16
     752: fmul
     753: fadd
     754: fstore        38
     756: fload         30
     758: fload         36
     760: fload         13
     762: fmul
     763: fadd
     764: fstore        39
     766: fload         31
     768: fload         36
     770: fload         14
     772: fmul
     773: fadd
     774: fstore        40
     776: aload         4
     778: iconst_0
     779: fload         26
     781: fastore
     782: aload         4
     784: iconst_1
     785: fload         27
     787: fastore
     788: aload         4
     790: iconst_2
     791: fload         37
     793: fastore
     794: aload         4
     796: iconst_3
     797: fload         38
     799: fastore
     800: aload         4
     802: iconst_4
     803: fload         39
     805: fastore
     806: aload         4
     808: iconst_5
     809: fload         40
     811: fastore
     812: aload         4
     814: bipush        6
     816: fload         30
     818: fastore
     819: aload         4
     821: bipush        7
     823: fload         31
     825: fastore
     826: bipush        8
     828: ireturn

  private int computeOffsetQuad(float[], int, float[], float[]);
    Code:
       0: aload_1
       1: iload_2
       2: faload
       3: fstore        5
       5: aload_1
       6: iload_2
       7: iconst_1
       8: iadd
       9: faload
      10: fstore        6
      12: aload_1
      13: iload_2
      14: iconst_2
      15: iadd
      16: faload
      17: fstore        7
      19: aload_1
      20: iload_2
      21: iconst_3
      22: iadd
      23: faload
      24: fstore        8
      26: aload_1
      27: iload_2
      28: iconst_4
      29: iadd
      30: faload
      31: fstore        9
      33: aload_1
      34: iload_2
      35: iconst_5
      36: iadd
      37: faload
      38: fstore        10
      40: fload         9
      42: fload         7
      44: fsub
      45: fstore        11
      47: fload         10
      49: fload         8
      51: fsub
      52: fstore        12
      54: fload         7
      56: fload         5
      58: fsub
      59: fstore        13
      61: fload         8
      63: fload         6
      65: fsub
      66: fstore        14
      68: fload         5
      70: fload         6
      72: fload         7
      74: fload         8
      76: ldc           #109                // float 6.0f
      78: fload         8
      80: invokestatic  #110                // Method java/lang/Math.ulp:(F)F
      83: fmul
      84: invokestatic  #111                // Method within:(FFFFF)Z
      87: istore        15
      89: fload         7
      91: fload         8
      93: fload         9
      95: fload         10
      97: ldc           #109                // float 6.0f
      99: fload         10
     101: invokestatic  #110                // Method java/lang/Math.ulp:(F)F
     104: fmul
     105: invokestatic  #111                // Method within:(FFFFF)Z
     108: istore        16
     110: iload         15
     112: ifne          120
     115: iload         16
     117: ifeq          137
     120: aload_0
     121: fload         5
     123: fload         6
     125: fload         9
     127: fload         10
     129: aload_3
     130: aload         4
     132: invokespecial #112                // Method getLineOffsets:(FFFF[F[F)V
     135: iconst_4
     136: ireturn
     137: fload         13
     139: fload         11
     141: fmul
     142: fload         14
     144: fload         12
     146: fmul
     147: fadd
     148: fstore        17
     150: fload         17
     152: fload         17
     154: fmul
     155: fstore        17
     157: fload         13
     159: fload         13
     161: fmul
     162: fload         14
     164: fload         14
     166: fmul
     167: fadd
     168: fstore        18
     170: fload         11
     172: fload         11
     174: fmul
     175: fload         12
     177: fload         12
     179: fmul
     180: fadd
     181: fstore        19
     183: fload         17
     185: fload         18
     187: fload         19
     189: fmul
     190: ldc           #113                // float 4.0f
     192: fload         17
     194: invokestatic  #110                // Method java/lang/Math.ulp:(F)F
     197: fmul
     198: invokestatic  #108                // Method com/sun/marlin/Helpers.within:(FFF)Z
     201: ifeq          221
     204: aload_0
     205: fload         5
     207: fload         6
     209: fload         9
     211: fload         10
     213: aload_3
     214: aload         4
     216: invokespecial #112                // Method getLineOffsets:(FFFF[F[F)V
     219: iconst_4
     220: ireturn
     221: fload         13
     223: fload         14
     225: aload_0
     226: getfield      #31                 // Field lineWidth2:F
     229: aload_0
     230: getfield      #3                  // Field offset0:[F
     233: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     236: fload         11
     238: fload         12
     240: aload_0
     241: getfield      #31                 // Field lineWidth2:F
     244: aload_0
     245: getfield      #4                  // Field offset1:[F
     248: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     251: fload         5
     253: aload_0
     254: getfield      #3                  // Field offset0:[F
     257: iconst_0
     258: faload
     259: fadd
     260: fstore        20
     262: fload         6
     264: aload_0
     265: getfield      #3                  // Field offset0:[F
     268: iconst_1
     269: faload
     270: fadd
     271: fstore        21
     273: fload         9
     275: aload_0
     276: getfield      #4                  // Field offset1:[F
     279: iconst_0
     280: faload
     281: fadd
     282: fstore        22
     284: fload         10
     286: aload_0
     287: getfield      #4                  // Field offset1:[F
     290: iconst_1
     291: faload
     292: fadd
     293: fstore        23
     295: fload         20
     297: fload         21
     299: fload         20
     301: fload         13
     303: fadd
     304: fload         21
     306: fload         14
     308: fadd
     309: fload         22
     311: fload         23
     313: fload         22
     315: fload         11
     317: fsub
     318: fload         23
     320: fload         12
     322: fsub
     323: aload_3
     324: invokestatic  #116                // Method safeComputeMiter:(FFFFFFFF[F)V
     327: aload_3
     328: iconst_0
     329: fload         20
     331: fastore
     332: aload_3
     333: iconst_1
     334: fload         21
     336: fastore
     337: aload_3
     338: iconst_4
     339: fload         22
     341: fastore
     342: aload_3
     343: iconst_5
     344: fload         23
     346: fastore
     347: fload         5
     349: aload_0
     350: getfield      #3                  // Field offset0:[F
     353: iconst_0
     354: faload
     355: fsub
     356: fstore        20
     358: fload         6
     360: aload_0
     361: getfield      #3                  // Field offset0:[F
     364: iconst_1
     365: faload
     366: fsub
     367: fstore        21
     369: fload         9
     371: aload_0
     372: getfield      #4                  // Field offset1:[F
     375: iconst_0
     376: faload
     377: fsub
     378: fstore        22
     380: fload         10
     382: aload_0
     383: getfield      #4                  // Field offset1:[F
     386: iconst_1
     387: faload
     388: fsub
     389: fstore        23
     391: fload         20
     393: fload         21
     395: fload         20
     397: fload         13
     399: fadd
     400: fload         21
     402: fload         14
     404: fadd
     405: fload         22
     407: fload         23
     409: fload         22
     411: fload         11
     413: fsub
     414: fload         23
     416: fload         12
     418: fsub
     419: aload         4
     421: invokestatic  #116                // Method safeComputeMiter:(FFFFFFFF[F)V
     424: aload         4
     426: iconst_0
     427: fload         20
     429: fastore
     430: aload         4
     432: iconst_1
     433: fload         21
     435: fastore
     436: aload         4
     438: iconst_4
     439: fload         22
     441: fastore
     442: aload         4
     444: iconst_5
     445: fload         23
     447: fastore
     448: bipush        6
     450: ireturn

  public void curveTo(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field cOutCode:I
       4: istore        7
       6: aload_0
       7: getfield      #43                 // Field clipRect:[F
      10: ifnull        168
      13: fload_1
      14: fload_2
      15: aload_0
      16: getfield      #43                 // Field clipRect:[F
      19: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      22: istore        8
      24: fload_3
      25: fload         4
      27: aload_0
      28: getfield      #43                 // Field clipRect:[F
      31: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      34: istore        9
      36: fload         5
      38: fload         6
      40: aload_0
      41: getfield      #43                 // Field clipRect:[F
      44: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      47: istore        10
      49: iload         7
      51: iload         8
      53: ior
      54: iload         9
      56: ior
      57: iload         10
      59: ior
      60: istore        11
      62: iload         11
      64: ifeq          162
      67: iload         7
      69: iload         8
      71: iand
      72: iload         9
      74: iand
      75: iload         10
      77: iand
      78: istore        12
      80: iload         12
      82: ifne          140
      85: aload_0
      86: getfield      #14                 // Field subdivide:Z
      89: ifeq          162
      92: aload_0
      93: iconst_0
      94: putfield      #14                 // Field subdivide:Z
      97: aload_0
      98: getfield      #29                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
     101: aload_0
     102: getfield      #70                 // Field cx0:F
     105: aload_0
     106: getfield      #71                 // Field cy0:F
     109: fload_1
     110: fload_2
     111: fload_3
     112: fload         4
     114: fload         5
     116: fload         6
     118: iload         11
     120: aload_0
     121: invokevirtual #117                // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.splitCurve:(FFFFFFFFILcom/sun/javafx/geom/PathConsumer2D;)Z
     124: istore        13
     126: aload_0
     127: iconst_1
     128: putfield      #14                 // Field subdivide:Z
     131: iload         13
     133: ifeq          137
     136: return
     137: goto          162
     140: aload_0
     141: iload         10
     143: putfield      #9                  // Field cOutCode:I
     146: aload_0
     147: fload         5
     149: fload         6
     151: iload         7
     153: invokespecial #64                 // Method _moveTo:(FFI)V
     156: aload_0
     157: iconst_1
     158: putfield      #11                 // Field opened:Z
     161: return
     162: aload_0
     163: iload         10
     165: putfield      #9                  // Field cOutCode:I
     168: aload_0
     169: fload_1
     170: fload_2
     171: fload_3
     172: fload         4
     174: fload         5
     176: fload         6
     178: iload         7
     180: invokespecial #118                // Method _curveTo:(FFFFFFI)V
     183: return

  private void _curveTo(float, float, float, float, float, float, int);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #70                 // Field cx0:F
       5: fsub
       6: fstore        8
       8: fload_2
       9: aload_0
      10: getfield      #71                 // Field cy0:F
      13: fsub
      14: fstore        9
      16: fload         5
      18: fload_3
      19: fsub
      20: fstore        10
      22: fload         6
      24: fload         4
      26: fsub
      27: fstore        11
      29: fload         8
      31: fconst_0
      32: fcmpl
      33: ifne          92
      36: fload         9
      38: fconst_0
      39: fcmpl
      40: ifne          92
      43: fload_3
      44: aload_0
      45: getfield      #70                 // Field cx0:F
      48: fsub
      49: fstore        8
      51: fload         4
      53: aload_0
      54: getfield      #71                 // Field cy0:F
      57: fsub
      58: fstore        9
      60: fload         8
      62: fconst_0
      63: fcmpl
      64: ifne          92
      67: fload         9
      69: fconst_0
      70: fcmpl
      71: ifne          92
      74: fload         5
      76: aload_0
      77: getfield      #70                 // Field cx0:F
      80: fsub
      81: fstore        8
      83: fload         6
      85: aload_0
      86: getfield      #71                 // Field cy0:F
      89: fsub
      90: fstore        9
      92: fload         10
      94: fconst_0
      95: fcmpl
      96: ifne          150
      99: fload         11
     101: fconst_0
     102: fcmpl
     103: ifne          150
     106: fload         5
     108: fload_1
     109: fsub
     110: fstore        10
     112: fload         6
     114: fload_2
     115: fsub
     116: fstore        11
     118: fload         10
     120: fconst_0
     121: fcmpl
     122: ifne          150
     125: fload         11
     127: fconst_0
     128: fcmpl
     129: ifne          150
     132: fload         5
     134: aload_0
     135: getfield      #70                 // Field cx0:F
     138: fsub
     139: fstore        10
     141: fload         6
     143: aload_0
     144: getfield      #71                 // Field cy0:F
     147: fsub
     148: fstore        11
     150: fload         8
     152: fconst_0
     153: fcmpl
     154: ifne          190
     157: fload         9
     159: fconst_0
     160: fcmpl
     161: ifne          190
     164: aload_0
     165: getfield      #43                 // Field clipRect:[F
     168: ifnull        177
     171: aload_0
     172: iload         7
     174: putfield      #9                  // Field cOutCode:I
     177: aload_0
     178: aload_0
     179: getfield      #70                 // Field cx0:F
     182: aload_0
     183: getfield      #71                 // Field cy0:F
     186: invokevirtual #119                // Method lineTo:(FF)V
     189: return
     190: fload         8
     192: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     195: ldc           #121                // float 0.1f
     197: fcmpg
     198: ifge          244
     201: fload         9
     203: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     206: ldc           #121                // float 0.1f
     208: fcmpg
     209: ifge          244
     212: fload         8
     214: fload         8
     216: fmul
     217: fload         9
     219: fload         9
     221: fmul
     222: fadd
     223: f2d
     224: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
     227: d2f
     228: fstore        12
     230: fload         8
     232: fload         12
     234: fdiv
     235: fstore        8
     237: fload         9
     239: fload         12
     241: fdiv
     242: fstore        9
     244: fload         10
     246: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     249: ldc           #121                // float 0.1f
     251: fcmpg
     252: ifge          298
     255: fload         11
     257: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     260: ldc           #121                // float 0.1f
     262: fcmpg
     263: ifge          298
     266: fload         10
     268: fload         10
     270: fmul
     271: fload         11
     273: fload         11
     275: fmul
     276: fadd
     277: f2d
     278: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
     281: d2f
     282: fstore        12
     284: fload         10
     286: fload         12
     288: fdiv
     289: fstore        10
     291: fload         11
     293: fload         12
     295: fdiv
     296: fstore        11
     298: fload         8
     300: fload         9
     302: aload_0
     303: getfield      #31                 // Field lineWidth2:F
     306: aload_0
     307: getfield      #3                  // Field offset0:[F
     310: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     313: aload_0
     314: aload_0
     315: getfield      #73                 // Field cdx:F
     318: aload_0
     319: getfield      #74                 // Field cdy:F
     322: aload_0
     323: getfield      #70                 // Field cx0:F
     326: aload_0
     327: getfield      #71                 // Field cy0:F
     330: fload         8
     332: fload         9
     334: aload_0
     335: getfield      #78                 // Field cmx:F
     338: aload_0
     339: getfield      #79                 // Field cmy:F
     342: aload_0
     343: getfield      #3                  // Field offset0:[F
     346: iconst_0
     347: faload
     348: aload_0
     349: getfield      #3                  // Field offset0:[F
     352: iconst_1
     353: faload
     354: iload         7
     356: invokespecial #80                 // Method drawJoin:(FFFFFFFFFFI)V
     359: iconst_0
     360: istore        12
     362: aload_0
     363: getfield      #7                  // Field lp:[F
     366: astore        14
     368: aload_0
     369: getfield      #33                 // Field monotonize:Z
     372: ifeq          421
     375: aload_0
     376: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
     379: getfield      #122                // Field com/sun/marlin/RendererContext.monotonizer:Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
     382: aload_0
     383: getfield      #70                 // Field cx0:F
     386: aload_0
     387: getfield      #71                 // Field cy0:F
     390: fload_1
     391: fload_2
     392: fload_3
     393: fload         4
     395: fload         5
     397: fload         6
     399: invokevirtual #123                // Method com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.curve:(FFFFFFFF)Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
     402: astore        15
     404: aload         15
     406: getfield      #124                // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.nbSplits:I
     409: istore        12
     411: aload         15
     413: getfield      #125                // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.middle:[F
     416: astore        13
     418: goto          476
     421: aload         14
     423: astore        13
     425: aload         13
     427: iconst_0
     428: aload_0
     429: getfield      #70                 // Field cx0:F
     432: fastore
     433: aload         13
     435: iconst_1
     436: aload_0
     437: getfield      #71                 // Field cy0:F
     440: fastore
     441: aload         13
     443: iconst_2
     444: fload_1
     445: fastore
     446: aload         13
     448: iconst_3
     449: fload_2
     450: fastore
     451: aload         13
     453: iconst_4
     454: fload_3
     455: fastore
     456: aload         13
     458: iconst_5
     459: fload         4
     461: fastore
     462: aload         13
     464: bipush        6
     466: fload         5
     468: fastore
     469: aload         13
     471: bipush        7
     473: fload         6
     475: fastore
     476: aload_0
     477: getfield      #8                  // Field rp:[F
     480: astore        15
     482: iconst_0
     483: istore        16
     485: iconst_0
     486: istore        17
     488: iconst_0
     489: istore        18
     491: iload         17
     493: iload         12
     495: if_icmpgt     667
     498: aload_0
     499: aload         13
     501: iload         18
     503: aload         14
     505: aload         15
     507: invokespecial #126                // Method computeOffsetCubic:([FI[F[F)I
     510: istore        16
     512: aload_0
     513: aload         14
     515: iconst_0
     516: faload
     517: aload         14
     519: iconst_1
     520: faload
     521: invokespecial #81                 // Method emitLineTo:(FF)V
     524: iload         16
     526: lookupswitch  { // 2
                     4: 613
                     8: 552
               default: 640
          }
     552: aload_0
     553: aload         14
     555: iconst_2
     556: faload
     557: aload         14
     559: iconst_3
     560: faload
     561: aload         14
     563: iconst_4
     564: faload
     565: aload         14
     567: iconst_5
     568: faload
     569: aload         14
     571: bipush        6
     573: faload
     574: aload         14
     576: bipush        7
     578: faload
     579: invokespecial #61                 // Method emitCurveTo:(FFFFFF)V
     582: aload_0
     583: aload         15
     585: iconst_0
     586: faload
     587: aload         15
     589: iconst_1
     590: faload
     591: aload         15
     593: iconst_2
     594: faload
     595: aload         15
     597: iconst_3
     598: faload
     599: aload         15
     601: iconst_4
     602: faload
     603: aload         15
     605: iconst_5
     606: faload
     607: invokespecial #127                // Method emitCurveToRev:(FFFFFF)V
     610: goto          640
     613: aload_0
     614: aload         14
     616: iconst_2
     617: faload
     618: aload         14
     620: iconst_3
     621: faload
     622: invokespecial #81                 // Method emitLineTo:(FF)V
     625: aload_0
     626: aload         15
     628: iconst_0
     629: faload
     630: aload         15
     632: iconst_1
     633: faload
     634: invokespecial #82                 // Method emitLineToRev:(FF)V
     637: goto          640
     640: aload_0
     641: aload         15
     643: iload         16
     645: iconst_2
     646: isub
     647: faload
     648: aload         15
     650: iload         16
     652: iconst_1
     653: isub
     654: faload
     655: invokespecial #82                 // Method emitLineToRev:(FF)V
     658: iinc          17, 1
     661: iinc          18, 6
     664: goto          491
     667: aload_0
     668: iconst_1
     669: putfield      #38                 // Field prev:I
     672: aload_0
     673: fload         5
     675: putfield      #70                 // Field cx0:F
     678: aload_0
     679: fload         6
     681: putfield      #71                 // Field cy0:F
     684: aload_0
     685: fload         10
     687: putfield      #73                 // Field cdx:F
     690: aload_0
     691: fload         11
     693: putfield      #74                 // Field cdy:F
     696: aload_0
     697: aload         14
     699: iload         16
     701: iconst_2
     702: isub
     703: faload
     704: aload         15
     706: iload         16
     708: iconst_2
     709: isub
     710: faload
     711: fsub
     712: fconst_2
     713: fdiv
     714: putfield      #78                 // Field cmx:F
     717: aload_0
     718: aload         14
     720: iload         16
     722: iconst_1
     723: isub
     724: faload
     725: aload         15
     727: iload         16
     729: iconst_1
     730: isub
     731: faload
     732: fsub
     733: fconst_2
     734: fdiv
     735: putfield      #79                 // Field cmy:F
     738: return

  public void quadTo(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field cOutCode:I
       4: istore        5
       6: aload_0
       7: getfield      #43                 // Field clipRect:[F
      10: ifnull        144
      13: fload_1
      14: fload_2
      15: aload_0
      16: getfield      #43                 // Field clipRect:[F
      19: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      22: istore        6
      24: fload_3
      25: fload         4
      27: aload_0
      28: getfield      #43                 // Field clipRect:[F
      31: invokestatic  #69                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      34: istore        7
      36: iload         5
      38: iload         6
      40: ior
      41: iload         7
      43: ior
      44: istore        8
      46: iload         8
      48: ifeq          138
      51: iload         5
      53: iload         6
      55: iand
      56: iload         7
      58: iand
      59: istore        9
      61: iload         9
      63: ifne          117
      66: aload_0
      67: getfield      #14                 // Field subdivide:Z
      70: ifeq          138
      73: aload_0
      74: iconst_0
      75: putfield      #14                 // Field subdivide:Z
      78: aload_0
      79: getfield      #29                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
      82: aload_0
      83: getfield      #70                 // Field cx0:F
      86: aload_0
      87: getfield      #71                 // Field cy0:F
      90: fload_1
      91: fload_2
      92: fload_3
      93: fload         4
      95: iload         8
      97: aload_0
      98: invokevirtual #128                // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.splitQuad:(FFFFFFILcom/sun/javafx/geom/PathConsumer2D;)Z
     101: istore        10
     103: aload_0
     104: iconst_1
     105: putfield      #14                 // Field subdivide:Z
     108: iload         10
     110: ifeq          114
     113: return
     114: goto          138
     117: aload_0
     118: iload         7
     120: putfield      #9                  // Field cOutCode:I
     123: aload_0
     124: fload_3
     125: fload         4
     127: iload         5
     129: invokespecial #64                 // Method _moveTo:(FFI)V
     132: aload_0
     133: iconst_1
     134: putfield      #11                 // Field opened:Z
     137: return
     138: aload_0
     139: iload         7
     141: putfield      #9                  // Field cOutCode:I
     144: aload_0
     145: fload_1
     146: fload_2
     147: fload_3
     148: fload         4
     150: iload         5
     152: invokespecial #129                // Method _quadTo:(FFFFI)V
     155: return

  private void _quadTo(float, float, float, float, int);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #70                 // Field cx0:F
       5: fsub
       6: fstore        6
       8: fload_2
       9: aload_0
      10: getfield      #71                 // Field cy0:F
      13: fsub
      14: fstore        7
      16: fload_3
      17: fload_1
      18: fsub
      19: fstore        8
      21: fload         4
      23: fload_2
      24: fsub
      25: fstore        9
      27: fload         6
      29: fconst_0
      30: fcmpl
      31: ifne          41
      34: fload         7
      36: fconst_0
      37: fcmpl
      38: ifeq          55
      41: fload         8
      43: fconst_0
      44: fcmpl
      45: ifne          78
      48: fload         9
      50: fconst_0
      51: fcmpl
      52: ifne          78
      55: fload_3
      56: aload_0
      57: getfield      #70                 // Field cx0:F
      60: fsub
      61: dup
      62: fstore        8
      64: fstore        6
      66: fload         4
      68: aload_0
      69: getfield      #71                 // Field cy0:F
      72: fsub
      73: dup
      74: fstore        9
      76: fstore        7
      78: fload         6
      80: fconst_0
      81: fcmpl
      82: ifne          118
      85: fload         7
      87: fconst_0
      88: fcmpl
      89: ifne          118
      92: aload_0
      93: getfield      #43                 // Field clipRect:[F
      96: ifnull        105
      99: aload_0
     100: iload         5
     102: putfield      #9                  // Field cOutCode:I
     105: aload_0
     106: aload_0
     107: getfield      #70                 // Field cx0:F
     110: aload_0
     111: getfield      #71                 // Field cy0:F
     114: invokevirtual #119                // Method lineTo:(FF)V
     117: return
     118: fload         6
     120: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     123: ldc           #121                // float 0.1f
     125: fcmpg
     126: ifge          172
     129: fload         7
     131: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     134: ldc           #121                // float 0.1f
     136: fcmpg
     137: ifge          172
     140: fload         6
     142: fload         6
     144: fmul
     145: fload         7
     147: fload         7
     149: fmul
     150: fadd
     151: f2d
     152: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
     155: d2f
     156: fstore        10
     158: fload         6
     160: fload         10
     162: fdiv
     163: fstore        6
     165: fload         7
     167: fload         10
     169: fdiv
     170: fstore        7
     172: fload         8
     174: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     177: ldc           #121                // float 0.1f
     179: fcmpg
     180: ifge          226
     183: fload         9
     185: invokestatic  #120                // Method java/lang/Math.abs:(F)F
     188: ldc           #121                // float 0.1f
     190: fcmpg
     191: ifge          226
     194: fload         8
     196: fload         8
     198: fmul
     199: fload         9
     201: fload         9
     203: fmul
     204: fadd
     205: f2d
     206: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
     209: d2f
     210: fstore        10
     212: fload         8
     214: fload         10
     216: fdiv
     217: fstore        8
     219: fload         9
     221: fload         10
     223: fdiv
     224: fstore        9
     226: fload         6
     228: fload         7
     230: aload_0
     231: getfield      #31                 // Field lineWidth2:F
     234: aload_0
     235: getfield      #3                  // Field offset0:[F
     238: invokestatic  #77                 // Method computeOffset:(FFF[F)V
     241: aload_0
     242: aload_0
     243: getfield      #73                 // Field cdx:F
     246: aload_0
     247: getfield      #74                 // Field cdy:F
     250: aload_0
     251: getfield      #70                 // Field cx0:F
     254: aload_0
     255: getfield      #71                 // Field cy0:F
     258: fload         6
     260: fload         7
     262: aload_0
     263: getfield      #78                 // Field cmx:F
     266: aload_0
     267: getfield      #79                 // Field cmy:F
     270: aload_0
     271: getfield      #3                  // Field offset0:[F
     274: iconst_0
     275: faload
     276: aload_0
     277: getfield      #3                  // Field offset0:[F
     280: iconst_1
     281: faload
     282: iload         5
     284: invokespecial #80                 // Method drawJoin:(FFFFFFFFFFI)V
     287: iconst_0
     288: istore        10
     290: aload_0
     291: getfield      #7                  // Field lp:[F
     294: astore        12
     296: aload_0
     297: getfield      #33                 // Field monotonize:Z
     300: ifeq          345
     303: aload_0
     304: getfield      #15                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
     307: getfield      #122                // Field com/sun/marlin/RendererContext.monotonizer:Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
     310: aload_0
     311: getfield      #70                 // Field cx0:F
     314: aload_0
     315: getfield      #71                 // Field cy0:F
     318: fload_1
     319: fload_2
     320: fload_3
     321: fload         4
     323: invokevirtual #130                // Method com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.quad:(FFFFFF)Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
     326: astore        13
     328: aload         13
     330: getfield      #124                // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.nbSplits:I
     333: istore        10
     335: aload         13
     337: getfield      #125                // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.middle:[F
     340: astore        11
     342: goto          386
     345: aload         12
     347: astore        11
     349: aload         11
     351: iconst_0
     352: aload_0
     353: getfield      #70                 // Field cx0:F
     356: fastore
     357: aload         11
     359: iconst_1
     360: aload_0
     361: getfield      #71                 // Field cy0:F
     364: fastore
     365: aload         11
     367: iconst_2
     368: fload_1
     369: fastore
     370: aload         11
     372: iconst_3
     373: fload_2
     374: fastore
     375: aload         11
     377: iconst_4
     378: fload_3
     379: fastore
     380: aload         11
     382: iconst_5
     383: fload         4
     385: fastore
     386: aload_0
     387: getfield      #8                  // Field rp:[F
     390: astore        13
     392: iconst_0
     393: istore        14
     395: iconst_0
     396: istore        15
     398: iconst_0
     399: istore        16
     401: iload         15
     403: iload         10
     405: if_icmpgt     561
     408: aload_0
     409: aload         11
     411: iload         16
     413: aload         12
     415: aload         13
     417: invokespecial #131                // Method computeOffsetQuad:([FI[F[F)I
     420: istore        14
     422: aload_0
     423: aload         12
     425: iconst_0
     426: faload
     427: aload         12
     429: iconst_1
     430: faload
     431: invokespecial #81                 // Method emitLineTo:(FF)V
     434: iload         14
     436: lookupswitch  { // 2
                     4: 507
                     6: 464
               default: 534
          }
     464: aload_0
     465: aload         12
     467: iconst_2
     468: faload
     469: aload         12
     471: iconst_3
     472: faload
     473: aload         12
     475: iconst_4
     476: faload
     477: aload         12
     479: iconst_5
     480: faload
     481: invokespecial #132                // Method emitQuadTo:(FFFF)V
     484: aload_0
     485: aload         13
     487: iconst_0
     488: faload
     489: aload         13
     491: iconst_1
     492: faload
     493: aload         13
     495: iconst_2
     496: faload
     497: aload         13
     499: iconst_3
     500: faload
     501: invokespecial #133                // Method emitQuadToRev:(FFFF)V
     504: goto          534
     507: aload_0
     508: aload         12
     510: iconst_2
     511: faload
     512: aload         12
     514: iconst_3
     515: faload
     516: invokespecial #81                 // Method emitLineTo:(FF)V
     519: aload_0
     520: aload         13
     522: iconst_0
     523: faload
     524: aload         13
     526: iconst_1
     527: faload
     528: invokespecial #82                 // Method emitLineToRev:(FF)V
     531: goto          534
     534: aload_0
     535: aload         13
     537: iload         14
     539: iconst_2
     540: isub
     541: faload
     542: aload         13
     544: iload         14
     546: iconst_1
     547: isub
     548: faload
     549: invokespecial #82                 // Method emitLineToRev:(FF)V
     552: iinc          15, 1
     555: iinc          16, 4
     558: goto          401
     561: aload_0
     562: iconst_1
     563: putfield      #38                 // Field prev:I
     566: aload_0
     567: fload_3
     568: putfield      #70                 // Field cx0:F
     571: aload_0
     572: fload         4
     574: putfield      #71                 // Field cy0:F
     577: aload_0
     578: fload         8
     580: putfield      #73                 // Field cdx:F
     583: aload_0
     584: fload         9
     586: putfield      #74                 // Field cdy:F
     589: aload_0
     590: aload         12
     592: iload         14
     594: iconst_2
     595: isub
     596: faload
     597: aload         13
     599: iload         14
     601: iconst_2
     602: isub
     603: faload
     604: fsub
     605: fconst_2
     606: fdiv
     607: putfield      #78                 // Field cmx:F
     610: aload_0
     611: aload         12
     613: iload         14
     615: iconst_1
     616: isub
     617: faload
     618: aload         13
     620: iload         14
     622: iconst_1
     623: isub
     624: faload
     625: fsub
     626: fconst_2
     627: fdiv
     628: putfield      #79                 // Field cmy:F
     631: return

  static {};
    Code:
       0: ldc           #37                 // class com/sun/marlin/Stroker
       2: invokevirtual #134                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #104                // Field $assertionsDisabled:Z
      16: fconst_1
      17: getstatic     #135                // Field MIN_SUBPIXELS:F
      20: fdiv
      21: putstatic     #136                // Field ERR_JOIN:F
      24: getstatic     #136                // Field ERR_JOIN:F
      27: getstatic     #136                // Field ERR_JOIN:F
      30: fmul
      31: putstatic     #51                 // Field ROUND_JOIN_THRESHOLD:F
      34: ldc2_w        #137                // double 4.0d
      37: ldc2_w        #139                // double 2.0d
      40: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
      43: dconst_1
      44: dsub
      45: dmul
      46: ldc2_w        #141                // double 3.0d
      49: ddiv
      50: d2f
      51: putstatic     #60                 // Field C:F
      54: ldc2_w        #139                // double 2.0d
      57: invokestatic  #50                 // Method java/lang/Math.sqrt:(D)D
      60: d2f
      61: putstatic     #41                 // Field SQRT_2:F
      64: return
}
