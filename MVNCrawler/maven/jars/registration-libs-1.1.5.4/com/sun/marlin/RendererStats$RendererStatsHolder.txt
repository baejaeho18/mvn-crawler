Compiled from "RendererStats.java"
final class com.sun.marlin.RendererStats$RendererStatsHolder {
  private static volatile com.sun.marlin.RendererStats$RendererStatsHolder SINGLETON;

  private final java.util.concurrent.ConcurrentLinkedQueue<com.sun.marlin.RendererStats> allStats;

  static synchronized com.sun.marlin.RendererStats$RendererStatsHolder getInstance();
    Code:
       0: getstatic     #2                  // Field SINGLETON:Lcom/sun/marlin/RendererStats$RendererStatsHolder;
       3: ifnonnull     16
       6: new           #3                  // class com/sun/marlin/RendererStats$RendererStatsHolder
       9: dup
      10: invokespecial #4                  // Method "<init>":()V
      13: putstatic     #2                  // Field SINGLETON:Lcom/sun/marlin/RendererStats$RendererStatsHolder;
      16: getstatic     #2                  // Field SINGLETON:Lcom/sun/marlin/RendererStats$RendererStatsHolder;
      19: areturn

  static void dumpStats();
    Code:
       0: getstatic     #2                  // Field SINGLETON:Lcom/sun/marlin/RendererStats$RendererStatsHolder;
       3: ifnull        12
       6: getstatic     #2                  // Field SINGLETON:Lcom/sun/marlin/RendererStats$RendererStatsHolder;
       9: invokevirtual #5                  // Method dump:()V
      12: return

  private com.sun.marlin.RendererStats$RendererStatsHolder();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #9                  // Field allStats:Ljava/util/concurrent/ConcurrentLinkedQueue;
      15: aload_0
      16: invokedynamic #10,  0             // InvokeDynamic #0:run:(Lcom/sun/marlin/RendererStats$RendererStatsHolder;)Ljava/security/PrivilegedAction;
      21: invokestatic  #11                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      24: pop
      25: return

  void add(java.lang.Object, com.sun.marlin.RendererStats);
    Code:
       0: aload_0
       1: getfield      #9                  // Field allStats:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_2
       5: invokevirtual #12                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
       8: pop
       9: invokestatic  #13                 // Method com/sun/marlin/MarlinUtils.getCleaner:()Ljava/lang/ref/Cleaner;
      12: aload_1
      13: aload_0
      14: aload_2
      15: invokedynamic #14,  0             // InvokeDynamic #1:run:(Lcom/sun/marlin/RendererStats$RendererStatsHolder;Lcom/sun/marlin/RendererStats;)Ljava/lang/Runnable;
      20: invokevirtual #15                 // Method java/lang/ref/Cleaner.register:(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/ref/Cleaner$Cleanable;
      23: pop
      24: return

  void remove(com.sun.marlin.RendererStats);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method com/sun/marlin/RendererStats.dump:()V
       4: aload_0
       5: getfield      #9                  // Field allStats:Ljava/util/concurrent/ConcurrentLinkedQueue;
       8: aload_1
       9: invokevirtual #17                 // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
      12: pop
      13: return

  void dump();
    Code:
       0: aload_0
       1: getfield      #9                  // Field allStats:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #18                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          34
      17: aload_1
      18: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #21                 // class com/sun/marlin/RendererStats
      26: astore_2
      27: aload_2
      28: invokevirtual #16                 // Method com/sun/marlin/RendererStats.dump:()V
      31: goto          8
      34: return

  private void lambda$add$1(com.sun.marlin.RendererStats);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method remove:(Lcom/sun/marlin/RendererStats;)V
       5: return

  private java.lang.Void lambda$new$0();
    Code:
       0: new           #23                 // class java/lang/Thread
       3: dup
       4: invokestatic  #24                 // Method com/sun/marlin/MarlinUtils.getRootThreadGroup:()Ljava/lang/ThreadGroup;
       7: new           #25                 // class com/sun/marlin/RendererStats$RendererStatsHolder$1
      10: dup
      11: aload_0
      12: invokespecial #26                 // Method com/sun/marlin/RendererStats$RendererStatsHolder$1."<init>":(Lcom/sun/marlin/RendererStats$RendererStatsHolder;)V
      15: ldc           #27                 // String MarlinStatsHook
      17: invokespecial #28                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
      20: astore_1
      21: aload_1
      22: aconst_null
      23: invokevirtual #29                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      26: invokestatic  #30                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      29: aload_1
      30: invokevirtual #31                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      33: aconst_null
      34: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #2                  // Field SINGLETON:Lcom/sun/marlin/RendererStats$RendererStatsHolder;
       4: return
}
