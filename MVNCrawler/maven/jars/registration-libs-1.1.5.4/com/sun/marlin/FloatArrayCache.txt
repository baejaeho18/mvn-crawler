Compiled from "FloatArrayCache.java"
public final class com.sun.marlin.FloatArrayCache implements com.sun.marlin.MarlinConst {
  final boolean clean;

  private final int bucketCapacity;

  private java.lang.ref.WeakReference<com.sun.marlin.FloatArrayCache$Bucket[]> refBuckets;

  final com.sun.marlin.ArrayCacheConst$CacheStats stats;

  com.sun.marlin.FloatArrayCache(boolean, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field refBuckets:Ljava/lang/ref/WeakReference;
       9: aload_0
      10: iload_1
      11: putfield      #4                  // Field clean:Z
      14: aload_0
      15: iload_2
      16: putfield      #5                  // Field bucketCapacity:I
      19: aload_0
      20: getstatic     #6                  // Field DO_STATS:Z
      23: ifeq          45
      26: new           #7                  // class com/sun/marlin/ArrayCacheConst$CacheStats
      29: dup
      30: iload_1
      31: invokestatic  #8                  // Method getLogPrefix:(Z)Ljava/lang/String;
      34: invokedynamic #9,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      39: invokespecial #10                 // Method com/sun/marlin/ArrayCacheConst$CacheStats."<init>":(Ljava/lang/String;)V
      42: goto          46
      45: aconst_null
      46: putfield      #11                 // Field stats:Lcom/sun/marlin/ArrayCacheConst$CacheStats;
      49: return

  com.sun.marlin.FloatArrayCache$Bucket getCacheBucket(int);
    Code:
       0: iload_1
       1: invokestatic  #12                 // Method com/sun/marlin/ArrayCacheConst.getBucket:(I)I
       4: istore_2
       5: aload_0
       6: invokespecial #13                 // Method getBuckets:()[Lcom/sun/marlin/FloatArrayCache$Bucket;
       9: iload_2
      10: aaload
      11: areturn

  private com.sun.marlin.FloatArrayCache$Bucket[] getBuckets();
    Code:
       0: aload_0
       1: getfield      #3                  // Field refBuckets:Ljava/lang/ref/WeakReference;
       4: ifnull        20
       7: aload_0
       8: getfield      #3                  // Field refBuckets:Ljava/lang/ref/WeakReference;
      11: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      14: checkcast     #15                 // class "[Lcom/sun/marlin/FloatArrayCache$Bucket;"
      17: goto          21
      20: aconst_null
      21: astore_1
      22: aload_1
      23: ifnonnull     100
      26: bipush        8
      28: anewarray     #16                 // class com/sun/marlin/FloatArrayCache$Bucket
      31: astore_1
      32: iconst_0
      33: istore_2
      34: iload_2
      35: bipush        8
      37: if_icmpge     88
      40: aload_1
      41: iload_2
      42: new           #16                 // class com/sun/marlin/FloatArrayCache$Bucket
      45: dup
      46: aload_0
      47: getfield      #4                  // Field clean:Z
      50: getstatic     #17                 // Field com/sun/marlin/ArrayCacheConst.ARRAY_SIZES:[I
      53: iload_2
      54: iaload
      55: aload_0
      56: getfield      #5                  // Field bucketCapacity:I
      59: getstatic     #6                  // Field DO_STATS:Z
      62: ifeq          77
      65: aload_0
      66: getfield      #11                 // Field stats:Lcom/sun/marlin/ArrayCacheConst$CacheStats;
      69: getfield      #18                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.bucketStats:[Lcom/sun/marlin/ArrayCacheConst$BucketStats;
      72: iload_2
      73: aaload
      74: goto          78
      77: aconst_null
      78: invokespecial #19                 // Method com/sun/marlin/FloatArrayCache$Bucket."<init>":(ZIILcom/sun/marlin/ArrayCacheConst$BucketStats;)V
      81: aastore
      82: iinc          2, 1
      85: goto          34
      88: aload_0
      89: new           #20                 // class java/lang/ref/WeakReference
      92: dup
      93: aload_1
      94: invokespecial #21                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      97: putfield      #3                  // Field refBuckets:Ljava/lang/ref/WeakReference;
     100: aload_1
     101: areturn

  com.sun.marlin.FloatArrayCache$Reference createRef(int);
    Code:
       0: new           #22                 // class com/sun/marlin/FloatArrayCache$Reference
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #23                 // Method com/sun/marlin/FloatArrayCache$Reference."<init>":(Lcom/sun/marlin/FloatArrayCache;I)V
       9: areturn

  static float[] createArray(int);
    Code:
       0: iload_0
       1: newarray       float
       3: areturn

  static void fill(float[], int, int, float);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: fload_3
       4: invokestatic  #24                 // Method java/util/Arrays.fill:([FIIF)V
       7: getstatic     #25                 // Field DO_CHECKS:Z
      10: ifeq          20
      13: aload_0
      14: iload_1
      15: iload_2
      16: fload_3
      17: invokestatic  #26                 // Method check:([FIIF)V
      20: return

  public static void check(float[], int, int, float);
    Code:
       0: getstatic     #25                 // Field DO_CHECKS:Z
       3: ifeq          64
       6: iconst_0
       7: istore        4
       9: iload         4
      11: aload_0
      12: arraylength
      13: if_icmpge     64
      16: aload_0
      17: iload         4
      19: faload
      20: fload_3
      21: fcmpl
      22: ifeq          58
      25: iload         4
      27: aload_0
      28: iload         4
      30: faload
      31: iload_1
      32: iload_2
      33: aload_0
      34: invokestatic  #27                 // Method java/util/Arrays.toString:([F)Ljava/lang/String;
      37: invokedynamic #28,  0             // InvokeDynamic #1:makeConcatWithConstants:(IFIILjava/lang/String;)Ljava/lang/String;
      42: new           #29                 // class java/lang/Throwable
      45: dup
      46: invokespecial #30                 // Method java/lang/Throwable."<init>":()V
      49: invokestatic  #31                 // Method com/sun/marlin/MarlinUtils.logException:(Ljava/lang/String;Ljava/lang/Throwable;)V
      52: aload_0
      53: fload_3
      54: invokestatic  #32                 // Method java/util/Arrays.fill:([FF)V
      57: return
      58: iinc          4, 1
      61: goto          9
      64: return

  static java.lang.String getLogPrefix(boolean);
    Code:
       0: iload_0
       1: ifeq          9
       4: ldc           #33                 // String Clean
       6: goto          11
       9: ldc           #34                 // String Dirty
      11: areturn
}
