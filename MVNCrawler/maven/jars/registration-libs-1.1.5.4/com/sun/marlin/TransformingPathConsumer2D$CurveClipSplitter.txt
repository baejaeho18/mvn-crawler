Compiled from "TransformingPathConsumer2D.java"
final class com.sun.marlin.TransformingPathConsumer2D$CurveClipSplitter {
  static final float LEN_TH;

  static final boolean DO_CHECK_LENGTH;

  private static final boolean TRACE;

  private static final int MAX_N_CURVES;

  private final com.sun.marlin.RendererContext rdrCtx;

  private float minLength;

  final float[] clipRect;

  final float[] clipRectPad;

  private boolean init_clipRectPad;

  final float[] middle;

  private final float[] subdivTs;

  private final com.sun.marlin.Curve curve;

  com.sun.marlin.TransformingPathConsumer2D$CurveClipSplitter(com.sun.marlin.RendererContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       float
       8: putfield      #4                  // Field clipRectPad:[F
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field init_clipRectPad:Z
      16: aload_0
      17: bipush        98
      19: newarray       float
      21: putfield      #6                  // Field middle:[F
      24: aload_0
      25: bipush        12
      27: newarray       float
      29: putfield      #7                  // Field subdivTs:[F
      32: aload_0
      33: aload_1
      34: putfield      #8                  // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      37: aload_0
      38: aload_1
      39: getfield      #9                  // Field com/sun/marlin/RendererContext.clipRect:[F
      42: putfield      #10                 // Field clipRect:[F
      45: aload_0
      46: aload_1
      47: getfield      #11                 // Field com/sun/marlin/RendererContext.curve:Lcom/sun/marlin/Curve;
      50: putfield      #12                 // Field curve:Lcom/sun/marlin/Curve;
      53: return

  void init();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field init_clipRectPad:Z
       5: getstatic     #13                 // Field DO_CHECK_LENGTH:Z
       8: ifeq          62
      11: aload_0
      12: aload_0
      13: getfield      #8                  // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      16: getfield      #14                 // Field com/sun/marlin/RendererContext.clipInvScale:F
      19: fconst_0
      20: fcmpl
      21: ifne          30
      24: getstatic     #15                 // Field LEN_TH:F
      27: goto          41
      30: getstatic     #15                 // Field LEN_TH:F
      33: aload_0
      34: getfield      #8                  // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      37: getfield      #14                 // Field com/sun/marlin/RendererContext.clipInvScale:F
      40: fmul
      41: putfield      #16                 // Field minLength:F
      44: getstatic     #17                 // Field com/sun/marlin/MarlinConst.DO_LOG_CLIP:Z
      47: ifeq          62
      50: aload_0
      51: getfield      #16                 // Field minLength:F
      54: invokedynamic #18,  0             // InvokeDynamic #0:makeConcatWithConstants:(F)Ljava/lang/String;
      59: invokestatic  #19                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      62: return

  private void initPaddedClip();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clipRect:[F
       4: astore_1
       5: aload_0
       6: getfield      #4                  // Field clipRectPad:[F
       9: astore_2
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: faload
      15: fconst_1
      16: fsub
      17: fastore
      18: aload_2
      19: iconst_1
      20: aload_1
      21: iconst_1
      22: faload
      23: fconst_1
      24: fadd
      25: fastore
      26: aload_2
      27: iconst_2
      28: aload_1
      29: iconst_2
      30: faload
      31: fconst_1
      32: fsub
      33: fastore
      34: aload_2
      35: iconst_3
      36: aload_1
      37: iconst_3
      38: faload
      39: fconst_1
      40: fadd
      41: fastore
      42: return

  boolean splitLine(float, float, float, float, int, com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: getstatic     #13                 // Field DO_CHECK_LENGTH:Z
       3: ifeq          24
       6: fload_1
       7: fload_2
       8: fload_3
       9: fload         4
      11: invokestatic  #20                 // Method com/sun/marlin/Helpers.fastLineLen:(FFFF)F
      14: aload_0
      15: getfield      #16                 // Field minLength:F
      18: fcmpg
      19: ifgt          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #6                  // Field middle:[F
      28: astore        7
      30: aload         7
      32: iconst_0
      33: fload_1
      34: fastore
      35: aload         7
      37: iconst_1
      38: fload_2
      39: fastore
      40: aload         7
      42: iconst_2
      43: fload_3
      44: fastore
      45: aload         7
      47: iconst_3
      48: fload         4
      50: fastore
      51: aload_0
      52: iconst_4
      53: iload         5
      55: aload         6
      57: invokespecial #21                 // Method subdivideAtIntersections:(IILcom/sun/javafx/geom/PathConsumer2D;)Z
      60: ireturn

  boolean splitQuad(float, float, float, float, float, float, int, com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: getstatic     #13                 // Field DO_CHECK_LENGTH:Z
       3: ifeq          28
       6: fload_1
       7: fload_2
       8: fload_3
       9: fload         4
      11: fload         5
      13: fload         6
      15: invokestatic  #22                 // Method com/sun/marlin/Helpers.fastQuadLen:(FFFFFF)F
      18: aload_0
      19: getfield      #16                 // Field minLength:F
      22: fcmpg
      23: ifgt          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: getfield      #6                  // Field middle:[F
      32: astore        9
      34: aload         9
      36: iconst_0
      37: fload_1
      38: fastore
      39: aload         9
      41: iconst_1
      42: fload_2
      43: fastore
      44: aload         9
      46: iconst_2
      47: fload_3
      48: fastore
      49: aload         9
      51: iconst_3
      52: fload         4
      54: fastore
      55: aload         9
      57: iconst_4
      58: fload         5
      60: fastore
      61: aload         9
      63: iconst_5
      64: fload         6
      66: fastore
      67: aload_0
      68: bipush        6
      70: iload         7
      72: aload         8
      74: invokespecial #21                 // Method subdivideAtIntersections:(IILcom/sun/javafx/geom/PathConsumer2D;)Z
      77: ireturn

  boolean splitCurve(float, float, float, float, float, float, float, float, int, com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: getstatic     #13                 // Field DO_CHECK_LENGTH:Z
       3: ifeq          32
       6: fload_1
       7: fload_2
       8: fload_3
       9: fload         4
      11: fload         5
      13: fload         6
      15: fload         7
      17: fload         8
      19: invokestatic  #23                 // Method com/sun/marlin/Helpers.fastCurvelen:(FFFFFFFF)F
      22: aload_0
      23: getfield      #16                 // Field minLength:F
      26: fcmpg
      27: ifgt          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: getfield      #6                  // Field middle:[F
      36: astore        11
      38: aload         11
      40: iconst_0
      41: fload_1
      42: fastore
      43: aload         11
      45: iconst_1
      46: fload_2
      47: fastore
      48: aload         11
      50: iconst_2
      51: fload_3
      52: fastore
      53: aload         11
      55: iconst_3
      56: fload         4
      58: fastore
      59: aload         11
      61: iconst_4
      62: fload         5
      64: fastore
      65: aload         11
      67: iconst_5
      68: fload         6
      70: fastore
      71: aload         11
      73: bipush        6
      75: fload         7
      77: fastore
      78: aload         11
      80: bipush        7
      82: fload         8
      84: fastore
      85: aload_0
      86: bipush        8
      88: iload         9
      90: aload         10
      92: invokespecial #21                 // Method subdivideAtIntersections:(IILcom/sun/javafx/geom/PathConsumer2D;)Z
      95: ireturn

  private boolean subdivideAtIntersections(int, int, com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: aload_0
       1: getfield      #6                  // Field middle:[F
       4: astore        4
       6: aload_0
       7: getfield      #7                  // Field subdivTs:[F
      10: astore        5
      12: aload_0
      13: getfield      #5                  // Field init_clipRectPad:Z
      16: ifeq          28
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field init_clipRectPad:Z
      24: aload_0
      25: invokespecial #24                 // Method initPaddedClip:()V
      28: aload_0
      29: getfield      #12                 // Field curve:Lcom/sun/marlin/Curve;
      32: aload         4
      34: aload         5
      36: iload_1
      37: iload_2
      38: aload_0
      39: getfield      #4                  // Field clipRectPad:[F
      42: invokestatic  #25                 // Method com/sun/marlin/Helpers.findClipPoints:(Lcom/sun/marlin/Curve;[F[FII[F)I
      45: istore        6
      47: iload         6
      49: ifne          54
      52: iconst_0
      53: ireturn
      54: fconst_0
      55: fstore        7
      57: iconst_0
      58: istore        8
      60: iconst_0
      61: istore        9
      63: iload         8
      65: iload         6
      67: if_icmpge     115
      70: aload         5
      72: iload         8
      74: faload
      75: fstore        10
      77: fload         10
      79: fload         7
      81: fsub
      82: fconst_1
      83: fload         7
      85: fsub
      86: fdiv
      87: aload         4
      89: iload         9
      91: aload         4
      93: iload         9
      95: iload_1
      96: invokestatic  #26                 // Method com/sun/marlin/Helpers.subdivideAt:(F[FI[FII)V
      99: fload         10
     101: fstore        7
     103: iinc          8, 1
     106: iload         9
     108: iload_1
     109: iadd
     110: istore        9
     112: goto          63
     115: iconst_0
     116: istore        8
     118: iconst_0
     119: istore        9
     121: iload         8
     123: iload         6
     125: if_icmpgt     149
     128: iload_1
     129: aload         4
     131: iload         9
     133: aload_3
     134: invokestatic  #27                 // Method emitCurrent:(I[FILcom/sun/javafx/geom/PathConsumer2D;)V
     137: iinc          8, 1
     140: iload         9
     142: iload_1
     143: iadd
     144: istore        9
     146: goto          121
     149: iconst_1
     150: ireturn

  static void emitCurrent(int, float[], int, com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: iload_0
       1: bipush        8
       3: if_icmpne     47
       6: aload_3
       7: aload_1
       8: iload_2
       9: iconst_2
      10: iadd
      11: faload
      12: aload_1
      13: iload_2
      14: iconst_3
      15: iadd
      16: faload
      17: aload_1
      18: iload_2
      19: iconst_4
      20: iadd
      21: faload
      22: aload_1
      23: iload_2
      24: iconst_5
      25: iadd
      26: faload
      27: aload_1
      28: iload_2
      29: bipush        6
      31: iadd
      32: faload
      33: aload_1
      34: iload_2
      35: bipush        7
      37: iadd
      38: faload
      39: invokeinterface #28,  7           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.curveTo:(FFFFFF)V
      44: goto          97
      47: iload_0
      48: iconst_4
      49: if_icmpne     71
      52: aload_3
      53: aload_1
      54: iload_2
      55: iconst_2
      56: iadd
      57: faload
      58: aload_1
      59: iload_2
      60: iconst_3
      61: iadd
      62: faload
      63: invokeinterface #29,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.lineTo:(FF)V
      68: goto          97
      71: aload_3
      72: aload_1
      73: iload_2
      74: iconst_2
      75: iadd
      76: faload
      77: aload_1
      78: iload_2
      79: iconst_3
      80: iadd
      81: faload
      82: aload_1
      83: iload_2
      84: iconst_4
      85: iadd
      86: faload
      87: aload_1
      88: iload_2
      89: iconst_5
      90: iadd
      91: faload
      92: invokeinterface #30,  5           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.quadTo:(FFFF)V
      97: return

  static {};
    Code:
       0: invokestatic  #31                 // Method com/sun/marlin/MarlinProperties.getSubdividerMinLength:()F
       3: putstatic     #15                 // Field LEN_TH:F
       6: getstatic     #15                 // Field LEN_TH:F
       9: fconst_0
      10: fcmpl
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: putstatic     #13                 // Field DO_CHECK_LENGTH:Z
      22: return
}
