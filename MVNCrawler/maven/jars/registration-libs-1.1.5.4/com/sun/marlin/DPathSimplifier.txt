Compiled from "DPathSimplifier.java"
public final class com.sun.marlin.DPathSimplifier implements com.sun.marlin.DPathConsumer2D {
  private static final double PIX_THRESHOLD;

  private static final double SQUARE_TOLERANCE;

  private com.sun.marlin.DPathConsumer2D delegate;

  private double cx;

  private double cy;

  private boolean skipped;

  private double sx;

  private double sy;

  com.sun.marlin.DPathSimplifier();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.sun.marlin.DPathSimplifier init(com.sun.marlin.DPathConsumer2D);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field skipped:Z
      10: aload_0
      11: areturn

  private void finishPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field skipped:Z
       4: ifeq          19
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field sx:D
      12: aload_0
      13: getfield      #5                  // Field sy:D
      16: invokespecial #6                  // Method _lineTo:(DD)V
      19: return

  public void pathDone();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method finishPath:()V
       4: aload_0
       5: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       8: invokeinterface #8,  1            // InterfaceMethod com/sun/marlin/DPathConsumer2D.pathDone:()V
      13: return

  public void closePath();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method finishPath:()V
       4: aload_0
       5: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       8: invokeinterface #9,  1            // InterfaceMethod com/sun/marlin/DPathConsumer2D.closePath:()V
      13: return

  public void moveTo(double, double);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method finishPath:()V
       4: aload_0
       5: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       8: dload_1
       9: dload_3
      10: invokeinterface #10,  5           // InterfaceMethod com/sun/marlin/DPathConsumer2D.moveTo:(DD)V
      15: aload_0
      16: dload_1
      17: putfield      #11                 // Field cx:D
      20: aload_0
      21: dload_3
      22: putfield      #12                 // Field cy:D
      25: return

  public void lineTo(double, double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #11                 // Field cx:D
       5: dsub
       6: dstore        5
       8: dload_3
       9: aload_0
      10: getfield      #12                 // Field cy:D
      13: dsub
      14: dstore        7
      16: dload         5
      18: dload         5
      20: dmul
      21: dload         7
      23: dload         7
      25: dmul
      26: dadd
      27: getstatic     #13                 // Field SQUARE_TOLERANCE:D
      30: dcmpg
      31: ifgt          50
      34: aload_0
      35: iconst_1
      36: putfield      #3                  // Field skipped:Z
      39: aload_0
      40: dload_1
      41: putfield      #4                  // Field sx:D
      44: aload_0
      45: dload_3
      46: putfield      #5                  // Field sy:D
      49: return
      50: aload_0
      51: dload_1
      52: dload_3
      53: invokespecial #6                  // Method _lineTo:(DD)V
      56: return

  private void _lineTo(double, double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       4: dload_1
       5: dload_3
       6: invokeinterface #14,  5           // InterfaceMethod com/sun/marlin/DPathConsumer2D.lineTo:(DD)V
      11: aload_0
      12: dload_1
      13: putfield      #11                 // Field cx:D
      16: aload_0
      17: dload_3
      18: putfield      #12                 // Field cy:D
      21: aload_0
      22: iconst_0
      23: putfield      #3                  // Field skipped:Z
      26: return

  public void quadTo(double, double, double, double);
    Code:
       0: dload         5
       2: aload_0
       3: getfield      #11                 // Field cx:D
       6: dsub
       7: dstore        9
       9: dload         7
      11: aload_0
      12: getfield      #12                 // Field cy:D
      15: dsub
      16: dstore        11
      18: dload         9
      20: dload         9
      22: dmul
      23: dload         11
      25: dload         11
      27: dmul
      28: dadd
      29: getstatic     #13                 // Field SQUARE_TOLERANCE:D
      32: dcmpg
      33: ifgt          88
      36: dload_1
      37: aload_0
      38: getfield      #11                 // Field cx:D
      41: dsub
      42: dstore        9
      44: dload_3
      45: aload_0
      46: getfield      #12                 // Field cy:D
      49: dsub
      50: dstore        11
      52: dload         9
      54: dload         9
      56: dmul
      57: dload         11
      59: dload         11
      61: dmul
      62: dadd
      63: getstatic     #13                 // Field SQUARE_TOLERANCE:D
      66: dcmpg
      67: ifgt          88
      70: aload_0
      71: iconst_1
      72: putfield      #3                  // Field skipped:Z
      75: aload_0
      76: dload         5
      78: putfield      #4                  // Field sx:D
      81: aload_0
      82: dload         7
      84: putfield      #5                  // Field sy:D
      87: return
      88: aload_0
      89: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
      92: dload_1
      93: dload_3
      94: dload         5
      96: dload         7
      98: invokeinterface #15,  9           // InterfaceMethod com/sun/marlin/DPathConsumer2D.quadTo:(DDDD)V
     103: aload_0
     104: dload         5
     106: putfield      #11                 // Field cx:D
     109: aload_0
     110: dload         7
     112: putfield      #12                 // Field cy:D
     115: aload_0
     116: iconst_0
     117: putfield      #3                  // Field skipped:Z
     120: return

  public void curveTo(double, double, double, double, double, double);
    Code:
       0: dload         9
       2: aload_0
       3: getfield      #11                 // Field cx:D
       6: dsub
       7: dstore        13
       9: dload         11
      11: aload_0
      12: getfield      #12                 // Field cy:D
      15: dsub
      16: dstore        15
      18: dload         13
      20: dload         13
      22: dmul
      23: dload         15
      25: dload         15
      27: dmul
      28: dadd
      29: getstatic     #13                 // Field SQUARE_TOLERANCE:D
      32: dcmpg
      33: ifgt          124
      36: dload_1
      37: aload_0
      38: getfield      #11                 // Field cx:D
      41: dsub
      42: dstore        13
      44: dload_3
      45: aload_0
      46: getfield      #12                 // Field cy:D
      49: dsub
      50: dstore        15
      52: dload         13
      54: dload         13
      56: dmul
      57: dload         15
      59: dload         15
      61: dmul
      62: dadd
      63: getstatic     #13                 // Field SQUARE_TOLERANCE:D
      66: dcmpg
      67: ifgt          124
      70: dload         5
      72: aload_0
      73: getfield      #11                 // Field cx:D
      76: dsub
      77: dstore        13
      79: dload         7
      81: aload_0
      82: getfield      #12                 // Field cy:D
      85: dsub
      86: dstore        15
      88: dload         13
      90: dload         13
      92: dmul
      93: dload         15
      95: dload         15
      97: dmul
      98: dadd
      99: getstatic     #13                 // Field SQUARE_TOLERANCE:D
     102: dcmpg
     103: ifgt          124
     106: aload_0
     107: iconst_1
     108: putfield      #3                  // Field skipped:Z
     111: aload_0
     112: dload         9
     114: putfield      #4                  // Field sx:D
     117: aload_0
     118: dload         11
     120: putfield      #5                  // Field sy:D
     123: return
     124: aload_0
     125: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
     128: dload_1
     129: dload_3
     130: dload         5
     132: dload         7
     134: dload         9
     136: dload         11
     138: invokeinterface #16,  13          // InterfaceMethod com/sun/marlin/DPathConsumer2D.curveTo:(DDDDDD)V
     143: aload_0
     144: dload         9
     146: putfield      #11                 // Field cx:D
     149: aload_0
     150: dload         11
     152: putfield      #12                 // Field cy:D
     155: aload_0
     156: iconst_0
     157: putfield      #3                  // Field skipped:Z
     160: return

  static {};
    Code:
       0: invokestatic  #17                 // Method com/sun/marlin/MarlinProperties.getPathSimplifierPixelTolerance:()F
       3: f2d
       4: putstatic     #18                 // Field PIX_THRESHOLD:D
       7: getstatic     #18                 // Field PIX_THRESHOLD:D
      10: getstatic     #18                 // Field PIX_THRESHOLD:D
      13: dmul
      14: putstatic     #13                 // Field SQUARE_TOLERANCE:D
      17: return
}
