Compiled from "Helpers.java"
final class com.sun.marlin.Helpers implements com.sun.marlin.MarlinConst {
  private com.sun.marlin.Helpers();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class java/lang/Error
       7: dup
       8: ldc           #3                  // String This is a non instantiable class
      10: invokespecial #4                  // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      13: athrow

  static boolean within(float, float, float);
    Code:
       0: fload_1
       1: fload_0
       2: fsub
       3: fstore_3
       4: fload_3
       5: fload_2
       6: fcmpg
       7: ifgt          21
      10: fload_3
      11: fload_2
      12: fneg
      13: fcmpl
      14: iflt          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static boolean within(double, double, double);
    Code:
       0: dload_2
       1: dload_0
       2: dsub
       3: dstore        6
       5: dload         6
       7: dload         4
       9: dcmpg
      10: ifgt          26
      13: dload         6
      15: dload         4
      17: dneg
      18: dcmpl
      19: iflt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  static float evalCubic(float, float, float, float, float);
    Code:
       0: fload         4
       2: fload         4
       4: fload         4
       6: fload_0
       7: fmul
       8: fload_1
       9: fadd
      10: fmul
      11: fload_2
      12: fadd
      13: fmul
      14: fload_3
      15: fadd
      16: freturn

  static float evalQuad(float, float, float, float);
    Code:
       0: fload_3
       1: fload_3
       2: fload_0
       3: fmul
       4: fload_1
       5: fadd
       6: fmul
       7: fload_2
       8: fadd
       9: freturn

  static int quadraticRoots(float, float, float, float[], int);
    Code:
       0: iload         4
       2: istore        5
       4: fload_0
       5: fconst_0
       6: fcmpl
       7: ifeq          137
      10: fload_1
      11: fload_1
      12: fmul
      13: ldc           #5                  // float 4.0f
      15: fload_0
      16: fmul
      17: fload_2
      18: fmul
      19: fsub
      20: fstore        6
      22: fload         6
      24: fconst_0
      25: fcmpl
      26: ifle          114
      29: fload         6
      31: f2d
      32: invokestatic  #6                  // Method java/lang/Math.sqrt:(D)D
      35: d2f
      36: fstore        7
      38: fload_1
      39: fconst_0
      40: fcmpl
      41: iflt          79
      44: aload_3
      45: iload         5
      47: iinc          5, 1
      50: fconst_2
      51: fload_2
      52: fmul
      53: fload_1
      54: fneg
      55: fload         7
      57: fsub
      58: fdiv
      59: fastore
      60: aload_3
      61: iload         5
      63: iinc          5, 1
      66: fload_1
      67: fneg
      68: fload         7
      70: fsub
      71: fconst_2
      72: fload_0
      73: fmul
      74: fdiv
      75: fastore
      76: goto          111
      79: aload_3
      80: iload         5
      82: iinc          5, 1
      85: fload_1
      86: fneg
      87: fload         7
      89: fadd
      90: fconst_2
      91: fload_0
      92: fmul
      93: fdiv
      94: fastore
      95: aload_3
      96: iload         5
      98: iinc          5, 1
     101: fconst_2
     102: fload_2
     103: fmul
     104: fload_1
     105: fneg
     106: fload         7
     108: fadd
     109: fdiv
     110: fastore
     111: goto          134
     114: fload         6
     116: fconst_0
     117: fcmpl
     118: ifne          134
     121: aload_3
     122: iload         5
     124: iinc          5, 1
     127: fload_1
     128: fneg
     129: fconst_2
     130: fload_0
     131: fmul
     132: fdiv
     133: fastore
     134: goto          154
     137: fload_1
     138: fconst_0
     139: fcmpl
     140: ifeq          154
     143: aload_3
     144: iload         5
     146: iinc          5, 1
     149: fload_2
     150: fneg
     151: fload_1
     152: fdiv
     153: fastore
     154: iload         5
     156: iload         4
     158: isub
     159: ireturn

  static int cubicRootsInAB(float, float, float, float, float[], int, float, float);
    Code:
       0: fload_0
       1: fconst_0
       2: fcmpl
       3: ifne          35
       6: fload_1
       7: fload_2
       8: fload_3
       9: aload         4
      11: iload         5
      13: invokestatic  #7                  // Method quadraticRoots:(FFF[FI)I
      16: istore        8
      18: aload         4
      20: iload         5
      22: iload         8
      24: fload         6
      26: fload         7
      28: invokestatic  #8                  // Method filterOutNotInAB:([FIIFF)I
      31: iload         5
      33: isub
      34: ireturn
      35: fload_1
      36: f2d
      37: fload_0
      38: f2d
      39: ddiv
      40: dstore        8
      42: fload_2
      43: f2d
      44: fload_0
      45: f2d
      46: ddiv
      47: dstore        10
      49: fload_3
      50: f2d
      51: fload_0
      52: f2d
      53: ddiv
      54: dstore        12
      56: ldc2_w        #9                  // double 0.3333333333333333d
      59: dload         8
      61: dmul
      62: dstore        14
      64: dload         8
      66: dload         8
      68: dmul
      69: dstore        16
      71: ldc2_w        #9                  // double 0.3333333333333333d
      74: ldc2_w        #11                 // double -0.3333333333333333d
      77: dload         16
      79: dmul
      80: dload         10
      82: dadd
      83: dmul
      84: dstore        18
      86: ldc2_w        #13                 // double 0.5d
      89: ldc2_w        #15                 // double 0.07407407407407407d
      92: dload         8
      94: dmul
      95: dload         16
      97: dmul
      98: dload         14
     100: dload         10
     102: dmul
     103: dsub
     104: dload         12
     106: dadd
     107: dmul
     108: dstore        20
     110: dload         18
     112: dload         18
     114: dmul
     115: dload         18
     117: dmul
     118: dstore        22
     120: dload         20
     122: dload         20
     124: dmul
     125: dload         22
     127: dadd
     128: dstore        24
     130: dload         24
     132: dconst_0
     133: dcmpg
     134: ifge          239
     137: ldc2_w        #9                  // double 0.3333333333333333d
     140: dload         20
     142: dneg
     143: dload         22
     145: dneg
     146: invokestatic  #6                  // Method java/lang/Math.sqrt:(D)D
     149: ddiv
     150: invokestatic  #17                 // Method java/lang/Math.acos:(D)D
     153: dmul
     154: dstore        27
     156: ldc2_w        #18                 // double 2.0d
     159: dload         18
     161: dneg
     162: invokestatic  #6                  // Method java/lang/Math.sqrt:(D)D
     165: dmul
     166: dstore        29
     168: aload         4
     170: iload         5
     172: dload         29
     174: dload         27
     176: invokestatic  #20                 // Method java/lang/Math.cos:(D)D
     179: dmul
     180: dload         14
     182: dsub
     183: d2f
     184: fastore
     185: aload         4
     187: iload         5
     189: iconst_1
     190: iadd
     191: dload         29
     193: dneg
     194: dload         27
     196: ldc2_w        #22                 // double 1.0471975511965976d
     199: dadd
     200: invokestatic  #20                 // Method java/lang/Math.cos:(D)D
     203: dmul
     204: dload         14
     206: dsub
     207: d2f
     208: fastore
     209: aload         4
     211: iload         5
     213: iconst_2
     214: iadd
     215: dload         29
     217: dneg
     218: dload         27
     220: ldc2_w        #22                 // double 1.0471975511965976d
     223: dsub
     224: invokestatic  #20                 // Method java/lang/Math.cos:(D)D
     227: dmul
     228: dload         14
     230: dsub
     231: d2f
     232: fastore
     233: iconst_3
     234: istore        26
     236: goto          319
     239: dload         24
     241: invokestatic  #6                  // Method java/lang/Math.sqrt:(D)D
     244: dstore        27
     246: dload         27
     248: dload         20
     250: dsub
     251: invokestatic  #24                 // Method java/lang/Math.cbrt:(D)D
     254: dstore        29
     256: dload         27
     258: dload         20
     260: dadd
     261: invokestatic  #24                 // Method java/lang/Math.cbrt:(D)D
     264: dneg
     265: dstore        31
     267: aload         4
     269: iload         5
     271: dload         29
     273: dload         31
     275: dadd
     276: dload         14
     278: dsub
     279: d2f
     280: fastore
     281: iconst_1
     282: istore        26
     284: dload         24
     286: dconst_0
     287: ldc2_w        #25                 // double 1.0E-8d
     290: invokestatic  #27                 // Method within:(DDD)Z
     293: ifeq          319
     296: aload         4
     298: iload         5
     300: iconst_1
     301: iadd
     302: ldc2_w        #28                 // double -0.5d
     305: dload         29
     307: dload         31
     309: dadd
     310: dmul
     311: dload         14
     313: dsub
     314: d2f
     315: fastore
     316: iconst_2
     317: istore        26
     319: aload         4
     321: iload         5
     323: iload         26
     325: fload         6
     327: fload         7
     329: invokestatic  #8                  // Method filterOutNotInAB:([FIIFF)I
     332: iload         5
     334: isub
     335: ireturn

  static int filterOutNotInAB(float[], int, int, float, float);
    Code:
       0: iload_1
       1: istore        5
       3: iload_1
       4: istore        6
       6: iload_1
       7: iload_2
       8: iadd
       9: istore        7
      11: iload         6
      13: iload         7
      15: if_icmpge     54
      18: aload_0
      19: iload         6
      21: faload
      22: fload_3
      23: fcmpl
      24: iflt          48
      27: aload_0
      28: iload         6
      30: faload
      31: fload         4
      33: fcmpg
      34: ifge          48
      37: aload_0
      38: iload         5
      40: iinc          5, 1
      43: aload_0
      44: iload         6
      46: faload
      47: fastore
      48: iinc          6, 1
      51: goto          11
      54: iload         5
      56: ireturn

  static float fastLineLen(float, float, float, float);
    Code:
       0: fload_2
       1: fload_0
       2: fsub
       3: fstore        4
       5: fload_3
       6: fload_1
       7: fsub
       8: fstore        5
      10: fload         4
      12: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      15: fload         5
      17: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      20: fadd
      21: freturn

  static float linelen(float, float, float, float);
    Code:
       0: fload_2
       1: fload_0
       2: fsub
       3: fstore        4
       5: fload_3
       6: fload_1
       7: fsub
       8: fstore        5
      10: fload         4
      12: fload         4
      14: fmul
      15: fload         5
      17: fload         5
      19: fmul
      20: fadd
      21: f2d
      22: invokestatic  #6                  // Method java/lang/Math.sqrt:(D)D
      25: d2f
      26: freturn

  static float fastQuadLen(float, float, float, float, float, float);
    Code:
       0: fload_2
       1: fload_0
       2: fsub
       3: fstore        6
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        7
      11: fload_3
      12: fload_1
      13: fsub
      14: fstore        8
      16: fload         5
      18: fload_3
      19: fsub
      20: fstore        9
      22: fload         6
      24: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      27: fload         7
      29: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      32: fadd
      33: fload         8
      35: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      38: fadd
      39: fload         9
      41: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      44: fadd
      45: freturn

  static float quadlen(float, float, float, float, float, float);
    Code:
       0: fload_0
       1: fload_1
       2: fload_2
       3: fload_3
       4: invokestatic  #31                 // Method linelen:(FFFF)F
       7: fload_2
       8: fload_3
       9: fload         4
      11: fload         5
      13: invokestatic  #31                 // Method linelen:(FFFF)F
      16: fadd
      17: fload_0
      18: fload_1
      19: fload         4
      21: fload         5
      23: invokestatic  #31                 // Method linelen:(FFFF)F
      26: fadd
      27: fconst_2
      28: fdiv
      29: freturn

  static float fastCurvelen(float, float, float, float, float, float, float, float);
    Code:
       0: fload_2
       1: fload_0
       2: fsub
       3: fstore        8
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        9
      11: fload         6
      13: fload         4
      15: fsub
      16: fstore        10
      18: fload_3
      19: fload_1
      20: fsub
      21: fstore        11
      23: fload         5
      25: fload_3
      26: fsub
      27: fstore        12
      29: fload         7
      31: fload         5
      33: fsub
      34: fstore        13
      36: fload         8
      38: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      41: fload         9
      43: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      46: fadd
      47: fload         10
      49: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      52: fadd
      53: fload         11
      55: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      58: fadd
      59: fload         12
      61: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      64: fadd
      65: fload         13
      67: invokestatic  #30                 // Method java/lang/Math.abs:(F)F
      70: fadd
      71: freturn

  static float curvelen(float, float, float, float, float, float, float, float);
    Code:
       0: fload_0
       1: fload_1
       2: fload_2
       3: fload_3
       4: invokestatic  #31                 // Method linelen:(FFFF)F
       7: fload_2
       8: fload_3
       9: fload         4
      11: fload         5
      13: invokestatic  #31                 // Method linelen:(FFFF)F
      16: fadd
      17: fload         4
      19: fload         5
      21: fload         6
      23: fload         7
      25: invokestatic  #31                 // Method linelen:(FFFF)F
      28: fadd
      29: fload_0
      30: fload_1
      31: fload         6
      33: fload         7
      35: invokestatic  #31                 // Method linelen:(FFFF)F
      38: fadd
      39: fconst_2
      40: fdiv
      41: freturn

  static int findSubdivPoints(com.sun.marlin.Curve, float[], float[], int, float);
    Code:
       0: aload_1
       1: iconst_2
       2: faload
       3: aload_1
       4: iconst_0
       5: faload
       6: fsub
       7: fstore        5
       9: aload_1
      10: iconst_3
      11: faload
      12: aload_1
      13: iconst_1
      14: faload
      15: fsub
      16: fstore        6
      18: fload         6
      20: fconst_0
      21: fcmpl
      22: ifeq          259
      25: fload         5
      27: fconst_0
      28: fcmpl
      29: ifeq          259
      32: fload         5
      34: fload         5
      36: fmul
      37: fload         6
      39: fload         6
      41: fmul
      42: fadd
      43: f2d
      44: invokestatic  #6                  // Method java/lang/Math.sqrt:(D)D
      47: d2f
      48: fstore        7
      50: fload         5
      52: fload         7
      54: fdiv
      55: fstore        8
      57: fload         6
      59: fload         7
      61: fdiv
      62: fstore        9
      64: fload         8
      66: aload_1
      67: iconst_0
      68: faload
      69: fmul
      70: fload         9
      72: aload_1
      73: iconst_1
      74: faload
      75: fmul
      76: fadd
      77: fstore        10
      79: fload         8
      81: aload_1
      82: iconst_1
      83: faload
      84: fmul
      85: fload         9
      87: aload_1
      88: iconst_0
      89: faload
      90: fmul
      91: fsub
      92: fstore        11
      94: fload         8
      96: aload_1
      97: iconst_2
      98: faload
      99: fmul
     100: fload         9
     102: aload_1
     103: iconst_3
     104: faload
     105: fmul
     106: fadd
     107: fstore        12
     109: fload         8
     111: aload_1
     112: iconst_3
     113: faload
     114: fmul
     115: fload         9
     117: aload_1
     118: iconst_2
     119: faload
     120: fmul
     121: fsub
     122: fstore        13
     124: fload         8
     126: aload_1
     127: iconst_4
     128: faload
     129: fmul
     130: fload         9
     132: aload_1
     133: iconst_5
     134: faload
     135: fmul
     136: fadd
     137: fstore        14
     139: fload         8
     141: aload_1
     142: iconst_5
     143: faload
     144: fmul
     145: fload         9
     147: aload_1
     148: iconst_4
     149: faload
     150: fmul
     151: fsub
     152: fstore        15
     154: iload_3
     155: lookupswitch  { // 2
                     6: 237
                     8: 180
               default: 256
          }
     180: fload         8
     182: aload_1
     183: bipush        6
     185: faload
     186: fmul
     187: fload         9
     189: aload_1
     190: bipush        7
     192: faload
     193: fmul
     194: fadd
     195: fstore        16
     197: fload         8
     199: aload_1
     200: bipush        7
     202: faload
     203: fmul
     204: fload         9
     206: aload_1
     207: bipush        6
     209: faload
     210: fmul
     211: fsub
     212: fstore        17
     214: aload_0
     215: fload         10
     217: fload         11
     219: fload         12
     221: fload         13
     223: fload         14
     225: fload         15
     227: fload         16
     229: fload         17
     231: invokevirtual #32                 // Method com/sun/marlin/Curve.set:(FFFFFFFF)V
     234: goto          256
     237: aload_0
     238: fload         10
     240: fload         11
     242: fload         12
     244: fload         13
     246: fload         14
     248: fload         15
     250: invokevirtual #33                 // Method com/sun/marlin/Curve.set:(FFFFFF)V
     253: goto          256
     256: goto          265
     259: aload_0
     260: aload_1
     261: iload_3
     262: invokevirtual #34                 // Method com/sun/marlin/Curve.set:([FI)V
     265: iconst_0
     266: istore        7
     268: iload         7
     270: aload_0
     271: aload_2
     272: iload         7
     274: invokevirtual #35                 // Method com/sun/marlin/Curve.dxRoots:([FI)I
     277: iadd
     278: istore        7
     280: iload         7
     282: aload_0
     283: aload_2
     284: iload         7
     286: invokevirtual #36                 // Method com/sun/marlin/Curve.dyRoots:([FI)I
     289: iadd
     290: istore        7
     292: iload_3
     293: bipush        8
     295: if_icmpne     310
     298: iload         7
     300: aload_0
     301: aload_2
     302: iload         7
     304: invokevirtual #37                 // Method com/sun/marlin/Curve.infPoints:([FI)I
     307: iadd
     308: istore        7
     310: iload         7
     312: aload_0
     313: aload_2
     314: iload         7
     316: fload         4
     318: ldc           #38                 // float 1.0E-4f
     320: invokevirtual #39                 // Method com/sun/marlin/Curve.rootsOfROCMinusW:([FIFF)I
     323: iadd
     324: istore        7
     326: aload_2
     327: iconst_0
     328: iload         7
     330: ldc           #38                 // float 1.0E-4f
     332: ldc           #40                 // float 0.9999f
     334: invokestatic  #8                  // Method filterOutNotInAB:([FIIFF)I
     337: istore        7
     339: aload_2
     340: iload         7
     342: invokestatic  #41                 // Method isort:([FI)V
     345: iload         7
     347: ireturn

  static int findClipPoints(com.sun.marlin.Curve, float[], float[], int, int, float[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: invokevirtual #34                 // Method com/sun/marlin/Curve.set:([FI)V
       6: iconst_0
       7: istore        6
       9: iload         4
      11: iconst_4
      12: iand
      13: ifeq          32
      16: iload         6
      18: aload_0
      19: aload_2
      20: iload         6
      22: aload         5
      24: iconst_2
      25: faload
      26: invokevirtual #43                 // Method com/sun/marlin/Curve.xPoints:([FIF)I
      29: iadd
      30: istore        6
      32: iload         4
      34: bipush        8
      36: iand
      37: ifeq          56
      40: iload         6
      42: aload_0
      43: aload_2
      44: iload         6
      46: aload         5
      48: iconst_3
      49: faload
      50: invokevirtual #43                 // Method com/sun/marlin/Curve.xPoints:([FIF)I
      53: iadd
      54: istore        6
      56: iload         4
      58: iconst_1
      59: iand
      60: ifeq          79
      63: iload         6
      65: aload_0
      66: aload_2
      67: iload         6
      69: aload         5
      71: iconst_0
      72: faload
      73: invokevirtual #44                 // Method com/sun/marlin/Curve.yPoints:([FIF)I
      76: iadd
      77: istore        6
      79: iload         4
      81: iconst_2
      82: iand
      83: ifeq          102
      86: iload         6
      88: aload_0
      89: aload_2
      90: iload         6
      92: aload         5
      94: iconst_1
      95: faload
      96: invokevirtual #44                 // Method com/sun/marlin/Curve.yPoints:([FIF)I
      99: iadd
     100: istore        6
     102: aload_2
     103: iload         6
     105: invokestatic  #41                 // Method isort:([FI)V
     108: iload         6
     110: ireturn

  static void subdivide(float[], float[], float[], int);
    Code:
       0: iload_3
       1: lookupswitch  { // 2
                     6: 35
                     8: 28
               default: 42
          }
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokestatic  #45                 // Method subdivideCubic:([F[F[F)V
      34: return
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokestatic  #46                 // Method subdivideQuad:([F[F[F)V
      41: return
      42: new           #47                 // class java/lang/InternalError
      45: dup
      46: ldc           #48                 // String Unsupported curve type
      48: invokespecial #49                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      51: athrow

  static void isort(float[], int);
    Code:
       0: iconst_1
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     56
       7: aload_0
       8: iload_2
       9: faload
      10: fstore        4
      12: iload_2
      13: iconst_1
      14: isub
      15: istore_3
      16: iload_3
      17: iflt          43
      20: aload_0
      21: iload_3
      22: faload
      23: fload         4
      25: fcmpl
      26: ifle          43
      29: aload_0
      30: iload_3
      31: iconst_1
      32: iadd
      33: aload_0
      34: iload_3
      35: faload
      36: fastore
      37: iinc          3, -1
      40: goto          16
      43: aload_0
      44: iload_3
      45: iconst_1
      46: iadd
      47: fload         4
      49: fastore
      50: iinc          2, 1
      53: goto          2
      56: return

  static void subdivideCubic(float[], float[], float[]);
    Code:
       0: aload_0
       1: iconst_0
       2: faload
       3: fstore_3
       4: aload_0
       5: iconst_1
       6: faload
       7: fstore        4
       9: aload_0
      10: iconst_2
      11: faload
      12: fstore        5
      14: aload_0
      15: iconst_3
      16: faload
      17: fstore        6
      19: aload_0
      20: iconst_4
      21: faload
      22: fstore        7
      24: aload_0
      25: iconst_5
      26: faload
      27: fstore        8
      29: aload_0
      30: bipush        6
      32: faload
      33: fstore        9
      35: aload_0
      36: bipush        7
      38: faload
      39: fstore        10
      41: aload_1
      42: iconst_0
      43: fload_3
      44: fastore
      45: aload_1
      46: iconst_1
      47: fload         4
      49: fastore
      50: aload_2
      51: bipush        6
      53: fload         9
      55: fastore
      56: aload_2
      57: bipush        7
      59: fload         10
      61: fastore
      62: fload_3
      63: fload         5
      65: fadd
      66: fconst_2
      67: fdiv
      68: fstore_3
      69: fload         4
      71: fload         6
      73: fadd
      74: fconst_2
      75: fdiv
      76: fstore        4
      78: fload         9
      80: fload         7
      82: fadd
      83: fconst_2
      84: fdiv
      85: fstore        9
      87: fload         10
      89: fload         8
      91: fadd
      92: fconst_2
      93: fdiv
      94: fstore        10
      96: fload         5
      98: fload         7
     100: fadd
     101: fconst_2
     102: fdiv
     103: fstore        11
     105: fload         6
     107: fload         8
     109: fadd
     110: fconst_2
     111: fdiv
     112: fstore        12
     114: fload_3
     115: fload         11
     117: fadd
     118: fconst_2
     119: fdiv
     120: fstore        5
     122: fload         4
     124: fload         12
     126: fadd
     127: fconst_2
     128: fdiv
     129: fstore        6
     131: fload         9
     133: fload         11
     135: fadd
     136: fconst_2
     137: fdiv
     138: fstore        7
     140: fload         10
     142: fload         12
     144: fadd
     145: fconst_2
     146: fdiv
     147: fstore        8
     149: fload         5
     151: fload         7
     153: fadd
     154: fconst_2
     155: fdiv
     156: fstore        11
     158: fload         6
     160: fload         8
     162: fadd
     163: fconst_2
     164: fdiv
     165: fstore        12
     167: aload_1
     168: iconst_2
     169: fload_3
     170: fastore
     171: aload_1
     172: iconst_3
     173: fload         4
     175: fastore
     176: aload_1
     177: iconst_4
     178: fload         5
     180: fastore
     181: aload_1
     182: iconst_5
     183: fload         6
     185: fastore
     186: aload_1
     187: bipush        6
     189: fload         11
     191: fastore
     192: aload_1
     193: bipush        7
     195: fload         12
     197: fastore
     198: aload_2
     199: iconst_0
     200: fload         11
     202: fastore
     203: aload_2
     204: iconst_1
     205: fload         12
     207: fastore
     208: aload_2
     209: iconst_2
     210: fload         7
     212: fastore
     213: aload_2
     214: iconst_3
     215: fload         8
     217: fastore
     218: aload_2
     219: iconst_4
     220: fload         9
     222: fastore
     223: aload_2
     224: iconst_5
     225: fload         10
     227: fastore
     228: return

  static void subdivideCubicAt(float, float[], int, float[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: faload
       3: fstore        6
       5: aload_1
       6: iload_2
       7: iconst_1
       8: iadd
       9: faload
      10: fstore        7
      12: aload_1
      13: iload_2
      14: iconst_2
      15: iadd
      16: faload
      17: fstore        8
      19: aload_1
      20: iload_2
      21: iconst_3
      22: iadd
      23: faload
      24: fstore        9
      26: aload_1
      27: iload_2
      28: iconst_4
      29: iadd
      30: faload
      31: fstore        10
      33: aload_1
      34: iload_2
      35: iconst_5
      36: iadd
      37: faload
      38: fstore        11
      40: aload_1
      41: iload_2
      42: bipush        6
      44: iadd
      45: faload
      46: fstore        12
      48: aload_1
      49: iload_2
      50: bipush        7
      52: iadd
      53: faload
      54: fstore        13
      56: aload_3
      57: iload         4
      59: fload         6
      61: fastore
      62: aload_3
      63: iload         4
      65: iconst_1
      66: iadd
      67: fload         7
      69: fastore
      70: aload_3
      71: iload         5
      73: bipush        6
      75: iadd
      76: fload         12
      78: fastore
      79: aload_3
      80: iload         5
      82: bipush        7
      84: iadd
      85: fload         13
      87: fastore
      88: fload         6
      90: fload_0
      91: fload         8
      93: fload         6
      95: fsub
      96: fmul
      97: fadd
      98: fstore        6
     100: fload         7
     102: fload_0
     103: fload         9
     105: fload         7
     107: fsub
     108: fmul
     109: fadd
     110: fstore        7
     112: fload         10
     114: fload_0
     115: fload         12
     117: fload         10
     119: fsub
     120: fmul
     121: fadd
     122: fstore        12
     124: fload         11
     126: fload_0
     127: fload         13
     129: fload         11
     131: fsub
     132: fmul
     133: fadd
     134: fstore        13
     136: fload         8
     138: fload_0
     139: fload         10
     141: fload         8
     143: fsub
     144: fmul
     145: fadd
     146: fstore        14
     148: fload         9
     150: fload_0
     151: fload         11
     153: fload         9
     155: fsub
     156: fmul
     157: fadd
     158: fstore        15
     160: fload         6
     162: fload_0
     163: fload         14
     165: fload         6
     167: fsub
     168: fmul
     169: fadd
     170: fstore        8
     172: fload         7
     174: fload_0
     175: fload         15
     177: fload         7
     179: fsub
     180: fmul
     181: fadd
     182: fstore        9
     184: fload         14
     186: fload_0
     187: fload         12
     189: fload         14
     191: fsub
     192: fmul
     193: fadd
     194: fstore        10
     196: fload         15
     198: fload_0
     199: fload         13
     201: fload         15
     203: fsub
     204: fmul
     205: fadd
     206: fstore        11
     208: fload         8
     210: fload_0
     211: fload         10
     213: fload         8
     215: fsub
     216: fmul
     217: fadd
     218: fstore        14
     220: fload         9
     222: fload_0
     223: fload         11
     225: fload         9
     227: fsub
     228: fmul
     229: fadd
     230: fstore        15
     232: aload_3
     233: iload         4
     235: iconst_2
     236: iadd
     237: fload         6
     239: fastore
     240: aload_3
     241: iload         4
     243: iconst_3
     244: iadd
     245: fload         7
     247: fastore
     248: aload_3
     249: iload         4
     251: iconst_4
     252: iadd
     253: fload         8
     255: fastore
     256: aload_3
     257: iload         4
     259: iconst_5
     260: iadd
     261: fload         9
     263: fastore
     264: aload_3
     265: iload         4
     267: bipush        6
     269: iadd
     270: fload         14
     272: fastore
     273: aload_3
     274: iload         4
     276: bipush        7
     278: iadd
     279: fload         15
     281: fastore
     282: aload_3
     283: iload         5
     285: fload         14
     287: fastore
     288: aload_3
     289: iload         5
     291: iconst_1
     292: iadd
     293: fload         15
     295: fastore
     296: aload_3
     297: iload         5
     299: iconst_2
     300: iadd
     301: fload         10
     303: fastore
     304: aload_3
     305: iload         5
     307: iconst_3
     308: iadd
     309: fload         11
     311: fastore
     312: aload_3
     313: iload         5
     315: iconst_4
     316: iadd
     317: fload         12
     319: fastore
     320: aload_3
     321: iload         5
     323: iconst_5
     324: iadd
     325: fload         13
     327: fastore
     328: return

  static void subdivideQuad(float[], float[], float[]);
    Code:
       0: aload_0
       1: iconst_0
       2: faload
       3: fstore_3
       4: aload_0
       5: iconst_1
       6: faload
       7: fstore        4
       9: aload_0
      10: iconst_2
      11: faload
      12: fstore        5
      14: aload_0
      15: iconst_3
      16: faload
      17: fstore        6
      19: aload_0
      20: iconst_4
      21: faload
      22: fstore        7
      24: aload_0
      25: iconst_5
      26: faload
      27: fstore        8
      29: aload_1
      30: iconst_0
      31: fload_3
      32: fastore
      33: aload_1
      34: iconst_1
      35: fload         4
      37: fastore
      38: aload_2
      39: iconst_4
      40: fload         7
      42: fastore
      43: aload_2
      44: iconst_5
      45: fload         8
      47: fastore
      48: fload_3
      49: fload         5
      51: fadd
      52: fconst_2
      53: fdiv
      54: fstore_3
      55: fload         4
      57: fload         6
      59: fadd
      60: fconst_2
      61: fdiv
      62: fstore        4
      64: fload         7
      66: fload         5
      68: fadd
      69: fconst_2
      70: fdiv
      71: fstore        7
      73: fload         8
      75: fload         6
      77: fadd
      78: fconst_2
      79: fdiv
      80: fstore        8
      82: fload_3
      83: fload         7
      85: fadd
      86: fconst_2
      87: fdiv
      88: fstore        5
      90: fload         4
      92: fload         8
      94: fadd
      95: fconst_2
      96: fdiv
      97: fstore        6
      99: aload_1
     100: iconst_2
     101: fload_3
     102: fastore
     103: aload_1
     104: iconst_3
     105: fload         4
     107: fastore
     108: aload_1
     109: iconst_4
     110: fload         5
     112: fastore
     113: aload_1
     114: iconst_5
     115: fload         6
     117: fastore
     118: aload_2
     119: iconst_0
     120: fload         5
     122: fastore
     123: aload_2
     124: iconst_1
     125: fload         6
     127: fastore
     128: aload_2
     129: iconst_2
     130: fload         7
     132: fastore
     133: aload_2
     134: iconst_3
     135: fload         8
     137: fastore
     138: return

  static void subdivideQuadAt(float, float[], int, float[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: faload
       3: fstore        6
       5: aload_1
       6: iload_2
       7: iconst_1
       8: iadd
       9: faload
      10: fstore        7
      12: aload_1
      13: iload_2
      14: iconst_2
      15: iadd
      16: faload
      17: fstore        8
      19: aload_1
      20: iload_2
      21: iconst_3
      22: iadd
      23: faload
      24: fstore        9
      26: aload_1
      27: iload_2
      28: iconst_4
      29: iadd
      30: faload
      31: fstore        10
      33: aload_1
      34: iload_2
      35: iconst_5
      36: iadd
      37: faload
      38: fstore        11
      40: aload_3
      41: iload         4
      43: fload         6
      45: fastore
      46: aload_3
      47: iload         4
      49: iconst_1
      50: iadd
      51: fload         7
      53: fastore
      54: aload_3
      55: iload         5
      57: iconst_4
      58: iadd
      59: fload         10
      61: fastore
      62: aload_3
      63: iload         5
      65: iconst_5
      66: iadd
      67: fload         11
      69: fastore
      70: fload         6
      72: fload_0
      73: fload         8
      75: fload         6
      77: fsub
      78: fmul
      79: fadd
      80: fstore        6
      82: fload         7
      84: fload_0
      85: fload         9
      87: fload         7
      89: fsub
      90: fmul
      91: fadd
      92: fstore        7
      94: fload         8
      96: fload_0
      97: fload         10
      99: fload         8
     101: fsub
     102: fmul
     103: fadd
     104: fstore        10
     106: fload         9
     108: fload_0
     109: fload         11
     111: fload         9
     113: fsub
     114: fmul
     115: fadd
     116: fstore        11
     118: fload         6
     120: fload_0
     121: fload         10
     123: fload         6
     125: fsub
     126: fmul
     127: fadd
     128: fstore        8
     130: fload         7
     132: fload_0
     133: fload         11
     135: fload         7
     137: fsub
     138: fmul
     139: fadd
     140: fstore        9
     142: aload_3
     143: iload         4
     145: iconst_2
     146: iadd
     147: fload         6
     149: fastore
     150: aload_3
     151: iload         4
     153: iconst_3
     154: iadd
     155: fload         7
     157: fastore
     158: aload_3
     159: iload         4
     161: iconst_4
     162: iadd
     163: fload         8
     165: fastore
     166: aload_3
     167: iload         4
     169: iconst_5
     170: iadd
     171: fload         9
     173: fastore
     174: aload_3
     175: iload         5
     177: fload         8
     179: fastore
     180: aload_3
     181: iload         5
     183: iconst_1
     184: iadd
     185: fload         9
     187: fastore
     188: aload_3
     189: iload         5
     191: iconst_2
     192: iadd
     193: fload         10
     195: fastore
     196: aload_3
     197: iload         5
     199: iconst_3
     200: iadd
     201: fload         11
     203: fastore
     204: return

  static void subdivideLineAt(float, float[], int, float[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: faload
       3: fstore        6
       5: aload_1
       6: iload_2
       7: iconst_1
       8: iadd
       9: faload
      10: fstore        7
      12: aload_1
      13: iload_2
      14: iconst_2
      15: iadd
      16: faload
      17: fstore        8
      19: aload_1
      20: iload_2
      21: iconst_3
      22: iadd
      23: faload
      24: fstore        9
      26: aload_3
      27: iload         4
      29: fload         6
      31: fastore
      32: aload_3
      33: iload         4
      35: iconst_1
      36: iadd
      37: fload         7
      39: fastore
      40: aload_3
      41: iload         5
      43: iconst_2
      44: iadd
      45: fload         8
      47: fastore
      48: aload_3
      49: iload         5
      51: iconst_3
      52: iadd
      53: fload         9
      55: fastore
      56: fload         6
      58: fload_0
      59: fload         8
      61: fload         6
      63: fsub
      64: fmul
      65: fadd
      66: fstore        6
      68: fload         7
      70: fload_0
      71: fload         9
      73: fload         7
      75: fsub
      76: fmul
      77: fadd
      78: fstore        7
      80: aload_3
      81: iload         4
      83: iconst_2
      84: iadd
      85: fload         6
      87: fastore
      88: aload_3
      89: iload         4
      91: iconst_3
      92: iadd
      93: fload         7
      95: fastore
      96: aload_3
      97: iload         5
      99: fload         6
     101: fastore
     102: aload_3
     103: iload         5
     105: iconst_1
     106: iadd
     107: fload         7
     109: fastore
     110: return

  static void subdivideAt(float, float[], int, float[], int, int);
    Code:
       0: iload         5
       2: bipush        8
       4: if_icmpne     24
       7: fload_0
       8: aload_1
       9: iload_2
      10: aload_3
      11: iload         4
      13: iload         4
      15: iload         5
      17: iadd
      18: invokestatic  #50                 // Method subdivideCubicAt:(F[FI[FII)V
      21: goto          61
      24: iload         5
      26: iconst_4
      27: if_icmpne     47
      30: fload_0
      31: aload_1
      32: iload_2
      33: aload_3
      34: iload         4
      36: iload         4
      38: iload         5
      40: iadd
      41: invokestatic  #51                 // Method subdivideLineAt:(F[FI[FII)V
      44: goto          61
      47: fload_0
      48: aload_1
      49: iload_2
      50: aload_3
      51: iload         4
      53: iload         4
      55: iload         5
      57: iadd
      58: invokestatic  #52                 // Method subdivideQuadAt:(F[FI[FII)V
      61: return

  static int outcode(float, float, float[]);
    Code:
       0: fload_1
       1: aload_2
       2: iconst_0
       3: faload
       4: fcmpg
       5: ifge          13
       8: iconst_1
       9: istore_3
      10: goto          28
      13: fload_1
      14: aload_2
      15: iconst_1
      16: faload
      17: fcmpl
      18: iflt          26
      21: iconst_2
      22: istore_3
      23: goto          28
      26: iconst_0
      27: istore_3
      28: fload_0
      29: aload_2
      30: iconst_2
      31: faload
      32: fcmpg
      33: ifge          43
      36: iload_3
      37: iconst_4
      38: ior
      39: istore_3
      40: goto          56
      43: fload_0
      44: aload_2
      45: iconst_3
      46: faload
      47: fcmpl
      48: iflt          56
      51: iload_3
      52: bipush        8
      54: ior
      55: istore_3
      56: iload_3
      57: ireturn
}
