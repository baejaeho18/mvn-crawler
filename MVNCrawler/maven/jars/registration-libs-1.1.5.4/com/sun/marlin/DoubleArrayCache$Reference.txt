Compiled from "DoubleArrayCache.java"
final class com.sun.marlin.DoubleArrayCache$Reference {
  final double[] initial;

  private final boolean clean;

  private final com.sun.marlin.DoubleArrayCache cache;

  com.sun.marlin.DoubleArrayCache$Reference(com.sun.marlin.DoubleArrayCache, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field cache:Lcom/sun/marlin/DoubleArrayCache;
       9: aload_0
      10: aload_1
      11: getfield      #4                  // Field com/sun/marlin/DoubleArrayCache.clean:Z
      14: putfield      #5                  // Field clean:Z
      17: aload_0
      18: iload_2
      19: invokestatic  #6                  // Method com/sun/marlin/DoubleArrayCache.createArray:(I)[D
      22: putfield      #7                  // Field initial:[D
      25: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
      28: ifeq          45
      31: aload_1
      32: getfield      #9                  // Field com/sun/marlin/DoubleArrayCache.stats:Lcom/sun/marlin/ArrayCacheConst$CacheStats;
      35: dup
      36: getfield      #10                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.totalInitial:J
      39: iload_2
      40: i2l
      41: ladd
      42: putfield      #10                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.totalInitial:J
      45: return

  double[] getArray(int);
    Code:
       0: iload_1
       1: getstatic     #11                 // Field com/sun/marlin/ArrayCacheConst.MAX_ARRAY_SIZE:I
       4: if_icmpgt     19
       7: aload_0
       8: getfield      #3                  // Field cache:Lcom/sun/marlin/DoubleArrayCache;
      11: iload_1
      12: invokevirtual #12                 // Method com/sun/marlin/DoubleArrayCache.getCacheBucket:(I)Lcom/sun/marlin/DoubleArrayCache$Bucket;
      15: invokevirtual #13                 // Method com/sun/marlin/DoubleArrayCache$Bucket.getArray:()[D
      18: areturn
      19: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
      22: ifeq          41
      25: aload_0
      26: getfield      #3                  // Field cache:Lcom/sun/marlin/DoubleArrayCache;
      29: getfield      #9                  // Field com/sun/marlin/DoubleArrayCache.stats:Lcom/sun/marlin/ArrayCacheConst$CacheStats;
      32: dup
      33: getfield      #14                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.oversize:I
      36: iconst_1
      37: iadd
      38: putfield      #14                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.oversize:I
      41: getstatic     #15                 // Field com/sun/marlin/MarlinConst.DO_LOG_OVERSIZE:Z
      44: ifeq          63
      47: aload_0
      48: getfield      #5                  // Field clean:Z
      51: invokestatic  #16                 // Method com/sun/marlin/DoubleArrayCache.getLogPrefix:(Z)Ljava/lang/String;
      54: iload_1
      55: invokedynamic #17,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
      60: invokestatic  #18                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      63: iload_1
      64: invokestatic  #6                  // Method com/sun/marlin/DoubleArrayCache.createArray:(I)[D
      67: areturn

  double[] widenArray(double[], int, int);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: getstatic     #19                 // Field com/sun/marlin/MarlinConst.DO_CHECKS:Z
       7: ifeq          18
      10: iload         4
      12: iload_3
      13: if_icmplt     18
      16: aload_1
      17: areturn
      18: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
      21: ifeq          40
      24: aload_0
      25: getfield      #3                  // Field cache:Lcom/sun/marlin/DoubleArrayCache;
      28: getfield      #9                  // Field com/sun/marlin/DoubleArrayCache.stats:Lcom/sun/marlin/ArrayCacheConst$CacheStats;
      31: dup
      32: getfield      #20                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.resize:I
      35: iconst_1
      36: iadd
      37: putfield      #20                 // Field com/sun/marlin/ArrayCacheConst$CacheStats.resize:I
      40: aload_0
      41: iload_2
      42: iload_3
      43: invokestatic  #21                 // Method com/sun/marlin/ArrayCacheConst.getNewSize:(II)I
      46: invokevirtual #22                 // Method getArray:(I)[D
      49: astore        5
      51: aload_1
      52: iconst_0
      53: aload         5
      55: iconst_0
      56: iload_2
      57: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: aload_0
      61: aload_1
      62: iconst_0
      63: iload_2
      64: invokevirtual #24                 // Method putArray:([DII)[D
      67: pop
      68: getstatic     #25                 // Field com/sun/marlin/MarlinConst.DO_LOG_WIDEN_ARRAY:Z
      71: ifeq          96
      74: aload_0
      75: getfield      #5                  // Field clean:Z
      78: invokestatic  #16                 // Method com/sun/marlin/DoubleArrayCache.getLogPrefix:(Z)Ljava/lang/String;
      81: aload         5
      83: arraylength
      84: iload_2
      85: iload         4
      87: iload_3
      88: invokedynamic #26,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;IIII)Ljava/lang/String;
      93: invokestatic  #18                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      96: aload         5
      98: areturn

  double[] putArray(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #24                 // Method putArray:([DII)[D
       8: areturn

  double[] putArray(double[], int, int);
    Code:
       0: aload_1
       1: arraylength
       2: getstatic     #11                 // Field com/sun/marlin/ArrayCacheConst.MAX_ARRAY_SIZE:I
       5: if_icmpgt     50
       8: aload_0
       9: getfield      #5                  // Field clean:Z
      12: ifne          18
      15: goto          29
      18: iload_3
      19: ifeq          29
      22: aload_1
      23: iload_2
      24: iload_3
      25: dconst_0
      26: invokestatic  #27                 // Method com/sun/marlin/DoubleArrayCache.fill:([DIID)V
      29: aload_1
      30: aload_0
      31: getfield      #7                  // Field initial:[D
      34: if_acmpeq     50
      37: aload_0
      38: getfield      #3                  // Field cache:Lcom/sun/marlin/DoubleArrayCache;
      41: aload_1
      42: arraylength
      43: invokevirtual #12                 // Method com/sun/marlin/DoubleArrayCache.getCacheBucket:(I)Lcom/sun/marlin/DoubleArrayCache$Bucket;
      46: aload_1
      47: invokevirtual #28                 // Method com/sun/marlin/DoubleArrayCache$Bucket.putArray:([D)V
      50: aload_0
      51: getfield      #7                  // Field initial:[D
      54: areturn
}
