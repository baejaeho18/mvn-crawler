Compiled from "Dasher.java"
public final class com.sun.marlin.Dasher implements com.sun.javafx.geom.PathConsumer2D,com.sun.marlin.MarlinConst {
  static final int REC_LIMIT;

  static final float CURVE_LEN_ERR;

  static final float MIN_T_INC;

  static final float MAX_CYCLES;

  private com.sun.javafx.geom.PathConsumer2D out;

  private float[] dash;

  private int dashLen;

  private float startPhase;

  private boolean startDashOn;

  private int startIdx;

  private boolean starting;

  private boolean needsMoveTo;

  private int idx;

  private boolean dashOn;

  private float phase;

  private float sx0;

  private float sy0;

  private float cx0;

  private float cy0;

  private final float[] curCurvepts;

  final com.sun.marlin.RendererContext rdrCtx;

  boolean recycleDashes;

  private float[] firstSegmentsBuffer;

  private int firstSegidx;

  final com.sun.marlin.FloatArrayCache$Reference dashes_ref;

  final com.sun.marlin.FloatArrayCache$Reference firstSegmentsBuffer_ref;

  private float[] clipRect;

  private int cOutCode;

  private boolean subdivide;

  private final com.sun.marlin.Dasher$LengthIterator li;

  private final com.sun.marlin.TransformingPathConsumer2D$CurveClipSplitter curveSplitter;

  private float cycleLen;

  private boolean outside;

  private float totalSkipLen;

  com.sun.marlin.Dasher(com.sun.marlin.RendererContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field cOutCode:I
       9: aload_0
      10: getstatic     #5                  // Field DO_CLIP_SUBDIVIDER:Z
      13: putfield      #6                  // Field subdivide:Z
      16: aload_0
      17: new           #7                  // class com/sun/marlin/Dasher$LengthIterator
      20: dup
      21: invokespecial #8                  // Method com/sun/marlin/Dasher$LengthIterator."<init>":()V
      24: putfield      #9                  // Field li:Lcom/sun/marlin/Dasher$LengthIterator;
      27: aload_0
      28: aload_1
      29: putfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      32: aload_0
      33: aload_1
      34: sipush        256
      37: invokevirtual #11                 // Method com/sun/marlin/RendererContext.newDirtyFloatArrayRef:(I)Lcom/sun/marlin/FloatArrayCache$Reference;
      40: putfield      #12                 // Field dashes_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      43: aload_0
      44: aload_1
      45: sipush        256
      48: invokevirtual #11                 // Method com/sun/marlin/RendererContext.newDirtyFloatArrayRef:(I)Lcom/sun/marlin/FloatArrayCache$Reference;
      51: putfield      #13                 // Field firstSegmentsBuffer_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      54: aload_0
      55: aload_0
      56: getfield      #13                 // Field firstSegmentsBuffer_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      59: getfield      #14                 // Field com/sun/marlin/FloatArrayCache$Reference.initial:[F
      62: putfield      #15                 // Field firstSegmentsBuffer:[F
      65: aload_0
      66: bipush        16
      68: newarray       float
      70: putfield      #16                 // Field curCurvepts:[F
      73: aload_0
      74: aload_1
      75: getfield      #17                 // Field com/sun/marlin/RendererContext.curveClipSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
      78: putfield      #18                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
      81: return

  public com.sun.marlin.Dasher init(com.sun.javafx.geom.PathConsumer2D, float[], int, float, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       5: iconst_0
       6: istore        6
       8: aload_0
       9: iconst_1
      10: putfield      #20                 // Field dashOn:Z
      13: fconst_0
      14: fstore        7
      16: iconst_0
      17: istore        8
      19: iload         8
      21: iload_3
      22: if_icmpge     40
      25: fload         7
      27: aload_2
      28: iload         8
      30: faload
      31: fadd
      32: fstore        7
      34: iinc          8, 1
      37: goto          19
      40: aload_0
      41: fload         7
      43: putfield      #21                 // Field cycleLen:F
      46: fload         4
      48: fload         7
      50: fdiv
      51: fstore        8
      53: fload         4
      55: fconst_0
      56: fcmpg
      57: ifge          170
      60: fload         8
      62: fneg
      63: ldc           #22                 // float 1.6E7f
      65: fcmpl
      66: iflt          75
      69: fconst_0
      70: fstore        4
      72: goto          281
      75: fload         8
      77: fneg
      78: invokestatic  #23                 // Method com/sun/marlin/FloatMath.floor_int:(F)I
      81: istore        9
      83: iload         9
      85: iload_3
      86: iand
      87: iconst_1
      88: iand
      89: ifeq          108
      92: aload_0
      93: aload_0
      94: getfield      #20                 // Field dashOn:Z
      97: ifne          104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: putfield      #20                 // Field dashOn:Z
     108: fload         4
     110: iload         9
     112: i2f
     113: fload         7
     115: fmul
     116: fadd
     117: fstore        4
     119: fload         4
     121: fconst_0
     122: fcmpg
     123: ifge          167
     126: iinc          6, -1
     129: iload         6
     131: ifge          139
     134: iload_3
     135: iconst_1
     136: isub
     137: istore        6
     139: fload         4
     141: aload_2
     142: iload         6
     144: faload
     145: fadd
     146: fstore        4
     148: aload_0
     149: aload_0
     150: getfield      #20                 // Field dashOn:Z
     153: ifne          160
     156: iconst_1
     157: goto          161
     160: iconst_0
     161: putfield      #20                 // Field dashOn:Z
     164: goto          119
     167: goto          281
     170: fload         4
     172: fconst_0
     173: fcmpl
     174: ifle          281
     177: fload         8
     179: ldc           #22                 // float 1.6E7f
     181: fcmpl
     182: iflt          191
     185: fconst_0
     186: fstore        4
     188: goto          281
     191: fload         8
     193: invokestatic  #23                 // Method com/sun/marlin/FloatMath.floor_int:(F)I
     196: istore        9
     198: iload         9
     200: iload_3
     201: iand
     202: iconst_1
     203: iand
     204: ifeq          223
     207: aload_0
     208: aload_0
     209: getfield      #20                 // Field dashOn:Z
     212: ifne          219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: putfield      #20                 // Field dashOn:Z
     223: fload         4
     225: iload         9
     227: i2f
     228: fload         7
     230: fmul
     231: fsub
     232: fstore        4
     234: fload         4
     236: aload_2
     237: iload         6
     239: faload
     240: dup
     241: fstore        10
     243: fcmpl
     244: iflt          281
     247: fload         4
     249: fload         10
     251: fsub
     252: fstore        4
     254: iload         6
     256: iconst_1
     257: iadd
     258: iload_3
     259: irem
     260: istore        6
     262: aload_0
     263: aload_0
     264: getfield      #20                 // Field dashOn:Z
     267: ifne          274
     270: iconst_1
     271: goto          275
     274: iconst_0
     275: putfield      #20                 // Field dashOn:Z
     278: goto          234
     281: aload_0
     282: aload_2
     283: putfield      #24                 // Field dash:[F
     286: aload_0
     287: iload_3
     288: putfield      #25                 // Field dashLen:I
     291: aload_0
     292: fload         4
     294: putfield      #26                 // Field phase:F
     297: aload_0
     298: fload         4
     300: putfield      #27                 // Field startPhase:F
     303: aload_0
     304: aload_0
     305: getfield      #20                 // Field dashOn:Z
     308: putfield      #28                 // Field startDashOn:Z
     311: aload_0
     312: iload         6
     314: putfield      #29                 // Field startIdx:I
     317: aload_0
     318: iconst_1
     319: putfield      #30                 // Field starting:Z
     322: aload_0
     323: iconst_0
     324: putfield      #31                 // Field needsMoveTo:Z
     327: aload_0
     328: iconst_0
     329: putfield      #32                 // Field firstSegidx:I
     332: aload_0
     333: iload         5
     335: putfield      #33                 // Field recycleDashes:Z
     338: aload_0
     339: getfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
     342: getfield      #34                 // Field com/sun/marlin/RendererContext.doClip:Z
     345: ifeq          362
     348: aload_0
     349: aload_0
     350: getfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
     353: getfield      #35                 // Field com/sun/marlin/RendererContext.clipRect:[F
     356: putfield      #36                 // Field clipRect:[F
     359: goto          372
     362: aload_0
     363: aconst_null
     364: putfield      #36                 // Field clipRect:[F
     367: aload_0
     368: iconst_0
     369: putfield      #4                  // Field cOutCode:I
     372: aload_0
     373: areturn

  void dispose();
    Code:
       0: aload_0
       1: getfield      #33                 // Field recycleDashes:Z
       4: ifeq          22
       7: aload_0
       8: aload_0
       9: getfield      #12                 // Field dashes_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      12: aload_0
      13: getfield      #24                 // Field dash:[F
      16: invokevirtual #37                 // Method com/sun/marlin/FloatArrayCache$Reference.putArray:([F)[F
      19: putfield      #24                 // Field dash:[F
      22: aload_0
      23: aload_0
      24: getfield      #13                 // Field firstSegmentsBuffer_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      27: aload_0
      28: getfield      #15                 // Field firstSegmentsBuffer:[F
      31: invokevirtual #37                 // Method com/sun/marlin/FloatArrayCache$Reference.putArray:([F)[F
      34: putfield      #15                 // Field firstSegmentsBuffer:[F
      37: return

  public float[] copyDashArray(float[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: iload_2
       4: sipush        256
       7: if_icmpgt     21
      10: aload_0
      11: getfield      #12                 // Field dashes_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      14: getfield      #14                 // Field com/sun/marlin/FloatArrayCache$Reference.initial:[F
      17: astore_3
      18: goto          50
      21: getstatic     #38                 // Field DO_STATS:Z
      24: ifeq          41
      27: aload_0
      28: getfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      31: getfield      #39                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
      34: getfield      #40                 // Field com/sun/marlin/RendererStats.stat_array_dasher_dasher:Lcom/sun/marlin/stats/StatLong;
      37: iload_2
      38: invokevirtual #41                 // Method com/sun/marlin/stats/StatLong.add:(I)V
      41: aload_0
      42: getfield      #12                 // Field dashes_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      45: iload_2
      46: invokevirtual #42                 // Method com/sun/marlin/FloatArrayCache$Reference.getArray:(I)[F
      49: astore_3
      50: aload_1
      51: iconst_0
      52: aload_3
      53: iconst_0
      54: iload_2
      55: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      58: aload_3
      59: areturn

  public void moveTo(float, float);
    Code:
       0: aload_0
       1: getfield      #32                 // Field firstSegidx:I
       4: ifeq          28
       7: aload_0
       8: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      11: aload_0
      12: getfield      #44                 // Field sx0:F
      15: aload_0
      16: getfield      #45                 // Field sy0:F
      19: invokeinterface #46,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.moveTo:(FF)V
      24: aload_0
      25: invokespecial #47                 // Method emitFirstSegments:()V
      28: aload_0
      29: iconst_1
      30: putfield      #31                 // Field needsMoveTo:Z
      33: aload_0
      34: aload_0
      35: getfield      #29                 // Field startIdx:I
      38: putfield      #48                 // Field idx:I
      41: aload_0
      42: aload_0
      43: getfield      #28                 // Field startDashOn:Z
      46: putfield      #20                 // Field dashOn:Z
      49: aload_0
      50: aload_0
      51: getfield      #27                 // Field startPhase:F
      54: putfield      #26                 // Field phase:F
      57: aload_0
      58: fload_1
      59: putfield      #49                 // Field cx0:F
      62: aload_0
      63: fload_2
      64: putfield      #50                 // Field cy0:F
      67: aload_0
      68: fload_1
      69: putfield      #44                 // Field sx0:F
      72: aload_0
      73: fload_2
      74: putfield      #45                 // Field sy0:F
      77: aload_0
      78: iconst_1
      79: putfield      #30                 // Field starting:Z
      82: aload_0
      83: getfield      #36                 // Field clipRect:[F
      86: ifnull        114
      89: fload_1
      90: fload_2
      91: aload_0
      92: getfield      #36                 // Field clipRect:[F
      95: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      98: istore_3
      99: aload_0
     100: iload_3
     101: putfield      #4                  // Field cOutCode:I
     104: aload_0
     105: iconst_0
     106: putfield      #52                 // Field outside:Z
     109: aload_0
     110: fconst_0
     111: putfield      #53                 // Field totalSkipLen:F
     114: return

  private void emitSeg(float[], int, int);
    Code:
       0: iload_3
       1: tableswitch   { // 4 to 8
                     4: 36
                     5: 120
                     6: 92
                     7: 120
                     8: 54
               default: 120
          }
      36: aload_0
      37: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      40: aload_1
      41: iload_2
      42: faload
      43: aload_1
      44: iload_2
      45: iconst_1
      46: iadd
      47: faload
      48: invokeinterface #54,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.lineTo:(FF)V
      53: return
      54: aload_0
      55: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      58: aload_1
      59: iload_2
      60: faload
      61: aload_1
      62: iload_2
      63: iconst_1
      64: iadd
      65: faload
      66: aload_1
      67: iload_2
      68: iconst_2
      69: iadd
      70: faload
      71: aload_1
      72: iload_2
      73: iconst_3
      74: iadd
      75: faload
      76: aload_1
      77: iload_2
      78: iconst_4
      79: iadd
      80: faload
      81: aload_1
      82: iload_2
      83: iconst_5
      84: iadd
      85: faload
      86: invokeinterface #55,  7           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.curveTo:(FFFFFF)V
      91: return
      92: aload_0
      93: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      96: aload_1
      97: iload_2
      98: faload
      99: aload_1
     100: iload_2
     101: iconst_1
     102: iadd
     103: faload
     104: aload_1
     105: iload_2
     106: iconst_2
     107: iadd
     108: faload
     109: aload_1
     110: iload_2
     111: iconst_3
     112: iadd
     113: faload
     114: invokeinterface #56,  5           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.quadTo:(FFFF)V
     119: return
     120: return

  private void emitFirstSegments();
    Code:
       0: aload_0
       1: getfield      #15                 // Field firstSegmentsBuffer:[F
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_0
       8: getfield      #32                 // Field firstSegidx:I
      11: istore_3
      12: iload_2
      13: iload_3
      14: if_icmpge     43
      17: aload_1
      18: iload_2
      19: faload
      20: f2i
      21: istore        4
      23: aload_0
      24: aload_1
      25: iload_2
      26: iconst_1
      27: iadd
      28: iload         4
      30: invokespecial #57                 // Method emitSeg:([FII)V
      33: iload_2
      34: iload         4
      36: iconst_1
      37: isub
      38: iadd
      39: istore_2
      40: goto          12
      43: aload_0
      44: iconst_0
      45: putfield      #32                 // Field firstSegidx:I
      48: return

  private void goTo(float[], int, int, boolean);
    Code:
       0: iload_2
       1: iload_3
       2: iadd
       3: istore        5
       5: aload_1
       6: iload         5
       8: iconst_4
       9: isub
      10: faload
      11: fstore        6
      13: aload_1
      14: iload         5
      16: iconst_3
      17: isub
      18: faload
      19: fstore        7
      21: iload         4
      23: ifeq          82
      26: aload_0
      27: getfield      #30                 // Field starting:Z
      30: ifeq          43
      33: aload_0
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokespecial #58                 // Method goTo_starting:([FII)V
      40: goto          99
      43: aload_0
      44: getfield      #31                 // Field needsMoveTo:Z
      47: ifeq          72
      50: aload_0
      51: iconst_0
      52: putfield      #31                 // Field needsMoveTo:Z
      55: aload_0
      56: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      59: aload_0
      60: getfield      #49                 // Field cx0:F
      63: aload_0
      64: getfield      #50                 // Field cy0:F
      67: invokeinterface #46,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.moveTo:(FF)V
      72: aload_0
      73: aload_1
      74: iload_2
      75: iload_3
      76: invokespecial #57                 // Method emitSeg:([FII)V
      79: goto          99
      82: aload_0
      83: getfield      #30                 // Field starting:Z
      86: ifeq          94
      89: aload_0
      90: iconst_0
      91: putfield      #30                 // Field starting:Z
      94: aload_0
      95: iconst_1
      96: putfield      #31                 // Field needsMoveTo:Z
      99: aload_0
     100: fload         6
     102: putfield      #49                 // Field cx0:F
     105: aload_0
     106: fload         7
     108: putfield      #50                 // Field cy0:F
     111: return

  private void goTo_starting(float[], int, int);
    Code:
       0: iload_3
       1: iconst_1
       2: isub
       3: istore        4
       5: aload_0
       6: getfield      #32                 // Field firstSegidx:I
       9: istore        5
      11: aload_0
      12: getfield      #15                 // Field firstSegmentsBuffer:[F
      15: astore        6
      17: iload         5
      19: iload         4
      21: iadd
      22: aload         6
      24: arraylength
      25: if_icmple     75
      28: getstatic     #38                 // Field DO_STATS:Z
      31: ifeq          52
      34: aload_0
      35: getfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      38: getfield      #39                 // Field com/sun/marlin/RendererContext.stats:Lcom/sun/marlin/RendererStats;
      41: getfield      #59                 // Field com/sun/marlin/RendererStats.stat_array_dasher_firstSegmentsBuffer:Lcom/sun/marlin/stats/StatLong;
      44: iload         5
      46: iload         4
      48: iadd
      49: invokevirtual #41                 // Method com/sun/marlin/stats/StatLong.add:(I)V
      52: aload_0
      53: aload_0
      54: getfield      #13                 // Field firstSegmentsBuffer_ref:Lcom/sun/marlin/FloatArrayCache$Reference;
      57: aload         6
      59: iload         5
      61: iload         5
      63: iload         4
      65: iadd
      66: invokevirtual #60                 // Method com/sun/marlin/FloatArrayCache$Reference.widenArray:([FII)[F
      69: dup
      70: astore        6
      72: putfield      #15                 // Field firstSegmentsBuffer:[F
      75: aload         6
      77: iload         5
      79: iinc          5, 1
      82: iload_3
      83: i2f
      84: fastore
      85: iinc          4, -1
      88: aload_1
      89: iload_2
      90: aload         6
      92: iload         5
      94: iload         4
      96: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: aload_0
     100: iload         5
     102: iload         4
     104: iadd
     105: putfield      #32                 // Field firstSegidx:I
     108: return

  public void lineTo(float, float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cOutCode:I
       4: istore_3
       5: aload_0
       6: getfield      #36                 // Field clipRect:[F
       9: ifnull        128
      12: fload_1
      13: fload_2
      14: aload_0
      15: getfield      #36                 // Field clipRect:[F
      18: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      21: istore        4
      23: iload_3
      24: iload         4
      26: ior
      27: istore        5
      29: iload         5
      31: ifeq          106
      34: iload_3
      35: iload         4
      37: iand
      38: istore        6
      40: iload         6
      42: ifne          93
      45: aload_0
      46: getfield      #6                  // Field subdivide:Z
      49: ifeq          106
      52: aload_0
      53: iconst_0
      54: putfield      #6                  // Field subdivide:Z
      57: aload_0
      58: getfield      #18                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
      61: aload_0
      62: getfield      #49                 // Field cx0:F
      65: aload_0
      66: getfield      #50                 // Field cy0:F
      69: fload_1
      70: fload_2
      71: iload         5
      73: aload_0
      74: invokevirtual #61                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.splitLine:(FFFFILcom/sun/javafx/geom/PathConsumer2D;)Z
      77: istore        7
      79: aload_0
      80: iconst_1
      81: putfield      #6                  // Field subdivide:Z
      84: iload         7
      86: ifeq          90
      89: return
      90: goto          106
      93: aload_0
      94: iload         4
      96: putfield      #4                  // Field cOutCode:I
      99: aload_0
     100: fload_1
     101: fload_2
     102: invokespecial #62                 // Method skipLineTo:(FF)V
     105: return
     106: aload_0
     107: iload         4
     109: putfield      #4                  // Field cOutCode:I
     112: aload_0
     113: getfield      #52                 // Field outside:Z
     116: ifeq          128
     119: aload_0
     120: iconst_0
     121: putfield      #52                 // Field outside:Z
     124: aload_0
     125: invokevirtual #63                 // Method skipLen:()V
     128: aload_0
     129: fload_1
     130: fload_2
     131: invokespecial #64                 // Method _lineTo:(FF)V
     134: return

  private void _lineTo(float, float);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #49                 // Field cx0:F
       5: fsub
       6: fstore_3
       7: fload_2
       8: aload_0
       9: getfield      #50                 // Field cy0:F
      12: fsub
      13: fstore        4
      15: fload_3
      16: fload_3
      17: fmul
      18: fload         4
      20: fload         4
      22: fmul
      23: fadd
      24: fstore        5
      26: fload         5
      28: fconst_0
      29: fcmpl
      30: ifne          34
      33: return
      34: fload         5
      36: f2d
      37: invokestatic  #65                 // Method java/lang/Math.sqrt:(D)D
      40: d2f
      41: fstore        5
      43: fload_3
      44: fload         5
      46: fdiv
      47: fstore        6
      49: fload         4
      51: fload         5
      53: fdiv
      54: fstore        7
      56: aload_0
      57: getfield      #16                 // Field curCurvepts:[F
      60: astore        8
      62: aload_0
      63: getfield      #24                 // Field dash:[F
      66: astore        9
      68: aload_0
      69: getfield      #25                 // Field dashLen:I
      72: istore        10
      74: aload_0
      75: getfield      #48                 // Field idx:I
      78: istore        11
      80: aload_0
      81: getfield      #20                 // Field dashOn:Z
      84: istore        12
      86: aload_0
      87: getfield      #26                 // Field phase:F
      90: fstore        13
      92: aload         9
      94: iload         11
      96: faload
      97: fstore        15
      99: fload         15
     101: fload         13
     103: fsub
     104: fstore        14
     106: fload         5
     108: fload         14
     110: fcmpg
     111: ifgt          176
     114: aload         8
     116: iconst_0
     117: fload_1
     118: fastore
     119: aload         8
     121: iconst_1
     122: fload_2
     123: fastore
     124: aload_0
     125: aload         8
     127: iconst_0
     128: iconst_4
     129: iload         12
     131: invokespecial #66                 // Method goTo:([FIIZ)V
     134: fload         13
     136: fload         5
     138: fadd
     139: fstore        13
     141: fload         5
     143: fload         14
     145: fcmpl
     146: ifne          286
     149: fconst_0
     150: fstore        13
     152: iload         11
     154: iconst_1
     155: iadd
     156: iload         10
     158: irem
     159: istore        11
     161: iload         12
     163: ifne          170
     166: iconst_1
     167: goto          171
     170: iconst_0
     171: istore        12
     173: goto          286
     176: fload         13
     178: fconst_0
     179: fcmpl
     180: ifne          214
     183: aload         8
     185: iconst_0
     186: aload_0
     187: getfield      #49                 // Field cx0:F
     190: fload         15
     192: fload         6
     194: fmul
     195: fadd
     196: fastore
     197: aload         8
     199: iconst_1
     200: aload_0
     201: getfield      #50                 // Field cy0:F
     204: fload         15
     206: fload         7
     208: fmul
     209: fadd
     210: fastore
     211: goto          242
     214: aload         8
     216: iconst_0
     217: aload_0
     218: getfield      #49                 // Field cx0:F
     221: fload         14
     223: fload         6
     225: fmul
     226: fadd
     227: fastore
     228: aload         8
     230: iconst_1
     231: aload_0
     232: getfield      #50                 // Field cy0:F
     235: fload         14
     237: fload         7
     239: fmul
     240: fadd
     241: fastore
     242: aload_0
     243: aload         8
     245: iconst_0
     246: iconst_4
     247: iload         12
     249: invokespecial #66                 // Method goTo:([FIIZ)V
     252: fload         5
     254: fload         14
     256: fsub
     257: fstore        5
     259: iload         11
     261: iconst_1
     262: iadd
     263: iload         10
     265: irem
     266: istore        11
     268: iload         12
     270: ifne          277
     273: iconst_1
     274: goto          278
     277: iconst_0
     278: istore        12
     280: fconst_0
     281: fstore        13
     283: goto          92
     286: aload_0
     287: iload         11
     289: putfield      #48                 // Field idx:I
     292: aload_0
     293: iload         12
     295: putfield      #20                 // Field dashOn:Z
     298: aload_0
     299: fload         13
     301: putfield      #26                 // Field phase:F
     304: return

  private void skipLineTo(float, float);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #49                 // Field cx0:F
       5: fsub
       6: fstore_3
       7: fload_2
       8: aload_0
       9: getfield      #50                 // Field cy0:F
      12: fsub
      13: fstore        4
      15: fload_3
      16: fload_3
      17: fmul
      18: fload         4
      20: fload         4
      22: fmul
      23: fadd
      24: fstore        5
      26: fload         5
      28: fconst_0
      29: fcmpl
      30: ifeq          42
      33: fload         5
      35: f2d
      36: invokestatic  #65                 // Method java/lang/Math.sqrt:(D)D
      39: d2f
      40: fstore        5
      42: aload_0
      43: iconst_1
      44: putfield      #52                 // Field outside:Z
      47: aload_0
      48: dup
      49: getfield      #53                 // Field totalSkipLen:F
      52: fload         5
      54: fadd
      55: putfield      #53                 // Field totalSkipLen:F
      58: aload_0
      59: iconst_1
      60: putfield      #31                 // Field needsMoveTo:Z
      63: aload_0
      64: iconst_0
      65: putfield      #30                 // Field starting:Z
      68: aload_0
      69: fload_1
      70: putfield      #49                 // Field cx0:F
      73: aload_0
      74: fload_2
      75: putfield      #50                 // Field cy0:F
      78: return

  public void skipLen();
    Code:
       0: aload_0
       1: getfield      #53                 // Field totalSkipLen:F
       4: fstore_1
       5: aload_0
       6: fconst_0
       7: putfield      #53                 // Field totalSkipLen:F
      10: aload_0
      11: getfield      #24                 // Field dash:[F
      14: astore_2
      15: aload_0
      16: getfield      #25                 // Field dashLen:I
      19: istore_3
      20: aload_0
      21: getfield      #48                 // Field idx:I
      24: istore        4
      26: aload_0
      27: getfield      #20                 // Field dashOn:Z
      30: istore        5
      32: aload_0
      33: getfield      #26                 // Field phase:F
      36: fstore        6
      38: fload_1
      39: aload_0
      40: getfield      #21                 // Field cycleLen:F
      43: fdiv
      44: f2d
      45: invokestatic  #67                 // Method java/lang/Math.floor:(D)D
      48: d2l
      49: ldc2_w        #68                 // long 2l
      52: lsub
      53: lstore        7
      55: lload         7
      57: lconst_0
      58: lcmp
      59: ifle          118
      62: fload_1
      63: aload_0
      64: getfield      #21                 // Field cycleLen:F
      67: lload         7
      69: l2f
      70: fmul
      71: fsub
      72: fstore_1
      73: lload         7
      75: iload_3
      76: i2l
      77: lmul
      78: lstore        9
      80: lload         9
      82: iload         4
      84: i2l
      85: ladd
      86: l2i
      87: iload_3
      88: irem
      89: istore        4
      91: lload         9
      93: iload         5
      95: ifeq          102
      98: lconst_1
      99: goto          103
     102: lconst_0
     103: ladd
     104: lconst_1
     105: land
     106: lconst_1
     107: lcmp
     108: ifne          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: istore        5
     118: aload_2
     119: iload         4
     121: faload
     122: fstore        10
     124: fload         10
     126: fload         6
     128: fsub
     129: fstore        9
     131: fload_1
     132: fload         9
     134: fcmpg
     135: ifgt          177
     138: fload         6
     140: fload_1
     141: fadd
     142: fstore        6
     144: fload_1
     145: fload         9
     147: fcmpl
     148: ifne          208
     151: fconst_0
     152: fstore        6
     154: iload         4
     156: iconst_1
     157: iadd
     158: iload_3
     159: irem
     160: istore        4
     162: iload         5
     164: ifne          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: istore        5
     174: goto          208
     177: fload_1
     178: fload         9
     180: fsub
     181: fstore_1
     182: iload         4
     184: iconst_1
     185: iadd
     186: iload_3
     187: irem
     188: istore        4
     190: iload         5
     192: ifne          199
     195: iconst_1
     196: goto          200
     199: iconst_0
     200: istore        5
     202: fconst_0
     203: fstore        6
     205: goto          118
     208: aload_0
     209: iload         4
     211: putfield      #48                 // Field idx:I
     214: aload_0
     215: iload         5
     217: putfield      #20                 // Field dashOn:Z
     220: aload_0
     221: fload         6
     223: putfield      #26                 // Field phase:F
     226: return

  private void somethingTo(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field curCurvepts:[F
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokestatic  #70                 // Method pointCurve:([FI)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #9                  // Field li:Lcom/sun/marlin/Dasher$LengthIterator;
      18: astore_3
      19: aload_0
      20: getfield      #24                 // Field dash:[F
      23: astore        4
      25: aload_0
      26: getfield      #25                 // Field dashLen:I
      29: istore        5
      31: aload_3
      32: aload_2
      33: iload_1
      34: invokevirtual #71                 // Method com/sun/marlin/Dasher$LengthIterator.initializeIterationOnCurve:([FI)V
      37: aload_0
      38: getfield      #48                 // Field idx:I
      41: istore        6
      43: aload_0
      44: getfield      #20                 // Field dashOn:Z
      47: istore        7
      49: aload_0
      50: getfield      #26                 // Field phase:F
      53: fstore        8
      55: iconst_0
      56: istore        9
      58: fconst_0
      59: fstore        10
      61: aload         4
      63: iload         6
      65: faload
      66: fload         8
      68: fsub
      69: fstore        12
      71: aload_3
      72: fload         12
      74: invokevirtual #72                 // Method com/sun/marlin/Dasher$LengthIterator.next:(F)F
      77: dup
      78: fstore        11
      80: fconst_1
      81: fcmpg
      82: ifge          161
      85: fload         11
      87: fconst_0
      88: fcmpl
      89: ifeq          127
      92: fload         11
      94: fload         10
      96: fsub
      97: fconst_1
      98: fload         10
     100: fsub
     101: fdiv
     102: aload_2
     103: iload         9
     105: aload_2
     106: iconst_0
     107: iload_1
     108: invokestatic  #73                 // Method com/sun/marlin/Helpers.subdivideAt:(F[FI[FII)V
     111: fload         11
     113: fstore        10
     115: aload_0
     116: aload_2
     117: iconst_2
     118: iload_1
     119: iload         7
     121: invokespecial #66                 // Method goTo:([FIIZ)V
     124: iload_1
     125: istore        9
     127: iload         6
     129: iconst_1
     130: iadd
     131: iload         5
     133: irem
     134: istore        6
     136: iload         7
     138: ifne          145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: istore        7
     148: fconst_0
     149: fstore        8
     151: aload         4
     153: iload         6
     155: faload
     156: fstore        12
     158: goto          71
     161: aload_0
     162: aload_2
     163: iload         9
     165: iconst_2
     166: iadd
     167: iload_1
     168: iload         7
     170: invokespecial #66                 // Method goTo:([FIIZ)V
     173: fload         8
     175: aload_3
     176: invokevirtual #74                 // Method com/sun/marlin/Dasher$LengthIterator.lastSegLen:()F
     179: fadd
     180: fstore        8
     182: fload         8
     184: aload         4
     186: iload         6
     188: faload
     189: fcmpl
     190: iflt          217
     193: fconst_0
     194: fstore        8
     196: iload         6
     198: iconst_1
     199: iadd
     200: iload         5
     202: irem
     203: istore        6
     205: iload         7
     207: ifne          214
     210: iconst_1
     211: goto          215
     214: iconst_0
     215: istore        7
     217: aload_0
     218: iload         6
     220: putfield      #48                 // Field idx:I
     223: aload_0
     224: iload         7
     226: putfield      #20                 // Field dashOn:Z
     229: aload_0
     230: fload         8
     232: putfield      #26                 // Field phase:F
     235: aload_3
     236: invokevirtual #75                 // Method com/sun/marlin/Dasher$LengthIterator.reset:()V
     239: return

  private void skipSomethingTo(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field curCurvepts:[F
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokestatic  #70                 // Method pointCurve:([FI)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #9                  // Field li:Lcom/sun/marlin/Dasher$LengthIterator;
      18: astore_3
      19: aload_3
      20: aload_2
      21: iload_1
      22: invokevirtual #71                 // Method com/sun/marlin/Dasher$LengthIterator.initializeIterationOnCurve:([FI)V
      25: aload_3
      26: invokevirtual #76                 // Method com/sun/marlin/Dasher$LengthIterator.totalLength:()F
      29: fstore        4
      31: aload_0
      32: iconst_1
      33: putfield      #52                 // Field outside:Z
      36: aload_0
      37: dup
      38: getfield      #53                 // Field totalSkipLen:F
      41: fload         4
      43: fadd
      44: putfield      #53                 // Field totalSkipLen:F
      47: aload_0
      48: iconst_1
      49: putfield      #31                 // Field needsMoveTo:Z
      52: aload_0
      53: iconst_0
      54: putfield      #30                 // Field starting:Z
      57: return

  private static boolean pointCurve(float[], int);
    Code:
       0: iconst_2
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     27
       7: aload_0
       8: iload_2
       9: faload
      10: aload_0
      11: iload_2
      12: iconst_2
      13: isub
      14: faload
      15: fcmpl
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: iinc          2, 1
      24: goto          2
      27: iconst_1
      28: ireturn

  public void curveTo(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cOutCode:I
       4: istore        7
       6: aload_0
       7: getfield      #36                 // Field clipRect:[F
      10: ifnull        182
      13: fload_1
      14: fload_2
      15: aload_0
      16: getfield      #36                 // Field clipRect:[F
      19: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      22: istore        8
      24: fload_3
      25: fload         4
      27: aload_0
      28: getfield      #36                 // Field clipRect:[F
      31: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      34: istore        9
      36: fload         5
      38: fload         6
      40: aload_0
      41: getfield      #36                 // Field clipRect:[F
      44: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      47: istore        10
      49: iload         7
      51: iload         8
      53: ior
      54: iload         9
      56: ior
      57: iload         10
      59: ior
      60: istore        11
      62: iload         11
      64: ifeq          160
      67: iload         7
      69: iload         8
      71: iand
      72: iload         9
      74: iand
      75: iload         10
      77: iand
      78: istore        12
      80: iload         12
      82: ifne          140
      85: aload_0
      86: getfield      #6                  // Field subdivide:Z
      89: ifeq          160
      92: aload_0
      93: iconst_0
      94: putfield      #6                  // Field subdivide:Z
      97: aload_0
      98: getfield      #18                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
     101: aload_0
     102: getfield      #49                 // Field cx0:F
     105: aload_0
     106: getfield      #50                 // Field cy0:F
     109: fload_1
     110: fload_2
     111: fload_3
     112: fload         4
     114: fload         5
     116: fload         6
     118: iload         11
     120: aload_0
     121: invokevirtual #77                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.splitCurve:(FFFFFFFFILcom/sun/javafx/geom/PathConsumer2D;)Z
     124: istore        13
     126: aload_0
     127: iconst_1
     128: putfield      #6                  // Field subdivide:Z
     131: iload         13
     133: ifeq          137
     136: return
     137: goto          160
     140: aload_0
     141: iload         10
     143: putfield      #4                  // Field cOutCode:I
     146: aload_0
     147: fload_1
     148: fload_2
     149: fload_3
     150: fload         4
     152: fload         5
     154: fload         6
     156: invokespecial #78                 // Method skipCurveTo:(FFFFFF)V
     159: return
     160: aload_0
     161: iload         10
     163: putfield      #4                  // Field cOutCode:I
     166: aload_0
     167: getfield      #52                 // Field outside:Z
     170: ifeq          182
     173: aload_0
     174: iconst_0
     175: putfield      #52                 // Field outside:Z
     178: aload_0
     179: invokevirtual #63                 // Method skipLen:()V
     182: aload_0
     183: fload_1
     184: fload_2
     185: fload_3
     186: fload         4
     188: fload         5
     190: fload         6
     192: invokespecial #79                 // Method _curveTo:(FFFFFF)V
     195: return

  private void _curveTo(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field curCurvepts:[F
       4: astore        7
       6: aload_0
       7: getfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      10: getfield      #80                 // Field com/sun/marlin/RendererContext.monotonizer:Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
      13: aload_0
      14: getfield      #49                 // Field cx0:F
      17: aload_0
      18: getfield      #50                 // Field cy0:F
      21: fload_1
      22: fload_2
      23: fload_3
      24: fload         4
      26: fload         5
      28: fload         6
      30: invokevirtual #81                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.curve:(FFFFFFFF)Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
      33: astore        8
      35: aload         8
      37: getfield      #82                 // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.nbSplits:I
      40: istore        9
      42: aload         8
      44: getfield      #83                 // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.middle:[F
      47: astore        10
      49: iconst_0
      50: istore        11
      52: iconst_0
      53: istore        12
      55: iload         11
      57: iload         9
      59: if_icmpgt     89
      62: aload         10
      64: iload         12
      66: aload         7
      68: iconst_0
      69: bipush        8
      71: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: bipush        8
      77: invokespecial #84                 // Method somethingTo:(I)V
      80: iinc          11, 1
      83: iinc          12, 6
      86: goto          55
      89: return

  private void skipCurveTo(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field curCurvepts:[F
       4: astore        7
       6: aload         7
       8: iconst_0
       9: aload_0
      10: getfield      #49                 // Field cx0:F
      13: fastore
      14: aload         7
      16: iconst_1
      17: aload_0
      18: getfield      #50                 // Field cy0:F
      21: fastore
      22: aload         7
      24: iconst_2
      25: fload_1
      26: fastore
      27: aload         7
      29: iconst_3
      30: fload_2
      31: fastore
      32: aload         7
      34: iconst_4
      35: fload_3
      36: fastore
      37: aload         7
      39: iconst_5
      40: fload         4
      42: fastore
      43: aload         7
      45: bipush        6
      47: fload         5
      49: fastore
      50: aload         7
      52: bipush        7
      54: fload         6
      56: fastore
      57: aload_0
      58: bipush        8
      60: invokespecial #85                 // Method skipSomethingTo:(I)V
      63: aload_0
      64: fload         5
      66: putfield      #49                 // Field cx0:F
      69: aload_0
      70: fload         6
      72: putfield      #50                 // Field cy0:F
      75: return

  public void quadTo(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cOutCode:I
       4: istore        5
       6: aload_0
       7: getfield      #36                 // Field clipRect:[F
      10: ifnull        155
      13: fload_1
      14: fload_2
      15: aload_0
      16: getfield      #36                 // Field clipRect:[F
      19: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      22: istore        6
      24: fload_3
      25: fload         4
      27: aload_0
      28: getfield      #36                 // Field clipRect:[F
      31: invokestatic  #51                 // Method com/sun/marlin/Helpers.outcode:(FF[F)I
      34: istore        7
      36: iload         5
      38: iload         6
      40: ior
      41: iload         7
      43: ior
      44: istore        8
      46: iload         8
      48: ifeq          133
      51: iload         5
      53: iload         6
      55: iand
      56: iload         7
      58: iand
      59: istore        9
      61: iload         9
      63: ifne          117
      66: aload_0
      67: getfield      #6                  // Field subdivide:Z
      70: ifeq          133
      73: aload_0
      74: iconst_0
      75: putfield      #6                  // Field subdivide:Z
      78: aload_0
      79: getfield      #18                 // Field curveSplitter:Lcom/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter;
      82: aload_0
      83: getfield      #49                 // Field cx0:F
      86: aload_0
      87: getfield      #50                 // Field cy0:F
      90: fload_1
      91: fload_2
      92: fload_3
      93: fload         4
      95: iload         8
      97: aload_0
      98: invokevirtual #86                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveClipSplitter.splitQuad:(FFFFFFILcom/sun/javafx/geom/PathConsumer2D;)Z
     101: istore        10
     103: aload_0
     104: iconst_1
     105: putfield      #6                  // Field subdivide:Z
     108: iload         10
     110: ifeq          114
     113: return
     114: goto          133
     117: aload_0
     118: iload         7
     120: putfield      #4                  // Field cOutCode:I
     123: aload_0
     124: fload_1
     125: fload_2
     126: fload_3
     127: fload         4
     129: invokespecial #87                 // Method skipQuadTo:(FFFF)V
     132: return
     133: aload_0
     134: iload         7
     136: putfield      #4                  // Field cOutCode:I
     139: aload_0
     140: getfield      #52                 // Field outside:Z
     143: ifeq          155
     146: aload_0
     147: iconst_0
     148: putfield      #52                 // Field outside:Z
     151: aload_0
     152: invokevirtual #63                 // Method skipLen:()V
     155: aload_0
     156: fload_1
     157: fload_2
     158: fload_3
     159: fload         4
     161: invokespecial #88                 // Method _quadTo:(FFFF)V
     164: return

  private void _quadTo(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field curCurvepts:[F
       4: astore        5
       6: aload_0
       7: getfield      #10                 // Field rdrCtx:Lcom/sun/marlin/RendererContext;
      10: getfield      #80                 // Field com/sun/marlin/RendererContext.monotonizer:Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
      13: aload_0
      14: getfield      #49                 // Field cx0:F
      17: aload_0
      18: getfield      #50                 // Field cy0:F
      21: fload_1
      22: fload_2
      23: fload_3
      24: fload         4
      26: invokevirtual #89                 // Method com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.quad:(FFFFFF)Lcom/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer;
      29: astore        6
      31: aload         6
      33: getfield      #82                 // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.nbSplits:I
      36: istore        7
      38: aload         6
      40: getfield      #83                 // Field com/sun/marlin/TransformingPathConsumer2D$CurveBasicMonotonizer.middle:[F
      43: astore        8
      45: iconst_0
      46: istore        9
      48: iconst_0
      49: istore        10
      51: iload         9
      53: iload         7
      55: if_icmpgt     85
      58: aload         8
      60: iload         10
      62: aload         5
      64: iconst_0
      65: bipush        8
      67: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      70: aload_0
      71: bipush        6
      73: invokespecial #84                 // Method somethingTo:(I)V
      76: iinc          9, 1
      79: iinc          10, 4
      82: goto          51
      85: return

  private void skipQuadTo(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field curCurvepts:[F
       4: astore        5
       6: aload         5
       8: iconst_0
       9: aload_0
      10: getfield      #49                 // Field cx0:F
      13: fastore
      14: aload         5
      16: iconst_1
      17: aload_0
      18: getfield      #50                 // Field cy0:F
      21: fastore
      22: aload         5
      24: iconst_2
      25: fload_1
      26: fastore
      27: aload         5
      29: iconst_3
      30: fload_2
      31: fastore
      32: aload         5
      34: iconst_4
      35: fload_3
      36: fastore
      37: aload         5
      39: iconst_5
      40: fload         4
      42: fastore
      43: aload_0
      44: bipush        6
      46: invokespecial #85                 // Method skipSomethingTo:(I)V
      49: aload_0
      50: fload_3
      51: putfield      #49                 // Field cx0:F
      54: aload_0
      55: fload         4
      57: putfield      #50                 // Field cy0:F
      60: return

  public void closePath();
    Code:
       0: aload_0
       1: getfield      #49                 // Field cx0:F
       4: aload_0
       5: getfield      #44                 // Field sx0:F
       8: fcmpl
       9: ifne          24
      12: aload_0
      13: getfield      #50                 // Field cy0:F
      16: aload_0
      17: getfield      #45                 // Field sy0:F
      20: fcmpl
      21: ifeq          36
      24: aload_0
      25: aload_0
      26: getfield      #44                 // Field sx0:F
      29: aload_0
      30: getfield      #45                 // Field sy0:F
      33: invokevirtual #90                 // Method lineTo:(FF)V
      36: aload_0
      37: getfield      #32                 // Field firstSegidx:I
      40: ifeq          78
      43: aload_0
      44: getfield      #20                 // Field dashOn:Z
      47: ifeq          57
      50: aload_0
      51: getfield      #31                 // Field needsMoveTo:Z
      54: ifeq          74
      57: aload_0
      58: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      61: aload_0
      62: getfield      #44                 // Field sx0:F
      65: aload_0
      66: getfield      #45                 // Field sy0:F
      69: invokeinterface #46,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.moveTo:(FF)V
      74: aload_0
      75: invokespecial #47                 // Method emitFirstSegments:()V
      78: aload_0
      79: aload_0
      80: getfield      #44                 // Field sx0:F
      83: aload_0
      84: getfield      #45                 // Field sy0:F
      87: invokevirtual #91                 // Method moveTo:(FF)V
      90: return

  public void pathDone();
    Code:
       0: aload_0
       1: getfield      #32                 // Field firstSegidx:I
       4: ifeq          28
       7: aload_0
       8: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      11: aload_0
      12: getfield      #44                 // Field sx0:F
      15: aload_0
      16: getfield      #45                 // Field sy0:F
      19: invokeinterface #46,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.moveTo:(FF)V
      24: aload_0
      25: invokespecial #47                 // Method emitFirstSegments:()V
      28: aload_0
      29: getfield      #19                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      32: invokeinterface #92,  1           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.pathDone:()V
      37: aload_0
      38: invokevirtual #93                 // Method dispose:()V
      41: return

  static {};
    Code:
       0: invokestatic  #94                 // Method com/sun/marlin/MarlinProperties.getCurveLengthError:()F
       3: putstatic     #95                 // Field CURVE_LEN_ERR:F
       6: return
}
