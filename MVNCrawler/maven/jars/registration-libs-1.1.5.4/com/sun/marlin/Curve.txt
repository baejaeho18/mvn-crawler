Compiled from "Curve.java"
final class com.sun.marlin.Curve {
  float ax;

  float ay;

  float bx;

  float by;

  float cx;

  float cy;

  float dx;

  float dy;

  float dax;

  float day;

  float dbx;

  float dby;

  static final boolean $assertionsDisabled;

  com.sun.marlin.Curve();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  void set(float[], int);
    Code:
       0: iload_2
       1: bipush        8
       3: if_icmpne     39
       6: aload_0
       7: aload_1
       8: iconst_0
       9: faload
      10: aload_1
      11: iconst_1
      12: faload
      13: aload_1
      14: iconst_2
      15: faload
      16: aload_1
      17: iconst_3
      18: faload
      19: aload_1
      20: iconst_4
      21: faload
      22: aload_1
      23: iconst_5
      24: faload
      25: aload_1
      26: bipush        6
      28: faload
      29: aload_1
      30: bipush        7
      32: faload
      33: invokevirtual #2                  // Method set:(FFFFFFFF)V
      36: goto          85
      39: iload_2
      40: iconst_4
      41: if_icmpne     63
      44: aload_0
      45: aload_1
      46: iconst_0
      47: faload
      48: aload_1
      49: iconst_1
      50: faload
      51: aload_1
      52: iconst_2
      53: faload
      54: aload_1
      55: iconst_3
      56: faload
      57: invokevirtual #3                  // Method set:(FFFF)V
      60: goto          85
      63: aload_0
      64: aload_1
      65: iconst_0
      66: faload
      67: aload_1
      68: iconst_1
      69: faload
      70: aload_1
      71: iconst_2
      72: faload
      73: aload_1
      74: iconst_3
      75: faload
      76: aload_1
      77: iconst_4
      78: faload
      79: aload_1
      80: iconst_5
      81: faload
      82: invokevirtual #4                  // Method set:(FFFFFF)V
      85: return

  void set(float, float, float, float, float, float, float, float);
    Code:
       0: ldc           #5                  // float 3.0f
       2: fload         5
       4: fload_3
       5: fsub
       6: fmul
       7: fstore        9
       9: ldc           #5                  // float 3.0f
      11: fload         6
      13: fload         4
      15: fsub
      16: fmul
      17: fstore        10
      19: ldc           #5                  // float 3.0f
      21: fload_3
      22: fload_1
      23: fsub
      24: fmul
      25: fstore        11
      27: ldc           #5                  // float 3.0f
      29: fload         4
      31: fload_2
      32: fsub
      33: fmul
      34: fstore        12
      36: aload_0
      37: fload         7
      39: fload_1
      40: fsub
      41: fload         9
      43: fsub
      44: putfield      #6                  // Field ax:F
      47: aload_0
      48: fload         8
      50: fload_2
      51: fsub
      52: fload         10
      54: fsub
      55: putfield      #7                  // Field ay:F
      58: aload_0
      59: fload         9
      61: fload         11
      63: fsub
      64: putfield      #8                  // Field bx:F
      67: aload_0
      68: fload         10
      70: fload         12
      72: fsub
      73: putfield      #9                  // Field by:F
      76: aload_0
      77: fload         11
      79: putfield      #10                 // Field cx:F
      82: aload_0
      83: fload         12
      85: putfield      #11                 // Field cy:F
      88: aload_0
      89: fload_1
      90: putfield      #12                 // Field dx:F
      93: aload_0
      94: fload_2
      95: putfield      #13                 // Field dy:F
      98: aload_0
      99: ldc           #5                  // float 3.0f
     101: aload_0
     102: getfield      #6                  // Field ax:F
     105: fmul
     106: putfield      #14                 // Field dax:F
     109: aload_0
     110: ldc           #5                  // float 3.0f
     112: aload_0
     113: getfield      #7                  // Field ay:F
     116: fmul
     117: putfield      #15                 // Field day:F
     120: aload_0
     121: fconst_2
     122: aload_0
     123: getfield      #8                  // Field bx:F
     126: fmul
     127: putfield      #16                 // Field dbx:F
     130: aload_0
     131: fconst_2
     132: aload_0
     133: getfield      #9                  // Field by:F
     136: fmul
     137: putfield      #17                 // Field dby:F
     140: return

  void set(float, float, float, float, float, float);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fstore        7
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        8
      11: aload_0
      12: fconst_0
      13: putfield      #6                  // Field ax:F
      16: aload_0
      17: fconst_0
      18: putfield      #7                  // Field ay:F
      21: aload_0
      22: fload         5
      24: fload_3
      25: fsub
      26: fload         7
      28: fsub
      29: putfield      #8                  // Field bx:F
      32: aload_0
      33: fload         6
      35: fload         4
      37: fsub
      38: fload         8
      40: fsub
      41: putfield      #9                  // Field by:F
      44: aload_0
      45: fconst_2
      46: fload         7
      48: fmul
      49: putfield      #10                 // Field cx:F
      52: aload_0
      53: fconst_2
      54: fload         8
      56: fmul
      57: putfield      #11                 // Field cy:F
      60: aload_0
      61: fload_1
      62: putfield      #12                 // Field dx:F
      65: aload_0
      66: fload_2
      67: putfield      #13                 // Field dy:F
      70: aload_0
      71: fconst_0
      72: putfield      #14                 // Field dax:F
      75: aload_0
      76: fconst_0
      77: putfield      #15                 // Field day:F
      80: aload_0
      81: fconst_2
      82: aload_0
      83: getfield      #8                  // Field bx:F
      86: fmul
      87: putfield      #16                 // Field dbx:F
      90: aload_0
      91: fconst_2
      92: aload_0
      93: getfield      #9                  // Field by:F
      96: fmul
      97: putfield      #17                 // Field dby:F
     100: return

  void set(float, float, float, float);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fstore        5
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        6
      11: aload_0
      12: fconst_0
      13: putfield      #6                  // Field ax:F
      16: aload_0
      17: fconst_0
      18: putfield      #7                  // Field ay:F
      21: aload_0
      22: fconst_0
      23: putfield      #8                  // Field bx:F
      26: aload_0
      27: fconst_0
      28: putfield      #9                  // Field by:F
      31: aload_0
      32: fload         5
      34: putfield      #10                 // Field cx:F
      37: aload_0
      38: fload         6
      40: putfield      #11                 // Field cy:F
      43: aload_0
      44: fload_1
      45: putfield      #12                 // Field dx:F
      48: aload_0
      49: fload_2
      50: putfield      #13                 // Field dy:F
      53: aload_0
      54: fconst_0
      55: putfield      #14                 // Field dax:F
      58: aload_0
      59: fconst_0
      60: putfield      #15                 // Field day:F
      63: aload_0
      64: fconst_0
      65: putfield      #16                 // Field dbx:F
      68: aload_0
      69: fconst_0
      70: putfield      #17                 // Field dby:F
      73: return

  int dxRoots(float[], int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field dax:F
       4: aload_0
       5: getfield      #16                 // Field dbx:F
       8: aload_0
       9: getfield      #10                 // Field cx:F
      12: aload_1
      13: iload_2
      14: invokestatic  #18                 // Method com/sun/marlin/Helpers.quadraticRoots:(FFF[FI)I
      17: ireturn

  int dyRoots(float[], int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field day:F
       4: aload_0
       5: getfield      #17                 // Field dby:F
       8: aload_0
       9: getfield      #11                 // Field cy:F
      12: aload_1
      13: iload_2
      14: invokestatic  #18                 // Method com/sun/marlin/Helpers.quadraticRoots:(FFF[FI)I
      17: ireturn

  int infPoints(float[], int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field dax:F
       4: aload_0
       5: getfield      #17                 // Field dby:F
       8: fmul
       9: aload_0
      10: getfield      #16                 // Field dbx:F
      13: aload_0
      14: getfield      #15                 // Field day:F
      17: fmul
      18: fsub
      19: fstore_3
      20: fconst_2
      21: aload_0
      22: getfield      #11                 // Field cy:F
      25: aload_0
      26: getfield      #14                 // Field dax:F
      29: fmul
      30: aload_0
      31: getfield      #15                 // Field day:F
      34: aload_0
      35: getfield      #10                 // Field cx:F
      38: fmul
      39: fsub
      40: fmul
      41: fstore        4
      43: aload_0
      44: getfield      #11                 // Field cy:F
      47: aload_0
      48: getfield      #16                 // Field dbx:F
      51: fmul
      52: aload_0
      53: getfield      #10                 // Field cx:F
      56: aload_0
      57: getfield      #17                 // Field dby:F
      60: fmul
      61: fsub
      62: fstore        5
      64: fload_3
      65: fload         4
      67: fload         5
      69: aload_1
      70: iload_2
      71: invokestatic  #18                 // Method com/sun/marlin/Helpers.quadraticRoots:(FFF[FI)I
      74: ireturn

  int xPoints(float[], int, float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field ax:F
       4: aload_0
       5: getfield      #8                  // Field bx:F
       8: aload_0
       9: getfield      #10                 // Field cx:F
      12: aload_0
      13: getfield      #12                 // Field dx:F
      16: fload_3
      17: fsub
      18: aload_1
      19: iload_2
      20: fconst_0
      21: fconst_1
      22: invokestatic  #19                 // Method com/sun/marlin/Helpers.cubicRootsInAB:(FFFF[FIFF)I
      25: ireturn

  int yPoints(float[], int, float);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ay:F
       4: aload_0
       5: getfield      #9                  // Field by:F
       8: aload_0
       9: getfield      #11                 // Field cy:F
      12: aload_0
      13: getfield      #13                 // Field dy:F
      16: fload_3
      17: fsub
      18: aload_1
      19: iload_2
      20: fconst_0
      21: fconst_1
      22: invokestatic  #19                 // Method com/sun/marlin/Helpers.cubicRootsInAB:(FFFF[FIFF)I
      25: ireturn

  private int perpendiculardfddf(float[], int);
    Code:
       0: getstatic     #20                 // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_1
       7: arraylength
       8: iload_2
       9: iconst_4
      10: iadd
      11: if_icmpge     22
      14: new           #21                 // class java/lang/AssertionError
      17: dup
      18: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: fconst_2
      23: aload_0
      24: getfield      #14                 // Field dax:F
      27: aload_0
      28: getfield      #14                 // Field dax:F
      31: fmul
      32: aload_0
      33: getfield      #15                 // Field day:F
      36: aload_0
      37: getfield      #15                 // Field day:F
      40: fmul
      41: fadd
      42: fmul
      43: fstore_3
      44: ldc           #5                  // float 3.0f
      46: aload_0
      47: getfield      #14                 // Field dax:F
      50: aload_0
      51: getfield      #16                 // Field dbx:F
      54: fmul
      55: aload_0
      56: getfield      #15                 // Field day:F
      59: aload_0
      60: getfield      #17                 // Field dby:F
      63: fmul
      64: fadd
      65: fmul
      66: fstore        4
      68: fconst_2
      69: aload_0
      70: getfield      #14                 // Field dax:F
      73: aload_0
      74: getfield      #10                 // Field cx:F
      77: fmul
      78: aload_0
      79: getfield      #15                 // Field day:F
      82: aload_0
      83: getfield      #11                 // Field cy:F
      86: fmul
      87: fadd
      88: fmul
      89: aload_0
      90: getfield      #16                 // Field dbx:F
      93: aload_0
      94: getfield      #16                 // Field dbx:F
      97: fmul
      98: fadd
      99: aload_0
     100: getfield      #17                 // Field dby:F
     103: aload_0
     104: getfield      #17                 // Field dby:F
     107: fmul
     108: fadd
     109: fstore        5
     111: aload_0
     112: getfield      #16                 // Field dbx:F
     115: aload_0
     116: getfield      #10                 // Field cx:F
     119: fmul
     120: aload_0
     121: getfield      #17                 // Field dby:F
     124: aload_0
     125: getfield      #11                 // Field cy:F
     128: fmul
     129: fadd
     130: fstore        6
     132: fload_3
     133: fload         4
     135: fload         5
     137: fload         6
     139: aload_1
     140: iload_2
     141: fconst_0
     142: fconst_1
     143: invokestatic  #19                 // Method com/sun/marlin/Helpers.cubicRootsInAB:(FFFF[FIFF)I
     146: ireturn

  int rootsOfROCMinusW(float[], int, float, float);
    Code:
       0: getstatic     #20                 // Field $assertionsDisabled:Z
       3: ifne          27
       6: iload_2
       7: bipush        6
       9: if_icmpgt     19
      12: aload_1
      13: arraylength
      14: bipush        10
      16: if_icmpge     27
      19: new           #21                 // class java/lang/AssertionError
      22: dup
      23: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: iload_2
      28: istore        5
      30: iload_2
      31: aload_0
      32: aload_1
      33: iload_2
      34: invokespecial #23                 // Method perpendiculardfddf:([FI)I
      37: iadd
      38: istore        6
      40: aload_1
      41: iload         6
      43: fconst_1
      44: fastore
      45: fconst_0
      46: fstore        7
      48: aload_0
      49: fload         7
      51: invokespecial #24                 // Method ROCsq:(F)F
      54: fload_3
      55: fsub
      56: fstore        8
      58: iload_2
      59: istore        9
      61: iload         9
      63: iload         6
      65: if_icmpgt     145
      68: aload_1
      69: iload         9
      71: faload
      72: fstore        10
      74: aload_0
      75: fload         10
      77: invokespecial #24                 // Method ROCsq:(F)F
      80: fload_3
      81: fsub
      82: fstore        11
      84: fload         8
      86: fconst_0
      87: fcmpl
      88: ifne          103
      91: aload_1
      92: iload         5
      94: iinc          5, 1
      97: fload         7
      99: fastore
     100: goto          131
     103: fload         11
     105: fload         8
     107: fmul
     108: fconst_0
     109: fcmpg
     110: ifge          131
     113: aload_1
     114: iload         5
     116: iinc          5, 1
     119: aload_0
     120: fload         7
     122: fload         10
     124: fload_3
     125: fload         4
     127: invokespecial #25                 // Method falsePositionROCsqMinusX:(FFFF)F
     130: fastore
     131: fload         10
     133: fstore        7
     135: fload         11
     137: fstore        8
     139: iinc          9, 1
     142: goto          61
     145: iload         5
     147: iload_2
     148: isub
     149: ireturn

  private static float eliminateInf(float);
    Code:
       0: fload_0
       1: ldc           #27                 // float Infinityf
       3: fcmpl
       4: ifne          12
       7: ldc           #28                 // float 3.4028235E38f
       9: goto          25
      12: fload_0
      13: ldc           #29                 // float -Infinityf
      15: fcmpl
      16: ifne          24
      19: ldc           #30                 // float 1.4E-45f
      21: goto          25
      24: fload_0
      25: freturn

  private float falsePositionROCsqMinusX(float, float, float, float);
    Code:
       0: iconst_0
       1: istore        6
       3: fload_2
       4: fstore        7
       6: aload_0
       7: fload         7
       9: invokespecial #24                 // Method ROCsq:(F)F
      12: fload_3
      13: fsub
      14: invokestatic  #31                 // Method eliminateInf:(F)F
      17: fstore        8
      19: fload_1
      20: fstore        9
      22: aload_0
      23: fload         9
      25: invokespecial #24                 // Method ROCsq:(F)F
      28: fload_3
      29: fsub
      30: invokestatic  #31                 // Method eliminateInf:(F)F
      33: fstore        10
      35: fload         9
      37: fstore        11
      39: iconst_0
      40: istore        13
      42: iload         13
      44: bipush        100
      46: if_icmpge     195
      49: fload         7
      51: fload         9
      53: fsub
      54: invokestatic  #32                 // Method java/lang/Math.abs:(F)F
      57: fload         4
      59: fload         7
      61: fload         9
      63: fadd
      64: invokestatic  #32                 // Method java/lang/Math.abs:(F)F
      67: fmul
      68: fcmpl
      69: ifle          195
      72: fload         10
      74: fload         7
      76: fmul
      77: fload         8
      79: fload         9
      81: fmul
      82: fsub
      83: fload         10
      85: fload         8
      87: fsub
      88: fdiv
      89: fstore        11
      91: aload_0
      92: fload         11
      94: invokespecial #24                 // Method ROCsq:(F)F
      97: fload_3
      98: fsub
      99: fstore        12
     101: fload         12
     103: fload         8
     105: invokestatic  #33                 // Method sameSign:(FF)Z
     108: ifeq          147
     111: fload         12
     113: fstore        8
     115: fload         11
     117: fstore        7
     119: iload         6
     121: ifge          141
     124: fload         10
     126: iconst_1
     127: iload         6
     129: ineg
     130: ishl
     131: i2f
     132: fdiv
     133: fstore        10
     135: iinc          6, -1
     138: goto          189
     141: iconst_m1
     142: istore        6
     144: goto          189
     147: fload         12
     149: fload         10
     151: fmul
     152: fconst_0
     153: fcmpl
     154: ifle          195
     157: fload         12
     159: fstore        10
     161: fload         11
     163: fstore        9
     165: iload         6
     167: ifle          186
     170: fload         8
     172: iconst_1
     173: iload         6
     175: ishl
     176: i2f
     177: fdiv
     178: fstore        8
     180: iinc          6, 1
     183: goto          189
     186: iconst_1
     187: istore        6
     189: iinc          13, 1
     192: goto          42
     195: fload         11
     197: freturn

  private static boolean sameSign(float, float);
    Code:
       0: fload_0
       1: fconst_0
       2: fcmpg
       3: ifge          12
       6: fload_1
       7: fconst_0
       8: fcmpg
       9: iflt          24
      12: fload_0
      13: fconst_0
      14: fcmpl
      15: ifle          28
      18: fload_1
      19: fconst_0
      20: fcmpl
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private float ROCsq(float);
    Code:
       0: fload_1
       1: fload_1
       2: aload_0
       3: getfield      #14                 // Field dax:F
       6: fmul
       7: aload_0
       8: getfield      #16                 // Field dbx:F
      11: fadd
      12: fmul
      13: aload_0
      14: getfield      #10                 // Field cx:F
      17: fadd
      18: fstore_2
      19: fload_1
      20: fload_1
      21: aload_0
      22: getfield      #15                 // Field day:F
      25: fmul
      26: aload_0
      27: getfield      #17                 // Field dby:F
      30: fadd
      31: fmul
      32: aload_0
      33: getfield      #11                 // Field cy:F
      36: fadd
      37: fstore_3
      38: fconst_2
      39: aload_0
      40: getfield      #14                 // Field dax:F
      43: fmul
      44: fload_1
      45: fmul
      46: aload_0
      47: getfield      #16                 // Field dbx:F
      50: fadd
      51: fstore        4
      53: fconst_2
      54: aload_0
      55: getfield      #15                 // Field day:F
      58: fmul
      59: fload_1
      60: fmul
      61: aload_0
      62: getfield      #17                 // Field dby:F
      65: fadd
      66: fstore        5
      68: fload_2
      69: fload_2
      70: fmul
      71: fload_3
      72: fload_3
      73: fmul
      74: fadd
      75: fstore        6
      77: fload         4
      79: fload         4
      81: fmul
      82: fload         5
      84: fload         5
      86: fmul
      87: fadd
      88: fstore        7
      90: fload         4
      92: fload_2
      93: fmul
      94: fload         5
      96: fload_3
      97: fmul
      98: fadd
      99: fstore        8
     101: fload         6
     103: fload         6
     105: fload         6
     107: fmul
     108: fload         6
     110: fload         7
     112: fmul
     113: fload         8
     115: fload         8
     117: fmul
     118: fsub
     119: fdiv
     120: fmul
     121: freturn

  static {};
    Code:
       0: ldc           #34                 // class com/sun/marlin/Curve
       2: invokevirtual #35                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #20                 // Field $assertionsDisabled:Z
      16: return
}
