Compiled from "DoubleArrayCache.java"
final class com.sun.marlin.DoubleArrayCache$Bucket {
  private int tail;

  private final int arraySize;

  private final boolean clean;

  private final double[][] arrays;

  private final com.sun.marlin.ArrayCacheConst$BucketStats stats;

  com.sun.marlin.DoubleArrayCache$Bucket(boolean, int, int, com.sun.marlin.ArrayCacheConst$BucketStats);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field tail:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field arraySize:I
      14: aload_0
      15: iload_1
      16: putfield      #4                  // Field clean:Z
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field stats:Lcom/sun/marlin/ArrayCacheConst$BucketStats;
      25: aload_0
      26: iload_3
      27: anewarray     #6                  // class "[D"
      30: putfield      #7                  // Field arrays:[[D
      33: return

  double[] getArray();
    Code:
       0: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
       3: ifeq          19
       6: aload_0
       7: getfield      #5                  // Field stats:Lcom/sun/marlin/ArrayCacheConst$BucketStats;
      10: dup
      11: getfield      #9                  // Field com/sun/marlin/ArrayCacheConst$BucketStats.getOp:I
      14: iconst_1
      15: iadd
      16: putfield      #9                  // Field com/sun/marlin/ArrayCacheConst$BucketStats.getOp:I
      19: aload_0
      20: getfield      #2                  // Field tail:I
      23: ifeq          55
      26: aload_0
      27: getfield      #7                  // Field arrays:[[D
      30: aload_0
      31: dup
      32: getfield      #2                  // Field tail:I
      35: iconst_1
      36: isub
      37: dup_x1
      38: putfield      #2                  // Field tail:I
      41: aaload
      42: astore_1
      43: aload_0
      44: getfield      #7                  // Field arrays:[[D
      47: aload_0
      48: getfield      #2                  // Field tail:I
      51: aconst_null
      52: aastore
      53: aload_1
      54: areturn
      55: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
      58: ifeq          74
      61: aload_0
      62: getfield      #5                  // Field stats:Lcom/sun/marlin/ArrayCacheConst$BucketStats;
      65: dup
      66: getfield      #10                 // Field com/sun/marlin/ArrayCacheConst$BucketStats.createOp:I
      69: iconst_1
      70: iadd
      71: putfield      #10                 // Field com/sun/marlin/ArrayCacheConst$BucketStats.createOp:I
      74: aload_0
      75: getfield      #3                  // Field arraySize:I
      78: invokestatic  #11                 // Method com/sun/marlin/DoubleArrayCache.createArray:(I)[D
      81: areturn

  void putArray(double[]);
    Code:
       0: getstatic     #12                 // Field com/sun/marlin/MarlinConst.DO_CHECKS:Z
       3: ifeq          33
       6: aload_1
       7: arraylength
       8: aload_0
       9: getfield      #3                  // Field arraySize:I
      12: if_icmpeq     33
      15: aload_0
      16: getfield      #4                  // Field clean:Z
      19: invokestatic  #13                 // Method com/sun/marlin/DoubleArrayCache.getLogPrefix:(Z)Ljava/lang/String;
      22: aload_1
      23: arraylength
      24: invokedynamic #14,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
      29: invokestatic  #15                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      32: return
      33: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
      36: ifeq          52
      39: aload_0
      40: getfield      #5                  // Field stats:Lcom/sun/marlin/ArrayCacheConst$BucketStats;
      43: dup
      44: getfield      #16                 // Field com/sun/marlin/ArrayCacheConst$BucketStats.returnOp:I
      47: iconst_1
      48: iadd
      49: putfield      #16                 // Field com/sun/marlin/ArrayCacheConst$BucketStats.returnOp:I
      52: aload_0
      53: getfield      #7                  // Field arrays:[[D
      56: arraylength
      57: aload_0
      58: getfield      #2                  // Field tail:I
      61: if_icmple     101
      64: aload_0
      65: getfield      #7                  // Field arrays:[[D
      68: aload_0
      69: dup
      70: getfield      #2                  // Field tail:I
      73: dup_x1
      74: iconst_1
      75: iadd
      76: putfield      #2                  // Field tail:I
      79: aload_1
      80: aastore
      81: getstatic     #8                  // Field com/sun/marlin/MarlinConst.DO_STATS:Z
      84: ifeq          122
      87: aload_0
      88: getfield      #5                  // Field stats:Lcom/sun/marlin/ArrayCacheConst$BucketStats;
      91: aload_0
      92: getfield      #2                  // Field tail:I
      95: invokevirtual #17                 // Method com/sun/marlin/ArrayCacheConst$BucketStats.updateMaxSize:(I)V
      98: goto          122
     101: getstatic     #12                 // Field com/sun/marlin/MarlinConst.DO_CHECKS:Z
     104: ifeq          122
     107: aload_0
     108: getfield      #4                  // Field clean:Z
     111: invokestatic  #13                 // Method com/sun/marlin/DoubleArrayCache.getLogPrefix:(Z)Ljava/lang/String;
     114: invokedynamic #18,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     119: invokestatic  #15                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
     122: return
}
