Compiled from "OffHeapArray.java"
final class com.sun.marlin.OffHeapArray {
  static final sun.misc.Unsafe UNSAFE;

  static final int SIZE_INT;

  long address;

  long length;

  int used;

  com.sun.marlin.OffHeapArray(java.lang.Object, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field UNSAFE:Lsun/misc/Unsafe;
       8: lload_2
       9: invokevirtual #3                  // Method sun/misc/Unsafe.allocateMemory:(J)J
      12: putfield      #4                  // Field address:J
      15: aload_0
      16: lload_2
      17: putfield      #5                  // Field length:J
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field used:I
      25: getstatic     #7                  // Field com/sun/marlin/MarlinConst.LOG_UNSAFE_MALLOC:Z
      28: ifeq          47
      31: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      34: lload_2
      35: aload_0
      36: getfield      #4                  // Field address:J
      39: invokedynamic #9,  0              // InvokeDynamic #0:makeConcatWithConstants:(JJJ)Ljava/lang/String;
      44: invokestatic  #10                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      47: invokestatic  #11                 // Method com/sun/marlin/MarlinUtils.getCleaner:()Ljava/lang/ref/Cleaner;
      50: aload_1
      51: aload_0
      52: invokedynamic #12,  0             // InvokeDynamic #1:run:(Lcom/sun/marlin/OffHeapArray;)Ljava/lang/Runnable;
      57: invokevirtual #13                 // Method java/lang/ref/Cleaner.register:(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/ref/Cleaner$Cleanable;
      60: pop
      61: return

  void resize(long);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field UNSAFE:Lsun/misc/Unsafe;
       4: aload_0
       5: getfield      #4                  // Field address:J
       8: lload_1
       9: invokevirtual #14                 // Method sun/misc/Unsafe.reallocateMemory:(JJ)J
      12: putfield      #4                  // Field address:J
      15: aload_0
      16: lload_1
      17: putfield      #5                  // Field length:J
      20: getstatic     #7                  // Field com/sun/marlin/MarlinConst.LOG_UNSAFE_MALLOC:Z
      23: ifeq          42
      26: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      29: lload_1
      30: aload_0
      31: getfield      #4                  // Field address:J
      34: invokedynamic #15,  0             // InvokeDynamic #2:makeConcatWithConstants:(JJJ)Ljava/lang/String;
      39: invokestatic  #10                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      42: return

  void free();
    Code:
       0: getstatic     #2                  // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getfield      #4                  // Field address:J
       7: invokevirtual #16                 // Method sun/misc/Unsafe.freeMemory:(J)V
      10: getstatic     #7                  // Field com/sun/marlin/MarlinConst.LOG_UNSAFE_MALLOC:Z
      13: ifeq          35
      16: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      19: aload_0
      20: getfield      #5                  // Field length:J
      23: aload_0
      24: getfield      #4                  // Field address:J
      27: invokedynamic #17,  0             // InvokeDynamic #3:makeConcatWithConstants:(JJJ)Ljava/lang/String;
      32: invokestatic  #10                 // Method com/sun/marlin/MarlinUtils.logInfo:(Ljava/lang/String;)V
      35: aload_0
      36: lconst_0
      37: putfield      #4                  // Field address:J
      40: return

  void fill(byte);
    Code:
       0: getstatic     #2                  // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getfield      #4                  // Field address:J
       7: aload_0
       8: getfield      #5                  // Field length:J
      11: iload_1
      12: invokevirtual #18                 // Method sun/misc/Unsafe.setMemory:(JJB)V
      15: return

  private void lambda$new$0();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method free:()V
       4: return

  static {};
    Code:
       0: new           #20                 // class com/sun/marlin/OffHeapArray$1
       3: dup
       4: invokespecial #21                 // Method com/sun/marlin/OffHeapArray$1."<init>":()V
       7: invokestatic  #22                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      10: checkcast     #23                 // class sun/misc/Unsafe
      13: putstatic     #2                  // Field UNSAFE:Lsun/misc/Unsafe;
      16: getstatic     #24                 // Field sun/misc/Unsafe.ARRAY_INT_INDEX_SCALE:I
      19: putstatic     #25                 // Field SIZE_INT:I
      22: return
}
