Compiled from "DCollinearSimplifier.java"
public final class com.sun.marlin.DCollinearSimplifier implements com.sun.marlin.DPathConsumer2D {
  static final double EPS;

  com.sun.marlin.DPathConsumer2D delegate;

  com.sun.marlin.DCollinearSimplifier$SimplifierState state;

  double px1;

  double py1;

  double px2;

  double py2;

  double pslope;

  com.sun.marlin.DCollinearSimplifier();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.sun.marlin.DCollinearSimplifier init(com.sun.marlin.DPathConsumer2D);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       5: aload_0
       6: getstatic     #3                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.Empty:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
       9: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      12: aload_0
      13: areturn

  public void pathDone();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method emitStashedLine:()V
       4: aload_0
       5: getstatic     #3                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.Empty:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
       8: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      11: aload_0
      12: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
      15: invokeinterface #6,  1            // InterfaceMethod com/sun/marlin/DPathConsumer2D.pathDone:()V
      20: return

  public void closePath();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method emitStashedLine:()V
       4: aload_0
       5: getstatic     #3                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.Empty:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
       8: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      11: aload_0
      12: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
      15: invokeinterface #7,  1            // InterfaceMethod com/sun/marlin/DPathConsumer2D.closePath:()V
      20: return

  public void quadTo(double, double, double, double);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method emitStashedLine:()V
       4: aload_0
       5: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       8: dload_1
       9: dload_3
      10: dload         5
      12: dload         7
      14: invokeinterface #8,  9            // InterfaceMethod com/sun/marlin/DPathConsumer2D.quadTo:(DDDD)V
      19: aload_0
      20: getstatic     #9                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.PreviousPoint:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      23: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      26: aload_0
      27: dload         5
      29: putfield      #10                 // Field px1:D
      32: aload_0
      33: dload         7
      35: putfield      #11                 // Field py1:D
      38: return

  public void curveTo(double, double, double, double, double, double);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method emitStashedLine:()V
       4: aload_0
       5: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       8: dload_1
       9: dload_3
      10: dload         5
      12: dload         7
      14: dload         9
      16: dload         11
      18: invokeinterface #12,  13          // InterfaceMethod com/sun/marlin/DPathConsumer2D.curveTo:(DDDDDD)V
      23: aload_0
      24: getstatic     #9                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.PreviousPoint:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      27: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      30: aload_0
      31: dload         9
      33: putfield      #10                 // Field px1:D
      36: aload_0
      37: dload         11
      39: putfield      #11                 // Field py1:D
      42: return

  public void moveTo(double, double);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method emitStashedLine:()V
       4: aload_0
       5: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
       8: dload_1
       9: dload_3
      10: invokeinterface #13,  5           // InterfaceMethod com/sun/marlin/DPathConsumer2D.moveTo:(DD)V
      15: aload_0
      16: getstatic     #9                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.PreviousPoint:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      19: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      22: aload_0
      23: dload_1
      24: putfield      #10                 // Field px1:D
      27: aload_0
      28: dload_3
      29: putfield      #11                 // Field py1:D
      32: return

  public void lineTo(double, double);
    Code:
       0: getstatic     #14                 // Field com/sun/marlin/DCollinearSimplifier$1.$SwitchMap$com$sun$marlin$DCollinearSimplifier$SimplifierState:[I
       3: aload_0
       4: getfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
       7: invokevirtual #15                 // Method com/sun/marlin/DCollinearSimplifier$SimplifierState.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 65
                     3: 100
               default: 203
          }
      36: aload_0
      37: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
      40: dload_1
      41: dload_3
      42: invokeinterface #16,  5           // InterfaceMethod com/sun/marlin/DPathConsumer2D.lineTo:(DD)V
      47: aload_0
      48: getstatic     #9                  // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.PreviousPoint:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      51: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      54: aload_0
      55: dload_1
      56: putfield      #10                 // Field px1:D
      59: aload_0
      60: dload_3
      61: putfield      #11                 // Field py1:D
      64: return
      65: aload_0
      66: getstatic     #17                 // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.PreviousLine:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      69: putfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
      72: aload_0
      73: dload_1
      74: putfield      #18                 // Field px2:D
      77: aload_0
      78: dload_3
      79: putfield      #19                 // Field py2:D
      82: aload_0
      83: aload_0
      84: getfield      #10                 // Field px1:D
      87: aload_0
      88: getfield      #11                 // Field py1:D
      91: dload_1
      92: dload_3
      93: invokestatic  #20                 // Method getSlope:(DDDD)D
      96: putfield      #21                 // Field pslope:D
      99: return
     100: aload_0
     101: getfield      #18                 // Field px2:D
     104: aload_0
     105: getfield      #19                 // Field py2:D
     108: dload_1
     109: dload_3
     110: invokestatic  #20                 // Method getSlope:(DDDD)D
     113: dstore        5
     115: dload         5
     117: aload_0
     118: getfield      #21                 // Field pslope:D
     121: dcmpl
     122: ifeq          142
     125: aload_0
     126: getfield      #21                 // Field pslope:D
     129: dload         5
     131: dsub
     132: invokestatic  #22                 // Method java/lang/Math.abs:(D)D
     135: ldc2_w        #24                 // double 1.0E-4d
     138: dcmpg
     139: ifge          153
     142: aload_0
     143: dload_1
     144: putfield      #18                 // Field px2:D
     147: aload_0
     148: dload_3
     149: putfield      #19                 // Field py2:D
     152: return
     153: aload_0
     154: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
     157: aload_0
     158: getfield      #18                 // Field px2:D
     161: aload_0
     162: getfield      #19                 // Field py2:D
     165: invokeinterface #16,  5           // InterfaceMethod com/sun/marlin/DPathConsumer2D.lineTo:(DD)V
     170: aload_0
     171: aload_0
     172: getfield      #18                 // Field px2:D
     175: putfield      #10                 // Field px1:D
     178: aload_0
     179: aload_0
     180: getfield      #19                 // Field py2:D
     183: putfield      #11                 // Field py1:D
     186: aload_0
     187: dload_1
     188: putfield      #18                 // Field px2:D
     191: aload_0
     192: dload_3
     193: putfield      #19                 // Field py2:D
     196: aload_0
     197: dload         5
     199: putfield      #21                 // Field pslope:D
     202: return
     203: return

  private void emitStashedLine();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
       4: getstatic     #17                 // Field com/sun/marlin/DCollinearSimplifier$SimplifierState.PreviousLine:Lcom/sun/marlin/DCollinearSimplifier$SimplifierState;
       7: if_acmpne     27
      10: aload_0
      11: getfield      #2                  // Field delegate:Lcom/sun/marlin/DPathConsumer2D;
      14: aload_0
      15: getfield      #18                 // Field px2:D
      18: aload_0
      19: getfield      #19                 // Field py2:D
      22: invokeinterface #16,  5           // InterfaceMethod com/sun/marlin/DPathConsumer2D.lineTo:(DD)V
      27: return

  private static double getSlope(double, double, double, double);
    Code:
       0: dload         6
       2: dload_2
       3: dsub
       4: dstore        8
       6: dload         8
       8: dconst_0
       9: dcmpl
      10: ifne          30
      13: dload         4
      15: dload_0
      16: dcmpl
      17: ifle          26
      20: ldc2_w        #27                 // double Infinityd
      23: goto          29
      26: ldc2_w        #29                 // double -Infinityd
      29: dreturn
      30: dload         4
      32: dload_0
      33: dsub
      34: dload         8
      36: ddiv
      37: dreturn
}
