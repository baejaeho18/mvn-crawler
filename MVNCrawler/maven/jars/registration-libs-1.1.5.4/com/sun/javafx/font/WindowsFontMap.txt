Compiled from "WindowsFontMap.java"
class com.sun.javafx.font.WindowsFontMap {
  static java.util.HashMap<java.lang.String, com.sun.javafx.font.WindowsFontMap$FamilyDescription> platformFontMap;

  com.sun.javafx.font.WindowsFontMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.util.HashMap<java.lang.String, com.sun.javafx.font.WindowsFontMap$FamilyDescription> populateHardcodedFileNameMap();
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: new           #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
      11: dup
      12: invokespecial #5                  // Method com/sun/javafx/font/WindowsFontMap$FamilyDescription."<init>":()V
      15: astore_1
      16: aload_1
      17: ldc           #6                  // String Segoe UI
      19: putfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
      22: aload_1
      23: ldc           #6                  // String Segoe UI
      25: putfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
      28: aload_1
      29: ldc           #9                  // String segoeui.ttf
      31: putfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
      34: aload_1
      35: ldc           #11                 // String Segoe UI Bold
      37: putfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
      40: aload_1
      41: ldc           #13                 // String segoeuib.ttf
      43: putfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
      46: aload_1
      47: ldc           #15                 // String Segoe UI Italic
      49: putfield      #16                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFullName:Ljava/lang/String;
      52: aload_1
      53: ldc           #17                 // String segoeuii.ttf
      55: putfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
      58: aload_1
      59: ldc           #19                 // String Segoe UI Bold Italic
      61: putfield      #20                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFullName:Ljava/lang/String;
      64: aload_1
      65: ldc           #21                 // String segoeuiz.ttf
      67: putfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
      70: aload_0
      71: ldc           #23                 // String segoe
      73: aload_1
      74: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: new           #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
      81: dup
      82: invokespecial #5                  // Method com/sun/javafx/font/WindowsFontMap$FamilyDescription."<init>":()V
      85: astore_1
      86: aload_1
      87: ldc           #25                 // String Tahoma
      89: putfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
      92: aload_1
      93: ldc           #25                 // String Tahoma
      95: putfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
      98: aload_1
      99: ldc           #26                 // String tahoma.ttf
     101: putfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     104: aload_1
     105: ldc           #27                 // String Tahoma Bold
     107: putfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
     110: aload_1
     111: ldc           #28                 // String tahomabd.ttf
     113: putfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     116: aload_0
     117: ldc           #29                 // String tahoma
     119: aload_1
     120: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: new           #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
     127: dup
     128: invokespecial #5                  // Method com/sun/javafx/font/WindowsFontMap$FamilyDescription."<init>":()V
     131: astore_1
     132: aload_1
     133: ldc           #30                 // String Verdana
     135: putfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
     138: aload_1
     139: ldc           #30                 // String Verdana
     141: putfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
     144: aload_1
     145: ldc           #31                 // String verdana.TTF
     147: putfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     150: aload_1
     151: ldc           #32                 // String Verdana Bold
     153: putfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
     156: aload_1
     157: ldc           #33                 // String verdanab.TTF
     159: putfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     162: aload_1
     163: ldc           #34                 // String Verdana Italic
     165: putfield      #16                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFullName:Ljava/lang/String;
     168: aload_1
     169: ldc           #35                 // String verdanai.TTF
     171: putfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     174: aload_1
     175: ldc           #36                 // String Verdana Bold Italic
     177: putfield      #20                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFullName:Ljava/lang/String;
     180: aload_1
     181: ldc           #37                 // String verdanaz.TTF
     183: putfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
     186: aload_0
     187: ldc           #38                 // String verdana
     189: aload_1
     190: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     193: pop
     194: new           #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
     197: dup
     198: invokespecial #5                  // Method com/sun/javafx/font/WindowsFontMap$FamilyDescription."<init>":()V
     201: astore_1
     202: aload_1
     203: ldc           #39                 // String Arial
     205: putfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
     208: aload_1
     209: ldc           #39                 // String Arial
     211: putfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
     214: aload_1
     215: ldc           #40                 // String ARIAL.TTF
     217: putfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     220: aload_1
     221: ldc           #41                 // String Arial Bold
     223: putfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
     226: aload_1
     227: ldc           #42                 // String ARIALBD.TTF
     229: putfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     232: aload_1
     233: ldc           #43                 // String Arial Italic
     235: putfield      #16                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFullName:Ljava/lang/String;
     238: aload_1
     239: ldc           #44                 // String ARIALI.TTF
     241: putfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     244: aload_1
     245: ldc           #45                 // String Arial Bold Italic
     247: putfield      #20                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFullName:Ljava/lang/String;
     250: aload_1
     251: ldc           #46                 // String ARIALBI.TTF
     253: putfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
     256: aload_0
     257: ldc           #47                 // String arial
     259: aload_1
     260: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     263: pop
     264: new           #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
     267: dup
     268: invokespecial #5                  // Method com/sun/javafx/font/WindowsFontMap$FamilyDescription."<init>":()V
     271: astore_1
     272: aload_1
     273: ldc           #48                 // String Times New Roman
     275: putfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
     278: aload_1
     279: ldc           #48                 // String Times New Roman
     281: putfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
     284: aload_1
     285: ldc           #49                 // String times.ttf
     287: putfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     290: aload_1
     291: ldc           #50                 // String Times New Roman Bold
     293: putfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
     296: aload_1
     297: ldc           #51                 // String timesbd.ttf
     299: putfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     302: aload_1
     303: ldc           #52                 // String Times New Roman Italic
     305: putfield      #16                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFullName:Ljava/lang/String;
     308: aload_1
     309: ldc           #53                 // String timesi.ttf
     311: putfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     314: aload_1
     315: ldc           #54                 // String Times New Roman Bold Italic
     317: putfield      #20                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFullName:Ljava/lang/String;
     320: aload_1
     321: ldc           #55                 // String timesbi.ttf
     323: putfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
     326: aload_0
     327: ldc           #56                 // String times
     329: aload_1
     330: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     333: pop
     334: new           #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
     337: dup
     338: invokespecial #5                  // Method com/sun/javafx/font/WindowsFontMap$FamilyDescription."<init>":()V
     341: astore_1
     342: aload_1
     343: ldc           #57                 // String Courier New
     345: putfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
     348: aload_1
     349: ldc           #57                 // String Courier New
     351: putfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
     354: aload_1
     355: ldc           #58                 // String cour.ttf
     357: putfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     360: aload_1
     361: ldc           #59                 // String Courier New Bold
     363: putfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
     366: aload_1
     367: ldc           #60                 // String courbd.ttf
     369: putfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     372: aload_1
     373: ldc           #61                 // String Courier New Italic
     375: putfield      #16                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFullName:Ljava/lang/String;
     378: aload_1
     379: ldc           #62                 // String couri.ttf
     381: putfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     384: aload_1
     385: ldc           #63                 // String Courier New Bold Italic
     387: putfield      #20                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFullName:Ljava/lang/String;
     390: aload_1
     391: ldc           #64                 // String courbi.ttf
     393: putfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
     396: aload_0
     397: ldc           #65                 // String courier
     399: aload_1
     400: invokevirtual #24                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     403: pop
     404: aload_0
     405: areturn

  static java.lang.String getPathName(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method com/sun/javafx/font/PrismFontFactory.getPathNameWindows:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  static java.lang.String findFontFile(java.lang.String, int);
    Code:
       0: getstatic     #67                 // Field platformFontMap:Ljava/util/HashMap;
       3: ifnonnull     12
       6: invokestatic  #68                 // Method populateHardcodedFileNameMap:()Ljava/util/HashMap;
       9: putstatic     #67                 // Field platformFontMap:Ljava/util/HashMap;
      12: getstatic     #67                 // Field platformFontMap:Ljava/util/HashMap;
      15: ifnull        27
      18: getstatic     #67                 // Field platformFontMap:Ljava/util/HashMap;
      21: invokevirtual #69                 // Method java/util/HashMap.size:()I
      24: ifne          29
      27: aconst_null
      28: areturn
      29: aload_0
      30: bipush        32
      32: invokevirtual #70                 // Method java/lang/String.indexOf:(I)I
      35: istore_2
      36: aload_0
      37: astore_3
      38: iload_2
      39: ifle          49
      42: aload_0
      43: iconst_0
      44: iload_2
      45: invokevirtual #71                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      48: astore_3
      49: getstatic     #67                 // Field platformFontMap:Ljava/util/HashMap;
      52: aload_3
      53: invokevirtual #72                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #4                  // class com/sun/javafx/font/WindowsFontMap$FamilyDescription
      59: astore        4
      61: aload         4
      63: ifnonnull     68
      66: aconst_null
      67: areturn
      68: aconst_null
      69: astore        5
      71: iload_1
      72: ifge          173
      75: aload_0
      76: aload         4
      78: getfield      #8                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFullName:Ljava/lang/String;
      81: invokevirtual #73                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      84: ifeq          97
      87: aload         4
      89: getfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
      92: astore        5
      94: goto          160
      97: aload_0
      98: aload         4
     100: getfield      #12                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFullName:Ljava/lang/String;
     103: invokevirtual #73                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     106: ifeq          119
     109: aload         4
     111: getfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     114: astore        5
     116: goto          160
     119: aload_0
     120: aload         4
     122: getfield      #16                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFullName:Ljava/lang/String;
     125: invokevirtual #73                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     128: ifeq          141
     131: aload         4
     133: getfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     136: astore        5
     138: goto          160
     141: aload_0
     142: aload         4
     144: getfield      #20                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFullName:Ljava/lang/String;
     147: invokevirtual #73                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     150: ifeq          160
     153: aload         4
     155: getfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
     158: astore        5
     160: aload         5
     162: ifnull        171
     165: aload         5
     167: invokestatic  #74                 // Method getPathName:(Ljava/lang/String;)Ljava/lang/String;
     170: areturn
     171: aconst_null
     172: areturn
     173: aload_0
     174: aload         4
     176: getfield      #7                  // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.familyName:Ljava/lang/String;
     179: invokevirtual #73                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     182: ifne          187
     185: aconst_null
     186: areturn
     187: iload_1
     188: tableswitch   { // 0 to 3
                     0: 220
                     1: 230
                     2: 252
                     3: 274
               default: 317
          }
     220: aload         4
     222: getfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     225: astore        5
     227: goto          317
     230: aload         4
     232: getfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     235: astore        5
     237: aload         5
     239: ifnonnull     317
     242: aload         4
     244: getfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     247: astore        5
     249: goto          317
     252: aload         4
     254: getfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     257: astore        5
     259: aload         5
     261: ifnonnull     317
     264: aload         4
     266: getfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     269: astore        5
     271: goto          317
     274: aload         4
     276: getfield      #22                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldItalicFileName:Ljava/lang/String;
     279: astore        5
     281: aload         5
     283: ifnonnull     293
     286: aload         4
     288: getfield      #18                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.italicFileName:Ljava/lang/String;
     291: astore        5
     293: aload         5
     295: ifnonnull     305
     298: aload         4
     300: getfield      #14                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.boldFileName:Ljava/lang/String;
     303: astore        5
     305: aload         5
     307: ifnonnull     317
     310: aload         4
     312: getfield      #10                 // Field com/sun/javafx/font/WindowsFontMap$FamilyDescription.plainFileName:Ljava/lang/String;
     315: astore        5
     317: aload         5
     319: ifnull        328
     322: aload         5
     324: invokestatic  #74                 // Method getPathName:(Ljava/lang/String;)Ljava/lang/String;
     327: areturn
     328: aconst_null
     329: areturn
}
