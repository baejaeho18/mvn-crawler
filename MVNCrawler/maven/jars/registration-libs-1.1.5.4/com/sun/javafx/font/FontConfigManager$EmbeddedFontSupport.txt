Compiled from "FontConfigManager.java"
class com.sun.javafx.font.FontConfigManager$EmbeddedFontSupport {
  private static java.lang.String fontDirProp;

  private static java.lang.String fontDir;

  private static boolean fontDirFromJRE;

  static java.lang.String[] jreFontsProperties;

  private com.sun.javafx.font.FontConfigManager$EmbeddedFontSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static void initEmbeddedFonts();
    Code:
       0: ldc           #2                  // String prism.fontdir
       2: invokestatic  #3                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: putstatic     #4                  // Field fontDirProp:Ljava/lang/String;
       8: getstatic     #4                  // Field fontDirProp:Ljava/lang/String;
      11: ifnull        23
      14: getstatic     #4                  // Field fontDirProp:Ljava/lang/String;
      17: putstatic     #5                  // Field fontDir:Ljava/lang/String;
      20: goto          104
      23: ldc           #6                  // String java.home
      25: invokestatic  #3                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      28: astore_0
      29: aload_0
      30: ifnonnull     34
      33: return
      34: new           #7                  // class java/io/File
      37: dup
      38: aload_0
      39: ldc           #8                  // String lib/fonts
      41: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      44: astore_1
      45: aload_1
      46: invokevirtual #10                 // Method java/io/File.exists:()Z
      49: ifeq          63
      52: iconst_1
      53: putstatic     #11                 // Field fontDirFromJRE:Z
      56: aload_1
      57: invokevirtual #12                 // Method java/io/File.getPath:()Ljava/lang/String;
      60: putstatic     #5                  // Field fontDir:Ljava/lang/String;
      63: getstatic     #13                 // Field com/sun/javafx/font/FontConfigManager.debugFonts:Z
      66: ifeq          85
      69: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      72: aload_1
      73: aload_1
      74: invokevirtual #10                 // Method java/io/File.exists:()Z
      77: invokedynamic #15,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/io/File;Z)Ljava/lang/String;
      82: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      85: goto          104
      88: astore_0
      89: getstatic     #13                 // Field com/sun/javafx/font/FontConfigManager.debugFonts:Z
      92: ifeq          99
      95: aload_0
      96: invokevirtual #18                 // Method java/lang/Exception.printStackTrace:()V
      99: ldc           #19                 // String /
     101: putstatic     #5                  // Field fontDir:Ljava/lang/String;
     104: return
    Exception table:
       from    to  target type
          23    33    88   Class java/lang/Exception
          34    85    88   Class java/lang/Exception

  private static java.lang.String getStyleStr(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 35
                     2: 38
                     3: 41
               default: 44
          }
      32: ldc           #20                 // String regular
      34: areturn
      35: ldc           #21                 // String bold
      37: areturn
      38: ldc           #22                 // String italic
      40: areturn
      41: ldc           #23                 // String bolditalic
      43: areturn
      44: ldc           #20                 // String regular
      46: areturn

  private static boolean exists(java.io.File);
    Code:
       0: aload_0
       1: invokedynamic #24,  0             // InvokeDynamic #1:run:(Ljava/io/File;)Ljava/security/PrivilegedAction;
       6: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       9: checkcast     #26                 // class java/lang/Boolean
      12: invokevirtual #27                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  static void initLogicalFonts(com.sun.javafx.font.FontConfigManager$FcCompFont[]);
    Code:
       0: new           #28                 // class java/util/Properties
       3: dup
       4: invokespecial #29                 // Method java/util/Properties."<init>":()V
       7: astore_1
       8: new           #7                  // class java/io/File
      11: dup
      12: getstatic     #5                  // Field fontDir:Ljava/lang/String;
      15: ldc           #30                 // String logicalfonts.properties
      17: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: astore_2
      21: aload_2
      22: invokevirtual #10                 // Method java/io/File.exists:()Z
      25: ifeq          49
      28: new           #31                 // class java/io/FileInputStream
      31: dup
      32: aload_2
      33: invokespecial #32                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #33                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      42: aload_3
      43: invokevirtual #34                 // Method java/io/FileInputStream.close:()V
      46: goto          102
      49: getstatic     #11                 // Field fontDirFromJRE:Z
      52: ifeq          102
      55: iconst_0
      56: istore_3
      57: iload_3
      58: getstatic     #35                 // Field jreFontsProperties:[Ljava/lang/String;
      61: arraylength
      62: if_icmpge     88
      65: aload_1
      66: getstatic     #35                 // Field jreFontsProperties:[Ljava/lang/String;
      69: iload_3
      70: aaload
      71: getstatic     #35                 // Field jreFontsProperties:[Ljava/lang/String;
      74: iload_3
      75: iconst_1
      76: iadd
      77: aaload
      78: invokevirtual #36                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      81: pop
      82: iinc          3, 2
      85: goto          57
      88: getstatic     #13                 // Field com/sun/javafx/font/FontConfigManager.debugFonts:Z
      91: ifeq          102
      94: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      97: ldc           #37                 // String Using fallback implied logicalfonts.properties
      99: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     102: goto          120
     105: astore_2
     106: getstatic     #13                 // Field com/sun/javafx/font/FontConfigManager.debugFonts:Z
     109: ifeq          120
     112: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
     115: aload_2
     116: invokevirtual #39                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
     119: return
     120: iconst_0
     121: istore_2
     122: iload_2
     123: aload_0
     124: arraylength
     125: if_icmpge     359
     128: aload_0
     129: iload_2
     130: aaload
     131: getfield      #40                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.fcFamily:Ljava/lang/String;
     134: astore_3
     135: aload_0
     136: iload_2
     137: aaload
     138: getfield      #41                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.style:I
     141: invokestatic  #42                 // Method getStyleStr:(I)Ljava/lang/String;
     144: astore        4
     146: aload_3
     147: aload         4
     149: invokedynamic #43,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     154: astore        5
     156: new           #44                 // class java/util/ArrayList
     159: dup
     160: invokespecial #45                 // Method java/util/ArrayList."<init>":()V
     163: astore        6
     165: iconst_0
     166: istore        7
     168: aload_1
     169: aload         5
     171: iload         7
     173: invokedynamic #46,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
     178: invokevirtual #47                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     181: astore        8
     183: aload_1
     184: aload         5
     186: iload         7
     188: invokedynamic #48,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
     193: invokevirtual #47                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     196: astore        9
     198: iinc          7, 1
     201: aload         8
     203: ifnonnull     209
     206: goto          319
     209: new           #7                  // class java/io/File
     212: dup
     213: getstatic     #5                  // Field fontDir:Ljava/lang/String;
     216: aload         8
     218: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     221: astore        10
     223: aload         10
     225: invokestatic  #49                 // Method exists:(Ljava/io/File;)Z
     228: ifne          253
     231: getstatic     #13                 // Field com/sun/javafx/font/FontConfigManager.debugFonts:Z
     234: ifeq          168
     237: getstatic     #50                 // Field java/lang/System.out:Ljava/io/PrintStream;
     240: aload         10
     242: invokedynamic #51,  0             // InvokeDynamic #5:makeConcatWithConstants:(Ljava/io/File;)Ljava/lang/String;
     247: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     250: goto          168
     253: new           #52                 // class com/sun/javafx/font/FontConfigManager$FontConfigFont
     256: dup
     257: invokespecial #53                 // Method com/sun/javafx/font/FontConfigManager$FontConfigFont."<init>":()V
     260: astore        11
     262: aload         11
     264: aload         10
     266: invokevirtual #12                 // Method java/io/File.getPath:()Ljava/lang/String;
     269: putfield      #54                 // Field com/sun/javafx/font/FontConfigManager$FontConfigFont.fontFile:Ljava/lang/String;
     272: aload         11
     274: aload         9
     276: putfield      #55                 // Field com/sun/javafx/font/FontConfigManager$FontConfigFont.fullName:Ljava/lang/String;
     279: aload         11
     281: aconst_null
     282: putfield      #56                 // Field com/sun/javafx/font/FontConfigManager$FontConfigFont.familyName:Ljava/lang/String;
     285: aload         11
     287: aconst_null
     288: putfield      #57                 // Field com/sun/javafx/font/FontConfigManager$FontConfigFont.styleStr:Ljava/lang/String;
     291: aload_0
     292: iload_2
     293: aaload
     294: getfield      #58                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.firstFont:Lcom/sun/javafx/font/FontConfigManager$FontConfigFont;
     297: ifnonnull     308
     300: aload_0
     301: iload_2
     302: aaload
     303: aload         11
     305: putfield      #58                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.firstFont:Lcom/sun/javafx/font/FontConfigManager$FontConfigFont;
     308: aload         6
     310: aload         11
     312: invokevirtual #59                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     315: pop
     316: goto          168
     319: aload         6
     321: invokevirtual #60                 // Method java/util/ArrayList.size:()I
     324: ifle          353
     327: aload_0
     328: iload_2
     329: aaload
     330: aload         6
     332: invokevirtual #60                 // Method java/util/ArrayList.size:()I
     335: anewarray     #52                 // class com/sun/javafx/font/FontConfigManager$FontConfigFont
     338: putfield      #61                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.allFonts:[Lcom/sun/javafx/font/FontConfigManager$FontConfigFont;
     341: aload         6
     343: aload_0
     344: iload_2
     345: aaload
     346: getfield      #61                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.allFonts:[Lcom/sun/javafx/font/FontConfigManager$FontConfigFont;
     349: invokevirtual #62                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     352: pop
     353: iinc          2, 1
     356: goto          122
     359: return
    Exception table:
       from    to  target type
           8   102   105   Class java/io/IOException

  static void populateMaps(java.util.HashMap<java.lang.String, java.lang.String>, java.util.HashMap<java.lang.String, java.lang.String>, java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>, java.util.Locale);
    Code:
       0: new           #28                 // class java/util/Properties
       3: dup
       4: invokespecial #29                 // Method java/util/Properties."<init>":()V
       7: astore        4
       9: aload         4
      11: invokedynamic #63,  0             // InvokeDynamic #6:run:(Ljava/util/Properties;)Ljava/security/PrivilegedAction;
      16: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      19: pop
      20: aload         4
      22: invokevirtual #64                 // Method java/util/Properties.isEmpty:()Z
      25: ifne          248
      28: ldc           #66                 // int 2147483647
      30: istore        5
      32: aload         4
      34: ldc           #67                 // String maxFont
      36: ldc           #68                 // String
      38: invokevirtual #69                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      41: invokestatic  #70                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      44: istore        5
      46: goto          51
      49: astore        6
      51: iload         5
      53: ifgt          60
      56: ldc           #66                 // int 2147483647
      58: istore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: iload         5
      67: if_icmpge     248
      70: aload         4
      72: iload         6
      74: invokedynamic #72,  0             // InvokeDynamic #7:makeConcatWithConstants:(I)Ljava/lang/String;
      79: invokevirtual #47                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      82: astore        7
      84: aload         4
      86: iload         6
      88: invokedynamic #73,  0             // InvokeDynamic #8:makeConcatWithConstants:(I)Ljava/lang/String;
      93: invokevirtual #47                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      96: astore        8
      98: aload         4
     100: iload         6
     102: invokedynamic #74,  0             // InvokeDynamic #9:makeConcatWithConstants:(I)Ljava/lang/String;
     107: invokevirtual #47                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     110: astore        9
     112: aload         9
     114: ifnonnull     120
     117: goto          248
     120: new           #7                  // class java/io/File
     123: dup
     124: getstatic     #5                  // Field fontDir:Ljava/lang/String;
     127: aload         9
     129: invokespecial #9                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     132: astore        10
     134: aload         10
     136: invokestatic  #49                 // Method exists:(Ljava/io/File;)Z
     139: ifne          145
     142: goto          242
     145: aload         7
     147: ifnull        242
     150: aload         8
     152: ifnonnull     158
     155: goto          242
     158: aload         8
     160: getstatic     #75                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     163: invokevirtual #76                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     166: astore        11
     168: aload         7
     170: getstatic     #75                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     173: invokevirtual #76                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     176: astore        12
     178: aload_0
     179: aload         11
     181: aload         10
     183: invokevirtual #12                 // Method java/io/File.getPath:()Ljava/lang/String;
     186: invokevirtual #77                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     189: pop
     190: aload_1
     191: aload         11
     193: aload         7
     195: invokevirtual #77                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     198: pop
     199: aload_2
     200: aload         12
     202: invokevirtual #78                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     205: checkcast     #44                 // class java/util/ArrayList
     208: astore        13
     210: aload         13
     212: ifnonnull     234
     215: new           #44                 // class java/util/ArrayList
     218: dup
     219: iconst_4
     220: invokespecial #79                 // Method java/util/ArrayList."<init>":(I)V
     223: astore        13
     225: aload_2
     226: aload         12
     228: aload         13
     230: invokevirtual #77                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     233: pop
     234: aload         13
     236: aload         8
     238: invokevirtual #59                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     241: pop
     242: iinc          6, 1
     245: goto          63
     248: return
    Exception table:
       from    to  target type
          32    46    49   Class java/lang/NumberFormatException

  private static java.lang.Void lambda$populateMaps$2(java.util.Properties);
    Code:
       0: getstatic     #5                  // Field fontDir:Ljava/lang/String;
       3: invokedynamic #80,  0             // InvokeDynamic #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: new           #31                 // class java/io/FileInputStream
      12: dup
      13: aload_1
      14: invokespecial #81                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokevirtual #33                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      23: aload_2
      24: invokevirtual #34                 // Method java/io/FileInputStream.close:()V
      27: goto          56
      30: astore_1
      31: aload_0
      32: invokevirtual #82                 // Method java/util/Properties.clear:()V
      35: getstatic     #13                 // Field com/sun/javafx/font/FontConfigManager.debugFonts:Z
      38: ifeq          56
      41: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      44: aload_1
      45: invokevirtual #39                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      48: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      51: ldc           #83                 // String Fall back to opening the files
      53: invokevirtual #16                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      56: aconst_null
      57: areturn
    Exception table:
       from    to  target type
           0    27    30   Class java/io/IOException

  private static java.lang.Boolean lambda$exists$1(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/io/File.exists:()Z
       4: invokestatic  #84                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Void lambda$static$0();
    Code:
       0: invokestatic  #85                 // Method initEmbeddedFonts:()V
       3: aconst_null
       4: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #4                  // Field fontDirProp:Ljava/lang/String;
       4: iconst_0
       5: putstatic     #11                 // Field fontDirFromJRE:Z
       8: invokedynamic #86,  0             // InvokeDynamic #11:run:()Ljava/security/PrivilegedAction;
      13: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: pop
      17: bipush        32
      19: anewarray     #87                 // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #88                 // String sans.regular.0.font
      26: aastore
      27: dup
      28: iconst_1
      29: ldc           #89                 // String Lucida Sans Regular
      31: aastore
      32: dup
      33: iconst_2
      34: ldc           #90                 // String sans.regular.0.file
      36: aastore
      37: dup
      38: iconst_3
      39: ldc           #91                 // String LucidaSansRegular.ttf
      41: aastore
      42: dup
      43: iconst_4
      44: ldc           #92                 // String sans.bold.0.font
      46: aastore
      47: dup
      48: iconst_5
      49: ldc           #93                 // String Lucida Sans Bold
      51: aastore
      52: dup
      53: bipush        6
      55: ldc           #94                 // String sans.bold.0.file
      57: aastore
      58: dup
      59: bipush        7
      61: ldc           #95                 // String LucidaSansDemiBold.ttf
      63: aastore
      64: dup
      65: bipush        8
      67: ldc           #96                 // String monospace.regular.0.font
      69: aastore
      70: dup
      71: bipush        9
      73: ldc           #97                 // String Lucida Typewriter Regular
      75: aastore
      76: dup
      77: bipush        10
      79: ldc           #98                 // String monospace.regular.0.file
      81: aastore
      82: dup
      83: bipush        11
      85: ldc           #99                 // String LucidaTypewriterRegular.ttf
      87: aastore
      88: dup
      89: bipush        12
      91: ldc           #100                // String monospace.bold.0.font
      93: aastore
      94: dup
      95: bipush        13
      97: ldc           #101                // String Lucida Typewriter Bold
      99: aastore
     100: dup
     101: bipush        14
     103: ldc           #102                // String monospace.bold.0.file
     105: aastore
     106: dup
     107: bipush        15
     109: ldc           #103                // String LucidaTypewriterBold.ttf
     111: aastore
     112: dup
     113: bipush        16
     115: ldc           #104                // String serif.regular.0.font
     117: aastore
     118: dup
     119: bipush        17
     121: ldc           #105                // String Lucida Bright
     123: aastore
     124: dup
     125: bipush        18
     127: ldc           #106                // String serif.regular.0.file
     129: aastore
     130: dup
     131: bipush        19
     133: ldc           #107                // String LucidaBrightRegular.ttf
     135: aastore
     136: dup
     137: bipush        20
     139: ldc           #108                // String serif.bold.0.font
     141: aastore
     142: dup
     143: bipush        21
     145: ldc           #109                // String Lucida Bright Demibold
     147: aastore
     148: dup
     149: bipush        22
     151: ldc           #110                // String serif.bold.0.file
     153: aastore
     154: dup
     155: bipush        23
     157: ldc           #111                // String LucidaBrightDemiBold.ttf
     159: aastore
     160: dup
     161: bipush        24
     163: ldc           #112                // String serif.italic.0.font
     165: aastore
     166: dup
     167: bipush        25
     169: ldc           #113                // String Lucida Bright Italic
     171: aastore
     172: dup
     173: bipush        26
     175: ldc           #114                // String serif.italic.0.file
     177: aastore
     178: dup
     179: bipush        27
     181: ldc           #115                // String LucidaBrightItalic.ttf
     183: aastore
     184: dup
     185: bipush        28
     187: ldc           #116                // String serif.bolditalic.0.font
     189: aastore
     190: dup
     191: bipush        29
     193: ldc           #117                // String Lucida Bright Demibold Italic
     195: aastore
     196: dup
     197: bipush        30
     199: ldc           #118                // String serif.bolditalic.0.file
     201: aastore
     202: dup
     203: bipush        31
     205: ldc           #119                // String LucidaBrightDemiItalic.ttf
     207: aastore
     208: putstatic     #35                 // Field jreFontsProperties:[Ljava/lang/String;
     211: return
}
