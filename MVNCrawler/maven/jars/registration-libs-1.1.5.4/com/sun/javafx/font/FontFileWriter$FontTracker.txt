Compiled from "FontFileWriter.java"
class com.sun.javafx.font.FontFileWriter$FontTracker {
  public static final int MAX_FILE_SIZE;

  public static final int MAX_TOTAL_BYTES;

  static int numBytes;

  static com.sun.javafx.font.FontFileWriter$FontTracker tracker;

  private static java.util.concurrent.Semaphore cs;

  com.sun.javafx.font.FontFileWriter$FontTracker();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static synchronized com.sun.javafx.font.FontFileWriter$FontTracker getTracker();
    Code:
       0: getstatic     #3                  // Field tracker:Lcom/sun/javafx/font/FontFileWriter$FontTracker;
       3: ifnonnull     16
       6: new           #1                  // class com/sun/javafx/font/FontFileWriter$FontTracker
       9: dup
      10: invokespecial #4                  // Method "<init>":()V
      13: putstatic     #3                  // Field tracker:Lcom/sun/javafx/font/FontFileWriter$FontTracker;
      16: getstatic     #3                  // Field tracker:Lcom/sun/javafx/font/FontFileWriter$FontTracker;
      19: areturn

  public synchronized int getNumBytes();
    Code:
       0: getstatic     #5                  // Field numBytes:I
       3: ireturn

  public synchronized void addBytes(int);
    Code:
       0: getstatic     #5                  // Field numBytes:I
       3: iload_1
       4: iadd
       5: putstatic     #5                  // Field numBytes:I
       8: return

  public synchronized void subBytes(int);
    Code:
       0: getstatic     #5                  // Field numBytes:I
       3: iload_1
       4: isub
       5: putstatic     #5                  // Field numBytes:I
       8: return

  private static synchronized java.util.concurrent.Semaphore getCS();
    Code:
       0: getstatic     #6                  // Field cs:Ljava/util/concurrent/Semaphore;
       3: ifnonnull     18
       6: new           #7                  // class java/util/concurrent/Semaphore
       9: dup
      10: iconst_5
      11: iconst_1
      12: invokespecial #8                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      15: putstatic     #6                  // Field cs:Ljava/util/concurrent/Semaphore;
      18: getstatic     #6                  // Field cs:Ljava/util/concurrent/Semaphore;
      21: areturn

  public boolean acquirePermit() throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #9                  // Method getCS:()Ljava/util/concurrent/Semaphore;
       3: ldc2_w        #10                 // long 120l
       6: getstatic     #12                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       9: invokevirtual #13                 // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      12: ireturn

  public void releasePermit();
    Code:
       0: invokestatic  #9                  // Method getCS:()Ljava/util/concurrent/Semaphore;
       3: invokevirtual #14                 // Method java/util/concurrent/Semaphore.release:()V
       6: return

  public void add(java.io.File);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method com/sun/javafx/font/FontFileWriter$FontTracker$TempFileDeletionHook.add:(Ljava/io/File;)V
       4: return

  public void set(java.io.File, java.io.RandomAccessFile);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #16                 // Method com/sun/javafx/font/FontFileWriter$FontTracker$TempFileDeletionHook.set:(Ljava/io/File;Ljava/io/RandomAccessFile;)V
       5: return

  public void remove(java.io.File);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method com/sun/javafx/font/FontFileWriter$FontTracker$TempFileDeletionHook.remove:(Ljava/io/File;)V
       4: return

  static {};
    Code:
       0: aconst_null
       1: putstatic     #6                  // Field cs:Ljava/util/concurrent/Semaphore;
       4: return
}
