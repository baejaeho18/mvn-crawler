Compiled from "LogicalFont.java"
public class com.sun.javafx.font.LogicalFont implements com.sun.javafx.font.CompositeFontResource {
  public static final java.lang.String SYSTEM;

  public static final java.lang.String SERIF;

  public static final java.lang.String SANS_SERIF;

  public static final java.lang.String MONOSPACED;

  public static final java.lang.String STYLE_REGULAR;

  public static final java.lang.String STYLE_BOLD;

  public static final java.lang.String STYLE_ITALIC;

  public static final java.lang.String STYLE_BOLD_ITALIC;

  static final java.util.HashMap<java.lang.String, java.lang.String> canonicalFamilyMap;

  static com.sun.javafx.font.LogicalFont[] logicalFonts;

  boolean isBold;

  boolean isItalic;

  private java.lang.String fullName;

  private java.lang.String familyName;

  private java.lang.String styleName;

  private java.lang.String physicalFamily;

  private java.lang.String physicalFullName;

  private java.lang.String physicalFileName;

  private com.sun.javafx.font.FontResource slot0FontResource;

  private java.util.ArrayList<java.lang.String> linkedFontFiles;

  private java.util.ArrayList<java.lang.String> linkedFontNames;

  private com.sun.javafx.font.FontResource[] fallbacks;

  private com.sun.javafx.font.FontResource[] nativeFallbacks;

  com.sun.javafx.font.CompositeGlyphMapper mapper;

  java.util.Map<com.sun.javafx.font.FontStrikeDesc, java.lang.ref.WeakReference<com.sun.javafx.font.FontStrike>> strikeMap;

  private static final int SANS_SERIF_INDEX;

  private static final int SERIF_INDEX;

  private static final int MONOSPACED_INDEX;

  private static final int SYSTEM_INDEX;

  static java.lang.String[][] logFamilies;

  private int hash;

  static boolean isLogicalFont(java.lang.String);
    Code:
       0: aload_0
       1: bipush        32
       3: invokevirtual #1                  // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: iconst_m1
       9: if_icmpeq     19
      12: aload_0
      13: iconst_0
      14: iload_1
      15: invokevirtual #2                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      18: astore_0
      19: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      22: aload_0
      23: invokevirtual #4                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: ifnull        33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private static java.lang.String getCanonicalFamilyName(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #6                  // String SansSerif
       6: areturn
       7: aload_0
       8: invokevirtual #7                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      11: astore_1
      12: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      15: aload_1
      16: invokevirtual #4                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #8                  // class java/lang/String
      22: areturn

  static com.sun.javafx.font.PGFont getLogicalFont(java.lang.String, boolean, boolean, float);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method getCanonicalFamilyName:(Ljava/lang/String;)Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: iconst_0
      14: istore        5
      16: aload         4
      18: ldc           #6                  // String SansSerif
      20: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          32
      26: iconst_0
      27: istore        5
      29: goto          69
      32: aload         4
      34: ldc           #11                 // String Serif
      36: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          48
      42: iconst_4
      43: istore        5
      45: goto          69
      48: aload         4
      50: ldc           #12                 // String Monospaced
      52: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          65
      58: bipush        8
      60: istore        5
      62: goto          69
      65: bipush        12
      67: istore        5
      69: iload_1
      70: ifeq          76
      73: iinc          5, 1
      76: iload_2
      77: ifeq          83
      80: iinc          5, 2
      83: getstatic     #13                 // Field logicalFonts:[Lcom/sun/javafx/font/LogicalFont;
      86: iload         5
      88: aaload
      89: astore        6
      91: aload         6
      93: ifnonnull     117
      96: new           #5                  // class com/sun/javafx/font/LogicalFont
      99: dup
     100: aload         4
     102: iload_1
     103: iload_2
     104: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ZZ)V
     107: astore        6
     109: getstatic     #13                 // Field logicalFonts:[Lcom/sun/javafx/font/LogicalFont;
     112: iload         5
     114: aload         6
     116: aastore
     117: new           #15                 // class com/sun/javafx/font/PrismFont
     120: dup
     121: aload         6
     123: aload         6
     125: invokevirtual #16                 // Method getFullName:()Ljava/lang/String;
     128: fload_3
     129: invokespecial #17                 // Method com/sun/javafx/font/PrismFont."<init>":(Lcom/sun/javafx/font/FontResource;Ljava/lang/String;F)V
     132: areturn

  static com.sun.javafx.font.PGFont getLogicalFont(java.lang.String, float);
    Code:
       0: aload_0
       1: bipush        32
       3: invokevirtual #1                  // Method java/lang/String.indexOf:(I)I
       6: istore_2
       7: iload_2
       8: iconst_m1
       9: if_icmpeq     22
      12: iload_2
      13: aload_0
      14: invokevirtual #18                 // Method java/lang/String.length:()I
      17: iconst_1
      18: isub
      19: if_icmpne     24
      22: aconst_null
      23: areturn
      24: aload_0
      25: iconst_0
      26: iload_2
      27: invokevirtual #2                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      30: astore_3
      31: aload_3
      32: invokestatic  #9                  // Method getCanonicalFamilyName:(Ljava/lang/String;)Ljava/lang/String;
      35: astore        4
      37: aload         4
      39: ifnonnull     44
      42: aconst_null
      43: areturn
      44: aload_0
      45: iload_2
      46: iconst_1
      47: iadd
      48: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: invokevirtual #7                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      54: astore        5
      56: iconst_0
      57: istore        6
      59: iconst_0
      60: istore        7
      62: aload         5
      64: ldc           #20                 // String regular
      66: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      69: ifeq          75
      72: goto          128
      75: aload         5
      77: ldc           #21                 // String bold
      79: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          91
      85: iconst_1
      86: istore        6
      88: goto          128
      91: aload         5
      93: ldc           #22                 // String italic
      95: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          107
     101: iconst_1
     102: istore        7
     104: goto          128
     107: aload         5
     109: ldc           #23                 // String bold italic
     111: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     114: ifeq          126
     117: iconst_1
     118: istore        6
     120: iconst_1
     121: istore        7
     123: goto          128
     126: aconst_null
     127: areturn
     128: aload         4
     130: iload         6
     132: iload         7
     134: fload_1
     135: invokestatic  #24                 // Method getLogicalFont:(Ljava/lang/String;ZZF)Lcom/sun/javafx/font/PGFont;
     138: areturn

  private com.sun.javafx.font.LogicalFont(java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #26                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #27                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #28                 // Field strikeMap:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #29                 // Field familyName:Ljava/lang/String;
      20: aload_0
      21: iload_2
      22: putfield      #30                 // Field isBold:Z
      25: aload_0
      26: iload_3
      27: putfield      #31                 // Field isItalic:Z
      30: iload_2
      31: ifne          47
      34: iload_3
      35: ifne          47
      38: aload_0
      39: ldc           #32                 // String Regular
      41: putfield      #33                 // Field styleName:Ljava/lang/String;
      44: goto          87
      47: iload_2
      48: ifeq          64
      51: iload_3
      52: ifne          64
      55: aload_0
      56: ldc           #34                 // String Bold
      58: putfield      #33                 // Field styleName:Ljava/lang/String;
      61: goto          87
      64: iload_2
      65: ifne          81
      68: iload_3
      69: ifeq          81
      72: aload_0
      73: ldc           #35                 // String Italic
      75: putfield      #33                 // Field styleName:Ljava/lang/String;
      78: goto          87
      81: aload_0
      82: ldc           #36                 // String Bold Italic
      84: putfield      #33                 // Field styleName:Ljava/lang/String;
      87: aload_0
      88: aload_0
      89: getfield      #29                 // Field familyName:Ljava/lang/String;
      92: aload_0
      93: getfield      #33                 // Field styleName:Ljava/lang/String;
      96: invokedynamic #37,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     101: putfield      #38                 // Field fullName:Ljava/lang/String;
     104: getstatic     #39                 // Field com/sun/javafx/font/PrismFontFactory.isLinux:Z
     107: ifeq          145
     110: aload_1
     111: iload_2
     112: iload_3
     113: invokestatic  #40                 // Method com/sun/javafx/font/FontConfigManager.getFontConfigFont:(Ljava/lang/String;ZZ)Lcom/sun/javafx/font/FontConfigManager$FcCompFont;
     116: astore        4
     118: aload_0
     119: aload         4
     121: getfield      #41                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.firstFont:Lcom/sun/javafx/font/FontConfigManager$FontConfigFont;
     124: getfield      #42                 // Field com/sun/javafx/font/FontConfigManager$FontConfigFont.fullName:Ljava/lang/String;
     127: putfield      #43                 // Field physicalFullName:Ljava/lang/String;
     130: aload_0
     131: aload         4
     133: getfield      #41                 // Field com/sun/javafx/font/FontConfigManager$FcCompFont.firstFont:Lcom/sun/javafx/font/FontConfigManager$FontConfigFont;
     136: getfield      #44                 // Field com/sun/javafx/font/FontConfigManager$FontConfigFont.fontFile:Ljava/lang/String;
     139: putfield      #45                 // Field physicalFileName:Ljava/lang/String;
     142: goto          156
     145: aload_0
     146: aload_0
     147: getfield      #29                 // Field familyName:Ljava/lang/String;
     150: invokestatic  #46                 // Method com/sun/javafx/font/PrismFontFactory.getSystemFont:(Ljava/lang/String;)Ljava/lang/String;
     153: putfield      #47                 // Field physicalFamily:Ljava/lang/String;
     156: return

  private com.sun.javafx.font.FontResource getSlot0Resource();
    Code:
       0: aload_0
       1: getfield      #48                 // Field slot0FontResource:Lcom/sun/javafx/font/FontResource;
       4: ifnonnull     75
       7: invokestatic  #49                 // Method com/sun/javafx/font/PrismFontFactory.getFontFactory:()Lcom/sun/javafx/font/PrismFontFactory;
      10: astore_1
      11: aload_0
      12: getfield      #47                 // Field physicalFamily:Ljava/lang/String;
      15: ifnull        42
      18: aload_0
      19: aload_1
      20: aload_0
      21: getfield      #47                 // Field physicalFamily:Ljava/lang/String;
      24: aload_0
      25: getfield      #30                 // Field isBold:Z
      28: aload_0
      29: getfield      #31                 // Field isItalic:Z
      32: iconst_0
      33: invokevirtual #50                 // Method com/sun/javafx/font/PrismFontFactory.getFontResource:(Ljava/lang/String;ZZZ)Lcom/sun/javafx/font/FontResource;
      36: putfield      #48                 // Field slot0FontResource:Lcom/sun/javafx/font/FontResource;
      39: goto          59
      42: aload_0
      43: aload_1
      44: aload_0
      45: getfield      #43                 // Field physicalFullName:Ljava/lang/String;
      48: aload_0
      49: getfield      #45                 // Field physicalFileName:Ljava/lang/String;
      52: iconst_0
      53: invokevirtual #51                 // Method com/sun/javafx/font/PrismFontFactory.getFontResource:(Ljava/lang/String;Ljava/lang/String;Z)Lcom/sun/javafx/font/FontResource;
      56: putfield      #48                 // Field slot0FontResource:Lcom/sun/javafx/font/FontResource;
      59: aload_0
      60: getfield      #48                 // Field slot0FontResource:Lcom/sun/javafx/font/FontResource;
      63: ifnonnull     75
      66: aload_0
      67: aload_1
      68: iconst_0
      69: invokevirtual #52                 // Method com/sun/javafx/font/PrismFontFactory.getDefaultFontResource:(Z)Lcom/sun/javafx/font/FontResource;
      72: putfield      #48                 // Field slot0FontResource:Lcom/sun/javafx/font/FontResource;
      75: aload_0
      76: getfield      #48                 // Field slot0FontResource:Lcom/sun/javafx/font/FontResource;
      79: areturn

  private void getLinkedFonts();
    Code:
       0: aload_0
       1: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
       4: ifnonnull     85
       7: getstatic     #39                 // Field com/sun/javafx/font/PrismFontFactory.isLinux:Z
      10: ifeq          50
      13: aload_0
      14: getfield      #29                 // Field familyName:Ljava/lang/String;
      17: aload_0
      18: getfield      #30                 // Field isBold:Z
      21: aload_0
      22: getfield      #31                 // Field isItalic:Z
      25: invokestatic  #40                 // Method com/sun/javafx/font/FontConfigManager.getFontConfigFont:(Ljava/lang/String;ZZ)Lcom/sun/javafx/font/FontConfigManager$FcCompFont;
      28: astore_2
      29: aload_0
      30: aload_2
      31: iconst_1
      32: invokestatic  #54                 // Method com/sun/javafx/font/FontConfigManager.getFileNames:(Lcom/sun/javafx/font/FontConfigManager$FcCompFont;Z)Ljava/util/ArrayList;
      35: putfield      #55                 // Field linkedFontFiles:Ljava/util/ArrayList;
      38: aload_0
      39: aload_2
      40: iconst_1
      41: invokestatic  #56                 // Method com/sun/javafx/font/FontConfigManager.getFontNames:(Lcom/sun/javafx/font/FontConfigManager$FcCompFont;Z)Ljava/util/ArrayList;
      44: putfield      #57                 // Field linkedFontNames:Ljava/util/ArrayList;
      47: goto          71
      50: ldc           #58                 // String Tahoma
      52: iconst_1
      53: invokestatic  #59                 // Method com/sun/javafx/font/PrismFontFactory.getLinkedFonts:(Ljava/lang/String;Z)[Ljava/util/ArrayList;
      56: astore_1
      57: aload_0
      58: aload_1
      59: iconst_0
      60: aaload
      61: putfield      #55                 // Field linkedFontFiles:Ljava/util/ArrayList;
      64: aload_0
      65: aload_1
      66: iconst_1
      67: aaload
      68: putfield      #57                 // Field linkedFontNames:Ljava/util/ArrayList;
      71: aload_0
      72: aload_0
      73: getfield      #55                 // Field linkedFontFiles:Ljava/util/ArrayList;
      76: invokevirtual #60                 // Method java/util/ArrayList.size:()I
      79: anewarray     #61                 // class com/sun/javafx/font/FontResource
      82: putfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      85: return

  public int getNumSlots();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method getLinkedFonts:()V
       4: aload_0
       5: getfield      #55                 // Field linkedFontFiles:Ljava/util/ArrayList;
       8: invokevirtual #60                 // Method java/util/ArrayList.size:()I
      11: istore_1
      12: aload_0
      13: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      16: ifnull        27
      19: iload_1
      20: aload_0
      21: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      24: arraylength
      25: iadd
      26: istore_1
      27: iload_1
      28: iconst_1
      29: iadd
      30: ireturn

  public int getSlotForFont(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #62                 // Method getLinkedFonts:()V
       4: iconst_1
       5: istore_2
       6: aload_0
       7: getfield      #57                 // Field linkedFontNames:Ljava/util/ArrayList;
      10: invokevirtual #64                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          51
      23: aload_3
      24: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #8                  // class java/lang/String
      32: astore        4
      34: aload_1
      35: aload         4
      37: invokevirtual #67                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      40: ifeq          45
      43: iload_2
      44: ireturn
      45: iinc          2, 1
      48: goto          14
      51: aload_0
      52: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      55: ifnull        108
      58: aload_0
      59: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      62: astore_3
      63: aload_3
      64: arraylength
      65: istore        4
      67: iconst_0
      68: istore        5
      70: iload         5
      72: iload         4
      74: if_icmpge     108
      77: aload_3
      78: iload         5
      80: aaload
      81: astore        6
      83: aload_1
      84: aload         6
      86: invokeinterface #68,  1           // InterfaceMethod com/sun/javafx/font/FontResource.getFullName:()Ljava/lang/String;
      91: invokevirtual #67                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      94: ifeq          99
      97: iload_2
      98: ireturn
      99: iinc          2, 1
     102: iinc          5, 1
     105: goto          70
     108: iload_2
     109: bipush        126
     111: if_icmplt     130
     114: getstatic     #69                 // Field com/sun/javafx/font/PrismFontFactory.debugFonts:Z
     117: ifeq          128
     120: getstatic     #70                 // Field java/lang/System.err:Ljava/io/PrintStream;
     123: ldc           #71                 // String \tToo many font fallbacks!
     125: invokevirtual #72                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     128: iconst_m1
     129: ireturn
     130: invokestatic  #49                 // Method com/sun/javafx/font/PrismFontFactory.getFontFactory:()Lcom/sun/javafx/font/PrismFontFactory;
     133: astore_3
     134: aload_3
     135: aload_1
     136: aconst_null
     137: iconst_0
     138: invokevirtual #51                 // Method com/sun/javafx/font/PrismFontFactory.getFontResource:(Ljava/lang/String;Ljava/lang/String;Z)Lcom/sun/javafx/font/FontResource;
     141: astore        4
     143: aload         4
     145: ifnonnull     168
     148: getstatic     #69                 // Field com/sun/javafx/font/PrismFontFactory.debugFonts:Z
     151: ifeq          166
     154: getstatic     #70                 // Field java/lang/System.err:Ljava/io/PrintStream;
     157: aload_1
     158: invokedynamic #73,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     163: invokevirtual #72                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     166: iconst_m1
     167: ireturn
     168: aload_0
     169: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     172: ifnonnull     184
     175: iconst_1
     176: anewarray     #61                 // class com/sun/javafx/font/FontResource
     179: astore        5
     181: goto          212
     184: aload_0
     185: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     188: arraylength
     189: iconst_1
     190: iadd
     191: anewarray     #61                 // class com/sun/javafx/font/FontResource
     194: astore        5
     196: aload_0
     197: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     200: iconst_0
     201: aload         5
     203: iconst_0
     204: aload_0
     205: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     208: arraylength
     209: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     212: aload         5
     214: aload         5
     216: arraylength
     217: iconst_1
     218: isub
     219: aload         4
     221: aastore
     222: aload_0
     223: aload         5
     225: putfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     228: iload_2
     229: ireturn

  public com.sun.javafx.font.FontResource getSlotResource(int);
    Code:
       0: iload_1
       1: ifne          9
       4: aload_0
       5: invokespecial #75                 // Method getSlot0Resource:()Lcom/sun/javafx/font/FontResource;
       8: areturn
       9: aload_0
      10: invokespecial #62                 // Method getLinkedFonts:()V
      13: iload_1
      14: iconst_1
      15: isub
      16: istore_1
      17: iload_1
      18: aload_0
      19: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      22: arraylength
      23: if_icmplt     59
      26: iload_1
      27: aload_0
      28: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      31: arraylength
      32: isub
      33: istore_1
      34: aload_0
      35: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      38: ifnull        50
      41: iload_1
      42: aload_0
      43: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      46: arraylength
      47: if_icmplt     52
      50: aconst_null
      51: areturn
      52: aload_0
      53: getfield      #63                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      56: iload_1
      57: aaload
      58: areturn
      59: aload_0
      60: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      63: iload_1
      64: aaload
      65: ifnonnull     126
      68: aload_0
      69: getfield      #55                 // Field linkedFontFiles:Ljava/util/ArrayList;
      72: iload_1
      73: invokevirtual #76                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      76: checkcast     #8                  // class java/lang/String
      79: astore_2
      80: aload_0
      81: getfield      #57                 // Field linkedFontNames:Ljava/util/ArrayList;
      84: iload_1
      85: invokevirtual #76                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      88: checkcast     #8                  // class java/lang/String
      91: astore_3
      92: aload_0
      93: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      96: iload_1
      97: invokestatic  #49                 // Method com/sun/javafx/font/PrismFontFactory.getFontFactory:()Lcom/sun/javafx/font/PrismFontFactory;
     100: aload_3
     101: aload_2
     102: iconst_0
     103: invokevirtual #51                 // Method com/sun/javafx/font/PrismFontFactory.getFontResource:(Ljava/lang/String;Ljava/lang/String;Z)Lcom/sun/javafx/font/FontResource;
     106: aastore
     107: aload_0
     108: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
     111: iload_1
     112: aaload
     113: ifnonnull     126
     116: aload_0
     117: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
     120: iload_1
     121: aload_0
     122: invokespecial #75                 // Method getSlot0Resource:()Lcom/sun/javafx/font/FontResource;
     125: aastore
     126: aload_0
     127: getfield      #53                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
     130: iload_1
     131: aaload
     132: areturn

  public java.lang.String getFullName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field fullName:Ljava/lang/String;
       4: areturn

  public java.lang.String getPSName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field fullName:Ljava/lang/String;
       4: areturn

  public java.lang.String getFamilyName();
    Code:
       0: aload_0
       1: getfield      #29                 // Field familyName:Ljava/lang/String;
       4: areturn

  public java.lang.String getStyleName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field styleName:Ljava/lang/String;
       4: areturn

  public java.lang.String getLocaleFullName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field fullName:Ljava/lang/String;
       4: areturn

  public java.lang.String getLocaleFamilyName();
    Code:
       0: aload_0
       1: getfield      #29                 // Field familyName:Ljava/lang/String;
       4: areturn

  public java.lang.String getLocaleStyleName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field styleName:Ljava/lang/String;
       4: areturn

  public boolean isBold();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
       5: invokeinterface #78,  1           // InterfaceMethod com/sun/javafx/font/FontResource.isBold:()Z
      10: ireturn

  public boolean isItalic();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
       5: invokeinterface #79,  1           // InterfaceMethod com/sun/javafx/font/FontResource.isItalic:()Z
      10: ireturn

  public java.lang.String getFileName();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
       5: invokeinterface #80,  1           // InterfaceMethod com/sun/javafx/font/FontResource.getFileName:()Ljava/lang/String;
      10: areturn

  public int getFeatures();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
       5: invokeinterface #81,  1           // InterfaceMethod com/sun/javafx/font/FontResource.getFeatures:()I
      10: ireturn

  public java.lang.Object getPeer();
    Code:
       0: aconst_null
       1: areturn

  public boolean isEmbeddedFont();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
       5: invokeinterface #82,  1           // InterfaceMethod com/sun/javafx/font/FontResource.isEmbeddedFont:()Z
      10: ireturn

  public void setPeer(java.lang.Object);
    Code:
       0: new           #83                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #84                 // String Not supported
       6: invokespecial #85                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public float[] getGlyphBoundingBox(int, float, float[]);
    Code:
       0: iload_1
       1: bipush        24
       3: iushr
       4: istore        4
       6: iload_1
       7: ldc           #87                 // int 16777215
       9: iand
      10: istore        5
      12: aload_0
      13: iload         4
      15: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
      18: astore        6
      20: aload         6
      22: iload         5
      24: fload_2
      25: aload_3
      26: invokeinterface #88,  4           // InterfaceMethod com/sun/javafx/font/FontResource.getGlyphBoundingBox:(IF[F)[F
      31: areturn

  public float getAdvance(int, float);
    Code:
       0: iload_1
       1: bipush        24
       3: iushr
       4: istore_3
       5: iload_1
       6: ldc           #87                 // int 16777215
       8: iand
       9: istore        4
      11: aload_0
      12: iload_3
      13: invokevirtual #77                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
      16: astore        5
      18: aload         5
      20: iload         4
      22: fload_2
      23: invokeinterface #89,  3           // InterfaceMethod com/sun/javafx/font/FontResource.getAdvance:(IF)F
      28: freturn

  public com.sun.javafx.font.CharToGlyphMapper getGlyphMapper();
    Code:
       0: aload_0
       1: getfield      #90                 // Field mapper:Lcom/sun/javafx/font/CompositeGlyphMapper;
       4: ifnonnull     19
       7: aload_0
       8: new           #86                 // class com/sun/javafx/font/CompositeGlyphMapper
      11: dup
      12: aload_0
      13: invokespecial #91                 // Method com/sun/javafx/font/CompositeGlyphMapper."<init>":(Lcom/sun/javafx/font/CompositeFontResource;)V
      16: putfield      #90                 // Field mapper:Lcom/sun/javafx/font/CompositeGlyphMapper;
      19: aload_0
      20: getfield      #90                 // Field mapper:Lcom/sun/javafx/font/CompositeGlyphMapper;
      23: areturn

  public java.util.Map<com.sun.javafx.font.FontStrikeDesc, java.lang.ref.WeakReference<com.sun.javafx.font.FontStrike>> getStrikeMap();
    Code:
       0: aload_0
       1: getfield      #28                 // Field strikeMap:Ljava/util/Map;
       4: areturn

  public int getDefaultAAMode();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method getSlot0Resource:()Lcom/sun/javafx/font/FontResource;
       4: invokeinterface #92,  1           // InterfaceMethod com/sun/javafx/font/FontResource.getDefaultAAMode:()I
       9: ireturn

  public com.sun.javafx.font.FontStrike getStrike(float, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: fload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #93                 // Method getDefaultAAMode:()I
       7: invokevirtual #94                 // Method getStrike:(FLcom/sun/javafx/geom/transform/BaseTransform;I)Lcom/sun/javafx/font/FontStrike;
      10: areturn

  public com.sun.javafx.font.FontStrike getStrike(float, com.sun.javafx.geom.transform.BaseTransform, int);
    Code:
       0: new           #95                 // class com/sun/javafx/font/FontStrikeDesc
       3: dup
       4: fload_1
       5: aload_2
       6: iload_3
       7: invokespecial #96                 // Method com/sun/javafx/font/FontStrikeDesc."<init>":(FLcom/sun/javafx/geom/transform/BaseTransform;I)V
      10: astore        4
      12: aload_0
      13: getfield      #28                 // Field strikeMap:Ljava/util/Map;
      16: aload         4
      18: invokeinterface #97,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #98                 // class java/lang/ref/WeakReference
      26: astore        5
      28: aconst_null
      29: astore        6
      31: aload         5
      33: ifnull        46
      36: aload         5
      38: invokevirtual #99                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      41: checkcast     #100                // class com/sun/javafx/font/CompositeStrike
      44: astore        6
      46: aload         6
      48: ifnonnull     114
      51: new           #100                // class com/sun/javafx/font/CompositeStrike
      54: dup
      55: aload_0
      56: fload_1
      57: aload_2
      58: iload_3
      59: aload         4
      61: invokespecial #101                // Method com/sun/javafx/font/CompositeStrike."<init>":(Lcom/sun/javafx/font/CompositeFontResource;FLcom/sun/javafx/geom/transform/BaseTransform;ILcom/sun/javafx/font/FontStrikeDesc;)V
      64: astore        6
      66: aload         6
      68: getfield      #102                // Field com/sun/javafx/font/CompositeStrike.disposer:Lcom/sun/javafx/font/DisposerRecord;
      71: ifnull        89
      74: aload         6
      76: aload         6
      78: getfield      #102                // Field com/sun/javafx/font/CompositeStrike.disposer:Lcom/sun/javafx/font/DisposerRecord;
      81: invokestatic  #103                // Method com/sun/javafx/font/Disposer.addRecord:(Ljava/lang/Object;Lcom/sun/javafx/font/DisposerRecord;)Ljava/lang/ref/WeakReference;
      84: astore        5
      86: goto          100
      89: new           #98                 // class java/lang/ref/WeakReference
      92: dup
      93: aload         6
      95: invokespecial #104                // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      98: astore        5
     100: aload_0
     101: getfield      #28                 // Field strikeMap:Ljava/util/Map;
     104: aload         4
     106: aload         5
     108: invokeinterface #105,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload         6
     116: areturn

  private static void buildFamily(java.lang.String[], java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokedynamic #106,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       8: aastore
       9: aload_0
      10: iconst_1
      11: aload_1
      12: invokedynamic #107,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      17: aastore
      18: aload_0
      19: iconst_2
      20: aload_1
      21: invokedynamic #108,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      26: aastore
      27: aload_0
      28: iconst_3
      29: aload_1
      30: invokedynamic #109,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      35: aastore
      36: return

  private static void buildFamilies();
    Code:
       0: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
       3: ifnonnull     49
       6: iconst_4
       7: iconst_4
       8: multianewarray #111,  2           // class "[[Ljava/lang/String;"
      12: astore_0
      13: aload_0
      14: iconst_0
      15: aaload
      16: ldc           #6                  // String SansSerif
      18: invokestatic  #112                // Method buildFamily:([Ljava/lang/String;Ljava/lang/String;)V
      21: aload_0
      22: iconst_1
      23: aaload
      24: ldc           #11                 // String Serif
      26: invokestatic  #112                // Method buildFamily:([Ljava/lang/String;Ljava/lang/String;)V
      29: aload_0
      30: iconst_2
      31: aaload
      32: ldc           #12                 // String Monospaced
      34: invokestatic  #112                // Method buildFamily:([Ljava/lang/String;Ljava/lang/String;)V
      37: aload_0
      38: iconst_3
      39: aaload
      40: ldc           #113                // String System
      42: invokestatic  #112                // Method buildFamily:([Ljava/lang/String;Ljava/lang/String;)V
      45: aload_0
      46: putstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      49: return

  static void addFamilies(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #6                  // String SansSerif
       3: invokevirtual #114                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       6: pop
       7: aload_0
       8: ldc           #11                 // String Serif
      10: invokevirtual #114                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: ldc           #12                 // String Monospaced
      17: invokevirtual #114                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_0
      22: ldc           #113                // String System
      24: invokevirtual #114                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  static void addFullNames(java.util.ArrayList<java.lang.String>);
    Code:
       0: invokestatic  #115                // Method buildFamilies:()V
       3: iconst_0
       4: istore_1
       5: iload_1
       6: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
       9: arraylength
      10: if_icmpge     49
      13: iconst_0
      14: istore_2
      15: iload_2
      16: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      19: iload_1
      20: aaload
      21: arraylength
      22: if_icmpge     43
      25: aload_0
      26: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      29: iload_1
      30: aaload
      31: iload_2
      32: aaload
      33: invokevirtual #114                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      36: pop
      37: iinc          2, 1
      40: goto          15
      43: iinc          1, 1
      46: goto          5
      49: return

  static java.lang.String[] getFontsInFamily(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method getCanonicalFamilyName:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: invokestatic  #115                // Method buildFamilies:()V
      14: aload_1
      15: ldc           #6                  // String SansSerif
      17: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          29
      23: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      26: iconst_0
      27: aaload
      28: areturn
      29: aload_1
      30: ldc           #11                 // String Serif
      32: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          44
      38: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      41: iconst_1
      42: aaload
      43: areturn
      44: aload_1
      45: ldc           #12                 // String Monospaced
      47: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          59
      53: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      56: iconst_2
      57: aaload
      58: areturn
      59: getstatic     #110                // Field logFamilies:[[Ljava/lang/String;
      62: iconst_3
      63: aaload
      64: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: instanceof    #5                  // class com/sun/javafx/font/LogicalFont
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: checkcast     #5                  // class com/sun/javafx/font/LogicalFont
      19: astore_2
      20: aload_0
      21: getfield      #38                 // Field fullName:Ljava/lang/String;
      24: aload_2
      25: getfield      #38                 // Field fullName:Ljava/lang/String;
      28: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #116                // Field hash:I
       4: ifeq          12
       7: aload_0
       8: getfield      #116                // Field hash:I
      11: ireturn
      12: aload_0
      13: aload_0
      14: getfield      #38                 // Field fullName:Ljava/lang/String;
      17: invokevirtual #117                // Method java/lang/String.hashCode:()I
      20: putfield      #116                // Field hash:I
      23: aload_0
      24: getfield      #116                // Field hash:I
      27: ireturn

  static {};
    Code:
       0: new           #118                // class java/util/HashMap
       3: dup
       4: invokespecial #119                // Method java/util/HashMap."<init>":()V
       7: putstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      10: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      13: ldc           #120                // String system
      15: ldc           #113                // String System
      17: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      24: ldc           #122                // String serif
      26: ldc           #11                 // String Serif
      28: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      35: ldc           #123                // String sansserif
      37: ldc           #6                  // String SansSerif
      39: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      46: ldc           #124                // String sans-serif
      48: ldc           #6                  // String SansSerif
      50: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      57: ldc           #125                // String dialog
      59: ldc           #6                  // String SansSerif
      61: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      68: ldc           #126                // String default
      70: ldc           #6                  // String SansSerif
      72: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      79: ldc           #127                // String monospaced
      81: ldc           #12                 // String Monospaced
      83: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
      90: ldc           #128                // String monospace
      92: ldc           #12                 // String Monospaced
      94: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: getstatic     #3                  // Field canonicalFamilyMap:Ljava/util/HashMap;
     101: ldc           #129                // String dialoginput
     103: ldc           #12                 // String Monospaced
     105: invokevirtual #121                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: bipush        16
     111: anewarray     #5                  // class com/sun/javafx/font/LogicalFont
     114: putstatic     #13                 // Field logicalFonts:[Lcom/sun/javafx/font/LogicalFont;
     117: aconst_null
     118: putstatic     #110                // Field logFamilies:[[Ljava/lang/String;
     121: return
}
