Compiled from "FallbackResource.java"
class com.sun.javafx.font.FallbackResource implements com.sun.javafx.font.CompositeFontResource {
  private java.util.ArrayList<java.lang.String> linkedFontFiles;

  private java.util.ArrayList<java.lang.String> linkedFontNames;

  private com.sun.javafx.font.FontResource[] fallbacks;

  private com.sun.javafx.font.FontResource[] nativeFallbacks;

  private boolean isBold;

  private boolean isItalic;

  private int aaMode;

  private com.sun.javafx.font.CompositeGlyphMapper mapper;

  java.util.Map<com.sun.javafx.font.FontStrikeDesc, java.lang.ref.WeakReference<com.sun.javafx.font.FontStrike>> strikeMap;

  static com.sun.javafx.font.FallbackResource[] greyFallBackResource;

  static com.sun.javafx.font.FallbackResource[] lcdFallBackResource;

  public java.util.Map<com.sun.javafx.font.FontStrikeDesc, java.lang.ref.WeakReference<com.sun.javafx.font.FontStrike>> getStrikeMap();
    Code:
       0: aload_0
       1: getfield      #1                  // Field strikeMap:Ljava/util/Map;
       4: areturn

  com.sun.javafx.font.FallbackResource(boolean, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #1                  // Field strikeMap:Ljava/util/Map;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field isBold:Z
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field isItalic:Z
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field aaMode:I
      30: return

  static com.sun.javafx.font.FallbackResource getFallbackResource(boolean, boolean, int);
    Code:
       0: iload_2
       1: ifne          10
       4: getstatic     #8                  // Field greyFallBackResource:[Lcom/sun/javafx/font/FallbackResource;
       7: goto          13
      10: getstatic     #9                  // Field lcdFallBackResource:[Lcom/sun/javafx/font/FallbackResource;
      13: astore_3
      14: iload_0
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: istore        4
      25: iload_1
      26: ifeq          32
      29: iinc          4, 2
      32: aload_3
      33: iload         4
      35: aaload
      36: astore        5
      38: aload         5
      40: ifnonnull     61
      43: new           #10                 // class com/sun/javafx/font/FallbackResource
      46: dup
      47: iload_0
      48: iload_1
      49: iload_2
      50: invokespecial #11                 // Method "<init>":(ZZI)V
      53: astore        5
      55: aload_3
      56: iload         4
      58: aload         5
      60: aastore
      61: aload         5
      63: areturn

  public int getDefaultAAMode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field aaMode:I
       4: ireturn

  private java.lang.String throwException();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String Not supported
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getFullName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.String getPSName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.String getFamilyName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.String getStyleName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.String getLocaleFullName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.String getLocaleFamilyName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.String getLocaleStyleName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public boolean isBold();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String Not supported
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isItalic();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String Not supported
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getFeatures();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String Not supported
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getFileName();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: areturn

  public java.lang.Object getPeer();
    Code:
       0: aconst_null
       1: areturn

  public void setPeer(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method throwException:()Ljava/lang/String;
       4: pop
       5: return

  public boolean isEmbeddedFont();
    Code:
       0: iconst_0
       1: ireturn

  public com.sun.javafx.font.CharToGlyphMapper getGlyphMapper();
    Code:
       0: aload_0
       1: getfield      #16                 // Field mapper:Lcom/sun/javafx/font/CompositeGlyphMapper;
       4: ifnonnull     19
       7: aload_0
       8: new           #17                 // class com/sun/javafx/font/CompositeGlyphMapper
      11: dup
      12: aload_0
      13: invokespecial #18                 // Method com/sun/javafx/font/CompositeGlyphMapper."<init>":(Lcom/sun/javafx/font/CompositeFontResource;)V
      16: putfield      #16                 // Field mapper:Lcom/sun/javafx/font/CompositeGlyphMapper;
      19: aload_0
      20: getfield      #16                 // Field mapper:Lcom/sun/javafx/font/CompositeGlyphMapper;
      23: areturn

  public int getSlotForFont(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method getLinkedFonts:()V
       4: iconst_0
       5: istore_2
       6: aload_0
       7: getfield      #20                 // Field linkedFontNames:Ljava/util/ArrayList;
      10: invokevirtual #21                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          51
      23: aload_3
      24: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #24                 // class java/lang/String
      32: astore        4
      34: aload_1
      35: aload         4
      37: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      40: ifeq          45
      43: iload_2
      44: ireturn
      45: iinc          2, 1
      48: goto          14
      51: aload_0
      52: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      55: ifnull        108
      58: aload_0
      59: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      62: astore_3
      63: aload_3
      64: arraylength
      65: istore        4
      67: iconst_0
      68: istore        5
      70: iload         5
      72: iload         4
      74: if_icmpge     108
      77: aload_3
      78: iload         5
      80: aaload
      81: astore        6
      83: aload_1
      84: aload         6
      86: invokeinterface #27,  1           // InterfaceMethod com/sun/javafx/font/FontResource.getFullName:()Ljava/lang/String;
      91: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      94: ifeq          99
      97: iload_2
      98: ireturn
      99: iinc          2, 1
     102: iinc          5, 1
     105: goto          70
     108: iload_2
     109: bipush        126
     111: if_icmplt     130
     114: getstatic     #28                 // Field com/sun/javafx/font/PrismFontFactory.debugFonts:Z
     117: ifeq          128
     120: getstatic     #29                 // Field java/lang/System.err:Ljava/io/PrintStream;
     123: ldc           #30                 // String \tToo many font fallbacks!
     125: invokevirtual #31                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     128: iconst_m1
     129: ireturn
     130: invokestatic  #32                 // Method com/sun/javafx/font/PrismFontFactory.getFontFactory:()Lcom/sun/javafx/font/PrismFontFactory;
     133: astore_3
     134: aload_3
     135: aload_1
     136: aconst_null
     137: iconst_0
     138: invokevirtual #33                 // Method com/sun/javafx/font/PrismFontFactory.getFontResource:(Ljava/lang/String;Ljava/lang/String;Z)Lcom/sun/javafx/font/FontResource;
     141: astore        4
     143: aload         4
     145: ifnonnull     168
     148: getstatic     #28                 // Field com/sun/javafx/font/PrismFontFactory.debugFonts:Z
     151: ifeq          166
     154: getstatic     #29                 // Field java/lang/System.err:Ljava/io/PrintStream;
     157: aload_1
     158: invokedynamic #34,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     163: invokevirtual #31                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     166: iconst_m1
     167: ireturn
     168: aload_0
     169: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     172: ifnonnull     184
     175: iconst_1
     176: anewarray     #35                 // class com/sun/javafx/font/FontResource
     179: astore        5
     181: goto          212
     184: aload_0
     185: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     188: arraylength
     189: iconst_1
     190: iadd
     191: anewarray     #35                 // class com/sun/javafx/font/FontResource
     194: astore        5
     196: aload_0
     197: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     200: iconst_0
     201: aload         5
     203: iconst_0
     204: aload_0
     205: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     208: arraylength
     209: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     212: aload         5
     214: aload         5
     216: arraylength
     217: iconst_1
     218: isub
     219: aload         4
     221: aastore
     222: aload_0
     223: aload         5
     225: putfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
     228: iload_2
     229: ireturn

  private void getLinkedFonts();
    Code:
       0: aload_0
       1: getfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
       4: ifnonnull     113
       7: getstatic     #38                 // Field com/sun/javafx/font/PrismFontFactory.isLinux:Z
      10: ifeq          62
      13: ldc           #39                 // String sans
      15: aload_0
      16: getfield      #5                  // Field isBold:Z
      19: aload_0
      20: getfield      #6                  // Field isItalic:Z
      23: invokestatic  #40                 // Method com/sun/javafx/font/FontConfigManager.getFontConfigFont:(Ljava/lang/String;ZZ)Lcom/sun/javafx/font/FontConfigManager$FcCompFont;
      26: astore_1
      27: aload_0
      28: aload_1
      29: iconst_0
      30: invokestatic  #41                 // Method com/sun/javafx/font/FontConfigManager.getFileNames:(Lcom/sun/javafx/font/FontConfigManager$FcCompFont;Z)Ljava/util/ArrayList;
      33: putfield      #42                 // Field linkedFontFiles:Ljava/util/ArrayList;
      36: aload_0
      37: aload_1
      38: iconst_0
      39: invokestatic  #43                 // Method com/sun/javafx/font/FontConfigManager.getFontNames:(Lcom/sun/javafx/font/FontConfigManager$FcCompFont;Z)Ljava/util/ArrayList;
      42: putfield      #20                 // Field linkedFontNames:Ljava/util/ArrayList;
      45: aload_0
      46: aload_0
      47: getfield      #42                 // Field linkedFontFiles:Ljava/util/ArrayList;
      50: invokevirtual #44                 // Method java/util/ArrayList.size:()I
      53: anewarray     #35                 // class com/sun/javafx/font/FontResource
      56: putfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      59: goto          113
      62: getstatic     #45                 // Field com/sun/javafx/font/PrismFontFactory.isMacOSX:Z
      65: ifeq          78
      68: ldc           #46                 // String Arial Unicode MS
      70: iconst_1
      71: invokestatic  #47                 // Method com/sun/javafx/font/PrismFontFactory.getLinkedFonts:(Ljava/lang/String;Z)[Ljava/util/ArrayList;
      74: astore_1
      75: goto          85
      78: ldc           #48                 // String Tahoma
      80: iconst_1
      81: invokestatic  #47                 // Method com/sun/javafx/font/PrismFontFactory.getLinkedFonts:(Ljava/lang/String;Z)[Ljava/util/ArrayList;
      84: astore_1
      85: aload_0
      86: aload_1
      87: iconst_0
      88: aaload
      89: putfield      #42                 // Field linkedFontFiles:Ljava/util/ArrayList;
      92: aload_0
      93: aload_1
      94: iconst_1
      95: aaload
      96: putfield      #20                 // Field linkedFontNames:Ljava/util/ArrayList;
      99: aload_0
     100: aload_0
     101: getfield      #42                 // Field linkedFontFiles:Ljava/util/ArrayList;
     104: invokevirtual #44                 // Method java/util/ArrayList.size:()I
     107: anewarray     #35                 // class com/sun/javafx/font/FontResource
     110: putfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
     113: return

  public int getNumSlots();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method getLinkedFonts:()V
       4: aload_0
       5: getfield      #42                 // Field linkedFontFiles:Ljava/util/ArrayList;
       8: invokevirtual #44                 // Method java/util/ArrayList.size:()I
      11: istore_1
      12: aload_0
      13: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      16: ifnull        27
      19: iload_1
      20: aload_0
      21: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      24: arraylength
      25: iadd
      26: istore_1
      27: iload_1
      28: ireturn

  public float[] getGlyphBoundingBox(int, float, float[]);
    Code:
       0: iload_1
       1: bipush        24
       3: iushr
       4: istore        4
       6: iload_1
       7: ldc           #49                 // int 16777215
       9: iand
      10: istore        5
      12: aload_0
      13: iload         4
      15: invokevirtual #50                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
      18: astore        6
      20: aload         6
      22: iload         5
      24: fload_2
      25: aload_3
      26: invokeinterface #51,  4           // InterfaceMethod com/sun/javafx/font/FontResource.getGlyphBoundingBox:(IF[F)[F
      31: areturn

  public float getAdvance(int, float);
    Code:
       0: iload_1
       1: bipush        24
       3: iushr
       4: istore_3
       5: iload_1
       6: ldc           #49                 // int 16777215
       8: iand
       9: istore        4
      11: aload_0
      12: iload_3
      13: invokevirtual #50                 // Method getSlotResource:(I)Lcom/sun/javafx/font/FontResource;
      16: astore        5
      18: aload         5
      20: iload         4
      22: fload_2
      23: invokeinterface #52,  3           // InterfaceMethod com/sun/javafx/font/FontResource.getAdvance:(IF)F
      28: freturn

  public synchronized com.sun.javafx.font.FontResource getSlotResource(int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method getLinkedFonts:()V
       4: iload_1
       5: aload_0
       6: getfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
       9: arraylength
      10: if_icmplt     46
      13: iload_1
      14: aload_0
      15: getfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      18: arraylength
      19: isub
      20: istore_1
      21: aload_0
      22: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      25: ifnull        37
      28: iload_1
      29: aload_0
      30: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      33: arraylength
      34: if_icmplt     39
      37: aconst_null
      38: areturn
      39: aload_0
      40: getfield      #26                 // Field nativeFallbacks:[Lcom/sun/javafx/font/FontResource;
      43: iload_1
      44: aaload
      45: areturn
      46: aload_0
      47: getfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      50: iload_1
      51: aaload
      52: ifnonnull     94
      55: aload_0
      56: getfield      #42                 // Field linkedFontFiles:Ljava/util/ArrayList;
      59: iload_1
      60: invokevirtual #53                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      63: checkcast     #24                 // class java/lang/String
      66: astore_2
      67: aload_0
      68: getfield      #20                 // Field linkedFontNames:Ljava/util/ArrayList;
      71: iload_1
      72: invokevirtual #53                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      75: checkcast     #24                 // class java/lang/String
      78: astore_3
      79: aload_0
      80: getfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      83: iload_1
      84: invokestatic  #32                 // Method com/sun/javafx/font/PrismFontFactory.getFontFactory:()Lcom/sun/javafx/font/PrismFontFactory;
      87: aload_3
      88: aload_2
      89: iconst_0
      90: invokevirtual #33                 // Method com/sun/javafx/font/PrismFontFactory.getFontResource:(Ljava/lang/String;Ljava/lang/String;Z)Lcom/sun/javafx/font/FontResource;
      93: aastore
      94: aload_0
      95: getfield      #37                 // Field fallbacks:[Lcom/sun/javafx/font/FontResource;
      98: iload_1
      99: aaload
     100: areturn

  public com.sun.javafx.font.FontStrike getStrike(float, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: fload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #54                 // Method getDefaultAAMode:()I
       7: invokevirtual #55                 // Method getStrike:(FLcom/sun/javafx/geom/transform/BaseTransform;I)Lcom/sun/javafx/font/FontStrike;
      10: areturn

  public com.sun.javafx.font.FontStrike getStrike(float, com.sun.javafx.geom.transform.BaseTransform, int);
    Code:
       0: new           #56                 // class com/sun/javafx/font/FontStrikeDesc
       3: dup
       4: fload_1
       5: aload_2
       6: iload_3
       7: invokespecial #57                 // Method com/sun/javafx/font/FontStrikeDesc."<init>":(FLcom/sun/javafx/geom/transform/BaseTransform;I)V
      10: astore        4
      12: aload_0
      13: getfield      #1                  // Field strikeMap:Ljava/util/Map;
      16: aload         4
      18: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #59                 // class java/lang/ref/WeakReference
      26: astore        5
      28: aconst_null
      29: astore        6
      31: aload         5
      33: ifnull        46
      36: aload         5
      38: invokevirtual #60                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      41: checkcast     #61                 // class com/sun/javafx/font/CompositeStrike
      44: astore        6
      46: aload         6
      48: ifnonnull     114
      51: new           #61                 // class com/sun/javafx/font/CompositeStrike
      54: dup
      55: aload_0
      56: fload_1
      57: aload_2
      58: iload_3
      59: aload         4
      61: invokespecial #62                 // Method com/sun/javafx/font/CompositeStrike."<init>":(Lcom/sun/javafx/font/CompositeFontResource;FLcom/sun/javafx/geom/transform/BaseTransform;ILcom/sun/javafx/font/FontStrikeDesc;)V
      64: astore        6
      66: aload         6
      68: getfield      #63                 // Field com/sun/javafx/font/CompositeStrike.disposer:Lcom/sun/javafx/font/DisposerRecord;
      71: ifnull        89
      74: aload         6
      76: aload         6
      78: getfield      #63                 // Field com/sun/javafx/font/CompositeStrike.disposer:Lcom/sun/javafx/font/DisposerRecord;
      81: invokestatic  #64                 // Method com/sun/javafx/font/Disposer.addRecord:(Ljava/lang/Object;Lcom/sun/javafx/font/DisposerRecord;)Ljava/lang/ref/WeakReference;
      84: astore        5
      86: goto          100
      89: new           #59                 // class java/lang/ref/WeakReference
      92: dup
      93: aload         6
      95: invokespecial #65                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      98: astore        5
     100: aload_0
     101: getfield      #1                  // Field strikeMap:Ljava/util/Map;
     104: aload         4
     106: aload         5
     108: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload         6
     116: areturn

  static {};
    Code:
       0: iconst_4
       1: anewarray     #10                 // class com/sun/javafx/font/FallbackResource
       4: putstatic     #8                  // Field greyFallBackResource:[Lcom/sun/javafx/font/FallbackResource;
       7: iconst_4
       8: anewarray     #10                 // class com/sun/javafx/font/FallbackResource
      11: putstatic     #9                  // Field lcdFallBackResource:[Lcom/sun/javafx/font/FallbackResource;
      14: return
}
