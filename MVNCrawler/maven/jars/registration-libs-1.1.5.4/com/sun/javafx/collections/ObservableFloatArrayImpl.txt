Compiled from "ObservableFloatArrayImpl.java"
public final class com.sun.javafx.collections.ObservableFloatArrayImpl extends javafx.collections.ObservableArrayBase<javafx.collections.ObservableFloatArray> implements javafx.collections.ObservableFloatArray {
  private static final float[] INITIAL;

  private float[] array;

  private int size;

  private static final int MAX_ARRAY_SIZE;

  public com.sun.javafx.collections.ObservableFloatArrayImpl();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/collections/ObservableArrayBase."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field INITIAL:[F
       8: putfield      #4                  // Field array:[F
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field size:I
      16: return

  public com.sun.javafx.collections.ObservableFloatArrayImpl(float...);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/collections/ObservableArrayBase."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field INITIAL:[F
       8: putfield      #4                  // Field array:[F
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field size:I
      16: aload_0
      17: aload_1
      18: invokevirtual #6                  // Method setAll:([F)V
      21: return

  public com.sun.javafx.collections.ObservableFloatArrayImpl(javafx.collections.ObservableFloatArray);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/collections/ObservableArrayBase."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field INITIAL:[F
       8: putfield      #4                  // Field array:[F
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field size:I
      16: aload_0
      17: aload_1
      18: invokevirtual #7                  // Method setAll:(Ljavafx/collections/ObservableFloatArray;)V
      21: return

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #8                  // Method resize:(I)V
       5: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: ireturn

  private void addAllInternal(javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #9                  // Method growCapacity:(I)V
       5: aload_1
       6: iload_2
       7: aload_0
       8: getfield      #4                  // Field array:[F
      11: aload_0
      12: getfield      #5                  // Field size:I
      15: iload_3
      16: invokeinterface #10,  5           // InterfaceMethod javafx/collections/ObservableFloatArray.copyTo:(I[FII)V
      21: aload_0
      22: dup
      23: getfield      #5                  // Field size:I
      26: iload_3
      27: iadd
      28: putfield      #5                  // Field size:I
      31: aload_0
      32: iload_3
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: aload_0
      42: getfield      #5                  // Field size:I
      45: iload_3
      46: isub
      47: aload_0
      48: getfield      #5                  // Field size:I
      51: invokevirtual #11                 // Method fireChange:(ZII)V
      54: return

  private void addAllInternal(float[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #9                  // Method growCapacity:(I)V
       5: aload_1
       6: iload_2
       7: aload_0
       8: getfield      #4                  // Field array:[F
      11: aload_0
      12: getfield      #5                  // Field size:I
      15: iload_3
      16: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_0
      20: dup
      21: getfield      #5                  // Field size:I
      24: iload_3
      25: iadd
      26: putfield      #5                  // Field size:I
      29: aload_0
      30: iload_3
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: getfield      #5                  // Field size:I
      43: iload_3
      44: isub
      45: aload_0
      46: getfield      #5                  // Field size:I
      49: invokevirtual #11                 // Method fireChange:(ZII)V
      52: return

  public void addAll(javafx.collections.ObservableFloatArray);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokeinterface #13,  1           // InterfaceMethod javafx/collections/ObservableFloatArray.size:()I
       9: invokespecial #14                 // Method addAllInternal:(Ljavafx/collections/ObservableFloatArray;II)V
      12: return

  public void addAll(float...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #15                 // Method addAllInternal:([FII)V
       8: return

  public void addAll(javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #16                 // Method rangeCheck:(Ljavafx/collections/ObservableFloatArray;II)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #14                 // Method addAllInternal:(Ljavafx/collections/ObservableFloatArray;II)V
      14: return

  public void addAll(float[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #17                 // Method rangeCheck:([FII)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #15                 // Method addAllInternal:([FII)V
      14: return

  private void setAllInternal(javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method size:()I
       4: iload_3
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore        4
      15: aload_1
      16: aload_0
      17: if_acmpne     65
      20: iload_2
      21: ifne          32
      24: aload_0
      25: iload_3
      26: invokevirtual #8                  // Method resize:(I)V
      29: goto          104
      32: aload_0
      33: getfield      #4                  // Field array:[F
      36: iload_2
      37: aload_0
      38: getfield      #4                  // Field array:[F
      41: iconst_0
      42: iload_3
      43: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload_0
      47: iload_3
      48: putfield      #5                  // Field size:I
      51: aload_0
      52: iload         4
      54: iconst_0
      55: aload_0
      56: getfield      #5                  // Field size:I
      59: invokevirtual #11                 // Method fireChange:(ZII)V
      62: goto          104
      65: aload_0
      66: iconst_0
      67: putfield      #5                  // Field size:I
      70: aload_0
      71: iload_3
      72: invokevirtual #19                 // Method ensureCapacity:(I)V
      75: aload_1
      76: iload_2
      77: aload_0
      78: getfield      #4                  // Field array:[F
      81: iconst_0
      82: iload_3
      83: invokeinterface #10,  5           // InterfaceMethod javafx/collections/ObservableFloatArray.copyTo:(I[FII)V
      88: aload_0
      89: iload_3
      90: putfield      #5                  // Field size:I
      93: aload_0
      94: iload         4
      96: iconst_0
      97: aload_0
      98: getfield      #5                  // Field size:I
     101: invokevirtual #11                 // Method fireChange:(ZII)V
     104: return

  private void setAllInternal(float[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method size:()I
       4: iload_3
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore        4
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field size:I
      20: aload_0
      21: iload_3
      22: invokevirtual #19                 // Method ensureCapacity:(I)V
      25: aload_1
      26: iload_2
      27: aload_0
      28: getfield      #4                  // Field array:[F
      31: iconst_0
      32: iload_3
      33: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      36: aload_0
      37: iload_3
      38: putfield      #5                  // Field size:I
      41: aload_0
      42: iload         4
      44: iconst_0
      45: aload_0
      46: getfield      #5                  // Field size:I
      49: invokevirtual #11                 // Method fireChange:(ZII)V
      52: return

  public void setAll(javafx.collections.ObservableFloatArray);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokeinterface #13,  1           // InterfaceMethod javafx/collections/ObservableFloatArray.size:()I
       9: invokespecial #20                 // Method setAllInternal:(Ljavafx/collections/ObservableFloatArray;II)V
      12: return

  public void setAll(javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #16                 // Method rangeCheck:(Ljavafx/collections/ObservableFloatArray;II)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #20                 // Method setAllInternal:(Ljavafx/collections/ObservableFloatArray;II)V
      14: return

  public void setAll(float[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #17                 // Method rangeCheck:([FII)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #21                 // Method setAllInternal:([FII)V
      14: return

  public void setAll(float[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #21                 // Method setAllInternal:([FII)V
       8: return

  public void set(int, float[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iadd
       5: invokespecial #22                 // Method rangeCheck:(I)V
       8: aload_2
       9: iload_3
      10: aload_0
      11: getfield      #4                  // Field array:[F
      14: iload_1
      15: iload         4
      17: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_0
      21: iconst_0
      22: iload_1
      23: iload_1
      24: iload         4
      26: iadd
      27: invokevirtual #11                 // Method fireChange:(ZII)V
      30: return

  public void set(int, javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iadd
       5: invokespecial #22                 // Method rangeCheck:(I)V
       8: aload_2
       9: iload_3
      10: aload_0
      11: getfield      #4                  // Field array:[F
      14: iload_1
      15: iload         4
      17: invokeinterface #10,  5           // InterfaceMethod javafx/collections/ObservableFloatArray.copyTo:(I[FII)V
      22: aload_0
      23: iconst_0
      24: iload_1
      25: iload_1
      26: iload         4
      28: iadd
      29: invokevirtual #11                 // Method fireChange:(ZII)V
      32: return

  public float[] toArray(float[]);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_0
       5: invokevirtual #18                 // Method size:()I
       8: aload_1
       9: arraylength
      10: if_icmple     20
      13: aload_0
      14: invokevirtual #18                 // Method size:()I
      17: newarray       float
      19: astore_1
      20: aload_0
      21: getfield      #4                  // Field array:[F
      24: iconst_0
      25: aload_1
      26: iconst_0
      27: aload_0
      28: invokevirtual #18                 // Method size:()I
      31: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_1
      35: areturn

  public float get(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iadd
       4: invokespecial #22                 // Method rangeCheck:(I)V
       7: aload_0
       8: getfield      #4                  // Field array:[F
      11: iload_1
      12: faload
      13: freturn

  public void set(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iadd
       4: invokespecial #22                 // Method rangeCheck:(I)V
       7: aload_0
       8: getfield      #4                  // Field array:[F
      11: iload_1
      12: fload_2
      13: fastore
      14: aload_0
      15: iconst_0
      16: iload_1
      17: iload_1
      18: iconst_1
      19: iadd
      20: invokevirtual #11                 // Method fireChange:(ZII)V
      23: return

  public float[] toArray(int, float[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: iadd
       4: invokespecial #22                 // Method rangeCheck:(I)V
       7: aload_2
       8: ifnull        17
      11: iload_3
      12: aload_2
      13: arraylength
      14: if_icmple     21
      17: iload_3
      18: newarray       float
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field array:[F
      25: iload_1
      26: aload_2
      27: iconst_0
      28: iload_3
      29: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_2
      33: areturn

  public void copyTo(int, float[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iadd
       5: invokespecial #22                 // Method rangeCheck:(I)V
       8: aload_0
       9: getfield      #4                  // Field array:[F
      12: iload_1
      13: aload_2
      14: iload_3
      15: iload         4
      17: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: return

  public void copyTo(int, javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iadd
       5: invokespecial #22                 // Method rangeCheck:(I)V
       8: aload_2
       9: iload_3
      10: aload_0
      11: getfield      #4                  // Field array:[F
      14: iload_1
      15: iload         4
      17: invokeinterface #23,  5           // InterfaceMethod javafx/collections/ObservableFloatArray.set:(I[FII)V
      22: return

  public void resize(int);
    Code:
       0: iload_1
       1: ifge          18
       4: new           #24                 // class java/lang/NegativeArraySizeException
       7: dup
       8: iload_1
       9: invokedynamic #25,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      14: invokespecial #26                 // Method java/lang/NegativeArraySizeException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: invokevirtual #19                 // Method ensureCapacity:(I)V
      23: aload_0
      24: getfield      #5                  // Field size:I
      27: iload_1
      28: invokestatic  #27                 // Method java/lang/Math.min:(II)I
      31: istore_2
      32: aload_0
      33: getfield      #5                  // Field size:I
      36: iload_1
      37: if_icmpeq     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore_3
      46: aload_0
      47: iload_1
      48: putfield      #5                  // Field size:I
      51: aload_0
      52: getfield      #4                  // Field array:[F
      55: iload_2
      56: aload_0
      57: getfield      #5                  // Field size:I
      60: fconst_0
      61: invokestatic  #28                 // Method java/util/Arrays.fill:([FIIF)V
      64: aload_0
      65: iload_3
      66: iload_2
      67: iload_1
      68: invokevirtual #11                 // Method fireChange:(ZII)V
      71: return

  private void growCapacity(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: iload_1
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #4                  // Field array:[F
      11: arraylength
      12: istore_3
      13: iload_2
      14: aload_0
      15: getfield      #4                  // Field array:[F
      18: arraylength
      19: if_icmple     60
      22: iload_3
      23: iload_3
      24: iconst_1
      25: ishr
      26: iadd
      27: istore        4
      29: iload         4
      31: iload_2
      32: if_icmpge     38
      35: iload_2
      36: istore        4
      38: iload         4
      40: ldc           #30                 // int 2147483639
      42: if_icmple     51
      45: iload_2
      46: invokestatic  #31                 // Method hugeCapacity:(I)I
      49: istore        4
      51: aload_0
      52: iload         4
      54: invokevirtual #19                 // Method ensureCapacity:(I)V
      57: goto          76
      60: iload_1
      61: ifle          76
      64: iload_2
      65: ifge          76
      68: new           #32                 // class java/lang/OutOfMemoryError
      71: dup
      72: invokespecial #33                 // Method java/lang/OutOfMemoryError."<init>":()V
      75: athrow
      76: return

  public void ensureCapacity(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field array:[F
       4: arraylength
       5: iload_1
       6: if_icmpge     21
       9: aload_0
      10: aload_0
      11: getfield      #4                  // Field array:[F
      14: iload_1
      15: invokestatic  #34                 // Method java/util/Arrays.copyOf:([FI)[F
      18: putfield      #4                  // Field array:[F
      21: return

  private static int hugeCapacity(int);
    Code:
       0: iload_0
       1: ifge          12
       4: new           #32                 // class java/lang/OutOfMemoryError
       7: dup
       8: invokespecial #33                 // Method java/lang/OutOfMemoryError."<init>":()V
      11: athrow
      12: iload_0
      13: ldc           #30                 // int 2147483639
      15: if_icmple     23
      18: ldc           #35                 // int 2147483647
      20: goto          25
      23: ldc           #30                 // int 2147483639
      25: ireturn

  public void trimToSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field array:[F
       4: arraylength
       5: aload_0
       6: getfield      #5                  // Field size:I
       9: if_icmpeq     38
      12: aload_0
      13: getfield      #5                  // Field size:I
      16: newarray       float
      18: astore_1
      19: aload_0
      20: getfield      #4                  // Field array:[F
      23: iconst_0
      24: aload_1
      25: iconst_0
      26: aload_0
      27: getfield      #5                  // Field size:I
      30: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_0
      34: aload_1
      35: putfield      #4                  // Field array:[F
      38: return

  private void rangeCheck(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field size:I
       5: if_icmple     20
       8: new           #36                 // class java/lang/ArrayIndexOutOfBoundsException
      11: dup
      12: aload_0
      13: getfield      #5                  // Field size:I
      16: invokespecial #37                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      19: athrow
      20: return

  private void rangeCheck(javafx.collections.ObservableFloatArray, int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #38                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #39                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_2
      17: iload_3
      18: iadd
      19: aload_1
      20: invokeinterface #13,  1           // InterfaceMethod javafx/collections/ObservableFloatArray.size:()I
      25: if_icmple     42
      28: new           #36                 // class java/lang/ArrayIndexOutOfBoundsException
      31: dup
      32: aload_1
      33: invokeinterface #13,  1           // InterfaceMethod javafx/collections/ObservableFloatArray.size:()I
      38: invokespecial #37                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      41: athrow
      42: iload_3
      43: ifge          55
      46: new           #36                 // class java/lang/ArrayIndexOutOfBoundsException
      49: dup
      50: iconst_m1
      51: invokespecial #37                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      54: athrow
      55: return

  private void rangeCheck(float[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #38                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #39                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          24
      16: iload_2
      17: iload_3
      18: iadd
      19: aload_1
      20: arraylength
      21: if_icmple     34
      24: new           #36                 // class java/lang/ArrayIndexOutOfBoundsException
      27: dup
      28: aload_1
      29: arraylength
      30: invokespecial #37                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      33: athrow
      34: iload_3
      35: ifge          47
      38: new           #36                 // class java/lang/ArrayIndexOutOfBoundsException
      41: dup
      42: iconst_m1
      43: invokespecial #37                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(I)V
      46: athrow
      47: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field array:[F
       4: ifnonnull     10
       7: ldc           #40                 // String null
       9: areturn
      10: aload_0
      11: invokevirtual #18                 // Method size:()I
      14: iconst_1
      15: isub
      16: istore_1
      17: iload_1
      18: iconst_m1
      19: if_icmpne     25
      22: ldc           #41                 // String []
      24: areturn
      25: new           #42                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      32: astore_2
      33: aload_2
      34: bipush        91
      36: invokevirtual #44                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: pop
      40: iconst_0
      41: istore_3
      42: aload_2
      43: aload_0
      44: getfield      #4                  // Field array:[F
      47: iload_3
      48: faload
      49: invokevirtual #45                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      52: pop
      53: iload_3
      54: iload_1
      55: if_icmpne     68
      58: aload_2
      59: bipush        93
      61: invokevirtual #44                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      64: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn
      68: aload_2
      69: ldc           #47                 // String ,
      71: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: iinc          3, 1
      78: goto          42

  static {};
    Code:
       0: iconst_0
       1: newarray       float
       3: putstatic     #3                  // Field INITIAL:[F
       6: return
}
