Compiled from "UnmodifiableObservableMap.java"
public class com.sun.javafx.collections.UnmodifiableObservableMap<K, V> extends java.util.AbstractMap<K, V> implements javafx.collections.ObservableMap<K, V> {
  private com.sun.javafx.collections.MapListenerHelper<K, V> listenerHelper;

  private final javafx.collections.ObservableMap<K, V> backingMap;

  private final javafx.collections.MapChangeListener<K, V> listener;

  private java.util.Set<K> keyset;

  private java.util.Collection<V> values;

  private java.util.Set<java.util.Map$Entry<K, V>> entryset;

  public com.sun.javafx.collections.UnmodifiableObservableMap(javafx.collections.ObservableMap<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
       9: aload_0
      10: aload_0
      11: invokedynamic #3,  0              // InvokeDynamic #0:onChanged:(Lcom/sun/javafx/collections/UnmodifiableObservableMap;)Ljavafx/collections/MapChangeListener;
      16: putfield      #4                  // Field listener:Ljavafx/collections/MapChangeListener;
      19: aload_0
      20: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
      23: new           #5                  // class javafx/collections/WeakMapChangeListener
      26: dup
      27: aload_0
      28: getfield      #4                  // Field listener:Ljavafx/collections/MapChangeListener;
      31: invokespecial #6                  // Method javafx/collections/WeakMapChangeListener."<init>":(Ljavafx/collections/MapChangeListener;)V
      34: invokeinterface #7,  2            // InterfaceMethod javafx/collections/ObservableMap.addListener:(Ljavafx/collections/MapChangeListener;)V
      39: return

  private void callObservers(javafx.collections.MapChangeListener$Change<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       4: aload_1
       5: invokestatic  #9                  // Method com/sun/javafx/collections/MapListenerHelper.fireValueChangedEvent:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/collections/MapChangeListener$Change;)V
       8: return

  public void addListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #10                 // Method com/sun/javafx/collections/MapListenerHelper.addListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public void removeListener(javafx.beans.InvalidationListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #11                 // Method com/sun/javafx/collections/MapListenerHelper.removeListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/beans/InvalidationListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public void addListener(javafx.collections.MapChangeListener<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #12                 // Method com/sun/javafx/collections/MapListenerHelper.addListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/collections/MapChangeListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public void removeListener(javafx.collections.MapChangeListener<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
       5: aload_1
       6: invokestatic  #13                 // Method com/sun/javafx/collections/MapListenerHelper.removeListener:(Lcom/sun/javafx/collections/MapListenerHelper;Ljavafx/collections/MapChangeListener;)Lcom/sun/javafx/collections/MapListenerHelper;
       9: putfield      #8                  // Field listenerHelper:Lcom/sun/javafx/collections/MapListenerHelper;
      12: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #14,  1           // InterfaceMethod javafx/collections/ObservableMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: invokeinterface #15,  1           // InterfaceMethod javafx/collections/ObservableMap.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod javafx/collections/ObservableMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod javafx/collections/ObservableMap.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field keyset:Ljava/util/Set;
       4: ifnonnull     23
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
      12: invokeinterface #20,  1           // InterfaceMethod javafx/collections/ObservableMap.keySet:()Ljava/util/Set;
      17: invokestatic  #21                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      20: putfield      #19                 // Field keyset:Ljava/util/Set;
      23: aload_0
      24: getfield      #19                 // Field keyset:Ljava/util/Set;
      27: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #22                 // Field values:Ljava/util/Collection;
       4: ifnonnull     23
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
      12: invokeinterface #23,  1           // InterfaceMethod javafx/collections/ObservableMap.values:()Ljava/util/Collection;
      17: invokestatic  #24                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      20: putfield      #22                 // Field values:Ljava/util/Collection;
      23: aload_0
      24: getfield      #22                 // Field values:Ljava/util/Collection;
      27: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #25                 // Field entryset:Ljava/util/Set;
       4: ifnonnull     23
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field backingMap:Ljavafx/collections/ObservableMap;
      12: invokestatic  #26                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      15: invokeinterface #27,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: putfield      #25                 // Field entryset:Ljava/util/Set;
      23: aload_0
      24: getfield      #25                 // Field entryset:Ljava/util/Set;
      27: areturn

  private void lambda$new$0(javafx.collections.MapChangeListener$Change);
    Code:
       0: aload_0
       1: new           #28                 // class com/sun/javafx/collections/MapAdapterChange
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #29                 // Method com/sun/javafx/collections/MapAdapterChange."<init>":(Ljavafx/collections/ObservableMap;Ljavafx/collections/MapChangeListener$Change;)V
      10: invokespecial #30                 // Method callObservers:(Ljavafx/collections/MapChangeListener$Change;)V
      13: return
}
