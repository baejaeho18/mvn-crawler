Compiled from "ObservableMapWrapper.java"
class com.sun.javafx.collections.ObservableMapWrapper$ObservableValues implements java.util.Collection<V> {
  final com.sun.javafx.collections.ObservableMapWrapper this$0;

  private com.sun.javafx.collections.ObservableMapWrapper$ObservableValues(com.sun.javafx.collections.ObservableMapWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
      12: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      12: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: aload_1
      13: invokeinterface #8,  2            // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      18: ireturn

  public java.util.Iterator<V> iterator();
    Code:
       0: new           #9                  // class com/sun/javafx/collections/ObservableMapWrapper$ObservableValues$1
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method com/sun/javafx/collections/ObservableMapWrapper$ObservableValues$1."<init>":(Lcom/sun/javafx/collections/ObservableMapWrapper$ObservableValues;)V
       8: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      17: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: aload_1
      13: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      18: areturn

  public boolean add(V);
    Code:
       0: new           #13                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #14                 // String Not supported.
       6: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          35
      14: aload_2
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: aload_1
      21: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          5
      27: aload_2
      28: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.remove:()V
      33: iconst_1
      34: ireturn
      35: iconst_0
      36: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: aload_1
      13: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.containsAll:(Ljava/util/Collection;)Z
      18: ireturn

  public boolean addAll(java.util.Collection<? extends V>);
    Code:
       0: new           #13                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #14                 // String Not supported.
       6: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #22                 // Method removeRetain:(Ljava/util/Collection;Z)Z
       6: ireturn

  private boolean removeRetain(java.util.Collection<?>, boolean);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       6: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       9: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          115
      31: aload         4
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #25                 // class java/util/Map$Entry
      41: astore        5
      43: iload_2
      44: aload_1
      45: aload         5
      47: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: invokeinterface #8,  2            // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      57: if_icmpne     112
      60: iconst_1
      61: istore_3
      62: aload         5
      64: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      69: astore        6
      71: aload         5
      73: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: astore        7
      80: aload         4
      82: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.remove:()V
      87: aload_0
      88: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
      91: new           #28                 // class com/sun/javafx/collections/ObservableMapWrapper$SimpleChange
      94: dup
      95: aload_0
      96: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
      99: aload         6
     101: aload         7
     103: aconst_null
     104: iconst_0
     105: iconst_1
     106: invokespecial #29                 // Method com/sun/javafx/collections/ObservableMapWrapper$SimpleChange."<init>":(Lcom/sun/javafx/collections/ObservableMapWrapper;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ZZ)V
     109: invokevirtual #30                 // Method com/sun/javafx/collections/ObservableMapWrapper.callObservers:(Ljavafx/collections/MapChangeListener$Change;)V
     112: goto          21
     115: iload_3
     116: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #22                 // Method removeRetain:(Ljava/util/Collection;Z)Z
       6: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokevirtual #31                 // Method com/sun/javafx/collections/ObservableMapWrapper.clear:()V
       7: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: invokevirtual #32                 // Method java/lang/Object.toString:()Ljava/lang/String;
      15: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: aload_1
      13: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.equals:(Ljava/lang/Object;)Z
      18: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/collections/ObservableMapWrapper;
       4: invokestatic  #4                  // Method com/sun/javafx/collections/ObservableMapWrapper.access$300:(Lcom/sun/javafx/collections/ObservableMapWrapper;)Ljava/util/Map;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      12: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.hashCode:()I
      17: ireturn

  com.sun.javafx.collections.ObservableMapWrapper$ObservableValues(com.sun.javafx.collections.ObservableMapWrapper, com.sun.javafx.collections.ObservableMapWrapper$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/sun/javafx/collections/ObservableMapWrapper;)V
       5: return
}
