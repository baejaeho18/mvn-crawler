Compiled from "WeakReferenceQueue.java"
public class com.sun.javafx.util.WeakReferenceQueue<E> {
  private final java.lang.ref.ReferenceQueue garbage;

  private java.lang.Object strongRef;

  private com.sun.javafx.util.WeakReferenceQueue$ListEntry head;

  int size;

  public com.sun.javafx.util.WeakReferenceQueue();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #5                  // Field garbage:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #6                  // class java/lang/Object
      19: dup
      20: invokespecial #2                  // Method java/lang/Object."<init>":()V
      23: putfield      #7                  // Field strongRef:Ljava/lang/Object;
      26: aload_0
      27: new           #8                  // class com/sun/javafx/util/WeakReferenceQueue$ListEntry
      30: dup
      31: aload_0
      32: getfield      #7                  // Field strongRef:Ljava/lang/Object;
      35: aload_0
      36: getfield      #5                  // Field garbage:Ljava/lang/ref/ReferenceQueue;
      39: invokespecial #9                  // Method com/sun/javafx/util/WeakReferenceQueue$ListEntry."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      42: putfield      #1                  // Field head:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
      45: aload_0
      46: iconst_0
      47: putfield      #10                 // Field size:I
      50: return

  public void add(E);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method cleanup:()V
       4: aload_0
       5: dup
       6: getfield      #10                 // Field size:I
       9: iconst_1
      10: iadd
      11: putfield      #10                 // Field size:I
      14: new           #8                  // class com/sun/javafx/util/WeakReferenceQueue$ListEntry
      17: dup
      18: aload_1
      19: aload_0
      20: getfield      #5                  // Field garbage:Ljava/lang/ref/ReferenceQueue;
      23: invokespecial #9                  // Method com/sun/javafx/util/WeakReferenceQueue$ListEntry."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      26: aload_0
      27: getfield      #1                  // Field head:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
      30: getfield      #12                 // Field com/sun/javafx/util/WeakReferenceQueue$ListEntry.prev:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
      33: invokevirtual #13                 // Method com/sun/javafx/util/WeakReferenceQueue$ListEntry.insert:(Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;)V
      36: return

  public void remove(E);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method cleanup:()V
       4: aload_0
       5: getfield      #1                  // Field head:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
       8: getfield      #14                 // Field com/sun/javafx/util/WeakReferenceQueue$ListEntry.next:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
      11: astore_2
      12: aload_2
      13: aload_0
      14: getfield      #1                  // Field head:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
      17: if_acmpeq     53
      20: aload_2
      21: invokevirtual #15                 // Method com/sun/javafx/util/WeakReferenceQueue$ListEntry.get:()Ljava/lang/Object;
      24: astore_3
      25: aload_3
      26: aload_1
      27: if_acmpne     45
      30: aload_0
      31: dup
      32: getfield      #10                 // Field size:I
      35: iconst_1
      36: isub
      37: putfield      #10                 // Field size:I
      40: aload_2
      41: invokevirtual #16                 // Method com/sun/javafx/util/WeakReferenceQueue$ListEntry.remove:()V
      44: return
      45: aload_2
      46: getfield      #14                 // Field com/sun/javafx/util/WeakReferenceQueue$ListEntry.next:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
      49: astore_2
      50: goto          12
      53: return

  public void cleanup();
    Code:
       0: aload_0
       1: getfield      #5                  // Field garbage:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #17                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #8                  // class com/sun/javafx/util/WeakReferenceQueue$ListEntry
      10: dup
      11: astore_1
      12: ifnull        32
      15: aload_0
      16: dup
      17: getfield      #10                 // Field size:I
      20: iconst_1
      21: isub
      22: putfield      #10                 // Field size:I
      25: aload_1
      26: invokevirtual #16                 // Method com/sun/javafx/util/WeakReferenceQueue$ListEntry.remove:()V
      29: goto          0
      32: return

  public java.util.Iterator<? super E> iterator();
    Code:
       0: new           #18                 // class com/sun/javafx/util/WeakReferenceQueue$1
       3: dup
       4: aload_0
       5: invokespecial #19                 // Method com/sun/javafx/util/WeakReferenceQueue$1."<init>":(Lcom/sun/javafx/util/WeakReferenceQueue;)V
       8: areturn

  static com.sun.javafx.util.WeakReferenceQueue$ListEntry access$000(com.sun.javafx.util.WeakReferenceQueue);
    Code:
       0: aload_0
       1: getfield      #1                  // Field head:Lcom/sun/javafx/util/WeakReferenceQueue$ListEntry;
       4: areturn
}
