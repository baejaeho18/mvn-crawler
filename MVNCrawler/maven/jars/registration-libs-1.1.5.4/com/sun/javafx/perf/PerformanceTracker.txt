Compiled from "PerformanceTracker.java"
public abstract class com.sun.javafx.perf.PerformanceTracker {
  private static com.sun.javafx.perf.PerformanceTracker$SceneAccessor sceneAccessor;

  private boolean perfLoggingEnabled;

  private boolean firstPulse;

  private float instantFPS;

  private int instantFPSFrames;

  private long instantFPSStartTime;

  private long avgStartTime;

  private int avgFramesTotal;

  private float instantPulses;

  private int instantPulsesFrames;

  private long instantPulsesStartTime;

  private long avgPulsesStartTime;

  private int avgPulsesTotal;

  private java.lang.Runnable onPulse;

  private java.lang.Runnable onFirstPulse;

  private java.lang.Runnable onRenderedFrameTask;

  public com.sun.javafx.perf.PerformanceTracker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field firstPulse:Z
       9: return

  public static boolean isLoggingEnabled();
    Code:
       0: invokestatic  #3                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #4                  // Method com/sun/javafx/tk/Toolkit.getPerformanceTracker:()Lcom/sun/javafx/perf/PerformanceTracker;
       6: getfield      #5                  // Field perfLoggingEnabled:Z
       9: ireturn

  public static com.sun.javafx.perf.PerformanceTracker getSceneTracker(javafx.scene.Scene);
    Code:
       0: aconst_null
       1: astore_1
       2: getstatic     #6                  // Field sceneAccessor:Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;
       5: ifnull        35
       8: getstatic     #6                  // Field sceneAccessor:Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;
      11: aload_0
      12: invokevirtual #7                  // Method com/sun/javafx/perf/PerformanceTracker$SceneAccessor.getPerfTracker:(Ljavafx/scene/Scene;)Lcom/sun/javafx/perf/PerformanceTracker;
      15: astore_1
      16: aload_1
      17: ifnonnull     27
      20: invokestatic  #3                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      23: invokevirtual #8                  // Method com/sun/javafx/tk/Toolkit.createPerformanceTracker:()Lcom/sun/javafx/perf/PerformanceTracker;
      26: astore_1
      27: getstatic     #6                  // Field sceneAccessor:Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;
      30: aload_0
      31: aload_1
      32: invokevirtual #9                  // Method com/sun/javafx/perf/PerformanceTracker$SceneAccessor.setPerfTracker:(Ljavafx/scene/Scene;Lcom/sun/javafx/perf/PerformanceTracker;)V
      35: aload_1
      36: areturn

  public static void releaseSceneTracker(javafx.scene.Scene);
    Code:
       0: getstatic     #6                  // Field sceneAccessor:Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;
       3: ifnull        14
       6: getstatic     #6                  // Field sceneAccessor:Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;
       9: aload_0
      10: aconst_null
      11: invokevirtual #9                  // Method com/sun/javafx/perf/PerformanceTracker$SceneAccessor.setPerfTracker:(Ljavafx/scene/Scene;Lcom/sun/javafx/perf/PerformanceTracker;)V
      14: return

  public static void setSceneAccessor(com.sun.javafx.perf.PerformanceTracker$SceneAccessor);
    Code:
       0: aload_0
       1: putstatic     #6                  // Field sceneAccessor:Lcom/sun/javafx/perf/PerformanceTracker$SceneAccessor;
       4: return

  public static void logEvent(java.lang.String);
    Code:
       0: invokestatic  #3                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #4                  // Method com/sun/javafx/tk/Toolkit.getPerformanceTracker:()Lcom/sun/javafx/perf/PerformanceTracker;
       6: aload_0
       7: invokevirtual #10                 // Method doLogEvent:(Ljava/lang/String;)V
      10: return

  public static void outputLog();
    Code:
       0: invokestatic  #3                  // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: invokevirtual #4                  // Method com/sun/javafx/tk/Toolkit.getPerformanceTracker:()Lcom/sun/javafx/perf/PerformanceTracker;
       6: invokevirtual #11                 // Method doOutputLog:()V
       9: return

  protected boolean isPerfLoggingEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field perfLoggingEnabled:Z
       4: ireturn

  protected void setPerfLoggingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field perfLoggingEnabled:Z
       5: return

  protected abstract long nanoTime();

  public abstract void doOutputLog();

  public abstract void doLogEvent(java.lang.String);

  public synchronized float getInstantFPS();
    Code:
       0: aload_0
       1: getfield      #12                 // Field instantFPS:F
       4: freturn

  public synchronized float getAverageFPS();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method nanoTime:()J
       4: aload_0
       5: getfield      #14                 // Field avgStartTime:J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifle          28
      16: aload_0
      17: getfield      #15                 // Field avgFramesTotal:I
      20: i2f
      21: ldc           #16                 // float 1.0E9f
      23: fmul
      24: lload_1
      25: l2f
      26: fdiv
      27: freturn
      28: aload_0
      29: invokevirtual #17                 // Method getInstantFPS:()F
      32: freturn

  public synchronized void resetAverageFPS();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #13                 // Method nanoTime:()J
       5: putfield      #14                 // Field avgStartTime:J
       8: aload_0
       9: iconst_0
      10: putfield      #15                 // Field avgFramesTotal:I
      13: return

  public float getInstantPulses();
    Code:
       0: aload_0
       1: getfield      #18                 // Field instantPulses:F
       4: freturn

  public float getAveragePulses();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method nanoTime:()J
       4: aload_0
       5: getfield      #19                 // Field avgPulsesStartTime:J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifle          28
      16: aload_0
      17: getfield      #20                 // Field avgPulsesTotal:I
      20: i2f
      21: ldc           #16                 // float 1.0E9f
      23: fmul
      24: lload_1
      25: l2f
      26: fdiv
      27: freturn
      28: aload_0
      29: invokevirtual #21                 // Method getInstantPulses:()F
      32: freturn

  public void resetAveragePulses();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #13                 // Method nanoTime:()J
       5: putfield      #19                 // Field avgPulsesStartTime:J
       8: aload_0
       9: iconst_0
      10: putfield      #20                 // Field avgPulsesTotal:I
      13: return

  public void pulse();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method calcPulses:()V
       4: aload_0
       5: invokespecial #23                 // Method updateInstantFps:()V
       8: aload_0
       9: getfield      #2                  // Field firstPulse:Z
      12: ifeq          50
      15: aload_0
      16: ldc           #24                 // String first repaint
      18: invokevirtual #10                 // Method doLogEvent:(Ljava/lang/String;)V
      21: aload_0
      22: iconst_0
      23: putfield      #2                  // Field firstPulse:Z
      26: aload_0
      27: invokevirtual #25                 // Method resetAverageFPS:()V
      30: aload_0
      31: invokevirtual #26                 // Method resetAveragePulses:()V
      34: aload_0
      35: getfield      #27                 // Field onFirstPulse:Ljava/lang/Runnable;
      38: ifnull        50
      41: aload_0
      42: getfield      #27                 // Field onFirstPulse:Ljava/lang/Runnable;
      45: invokeinterface #28,  1           // InterfaceMethod java/lang/Runnable.run:()V
      50: aload_0
      51: getfield      #29                 // Field onPulse:Ljava/lang/Runnable;
      54: ifnull        66
      57: aload_0
      58: getfield      #29                 // Field onPulse:Ljava/lang/Runnable;
      61: invokeinterface #28,  1           // InterfaceMethod java/lang/Runnable.run:()V
      66: return

  public void frameRendered();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method calcFPS:()V
       4: aload_0
       5: getfield      #31                 // Field onRenderedFrameTask:Ljava/lang/Runnable;
       8: ifnull        20
      11: aload_0
      12: getfield      #31                 // Field onRenderedFrameTask:Ljava/lang/Runnable;
      15: invokeinterface #28,  1           // InterfaceMethod java/lang/Runnable.run:()V
      20: return

  private void calcPulses();
    Code:
       0: aload_0
       1: dup
       2: getfield      #20                 // Field avgPulsesTotal:I
       5: iconst_1
       6: iadd
       7: putfield      #20                 // Field avgPulsesTotal:I
      10: aload_0
      11: dup
      12: getfield      #32                 // Field instantPulsesFrames:I
      15: iconst_1
      16: iadd
      17: putfield      #32                 // Field instantPulsesFrames:I
      20: aload_0
      21: invokespecial #33                 // Method updateInstantPulses:()V
      24: return

  private synchronized void calcFPS();
    Code:
       0: aload_0
       1: dup
       2: getfield      #15                 // Field avgFramesTotal:I
       5: iconst_1
       6: iadd
       7: putfield      #15                 // Field avgFramesTotal:I
      10: aload_0
      11: dup
      12: getfield      #34                 // Field instantFPSFrames:I
      15: iconst_1
      16: iadd
      17: putfield      #34                 // Field instantFPSFrames:I
      20: aload_0
      21: invokespecial #23                 // Method updateInstantFps:()V
      24: return

  private synchronized void updateInstantFps();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method nanoTime:()J
       4: aload_0
       5: getfield      #35                 // Field instantFPSStartTime:J
       8: lsub
       9: lstore_1
      10: lload_1
      11: ldc2_w        #36                 // long 1000000000l
      14: lcmp
      15: ifle          46
      18: aload_0
      19: ldc           #16                 // float 1.0E9f
      21: aload_0
      22: getfield      #34                 // Field instantFPSFrames:I
      25: i2f
      26: fmul
      27: lload_1
      28: l2f
      29: fdiv
      30: putfield      #12                 // Field instantFPS:F
      33: aload_0
      34: iconst_0
      35: putfield      #34                 // Field instantFPSFrames:I
      38: aload_0
      39: aload_0
      40: invokevirtual #13                 // Method nanoTime:()J
      43: putfield      #35                 // Field instantFPSStartTime:J
      46: return

  private void updateInstantPulses();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method nanoTime:()J
       4: aload_0
       5: getfield      #38                 // Field instantPulsesStartTime:J
       8: lsub
       9: lstore_1
      10: lload_1
      11: ldc2_w        #36                 // long 1000000000l
      14: lcmp
      15: ifle          46
      18: aload_0
      19: ldc           #16                 // float 1.0E9f
      21: aload_0
      22: getfield      #32                 // Field instantPulsesFrames:I
      25: i2f
      26: fmul
      27: lload_1
      28: l2f
      29: fdiv
      30: putfield      #18                 // Field instantPulses:F
      33: aload_0
      34: iconst_0
      35: putfield      #32                 // Field instantPulsesFrames:I
      38: aload_0
      39: aload_0
      40: invokevirtual #13                 // Method nanoTime:()J
      43: putfield      #38                 // Field instantPulsesStartTime:J
      46: return

  public void setOnPulse(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field onPulse:Ljava/lang/Runnable;
       5: return

  public java.lang.Runnable getOnPulse();
    Code:
       0: aload_0
       1: getfield      #29                 // Field onPulse:Ljava/lang/Runnable;
       4: areturn

  public void setOnFirstPulse(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field onFirstPulse:Ljava/lang/Runnable;
       5: return

  public java.lang.Runnable getOnFirstPulse();
    Code:
       0: aload_0
       1: getfield      #27                 // Field onFirstPulse:Ljava/lang/Runnable;
       4: areturn

  public void setOnRenderedFrameTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field onRenderedFrameTask:Ljava/lang/Runnable;
       5: return

  public java.lang.Runnable getOnRenderedFrameTask();
    Code:
       0: aload_0
       1: getfield      #31                 // Field onRenderedFrameTask:Ljava/lang/Runnable;
       4: areturn
}
