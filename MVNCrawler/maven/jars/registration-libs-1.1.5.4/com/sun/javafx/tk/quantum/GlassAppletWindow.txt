Compiled from "GlassAppletWindow.java"
class com.sun.javafx.tk.quantum.GlassAppletWindow implements com.sun.javafx.tk.AppletWindow {
  private final com.sun.glass.ui.Window glassWindow;

  private java.lang.ref.WeakReference<javafx.stage.Stage> topStage;

  private java.lang.String serverName;

  com.sun.javafx.tk.quantum.GlassAppletWindow(long, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: lconst_0
       5: lload_1
       6: lcmp
       7: ifne          39
      10: aload_3
      11: ifnull        24
      14: new           #2                  // class java/lang/RuntimeException
      17: dup
      18: ldc           #3                  // String GlassAppletWindow constructor used incorrectly.
      20: invokespecial #4                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokestatic  #5                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      28: aconst_null
      29: iconst_0
      30: invokevirtual #7                  // Method com/sun/glass/ui/Application.createWindow:(Lcom/sun/glass/ui/Screen;I)Lcom/sun/glass/ui/Window;
      33: putfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
      36: goto          55
      39: aload_0
      40: aload_3
      41: putfield      #9                  // Field serverName:Ljava/lang/String;
      44: aload_0
      45: invokestatic  #5                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      48: lload_1
      49: invokevirtual #10                 // Method com/sun/glass/ui/Application.createWindow:(J)Lcom/sun/glass/ui/Window;
      52: putfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
      55: aload_0
      56: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
      59: iconst_1
      60: invokevirtual #11                 // Method com/sun/glass/ui/Window.setAppletMode:(Z)V
      63: return

  com.sun.glass.ui.Window getGlassWindow();
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: areturn

  public void setBackgroundColor(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokedynamic #12,  0             // InvokeDynamic #0:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;I)Ljava/lang/Runnable;
       7: invokestatic  #13                 // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
      10: return

  public void setForegroundColor(int);
    Code:
       0: return

  public void setVisible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokedynamic #14,  0             // InvokeDynamic #1:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Z)Ljava/lang/Runnable;
       7: invokestatic  #13                 // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
      10: return

  public void setSize(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokedynamic #15,  0             // InvokeDynamic #2:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;II)Ljava/lang/Runnable;
       8: invokestatic  #13                 // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
      11: return

  public int getWidth();
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokedynamic #18,  0             // InvokeDynamic #3:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Runnable;
      16: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      19: aload_1
      20: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      23: ireturn

  public int getHeight();
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokedynamic #21,  0             // InvokeDynamic #4:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Runnable;
      16: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      19: aload_1
      20: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      23: ireturn

  public void setPosition(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokedynamic #22,  0             // InvokeDynamic #5:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;II)Ljava/lang/Runnable;
       8: invokestatic  #13                 // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
      11: return

  public int getPositionX();
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokedynamic #23,  0             // InvokeDynamic #6:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Runnable;
      16: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      19: aload_1
      20: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      23: ireturn

  public int getPositionY();
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokedynamic #24,  0             // InvokeDynamic #7:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Runnable;
      16: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      19: aload_1
      20: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      23: ireturn

  public float getPlatformScaleX();
    Code:
       0: new           #25                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: fconst_0
       5: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       8: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokedynamic #28,  0             // InvokeDynamic #8:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Runnable;
      19: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      22: aload_1
      23: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: checkcast     #30                 // class java/lang/Float
      29: invokevirtual #31                 // Method java/lang/Float.floatValue:()F
      32: freturn

  public float getPlatformScaleY();
    Code:
       0: new           #25                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: fconst_0
       5: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       8: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokedynamic #32,  0             // InvokeDynamic #9:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Runnable;
      19: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      22: aload_1
      23: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: checkcast     #30                 // class java/lang/Float
      29: invokevirtual #31                 // Method java/lang/Float.floatValue:()F
      32: freturn

  void dispose();
    Code:
       0: aload_0
       1: invokedynamic #33,  0             // InvokeDynamic #10:get:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;)Ljava/util/function/Supplier;
       6: invokestatic  #34                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.runWithRenderLock:(Ljava/util/function/Supplier;)Ljava/lang/Object;
       9: pop
      10: return

  public void setStageOnTop(javafx.stage.Stage);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     20
       5: aload_0
       6: new           #35                 // class java/lang/ref/WeakReference
       9: dup
      10: aload_1
      11: invokespecial #36                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      14: putfield      #37                 // Field topStage:Ljava/lang/ref/WeakReference;
      17: goto          25
      20: aload_0
      21: aconst_null
      22: putfield      #37                 // Field topStage:Ljava/lang/ref/WeakReference;
      25: return

  public int getRemoteLayerId();
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_m1
       5: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokedynamic #38,  0             // InvokeDynamic #11:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Runnable;
      16: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      19: aload_1
      20: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      23: ireturn

  public void dispatchEvent(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #39,  0             // InvokeDynamic #12:run:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;Ljava/util/Map;)Ljava/lang/Runnable;
       7: invokestatic  #19                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
      10: return

  void assertStageOrder();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #37                 // Field topStage:Ljava/lang/ref/WeakReference;
       5: if_acmpeq     63
       8: aload_0
       9: getfield      #37                 // Field topStage:Ljava/lang/ref/WeakReference;
      12: invokevirtual #40                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      15: checkcast     #41                 // class javafx/stage/Stage
      18: astore_1
      19: aconst_null
      20: aload_1
      21: if_acmpeq     63
      24: aload_1
      25: invokestatic  #42                 // Method com/sun/javafx/stage/WindowHelper.getPeer:(Ljavafx/stage/Window;)Lcom/sun/javafx/tk/TKStage;
      28: astore_2
      29: aload_2
      30: instanceof    #43                 // class com/sun/javafx/tk/quantum/WindowStage
      33: ifeq          63
      36: aload_2
      37: checkcast     #43                 // class com/sun/javafx/tk/quantum/WindowStage
      40: invokevirtual #44                 // Method com/sun/javafx/tk/quantum/WindowStage.isVisible:()Z
      43: ifeq          63
      46: aload_2
      47: checkcast     #43                 // class com/sun/javafx/tk/quantum/WindowStage
      50: invokevirtual #45                 // Method com/sun/javafx/tk/quantum/WindowStage.getPlatformWindow:()Lcom/sun/glass/ui/Window;
      53: astore_3
      54: aconst_null
      55: aload_3
      56: if_acmpeq     63
      59: aload_3
      60: invokevirtual #46                 // Method com/sun/glass/ui/Window.toFront:()V
      63: return

  private void lambda$dispatchEvent$12(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: aload_1
       5: invokevirtual #47                 // Method com/sun/glass/ui/Window.dispatchNpapiEvent:(Ljava/util/Map;)V
       8: return

  private void lambda$getRemoteLayerId$11(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: invokevirtual #48                 // Method com/sun/glass/ui/Window.getView:()Lcom/sun/glass/ui/View;
       7: astore_2
       8: aload_2
       9: ifnull        24
      12: aload_1
      13: aload_2
      14: aload_0
      15: getfield      #9                  // Field serverName:Ljava/lang/String;
      18: invokevirtual #49                 // Method com/sun/glass/ui/View.getNativeRemoteLayerId:(Ljava/lang/String;)I
      21: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      24: return

  private java.lang.Object lambda$dispose$10();
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: invokevirtual #51                 // Method com/sun/glass/ui/Window.close:()V
       7: aconst_null
       8: areturn

  private void lambda$getPlatformScaleY$9(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       5: invokevirtual #52                 // Method com/sun/glass/ui/Window.getPlatformScaleY:()F
       8: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      11: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      14: return

  private void lambda$getPlatformScaleX$8(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       5: invokevirtual #54                 // Method com/sun/glass/ui/Window.getPlatformScaleX:()F
       8: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      11: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      14: return

  private void lambda$getPositionY$7(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       5: invokevirtual #55                 // Method com/sun/glass/ui/Window.getY:()I
       8: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      11: return

  private void lambda$getPositionX$6(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       5: invokevirtual #56                 // Method com/sun/glass/ui/Window.getX:()I
       8: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      11: return

  private void lambda$setPosition$5(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: iload_1
       5: iload_2
       6: invokevirtual #57                 // Method com/sun/glass/ui/Window.setPosition:(II)V
       9: return

  private void lambda$getHeight$4(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       5: invokevirtual #58                 // Method com/sun/glass/ui/Window.getHeight:()I
       8: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      11: return

  private void lambda$getWidth$3(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       5: invokevirtual #59                 // Method com/sun/glass/ui/Window.getWidth:()I
       8: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      11: return

  private void lambda$setSize$2(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: iload_1
       5: iload_2
       6: invokevirtual #60                 // Method com/sun/glass/ui/Window.setSize:(II)V
       9: return

  private void lambda$setVisible$1(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
       4: iload_1
       5: invokevirtual #61                 // Method com/sun/glass/ui/Window.setVisible:(Z)V
       8: return

  private void lambda$setBackgroundColor$0(int);
    Code:
       0: iload_1
       1: bipush        16
       3: ishr
       4: sipush        255
       7: iand
       8: i2f
       9: ldc           #62                 // float 255.0f
      11: fdiv
      12: fstore_2
      13: iload_1
      14: bipush        8
      16: ishr
      17: sipush        255
      20: iand
      21: i2f
      22: ldc           #62                 // float 255.0f
      24: fdiv
      25: fstore_3
      26: iload_1
      27: sipush        255
      30: iand
      31: i2f
      32: ldc           #62                 // float 255.0f
      34: fdiv
      35: fstore        4
      37: aload_0
      38: getfield      #8                  // Field glassWindow:Lcom/sun/glass/ui/Window;
      41: fload_2
      42: fload_3
      43: fload         4
      45: invokevirtual #63                 // Method com/sun/glass/ui/Window.setBackground:(FFF)Z
      48: pop
      49: return
}
