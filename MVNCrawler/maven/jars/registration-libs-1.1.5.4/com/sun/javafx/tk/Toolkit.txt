Compiled from "Toolkit.java"
public abstract class com.sun.javafx.tk.Toolkit {
  private static java.lang.String tk;

  private static com.sun.javafx.tk.Toolkit TOOLKIT;

  private static java.lang.Thread fxUserThread;

  private static final java.lang.String QUANTUM_TOOLKIT;

  private static final java.lang.String DEFAULT_TOOLKIT;

  private static final java.util.Map gradientMap;

  private static final boolean verbose;

  private static final java.lang.String[] msLibNames;

  private final java.util.Map<com.sun.javafx.tk.TKPulseListener, java.security.AccessControlContext> stagePulseListeners;

  private final java.util.Map<com.sun.javafx.tk.TKPulseListener, java.security.AccessControlContext> scenePulseListeners;

  private final java.util.Map<com.sun.javafx.tk.TKPulseListener, java.security.AccessControlContext> postScenePulseListeners;

  private final java.util.Map<com.sun.javafx.tk.TKListener, java.security.AccessControlContext> toolkitListeners;

  private final java.util.Set<java.lang.Runnable> shutdownHooks;

  private com.sun.javafx.tk.TKPulseListener lastTkPulseListener;

  private java.security.AccessControlContext lastTkPulseAcc;

  private java.util.concurrent.CountDownLatch pauseScenesLatch;

  private static com.sun.javafx.tk.Toolkit$WritableImageAccessor writableImageAccessor;

  private static com.sun.javafx.tk.Toolkit$PaintAccessor paintAccessor;

  private static com.sun.javafx.tk.Toolkit$ImageAccessor imageAccessor;

  private static java.lang.String lookupToolkitClass(java.lang.String);
    Code:
       0: ldc           #2                  // String prism
       2: aload_0
       3: invokevirtual #3                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          12
       9: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
      11: areturn
      12: ldc           #5                  // String quantum
      14: aload_0
      15: invokevirtual #3                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      18: ifeq          24
      21: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
      23: areturn
      24: aload_0
      25: areturn

  public static synchronized void loadMSWindowsLibraries();
    Code:
       0: getstatic     #6                  // Field msLibNames:[Ljava/lang/String;
       3: astore_0
       4: aload_0
       5: arraylength
       6: istore_1
       7: iconst_0
       8: istore_2
       9: iload_2
      10: iload_1
      11: if_icmpge     53
      14: aload_0
      15: iload_2
      16: aaload
      17: astore_3
      18: aload_3
      19: invokestatic  #7                  // Method com/sun/glass/utils/NativeLibLoader.loadLibrary:(Ljava/lang/String;)V
      22: goto          47
      25: astore        4
      27: getstatic     #9                  // Field verbose:Z
      30: ifeq          47
      33: getstatic     #10                 // Field java/lang/System.err:Ljava/io/PrintStream;
      36: aload_3
      37: aload         4
      39: invokedynamic #11,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
      44: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      47: iinc          2, 1
      50: goto          9
      53: return
    Exception table:
       from    to  target type
          18    22    25   Class java/lang/Throwable

  private static java.lang.String getDefaultToolkit();
    Code:
       0: invokestatic  #13                 // Method com/sun/javafx/PlatformUtil.isWindows:()Z
       3: ifeq          9
       6: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
       8: areturn
       9: invokestatic  #14                 // Method com/sun/javafx/PlatformUtil.isMac:()Z
      12: ifeq          18
      15: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
      17: areturn
      18: invokestatic  #15                 // Method com/sun/javafx/PlatformUtil.isLinux:()Z
      21: ifeq          27
      24: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
      26: areturn
      27: invokestatic  #16                 // Method com/sun/javafx/PlatformUtil.isIOS:()Z
      30: ifeq          36
      33: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
      35: areturn
      36: invokestatic  #17                 // Method com/sun/javafx/PlatformUtil.isAndroid:()Z
      39: ifeq          45
      42: ldc           #4                  // String com.sun.javafx.tk.quantum.QuantumToolkit
      44: areturn
      45: new           #18                 // class java/lang/UnsupportedOperationException
      48: dup
      49: ldc           #19                 // String os.name
      51: invokestatic  #20                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      54: invokedynamic #21,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      59: invokespecial #22                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      62: athrow

  public static synchronized com.sun.javafx.tk.Toolkit getToolkit();
    Code:
       0: getstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
       3: ifnull        10
       6: getstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
       9: areturn
      10: invokedynamic #24,  0             // InvokeDynamic #2:run:()Ljava/security/PrivilegedAction;
      15: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: pop
      19: invokestatic  #13                 // Method com/sun/javafx/PlatformUtil.isWindows:()Z
      22: ifeq          28
      25: invokestatic  #26                 // Method loadMSWindowsLibraries:()V
      28: iconst_1
      29: istore_0
      30: aconst_null
      31: astore_1
      32: ldc           #27                 // String javafx.toolkit
      34: invokestatic  #20                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      37: astore_1
      38: goto          42
      41: astore_2
      42: aload_1
      43: ifnonnull     50
      46: getstatic     #29                 // Field tk:Ljava/lang/String;
      49: astore_1
      50: aload_1
      51: ifnonnull     60
      54: iconst_0
      55: istore_0
      56: invokestatic  #30                 // Method getDefaultToolkit:()Ljava/lang/String;
      59: astore_1
      60: aload_1
      61: bipush        46
      63: invokevirtual #31                 // Method java/lang/String.indexOf:(I)I
      66: iconst_m1
      67: if_icmpne     75
      70: aload_1
      71: invokestatic  #32                 // Method lookupToolkitClass:(Ljava/lang/String;)Ljava/lang/String;
      74: astore_1
      75: getstatic     #9                  // Field verbose:Z
      78: ifne          94
      81: iload_0
      82: ifeq          98
      85: aload_1
      86: ldc           #33                 // String StubToolkit
      88: invokevirtual #34                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      91: ifne          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore_2
     100: aconst_null
     101: astore_3
     102: ldc           #1                  // class com/sun/javafx/tk/Toolkit
     104: invokevirtual #35                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     107: astore        4
     109: aload_1
     110: iconst_0
     111: aload         4
     113: invokestatic  #36                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
     116: astore_3
     117: goto          138
     120: astore        4
     122: invokestatic  #38                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     125: invokevirtual #39                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
     128: astore        5
     130: aload_1
     131: iconst_0
     132: aload         5
     134: invokestatic  #36                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
     137: astore_3
     138: ldc           #1                  // class com/sun/javafx/tk/Toolkit
     140: aload_3
     141: invokevirtual #40                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     144: ifne          161
     147: new           #41                 // class java/lang/IllegalArgumentException
     150: dup
     151: aload_1
     152: invokedynamic #42,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     157: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: aload_3
     162: invokevirtual #44                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     165: checkcast     #1                  // class com/sun/javafx/tk/Toolkit
     168: putstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
     171: getstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
     174: invokevirtual #45                 // Method init:()Z
     177: ifeq          200
     180: iload_2
     181: ifeq          196
     184: getstatic     #10                 // Field java/lang/System.err:Ljava/io/PrintStream;
     187: aload_1
     188: invokedynamic #46,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     193: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     196: getstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
     199: areturn
     200: aconst_null
     201: putstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
     204: goto          216
     207: astore_3
     208: aconst_null
     209: putstatic     #23                 // Field TOOLKIT:Lcom/sun/javafx/tk/Toolkit;
     212: aload_3
     213: invokevirtual #48                 // Method java/lang/Exception.printStackTrace:()V
     216: new           #49                 // class java/lang/RuntimeException
     219: dup
     220: ldc           #50                 // String No toolkit found
     222: invokespecial #51                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     225: athrow
    Exception table:
       from    to  target type
          32    38    41   Class java/lang/SecurityException
         102   117   120   Class java/lang/ClassNotFoundException
         100   199   207   Class java/lang/Exception
         200   204   207   Class java/lang/Exception

  protected static java.lang.Thread getFxUserThread();
    Code:
       0: getstatic     #52                 // Field fxUserThread:Ljava/lang/Thread;
       3: areturn

  protected static void setFxUserThread(java.lang.Thread);
    Code:
       0: getstatic     #52                 // Field fxUserThread:Ljava/lang/Thread;
       3: ifnull        16
       6: new           #53                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #54                 // String Error: FX User Thread already initialized
      12: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: putstatic     #52                 // Field fxUserThread:Ljava/lang/Thread;
      20: return

  public void checkFxUserThread();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method isFxUserThread:()Z
       4: ifne          26
       7: new           #53                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #38                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: invokevirtual #57                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      17: invokedynamic #58,  0             // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      22: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: return

  public boolean isFxUserThread();
    Code:
       0: invokestatic  #38                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: getstatic     #52                 // Field fxUserThread:Ljava/lang/Thread;
       6: if_acmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  protected com.sun.javafx.tk.Toolkit();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #60                 // class java/util/WeakHashMap
       8: dup
       9: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      12: putfield      #62                 // Field stagePulseListeners:Ljava/util/Map;
      15: aload_0
      16: new           #60                 // class java/util/WeakHashMap
      19: dup
      20: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      23: putfield      #63                 // Field scenePulseListeners:Ljava/util/Map;
      26: aload_0
      27: new           #60                 // class java/util/WeakHashMap
      30: dup
      31: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      34: putfield      #64                 // Field postScenePulseListeners:Ljava/util/Map;
      37: aload_0
      38: new           #60                 // class java/util/WeakHashMap
      41: dup
      42: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      45: putfield      #65                 // Field toolkitListeners:Ljava/util/Map;
      48: aload_0
      49: new           #66                 // class java/util/HashSet
      52: dup
      53: invokespecial #67                 // Method java/util/HashSet."<init>":()V
      56: putfield      #68                 // Field shutdownHooks:Ljava/util/Set;
      59: aload_0
      60: aconst_null
      61: putfield      #69                 // Field lastTkPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
      64: aload_0
      65: aconst_null
      66: putfield      #70                 // Field lastTkPulseAcc:Ljava/security/AccessControlContext;
      69: aload_0
      70: aconst_null
      71: putfield      #71                 // Field pauseScenesLatch:Ljava/util/concurrent/CountDownLatch;
      74: return

  public abstract boolean init();

  public abstract boolean canStartNestedEventLoop();

  public abstract java.lang.Object enterNestedEventLoop(java.lang.Object);

  public abstract void exitNestedEventLoop(java.lang.Object, java.lang.Object);

  public abstract void exitAllNestedEventLoops();

  public abstract boolean isNestedLoopRunning();

  public abstract com.sun.javafx.tk.TKStage createTKStage(javafx.stage.Window, boolean, javafx.stage.StageStyle, boolean, javafx.stage.Modality, com.sun.javafx.tk.TKStage, boolean, java.security.AccessControlContext);

  public abstract com.sun.javafx.tk.TKStage createTKPopupStage(javafx.stage.Window, javafx.stage.StageStyle, com.sun.javafx.tk.TKStage, java.security.AccessControlContext);

  public abstract com.sun.javafx.tk.TKStage createTKEmbeddedStage(com.sun.javafx.embed.HostInterface, java.security.AccessControlContext);

  public abstract com.sun.javafx.tk.AppletWindow createAppletWindow(long, java.lang.String);

  public abstract void closeAppletWindow();

  private void runPulse(com.sun.javafx.tk.TKPulseListener, java.security.AccessControlContext);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #53                 // class java/lang/IllegalStateException
       7: dup
       8: ldc           #72                 // String Invalid AccessControlContext
      10: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokedynamic #73,  0             // InvokeDynamic #6:run:(Lcom/sun/javafx/tk/TKPulseListener;)Ljava/security/PrivilegedAction;
      20: aload_2
      21: invokestatic  #74                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      24: pop
      25: return

  public void firePulse();
    Code:
       0: new           #60                 // class java/util/WeakHashMap
       3: dup
       4: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
       7: astore_1
       8: new           #60                 // class java/util/WeakHashMap
      11: dup
      12: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      15: astore_2
      16: new           #60                 // class java/util/WeakHashMap
      19: dup
      20: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      23: astore_3
      24: aload_0
      25: dup
      26: astore        4
      28: monitorenter
      29: aload_1
      30: aload_0
      31: getfield      #62                 // Field stagePulseListeners:Ljava/util/Map;
      34: invokeinterface #75,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      39: aload_2
      40: aload_0
      41: getfield      #63                 // Field scenePulseListeners:Ljava/util/Map;
      44: invokeinterface #75,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      49: aload_3
      50: aload_0
      51: getfield      #64                 // Field postScenePulseListeners:Ljava/util/Map;
      54: invokeinterface #75,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      59: aload         4
      61: monitorexit
      62: goto          73
      65: astore        5
      67: aload         4
      69: monitorexit
      70: aload         5
      72: athrow
      73: aload_1
      74: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      79: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      84: astore        4
      86: aload         4
      88: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          135
      96: aload         4
      98: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #80                 // class java/util/Map$Entry
     106: astore        5
     108: aload_0
     109: aload         5
     111: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     116: checkcast     #82                 // class com/sun/javafx/tk/TKPulseListener
     119: aload         5
     121: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     126: checkcast     #84                 // class java/security/AccessControlContext
     129: invokespecial #85                 // Method runPulse:(Lcom/sun/javafx/tk/TKPulseListener;Ljava/security/AccessControlContext;)V
     132: goto          86
     135: aload_2
     136: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     141: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     146: astore        4
     148: aload         4
     150: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     155: ifeq          197
     158: aload         4
     160: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     165: checkcast     #80                 // class java/util/Map$Entry
     168: astore        5
     170: aload_0
     171: aload         5
     173: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     178: checkcast     #82                 // class com/sun/javafx/tk/TKPulseListener
     181: aload         5
     183: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     188: checkcast     #84                 // class java/security/AccessControlContext
     191: invokespecial #85                 // Method runPulse:(Lcom/sun/javafx/tk/TKPulseListener;Ljava/security/AccessControlContext;)V
     194: goto          148
     197: aload_3
     198: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     203: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     208: astore        4
     210: aload         4
     212: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     217: ifeq          259
     220: aload         4
     222: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     227: checkcast     #80                 // class java/util/Map$Entry
     230: astore        5
     232: aload_0
     233: aload         5
     235: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     240: checkcast     #82                 // class com/sun/javafx/tk/TKPulseListener
     243: aload         5
     245: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     250: checkcast     #84                 // class java/security/AccessControlContext
     253: invokespecial #85                 // Method runPulse:(Lcom/sun/javafx/tk/TKPulseListener;Ljava/security/AccessControlContext;)V
     256: goto          210
     259: aload_0
     260: getfield      #69                 // Field lastTkPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
     263: ifnull        278
     266: aload_0
     267: aload_0
     268: getfield      #69                 // Field lastTkPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
     271: aload_0
     272: getfield      #70                 // Field lastTkPulseAcc:Ljava/security/AccessControlContext;
     275: invokespecial #85                 // Method runPulse:(Lcom/sun/javafx/tk/TKPulseListener;Ljava/security/AccessControlContext;)V
     278: return
    Exception table:
       from    to  target type
          29    62    65   any
          65    70    65   any

  public void addStageTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: dup
       7: astore_2
       8: monitorenter
       9: invokestatic  #86                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      12: astore_3
      13: aload_0
      14: getfield      #62                 // Field stagePulseListeners:Ljava/util/Map;
      17: aload_1
      18: aload_3
      19: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_2
      26: monitorexit
      27: goto          37
      30: astore        4
      32: aload_2
      33: monitorexit
      34: aload         4
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    27    30   any
          30    34    30   any

  public void removeStageTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #62                 // Field stagePulseListeners:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           4    17    20   any
          20    23    20   any

  public void addSceneTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: dup
       7: astore_2
       8: monitorenter
       9: invokestatic  #86                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      12: astore_3
      13: aload_0
      14: getfield      #63                 // Field scenePulseListeners:Ljava/util/Map;
      17: aload_1
      18: aload_3
      19: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_2
      26: monitorexit
      27: goto          37
      30: astore        4
      32: aload_2
      33: monitorexit
      34: aload         4
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    27    30   any
          30    34    30   any

  public void removeSceneTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #63                 // Field scenePulseListeners:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           4    17    20   any
          20    23    20   any

  public void addPostSceneTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: dup
       7: astore_2
       8: monitorenter
       9: invokestatic  #86                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      12: astore_3
      13: aload_0
      14: getfield      #64                 // Field postScenePulseListeners:Ljava/util/Map;
      17: aload_1
      18: aload_3
      19: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_2
      26: monitorexit
      27: goto          37
      30: astore        4
      32: aload_2
      33: monitorexit
      34: aload         4
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    27    30   any
          30    34    30   any

  public void removePostSceneTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #64                 // Field postScenePulseListeners:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           4    17    20   any
          20    23    20   any

  public void addTkListener(com.sun.javafx.tk.TKListener);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: invokestatic  #86                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
       8: astore_2
       9: aload_0
      10: getfield      #65                 // Field toolkitListeners:Ljava/util/Map;
      13: aload_1
      14: aload_2
      15: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public void removeTkListener(com.sun.javafx.tk.TKListener);
    Code:
       0: aload_0
       1: getfield      #65                 // Field toolkitListeners:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void setLastTkPulseListener(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_0
       1: invokestatic  #86                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
       4: putfield      #70                 // Field lastTkPulseAcc:Ljava/security/AccessControlContext;
       7: aload_0
       8: aload_1
       9: putfield      #69                 // Field lastTkPulseListener:Lcom/sun/javafx/tk/TKPulseListener;
      12: return

  public void addShutdownHook(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
      16: aload_1
      17: invokeinterface #89,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_2
      24: monitorexit
      25: goto          33
      28: astore_3
      29: aload_2
      30: monitorexit
      31: aload_3
      32: athrow
      33: return
    Exception table:
       from    to  target type
          12    25    28   any
          28    31    28   any

  public void removeShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #90,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  protected void notifyShutdownHooks();
    Code:
       0: aload_0
       1: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: new           #91                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
      15: invokespecial #92                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore_1
      19: aload_0
      20: getfield      #68                 // Field shutdownHooks:Ljava/util/Set;
      23: invokeinterface #93,  1           // InterfaceMethod java/util/Set.clear:()V
      28: aload_2
      29: monitorexit
      30: goto          38
      33: astore_3
      34: aload_2
      35: monitorexit
      36: aload_3
      37: athrow
      38: aload_1
      39: invokeinterface #94,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      44: astore_2
      45: aload_2
      46: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          73
      54: aload_2
      55: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #95                 // class java/lang/Runnable
      63: astore_3
      64: aload_3
      65: invokeinterface #96,  1           // InterfaceMethod java/lang/Runnable.run:()V
      70: goto          45
      73: return
    Exception table:
       from    to  target type
           7    30    33   any
          33    36    33   any

  public void notifyWindowListeners(java.util.List<com.sun.javafx.tk.TKStage>);
    Code:
       0: aload_0
       1: getfield      #65                 // Field toolkitListeners:Ljava/util/Map;
       4: invokeinterface #76,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          88
      24: aload_2
      25: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #80                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #97                 // class com/sun/javafx/tk/TKListener
      43: astore        4
      45: aload_3
      46: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #84                 // class java/security/AccessControlContext
      54: astore        5
      56: aload         5
      58: ifnonnull     71
      61: new           #53                 // class java/lang/IllegalStateException
      64: dup
      65: ldc           #72                 // String Invalid AccessControlContext
      67: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload         4
      73: aload_1
      74: invokedynamic #98,  0             // InvokeDynamic #7:run:(Lcom/sun/javafx/tk/TKListener;Ljava/util/List;)Ljava/security/PrivilegedAction;
      79: aload         5
      81: invokestatic  #74                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      84: pop
      85: goto          15
      88: return

  public void notifyLastNestedLoopExited();
    Code:
       0: aload_0
       1: getfield      #65                 // Field toolkitListeners:Ljava/util/Map;
       4: invokeinterface #99,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          43
      24: aload_1
      25: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #97                 // class com/sun/javafx/tk/TKListener
      33: astore_2
      34: aload_2
      35: invokeinterface #100,  1          // InterfaceMethod com/sun/javafx/tk/TKListener.exitedLastNestedLoop:()V
      40: goto          15
      43: return

  public abstract void requestNextPulse();

  public abstract java.util.concurrent.Future addRenderJob(com.sun.javafx.tk.RenderJob);

  public abstract com.sun.javafx.tk.ImageLoader loadImage(java.lang.String, double, double, boolean, boolean);

  public abstract com.sun.javafx.tk.ImageLoader loadImage(java.io.InputStream, double, double, boolean, boolean);

  public abstract com.sun.javafx.runtime.async.AsyncOperation loadImageAsync(com.sun.javafx.runtime.async.AsyncOperationListener<? extends com.sun.javafx.tk.ImageLoader>, java.lang.String, double, double, boolean, boolean);

  public abstract com.sun.javafx.tk.ImageLoader loadPlatformImage(java.lang.Object);

  public abstract com.sun.javafx.tk.PlatformImage createPlatformImage(int, int);

  public boolean getDefaultImageSmooth();
    Code:
       0: iconst_1
       1: ireturn

  public abstract void startup(java.lang.Runnable);

  public abstract void defer(java.lang.Runnable);

  public void exit();
    Code:
       0: aconst_null
       1: putstatic     #52                 // Field fxUserThread:Ljava/lang/Thread;
       4: return

  public abstract java.util.Map<java.lang.Object, java.lang.Object> getContextMap();

  public abstract int getRefreshRate();

  public abstract void setAnimationRunnable(com.sun.scenario.DelayedRunnable);

  public abstract com.sun.javafx.perf.PerformanceTracker getPerformanceTracker();

  public abstract com.sun.javafx.perf.PerformanceTracker createPerformanceTracker();

  public abstract void waitFor(com.sun.javafx.tk.Toolkit$Task);

  private java.lang.Object checkSingleColor(java.util.List<javafx.scene.paint.Stop>);
    Code:
       0: aload_1
       1: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
       6: iconst_2
       7: if_icmpne     54
      10: aload_1
      11: iconst_0
      12: invokeinterface #102,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #103                // class javafx/scene/paint/Stop
      20: invokevirtual #104                // Method javafx/scene/paint/Stop.getColor:()Ljavafx/scene/paint/Color;
      23: astore_2
      24: aload_2
      25: aload_1
      26: iconst_1
      27: invokeinterface #102,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #103                // class javafx/scene/paint/Stop
      35: invokevirtual #104                // Method javafx/scene/paint/Stop.getColor:()Ljavafx/scene/paint/Color;
      38: invokevirtual #105                // Method javafx/scene/paint/Color.equals:(Ljava/lang/Object;)Z
      41: ifeq          54
      44: invokestatic  #106                // Method getPaintAccessor:()Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
      47: aload_2
      48: invokeinterface #107,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$PaintAccessor.getPlatformPaint:(Ljavafx/scene/paint/Paint;)Ljava/lang/Object;
      53: areturn
      54: aconst_null
      55: areturn

  private java.lang.Object getPaint(javafx.scene.paint.LinearGradient);
    Code:
       0: getstatic     #108                // Field gradientMap:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #109,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnull        16
      14: aload_2
      15: areturn
      16: aload_0
      17: aload_1
      18: invokevirtual #110                // Method javafx/scene/paint/LinearGradient.getStops:()Ljava/util/List;
      21: invokespecial #111                // Method checkSingleColor:(Ljava/util/List;)Ljava/lang/Object;
      24: astore_2
      25: aload_2
      26: ifnonnull     35
      29: aload_0
      30: aload_1
      31: invokevirtual #112                // Method createLinearGradientPaint:(Ljavafx/scene/paint/LinearGradient;)Ljava/lang/Object;
      34: astore_2
      35: getstatic     #108                // Field gradientMap:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_2
      47: areturn

  private java.lang.Object getPaint(javafx.scene.paint.RadialGradient);
    Code:
       0: getstatic     #108                // Field gradientMap:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #109,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnull        16
      14: aload_2
      15: areturn
      16: aload_0
      17: aload_1
      18: invokevirtual #113                // Method javafx/scene/paint/RadialGradient.getStops:()Ljava/util/List;
      21: invokespecial #111                // Method checkSingleColor:(Ljava/util/List;)Ljava/lang/Object;
      24: astore_2
      25: aload_2
      26: ifnonnull     35
      29: aload_0
      30: aload_1
      31: invokevirtual #114                // Method createRadialGradientPaint:(Ljavafx/scene/paint/RadialGradient;)Ljava/lang/Object;
      34: astore_2
      35: getstatic     #108                // Field gradientMap:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_2
      47: areturn

  public java.lang.Object getPaint(javafx.scene.paint.Paint);
    Code:
       0: aload_1
       1: instanceof    #115                // class javafx/scene/paint/Color
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #115                // class javafx/scene/paint/Color
      12: invokevirtual #116                // Method createColorPaint:(Ljavafx/scene/paint/Color;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: instanceof    #117                // class javafx/scene/paint/LinearGradient
      20: ifeq          32
      23: aload_0
      24: aload_1
      25: checkcast     #117                // class javafx/scene/paint/LinearGradient
      28: invokespecial #118                // Method getPaint:(Ljavafx/scene/paint/LinearGradient;)Ljava/lang/Object;
      31: areturn
      32: aload_1
      33: instanceof    #119                // class javafx/scene/paint/RadialGradient
      36: ifeq          48
      39: aload_0
      40: aload_1
      41: checkcast     #119                // class javafx/scene/paint/RadialGradient
      44: invokespecial #120                // Method getPaint:(Ljavafx/scene/paint/RadialGradient;)Ljava/lang/Object;
      47: areturn
      48: aload_1
      49: instanceof    #121                // class javafx/scene/paint/ImagePattern
      52: ifeq          64
      55: aload_0
      56: aload_1
      57: checkcast     #121                // class javafx/scene/paint/ImagePattern
      60: invokevirtual #122                // Method createImagePatternPaint:(Ljavafx/scene/paint/ImagePattern;)Ljava/lang/Object;
      63: areturn
      64: aconst_null
      65: areturn

  protected static final double clampStopOffset(double);
    Code:
       0: dload_0
       1: dconst_1
       2: dcmpl
       3: ifle          10
       6: dconst_1
       7: goto          21
      10: dload_0
      11: dconst_0
      12: dcmpg
      13: ifge          20
      16: dconst_0
      17: goto          21
      20: dload_0
      21: dreturn

  protected abstract java.lang.Object createColorPaint(javafx.scene.paint.Color);

  protected abstract java.lang.Object createLinearGradientPaint(javafx.scene.paint.LinearGradient);

  protected abstract java.lang.Object createRadialGradientPaint(javafx.scene.paint.RadialGradient);

  protected abstract java.lang.Object createImagePatternPaint(javafx.scene.paint.ImagePattern);

  public abstract void accumulateStrokeBounds(com.sun.javafx.geom.Shape, float[], javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float, com.sun.javafx.geom.transform.BaseTransform);

  public abstract boolean strokeContains(com.sun.javafx.geom.Shape, double, double, javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float);

  public abstract com.sun.javafx.geom.Shape createStrokedShape(com.sun.javafx.geom.Shape, javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float, float[], float);

  public abstract int getKeyCodeForChar(java.lang.String);

  public abstract javafx.geometry.Dimension2D getBestCursorSize(int, int);

  public abstract int getMaximumCursorColors();

  public abstract javafx.scene.shape.PathElement[] convertShapeToFXPath(java.lang.Object);

  public abstract com.sun.scenario.effect.Filterable toFilterable(javafx.scene.image.Image);

  public abstract com.sun.scenario.effect.FilterContext getFilterContext(java.lang.Object);

  public abstract boolean isForwardTraversalKey(javafx.scene.input.KeyEvent);

  public abstract boolean isBackwardTraversalKey(javafx.scene.input.KeyEvent);

  public abstract com.sun.scenario.animation.AbstractMasterTimer getMasterTimer();

  public abstract com.sun.javafx.tk.FontLoader getFontLoader();

  public abstract com.sun.javafx.scene.text.TextLayoutFactory getTextLayoutFactory();

  public abstract java.lang.Object createSVGPathObject(javafx.scene.shape.SVGPath);

  public abstract com.sun.javafx.geom.Path2D createSVGPath2D(javafx.scene.shape.SVGPath);

  public abstract boolean imageContains(java.lang.Object, float, float);

  public abstract com.sun.javafx.tk.TKClipboard getSystemClipboard();

  public com.sun.javafx.tk.TKClipboard createLocalClipboard();
    Code:
       0: new           #123                // class com/sun/javafx/tk/LocalClipboard
       3: dup
       4: invokespecial #124                // Method com/sun/javafx/tk/LocalClipboard."<init>":()V
       7: areturn

  public abstract com.sun.javafx.tk.TKSystemMenu getSystemMenu();

  public abstract com.sun.javafx.tk.TKClipboard getNamedClipboard(java.lang.String);

  public boolean isSupported(javafx.application.ConditionalFeature);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMSAASupported();
    Code:
       0: iconst_0
       1: ireturn

  public abstract com.sun.javafx.tk.ScreenConfigurationAccessor setScreenConfigurationListener(com.sun.javafx.tk.TKScreenConfigurationListener);

  public abstract java.lang.Object getPrimaryScreen();

  public abstract java.util.List<?> getScreens();

  public abstract com.sun.javafx.tk.ScreenConfigurationAccessor getScreenConfigurationAccessor();

  public abstract void registerDragGestureListener(com.sun.javafx.tk.TKScene, java.util.Set<javafx.scene.input.TransferMode>, com.sun.javafx.tk.TKDragGestureListener);

  public abstract void startDrag(com.sun.javafx.tk.TKScene, java.util.Set<javafx.scene.input.TransferMode>, com.sun.javafx.tk.TKDragSourceListener, javafx.scene.input.Dragboard);

  public void stopDrag(javafx.scene.input.Dragboard);
    Code:
       0: return

  public abstract void enableDrop(com.sun.javafx.tk.TKScene, com.sun.javafx.tk.TKDropTargetListener);

  public com.sun.scenario.effect.Color4f toColor4f(javafx.scene.paint.Color);
    Code:
       0: new           #125                // class com/sun/scenario/effect/Color4f
       3: dup
       4: aload_1
       5: invokevirtual #126                // Method javafx/scene/paint/Color.getRed:()D
       8: d2f
       9: aload_1
      10: invokevirtual #127                // Method javafx/scene/paint/Color.getGreen:()D
      13: d2f
      14: aload_1
      15: invokevirtual #128                // Method javafx/scene/paint/Color.getBlue:()D
      18: d2f
      19: aload_1
      20: invokevirtual #129                // Method javafx/scene/paint/Color.getOpacity:()D
      23: d2f
      24: invokespecial #130                // Method com/sun/scenario/effect/Color4f."<init>":(FFFF)V
      27: areturn

  public com.sun.scenario.effect.AbstractShadow$ShadowMode toShadowMode(javafx.scene.effect.BlurType);
    Code:
       0: getstatic     #131                // Field com/sun/javafx/tk/Toolkit$1.$SwitchMap$javafx$scene$effect$BlurType:[I
       3: aload_1
       4: invokevirtual #132                // Method javafx/scene/effect/BlurType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 40
                     3: 44
               default: 48
          }
      36: getstatic     #133                // Field com/sun/scenario/effect/AbstractShadow$ShadowMode.ONE_PASS_BOX:Lcom/sun/scenario/effect/AbstractShadow$ShadowMode;
      39: areturn
      40: getstatic     #134                // Field com/sun/scenario/effect/AbstractShadow$ShadowMode.TWO_PASS_BOX:Lcom/sun/scenario/effect/AbstractShadow$ShadowMode;
      43: areturn
      44: getstatic     #135                // Field com/sun/scenario/effect/AbstractShadow$ShadowMode.THREE_PASS_BOX:Lcom/sun/scenario/effect/AbstractShadow$ShadowMode;
      47: areturn
      48: getstatic     #136                // Field com/sun/scenario/effect/AbstractShadow$ShadowMode.GAUSSIAN:Lcom/sun/scenario/effect/AbstractShadow$ShadowMode;
      51: areturn

  public abstract void installInputMethodRequests(com.sun.javafx.tk.TKScene, javafx.scene.input.InputMethodRequests);

  public abstract java.lang.Object renderToImage(com.sun.javafx.tk.Toolkit$ImageRenderingContext);

  public javafx.scene.input.KeyCode getPlatformShortcutKey();
    Code:
       0: invokestatic  #14                 // Method com/sun/javafx/PlatformUtil.isMac:()Z
       3: ifeq          12
       6: getstatic     #137                // Field javafx/scene/input/KeyCode.META:Ljavafx/scene/input/KeyCode;
       9: goto          15
      12: getstatic     #138                // Field javafx/scene/input/KeyCode.CONTROL:Ljavafx/scene/input/KeyCode;
      15: areturn

  public abstract com.sun.glass.ui.CommonDialogs$FileChooserResult showFileChooser(com.sun.javafx.tk.TKStage, java.lang.String, java.io.File, java.lang.String, com.sun.javafx.tk.FileChooserType, java.util.List<javafx.stage.FileChooser$ExtensionFilter>, javafx.stage.FileChooser$ExtensionFilter);

  public abstract java.io.File showDirectoryChooser(com.sun.javafx.tk.TKStage, java.lang.String, java.io.File);

  public abstract long getMultiClickTime();

  public abstract int getMultiClickMaxX();

  public abstract int getMultiClickMaxY();

  public static void setWritableImageAccessor(com.sun.javafx.tk.Toolkit$WritableImageAccessor);
    Code:
       0: aload_0
       1: putstatic     #139                // Field writableImageAccessor:Lcom/sun/javafx/tk/Toolkit$WritableImageAccessor;
       4: return

  public static com.sun.javafx.tk.Toolkit$WritableImageAccessor getWritableImageAccessor();
    Code:
       0: getstatic     #139                // Field writableImageAccessor:Lcom/sun/javafx/tk/Toolkit$WritableImageAccessor;
       3: areturn

  public static void setPaintAccessor(com.sun.javafx.tk.Toolkit$PaintAccessor);
    Code:
       0: aload_0
       1: putstatic     #140                // Field paintAccessor:Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
       4: return

  public static com.sun.javafx.tk.Toolkit$PaintAccessor getPaintAccessor();
    Code:
       0: getstatic     #140                // Field paintAccessor:Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
       3: areturn

  public static void setImageAccessor(com.sun.javafx.tk.Toolkit$ImageAccessor);
    Code:
       0: aload_0
       1: putstatic     #141                // Field imageAccessor:Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
       4: return

  public static com.sun.javafx.tk.Toolkit$ImageAccessor getImageAccessor();
    Code:
       0: getstatic     #141                // Field imageAccessor:Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
       3: areturn

  public java.lang.String getThemeName();
    Code:
       0: aconst_null
       1: areturn

  public abstract com.sun.glass.ui.GlassRobot createRobot();

  private static java.lang.Void lambda$notifyWindowListeners$3(com.sun.javafx.tk.TKListener, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #142,  2          // InterfaceMethod com/sun/javafx/tk/TKListener.changedTopLevelWindows:(Ljava/util/List;)V
       7: aconst_null
       8: areturn

  private static java.lang.Void lambda$runPulse$2(com.sun.javafx.tk.TKPulseListener);
    Code:
       0: aload_0
       1: invokeinterface #143,  1          // InterfaceMethod com/sun/javafx/tk/TKPulseListener.pulse:()V
       6: aconst_null
       7: areturn

  private static java.lang.Object lambda$getToolkit$1();
    Code:
       0: invokestatic  #144                // Method com/sun/javafx/runtime/VersionInfo.setupSystemProperties:()V
       3: aconst_null
       4: areturn

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc           #145                // String javafx.verbose
       2: invokestatic  #146                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: invokestatic  #147                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #52                 // Field fxUserThread:Ljava/lang/Thread;
       4: new           #60                 // class java/util/WeakHashMap
       7: dup
       8: invokespecial #61                 // Method java/util/WeakHashMap."<init>":()V
      11: putstatic     #108                // Field gradientMap:Ljava/util/Map;
      14: invokedynamic #148,  0            // InvokeDynamic #8:run:()Ljava/security/PrivilegedAction;
      19: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      22: checkcast     #149                // class java/lang/Boolean
      25: invokevirtual #150                // Method java/lang/Boolean.booleanValue:()Z
      28: putstatic     #9                  // Field verbose:Z
      31: bipush        44
      33: anewarray     #151                // class java/lang/String
      36: dup
      37: iconst_0
      38: ldc           #152                // String api-ms-win-core-console-l1-1-0
      40: aastore
      41: dup
      42: iconst_1
      43: ldc           #153                // String api-ms-win-core-datetime-l1-1-0
      45: aastore
      46: dup
      47: iconst_2
      48: ldc           #154                // String api-ms-win-core-debug-l1-1-0
      50: aastore
      51: dup
      52: iconst_3
      53: ldc           #155                // String api-ms-win-core-errorhandling-l1-1-0
      55: aastore
      56: dup
      57: iconst_4
      58: ldc           #156                // String api-ms-win-core-file-l1-1-0
      60: aastore
      61: dup
      62: iconst_5
      63: ldc           #157                // String api-ms-win-core-file-l1-2-0
      65: aastore
      66: dup
      67: bipush        6
      69: ldc           #158                // String api-ms-win-core-file-l2-1-0
      71: aastore
      72: dup
      73: bipush        7
      75: ldc           #159                // String api-ms-win-core-handle-l1-1-0
      77: aastore
      78: dup
      79: bipush        8
      81: ldc           #160                // String api-ms-win-core-heap-l1-1-0
      83: aastore
      84: dup
      85: bipush        9
      87: ldc           #161                // String api-ms-win-core-interlocked-l1-1-0
      89: aastore
      90: dup
      91: bipush        10
      93: ldc           #162                // String api-ms-win-core-libraryloader-l1-1-0
      95: aastore
      96: dup
      97: bipush        11
      99: ldc           #163                // String api-ms-win-core-localization-l1-2-0
     101: aastore
     102: dup
     103: bipush        12
     105: ldc           #164                // String api-ms-win-core-memory-l1-1-0
     107: aastore
     108: dup
     109: bipush        13
     111: ldc           #165                // String api-ms-win-core-namedpipe-l1-1-0
     113: aastore
     114: dup
     115: bipush        14
     117: ldc           #166                // String api-ms-win-core-processenvironment-l1-1-0
     119: aastore
     120: dup
     121: bipush        15
     123: ldc           #167                // String api-ms-win-core-processthreads-l1-1-0
     125: aastore
     126: dup
     127: bipush        16
     129: ldc           #168                // String api-ms-win-core-processthreads-l1-1-1
     131: aastore
     132: dup
     133: bipush        17
     135: ldc           #169                // String api-ms-win-core-profile-l1-1-0
     137: aastore
     138: dup
     139: bipush        18
     141: ldc           #170                // String api-ms-win-core-rtlsupport-l1-1-0
     143: aastore
     144: dup
     145: bipush        19
     147: ldc           #171                // String api-ms-win-core-string-l1-1-0
     149: aastore
     150: dup
     151: bipush        20
     153: ldc           #172                // String api-ms-win-core-synch-l1-1-0
     155: aastore
     156: dup
     157: bipush        21
     159: ldc           #173                // String api-ms-win-core-synch-l1-2-0
     161: aastore
     162: dup
     163: bipush        22
     165: ldc           #174                // String api-ms-win-core-sysinfo-l1-1-0
     167: aastore
     168: dup
     169: bipush        23
     171: ldc           #175                // String api-ms-win-core-timezone-l1-1-0
     173: aastore
     174: dup
     175: bipush        24
     177: ldc           #176                // String api-ms-win-core-util-l1-1-0
     179: aastore
     180: dup
     181: bipush        25
     183: ldc           #177                // String api-ms-win-crt-conio-l1-1-0
     185: aastore
     186: dup
     187: bipush        26
     189: ldc           #178                // String api-ms-win-crt-convert-l1-1-0
     191: aastore
     192: dup
     193: bipush        27
     195: ldc           #179                // String api-ms-win-crt-environment-l1-1-0
     197: aastore
     198: dup
     199: bipush        28
     201: ldc           #180                // String api-ms-win-crt-filesystem-l1-1-0
     203: aastore
     204: dup
     205: bipush        29
     207: ldc           #181                // String api-ms-win-crt-heap-l1-1-0
     209: aastore
     210: dup
     211: bipush        30
     213: ldc           #182                // String api-ms-win-crt-locale-l1-1-0
     215: aastore
     216: dup
     217: bipush        31
     219: ldc           #183                // String api-ms-win-crt-math-l1-1-0
     221: aastore
     222: dup
     223: bipush        32
     225: ldc           #184                // String api-ms-win-crt-multibyte-l1-1-0
     227: aastore
     228: dup
     229: bipush        33
     231: ldc           #185                // String api-ms-win-crt-private-l1-1-0
     233: aastore
     234: dup
     235: bipush        34
     237: ldc           #186                // String api-ms-win-crt-process-l1-1-0
     239: aastore
     240: dup
     241: bipush        35
     243: ldc           #187                // String api-ms-win-crt-runtime-l1-1-0
     245: aastore
     246: dup
     247: bipush        36
     249: ldc           #188                // String api-ms-win-crt-stdio-l1-1-0
     251: aastore
     252: dup
     253: bipush        37
     255: ldc           #189                // String api-ms-win-crt-string-l1-1-0
     257: aastore
     258: dup
     259: bipush        38
     261: ldc           #190                // String api-ms-win-crt-time-l1-1-0
     263: aastore
     264: dup
     265: bipush        39
     267: ldc           #191                // String api-ms-win-crt-utility-l1-1-0
     269: aastore
     270: dup
     271: bipush        40
     273: ldc           #192                // String ucrtbase
     275: aastore
     276: dup
     277: bipush        41
     279: ldc           #193                // String vcruntime140
     281: aastore
     282: dup
     283: bipush        42
     285: ldc           #194                // String msvcp140
     287: aastore
     288: dup
     289: bipush        43
     291: ldc           #195                // String concrt140
     293: aastore
     294: putstatic     #6                  // Field msLibNames:[Ljava/lang/String;
     297: aconst_null
     298: putstatic     #139                // Field writableImageAccessor:Lcom/sun/javafx/tk/Toolkit$WritableImageAccessor;
     301: aconst_null
     302: putstatic     #140                // Field paintAccessor:Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
     305: ldc           #196                // class javafx/scene/image/Image
     307: invokestatic  #197                // Method com/sun/javafx/util/Utils.forceInit:(Ljava/lang/Class;)V
     310: return
}
