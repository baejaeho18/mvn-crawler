Compiled from "PerformanceTrackerHelper.java"
final class com.sun.javafx.tk.quantum.PerformanceTrackerHelper$PerformanceTrackerDefaultImpl extends com.sun.javafx.tk.quantum.PerformanceTrackerHelper {
  private long firstTime;

  private long lastTime;

  private com.sun.javafx.tk.quantum.PerformanceTrackerHelper$PerformanceTrackerDefaultImpl();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method com/sun/javafx/tk/quantum/PerformanceTrackerHelper."<init>":(Lcom/sun/javafx/tk/quantum/PerformanceTrackerHelper$1;)V
       5: return

  public void logEvent(java.lang.String);
    Code:
       0: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: aload_0
       5: getfield      #4                  // Field firstTime:J
       8: lconst_0
       9: lcmp
      10: ifne          18
      13: aload_0
      14: lload_2
      15: putfield      #4                  // Field firstTime:J
      18: aload_1
      19: lload_2
      20: aload_0
      21: getfield      #4                  // Field firstTime:J
      24: lsub
      25: lload_2
      26: aload_0
      27: getfield      #5                  // Field lastTime:J
      30: lsub
      31: invokedynamic #6,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;JJ)Ljava/lang/String;
      36: invokestatic  #7                  // Method com/sun/javafx/tk/quantum/PerformanceLogger.setTime:(Ljava/lang/String;)I
      39: pop
      40: aload_0
      41: lload_2
      42: putfield      #5                  // Field lastTime:J
      45: return

  public void outputLog();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method logLaunchTime:()V
       4: invokestatic  #9                  // Method com/sun/javafx/tk/quantum/PerformanceLogger.outputLog:()V
       7: return

  public boolean isPerfLoggingEnabled();
    Code:
       0: iconst_1
       1: ireturn

  private void logLaunchTime();
    Code:
       0: invokestatic  #10                 // Method com/sun/javafx/tk/quantum/PerformanceLogger.getStartTime:()J
       3: lconst_0
       4: lcmp
       5: ifgt          44
       8: invokedynamic #11,  0             // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;
      13: invokestatic  #12                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: checkcast     #13                 // class java/lang/String
      19: astore_1
      20: aload_1
      21: ifnull        44
      24: aload_1
      25: ldc           #14                 // String
      27: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifne          44
      33: aload_1
      34: invokestatic  #16                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      37: lstore_2
      38: ldc           #17                 // String LaunchTime
      40: lload_2
      41: invokestatic  #18                 // Method com/sun/javafx/tk/quantum/PerformanceLogger.setStartTime:(Ljava/lang/String;J)V
      44: goto          52
      47: astore_1
      48: aload_1
      49: invokevirtual #20                 // Method java/lang/Throwable.printStackTrace:()V
      52: return
    Exception table:
       from    to  target type
           0    44    47   Class java/lang/Throwable

  private static java.lang.String lambda$logLaunchTime$0();
    Code:
       0: ldc           #21                 // String launchTime
       2: invokestatic  #22                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  com.sun.javafx.tk.quantum.PerformanceTrackerHelper$PerformanceTrackerDefaultImpl(com.sun.javafx.tk.quantum.PerformanceTrackerHelper$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
