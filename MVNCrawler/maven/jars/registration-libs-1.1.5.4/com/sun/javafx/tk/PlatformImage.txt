Compiled from "PlatformImage.java"
public interface com.sun.javafx.tk.PlatformImage {
  public abstract float getPixelScale();

  public abstract int getArgb(int, int);

  public abstract void setArgb(int, int, int);

  public abstract javafx.scene.image.PixelFormat getPlatformPixelFormat();

  public abstract boolean isWritable();

  public abstract com.sun.javafx.tk.PlatformImage promoteToWritableImage();

  public abstract <T extends java.nio.Buffer> void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<T>, T, int);

  public abstract void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<java.nio.ByteBuffer>, byte[], int, int);

  public abstract void getPixels(int, int, int, int, javafx.scene.image.WritablePixelFormat<java.nio.IntBuffer>, int[], int, int);

  public abstract <T extends java.nio.Buffer> void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<T>, T, int);

  public abstract void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<java.nio.ByteBuffer>, byte[], int, int);

  public abstract void setPixels(int, int, int, int, javafx.scene.image.PixelFormat<java.nio.IntBuffer>, int[], int, int);

  public abstract void setPixels(int, int, int, int, javafx.scene.image.PixelReader, int, int);
}
