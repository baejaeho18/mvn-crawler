Compiled from "EmbeddedSceneDT.java"
final class com.sun.javafx.tk.quantum.EmbeddedSceneDT implements com.sun.javafx.embed.EmbeddedSceneDTInterface {
  private final com.sun.javafx.tk.quantum.EmbeddedSceneDnD dnd;

  private final com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler dndHandler;

  private com.sun.javafx.embed.EmbeddedSceneDSInterface dragSource;

  private com.sun.glass.ui.ClipboardAssistance assistant;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.tk.quantum.EmbeddedSceneDT(com.sun.javafx.tk.quantum.EmbeddedSceneDnD, com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      14: return

  private void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
       4: aload_0
       5: invokevirtual #4                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.onDropTargetReleased:(Lcom/sun/javafx/embed/EmbeddedSceneDTInterface;)V
       8: aload_0
       9: aconst_null
      10: putfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      13: return

  public javafx.scene.input.TransferMode handleDragEnter(int, int, int, int, javafx.scene.input.TransferMode, com.sun.javafx.embed.EmbeddedSceneDSInterface);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #7                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #8                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: aload         6
      31: iload_1
      32: iload_2
      33: iload_3
      34: iload         4
      36: aload         5
      38: invokedynamic #10,  0             // InvokeDynamic #0:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDT;Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;IIIILjavafx/scene/input/TransferMode;)Ljava/util/concurrent/Callable;
      43: invokevirtual #11                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      46: checkcast     #12                 // class javafx/scene/input/TransferMode
      49: areturn

  public void handleDragLeave();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #7                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #8                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: invokedynamic #13,  0             // InvokeDynamic #1:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDT;)Ljava/util/concurrent/Callable;
      34: invokevirtual #11                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      37: pop
      38: return

  public javafx.scene.input.TransferMode handleDragDrop(int, int, int, int, javafx.scene.input.TransferMode);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #7                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #8                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: iload_1
      30: iload_2
      31: iload_3
      32: iload         4
      34: aload         5
      36: invokedynamic #14,  0             // InvokeDynamic #2:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDT;IIIILjavafx/scene/input/TransferMode;)Ljava/util/concurrent/Callable;
      41: invokevirtual #11                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      44: checkcast     #12                 // class javafx/scene/input/TransferMode
      47: areturn

  public javafx.scene.input.TransferMode handleDragOver(int, int, int, int, javafx.scene.input.TransferMode);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #7                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #8                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: iload_1
      30: iload_2
      31: iload_3
      32: iload         4
      34: aload         5
      36: invokedynamic #15,  0             // InvokeDynamic #3:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDT;IIIILjavafx/scene/input/TransferMode;)Ljava/util/concurrent/Callable;
      41: invokevirtual #11                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      44: checkcast     #12                 // class javafx/scene/input/TransferMode
      47: areturn

  private javafx.scene.input.TransferMode lambda$handleDragOver$3(int, int, int, int, javafx.scene.input.TransferMode) throws java.lang.Exception;
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      10: ifnonnull     21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      25: iload_1
      26: iload_2
      27: iload_3
      28: iload         4
      30: aload         5
      32: aload_0
      33: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      36: invokevirtual #16                 // Method com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler.handleDragOver:(IIIILjavafx/scene/input/TransferMode;Lcom/sun/glass/ui/ClipboardAssistance;)Ljavafx/scene/input/TransferMode;
      39: areturn

  private javafx.scene.input.TransferMode lambda$handleDragDrop$2(int, int, int, int, javafx.scene.input.TransferMode) throws java.lang.Exception;
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      10: ifnonnull     21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      25: iload_1
      26: iload_2
      27: iload_3
      28: iload         4
      30: aload         5
      32: aload_0
      33: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      36: invokevirtual #17                 // Method com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler.handleDragDrop:(IIIILjavafx/scene/input/TransferMode;Lcom/sun/glass/ui/ClipboardAssistance;)Ljavafx/scene/input/TransferMode;
      39: astore        6
      41: aload_0
      42: invokespecial #18                 // Method close:()V
      45: aload         6
      47: areturn
      48: astore        7
      50: aload_0
      51: invokespecial #18                 // Method close:()V
      54: aload         7
      56: athrow
    Exception table:
       from    to  target type
          21    41    48   any
          48    50    48   any

  private java.lang.Object lambda$handleDragLeave$1() throws java.lang.Exception;
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      10: ifnonnull     21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      25: aload_0
      26: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      29: invokevirtual #19                 // Method com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler.handleDragLeave:(Lcom/sun/glass/ui/ClipboardAssistance;)V
      32: aload_0
      33: invokespecial #18                 // Method close:()V
      36: goto          46
      39: astore_1
      40: aload_0
      41: invokespecial #18                 // Method close:()V
      44: aload_1
      45: athrow
      46: aconst_null
      47: areturn
    Exception table:
       from    to  target type
          21    32    39   any

  private javafx.scene.input.TransferMode lambda$handleDragEnter$0(com.sun.javafx.embed.EmbeddedSceneDSInterface, int, int, int, int, javafx.scene.input.TransferMode) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field dragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
       5: aload_0
       6: new           #21                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDT$EmbeddedDTAssistant
       9: dup
      10: aload_0
      11: getfield      #20                 // Field dragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      14: invokespecial #22                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDT$EmbeddedDTAssistant."<init>":(Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;)V
      17: putfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      20: aload_0
      21: getfield      #3                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      24: iload_2
      25: iload_3
      26: iload         4
      28: iload         5
      30: aload         6
      32: aload_0
      33: getfield      #5                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      36: invokevirtual #23                 // Method com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler.handleDragEnter:(IIIILjavafx/scene/input/TransferMode;Lcom/sun/glass/ui/ClipboardAssistance;)Ljavafx/scene/input/TransferMode;
      39: areturn

  static {};
    Code:
       0: ldc           #24                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDT
       2: invokevirtual #25                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: return
}
