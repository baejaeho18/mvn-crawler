Compiled from "OverlayWarningHelper.java"
public class com.sun.javafx.tk.quantum.OverlayWarningHelper extends com.sun.javafx.scene.GroupHelper {
  private static final com.sun.javafx.tk.quantum.OverlayWarningHelper theInstance;

  private static com.sun.javafx.tk.quantum.OverlayWarningHelper$OverlayWarningAccessor overlayWarningAccessor;

  public com.sun.javafx.tk.quantum.OverlayWarningHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/javafx/scene/GroupHelper."<init>":()V
       4: return

  private static com.sun.javafx.tk.quantum.OverlayWarningHelper getInstance();
    Code:
       0: getstatic     #2                  // Field theInstance:Lcom/sun/javafx/tk/quantum/OverlayWarningHelper;
       3: areturn

  public static void initHelper(com.sun.javafx.tk.quantum.OverlayWarning);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method getInstance:()Lcom/sun/javafx/tk/quantum/OverlayWarningHelper;
       4: invokestatic  #4                  // Method setHelper:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/NodeHelper;)V
       7: return

  protected void updatePeerImpl(javafx.scene.Node);
    Code:
       0: getstatic     #5                  // Field overlayWarningAccessor:Lcom/sun/javafx/tk/quantum/OverlayWarningHelper$OverlayWarningAccessor;
       3: aload_1
       4: invokeinterface #6,  2            // InterfaceMethod com/sun/javafx/tk/quantum/OverlayWarningHelper$OverlayWarningAccessor.doUpdatePeer:(Ljavafx/scene/Node;)V
       9: aload_0
      10: aload_1
      11: invokespecial #7                  // Method com/sun/javafx/scene/GroupHelper.updatePeerImpl:(Ljavafx/scene/Node;)V
      14: return

  protected void markDirtyImpl(javafx.scene.Node, com.sun.javafx.scene.DirtyBits);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method com/sun/javafx/scene/GroupHelper.markDirtyImpl:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/DirtyBits;)V
       6: getstatic     #5                  // Field overlayWarningAccessor:Lcom/sun/javafx/tk/quantum/OverlayWarningHelper$OverlayWarningAccessor;
       9: aload_1
      10: aload_2
      11: invokeinterface #9,  3            // InterfaceMethod com/sun/javafx/tk/quantum/OverlayWarningHelper$OverlayWarningAccessor.doMarkDirty:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/DirtyBits;)V
      16: return

  public static void setOverlayWarningAccessor(com.sun.javafx.tk.quantum.OverlayWarningHelper$OverlayWarningAccessor);
    Code:
       0: getstatic     #5                  // Field overlayWarningAccessor:Lcom/sun/javafx/tk/quantum/OverlayWarningHelper$OverlayWarningAccessor;
       3: ifnull        14
       6: new           #10                 // class java/lang/IllegalStateException
       9: dup
      10: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":()V
      13: athrow
      14: aload_0
      15: putstatic     #5                  // Field overlayWarningAccessor:Lcom/sun/javafx/tk/quantum/OverlayWarningHelper$OverlayWarningAccessor;
      18: return

  static {};
    Code:
       0: new           #12                 // class com/sun/javafx/tk/quantum/OverlayWarningHelper
       3: dup
       4: invokespecial #13                 // Method "<init>":()V
       7: putstatic     #2                  // Field theInstance:Lcom/sun/javafx/tk/quantum/OverlayWarningHelper;
      10: ldc           #14                 // class com/sun/javafx/tk/quantum/OverlayWarning
      12: invokestatic  #15                 // Method com/sun/javafx/util/Utils.forceInit:(Ljava/lang/Class;)V
      15: return
}
