Compiled from "GlassSceneDnDEventHandler.java"
class com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler {
  private final com.sun.javafx.tk.quantum.GlassScene scene;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler(com.sun.javafx.tk.quantum.GlassScene);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       9: return

  private double getPlatformScaleX();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: invokevirtual #3                  // Method com/sun/javafx/tk/quantum/GlassScene.getPlatformView:()Lcom/sun/glass/ui/View;
       7: astore_1
       8: aload_1
       9: ifnull        27
      12: aload_1
      13: invokevirtual #4                  // Method com/sun/glass/ui/View.getWindow:()Lcom/sun/glass/ui/Window;
      16: astore_2
      17: aload_2
      18: ifnull        27
      21: aload_2
      22: invokevirtual #5                  // Method com/sun/glass/ui/Window.getPlatformScaleX:()F
      25: f2d
      26: dreturn
      27: dconst_1
      28: dreturn

  private double getPlatformScaleY();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: invokevirtual #3                  // Method com/sun/javafx/tk/quantum/GlassScene.getPlatformView:()Lcom/sun/glass/ui/View;
       7: astore_1
       8: aload_1
       9: ifnull        27
      12: aload_1
      13: invokevirtual #4                  // Method com/sun/glass/ui/View.getWindow:()Lcom/sun/glass/ui/Window;
      16: astore_2
      17: aload_2
      18: ifnull        27
      21: aload_2
      22: invokevirtual #6                  // Method com/sun/glass/ui/Window.getPlatformScaleY:()F
      25: f2d
      26: dreturn
      27: dconst_1
      28: dreturn

  public javafx.scene.input.TransferMode handleDragEnter(int, int, int, int, javafx.scene.input.TransferMode, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #8                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: aload         6
      23: iload_1
      24: iload_2
      25: iload_3
      26: iload         4
      28: aload         5
      30: invokedynamic #11,  0             // InvokeDynamic #0:run:(Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;Lcom/sun/glass/ui/ClipboardAssistance;IIIILjavafx/scene/input/TransferMode;)Ljava/security/PrivilegedAction;
      35: aload_0
      36: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      39: invokevirtual #12                 // Method com/sun/javafx/tk/quantum/GlassScene.getAccessControlContext:()Ljava/security/AccessControlContext;
      42: invokestatic  #13                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      45: checkcast     #14                 // class javafx/scene/input/TransferMode
      48: areturn

  public void handleDragLeave(com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #8                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: invokedynamic #15,  0             // InvokeDynamic #1:run:(Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;)Ljava/security/PrivilegedAction;
      26: aload_0
      27: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      30: invokevirtual #12                 // Method com/sun/javafx/tk/quantum/GlassScene.getAccessControlContext:()Ljava/security/AccessControlContext;
      33: invokestatic  #13                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      36: pop
      37: return

  public javafx.scene.input.TransferMode handleDragDrop(int, int, int, int, javafx.scene.input.TransferMode, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #8                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: iload_1
      22: iload_2
      23: iload_3
      24: iload         4
      26: aload         5
      28: invokedynamic #16,  0             // InvokeDynamic #2:run:(Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;IIIILjavafx/scene/input/TransferMode;)Ljava/security/PrivilegedAction;
      33: aload_0
      34: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      37: invokevirtual #12                 // Method com/sun/javafx/tk/quantum/GlassScene.getAccessControlContext:()Ljava/security/AccessControlContext;
      40: invokestatic  #13                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      43: checkcast     #14                 // class javafx/scene/input/TransferMode
      46: areturn

  public javafx.scene.input.TransferMode handleDragOver(int, int, int, int, javafx.scene.input.TransferMode, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #8                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: iload_1
      22: iload_2
      23: iload_3
      24: iload         4
      26: aload         5
      28: invokedynamic #17,  0             // InvokeDynamic #3:run:(Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;IIIILjavafx/scene/input/TransferMode;)Ljava/security/PrivilegedAction;
      33: aload_0
      34: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      37: invokevirtual #12                 // Method com/sun/javafx/tk/quantum/GlassScene.getAccessControlContext:()Ljava/security/AccessControlContext;
      40: invokestatic  #13                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      43: checkcast     #14                 // class javafx/scene/input/TransferMode
      46: areturn

  public void handleDragStart(int, int, int, int, int, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #8                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: aload         6
      23: iload_2
      24: iload_3
      25: iload         4
      27: iload         5
      29: iload_1
      30: invokedynamic #18,  0             // InvokeDynamic #4:run:(Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;Lcom/sun/glass/ui/ClipboardAssistance;IIIII)Ljava/security/PrivilegedAction;
      35: aload_0
      36: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      39: invokevirtual #12                 // Method com/sun/javafx/tk/quantum/GlassScene.getAccessControlContext:()Ljava/security/AccessControlContext;
      42: invokestatic  #13                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      45: pop
      46: return

  public void handleDragEnd(javafx.scene.input.TransferMode, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #8                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokedynamic #19,  0             // InvokeDynamic #5:run:(Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;Ljavafx/scene/input/TransferMode;)Ljava/security/PrivilegedAction;
      27: aload_0
      28: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      31: invokevirtual #12                 // Method com/sun/javafx/tk/quantum/GlassScene.getAccessControlContext:()Ljava/security/AccessControlContext;
      34: invokestatic  #13                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      37: pop
      38: return

  private java.lang.Void lambda$handleDragEnd$5(javafx.scene.input.TransferMode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: getfield      #20                 // Field com/sun/javafx/tk/quantum/GlassScene.dragSourceListener:Lcom/sun/javafx/tk/TKDragSourceListener;
       7: ifnull        27
      10: aload_0
      11: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      14: getfield      #20                 // Field com/sun/javafx/tk/quantum/GlassScene.dragSourceListener:Lcom/sun/javafx/tk/TKDragSourceListener;
      17: dconst_0
      18: dconst_0
      19: dconst_0
      20: dconst_0
      21: aload_1
      22: invokeinterface #21,  10          // InterfaceMethod com/sun/javafx/tk/TKDragSourceListener.dragDropEnd:(DDDDLjavafx/scene/input/TransferMode;)V
      27: invokestatic  #22                 // Method com/sun/javafx/tk/quantum/QuantumClipboard.releaseCurrentDragboard:()V
      30: goto          39
      33: astore_2
      34: invokestatic  #22                 // Method com/sun/javafx/tk/quantum/QuantumClipboard.releaseCurrentDragboard:()V
      37: aload_2
      38: athrow
      39: aconst_null
      40: areturn
    Exception table:
       from    to  target type
           0    27    33   any

  private java.lang.Void lambda$handleDragStart$4(com.sun.glass.ui.ClipboardAssistance, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: getfield      #23                 // Field com/sun/javafx/tk/quantum/GlassScene.dragGestureListener:Lcom/sun/javafx/tk/TKDragGestureListener;
       7: ifnull        67
      10: aload_0
      11: invokespecial #24                 // Method getPlatformScaleX:()D
      14: dstore        7
      16: aload_0
      17: invokespecial #25                 // Method getPlatformScaleY:()D
      20: dstore        9
      22: aload_1
      23: iconst_1
      24: invokestatic  #26                 // Method com/sun/javafx/tk/quantum/QuantumClipboard.getDragboardInstance:(Lcom/sun/glass/ui/ClipboardAssistance;Z)Lcom/sun/javafx/tk/quantum/QuantumClipboard;
      27: astore        11
      29: aload_0
      30: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      33: getfield      #23                 // Field com/sun/javafx/tk/quantum/GlassScene.dragGestureListener:Lcom/sun/javafx/tk/TKDragGestureListener;
      36: iload_2
      37: i2d
      38: dload         7
      40: ddiv
      41: iload_3
      42: i2d
      43: dload         9
      45: ddiv
      46: iload         4
      48: i2d
      49: dload         7
      51: ddiv
      52: iload         5
      54: i2d
      55: dload         9
      57: ddiv
      58: iload         6
      60: aload         11
      62: invokeinterface #27,  11          // InterfaceMethod com/sun/javafx/tk/TKDragGestureListener.dragGestureRecognized:(DDDDILcom/sun/javafx/tk/TKClipboard;)V
      67: aconst_null
      68: areturn

  private javafx.scene.input.TransferMode lambda$handleDragOver$3(int, int, int, int, javafx.scene.input.TransferMode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
       7: ifnull        58
      10: aload_0
      11: invokespecial #24                 // Method getPlatformScaleX:()D
      14: dstore        6
      16: aload_0
      17: invokespecial #25                 // Method getPlatformScaleY:()D
      20: dstore        8
      22: aload_0
      23: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      26: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
      29: iload_1
      30: i2d
      31: dload         6
      33: ddiv
      34: iload_2
      35: i2d
      36: dload         8
      38: ddiv
      39: iload_3
      40: i2d
      41: dload         6
      43: ddiv
      44: iload         4
      46: i2d
      47: dload         8
      49: ddiv
      50: aload         5
      52: invokeinterface #29,  10          // InterfaceMethod com/sun/javafx/tk/TKDropTargetListener.dragOver:(DDDDLjavafx/scene/input/TransferMode;)Ljavafx/scene/input/TransferMode;
      57: areturn
      58: aconst_null
      59: areturn

  private javafx.scene.input.TransferMode lambda$handleDragDrop$2(int, int, int, int, javafx.scene.input.TransferMode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
       7: ifnull        58
      10: aload_0
      11: invokespecial #24                 // Method getPlatformScaleX:()D
      14: dstore        6
      16: aload_0
      17: invokespecial #25                 // Method getPlatformScaleY:()D
      20: dstore        8
      22: aload_0
      23: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      26: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
      29: iload_1
      30: i2d
      31: dload         6
      33: ddiv
      34: iload_2
      35: i2d
      36: dload         8
      38: ddiv
      39: iload_3
      40: i2d
      41: dload         6
      43: ddiv
      44: iload         4
      46: i2d
      47: dload         8
      49: ddiv
      50: aload         5
      52: invokeinterface #30,  10          // InterfaceMethod com/sun/javafx/tk/TKDropTargetListener.drop:(DDDDLjavafx/scene/input/TransferMode;)Ljavafx/scene/input/TransferMode;
      57: areturn
      58: aconst_null
      59: areturn

  private java.lang.Void lambda$handleDragLeave$1();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
       7: ifnull        26
      10: aload_0
      11: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      14: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
      17: dconst_0
      18: dconst_0
      19: dconst_0
      20: dconst_0
      21: invokeinterface #31,  9           // InterfaceMethod com/sun/javafx/tk/TKDropTargetListener.dragExit:(DDDD)V
      26: aconst_null
      27: areturn

  private javafx.scene.input.TransferMode lambda$handleDragEnter$0(com.sun.glass.ui.ClipboardAssistance, int, int, int, int, javafx.scene.input.TransferMode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
       7: ifnull        68
      10: aload_0
      11: invokespecial #24                 // Method getPlatformScaleX:()D
      14: dstore        7
      16: aload_0
      17: invokespecial #25                 // Method getPlatformScaleY:()D
      20: dstore        9
      22: aload_1
      23: iconst_0
      24: invokestatic  #26                 // Method com/sun/javafx/tk/quantum/QuantumClipboard.getDragboardInstance:(Lcom/sun/glass/ui/ClipboardAssistance;Z)Lcom/sun/javafx/tk/quantum/QuantumClipboard;
      27: astore        11
      29: aload_0
      30: getfield      #2                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      33: getfield      #28                 // Field com/sun/javafx/tk/quantum/GlassScene.dropTargetListener:Lcom/sun/javafx/tk/TKDropTargetListener;
      36: iload_2
      37: i2d
      38: dload         7
      40: ddiv
      41: iload_3
      42: i2d
      43: dload         9
      45: ddiv
      46: iload         4
      48: i2d
      49: dload         7
      51: ddiv
      52: iload         5
      54: i2d
      55: dload         9
      57: ddiv
      58: aload         6
      60: aload         11
      62: invokeinterface #32,  11          // InterfaceMethod com/sun/javafx/tk/TKDropTargetListener.dragEnter:(DDDDLjavafx/scene/input/TransferMode;Lcom/sun/javafx/tk/TKClipboard;)Ljavafx/scene/input/TransferMode;
      67: areturn
      68: aconst_null
      69: areturn

  static {};
    Code:
       0: ldc           #33                 // class com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler
       2: invokevirtual #34                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
