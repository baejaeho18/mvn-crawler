Compiled from "GlassStage.java"
abstract class com.sun.javafx.tk.quantum.GlassStage implements com.sun.javafx.tk.TKStage {
  private static final java.util.List<com.sun.javafx.tk.quantum.GlassStage> windows;

  private static java.util.List<com.sun.javafx.tk.TKStage> importantWindows;

  private com.sun.javafx.tk.quantum.GlassScene scene;

  protected com.sun.javafx.tk.TKStageListener stageListener;

  private boolean visible;

  private boolean important;

  private java.security.AccessControlContext accessCtrlCtx;

  protected static final java.util.concurrent.atomic.AtomicReference<com.sun.javafx.tk.quantum.GlassStage> activeFSWindow;

  static final boolean $assertionsDisabled;

  protected com.sun.javafx.tk.quantum.GlassStage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field important:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      14: getstatic     #4                  // Field windows:Ljava/util/List;
      17: aload_0
      18: invokeinterface #5,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void close();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      10: ifnull        21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #4                  // Field windows:Ljava/util/List;
      24: aload_0
      25: invokeinterface #10,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      30: pop
      31: getstatic     #11                 // Field importantWindows:Ljava/util/List;
      34: aload_0
      35: invokeinterface #10,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      40: pop
      41: invokestatic  #12                 // Method notifyWindowListeners:()V
      44: return

  public void setTKStageListener(com.sun.javafx.tk.TKStageListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field stageListener:Lcom/sun/javafx/tk/TKStageListener;
       5: return

  protected final com.sun.javafx.tk.quantum.GlassScene getScene();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: areturn

  public void setScene(com.sun.javafx.tk.TKScene);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
       4: ifnull        15
       7: aload_0
       8: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      11: aconst_null
      12: invokevirtual #14                 // Method com/sun/javafx/tk/quantum/GlassScene.setStage:(Lcom/sun/javafx/tk/quantum/GlassStage;)V
      15: aload_0
      16: aload_1
      17: checkcast     #15                 // class com/sun/javafx/tk/quantum/GlassScene
      20: putfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      23: aload_0
      24: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      27: ifnull        38
      30: aload_0
      31: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      34: aload_0
      35: invokevirtual #14                 // Method com/sun/javafx/tk/quantum/GlassScene.setStage:(Lcom/sun/javafx/tk/quantum/GlassStage;)V
      38: return

  final java.security.AccessControlContext getAccessControlContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
       4: ifnonnull     17
       7: new           #16                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #17                 // String Stage security context has not been set!
      13: invokespecial #18                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      21: areturn

  static java.security.AccessControlContext doIntersectionPrivilege(java.security.PrivilegedAction<java.security.AccessControlContext>, java.security.AccessControlContext, java.security.AccessControlContext);
    Code:
       0: aload_1
       1: invokedynamic #19,  0             // InvokeDynamic #0:run:(Ljava/security/AccessControlContext;)Ljava/security/PrivilegedAction;
       6: aload_2
       7: invokestatic  #20                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      10: checkcast     #21                 // class java/security/AccessControlContext
      13: areturn

  public final void setSecurityContext(java.security.AccessControlContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
       4: ifnull        17
       7: new           #16                 // class java/lang/RuntimeException
      10: dup
      11: ldc           #22                 // String Stage security context has been already set!
      13: invokespecial #18                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: invokestatic  #23                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      20: astore_2
      21: aload_0
      22: invokedynamic #24,  0             // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;
      27: aload_2
      28: aload_1
      29: invokestatic  #25                 // Method doIntersectionPrivilege:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;Ljava/security/AccessControlContext;)Ljava/security/AccessControlContext;
      32: putfield      #3                  // Field accessCtrlCtx:Ljava/security/AccessControlContext;
      35: return

  public void requestFocus();
    Code:
       0: return

  public void requestFocus(com.sun.javafx.tk.FocusCause);
    Code:
       0: return

  public void setVisible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field visible:Z
       5: iload_1
       6: ifeq          32
       9: aload_0
      10: getfield      #2                  // Field important:Z
      13: ifeq          52
      16: getstatic     #11                 // Field importantWindows:Ljava/util/List;
      19: aload_0
      20: invokeinterface #5,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: invokestatic  #12                 // Method notifyWindowListeners:()V
      29: goto          52
      32: aload_0
      33: getfield      #2                  // Field important:Z
      36: ifeq          52
      39: getstatic     #11                 // Field importantWindows:Ljava/util/List;
      42: aload_0
      43: invokeinterface #10,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      48: pop
      49: invokestatic  #12                 // Method notifyWindowListeners:()V
      52: aload_0
      53: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      56: ifnull        67
      59: aload_0
      60: getfield      #7                  // Field scene:Lcom/sun/javafx/tk/quantum/GlassScene;
      63: iload_1
      64: invokevirtual #27                 // Method com/sun/javafx/tk/quantum/GlassScene.stageVisible:(Z)V
      67: return

  boolean isVisible();
    Code:
       0: aload_0
       1: getfield      #26                 // Field visible:Z
       4: ireturn

  protected void setPlatformEnabled(boolean);
    Code:
       0: return

  void windowsSetEnabled(boolean);
    Code:
       0: getstatic     #4                  // Field windows:Ljava/util/List;
       3: getstatic     #4                  // Field windows:Ljava/util/List;
       6: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      11: anewarray     #29                 // class com/sun/javafx/tk/quantum/GlassStage
      14: invokeinterface #30,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: checkcast     #31                 // class "[Lcom/sun/javafx/tk/quantum/GlassStage;"
      22: astore_2
      23: aload_2
      24: arraylength
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     72
      35: aload_2
      36: iload         4
      38: aaload
      39: astore        5
      41: aload         5
      43: aload_0
      44: if_acmpeq     66
      47: getstatic     #4                  // Field windows:Ljava/util/List;
      50: aload         5
      52: invokeinterface #32,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      57: ifeq          66
      60: aload         5
      62: iload_1
      63: invokevirtual #33                 // Method setPlatformEnabled:(Z)V
      66: iinc          4, 1
      69: goto          29
      72: return

  public void setImportant(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field important:Z
       5: return

  private static void notifyWindowListeners();
    Code:
       0: invokestatic  #34                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: getstatic     #11                 // Field importantWindows:Ljava/util/List;
       6: invokevirtual #35                 // Method com/sun/javafx/tk/Toolkit.notifyWindowListeners:(Ljava/util/List;)V
       9: return

  static void requestClosingAllWindows();
    Code:
       0: getstatic     #36                 // Field activeFSWindow:Ljava/util/concurrent/atomic/AtomicReference;
       3: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #29                 // class com/sun/javafx/tk/quantum/GlassStage
       9: astore_0
      10: aload_0
      11: ifnull        19
      14: aload_0
      15: iconst_0
      16: invokevirtual #38                 // Method setFullScreen:(Z)V
      19: getstatic     #4                  // Field windows:Ljava/util/List;
      22: getstatic     #4                  // Field windows:Ljava/util/List;
      25: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      30: anewarray     #29                 // class com/sun/javafx/tk/quantum/GlassStage
      33: invokeinterface #30,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      38: checkcast     #31                 // class "[Lcom/sun/javafx/tk/quantum/GlassStage;"
      41: astore_1
      42: aload_1
      43: arraylength
      44: istore_2
      45: iconst_0
      46: istore_3
      47: iload_3
      48: iload_2
      49: if_icmpge     108
      52: aload_1
      53: iload_3
      54: aaload
      55: astore        4
      57: getstatic     #4                  // Field windows:Ljava/util/List;
      60: aload         4
      62: invokeinterface #32,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      67: ifeq          102
      70: aload         4
      72: invokevirtual #39                 // Method isVisible:()Z
      75: ifeq          102
      78: aload         4
      80: getfield      #13                 // Field stageListener:Lcom/sun/javafx/tk/TKStageListener;
      83: ifnull        102
      86: aload         4
      88: invokedynamic #40,  0             // InvokeDynamic #2:run:(Lcom/sun/javafx/tk/quantum/GlassStage;)Ljava/security/PrivilegedAction;
      93: aload         4
      95: invokevirtual #41                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      98: invokestatic  #20                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
     101: pop
     102: iinc          3, 1
     105: goto          47
     108: return

  private static java.lang.Void lambda$requestClosingAllWindows$3(com.sun.javafx.tk.quantum.GlassStage);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stageListener:Lcom/sun/javafx/tk/TKStageListener;
       4: invokeinterface #42,  1           // InterfaceMethod com/sun/javafx/tk/TKStageListener.closing:()V
       9: aconst_null
      10: areturn

  private static java.security.AccessControlContext lambda$setSecurityContext$2();
    Code:
       0: invokestatic  #23                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
       3: areturn

  private static java.security.AccessControlContext lambda$doIntersectionPrivilege$1(java.security.AccessControlContext);
    Code:
       0: invokedynamic #43,  0             // InvokeDynamic #3:run:()Ljava/security/PrivilegedAction;
       5: aload_0
       6: iconst_0
       7: anewarray     #44                 // class java/security/Permission
      10: invokestatic  #45                 // Method java/security/AccessController.doPrivilegedWithCombiner:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;[Ljava/security/Permission;)Ljava/lang/Object;
      13: checkcast     #21                 // class java/security/AccessControlContext
      16: areturn

  private static java.security.AccessControlContext lambda$doIntersectionPrivilege$0();
    Code:
       0: invokestatic  #23                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
       3: areturn

  static {};
    Code:
       0: ldc           #29                 // class com/sun/javafx/tk/quantum/GlassStage
       2: invokevirtual #46                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: new           #47                 // class java/util/ArrayList
      19: dup
      20: invokespecial #48                 // Method java/util/ArrayList."<init>":()V
      23: putstatic     #4                  // Field windows:Ljava/util/List;
      26: new           #47                 // class java/util/ArrayList
      29: dup
      30: invokespecial #48                 // Method java/util/ArrayList."<init>":()V
      33: putstatic     #11                 // Field importantWindows:Ljava/util/List;
      36: new           #49                 // class java/util/concurrent/atomic/AtomicReference
      39: dup
      40: invokespecial #50                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      43: putstatic     #36                 // Field activeFSWindow:Ljava/util/concurrent/atomic/AtomicReference;
      46: return
}
