Compiled from "EmbeddedSceneDnD.java"
final class com.sun.javafx.tk.quantum.EmbeddedSceneDnD {
  private final com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler dndHandler;

  private com.sun.javafx.embed.HostDragStartListener dragStartListener;

  private com.sun.javafx.embed.EmbeddedSceneDSInterface fxDragSource;

  private com.sun.javafx.embed.EmbeddedSceneDTInterface fxDropTarget;

  private java.lang.Thread hostThread;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.tk.quantum.EmbeddedSceneDnD(com.sun.javafx.tk.quantum.GlassScene);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler
       8: dup
       9: aload_1
      10: invokespecial #4                  // Method com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler."<init>":(Lcom/sun/javafx/tk/quantum/GlassScene;)V
      13: putfield      #5                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      16: return

  private void startDrag();
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #7                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #8                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: getstatic     #6                  // Field $assertionsDisabled:Z
      23: ifne          41
      26: aload_0
      27: getfield      #10                 // Field fxDragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      30: ifnonnull     41
      33: new           #8                  // class java/lang/AssertionError
      36: dup
      37: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: aload_0
      42: getfield      #11                 // Field dragStartListener:Lcom/sun/javafx/embed/HostDragStartListener;
      45: aload_0
      46: getfield      #10                 // Field fxDragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      49: getstatic     #12                 // Field javafx/scene/input/TransferMode.COPY:Ljavafx/scene/input/TransferMode;
      52: invokeinterface #13,  3           // InterfaceMethod com/sun/javafx/embed/HostDragStartListener.dragStarted:(Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;Ljavafx/scene/input/TransferMode;)V
      57: return

  private void setHostThread();
    Code:
       0: aload_0
       1: getfield      #14                 // Field hostThread:Ljava/lang/Thread;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: putfield      #14                 // Field hostThread:Ljava/lang/Thread;
      14: return

  public boolean isHostThread();
    Code:
       0: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: getfield      #14                 // Field hostThread:Ljava/lang/Thread;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void onDragSourceReleased(com.sun.javafx.embed.EmbeddedSceneDSInterface);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_0
       7: getfield      #10                 // Field fxDragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      10: aload_1
      11: if_acmpeq     22
      14: new           #8                  // class java/lang/AssertionError
      17: dup
      18: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: aload_0
      23: aconst_null
      24: putfield      #10                 // Field fxDragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      27: invokestatic  #16                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
      30: aload_0
      31: aconst_null
      32: invokevirtual #17                 // Method com/sun/javafx/tk/Toolkit.exitNestedEventLoop:(Ljava/lang/Object;Ljava/lang/Object;)V
      35: return

  public void onDropTargetReleased(com.sun.javafx.embed.EmbeddedSceneDTInterface);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #18                 // Field fxDropTarget:Lcom/sun/javafx/embed/EmbeddedSceneDTInterface;
       5: return

  <T> T executeOnFXThread(java.util.concurrent.Callable<T>);
    Code:
       0: invokestatic  #7                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       3: ifeq          16
       6: aload_1
       7: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: new           #21                 // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #22                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: astore_2
      24: new           #23                 // class java/util/concurrent/CountDownLatch
      27: dup
      28: iconst_1
      29: invokespecial #24                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      32: astore_3
      33: aload_2
      34: aload_1
      35: aload_3
      36: invokedynamic #25,  0             // InvokeDynamic #0:run:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/Callable;Ljava/util/concurrent/CountDownLatch;)Ljava/lang/Runnable;
      41: invokestatic  #26                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      44: aload_3
      45: invokevirtual #27                 // Method java/util/concurrent/CountDownLatch.await:()V
      48: goto          53
      51: astore        4
      53: aload_2
      54: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      57: areturn
    Exception table:
       from    to  target type
           6    12    13   Class java/lang/Exception
          44    48    51   Class java/lang/Exception

  public com.sun.javafx.tk.TKClipboard createDragboard(boolean);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: invokestatic  #7                  // Method javafx/application/Platform.isFxApplicationThread:()Z
       9: ifne          20
      12: new           #8                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: getstatic     #6                  // Field $assertionsDisabled:Z
      23: ifne          41
      26: aload_0
      27: getfield      #10                 // Field fxDragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      30: ifnull        41
      33: new           #8                  // class java/lang/AssertionError
      36: dup
      37: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: getstatic     #6                  // Field $assertionsDisabled:Z
      44: ifne          59
      47: iload_1
      48: ifne          59
      51: new           #8                  // class java/lang/AssertionError
      54: dup
      55: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      58: athrow
      59: new           #29                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDnD$1
      62: dup
      63: aload_0
      64: ldc           #30                 // String DND-Embedded
      66: invokespecial #31                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD$1."<init>":(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;Ljava/lang/String;)V
      69: astore_2
      70: aload_0
      71: new           #32                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDS
      74: dup
      75: aload_0
      76: aload_2
      77: aload_0
      78: getfield      #5                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      81: invokespecial #33                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDS."<init>":(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;Lcom/sun/glass/ui/ClipboardAssistance;Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;)V
      84: putfield      #10                 // Field fxDragSource:Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;
      87: aload_2
      88: iload_1
      89: invokestatic  #34                 // Method com/sun/javafx/tk/quantum/QuantumClipboard.getDragboardInstance:(Lcom/sun/glass/ui/ClipboardAssistance;Z)Lcom/sun/javafx/tk/quantum/QuantumClipboard;
      92: areturn

  public void setDragStartListener(com.sun.javafx.embed.HostDragStartListener);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method setHostThread:()V
       4: aload_0
       5: aload_1
       6: putfield      #11                 // Field dragStartListener:Lcom/sun/javafx/embed/HostDragStartListener;
       9: return

  public com.sun.javafx.embed.EmbeddedSceneDTInterface createDropTarget();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method setHostThread:()V
       4: aload_0
       5: aload_0
       6: invokedynamic #36,  0             // InvokeDynamic #1:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;)Ljava/util/concurrent/Callable;
      11: invokevirtual #37                 // Method executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      14: checkcast     #38                 // class com/sun/javafx/embed/EmbeddedSceneDTInterface
      17: areturn

  private com.sun.javafx.embed.EmbeddedSceneDTInterface lambda$createDropTarget$1() throws java.lang.Exception;
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #18                 // Field fxDropTarget:Lcom/sun/javafx/embed/EmbeddedSceneDTInterface;
      10: ifnull        21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: new           #39                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDT
      25: dup
      26: aload_0
      27: aload_0
      28: getfield      #5                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      31: invokespecial #40                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDT."<init>":(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;)V
      34: putfield      #18                 // Field fxDropTarget:Lcom/sun/javafx/embed/EmbeddedSceneDTInterface;
      37: aload_0
      38: getfield      #18                 // Field fxDropTarget:Lcom/sun/javafx/embed/EmbeddedSceneDTInterface;
      41: areturn

  private static void lambda$executeOnFXThread$0(java.util.concurrent.atomic.AtomicReference, java.util.concurrent.Callable, java.util.concurrent.CountDownLatch);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       7: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_2
      11: invokevirtual #42                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      14: goto          34
      17: astore_3
      18: aload_2
      19: invokevirtual #42                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      22: goto          34
      25: astore        4
      27: aload_2
      28: invokevirtual #42                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      31: aload         4
      33: athrow
      34: return
    Exception table:
       from    to  target type
           0    10    17   Class java/lang/Exception
           0    10    25   any
          25    27    25   any

  static void access$000(com.sun.javafx.tk.quantum.EmbeddedSceneDnD);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method startDrag:()V
       4: return

  static {};
    Code:
       0: ldc           #43                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDnD
       2: invokevirtual #44                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: return
}
