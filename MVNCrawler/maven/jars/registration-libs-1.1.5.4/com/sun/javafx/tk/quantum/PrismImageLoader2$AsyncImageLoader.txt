Compiled from "PrismImageLoader2.java"
final class com.sun.javafx.tk.quantum.PrismImageLoader2$AsyncImageLoader extends com.sun.javafx.runtime.async.AbstractRemoteResource<com.sun.javafx.tk.quantum.PrismImageLoader2> {
  private static final java.util.concurrent.ExecutorService BG_LOADING_EXECUTOR;

  private final java.security.AccessControlContext acc;

  double width;

  double height;

  boolean preserveRatio;

  boolean smooth;

  public com.sun.javafx.tk.quantum.PrismImageLoader2$AsyncImageLoader(com.sun.javafx.runtime.async.AsyncOperationListener<com.sun.javafx.tk.quantum.PrismImageLoader2>, java.lang.String, double, double, boolean, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #2                  // Method com/sun/javafx/runtime/async/AbstractRemoteResource."<init>":(Ljava/lang/String;Lcom/sun/javafx/runtime/async/AsyncOperationListener;)V
       6: aload_0
       7: dload_3
       8: putfield      #3                  // Field width:D
      11: aload_0
      12: dload         5
      14: putfield      #4                  // Field height:D
      17: aload_0
      18: iload         7
      20: putfield      #5                  // Field preserveRatio:Z
      23: aload_0
      24: iload         8
      26: putfield      #6                  // Field smooth:Z
      29: aload_0
      30: invokestatic  #7                  // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      33: putfield      #8                  // Field acc:Ljava/security/AccessControlContext;
      36: return

  protected com.sun.javafx.tk.quantum.PrismImageLoader2 processStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #9                  // class com/sun/javafx/tk/quantum/PrismImageLoader2
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field width:D
       9: aload_0
      10: getfield      #4                  // Field height:D
      13: aload_0
      14: getfield      #5                  // Field preserveRatio:Z
      17: aload_0
      18: getfield      #6                  // Field smooth:Z
      21: invokespecial #10                 // Method com/sun/javafx/tk/quantum/PrismImageLoader2."<init>":(Ljava/io/InputStream;DDZZ)V
      24: areturn

  public com.sun.javafx.tk.quantum.PrismImageLoader2 call() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokedynamic #11,  0             // InvokeDynamic #0:run:(Lcom/sun/javafx/tk/quantum/PrismImageLoader2$AsyncImageLoader;)Ljava/security/PrivilegedExceptionAction;
       6: aload_0
       7: getfield      #8                  // Field acc:Ljava/security/AccessControlContext;
      10: invokestatic  #12                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      13: checkcast     #9                  // class com/sun/javafx/tk/quantum/PrismImageLoader2
      16: areturn
      17: astore_1
      18: aload_1
      19: invokevirtual #14                 // Method java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
      22: astore_2
      23: aload_2
      24: instanceof    #15                 // class java/io/IOException
      27: ifeq          35
      30: aload_2
      31: checkcast     #15                 // class java/io/IOException
      34: athrow
      35: new           #16                 // class java/lang/reflect/UndeclaredThrowableException
      38: dup
      39: aload_2
      40: invokespecial #17                 // Method java/lang/reflect/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           0    16    17   Class java/security/PrivilegedActionException

  public void start();
    Code:
       0: getstatic     #18                 // Field BG_LOADING_EXECUTOR:Ljava/util/concurrent/ExecutorService;
       3: aload_0
       4: getfield      #19                 // Field future:Ljava/util/concurrent/FutureTask;
       7: invokeinterface #20,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      12: return

  private static java.util.concurrent.ExecutorService createExecutor();
    Code:
       0: invokedynamic #21,  0             // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;
       5: invokestatic  #22                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       8: checkcast     #23                 // class java/lang/ThreadGroup
      11: astore_0
      12: aload_0
      13: invokedynamic #24,  0             // InvokeDynamic #2:newThread:(Ljava/lang/ThreadGroup;)Ljava/util/concurrent/ThreadFactory;
      18: astore_1
      19: aload_1
      20: invokestatic  #25                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      23: astore_2
      24: aload_2
      25: checkcast     #26                 // class java/util/concurrent/ThreadPoolExecutor
      28: lconst_1
      29: getstatic     #27                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      32: invokevirtual #28                 // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      35: aload_2
      36: areturn

  public java.lang.Object call() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method call:()Lcom/sun/javafx/tk/quantum/PrismImageLoader2;
       4: areturn

  protected java.lang.Object processStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method processStream:(Ljava/io/InputStream;)Lcom/sun/javafx/tk/quantum/PrismImageLoader2;
       5: areturn

  private static java.lang.Thread lambda$createExecutor$3(java.lang.ThreadGroup, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #31,  0             // InvokeDynamic #3:run:(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)Ljava/security/PrivilegedAction;
       7: invokestatic  #22                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      10: checkcast     #32                 // class java/lang/Thread
      13: areturn

  private static java.lang.Thread lambda$createExecutor$2(java.lang.ThreadGroup, java.lang.Runnable);
    Code:
       0: new           #32                 // class java/lang/Thread
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #33                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V
       9: astore_2
      10: aload_2
      11: iconst_1
      12: invokevirtual #34                 // Method java/lang/Thread.setPriority:(I)V
      15: aload_2
      16: areturn

  private static java.lang.ThreadGroup lambda$createExecutor$1();
    Code:
       0: new           #23                 // class java/lang/ThreadGroup
       3: dup
       4: invokestatic  #35                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.getFxUserThread:()Ljava/lang/Thread;
       7: invokevirtual #36                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      10: ldc           #37                 // String Background image loading thread pool
      12: invokespecial #38                 // Method java/lang/ThreadGroup."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
      15: areturn

  private com.sun.javafx.tk.quantum.PrismImageLoader2 lambda$call$0() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method access$201:(Lcom/sun/javafx/tk/quantum/PrismImageLoader2$AsyncImageLoader;)Ljava/lang/Object;
       4: checkcast     #9                  // class com/sun/javafx/tk/quantum/PrismImageLoader2
       7: areturn

  static java.lang.Object access$201(com.sun.javafx.tk.quantum.PrismImageLoader2$AsyncImageLoader) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/javafx/runtime/async/AbstractRemoteResource.call:()Ljava/lang/Object;
       4: areturn

  static {};
    Code:
       0: invokestatic  #40                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;
       3: putstatic     #18                 // Field BG_LOADING_EXECUTOR:Ljava/util/concurrent/ExecutorService;
       6: return
}
