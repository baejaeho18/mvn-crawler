Compiled from "EmbeddedSceneDS.java"
final class com.sun.javafx.tk.quantum.EmbeddedSceneDS implements com.sun.javafx.embed.EmbeddedSceneDSInterface {
  private final com.sun.javafx.tk.quantum.EmbeddedSceneDnD dnd;

  private final com.sun.glass.ui.ClipboardAssistance assistant;

  private final com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler dndHandler;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.tk.quantum.EmbeddedSceneDS(com.sun.javafx.tk.quantum.EmbeddedSceneDnD, com.sun.glass.ui.ClipboardAssistance, com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
      19: return

  public java.util.Set<javafx.scene.input.TransferMode> getSupportedActions();
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #6                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #7                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: invokedynamic #9,  0              // InvokeDynamic #0:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDS;)Ljava/util/concurrent/Callable;
      34: invokevirtual #10                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      37: checkcast     #11                 // class java/util/Set
      40: areturn

  public java.lang.Object getData(java.lang.String);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #6                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #7                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: aload_1
      30: invokedynamic #12,  0             // InvokeDynamic #1:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDS;Ljava/lang/String;)Ljava/util/concurrent/Callable;
      35: invokevirtual #10                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      38: areturn

  public java.lang.String[] getMimeTypes();
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #6                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #7                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: invokedynamic #13,  0             // InvokeDynamic #2:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDS;)Ljava/util/concurrent/Callable;
      34: invokevirtual #10                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      37: checkcast     #14                 // class "[Ljava/lang/String;"
      40: areturn

  public boolean isMimeTypeAvailable(java.lang.String);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #6                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #7                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: aload_1
      30: invokedynamic #15,  0             // InvokeDynamic #3:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDS;Ljava/lang/String;)Ljava/util/concurrent/Callable;
      35: invokevirtual #10                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      38: checkcast     #16                 // class java/lang/Boolean
      41: invokevirtual #17                 // Method java/lang/Boolean.booleanValue:()Z
      44: ireturn

  public void dragDropEnd(javafx.scene.input.TransferMode);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      10: invokevirtual #6                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.isHostThread:()Z
      13: ifne          24
      16: new           #7                  // class java/lang/AssertionError
      19: dup
      20: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: aload_1
      30: invokedynamic #18,  0             // InvokeDynamic #4:call:(Lcom/sun/javafx/tk/quantum/EmbeddedSceneDS;Ljavafx/scene/input/TransferMode;)Ljava/util/concurrent/Callable;
      35: invokevirtual #10                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.executeOnFXThread:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      38: pop
      39: return

  private java.lang.Object lambda$dragDropEnd$4(javafx.scene.input.TransferMode) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field dndHandler:Lcom/sun/javafx/tk/quantum/GlassSceneDnDEventHandler;
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
       9: invokevirtual #19                 // Method com/sun/javafx/tk/quantum/GlassSceneDnDEventHandler.handleDragEnd:(Ljavafx/scene/input/TransferMode;Lcom/sun/glass/ui/ClipboardAssistance;)V
      12: aload_0
      13: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      16: aload_0
      17: invokevirtual #20                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.onDragSourceReleased:(Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;)V
      20: goto          34
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field dnd:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      28: aload_0
      29: invokevirtual #20                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.onDragSourceReleased:(Lcom/sun/javafx/embed/EmbeddedSceneDSInterface;)V
      32: aload_2
      33: athrow
      34: aconst_null
      35: areturn
    Exception table:
       from    to  target type
           0    12    23   any

  private java.lang.Boolean lambda$isMimeTypeAvailable$3(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
       4: invokevirtual #21                 // Method com/sun/glass/ui/ClipboardAssistance.getMimeTypes:()[Ljava/lang/String;
       7: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: aload_1
      11: invokeinterface #23,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      16: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      19: areturn

  private java.lang.String[] lambda$getMimeTypes$2() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
       4: invokevirtual #21                 // Method com/sun/glass/ui/ClipboardAssistance.getMimeTypes:()[Ljava/lang/String;
       7: areturn

  private java.lang.Object lambda$getData$1(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
       4: aload_1
       5: invokevirtual #25                 // Method com/sun/glass/ui/ClipboardAssistance.getData:(Ljava/lang/String;)Ljava/lang/Object;
       8: areturn

  private java.util.Set lambda$getSupportedActions$0() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field assistant:Lcom/sun/glass/ui/ClipboardAssistance;
       4: invokevirtual #26                 // Method com/sun/glass/ui/ClipboardAssistance.getSupportedSourceActions:()I
       7: invokestatic  #27                 // Method com/sun/javafx/tk/quantum/QuantumClipboard.clipboardActionsToTransferModes:(I)Ljava/util/Set;
      10: areturn

  static {};
    Code:
       0: ldc           #28                 // class com/sun/javafx/tk/quantum/EmbeddedSceneDS
       2: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
