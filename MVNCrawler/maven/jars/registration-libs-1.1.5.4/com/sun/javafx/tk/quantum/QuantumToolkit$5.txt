Compiled from "QuantumToolkit.java"
class com.sun.javafx.tk.quantum.QuantumToolkit$5 implements java.lang.Runnable {
  final com.sun.prism.paint.Paint val$currentPaint;

  final com.sun.javafx.tk.Toolkit$ImageRenderingContext val$params;

  final com.sun.javafx.tk.quantum.QuantumToolkit this$0;

  com.sun.javafx.tk.quantum.QuantumToolkit$5(com.sun.javafx.tk.quantum.QuantumToolkit, com.sun.prism.paint.Paint, com.sun.javafx.tk.Toolkit$ImageRenderingContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/sun/javafx/tk/quantum/QuantumToolkit;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  private com.sun.prism.paint.Color getClearColor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
       4: ifnonnull     11
       7: getstatic     #5                  // Field com/sun/prism/paint/Color.WHITE:Lcom/sun/prism/paint/Color;
      10: areturn
      11: aload_0
      12: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      15: invokevirtual #6                  // Method com/sun/prism/paint/Paint.getType:()Lcom/sun/prism/paint/Paint$Type;
      18: getstatic     #7                  // Field com/sun/prism/paint/Paint$Type.COLOR:Lcom/sun/prism/paint/Paint$Type;
      21: if_acmpne     32
      24: aload_0
      25: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      28: checkcast     #8                  // class com/sun/prism/paint/Color
      31: areturn
      32: aload_0
      33: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      36: invokevirtual #9                  // Method com/sun/prism/paint/Paint.isOpaque:()Z
      39: ifeq          46
      42: getstatic     #10                 // Field com/sun/prism/paint/Color.TRANSPARENT:Lcom/sun/prism/paint/Color;
      45: areturn
      46: getstatic     #5                  // Field com/sun/prism/paint/Color.WHITE:Lcom/sun/prism/paint/Color;
      49: areturn

  private void draw(com.sun.prism.Graphics, int, int, int, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
       5: getfield      #11                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.lights:[Lcom/sun/javafx/sg/prism/NGLightBase;
       8: invokeinterface #12,  2           // InterfaceMethod com/sun/prism/Graphics.setLights:([Lcom/sun/javafx/sg/prism/NGLightBase;)V
      13: aload_1
      14: aload_0
      15: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      18: getfield      #13                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.depthBuffer:Z
      21: invokeinterface #14,  2           // InterfaceMethod com/sun/prism/Graphics.setDepthBuffer:(Z)V
      26: aload_1
      27: aload_0
      28: invokespecial #15                 // Method getClearColor:()Lcom/sun/prism/paint/Color;
      31: invokeinterface #16,  2           // InterfaceMethod com/sun/prism/Graphics.clear:(Lcom/sun/prism/paint/Color;)V
      36: aload_0
      37: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      40: ifnull        98
      43: aload_0
      44: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      47: invokevirtual #6                  // Method com/sun/prism/paint/Paint.getType:()Lcom/sun/prism/paint/Paint$Type;
      50: getstatic     #7                  // Field com/sun/prism/paint/Paint$Type.COLOR:Lcom/sun/prism/paint/Paint$Type;
      53: if_acmpeq     98
      56: aload_1
      57: invokeinterface #17,  1           // InterfaceMethod com/sun/prism/Graphics.getRenderTarget:()Lcom/sun/prism/RenderTarget;
      62: aload_0
      63: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      66: invokevirtual #9                  // Method com/sun/prism/paint/Paint.isOpaque:()Z
      69: invokeinterface #18,  2           // InterfaceMethod com/sun/prism/RenderTarget.setOpaque:(Z)V
      74: aload_1
      75: aload_0
      76: getfield      #2                  // Field val$currentPaint:Lcom/sun/prism/paint/Paint;
      79: invokeinterface #19,  2           // InterfaceMethod com/sun/prism/Graphics.setPaint:(Lcom/sun/prism/paint/Paint;)V
      84: aload_1
      85: fconst_0
      86: fconst_0
      87: iload         4
      89: i2f
      90: iload         5
      92: i2f
      93: invokeinterface #20,  5           // InterfaceMethod com/sun/prism/Graphics.fillQuad:(FFFF)V
      98: iload_2
      99: ifne          106
     102: iload_3
     103: ifeq          118
     106: aload_1
     107: iload_2
     108: ineg
     109: i2f
     110: iload_3
     111: ineg
     112: i2f
     113: invokeinterface #21,  3           // InterfaceMethod com/sun/prism/Graphics.translate:(FF)V
     118: aload_0
     119: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     122: getfield      #22                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.transform:Lcom/sun/javafx/geom/transform/BaseTransform;
     125: ifnull        141
     128: aload_1
     129: aload_0
     130: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     133: getfield      #22                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.transform:Lcom/sun/javafx/geom/transform/BaseTransform;
     136: invokeinterface #23,  2           // InterfaceMethod com/sun/prism/Graphics.transform:(Lcom/sun/javafx/geom/transform/BaseTransform;)V
     141: aload_0
     142: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     145: getfield      #24                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.root:Lcom/sun/javafx/sg/prism/NGNode;
     148: ifnull        189
     151: aload_0
     152: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     155: getfield      #25                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.camera:Lcom/sun/javafx/sg/prism/NGCamera;
     158: ifnull        174
     161: aload_1
     162: aload_0
     163: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     166: getfield      #25                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.camera:Lcom/sun/javafx/sg/prism/NGCamera;
     169: invokeinterface #26,  2           // InterfaceMethod com/sun/prism/Graphics.setCamera:(Lcom/sun/javafx/sg/prism/NGCamera;)V
     174: aload_0
     175: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     178: getfield      #24                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.root:Lcom/sun/javafx/sg/prism/NGNode;
     181: astore        6
     183: aload         6
     185: aload_1
     186: invokevirtual #27                 // Method com/sun/javafx/sg/prism/NGNode.render:(Lcom/sun/prism/Graphics;)V
     189: return

  public void run();
    Code:
       0: invokestatic  #28                 // Method com/sun/prism/GraphicsPipeline.getDefaultResourceFactory:()Lcom/sun/prism/ResourceFactory;
       3: astore_1
       4: aload_1
       5: invokeinterface #29,  1           // InterfaceMethod com/sun/prism/ResourceFactory.isDeviceReady:()Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      18: getfield      #30                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.x:I
      21: istore_2
      22: aload_0
      23: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      26: getfield      #31                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.y:I
      29: istore_3
      30: aload_0
      31: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      34: getfield      #32                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.width:I
      37: istore        4
      39: aload_0
      40: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      43: getfield      #33                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.height:I
      46: istore        5
      48: iload         4
      50: ifle          58
      53: iload         5
      55: ifgt          59
      58: return
      59: iconst_0
      60: istore        6
      62: aload_0
      63: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      66: getfield      #34                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
      69: instanceof    #35                 // class com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage
      72: ifeq          88
      75: aload_0
      76: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
      79: getfield      #34                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
      82: checkcast     #35                 // class com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage
      85: goto          96
      88: new           #35                 // class com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage
      91: dup
      92: aconst_null
      93: invokespecial #36                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage."<init>":(Lcom/sun/prism/Image;)V
      96: astore        7
      98: aload         7
     100: iload         4
     102: iload         5
     104: aload_1
     105: invokevirtual #37                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.getRT:(IILcom/sun/prism/ResourceFactory;)Lcom/sun/prism/RTTexture;
     108: astore        8
     110: aload         8
     112: ifnonnull     132
     115: invokestatic  #38                 // Method com/sun/prism/impl/Disposer.cleanUp:()V
     118: aload_1
     119: invokeinterface #39,  1           // InterfaceMethod com/sun/prism/ResourceFactory.getTextureResourcePool:()Lcom/sun/prism/impl/TextureResourcePool;
     124: iload         6
     126: invokeinterface #40,  2           // InterfaceMethod com/sun/prism/impl/TextureResourcePool.freeDisposalRequestedAndCheckResources:(Z)V
     131: return
     132: aload         8
     134: invokeinterface #41,  1           // InterfaceMethod com/sun/prism/RTTexture.createGraphics:()Lcom/sun/prism/Graphics;
     139: astore        9
     141: aload_0
     142: aload         9
     144: iload_2
     145: iload_3
     146: iload         4
     148: iload         5
     150: invokespecial #42                 // Method draw:(Lcom/sun/prism/Graphics;IIII)V
     153: aload         7
     155: invokestatic  #43                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.access$100:(Lcom/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage;)Lcom/sun/prism/RTTexture;
     158: invokeinterface #44,  1           // InterfaceMethod com/sun/prism/RTTexture.getPixels:()[I
     163: astore        10
     165: aload         10
     167: ifnull        187
     170: aload         7
     172: aload         10
     174: iload         4
     176: iload         5
     178: invokestatic  #45                 // Method com/sun/prism/Image.fromIntArgbPreData:([III)Lcom/sun/prism/Image;
     181: invokevirtual #46                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.setImage:(Lcom/sun/prism/Image;)V
     184: goto          261
     187: iload         4
     189: iload         5
     191: imul
     192: invokestatic  #47                 // Method java/nio/IntBuffer.allocate:(I)Ljava/nio/IntBuffer;
     195: astore        11
     197: aload         7
     199: invokestatic  #43                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.access$100:(Lcom/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage;)Lcom/sun/prism/RTTexture;
     202: aload         11
     204: aload         7
     206: invokestatic  #43                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.access$100:(Lcom/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage;)Lcom/sun/prism/RTTexture;
     209: invokeinterface #48,  1           // InterfaceMethod com/sun/prism/RTTexture.getContentX:()I
     214: aload         7
     216: invokestatic  #43                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.access$100:(Lcom/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage;)Lcom/sun/prism/RTTexture;
     219: invokeinterface #49,  1           // InterfaceMethod com/sun/prism/RTTexture.getContentY:()I
     224: iload         4
     226: iload         5
     228: invokeinterface #50,  6           // InterfaceMethod com/sun/prism/RTTexture.readPixels:(Ljava/nio/Buffer;IIII)Z
     233: ifeq          253
     236: aload         7
     238: aload         11
     240: iload         4
     242: iload         5
     244: invokestatic  #51                 // Method com/sun/prism/Image.fromIntArgbPreData:(Ljava/nio/IntBuffer;II)Lcom/sun/prism/Image;
     247: invokevirtual #46                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.setImage:(Lcom/sun/prism/Image;)V
     250: goto          261
     253: aload         7
     255: invokevirtual #52                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage.dispose:()V
     258: aconst_null
     259: astore        7
     261: aload         8
     263: invokeinterface #53,  1           // InterfaceMethod com/sun/prism/RTTexture.unlock:()V
     268: aload_0
     269: getfield      #3                  // Field val$params:Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;
     272: aload         7
     274: putfield      #34                 // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
     277: invokestatic  #38                 // Method com/sun/prism/impl/Disposer.cleanUp:()V
     280: aload_1
     281: invokeinterface #39,  1           // InterfaceMethod com/sun/prism/ResourceFactory.getTextureResourcePool:()Lcom/sun/prism/impl/TextureResourcePool;
     286: iload         6
     288: invokeinterface #40,  2           // InterfaceMethod com/sun/prism/impl/TextureResourcePool.freeDisposalRequestedAndCheckResources:(Z)V
     293: goto          349
     296: astore        7
     298: iconst_1
     299: istore        6
     301: aload         7
     303: getstatic     #55                 // Field java/lang/System.err:Ljava/io/PrintStream;
     306: invokevirtual #56                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
     309: invokestatic  #38                 // Method com/sun/prism/impl/Disposer.cleanUp:()V
     312: aload_1
     313: invokeinterface #39,  1           // InterfaceMethod com/sun/prism/ResourceFactory.getTextureResourcePool:()Lcom/sun/prism/impl/TextureResourcePool;
     318: iload         6
     320: invokeinterface #40,  2           // InterfaceMethod com/sun/prism/impl/TextureResourcePool.freeDisposalRequestedAndCheckResources:(Z)V
     325: goto          349
     328: astore        12
     330: invokestatic  #38                 // Method com/sun/prism/impl/Disposer.cleanUp:()V
     333: aload_1
     334: invokeinterface #39,  1           // InterfaceMethod com/sun/prism/ResourceFactory.getTextureResourcePool:()Lcom/sun/prism/impl/TextureResourcePool;
     339: iload         6
     341: invokeinterface #40,  2           // InterfaceMethod com/sun/prism/impl/TextureResourcePool.freeDisposalRequestedAndCheckResources:(Z)V
     346: aload         12
     348: athrow
     349: return
    Exception table:
       from    to  target type
          62   115   296   Class java/lang/Throwable
         132   277   296   Class java/lang/Throwable
          62   115   328   any
         132   277   328   any
         296   309   328   any
         328   330   328   any
}
