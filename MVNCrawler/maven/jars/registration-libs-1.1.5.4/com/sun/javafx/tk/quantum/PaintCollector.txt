Compiled from "PaintCollector.java"
final class com.sun.javafx.tk.quantum.PaintCollector implements com.sun.javafx.tk.CompletionListener {
  private static volatile com.sun.javafx.tk.quantum.PaintCollector collector;

  private static final java.util.Comparator<com.sun.javafx.tk.quantum.GlassScene> DIRTY_SCENE_SORTER;

  private final java.util.List<com.sun.javafx.tk.quantum.GlassScene> dirtyScenes;

  private volatile java.util.concurrent.CountDownLatch allWorkCompletedLatch;

  private volatile boolean hasDirty;

  private final com.sun.javafx.tk.quantum.QuantumToolkit toolkit;

  private volatile boolean needsHint;

  static final boolean $assertionsDisabled;

  static com.sun.javafx.tk.quantum.PaintCollector createInstance(com.sun.javafx.tk.quantum.QuantumToolkit);
    Code:
       0: new           #1                  // class com/sun/javafx/tk/quantum/PaintCollector
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method "<init>":(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)V
       8: dup
       9: putstatic     #3                  // Field collector:Lcom/sun/javafx/tk/quantum/PaintCollector;
      12: areturn

  static com.sun.javafx.tk.quantum.PaintCollector getInstance();
    Code:
       0: getstatic     #3                  // Field collector:Lcom/sun/javafx/tk/quantum/PaintCollector;
       3: areturn

  private com.sun.javafx.tk.quantum.PaintCollector(com.sun.javafx.tk.quantum.QuantumToolkit);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/ArrayList
       8: dup
       9: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #7                  // Field dirtyScenes:Ljava/util/List;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/CountDownLatch
      19: dup
      20: iconst_0
      21: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      24: putfield      #10                 // Field allWorkCompletedLatch:Ljava/util/concurrent/CountDownLatch;
      27: aload_0
      28: aload_1
      29: putfield      #11                 // Field toolkit:Lcom/sun/javafx/tk/quantum/QuantumToolkit;
      32: return

  void waitForRenderingToComplete();
    Code:
       0: aload_0
       1: getfield      #10                 // Field allWorkCompletedLatch:Ljava/util/concurrent/CountDownLatch;
       4: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.await:()V
       7: return
       8: astore_1
       9: goto          0
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/InterruptedException

  final boolean hasDirty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field hasDirty:Z
       4: ireturn

  final void addDirtyScene(com.sun.javafx.tk.quantum.GlassScene);
    Code:
       0: getstatic     #15                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: invokestatic  #17                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.getFxUserThread:()Ljava/lang/Thread;
      12: if_acmpeq     23
      15: new           #18                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: getstatic     #15                 // Field $assertionsDisabled:Z
      26: ifne          41
      29: aload_1
      30: ifnonnull     41
      33: new           #18                 // class java/lang/AssertionError
      36: dup
      37: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: getstatic     #20                 // Field com/sun/javafx/tk/quantum/QuantumToolkit.verbose:Z
      44: ifeq          62
      47: getstatic     #21                 // Field java/lang/System.err:Ljava/io/PrintStream;
      50: invokestatic  #22                 // Method java/lang/System.nanoTime:()J
      53: aload_1
      54: invokedynamic #23,  0             // InvokeDynamic #0:makeConcatWithConstants:(JLcom/sun/javafx/tk/quantum/GlassScene;)Ljava/lang/String;
      59: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      62: aload_0
      63: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      66: aload_1
      67: invokeinterface #25,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      72: ifne          91
      75: aload_0
      76: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      79: aload_1
      80: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_0
      87: iconst_1
      88: putfield      #14                 // Field hasDirty:Z
      91: return

  final void removeDirtyScene(com.sun.javafx.tk.quantum.GlassScene);
    Code:
       0: getstatic     #15                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: invokestatic  #17                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.getFxUserThread:()Ljava/lang/Thread;
      12: if_acmpeq     23
      15: new           #18                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: getstatic     #15                 // Field $assertionsDisabled:Z
      26: ifne          41
      29: aload_1
      30: ifnonnull     41
      33: new           #18                 // class java/lang/AssertionError
      36: dup
      37: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: getstatic     #20                 // Field com/sun/javafx/tk/quantum/QuantumToolkit.verbose:Z
      44: ifeq          59
      47: getstatic     #21                 // Field java/lang/System.err:Ljava/io/PrintStream;
      50: aload_1
      51: invokedynamic #27,  0             // InvokeDynamic #1:makeConcatWithConstants:(Lcom/sun/javafx/tk/quantum/GlassScene;)Ljava/lang/String;
      56: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      59: aload_0
      60: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      63: aload_1
      64: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      69: pop
      70: aload_0
      71: aload_0
      72: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      75: invokeinterface #29,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      80: ifne          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: putfield      #14                 // Field hasDirty:Z
      91: return

  final com.sun.javafx.tk.CompletionListener getRendered();
    Code:
       0: aload_0
       1: areturn

  public void done(com.sun.javafx.tk.RenderJob);
    Code:
       0: getstatic     #15                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: invokestatic  #17                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.getFxUserThread:()Ljava/lang/Thread;
      12: if_acmpne     23
      15: new           #18                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_1
      24: instanceof    #30                 // class com/sun/javafx/tk/quantum/PaintRenderJob
      27: ifne          40
      30: new           #31                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #32                 // String PaintCollector: invalid RenderJob
      36: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_1
      41: checkcast     #30                 // class com/sun/javafx/tk/quantum/PaintRenderJob
      44: astore_2
      45: aload_2
      46: invokevirtual #34                 // Method com/sun/javafx/tk/quantum/PaintRenderJob.getScene:()Lcom/sun/javafx/tk/quantum/GlassScene;
      49: astore_3
      50: aload_3
      51: ifnonnull     64
      54: new           #31                 // class java/lang/IllegalArgumentException
      57: dup
      58: ldc           #35                 // String PaintCollector: null scene
      60: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_3
      65: invokevirtual #36                 // Method com/sun/javafx/tk/quantum/GlassScene.frameRendered:()V
      68: aload_0
      69: getfield      #10                 // Field allWorkCompletedLatch:Ljava/util/concurrent/CountDownLatch;
      72: invokevirtual #37                 // Method java/util/concurrent/CountDownLatch.getCount:()J
      75: lconst_1
      76: lcmp
      77: ifne          119
      80: aload_0
      81: getfield      #38                 // Field needsHint:Z
      84: ifeq          104
      87: aload_0
      88: getfield      #11                 // Field toolkit:Lcom/sun/javafx/tk/quantum/QuantumToolkit;
      91: invokevirtual #39                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.hasNativeSystemVsync:()Z
      94: ifne          104
      97: aload_0
      98: getfield      #11                 // Field toolkit:Lcom/sun/javafx/tk/quantum/QuantumToolkit;
     101: invokevirtual #40                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.vsyncHint:()V
     104: invokestatic  #41                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     107: invokevirtual #42                 // Method com/sun/glass/ui/Application.notifyRenderingFinished:()V
     110: getstatic     #43                 // Field com/sun/javafx/logging/PulseLogger.PULSE_LOGGING_ENABLED:Z
     113: ifeq          119
     116: invokestatic  #44                 // Method com/sun/javafx/logging/PulseLogger.renderEnd:()V
     119: aload_0
     120: getfield      #10                 // Field allWorkCompletedLatch:Ljava/util/concurrent/CountDownLatch;
     123: invokevirtual #45                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     126: return

  final void liveRepaintRenderJob(com.sun.javafx.tk.quantum.ViewScene);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method com/sun/javafx/tk/quantum/ViewScene.getPainter:()Lcom/sun/javafx/tk/quantum/ViewPainter;
       4: astore_2
       5: invokestatic  #47                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       8: checkcast     #48                 // class com/sun/javafx/tk/quantum/QuantumToolkit
      11: astore_3
      12: aload_3
      13: iconst_0
      14: invokevirtual #49                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.pulse:(Z)V
      17: new           #8                  // class java/util/concurrent/CountDownLatch
      20: dup
      21: iconst_1
      22: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      25: astore        4
      27: aload_3
      28: aload_2
      29: aload         4
      31: invokedynamic #50,  0             // InvokeDynamic #2:get:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;Lcom/sun/javafx/tk/quantum/ViewPainter;Ljava/util/concurrent/CountDownLatch;)Ljava/util/function/Supplier;
      36: invokestatic  #51                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.runWithoutRenderLock:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      39: pop
      40: return

  final void renderAll();
    Code:
       0: getstatic     #15                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: invokestatic  #17                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.getFxUserThread:()Ljava/lang/Thread;
      12: if_acmpeq     23
      15: new           #18                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: getstatic     #52                 // Field com/sun/javafx/tk/quantum/QuantumToolkit.pulseDebug:Z
      26: ifeq          52
      29: getstatic     #21                 // Field java/lang/System.err:Ljava/io/PrintStream;
      32: aload_0
      33: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      36: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      41: invokestatic  #22                 // Method java/lang/System.nanoTime:()J
      44: invokedynamic #54,  0             // InvokeDynamic #3:makeConcatWithConstants:(IJ)Ljava/lang/String;
      49: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      52: aload_0
      53: getfield      #14                 // Field hasDirty:Z
      56: ifne          60
      59: return
      60: getstatic     #15                 // Field $assertionsDisabled:Z
      63: ifne          86
      66: aload_0
      67: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      70: invokeinterface #29,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      75: ifeq          86
      78: new           #18                 // class java/lang/AssertionError
      81: dup
      82: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      85: athrow
      86: aload_0
      87: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
      90: getstatic     #55                 // Field DIRTY_SCENE_SORTER:Ljava/util/Comparator;
      93: invokestatic  #56                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      96: aload_0
      97: iconst_0
      98: putfield      #14                 // Field hasDirty:Z
     101: aload_0
     102: iconst_0
     103: putfield      #38                 // Field needsHint:Z
     106: getstatic     #43                 // Field com/sun/javafx/logging/PulseLogger.PULSE_LOGGING_ENABLED:Z
     109: ifeq          115
     112: invokestatic  #57                 // Method com/sun/javafx/logging/PulseLogger.renderStart:()V
     115: invokestatic  #41                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     118: invokevirtual #58                 // Method com/sun/glass/ui/Application.hasWindowManager:()Z
     121: ifne          273
     124: invokestatic  #59                 // Method com/sun/glass/ui/Window.getWindows:()Ljava/util/List;
     127: astore_1
     128: aload_0
     129: new           #8                  // class java/util/concurrent/CountDownLatch
     132: dup
     133: aload_1
     134: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     139: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     142: putfield      #10                 // Field allWorkCompletedLatch:Ljava/util/concurrent/CountDownLatch;
     145: iconst_0
     146: istore_2
     147: aload_1
     148: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     153: istore_3
     154: iload_2
     155: iload_3
     156: if_icmpge     270
     159: aload_1
     160: iload_2
     161: invokeinterface #60,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     166: checkcast     #61                 // class com/sun/glass/ui/Window
     169: astore        4
     171: aload         4
     173: invokestatic  #62                 // Method com/sun/javafx/tk/quantum/WindowStage.findWindowStage:(Lcom/sun/glass/ui/Window;)Lcom/sun/javafx/tk/quantum/WindowStage;
     176: astore        5
     178: aload         5
     180: ifnull        264
     183: aload         5
     185: invokevirtual #63                 // Method com/sun/javafx/tk/quantum/WindowStage.getViewScene:()Lcom/sun/javafx/tk/quantum/ViewScene;
     188: astore        6
     190: aload_0
     191: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
     194: aload         6
     196: invokeinterface #64,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     201: iconst_m1
     202: if_icmpeq     221
     205: aload_0
     206: getfield      #38                 // Field needsHint:Z
     209: ifne          221
     212: aload_0
     213: aload         6
     215: invokevirtual #65                 // Method com/sun/javafx/tk/quantum/ViewScene.isSynchronous:()Z
     218: putfield      #38                 // Field needsHint:Z
     221: invokestatic  #66                 // Method com/sun/javafx/PlatformUtil.useEGL:()Z
     224: ifeq          234
     227: iload_2
     228: iload_3
     229: iconst_1
     230: isub
     231: if_icmpne     243
     234: aload         6
     236: iconst_1
     237: invokevirtual #67                 // Method com/sun/javafx/tk/quantum/ViewScene.setDoPresent:(Z)V
     240: goto          249
     243: aload         6
     245: iconst_0
     246: invokevirtual #67                 // Method com/sun/javafx/tk/quantum/ViewScene.setDoPresent:(Z)V
     249: aload         6
     251: invokevirtual #68                 // Method com/sun/javafx/tk/quantum/ViewScene.repaint:()V
     254: goto          264
     257: astore        7
     259: aload         7
     261: invokevirtual #70                 // Method java/lang/Throwable.printStackTrace:()V
     264: iinc          2, 1
     267: goto          154
     270: goto          357
     273: aload_0
     274: new           #8                  // class java/util/concurrent/CountDownLatch
     277: dup
     278: aload_0
     279: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
     282: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     287: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     290: putfield      #10                 // Field allWorkCompletedLatch:Ljava/util/concurrent/CountDownLatch;
     293: aload_0
     294: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
     297: invokeinterface #71,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     302: astore_1
     303: aload_1
     304: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     309: ifeq          357
     312: aload_1
     313: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     318: checkcast     #74                 // class com/sun/javafx/tk/quantum/GlassScene
     321: astore_2
     322: aload_0
     323: getfield      #38                 // Field needsHint:Z
     326: ifne          337
     329: aload_0
     330: aload_2
     331: invokevirtual #75                 // Method com/sun/javafx/tk/quantum/GlassScene.isSynchronous:()Z
     334: putfield      #38                 // Field needsHint:Z
     337: aload_2
     338: iconst_1
     339: invokevirtual #76                 // Method com/sun/javafx/tk/quantum/GlassScene.setDoPresent:(Z)V
     342: aload_2
     343: invokevirtual #77                 // Method com/sun/javafx/tk/quantum/GlassScene.repaint:()V
     346: goto          354
     349: astore_3
     350: aload_3
     351: invokevirtual #70                 // Method java/lang/Throwable.printStackTrace:()V
     354: goto          303
     357: aload_0
     358: getfield      #7                  // Field dirtyScenes:Ljava/util/List;
     361: invokeinterface #78,  1           // InterfaceMethod java/util/List.clear:()V
     366: aload_0
     367: getfield      #11                 // Field toolkit:Lcom/sun/javafx/tk/quantum/QuantumToolkit;
     370: invokevirtual #79                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.shouldWaitForRenderingToComplete:()Z
     373: ifeq          380
     376: aload_0
     377: invokevirtual #80                 // Method waitForRenderingToComplete:()V
     380: return
    Exception table:
       from    to  target type
         249   254   257   Class java/lang/Throwable
         342   346   349   Class java/lang/Throwable

  private static java.lang.Object lambda$liveRepaintRenderJob$2(com.sun.javafx.tk.quantum.QuantumToolkit, com.sun.javafx.tk.quantum.ViewPainter, java.util.concurrent.CountDownLatch);
    Code:
       0: aload_0
       1: new           #81                 // class com/sun/javafx/tk/RenderJob
       4: dup
       5: aload_1
       6: aload_2
       7: invokedynamic #82,  0             // InvokeDynamic #4:done:(Ljava/util/concurrent/CountDownLatch;)Lcom/sun/javafx/tk/CompletionListener;
      12: invokespecial #83                 // Method com/sun/javafx/tk/RenderJob."<init>":(Ljava/lang/Runnable;Lcom/sun/javafx/tk/CompletionListener;)V
      15: invokevirtual #84                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.addRenderJob:(Lcom/sun/javafx/tk/RenderJob;)Ljava/util/concurrent/Future;
      18: pop
      19: aload_2
      20: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.await:()V
      23: goto          27
      26: astore_3
      27: aconst_null
      28: areturn
    Exception table:
       from    to  target type
          19    23    26   Class java/lang/InterruptedException

  private static void lambda$liveRepaintRenderJob$1(java.util.concurrent.CountDownLatch, com.sun.javafx.tk.RenderJob);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method java/util/concurrent/CountDownLatch.countDown:()V
       4: return

  private static int lambda$static$0(com.sun.javafx.tk.quantum.GlassScene, com.sun.javafx.tk.quantum.GlassScene);
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method com/sun/javafx/tk/quantum/GlassScene.isSynchronous:()Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_2
      13: aload_1
      14: invokevirtual #75                 // Method com/sun/javafx/tk/quantum/GlassScene.isSynchronous:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore_3
      26: iload_2
      27: iload_3
      28: isub
      29: ireturn

  static {};
    Code:
       0: ldc           #1                  // class com/sun/javafx/tk/quantum/PaintCollector
       2: invokevirtual #85                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #15                 // Field $assertionsDisabled:Z
      16: invokedynamic #86,  0             // InvokeDynamic #5:compare:()Ljava/util/Comparator;
      21: putstatic     #55                 // Field DIRTY_SCENE_SORTER:Ljava/util/Comparator;
      24: return
}
