Compiled from "TKStage.java"
public interface com.sun.javafx.tk.TKStage {
  public static final javafx.scene.input.KeyCodeCombination defaultFullScreenExitKeycombo;

  public abstract void setTKStageListener(com.sun.javafx.tk.TKStageListener);

  public abstract com.sun.javafx.tk.TKScene createTKScene(boolean, boolean, java.security.AccessControlContext);

  public abstract void setScene(com.sun.javafx.tk.TKScene);

  public abstract void setBounds(float, float, boolean, boolean, float, float, float, float, float, float, float, float);

  public abstract float getPlatformScaleX();

  public abstract float getPlatformScaleY();

  public abstract float getOutputScaleX();

  public abstract float getOutputScaleY();

  public abstract void setIcons(java.util.List);

  public abstract void setTitle(java.lang.String);

  public abstract void setVisible(boolean);

  public abstract void setOpacity(float);

  public abstract void setIconified(boolean);

  public abstract void setMaximized(boolean);

  public abstract void setAlwaysOnTop(boolean);

  public abstract void setResizable(boolean);

  public abstract void setImportant(boolean);

  public abstract void setMinimumSize(int, int);

  public abstract void setMaximumSize(int, int);

  public abstract void setFullScreen(boolean);

  public abstract void requestFocus();

  public abstract void toBack();

  public abstract void toFront();

  public abstract void close();

  public default void postponeClose();
    Code:
       0: return

  public default void closePostponed();
    Code:
       0: return

  public abstract void requestFocus(com.sun.javafx.tk.FocusCause);

  public abstract boolean grabFocus();

  public abstract void ungrabFocus();

  public abstract void requestInput(java.lang.String, int, double, double, double, double, double, double, double, double, double, double, double, double, double, double);

  public abstract void releaseInput();

  public abstract void setRTL(boolean);

  public abstract void setEnabled(boolean);

  public abstract long getRawHandle();

  static {};
    Code:
       0: new           #1                  // class javafx/scene/input/KeyCodeCombination
       3: dup
       4: getstatic     #2                  // Field javafx/scene/input/KeyCode.ESCAPE:Ljavafx/scene/input/KeyCode;
       7: getstatic     #3                  // Field javafx/scene/input/KeyCombination$ModifierValue.UP:Ljavafx/scene/input/KeyCombination$ModifierValue;
      10: getstatic     #3                  // Field javafx/scene/input/KeyCombination$ModifierValue.UP:Ljavafx/scene/input/KeyCombination$ModifierValue;
      13: getstatic     #3                  // Field javafx/scene/input/KeyCombination$ModifierValue.UP:Ljavafx/scene/input/KeyCombination$ModifierValue;
      16: getstatic     #3                  // Field javafx/scene/input/KeyCombination$ModifierValue.UP:Ljavafx/scene/input/KeyCombination$ModifierValue;
      19: getstatic     #3                  // Field javafx/scene/input/KeyCombination$ModifierValue.UP:Ljavafx/scene/input/KeyCombination$ModifierValue;
      22: invokespecial #4                  // Method javafx/scene/input/KeyCodeCombination."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/scene/input/KeyCombination$ModifierValue;Ljavafx/scene/input/KeyCombination$ModifierValue;Ljavafx/scene/input/KeyCombination$ModifierValue;Ljavafx/scene/input/KeyCombination$ModifierValue;Ljavafx/scene/input/KeyCombination$ModifierValue;)V
      25: putstatic     #5                  // Field defaultFullScreenExitKeycombo:Ljavafx/scene/input/KeyCodeCombination;
      28: return
}
