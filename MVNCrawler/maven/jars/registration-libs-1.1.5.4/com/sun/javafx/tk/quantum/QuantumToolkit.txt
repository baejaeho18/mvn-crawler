Compiled from "QuantumToolkit.java"
public final class com.sun.javafx.tk.quantum.QuantumToolkit extends com.sun.javafx.tk.Toolkit {
  public static final boolean verbose;

  public static final boolean pulseDebug;

  private static final boolean multithreaded;

  private static boolean debug;

  private static java.lang.Integer pulseHZ;

  static final boolean liveResize;

  static final boolean drawInPaint;

  private static boolean singleThreaded;

  private static boolean noRenderJobs;

  private java.util.concurrent.atomic.AtomicBoolean toolkitRunning;

  private java.util.concurrent.atomic.AtomicBoolean animationRunning;

  private java.util.concurrent.atomic.AtomicBoolean nextPulseRequested;

  private java.util.concurrent.atomic.AtomicBoolean pulseRunning;

  private int inPulse;

  private java.util.concurrent.CountDownLatch launchLatch;

  final int PULSE_INTERVAL;

  final int FULLSPEED_INTERVAL;

  boolean nativeSystemVsync;

  private float _maxPixelScale;

  private java.lang.Runnable pulseRunnable;

  private java.lang.Runnable userRunnable;

  private java.lang.Runnable timerRunnable;

  private com.sun.glass.ui.Timer pulseTimer;

  private java.lang.Thread shutdownHook;

  private com.sun.javafx.tk.quantum.PaintCollector collector;

  private com.sun.javafx.tk.quantum.QuantumRenderer renderer;

  private com.sun.prism.GraphicsPipeline pipeline;

  private java.lang.ClassLoader ccl;

  private java.util.HashMap<java.lang.Object, com.sun.glass.ui.EventLoop> eventLoopMap;

  private final com.sun.javafx.perf.PerformanceTracker perfTracker;

  private static com.sun.javafx.tk.ScreenConfigurationAccessor screenAccessor;

  private java.util.Map<java.lang.Object, java.lang.Object> contextMap;

  private com.sun.scenario.DelayedRunnable animationRunnable;

  static com.sun.prism.BasicStroke tmpStroke;

  private com.sun.javafx.tk.quantum.QuantumClipboard clipboard;

  private com.sun.javafx.tk.quantum.GlassSystemMenu systemMenu;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.tk.quantum.QuantumToolkit();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/javafx/tk/Toolkit."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: iconst_0
      22: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      25: putfield      #6                  // Field animationRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: aload_0
      29: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      32: dup
      33: iconst_0
      34: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      37: putfield      #7                  // Field nextPulseRequested:Ljava/util/concurrent/atomic/AtomicBoolean;
      40: aload_0
      41: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      44: dup
      45: iconst_0
      46: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      49: putfield      #8                  // Field pulseRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      52: aload_0
      53: iconst_0
      54: putfield      #9                  // Field inPulse:I
      57: aload_0
      58: new           #10                 // class java/util/concurrent/CountDownLatch
      61: dup
      62: iconst_1
      63: invokespecial #11                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      66: putfield      #12                 // Field launchLatch:Ljava/util/concurrent/CountDownLatch;
      69: aload_0
      70: getstatic     #13                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      73: lconst_1
      74: invokevirtual #14                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      77: aload_0
      78: invokevirtual #15                 // Method getRefreshRate:()I
      81: i2l
      82: ldiv
      83: l2i
      84: putfield      #16                 // Field PULSE_INTERVAL:I
      87: aload_0
      88: iconst_1
      89: putfield      #17                 // Field FULLSPEED_INTERVAL:I
      92: aload_0
      93: iconst_0
      94: putfield      #18                 // Field nativeSystemVsync:Z
      97: aload_0
      98: aconst_null
      99: putfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
     102: aload_0
     103: aconst_null
     104: putfield      #20                 // Field shutdownHook:Ljava/lang/Thread;
     107: aload_0
     108: aconst_null
     109: putfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
     112: aload_0
     113: new           #22                 // class com/sun/javafx/tk/quantum/PerformanceTrackerImpl
     116: dup
     117: invokespecial #23                 // Method com/sun/javafx/tk/quantum/PerformanceTrackerImpl."<init>":()V
     120: putfield      #24                 // Field perfTracker:Lcom/sun/javafx/perf/PerformanceTracker;
     123: aload_0
     124: new           #25                 // class java/util/HashMap
     127: dup
     128: invokespecial #26                 // Method java/util/HashMap."<init>":()V
     131: invokestatic  #27                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
     134: putfield      #28                 // Field contextMap:Ljava/util/Map;
     137: aload_0
     138: new           #29                 // class com/sun/javafx/tk/quantum/GlassSystemMenu
     141: dup
     142: invokespecial #30                 // Method com/sun/javafx/tk/quantum/GlassSystemMenu."<init>":()V
     145: putfield      #31                 // Field systemMenu:Lcom/sun/javafx/tk/quantum/GlassSystemMenu;
     148: return

  public boolean init();
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method com/sun/javafx/tk/quantum/QuantumRenderer.getInstance:()Lcom/sun/javafx/tk/quantum/QuantumRenderer;
       4: putfield      #33                 // Field renderer:Lcom/sun/javafx/tk/quantum/QuantumRenderer;
       7: aload_0
       8: aload_0
       9: invokestatic  #34                 // Method com/sun/javafx/tk/quantum/PaintCollector.createInstance:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)Lcom/sun/javafx/tk/quantum/PaintCollector;
      12: putfield      #35                 // Field collector:Lcom/sun/javafx/tk/quantum/PaintCollector;
      15: aload_0
      16: invokestatic  #36                 // Method com/sun/prism/GraphicsPipeline.getPipeline:()Lcom/sun/prism/GraphicsPipeline;
      19: putfield      #37                 // Field pipeline:Lcom/sun/prism/GraphicsPipeline;
      22: aload_0
      23: new           #38                 // class com/sun/javafx/tk/quantum/QuantumToolkit$1
      26: dup
      27: aload_0
      28: ldc           #39                 // String Glass/Prism Shutdown Hook
      30: invokespecial #40                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$1."<init>":(Lcom/sun/javafx/tk/quantum/QuantumToolkit;Ljava/lang/String;)V
      33: putfield      #20                 // Field shutdownHook:Ljava/lang/Thread;
      36: aload_0
      37: invokedynamic #41,  0             // InvokeDynamic #0:run:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)Ljava/security/PrivilegedAction;
      42: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      45: pop
      46: iconst_1
      47: ireturn

  public void startup(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: invokevirtual #44                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       7: putfield      #45                 // Field ccl:Ljava/lang/ClassLoader;
      10: aload_0
      11: aload_1
      12: putfield      #46                 // Field userRunnable:Ljava/lang/Runnable;
      15: aload_0
      16: invokedynamic #47,  0             // InvokeDynamic #1:run:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)Ljava/lang/Runnable;
      21: invokestatic  #48                 // Method com/sun/glass/ui/Application.run:(Ljava/lang/Runnable;)V
      24: goto          60
      27: astore_2
      28: getstatic     #50                 // Field verbose:Z
      31: ifeq          38
      34: aload_2
      35: invokevirtual #51                 // Method java/lang/RuntimeException.printStackTrace:()V
      38: aload_2
      39: athrow
      40: astore_2
      41: getstatic     #50                 // Field verbose:Z
      44: ifeq          51
      47: aload_2
      48: invokevirtual #53                 // Method java/lang/Throwable.printStackTrace:()V
      51: new           #49                 // class java/lang/RuntimeException
      54: dup
      55: aload_2
      56: invokespecial #54                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      59: athrow
      60: aload_0
      61: getfield      #12                 // Field launchLatch:Ljava/util/concurrent/CountDownLatch;
      64: invokevirtual #55                 // Method java/util/concurrent/CountDownLatch.await:()V
      67: goto          75
      70: astore_2
      71: aload_2
      72: invokevirtual #57                 // Method java/lang/InterruptedException.printStackTrace:()V
      75: return
    Exception table:
       from    to  target type
          10    24    27   Class java/lang/RuntimeException
          10    24    40   Class java/lang/Throwable
          60    67    70   Class java/lang/InterruptedException

  private void assertToolkitRunning();
    Code:
       0: return

  boolean shouldWaitForRenderingToComplete();
    Code:
       0: getstatic     #58                 // Field multithreaded:Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  private static void initSceneGraph();
    Code:
       0: invokestatic  #59                 // Method javafx/stage/Screen.getPrimary:()Ljavafx/stage/Screen;
       3: pop
       4: return

  void runToolkit();
    Code:
       0: invokestatic  #43                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_0
       5: getfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       8: iconst_1
       9: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
      12: ifne          91
      15: aload_1
      16: ldc           #61                 // String JavaFX Application Thread
      18: invokevirtual #62                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      21: aload_1
      22: aload_0
      23: getfield      #45                 // Field ccl:Ljava/lang/ClassLoader;
      26: invokevirtual #63                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      29: aload_1
      30: invokestatic  #64                 // Method setFxUserThread:(Ljava/lang/Thread;)V
      33: invokestatic  #65                 // Method assignScreensAdapters:()V
      36: aload_0
      37: getfield      #33                 // Field renderer:Lcom/sun/javafx/tk/quantum/QuantumRenderer;
      40: invokevirtual #66                 // Method com/sun/javafx/tk/quantum/QuantumRenderer.createResourceFactory:()V
      43: aload_0
      44: aload_0
      45: invokedynamic #67,  0             // InvokeDynamic #2:run:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)Ljava/lang/Runnable;
      50: putfield      #68                 // Field pulseRunnable:Ljava/lang/Runnable;
      53: aload_0
      54: aload_0
      55: invokedynamic #69,  0             // InvokeDynamic #3:run:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)Ljava/lang/Runnable;
      60: putfield      #70                 // Field timerRunnable:Ljava/lang/Runnable;
      63: aload_0
      64: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      67: aload_0
      68: getfield      #70                 // Field timerRunnable:Ljava/lang/Runnable;
      71: invokevirtual #72                 // Method com/sun/glass/ui/Application.createTimer:(Ljava/lang/Runnable;)Lcom/sun/glass/ui/Timer;
      74: putfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
      77: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      80: new           #73                 // class com/sun/javafx/tk/quantum/QuantumToolkit$2
      83: dup
      84: aload_0
      85: invokespecial #74                 // Method com/sun/javafx/tk/quantum/QuantumToolkit$2."<init>":(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)V
      88: invokevirtual #75                 // Method com/sun/glass/ui/Application.setEventHandler:(Lcom/sun/glass/ui/Application$EventHandler;)V
      91: invokestatic  #76                 // Method initSceneGraph:()V
      94: aload_0
      95: getfield      #12                 // Field launchLatch:Ljava/util/concurrent/CountDownLatch;
      98: invokevirtual #77                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     101: aload_0
     102: getfield      #46                 // Field userRunnable:Ljava/lang/Runnable;
     105: invokestatic  #78                 // Method com/sun/glass/ui/Application.invokeAndWait:(Ljava/lang/Runnable;)V
     108: aload_0
     109: invokevirtual #79                 // Method getMasterTimer:()Lcom/sun/scenario/animation/AbstractMasterTimer;
     112: invokevirtual #80                 // Method com/sun/scenario/animation/AbstractMasterTimer.isFullspeed:()Z
     115: ifeq          129
     118: aload_0
     119: getfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
     122: iconst_1
     123: invokevirtual #82                 // Method com/sun/glass/ui/Timer.start:(I)V
     126: goto          174
     129: aload_0
     130: invokestatic  #83                 // Method com/sun/glass/ui/Screen.getVideoRefreshPeriod:()D
     133: dconst_0
     134: dcmpl
     135: ifeq          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: putfield      #18                 // Field nativeSystemVsync:Z
     146: aload_0
     147: getfield      #18                 // Field nativeSystemVsync:Z
     150: ifeq          163
     153: aload_0
     154: getfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
     157: invokevirtual #84                 // Method com/sun/glass/ui/Timer.start:()V
     160: goto          174
     163: aload_0
     164: getfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
     167: aload_0
     168: getfield      #16                 // Field PULSE_INTERVAL:I
     171: invokevirtual #82                 // Method com/sun/glass/ui/Timer.start:(I)V
     174: getstatic     #85                 // Field com/sun/prism/impl/PrismSettings.verbose:Z
     177: ifeq          201
     180: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
     183: getstatic     #87                 // Field com/sun/prism/impl/PrismSettings.isVsyncEnabled:Z
     186: aload_0
     187: getfield      #37                 // Field pipeline:Lcom/sun/prism/GraphicsPipeline;
     190: invokevirtual #88                 // Method com/sun/prism/GraphicsPipeline.isVsyncSupported:()Z
     193: invokedynamic #89,  0             // InvokeDynamic #4:makeConcatWithConstants:(ZZ)Ljava/lang/String;
     198: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     201: ldc           #91                 // String Toolkit.startup - finished
     203: invokestatic  #92                 // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     206: goto          287
     209: astore_2
     210: aload_2
     211: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
     214: invokevirtual #93                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
     217: getstatic     #85                 // Field com/sun/prism/impl/PrismSettings.verbose:Z
     220: ifeq          244
     223: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
     226: getstatic     #87                 // Field com/sun/prism/impl/PrismSettings.isVsyncEnabled:Z
     229: aload_0
     230: getfield      #37                 // Field pipeline:Lcom/sun/prism/GraphicsPipeline;
     233: invokevirtual #88                 // Method com/sun/prism/GraphicsPipeline.isVsyncSupported:()Z
     236: invokedynamic #89,  0             // InvokeDynamic #4:makeConcatWithConstants:(ZZ)Ljava/lang/String;
     241: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     244: ldc           #91                 // String Toolkit.startup - finished
     246: invokestatic  #92                 // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     249: goto          287
     252: astore_3
     253: getstatic     #85                 // Field com/sun/prism/impl/PrismSettings.verbose:Z
     256: ifeq          280
     259: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
     262: getstatic     #87                 // Field com/sun/prism/impl/PrismSettings.isVsyncEnabled:Z
     265: aload_0
     266: getfield      #37                 // Field pipeline:Lcom/sun/prism/GraphicsPipeline;
     269: invokevirtual #88                 // Method com/sun/prism/GraphicsPipeline.isVsyncSupported:()Z
     272: invokedynamic #89,  0             // InvokeDynamic #4:makeConcatWithConstants:(ZZ)Ljava/lang/String;
     277: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     280: ldc           #91                 // String Toolkit.startup - finished
     282: invokestatic  #92                 // Method com/sun/javafx/perf/PerformanceTracker.logEvent:(Ljava/lang/String;)V
     285: aload_3
     286: athrow
     287: return
    Exception table:
       from    to  target type
         101   174   209   Class java/lang/Throwable
         101   174   252   any
         209   217   252   any

  public static <T> T runWithoutRenderLock(java.util.function.Supplier<T>);
    Code:
       0: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
       3: invokevirtual #95                 // Method java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread:()Z
       6: istore_1
       7: iload_1
       8: ifeq          17
      11: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
      14: invokevirtual #96                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      17: aload_0
      18: invokeinterface #97,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      23: astore_2
      24: iload_1
      25: ifeq          34
      28: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      34: aload_2
      35: areturn
      36: astore_3
      37: iload_1
      38: ifeq          47
      41: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
      44: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      47: aload_3
      48: athrow
    Exception table:
       from    to  target type
           7    24    36   any

  public static <T> T runWithRenderLock(java.util.function.Supplier<T>);
    Code:
       0: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
       3: invokevirtual #98                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       6: aload_0
       7: invokeinterface #97,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      12: astore_1
      13: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #96                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: aload_1
      20: areturn
      21: astore_2
      22: getstatic     #94                 // Field com/sun/javafx/tk/quantum/ViewPainter.renderLock:Ljava/util/concurrent/locks/ReentrantLock;
      25: invokevirtual #96                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           6    13    21   any

  boolean hasNativeSystemVsync();
    Code:
       0: aload_0
       1: getfield      #18                 // Field nativeSystemVsync:Z
       4: ireturn

  boolean isVsyncEnabled();
    Code:
       0: getstatic     #87                 // Field com/sun/prism/impl/PrismSettings.isVsyncEnabled:Z
       3: ifeq          20
       6: aload_0
       7: getfield      #37                 // Field pipeline:Lcom/sun/prism/GraphicsPipeline;
      10: invokevirtual #88                 // Method com/sun/prism/GraphicsPipeline.isVsyncSupported:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void checkFxUserThread();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method com/sun/javafx/tk/Toolkit.checkFxUserThread:()V
       4: aload_0
       5: getfield      #33                 // Field renderer:Lcom/sun/javafx/tk/quantum/QuantumRenderer;
       8: invokevirtual #100                // Method com/sun/javafx/tk/quantum/QuantumRenderer.checkRendererIdle:()V
      11: return

  protected static java.lang.Thread getFxUserThread();
    Code:
       0: invokestatic  #101                // Method com/sun/javafx/tk/Toolkit.getFxUserThread:()Ljava/lang/Thread;
       3: areturn

  public java.util.concurrent.Future addRenderJob(com.sun.javafx.tk.RenderJob);
    Code:
       0: getstatic     #102                // Field noRenderJobs:Z
       3: ifeq          51
       6: aload_1
       7: invokevirtual #103                // Method com/sun/javafx/tk/RenderJob.getCompletionListener:()Lcom/sun/javafx/tk/CompletionListener;
      10: astore_2
      11: aload_1
      12: instanceof    #104                // class com/sun/javafx/tk/quantum/PaintRenderJob
      15: ifeq          30
      18: aload_1
      19: checkcast     #104                // class com/sun/javafx/tk/quantum/PaintRenderJob
      22: invokevirtual #105                // Method com/sun/javafx/tk/quantum/PaintRenderJob.getScene:()Lcom/sun/javafx/tk/quantum/GlassScene;
      25: iconst_0
      26: invokevirtual #106                // Method com/sun/javafx/tk/quantum/GlassScene.setPainting:(Z)Z
      29: pop
      30: aload_2
      31: ifnull        49
      34: aload_2
      35: aload_1
      36: invokeinterface #107,  2          // InterfaceMethod com/sun/javafx/tk/CompletionListener.done:(Lcom/sun/javafx/tk/RenderJob;)V
      41: goto          49
      44: astore_3
      45: aload_3
      46: invokevirtual #53                 // Method java/lang/Throwable.printStackTrace:()V
      49: aconst_null
      50: areturn
      51: getstatic     #108                // Field singleThreaded:Z
      54: ifeq          63
      57: aload_1
      58: invokevirtual #109                // Method com/sun/javafx/tk/RenderJob.run:()V
      61: aconst_null
      62: areturn
      63: aload_0
      64: getfield      #33                 // Field renderer:Lcom/sun/javafx/tk/quantum/QuantumRenderer;
      67: aload_1
      68: invokevirtual #110                // Method com/sun/javafx/tk/quantum/QuantumRenderer.submitRenderJob:(Lcom/sun/javafx/tk/RenderJob;)Ljava/util/concurrent/Future;
      71: areturn
    Exception table:
       from    to  target type
          34    41    44   Class java/lang/Throwable

  void postPulse();
    Code:
       0: aload_0
       1: getfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          81
      10: aload_0
      11: getfield      #6                  // Field animationRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      17: ifne          40
      20: aload_0
      21: getfield      #7                  // Field nextPulseRequested:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      27: ifne          40
      30: aload_0
      31: getfield      #35                 // Field collector:Lcom/sun/javafx/tk/quantum/PaintCollector;
      34: invokevirtual #112                // Method com/sun/javafx/tk/quantum/PaintCollector.hasDirty:()Z
      37: ifeq          81
      40: aload_0
      41: invokespecial #113                // Method setPulseRunning:()Z
      44: ifne          81
      47: aload_0
      48: getfield      #68                 // Field pulseRunnable:Ljava/lang/Runnable;
      51: invokestatic  #114                // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
      54: getstatic     #115                // Field debug:Z
      57: ifeq          105
      60: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
      63: invokestatic  #116                // Method java/lang/System.nanoTime:()J
      66: aload_0
      67: invokespecial #117                // Method pulseString:()Ljava/lang/String;
      70: invokedynamic #118,  0            // InvokeDynamic #5:makeConcatWithConstants:(JLjava/lang/String;)Ljava/lang/String;
      75: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      78: goto          105
      81: getstatic     #115                // Field debug:Z
      84: ifeq          105
      87: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
      90: invokestatic  #116                // Method java/lang/System.nanoTime:()J
      93: aload_0
      94: invokespecial #117                // Method pulseString:()Ljava/lang/String;
      97: invokedynamic #119,  0            // InvokeDynamic #6:makeConcatWithConstants:(JLjava/lang/String;)Ljava/lang/String;
     102: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     105: return

  private java.lang.String pulseString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          15
      10: ldc           #120                // String T
      12: goto          17
      15: ldc           #121                // String t
      17: aload_0
      18: getfield      #6                  // Field animationRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      24: ifeq          32
      27: ldc           #122                // String A
      29: goto          34
      32: ldc           #123                // String a
      34: aload_0
      35: getfield      #8                  // Field pulseRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      41: ifeq          49
      44: ldc           #124                // String P
      46: goto          51
      49: ldc           #125                // String p
      51: aload_0
      52: getfield      #7                  // Field nextPulseRequested:Ljava/util/concurrent/atomic/AtomicBoolean;
      55: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      58: ifeq          66
      61: ldc           #126                // String N
      63: goto          68
      66: ldc           #127                // String n
      68: aload_0
      69: getfield      #35                 // Field collector:Lcom/sun/javafx/tk/quantum/PaintCollector;
      72: invokevirtual #112                // Method com/sun/javafx/tk/quantum/PaintCollector.hasDirty:()Z
      75: ifeq          83
      78: ldc           #128                // String D
      80: goto          85
      83: ldc           #129                // String d
      85: invokedynamic #130,  0            // InvokeDynamic #7:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      90: areturn

  private boolean setPulseRunning();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pulseRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ireturn

  private void endPulseRunning();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pulseRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #131                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: getstatic     #115                // Field debug:Z
      11: ifeq          28
      14: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
      17: invokestatic  #116                // Method java/lang/System.nanoTime:()J
      20: invokedynamic #132,  0            // InvokeDynamic #8:makeConcatWithConstants:(J)Ljava/lang/String;
      25: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      28: return

  void pulseFromQueue();
    Code:
       0: aload_0
       1: invokevirtual #133                // Method pulse:()V
       4: aload_0
       5: invokespecial #134                // Method endPulseRunning:()V
       8: goto          18
      11: astore_1
      12: aload_0
      13: invokespecial #134                // Method endPulseRunning:()V
      16: aload_1
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     4    11   any

  protected void pulse();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #135                // Method pulse:(Z)V
       5: return

  void pulse(boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field inPulse:I
       5: iconst_1
       6: iadd
       7: putfield      #9                  // Field inPulse:I
      10: getstatic     #136                // Field com/sun/javafx/logging/PulseLogger.PULSE_LOGGING_ENABLED:Z
      13: ifeq          19
      16: invokestatic  #137                // Method com/sun/javafx/logging/PulseLogger.pulseStart:()V
      19: aload_0
      20: getfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      23: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      26: ifne          49
      29: aload_0
      30: dup
      31: getfield      #9                  // Field inPulse:I
      34: iconst_1
      35: isub
      36: putfield      #9                  // Field inPulse:I
      39: getstatic     #136                // Field com/sun/javafx/logging/PulseLogger.PULSE_LOGGING_ENABLED:Z
      42: ifeq          48
      45: invokestatic  #138                // Method com/sun/javafx/logging/PulseLogger.pulseEnd:()V
      48: return
      49: aload_0
      50: getfield      #7                  // Field nextPulseRequested:Ljava/util/concurrent/atomic/AtomicBoolean;
      53: iconst_0
      54: invokevirtual #131                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      57: aload_0
      58: getfield      #139                // Field animationRunnable:Lcom/sun/scenario/DelayedRunnable;
      61: ifnull        84
      64: aload_0
      65: getfield      #6                  // Field animationRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      68: iconst_1
      69: invokevirtual #131                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      72: aload_0
      73: getfield      #139                // Field animationRunnable:Lcom/sun/scenario/DelayedRunnable;
      76: invokeinterface #140,  1          // InterfaceMethod com/sun/scenario/DelayedRunnable.run:()V
      81: goto          92
      84: aload_0
      85: getfield      #6                  // Field animationRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      88: iconst_0
      89: invokevirtual #131                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      92: aload_0
      93: invokevirtual #141                // Method firePulse:()V
      96: iload_1
      97: ifeq          107
     100: aload_0
     101: getfield      #35                 // Field collector:Lcom/sun/javafx/tk/quantum/PaintCollector;
     104: invokevirtual #142                // Method com/sun/javafx/tk/quantum/PaintCollector.renderAll:()V
     107: aload_0
     108: dup
     109: getfield      #9                  // Field inPulse:I
     112: iconst_1
     113: isub
     114: putfield      #9                  // Field inPulse:I
     117: getstatic     #136                // Field com/sun/javafx/logging/PulseLogger.PULSE_LOGGING_ENABLED:Z
     120: ifeq          151
     123: invokestatic  #138                // Method com/sun/javafx/logging/PulseLogger.pulseEnd:()V
     126: goto          151
     129: astore_2
     130: aload_0
     131: dup
     132: getfield      #9                  // Field inPulse:I
     135: iconst_1
     136: isub
     137: putfield      #9                  // Field inPulse:I
     140: getstatic     #136                // Field com/sun/javafx/logging/PulseLogger.PULSE_LOGGING_ENABLED:Z
     143: ifeq          149
     146: invokestatic  #138                // Method com/sun/javafx/logging/PulseLogger.pulseEnd:()V
     149: aload_2
     150: athrow
     151: return
    Exception table:
       from    to  target type
           0    29   129   any
          49   107   129   any

  void vsyncHint();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method isVsyncEnabled:()Z
       4: ifeq          31
       7: getstatic     #115                // Field debug:Z
      10: ifeq          27
      13: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
      16: invokestatic  #116                // Method java/lang/System.nanoTime:()J
      19: invokedynamic #144,  0            // InvokeDynamic #9:makeConcatWithConstants:(J)Ljava/lang/String;
      24: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      27: aload_0
      28: invokevirtual #145                // Method postPulse:()V
      31: return

  public com.sun.javafx.tk.AppletWindow createAppletWindow(long, java.lang.String);
    Code:
       0: new           #146                // class com/sun/javafx/tk/quantum/GlassAppletWindow
       3: dup
       4: lload_1
       5: aload_3
       6: invokespecial #147                // Method com/sun/javafx/tk/quantum/GlassAppletWindow."<init>":(JLjava/lang/String;)V
       9: astore        4
      11: aload         4
      13: invokestatic  #148                // Method com/sun/javafx/tk/quantum/WindowStage.setAppletWindow:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;)V
      16: aload         4
      18: areturn

  public void closeAppletWindow();
    Code:
       0: invokestatic  #149                // Method com/sun/javafx/tk/quantum/WindowStage.getAppletWindow:()Lcom/sun/javafx/tk/quantum/GlassAppletWindow;
       3: astore_1
       4: aconst_null
       5: aload_1
       6: if_acmpeq     17
       9: aload_1
      10: invokevirtual #150                // Method com/sun/javafx/tk/quantum/GlassAppletWindow.dispose:()V
      13: aconst_null
      14: invokestatic  #148                // Method com/sun/javafx/tk/quantum/WindowStage.setAppletWindow:(Lcom/sun/javafx/tk/quantum/GlassAppletWindow;)V
      17: return

  public com.sun.javafx.tk.TKStage createTKStage(javafx.stage.Window, boolean, javafx.stage.StageStyle, boolean, javafx.stage.Modality, com.sun.javafx.tk.TKStage, boolean, java.security.AccessControlContext);
    Code:
       0: aload_0
       1: invokespecial #151                // Method assertToolkitRunning:()V
       4: new           #152                // class com/sun/javafx/tk/quantum/WindowStage
       7: dup
       8: aload_1
       9: iload_2
      10: aload_3
      11: aload         5
      13: aload         6
      15: invokespecial #153                // Method com/sun/javafx/tk/quantum/WindowStage."<init>":(Ljavafx/stage/Window;ZLjavafx/stage/StageStyle;Ljavafx/stage/Modality;Lcom/sun/javafx/tk/TKStage;)V
      18: astore        9
      20: aload         9
      22: aload         8
      24: invokevirtual #154                // Method com/sun/javafx/tk/quantum/WindowStage.setSecurityContext:(Ljava/security/AccessControlContext;)V
      27: iload         4
      29: ifeq          37
      32: aload         9
      34: invokevirtual #155                // Method com/sun/javafx/tk/quantum/WindowStage.setIsPrimary:()V
      37: aload         9
      39: iload         7
      41: invokevirtual #156                // Method com/sun/javafx/tk/quantum/WindowStage.setRTL:(Z)V
      44: aload         9
      46: aload_0
      47: getfield      #31                 // Field systemMenu:Lcom/sun/javafx/tk/quantum/GlassSystemMenu;
      50: invokevirtual #157                // Method com/sun/javafx/tk/quantum/WindowStage.init:(Lcom/sun/javafx/tk/quantum/GlassSystemMenu;)Lcom/sun/javafx/tk/quantum/WindowStage;
      53: pop
      54: aload         9
      56: areturn

  public boolean canStartNestedEventLoop();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inPulse:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object enterNestedEventLoop(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #158                // Method checkFxUserThread:()V
       4: aload_1
       5: ifnonnull     16
       8: new           #159                // class java/lang/NullPointerException
      11: dup
      12: invokespecial #160                // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: aload_0
      17: invokevirtual #161                // Method canStartNestedEventLoop:()Z
      20: ifne          33
      23: new           #162                // class java/lang/IllegalStateException
      26: dup
      27: ldc           #163                // String Cannot enter nested loop during animation or layout processing
      29: invokespecial #164                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      37: ifnonnull     51
      40: aload_0
      41: new           #25                 // class java/util/HashMap
      44: dup
      45: invokespecial #26                 // Method java/util/HashMap."<init>":()V
      48: putfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      51: aload_0
      52: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      55: aload_1
      56: invokevirtual #165                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      59: ifeq          76
      62: new           #166                // class java/lang/IllegalArgumentException
      65: dup
      66: aload_1
      67: invokedynamic #167,  0            // InvokeDynamic #10:makeConcatWithConstants:(Ljava/lang/Object;)Ljava/lang/String;
      72: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      79: invokevirtual #169                // Method com/sun/glass/ui/Application.createEventLoop:()Lcom/sun/glass/ui/EventLoop;
      82: astore_2
      83: aload_0
      84: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      87: aload_1
      88: aload_2
      89: invokevirtual #170                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_2
      94: invokevirtual #171                // Method com/sun/glass/ui/EventLoop.enter:()Ljava/lang/Object;
      97: astore_3
      98: aload_0
      99: invokevirtual #172                // Method isNestedLoopRunning:()Z
     102: ifne          109
     105: aload_0
     106: invokevirtual #173                // Method notifyLastNestedLoopExited:()V
     109: aload_3
     110: areturn

  public void exitNestedEventLoop(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #158                // Method checkFxUserThread:()V
       4: aload_1
       5: ifnonnull     16
       8: new           #159                // class java/lang/NullPointerException
      11: dup
      12: invokespecial #160                // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      20: ifnull        34
      23: aload_0
      24: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      27: aload_1
      28: invokevirtual #165                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      31: ifne          48
      34: new           #166                // class java/lang/IllegalArgumentException
      37: dup
      38: aload_1
      39: invokedynamic #174,  0            // InvokeDynamic #11:makeConcatWithConstants:(Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      52: aload_1
      53: invokevirtual #175                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #176                // class com/sun/glass/ui/EventLoop
      59: astore_3
      60: aload_0
      61: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      64: aload_1
      65: invokevirtual #177                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_3
      70: aload_2
      71: invokevirtual #178                // Method com/sun/glass/ui/EventLoop.leave:(Ljava/lang/Object;)V
      74: return

  public void exitAllNestedEventLoops();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method checkFxUserThread:()V
       4: aload_0
       5: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
       8: invokevirtual #179                // Method java/util/HashMap.values:()Ljava/util/Collection;
      11: invokeinterface #180,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          44
      26: aload_1
      27: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #176                // class com/sun/glass/ui/EventLoop
      35: astore_2
      36: aload_2
      37: aconst_null
      38: invokevirtual #178                // Method com/sun/glass/ui/EventLoop.leave:(Ljava/lang/Object;)V
      41: goto          17
      44: aload_0
      45: getfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      48: invokevirtual #183                // Method java/util/HashMap.clear:()V
      51: aload_0
      52: aconst_null
      53: putfield      #21                 // Field eventLoopMap:Ljava/util/HashMap;
      56: return

  public com.sun.javafx.tk.TKStage createTKPopupStage(javafx.stage.Window, javafx.stage.StageStyle, com.sun.javafx.tk.TKStage, java.security.AccessControlContext);
    Code:
       0: aload_0
       1: invokespecial #151                // Method assertToolkitRunning:()V
       4: aload_3
       5: instanceof    #152                // class com/sun/javafx/tk/quantum/WindowStage
       8: ifeq          21
      11: aload_3
      12: checkcast     #152                // class com/sun/javafx/tk/quantum/WindowStage
      15: invokevirtual #184                // Method com/sun/javafx/tk/quantum/WindowStage.isSecurityDialog:()Z
      18: goto          22
      21: iconst_0
      22: istore        5
      24: new           #152                // class com/sun/javafx/tk/quantum/WindowStage
      27: dup
      28: aload_1
      29: iload         5
      31: aload_2
      32: aconst_null
      33: aload_3
      34: invokespecial #153                // Method com/sun/javafx/tk/quantum/WindowStage."<init>":(Ljavafx/stage/Window;ZLjavafx/stage/StageStyle;Ljavafx/stage/Modality;Lcom/sun/javafx/tk/TKStage;)V
      37: astore        6
      39: aload         6
      41: aload         4
      43: invokevirtual #154                // Method com/sun/javafx/tk/quantum/WindowStage.setSecurityContext:(Ljava/security/AccessControlContext;)V
      46: aload         6
      48: invokevirtual #185                // Method com/sun/javafx/tk/quantum/WindowStage.setIsPopup:()V
      51: aload         6
      53: aload_0
      54: getfield      #31                 // Field systemMenu:Lcom/sun/javafx/tk/quantum/GlassSystemMenu;
      57: invokevirtual #157                // Method com/sun/javafx/tk/quantum/WindowStage.init:(Lcom/sun/javafx/tk/quantum/GlassSystemMenu;)Lcom/sun/javafx/tk/quantum/WindowStage;
      60: pop
      61: aload         6
      63: areturn

  public com.sun.javafx.tk.TKStage createTKEmbeddedStage(com.sun.javafx.embed.HostInterface, java.security.AccessControlContext);
    Code:
       0: aload_0
       1: invokespecial #151                // Method assertToolkitRunning:()V
       4: new           #186                // class com/sun/javafx/tk/quantum/EmbeddedStage
       7: dup
       8: aload_1
       9: invokespecial #187                // Method com/sun/javafx/tk/quantum/EmbeddedStage."<init>":(Lcom/sun/javafx/embed/HostInterface;)V
      12: astore_3
      13: aload_3
      14: aload_2
      15: invokevirtual #188                // Method com/sun/javafx/tk/quantum/EmbeddedStage.setSecurityContext:(Ljava/security/AccessControlContext;)V
      18: aload_3
      19: areturn

  public com.sun.javafx.tk.ScreenConfigurationAccessor setScreenConfigurationListener(com.sun.javafx.tk.TKScreenConfigurationListener);
    Code:
       0: new           #189                // class com/sun/javafx/tk/quantum/QuantumToolkit$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #190                // Method com/sun/javafx/tk/quantum/QuantumToolkit$4."<init>":(Lcom/sun/javafx/tk/quantum/QuantumToolkit;Lcom/sun/javafx/tk/TKScreenConfigurationListener;)V
       9: invokestatic  #191                // Method com/sun/glass/ui/Screen.setEventHandler:(Lcom/sun/glass/ui/Screen$EventHandler;)V
      12: getstatic     #192                // Field screenAccessor:Lcom/sun/javafx/tk/ScreenConfigurationAccessor;
      15: areturn

  private static void assignScreensAdapters();
    Code:
       0: invokestatic  #36                 // Method com/sun/prism/GraphicsPipeline.getPipeline:()Lcom/sun/prism/GraphicsPipeline;
       3: astore_0
       4: invokestatic  #193                // Method com/sun/glass/ui/Screen.getScreens:()Ljava/util/List;
       7: invokeinterface #194,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          44
      22: aload_1
      23: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #195                // class com/sun/glass/ui/Screen
      31: astore_2
      32: aload_2
      33: aload_0
      34: aload_2
      35: invokevirtual #196                // Method com/sun/prism/GraphicsPipeline.getAdapterOrdinal:(Lcom/sun/glass/ui/Screen;)I
      38: invokevirtual #197                // Method com/sun/glass/ui/Screen.setAdapterOrdinal:(I)V
      41: goto          13
      44: return

  private static void notifyScreenListener(com.sun.javafx.tk.TKScreenConfigurationListener);
    Code:
       0: invokestatic  #65                 // Method assignScreensAdapters:()V
       3: aload_0
       4: invokeinterface #198,  1          // InterfaceMethod com/sun/javafx/tk/TKScreenConfigurationListener.screenConfigurationChanged:()V
       9: return

  public java.lang.Object getPrimaryScreen();
    Code:
       0: invokestatic  #199                // Method com/sun/glass/ui/Screen.getMainScreen:()Lcom/sun/glass/ui/Screen;
       3: areturn

  public java.util.List<?> getScreens();
    Code:
       0: invokestatic  #193                // Method com/sun/glass/ui/Screen.getScreens:()Ljava/util/List;
       3: areturn

  public com.sun.javafx.tk.ScreenConfigurationAccessor getScreenConfigurationAccessor();
    Code:
       0: getstatic     #192                // Field screenAccessor:Lcom/sun/javafx/tk/ScreenConfigurationAccessor;
       3: areturn

  public com.sun.javafx.perf.PerformanceTracker getPerformanceTracker();
    Code:
       0: aload_0
       1: getfield      #24                 // Field perfTracker:Lcom/sun/javafx/perf/PerformanceTracker;
       4: areturn

  public com.sun.javafx.perf.PerformanceTracker createPerformanceTracker();
    Code:
       0: new           #22                 // class com/sun/javafx/tk/quantum/PerformanceTrackerImpl
       3: dup
       4: invokespecial #23                 // Method com/sun/javafx/tk/quantum/PerformanceTrackerImpl."<init>":()V
       7: areturn

  private float getMaxRenderScale();
    Code:
       0: aload_0
       1: getfield      #200                // Field _maxPixelScale:F
       4: fconst_0
       5: fcmpl
       6: ifne          74
       9: aload_0
      10: invokevirtual #201                // Method getScreens:()Ljava/util/List;
      13: invokeinterface #194,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_1
      19: aload_1
      20: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          74
      28: aload_1
      29: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: astore_2
      35: aload_0
      36: aload_0
      37: getfield      #200                // Field _maxPixelScale:F
      40: aload_2
      41: checkcast     #195                // class com/sun/glass/ui/Screen
      44: invokevirtual #202                // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleX:()F
      47: invokestatic  #203                // Method java/lang/Math.max:(FF)F
      50: putfield      #200                // Field _maxPixelScale:F
      53: aload_0
      54: aload_0
      55: getfield      #200                // Field _maxPixelScale:F
      58: aload_2
      59: checkcast     #195                // class com/sun/glass/ui/Screen
      62: invokevirtual #204                // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleY:()F
      65: invokestatic  #203                // Method java/lang/Math.max:(FF)F
      68: putfield      #200                // Field _maxPixelScale:F
      71: goto          19
      74: aload_0
      75: getfield      #200                // Field _maxPixelScale:F
      78: freturn

  public com.sun.javafx.tk.ImageLoader loadImage(java.lang.String, double, double, boolean, boolean);
    Code:
       0: new           #205                // class com/sun/javafx/tk/quantum/PrismImageLoader2
       3: dup
       4: aload_1
       5: dload_2
       6: dload         4
       8: iload         6
      10: aload_0
      11: invokespecial #206                // Method getMaxRenderScale:()F
      14: iload         7
      16: invokespecial #207                // Method com/sun/javafx/tk/quantum/PrismImageLoader2."<init>":(Ljava/lang/String;DDZFZ)V
      19: areturn

  public com.sun.javafx.tk.ImageLoader loadImage(java.io.InputStream, double, double, boolean, boolean);
    Code:
       0: new           #205                // class com/sun/javafx/tk/quantum/PrismImageLoader2
       3: dup
       4: aload_1
       5: dload_2
       6: dload         4
       8: iload         6
      10: iload         7
      12: invokespecial #208                // Method com/sun/javafx/tk/quantum/PrismImageLoader2."<init>":(Ljava/io/InputStream;DDZZ)V
      15: areturn

  public com.sun.javafx.runtime.async.AbstractRemoteResource<? extends com.sun.javafx.tk.ImageLoader> loadImageAsync(com.sun.javafx.runtime.async.AsyncOperationListener, java.lang.String, double, double, boolean, boolean);
    Code:
       0: new           #209                // class com/sun/javafx/tk/quantum/PrismImageLoader2$AsyncImageLoader
       3: dup
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: iload         7
      11: iload         8
      13: invokespecial #210                // Method com/sun/javafx/tk/quantum/PrismImageLoader2$AsyncImageLoader."<init>":(Lcom/sun/javafx/runtime/async/AsyncOperationListener;Ljava/lang/String;DDZZ)V
      16: areturn

  public void defer(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          11
      10: return
      11: aload_1
      12: invokestatic  #114                // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
      15: return

  public void exit();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method checkFxUserThread:()V
       4: aload_0
       5: getfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
       8: invokevirtual #211                // Method com/sun/glass/ui/Timer.stop:()V
      11: invokestatic  #212                // Method com/sun/javafx/tk/quantum/PaintCollector.getInstance:()Lcom/sun/javafx/tk/quantum/PaintCollector;
      14: invokevirtual #213                // Method com/sun/javafx/tk/quantum/PaintCollector.waitForRenderingToComplete:()V
      17: aload_0
      18: invokevirtual #214                // Method notifyShutdownHooks:()V
      21: invokedynamic #215,  0            // InvokeDynamic #12:get:()Ljava/util/function/Supplier;
      26: invokestatic  #216                // Method runWithRenderLock:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: invokevirtual #217                // Method dispose:()V
      34: aload_0
      35: invokespecial #218                // Method com/sun/javafx/tk/Toolkit.exit:()V
      38: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #5                  // Field toolkitRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #219                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          40
      12: aload_0
      13: getfield      #19                 // Field pulseTimer:Lcom/sun/glass/ui/Timer;
      16: invokevirtual #211                // Method com/sun/glass/ui/Timer.stop:()V
      19: aload_0
      20: getfield      #33                 // Field renderer:Lcom/sun/javafx/tk/quantum/QuantumRenderer;
      23: invokevirtual #220                // Method com/sun/javafx/tk/quantum/QuantumRenderer.stopRenderer:()V
      26: aload_0
      27: invokedynamic #221,  0            // InvokeDynamic #13:run:(Lcom/sun/javafx/tk/quantum/QuantumToolkit;)Ljava/security/PrivilegedAction;
      32: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      35: pop
      36: goto          40
      39: astore_1
      40: return
    Exception table:
       from    to  target type
          26    36    39   Class java/lang/IllegalStateException

  public boolean isForwardTraversalKey(javafx.scene.input.KeyEvent);
    Code:
       0: aload_1
       1: invokevirtual #222                // Method javafx/scene/input/KeyEvent.getCode:()Ljavafx/scene/input/KeyCode;
       4: getstatic     #223                // Field javafx/scene/input/KeyCode.TAB:Ljavafx/scene/input/KeyCode;
       7: if_acmpne     31
      10: aload_1
      11: invokevirtual #224                // Method javafx/scene/input/KeyEvent.getEventType:()Ljavafx/event/EventType;
      14: getstatic     #225                // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      17: if_acmpne     31
      20: aload_1
      21: invokevirtual #226                // Method javafx/scene/input/KeyEvent.isShiftDown:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public boolean isBackwardTraversalKey(javafx.scene.input.KeyEvent);
    Code:
       0: aload_1
       1: invokevirtual #222                // Method javafx/scene/input/KeyEvent.getCode:()Ljavafx/scene/input/KeyCode;
       4: getstatic     #223                // Field javafx/scene/input/KeyCode.TAB:Ljavafx/scene/input/KeyCode;
       7: if_acmpne     31
      10: aload_1
      11: invokevirtual #224                // Method javafx/scene/input/KeyEvent.getEventType:()Ljavafx/event/EventType;
      14: getstatic     #225                // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      17: if_acmpne     31
      20: aload_1
      21: invokevirtual #226                // Method javafx/scene/input/KeyEvent.isShiftDown:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public java.util.Map<java.lang.Object, java.lang.Object> getContextMap();
    Code:
       0: aload_0
       1: getfield      #28                 // Field contextMap:Ljava/util/Map;
       4: areturn

  public int getRefreshRate();
    Code:
       0: getstatic     #227                // Field pulseHZ:Ljava/lang/Integer;
       3: ifnonnull     9
       6: bipush        60
       8: ireturn
       9: getstatic     #227                // Field pulseHZ:Ljava/lang/Integer;
      12: invokevirtual #228                // Method java/lang/Integer.intValue:()I
      15: ireturn

  public void setAnimationRunnable(com.sun.scenario.DelayedRunnable);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: getfield      #6                  // Field animationRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       8: iconst_1
       9: invokevirtual #131                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      12: aload_0
      13: aload_1
      14: putfield      #139                // Field animationRunnable:Lcom/sun/scenario/DelayedRunnable;
      17: return

  public void requestNextPulse();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextPulseRequested:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #131                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public void waitFor(com.sun.javafx.tk.Toolkit$Task);
    Code:
       0: aload_1
       1: invokeinterface #229,  1          // InterfaceMethod com/sun/javafx/tk/Toolkit$Task.isFinished:()Z
       6: ifeq          10
       9: return
      10: return

  protected java.lang.Object createColorPaint(javafx.scene.paint.Color);
    Code:
       0: new           #230                // class com/sun/prism/paint/Color
       3: dup
       4: aload_1
       5: invokevirtual #231                // Method javafx/scene/paint/Color.getRed:()D
       8: d2f
       9: aload_1
      10: invokevirtual #232                // Method javafx/scene/paint/Color.getGreen:()D
      13: d2f
      14: aload_1
      15: invokevirtual #233                // Method javafx/scene/paint/Color.getBlue:()D
      18: d2f
      19: aload_1
      20: invokevirtual #234                // Method javafx/scene/paint/Color.getOpacity:()D
      23: d2f
      24: invokespecial #235                // Method com/sun/prism/paint/Color."<init>":(FFFF)V
      27: areturn

  private com.sun.prism.paint.Color toPrismColor(javafx.scene.paint.Color);
    Code:
       0: invokestatic  #236                // Method com/sun/javafx/tk/Toolkit.getPaintAccessor:()Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
       3: aload_1
       4: invokeinterface #237,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$PaintAccessor.getPlatformPaint:(Ljavafx/scene/paint/Paint;)Ljava/lang/Object;
       9: checkcast     #230                // class com/sun/prism/paint/Color
      12: areturn

  private java.util.List<com.sun.prism.paint.Stop> convertStops(java.util.List<javafx.scene.paint.Stop>);
    Code:
       0: new           #238                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #239,  1          // InterfaceMethod java/util/List.size:()I
      10: invokespecial #240                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #194,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          73
      30: aload_3
      31: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #241                // class javafx/scene/paint/Stop
      39: astore        4
      41: aload_2
      42: new           #242                // class com/sun/prism/paint/Stop
      45: dup
      46: aload_0
      47: aload         4
      49: invokevirtual #243                // Method javafx/scene/paint/Stop.getColor:()Ljavafx/scene/paint/Color;
      52: invokespecial #244                // Method toPrismColor:(Ljavafx/scene/paint/Color;)Lcom/sun/prism/paint/Color;
      55: aload         4
      57: invokevirtual #245                // Method javafx/scene/paint/Stop.getOffset:()D
      60: d2f
      61: invokespecial #246                // Method com/sun/prism/paint/Stop."<init>":(Lcom/sun/prism/paint/Color;F)V
      64: invokeinterface #247,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: goto          21
      73: aload_2
      74: areturn

  protected java.lang.Object createLinearGradientPaint(javafx.scene.paint.LinearGradient);
    Code:
       0: iconst_2
       1: istore_2
       2: aload_1
       3: invokevirtual #249                // Method javafx/scene/paint/LinearGradient.getCycleMethod:()Ljavafx/scene/paint/CycleMethod;
       6: astore_3
       7: aload_3
       8: getstatic     #250                // Field javafx/scene/paint/CycleMethod.NO_CYCLE:Ljavafx/scene/paint/CycleMethod;
      11: if_acmpne     19
      14: iconst_0
      15: istore_2
      16: goto          28
      19: aload_3
      20: getstatic     #251                // Field javafx/scene/paint/CycleMethod.REFLECT:Ljavafx/scene/paint/CycleMethod;
      23: if_acmpne     28
      26: iconst_1
      27: istore_2
      28: aload_0
      29: aload_1
      30: invokevirtual #252                // Method javafx/scene/paint/LinearGradient.getStops:()Ljava/util/List;
      33: invokespecial #253                // Method convertStops:(Ljava/util/List;)Ljava/util/List;
      36: astore        4
      38: new           #254                // class com/sun/prism/paint/LinearGradient
      41: dup
      42: aload_1
      43: invokevirtual #255                // Method javafx/scene/paint/LinearGradient.getStartX:()D
      46: d2f
      47: aload_1
      48: invokevirtual #256                // Method javafx/scene/paint/LinearGradient.getStartY:()D
      51: d2f
      52: aload_1
      53: invokevirtual #257                // Method javafx/scene/paint/LinearGradient.getEndX:()D
      56: d2f
      57: aload_1
      58: invokevirtual #258                // Method javafx/scene/paint/LinearGradient.getEndY:()D
      61: d2f
      62: aconst_null
      63: aload_1
      64: invokevirtual #259                // Method javafx/scene/paint/LinearGradient.isProportional:()Z
      67: iload_2
      68: aload         4
      70: invokespecial #260                // Method com/sun/prism/paint/LinearGradient."<init>":(FFFFLcom/sun/javafx/geom/transform/BaseTransform;ZILjava/util/List;)V
      73: areturn

  protected java.lang.Object createRadialGradientPaint(javafx.scene.paint.RadialGradient);
    Code:
       0: aload_1
       1: invokevirtual #261                // Method javafx/scene/paint/RadialGradient.getCenterX:()D
       4: d2f
       5: fstore_2
       6: aload_1
       7: invokevirtual #262                // Method javafx/scene/paint/RadialGradient.getCenterY:()D
      10: d2f
      11: fstore_3
      12: aload_1
      13: invokevirtual #263                // Method javafx/scene/paint/RadialGradient.getFocusAngle:()D
      16: d2f
      17: fstore        4
      19: aload_1
      20: invokevirtual #264                // Method javafx/scene/paint/RadialGradient.getFocusDistance:()D
      23: d2f
      24: fstore        5
      26: iconst_0
      27: istore        6
      29: aload_1
      30: invokevirtual #265                // Method javafx/scene/paint/RadialGradient.getCycleMethod:()Ljavafx/scene/paint/CycleMethod;
      33: getstatic     #250                // Field javafx/scene/paint/CycleMethod.NO_CYCLE:Ljavafx/scene/paint/CycleMethod;
      36: if_acmpne     45
      39: iconst_0
      40: istore        6
      42: goto          64
      45: aload_1
      46: invokevirtual #265                // Method javafx/scene/paint/RadialGradient.getCycleMethod:()Ljavafx/scene/paint/CycleMethod;
      49: getstatic     #251                // Field javafx/scene/paint/CycleMethod.REFLECT:Ljavafx/scene/paint/CycleMethod;
      52: if_acmpne     61
      55: iconst_1
      56: istore        6
      58: goto          64
      61: iconst_2
      62: istore        6
      64: aload_0
      65: aload_1
      66: invokevirtual #266                // Method javafx/scene/paint/RadialGradient.getStops:()Ljava/util/List;
      69: invokespecial #253                // Method convertStops:(Ljava/util/List;)Ljava/util/List;
      72: astore        7
      74: new           #267                // class com/sun/prism/paint/RadialGradient
      77: dup
      78: fload_2
      79: fload_3
      80: fload         4
      82: fload         5
      84: aload_1
      85: invokevirtual #268                // Method javafx/scene/paint/RadialGradient.getRadius:()D
      88: d2f
      89: aconst_null
      90: aload_1
      91: invokevirtual #269                // Method javafx/scene/paint/RadialGradient.isProportional:()Z
      94: iload         6
      96: aload         7
      98: invokespecial #270                // Method com/sun/prism/paint/RadialGradient."<init>":(FFFFFLcom/sun/javafx/geom/transform/BaseTransform;ZILjava/util/List;)V
     101: areturn

  protected java.lang.Object createImagePatternPaint(javafx.scene.paint.ImagePattern);
    Code:
       0: aload_1
       1: invokevirtual #271                // Method javafx/scene/paint/ImagePattern.getImage:()Ljavafx/scene/image/Image;
       4: ifnonnull     11
       7: getstatic     #272                // Field com/sun/prism/paint/Color.TRANSPARENT:Lcom/sun/prism/paint/Color;
      10: areturn
      11: new           #273                // class com/sun/prism/paint/ImagePattern
      14: dup
      15: invokestatic  #274                // Method com/sun/javafx/tk/Toolkit.getImageAccessor:()Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
      18: aload_1
      19: invokevirtual #271                // Method javafx/scene/paint/ImagePattern.getImage:()Ljavafx/scene/image/Image;
      22: invokeinterface #275,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$ImageAccessor.getPlatformImage:(Ljavafx/scene/image/Image;)Ljava/lang/Object;
      27: checkcast     #276                // class com/sun/prism/Image
      30: aload_1
      31: invokevirtual #277                // Method javafx/scene/paint/ImagePattern.getX:()D
      34: d2f
      35: aload_1
      36: invokevirtual #278                // Method javafx/scene/paint/ImagePattern.getY:()D
      39: d2f
      40: aload_1
      41: invokevirtual #279                // Method javafx/scene/paint/ImagePattern.getWidth:()D
      44: d2f
      45: aload_1
      46: invokevirtual #280                // Method javafx/scene/paint/ImagePattern.getHeight:()D
      49: d2f
      50: aload_1
      51: invokevirtual #281                // Method javafx/scene/paint/ImagePattern.isProportional:()Z
      54: invokestatic  #236                // Method com/sun/javafx/tk/Toolkit.getPaintAccessor:()Lcom/sun/javafx/tk/Toolkit$PaintAccessor;
      57: aload_1
      58: invokeinterface #282,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$PaintAccessor.isMutable:(Ljavafx/scene/paint/Paint;)Z
      63: invokespecial #283                // Method com/sun/prism/paint/ImagePattern."<init>":(Lcom/sun/prism/Image;FFFFZZ)V
      66: areturn

  private void initStroke(javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float, float[], float);
    Code:
       0: aload_1
       1: getstatic     #284                // Field javafx/scene/shape/StrokeType.CENTERED:Ljavafx/scene/shape/StrokeType;
       4: if_acmpne     13
       7: iconst_0
       8: istore        9
      10: goto          29
      13: aload_1
      14: getstatic     #286                // Field javafx/scene/shape/StrokeType.INSIDE:Ljavafx/scene/shape/StrokeType;
      17: if_acmpne     26
      20: iconst_1
      21: istore        9
      23: goto          29
      26: iconst_2
      27: istore        9
      29: aload         4
      31: getstatic     #287                // Field javafx/scene/shape/StrokeLineCap.BUTT:Ljavafx/scene/shape/StrokeLineCap;
      34: if_acmpne     43
      37: iconst_0
      38: istore        10
      40: goto          60
      43: aload         4
      45: getstatic     #288                // Field javafx/scene/shape/StrokeLineCap.SQUARE:Ljavafx/scene/shape/StrokeLineCap;
      48: if_acmpne     57
      51: iconst_2
      52: istore        10
      54: goto          60
      57: iconst_1
      58: istore        10
      60: aload         5
      62: getstatic     #289                // Field javafx/scene/shape/StrokeLineJoin.BEVEL:Ljavafx/scene/shape/StrokeLineJoin;
      65: if_acmpne     74
      68: iconst_2
      69: istore        11
      71: goto          91
      74: aload         5
      76: getstatic     #290                // Field javafx/scene/shape/StrokeLineJoin.MITER:Ljavafx/scene/shape/StrokeLineJoin;
      79: if_acmpne     88
      82: iconst_0
      83: istore        11
      85: goto          91
      88: iconst_1
      89: istore        11
      91: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
      94: iload         9
      96: dload_2
      97: d2f
      98: iload         10
     100: iload         11
     102: fload         6
     104: invokevirtual #292                // Method com/sun/prism/BasicStroke.set:(IFIIF)V
     107: aload         7
     109: ifnull        131
     112: aload         7
     114: arraylength
     115: ifle          131
     118: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
     121: aload         7
     123: fload         8
     125: invokevirtual #293                // Method com/sun/prism/BasicStroke.set:([FF)V
     128: goto          142
     131: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
     134: aconst_null
     135: checkcast     #294                // class "[F"
     138: fconst_0
     139: invokevirtual #293                // Method com/sun/prism/BasicStroke.set:([FF)V
     142: return

  public void accumulateStrokeBounds(com.sun.javafx.geom.Shape, float[], javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: aload_3
       2: dload         4
       4: aload         6
       6: aload         7
       8: fload         8
      10: aconst_null
      11: fconst_0
      12: invokespecial #295                // Method initStroke:(Ljavafx/scene/shape/StrokeType;DLjavafx/scene/shape/StrokeLineCap;Ljavafx/scene/shape/StrokeLineJoin;F[FF)V
      15: aload         9
      17: invokevirtual #296                // Method com/sun/javafx/geom/transform/BaseTransform.isTranslateOrIdentity:()Z
      20: ifeq          36
      23: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
      26: aload_2
      27: aload_1
      28: aload         9
      30: invokevirtual #297                // Method com/sun/prism/BasicStroke.accumulateShapeBounds:([FLcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/transform/BaseTransform;)V
      33: goto          49
      36: aload_2
      37: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
      40: aload_1
      41: invokevirtual #298                // Method com/sun/prism/BasicStroke.createStrokedShape:(Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      44: aload         9
      46: invokestatic  #299                // Method com/sun/javafx/geom/Shape.accumulate:([FLcom/sun/javafx/geom/Shape;Lcom/sun/javafx/geom/transform/BaseTransform;)V
      49: return

  public boolean strokeContains(com.sun.javafx.geom.Shape, double, double, javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float);
    Code:
       0: aload_0
       1: aload         6
       3: dload         7
       5: aload         9
       7: aload         10
       9: fload         11
      11: aconst_null
      12: fconst_0
      13: invokespecial #295                // Method initStroke:(Ljavafx/scene/shape/StrokeType;DLjavafx/scene/shape/StrokeLineCap;Ljavafx/scene/shape/StrokeLineJoin;F[FF)V
      16: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
      19: aload_1
      20: invokevirtual #298                // Method com/sun/prism/BasicStroke.createStrokedShape:(Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      23: dload_2
      24: d2f
      25: dload         4
      27: d2f
      28: invokevirtual #300                // Method com/sun/javafx/geom/Shape.contains:(FF)Z
      31: ireturn

  public com.sun.javafx.geom.Shape createStrokedShape(com.sun.javafx.geom.Shape, javafx.scene.shape.StrokeType, double, javafx.scene.shape.StrokeLineCap, javafx.scene.shape.StrokeLineJoin, float, float[], float);
    Code:
       0: aload_0
       1: aload_2
       2: dload_3
       3: aload         5
       5: aload         6
       7: fload         7
       9: aload         8
      11: fload         9
      13: invokespecial #295                // Method initStroke:(Ljavafx/scene/shape/StrokeType;DLjavafx/scene/shape/StrokeLineCap;Ljavafx/scene/shape/StrokeLineJoin;F[FF)V
      16: getstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
      19: aload_1
      20: invokevirtual #298                // Method com/sun/prism/BasicStroke.createStrokedShape:(Lcom/sun/javafx/geom/Shape;)Lcom/sun/javafx/geom/Shape;
      23: areturn

  public javafx.geometry.Dimension2D getBestCursorSize(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #301                // Method com/sun/javafx/tk/quantum/CursorUtils.getBestCursorSize:(II)Ljavafx/geometry/Dimension2D;
       5: areturn

  public int getMaximumCursorColors();
    Code:
       0: iconst_2
       1: ireturn

  public int getKeyCodeForChar(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #302                // Method java/lang/String.length:()I
       4: iconst_1
       5: if_icmpne     19
       8: aload_1
       9: iconst_0
      10: invokevirtual #303                // Method java/lang/String.charAt:(I)C
      13: invokestatic  #304                // Method com/sun/glass/events/KeyEvent.getKeyCodeForChar:(C)I
      16: goto          20
      19: iconst_0
      20: ireturn

  public javafx.scene.shape.PathElement[] convertShapeToFXPath(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: iconst_0
       5: anewarray     #306                // class javafx/scene/shape/PathElement
       8: areturn
       9: new           #238                // class java/util/ArrayList
      12: dup
      13: invokespecial #307                // Method java/util/ArrayList."<init>":()V
      16: astore_2
      17: aload_1
      18: checkcast     #308                // class com/sun/javafx/geom/Shape
      21: astore_3
      22: aload_3
      23: aconst_null
      24: invokevirtual #309                // Method com/sun/javafx/geom/Shape.getPathIterator:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/PathIterator;
      27: astore        4
      29: new           #310                // class com/sun/javafx/tk/quantum/PathIteratorHelper
      32: dup
      33: aload         4
      35: invokespecial #311                // Method com/sun/javafx/tk/quantum/PathIteratorHelper."<init>":(Lcom/sun/javafx/geom/PathIterator;)V
      38: astore        5
      40: new           #312                // class com/sun/javafx/tk/quantum/PathIteratorHelper$Struct
      43: dup
      44: invokespecial #313                // Method com/sun/javafx/tk/quantum/PathIteratorHelper$Struct."<init>":()V
      47: astore        6
      49: aload         5
      51: invokevirtual #314                // Method com/sun/javafx/tk/quantum/PathIteratorHelper.isDone:()Z
      54: ifne          286
      57: aload         5
      59: invokevirtual #315                // Method com/sun/javafx/tk/quantum/PathIteratorHelper.getWindingRule:()I
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: istore        7
      72: aload         5
      74: aload         6
      76: invokevirtual #316                // Method com/sun/javafx/tk/quantum/PathIteratorHelper.currentSegment:(Lcom/sun/javafx/tk/quantum/PathIteratorHelper$Struct;)I
      79: istore        8
      81: iload         8
      83: ifne          110
      86: new           #317                // class javafx/scene/shape/MoveTo
      89: dup
      90: aload         6
      92: getfield      #318                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f0:F
      95: f2d
      96: aload         6
      98: getfield      #319                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f1:F
     101: f2d
     102: invokespecial #320                // Method javafx/scene/shape/MoveTo."<init>":(DD)V
     105: astore        9
     107: goto          269
     110: iload         8
     112: iconst_1
     113: if_icmpne     140
     116: new           #322                // class javafx/scene/shape/LineTo
     119: dup
     120: aload         6
     122: getfield      #318                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f0:F
     125: f2d
     126: aload         6
     128: getfield      #319                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f1:F
     131: f2d
     132: invokespecial #323                // Method javafx/scene/shape/LineTo."<init>":(DD)V
     135: astore        9
     137: goto          269
     140: iload         8
     142: iconst_2
     143: if_icmpne     182
     146: new           #324                // class javafx/scene/shape/QuadCurveTo
     149: dup
     150: aload         6
     152: getfield      #318                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f0:F
     155: f2d
     156: aload         6
     158: getfield      #319                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f1:F
     161: f2d
     162: aload         6
     164: getfield      #325                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f2:F
     167: f2d
     168: aload         6
     170: getfield      #326                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f3:F
     173: f2d
     174: invokespecial #327                // Method javafx/scene/shape/QuadCurveTo."<init>":(DDDD)V
     177: astore        9
     179: goto          269
     182: iload         8
     184: iconst_3
     185: if_icmpne     236
     188: new           #328                // class javafx/scene/shape/CubicCurveTo
     191: dup
     192: aload         6
     194: getfield      #318                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f0:F
     197: f2d
     198: aload         6
     200: getfield      #319                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f1:F
     203: f2d
     204: aload         6
     206: getfield      #325                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f2:F
     209: f2d
     210: aload         6
     212: getfield      #326                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f3:F
     215: f2d
     216: aload         6
     218: getfield      #329                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f4:F
     221: f2d
     222: aload         6
     224: getfield      #330                // Field com/sun/javafx/tk/quantum/PathIteratorHelper$Struct.f5:F
     227: f2d
     228: invokespecial #331                // Method javafx/scene/shape/CubicCurveTo."<init>":(DDDDDD)V
     231: astore        9
     233: goto          269
     236: iload         8
     238: iconst_4
     239: if_icmpne     254
     242: new           #332                // class javafx/scene/shape/ClosePath
     245: dup
     246: invokespecial #333                // Method javafx/scene/shape/ClosePath."<init>":()V
     249: astore        9
     251: goto          269
     254: new           #162                // class java/lang/IllegalStateException
     257: dup
     258: iload         8
     260: invokedynamic #334,  0            // InvokeDynamic #14:makeConcatWithConstants:(I)Ljava/lang/String;
     265: invokespecial #164                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     268: athrow
     269: aload         5
     271: invokevirtual #335                // Method com/sun/javafx/tk/quantum/PathIteratorHelper.next:()V
     274: aload_2
     275: aload         9
     277: invokeinterface #247,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     282: pop
     283: goto          49
     286: aload_2
     287: aload_2
     288: invokeinterface #239,  1          // InterfaceMethod java/util/List.size:()I
     293: anewarray     #306                // class javafx/scene/shape/PathElement
     296: invokeinterface #336,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     301: checkcast     #337                // class "[Ljavafx/scene/shape/PathElement;"
     304: areturn

  public com.sun.scenario.effect.Filterable toFilterable(javafx.scene.image.Image);
    Code:
       0: invokestatic  #274                // Method com/sun/javafx/tk/Toolkit.getImageAccessor:()Lcom/sun/javafx/tk/Toolkit$ImageAccessor;
       3: aload_1
       4: invokeinterface #275,  2          // InterfaceMethod com/sun/javafx/tk/Toolkit$ImageAccessor.getPlatformImage:(Ljavafx/scene/image/Image;)Ljava/lang/Object;
       9: checkcast     #276                // class com/sun/prism/Image
      12: invokestatic  #338                // Method com/sun/scenario/effect/impl/prism/PrImage.create:(Lcom/sun/prism/Image;)Lcom/sun/scenario/effect/impl/prism/PrImage;
      15: areturn

  public com.sun.scenario.effect.FilterContext getFilterContext(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #195                // class com/sun/glass/ui/Screen
       8: ifne          15
      11: invokestatic  #339                // Method com/sun/scenario/effect/impl/prism/PrFilterContext.getDefaultInstance:()Lcom/sun/scenario/effect/impl/prism/PrFilterContext;
      14: areturn
      15: aload_1
      16: checkcast     #195                // class com/sun/glass/ui/Screen
      19: astore_2
      20: aload_2
      21: invokestatic  #340                // Method com/sun/scenario/effect/impl/prism/PrFilterContext.getInstance:(Lcom/sun/glass/ui/Screen;)Lcom/sun/scenario/effect/impl/prism/PrFilterContext;
      24: areturn

  public com.sun.scenario.animation.AbstractMasterTimer getMasterTimer();
    Code:
       0: invokestatic  #341                // Method com/sun/javafx/tk/quantum/MasterTimer.getInstance:()Lcom/sun/javafx/tk/quantum/MasterTimer;
       3: areturn

  public com.sun.javafx.tk.FontLoader getFontLoader();
    Code:
       0: invokestatic  #342                // Method com/sun/javafx/font/PrismFontLoader.getInstance:()Lcom/sun/javafx/font/PrismFontLoader;
       3: areturn

  public com.sun.javafx.scene.text.TextLayoutFactory getTextLayoutFactory();
    Code:
       0: invokestatic  #343                // Method com/sun/javafx/text/PrismTextLayoutFactory.getFactory:()Lcom/sun/javafx/text/PrismTextLayoutFactory;
       3: areturn

  public java.lang.Object createSVGPathObject(javafx.scene.shape.SVGPath);
    Code:
       0: aload_1
       1: invokevirtual #344                // Method javafx/scene/shape/SVGPath.getFillRule:()Ljavafx/scene/shape/FillRule;
       4: getstatic     #345                // Field javafx/scene/shape/FillRule.NON_ZERO:Ljavafx/scene/shape/FillRule;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_2
      16: new           #346                // class com/sun/javafx/geom/Path2D
      19: dup
      20: iload_2
      21: invokespecial #347                // Method com/sun/javafx/geom/Path2D."<init>":(I)V
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokevirtual #348                // Method javafx/scene/shape/SVGPath.getContent:()Ljava/lang/String;
      30: invokevirtual #349                // Method com/sun/javafx/geom/Path2D.appendSVGPath:(Ljava/lang/String;)V
      33: aload_3
      34: areturn

  public com.sun.javafx.geom.Path2D createSVGPath2D(javafx.scene.shape.SVGPath);
    Code:
       0: aload_1
       1: invokevirtual #344                // Method javafx/scene/shape/SVGPath.getFillRule:()Ljavafx/scene/shape/FillRule;
       4: getstatic     #345                // Field javafx/scene/shape/FillRule.NON_ZERO:Ljavafx/scene/shape/FillRule;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_2
      16: new           #346                // class com/sun/javafx/geom/Path2D
      19: dup
      20: iload_2
      21: invokespecial #347                // Method com/sun/javafx/geom/Path2D."<init>":(I)V
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokevirtual #348                // Method javafx/scene/shape/SVGPath.getContent:()Ljava/lang/String;
      30: invokevirtual #349                // Method com/sun/javafx/geom/Path2D.appendSVGPath:(Ljava/lang/String;)V
      33: aload_3
      34: areturn

  public boolean imageContains(java.lang.Object, float, float);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: checkcast     #276                // class com/sun/prism/Image
      10: astore        4
      12: fload_2
      13: f2i
      14: aload         4
      16: invokevirtual #350                // Method com/sun/prism/Image.getMinX:()I
      19: iadd
      20: istore        5
      22: fload_3
      23: f2i
      24: aload         4
      26: invokevirtual #351                // Method com/sun/prism/Image.getMinY:()I
      29: iadd
      30: istore        6
      32: aload         4
      34: invokevirtual #352                // Method com/sun/prism/Image.isOpaque:()Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: aload         4
      44: invokevirtual #353                // Method com/sun/prism/Image.getPixelFormat:()Lcom/sun/prism/PixelFormat;
      47: getstatic     #354                // Field com/sun/prism/PixelFormat.INT_ARGB_PRE:Lcom/sun/prism/PixelFormat;
      50: if_acmpne     108
      53: aload         4
      55: invokevirtual #355                // Method com/sun/prism/Image.getPixelBuffer:()Ljava/nio/Buffer;
      58: checkcast     #356                // class java/nio/IntBuffer
      61: astore        7
      63: iload         5
      65: iload         6
      67: aload         4
      69: invokevirtual #357                // Method com/sun/prism/Image.getRowLength:()I
      72: imul
      73: iadd
      74: istore        8
      76: iload         8
      78: aload         7
      80: invokevirtual #358                // Method java/nio/IntBuffer.limit:()I
      83: if_icmplt     88
      86: iconst_0
      87: ireturn
      88: aload         7
      90: iload         8
      92: invokevirtual #359                // Method java/nio/IntBuffer.get:(I)I
      95: ldc_w         #360                // int -16777216
      98: iand
      99: ifeq          106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: ireturn
     108: aload         4
     110: invokevirtual #353                // Method com/sun/prism/Image.getPixelFormat:()Lcom/sun/prism/PixelFormat;
     113: getstatic     #361                // Field com/sun/prism/PixelFormat.BYTE_BGRA_PRE:Lcom/sun/prism/PixelFormat;
     116: if_acmpne     182
     119: aload         4
     121: invokevirtual #355                // Method com/sun/prism/Image.getPixelBuffer:()Ljava/nio/Buffer;
     124: checkcast     #362                // class java/nio/ByteBuffer
     127: astore        7
     129: iload         5
     131: aload         4
     133: invokevirtual #363                // Method com/sun/prism/Image.getBytesPerPixelUnit:()I
     136: imul
     137: iload         6
     139: aload         4
     141: invokevirtual #364                // Method com/sun/prism/Image.getScanlineStride:()I
     144: imul
     145: iadd
     146: iconst_3
     147: iadd
     148: istore        8
     150: iload         8
     152: aload         7
     154: invokevirtual #365                // Method java/nio/ByteBuffer.limit:()I
     157: if_icmplt     162
     160: iconst_0
     161: ireturn
     162: aload         7
     164: iload         8
     166: invokevirtual #366                // Method java/nio/ByteBuffer.get:(I)B
     169: sipush        255
     172: iand
     173: ifeq          180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: ireturn
     182: aload         4
     184: invokevirtual #353                // Method com/sun/prism/Image.getPixelFormat:()Lcom/sun/prism/PixelFormat;
     187: getstatic     #367                // Field com/sun/prism/PixelFormat.BYTE_ALPHA:Lcom/sun/prism/PixelFormat;
     190: if_acmpne     254
     193: aload         4
     195: invokevirtual #355                // Method com/sun/prism/Image.getPixelBuffer:()Ljava/nio/Buffer;
     198: checkcast     #362                // class java/nio/ByteBuffer
     201: astore        7
     203: iload         5
     205: aload         4
     207: invokevirtual #363                // Method com/sun/prism/Image.getBytesPerPixelUnit:()I
     210: imul
     211: iload         6
     213: aload         4
     215: invokevirtual #364                // Method com/sun/prism/Image.getScanlineStride:()I
     218: imul
     219: iadd
     220: istore        8
     222: iload         8
     224: aload         7
     226: invokevirtual #365                // Method java/nio/ByteBuffer.limit:()I
     229: if_icmplt     234
     232: iconst_0
     233: ireturn
     234: aload         7
     236: iload         8
     238: invokevirtual #366                // Method java/nio/ByteBuffer.get:(I)B
     241: sipush        255
     244: iand
     245: ifeq          252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: ireturn
     254: iconst_1
     255: ireturn

  public boolean isNestedLoopRunning();
    Code:
       0: invokestatic  #368                // Method com/sun/glass/ui/Application.isNestedLoopRunning:()Z
       3: ireturn

  public boolean isSupported(javafx.application.ConditionalFeature);
    Code:
       0: getstatic     #369                // Field com/sun/javafx/tk/quantum/QuantumToolkit$6.$SwitchMap$javafx$application$ConditionalFeature:[I
       3: aload_1
       4: invokevirtual #370                // Method javafx/application/ConditionalFeature.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 11
                     1: 68
                     2: 75
                     3: 82
                     4: 84
                     5: 91
                     6: 98
                     7: 105
                     8: 112
                     9: 119
                    10: 126
                    11: 133
               default: 140
          }
      68: invokestatic  #36                 // Method com/sun/prism/GraphicsPipeline.getPipeline:()Lcom/sun/prism/GraphicsPipeline;
      71: invokevirtual #371                // Method com/sun/prism/GraphicsPipeline.is3DSupported:()Z
      74: ireturn
      75: invokestatic  #36                 // Method com/sun/prism/GraphicsPipeline.getPipeline:()Lcom/sun/prism/GraphicsPipeline;
      78: invokevirtual #372                // Method com/sun/prism/GraphicsPipeline.isEffectSupported:()Z
      81: ireturn
      82: iconst_1
      83: ireturn
      84: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      87: invokevirtual #373                // Method com/sun/glass/ui/Application.supportsInputMethods:()Z
      90: ireturn
      91: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      94: invokevirtual #374                // Method com/sun/glass/ui/Application.supportsTransparentWindows:()Z
      97: ireturn
      98: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     101: invokevirtual #375                // Method com/sun/glass/ui/Application.supportsUnifiedWindows:()Z
     104: ireturn
     105: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     108: invokevirtual #376                // Method com/sun/glass/ui/Application.hasTwoLevelFocus:()Z
     111: ireturn
     112: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     115: invokevirtual #377                // Method com/sun/glass/ui/Application.hasVirtualKeyboard:()Z
     118: ireturn
     119: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     122: invokevirtual #378                // Method com/sun/glass/ui/Application.hasTouch:()Z
     125: ireturn
     126: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     129: invokevirtual #379                // Method com/sun/glass/ui/Application.hasMultiTouch:()Z
     132: ireturn
     133: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     136: invokevirtual #380                // Method com/sun/glass/ui/Application.hasPointer:()Z
     139: ireturn
     140: iconst_0
     141: ireturn

  public boolean isMSAASupported();
    Code:
       0: invokestatic  #36                 // Method com/sun/prism/GraphicsPipeline.getPipeline:()Lcom/sun/prism/GraphicsPipeline;
       3: invokevirtual #381                // Method com/sun/prism/GraphicsPipeline.isMSAASupported:()Z
       6: ireturn

  static javafx.scene.input.TransferMode clipboardActionToTransferMode(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 7
                     0: 68
                     1: 70
                     2: 74
            1073741824: 78
            1073741825: 70
            1073741826: 74
            1342177279: 82
               default: 86
          }
      68: aconst_null
      69: areturn
      70: getstatic     #382                // Field javafx/scene/input/TransferMode.COPY:Ljavafx/scene/input/TransferMode;
      73: areturn
      74: getstatic     #383                // Field javafx/scene/input/TransferMode.MOVE:Ljavafx/scene/input/TransferMode;
      77: areturn
      78: getstatic     #384                // Field javafx/scene/input/TransferMode.LINK:Ljavafx/scene/input/TransferMode;
      81: areturn
      82: getstatic     #382                // Field javafx/scene/input/TransferMode.COPY:Ljavafx/scene/input/TransferMode;
      85: areturn
      86: aconst_null
      87: areturn

  public com.sun.javafx.tk.TKClipboard getSystemClipboard();
    Code:
       0: aload_0
       1: getfield      #385                // Field clipboard:Lcom/sun/javafx/tk/quantum/QuantumClipboard;
       4: ifnonnull     24
       7: aload_0
       8: new           #386                // class com/sun/glass/ui/ClipboardAssistance
      11: dup
      12: ldc_w         #388                // String SYSTEM
      15: invokespecial #389                // Method com/sun/glass/ui/ClipboardAssistance."<init>":(Ljava/lang/String;)V
      18: invokestatic  #390                // Method com/sun/javafx/tk/quantum/QuantumClipboard.getClipboardInstance:(Lcom/sun/glass/ui/ClipboardAssistance;)Lcom/sun/javafx/tk/quantum/QuantumClipboard;
      21: putfield      #385                // Field clipboard:Lcom/sun/javafx/tk/quantum/QuantumClipboard;
      24: aload_0
      25: getfield      #385                // Field clipboard:Lcom/sun/javafx/tk/quantum/QuantumClipboard;
      28: areturn

  public com.sun.javafx.tk.TKSystemMenu getSystemMenu();
    Code:
       0: aload_0
       1: getfield      #31                 // Field systemMenu:Lcom/sun/javafx/tk/quantum/GlassSystemMenu;
       4: areturn

  public com.sun.javafx.tk.TKClipboard getNamedClipboard(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public void startDrag(com.sun.javafx.tk.TKScene, java.util.Set<javafx.scene.input.TransferMode>, com.sun.javafx.tk.TKDragSourceListener, javafx.scene.input.Dragboard);
    Code:
       0: aload         4
       2: ifnonnull     16
       5: new           #166                // class java/lang/IllegalArgumentException
       8: dup
       9: ldc_w         #391                // String dragboard should not be null
      12: invokespecial #168                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_1
      17: checkcast     #392                // class com/sun/javafx/tk/quantum/GlassScene
      20: astore        5
      22: aload         5
      24: aload_3
      25: invokevirtual #393                // Method com/sun/javafx/tk/quantum/GlassScene.setTKDragSourceListener:(Lcom/sun/javafx/tk/TKDragSourceListener;)V
      28: aload         4
      30: invokestatic  #394                // Method com/sun/javafx/scene/input/DragboardHelper.getPeer:(Ljavafx/scene/input/Dragboard;)Lcom/sun/javafx/tk/TKClipboard;
      33: checkcast     #395                // class com/sun/javafx/tk/quantum/QuantumClipboard
      36: astore        6
      38: aload         6
      40: aload_2
      41: invokevirtual #396                // Method com/sun/javafx/tk/quantum/QuantumClipboard.setSupportedTransferMode:(Ljava/util/Set;)V
      44: aload         6
      46: invokevirtual #397                // Method com/sun/javafx/tk/quantum/QuantumClipboard.flush:()V
      49: aload         6
      51: invokevirtual #398                // Method com/sun/javafx/tk/quantum/QuantumClipboard.close:()V
      54: return

  public void enableDrop(com.sun.javafx.tk.TKScene, com.sun.javafx.tk.TKDropTargetListener);
    Code:
       0: getstatic     #399                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: instanceof    #392                // class com/sun/javafx/tk/quantum/GlassScene
      10: ifne          21
      13: new           #400                // class java/lang/AssertionError
      16: dup
      17: invokespecial #401                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: checkcast     #392                // class com/sun/javafx/tk/quantum/GlassScene
      25: astore_3
      26: aload_3
      27: aload_2
      28: invokevirtual #402                // Method com/sun/javafx/tk/quantum/GlassScene.setTKDropTargetListener:(Lcom/sun/javafx/tk/TKDropTargetListener;)V
      31: return

  public void registerDragGestureListener(com.sun.javafx.tk.TKScene, java.util.Set<javafx.scene.input.TransferMode>, com.sun.javafx.tk.TKDragGestureListener);
    Code:
       0: getstatic     #399                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: instanceof    #392                // class com/sun/javafx/tk/quantum/GlassScene
      10: ifne          21
      13: new           #400                // class java/lang/AssertionError
      16: dup
      17: invokespecial #401                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: checkcast     #392                // class com/sun/javafx/tk/quantum/GlassScene
      25: astore        4
      27: aload         4
      29: aload_3
      30: invokevirtual #403                // Method com/sun/javafx/tk/quantum/GlassScene.setTKDragGestureListener:(Lcom/sun/javafx/tk/TKDragGestureListener;)V
      33: return

  public void installInputMethodRequests(com.sun.javafx.tk.TKScene, javafx.scene.input.InputMethodRequests);
    Code:
       0: getstatic     #399                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: instanceof    #392                // class com/sun/javafx/tk/quantum/GlassScene
      10: ifne          21
      13: new           #400                // class java/lang/AssertionError
      16: dup
      17: invokespecial #401                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: checkcast     #392                // class com/sun/javafx/tk/quantum/GlassScene
      25: astore_3
      26: aload_3
      27: aload_2
      28: invokevirtual #404                // Method com/sun/javafx/tk/quantum/GlassScene.setInputMethodRequests:(Ljavafx/scene/input/InputMethodRequests;)V
      31: return

  public com.sun.javafx.tk.ImageLoader loadPlatformImage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #405                // class com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage
       4: ifeq          12
       7: aload_1
       8: checkcast     #405                // class com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage
      11: areturn
      12: aload_1
      13: instanceof    #276                // class com/sun/prism/Image
      16: ifeq          31
      19: new           #405                // class com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage
      22: dup
      23: aload_1
      24: checkcast     #276                // class com/sun/prism/Image
      27: invokespecial #406                // Method com/sun/javafx/tk/quantum/QuantumToolkit$QuantumImage."<init>":(Lcom/sun/prism/Image;)V
      30: areturn
      31: new           #407                // class java/lang/UnsupportedOperationException
      34: dup
      35: ldc_w         #408                // String unsupported class for loadPlatformImage
      38: invokespecial #409                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      41: athrow

  public com.sun.javafx.tk.PlatformImage createPlatformImage(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: imul
       3: iconst_4
       4: imul
       5: invokestatic  #410                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       8: astore_3
       9: aload_3
      10: iload_1
      11: iload_2
      12: invokestatic  #411                // Method com/sun/prism/Image.fromByteBgraPreData:(Ljava/nio/ByteBuffer;II)Lcom/sun/prism/Image;
      15: areturn

  public java.lang.Object renderToImage(com.sun.javafx.tk.Toolkit$ImageRenderingContext);
    Code:
       0: aload_1
       1: getfield      #412                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
       4: astore_2
       5: aload_1
       6: astore_3
       7: aload_1
       8: getfield      #413                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformPaint:Ljava/lang/Object;
      11: instanceof    #414                // class com/sun/prism/paint/Paint
      14: ifeq          27
      17: aload_1
      18: getfield      #413                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformPaint:Ljava/lang/Object;
      21: checkcast     #414                // class com/sun/prism/paint/Paint
      24: goto          28
      27: aconst_null
      28: astore        4
      30: new           #415                // class com/sun/javafx/tk/RenderJob
      33: dup
      34: new           #416                // class com/sun/javafx/tk/quantum/QuantumToolkit$5
      37: dup
      38: aload_0
      39: aload         4
      41: aload_3
      42: invokespecial #417                // Method com/sun/javafx/tk/quantum/QuantumToolkit$5."<init>":(Lcom/sun/javafx/tk/quantum/QuantumToolkit;Lcom/sun/prism/paint/Paint;Lcom/sun/javafx/tk/Toolkit$ImageRenderingContext;)V
      45: invokespecial #418                // Method com/sun/javafx/tk/RenderJob."<init>":(Ljava/lang/Runnable;)V
      48: astore        5
      50: new           #10                 // class java/util/concurrent/CountDownLatch
      53: dup
      54: iconst_1
      55: invokespecial #11                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      58: astore        6
      60: aload         5
      62: aload         6
      64: invokedynamic #419,  0            // InvokeDynamic #15:done:(Ljava/util/concurrent/CountDownLatch;)Lcom/sun/javafx/tk/CompletionListener;
      69: invokevirtual #420                // Method com/sun/javafx/tk/RenderJob.setCompletionListener:(Lcom/sun/javafx/tk/CompletionListener;)V
      72: aload_0
      73: aload         5
      75: invokevirtual #421                // Method addRenderJob:(Lcom/sun/javafx/tk/RenderJob;)Ljava/util/concurrent/Future;
      78: pop
      79: aload         6
      81: invokevirtual #55                 // Method java/util/concurrent/CountDownLatch.await:()V
      84: goto          97
      87: astore        7
      89: aload         7
      91: invokevirtual #57                 // Method java/lang/InterruptedException.printStackTrace:()V
      94: goto          79
      97: aload_3
      98: getfield      #412                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
     101: astore        7
     103: aload_3
     104: aload_2
     105: putfield      #412                // Field com/sun/javafx/tk/Toolkit$ImageRenderingContext.platformImage:Ljava/lang/Object;
     108: aload         7
     110: areturn
    Exception table:
       from    to  target type
          79    84    87   Class java/lang/InterruptedException

  public com.sun.glass.ui.CommonDialogs$FileChooserResult showFileChooser(com.sun.javafx.tk.TKStage, java.lang.String, java.io.File, java.lang.String, com.sun.javafx.tk.FileChooserType, java.util.List<javafx.stage.FileChooser$ExtensionFilter>, javafx.stage.FileChooser$ExtensionFilter);
    Code:
       0: aconst_null
       1: astore        8
       3: aload_0
       4: aload_1
       5: invokespecial #422                // Method blockOwnerStage:(Lcom/sun/javafx/tk/TKStage;)Lcom/sun/javafx/tk/quantum/WindowStage;
       8: astore        8
      10: aload_1
      11: instanceof    #152                // class com/sun/javafx/tk/quantum/WindowStage
      14: ifeq          27
      17: aload_1
      18: checkcast     #152                // class com/sun/javafx/tk/quantum/WindowStage
      21: invokevirtual #423                // Method com/sun/javafx/tk/quantum/WindowStage.getPlatformWindow:()Lcom/sun/glass/ui/Window;
      24: goto          28
      27: aconst_null
      28: aload_3
      29: aload         4
      31: aload_2
      32: aload         5
      34: getstatic     #424                // Field com/sun/javafx/tk/FileChooserType.SAVE:Lcom/sun/javafx/tk/FileChooserType;
      37: if_acmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: aload         5
      47: getstatic     #426                // Field com/sun/javafx/tk/FileChooserType.OPEN_MULTIPLE:Lcom/sun/javafx/tk/FileChooserType;
      50: if_acmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: aload         6
      60: invokestatic  #427                // Method convertExtensionFilters:(Ljava/util/List;)Ljava/util/List;
      63: aload         6
      65: aload         7
      67: invokeinterface #428,  2          // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      72: invokestatic  #429                // Method com/sun/glass/ui/CommonDialogs.showFileChooser:(Lcom/sun/glass/ui/Window;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;IZLjava/util/List;I)Lcom/sun/glass/ui/CommonDialogs$FileChooserResult;
      75: astore        9
      77: aload         8
      79: ifnull        88
      82: aload         8
      84: iconst_1
      85: invokevirtual #430                // Method com/sun/javafx/tk/quantum/WindowStage.setEnabled:(Z)V
      88: aload         9
      90: areturn
      91: astore        10
      93: aload         8
      95: ifnull        104
      98: aload         8
     100: iconst_1
     101: invokevirtual #430                // Method com/sun/javafx/tk/quantum/WindowStage.setEnabled:(Z)V
     104: aload         10
     106: athrow
    Exception table:
       from    to  target type
           3    77    91   any
          91    93    91   any

  public java.io.File showDirectoryChooser(com.sun.javafx.tk.TKStage, java.lang.String, java.io.File);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: aload_1
       5: invokespecial #422                // Method blockOwnerStage:(Lcom/sun/javafx/tk/TKStage;)Lcom/sun/javafx/tk/quantum/WindowStage;
       8: astore        4
      10: aload_1
      11: instanceof    #152                // class com/sun/javafx/tk/quantum/WindowStage
      14: ifeq          27
      17: aload_1
      18: checkcast     #152                // class com/sun/javafx/tk/quantum/WindowStage
      21: invokevirtual #423                // Method com/sun/javafx/tk/quantum/WindowStage.getPlatformWindow:()Lcom/sun/glass/ui/Window;
      24: goto          28
      27: aconst_null
      28: aload_3
      29: aload_2
      30: invokestatic  #431                // Method com/sun/glass/ui/CommonDialogs.showFolderChooser:(Lcom/sun/glass/ui/Window;Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      33: astore        5
      35: aload         4
      37: ifnull        46
      40: aload         4
      42: iconst_1
      43: invokevirtual #430                // Method com/sun/javafx/tk/quantum/WindowStage.setEnabled:(Z)V
      46: aload         5
      48: areturn
      49: astore        6
      51: aload         4
      53: ifnull        62
      56: aload         4
      58: iconst_1
      59: invokevirtual #430                // Method com/sun/javafx/tk/quantum/WindowStage.setEnabled:(Z)V
      62: aload         6
      64: athrow
    Exception table:
       from    to  target type
           3    35    49   any
          49    51    49   any

  private com.sun.javafx.tk.quantum.WindowStage blockOwnerStage(com.sun.javafx.tk.TKStage);
    Code:
       0: aload_1
       1: instanceof    #152                // class com/sun/javafx/tk/quantum/WindowStage
       4: ifeq          34
       7: aload_1
       8: checkcast     #152                // class com/sun/javafx/tk/quantum/WindowStage
      11: invokevirtual #432                // Method com/sun/javafx/tk/quantum/WindowStage.getOwner:()Lcom/sun/javafx/tk/quantum/GlassStage;
      14: astore_2
      15: aload_2
      16: instanceof    #152                // class com/sun/javafx/tk/quantum/WindowStage
      19: ifeq          34
      22: aload_2
      23: checkcast     #152                // class com/sun/javafx/tk/quantum/WindowStage
      26: astore_3
      27: aload_3
      28: iconst_0
      29: invokevirtual #430                // Method com/sun/javafx/tk/quantum/WindowStage.setEnabled:(Z)V
      32: aload_3
      33: areturn
      34: aconst_null
      35: areturn

  private static java.util.List<com.sun.glass.ui.CommonDialogs$ExtensionFilter> convertExtensionFilters(java.util.List<javafx.stage.FileChooser$ExtensionFilter>);
    Code:
       0: aload_0
       1: invokeinterface #239,  1          // InterfaceMethod java/util/List.size:()I
       6: anewarray     #433                // class com/sun/glass/ui/CommonDialogs$ExtensionFilter
       9: astore_1
      10: iconst_0
      11: istore_2
      12: aload_0
      13: invokeinterface #194,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          65
      28: aload_3
      29: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #434                // class javafx/stage/FileChooser$ExtensionFilter
      37: astore        4
      39: aload_1
      40: iload_2
      41: iinc          2, 1
      44: new           #433                // class com/sun/glass/ui/CommonDialogs$ExtensionFilter
      47: dup
      48: aload         4
      50: invokevirtual #435                // Method javafx/stage/FileChooser$ExtensionFilter.getDescription:()Ljava/lang/String;
      53: aload         4
      55: invokevirtual #436                // Method javafx/stage/FileChooser$ExtensionFilter.getExtensions:()Ljava/util/List;
      58: invokespecial #437                // Method com/sun/glass/ui/CommonDialogs$ExtensionFilter."<init>":(Ljava/lang/String;Ljava/util/List;)V
      61: aastore
      62: goto          19
      65: aload_1
      66: invokestatic  #438                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      69: areturn

  public long getMultiClickTime();
    Code:
       0: invokestatic  #439                // Method com/sun/glass/ui/View.getMultiClickTime:()J
       3: lreturn

  public int getMultiClickMaxX();
    Code:
       0: invokestatic  #440                // Method com/sun/glass/ui/View.getMultiClickMaxX:()I
       3: ireturn

  public int getMultiClickMaxY();
    Code:
       0: invokestatic  #441                // Method com/sun/glass/ui/View.getMultiClickMaxY:()I
       3: ireturn

  public java.lang.String getThemeName();
    Code:
       0: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       3: invokevirtual #442                // Method com/sun/glass/ui/Application.getHighContrastTheme:()Ljava/lang/String;
       6: areturn

  public com.sun.glass.ui.GlassRobot createRobot();
    Code:
       0: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       3: invokevirtual #443                // Method com/sun/glass/ui/Application.createRobot:()Lcom/sun/glass/ui/GlassRobot;
       6: areturn

  public com.sun.javafx.runtime.async.AsyncOperation loadImageAsync(com.sun.javafx.runtime.async.AsyncOperationListener, java.lang.String, double, double, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: dload_3
       4: dload         5
       6: iload         7
       8: iload         8
      10: invokevirtual #444                // Method loadImageAsync:(Lcom/sun/javafx/runtime/async/AsyncOperationListener;Ljava/lang/String;DDZZ)Lcom/sun/javafx/runtime/async/AbstractRemoteResource;
      13: areturn

  private static void lambda$renderToImage$15(java.util.concurrent.CountDownLatch, com.sun.javafx.tk.RenderJob);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method java/util/concurrent/CountDownLatch.countDown:()V
       4: return

  private java.lang.Void lambda$dispose$14();
    Code:
       0: invokestatic  #445                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: aload_0
       4: getfield      #20                 // Field shutdownHook:Ljava/lang/Thread;
       7: invokevirtual #446                // Method java/lang/Runtime.removeShutdownHook:(Ljava/lang/Thread;)Z
      10: pop
      11: aconst_null
      12: areturn

  private static java.lang.Object lambda$exit$13();
    Code:
       0: invokestatic  #71                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       3: astore_0
       4: aload_0
       5: invokevirtual #447                // Method com/sun/glass/ui/Application.terminate:()V
       8: aconst_null
       9: areturn

  private void lambda$runToolkit$12();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method postPulse:()V
       4: goto          15
       7: astore_1
       8: aload_1
       9: getstatic     #86                 // Field java/lang/System.err:Ljava/io/PrintStream;
      12: invokevirtual #93                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      15: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  private void lambda$runToolkit$11();
    Code:
       0: aload_0
       1: invokevirtual #448                // Method pulseFromQueue:()V
       4: return

  private void lambda$startup$10();
    Code:
       0: aload_0
       1: invokevirtual #449                // Method runToolkit:()V
       4: return

  private java.lang.Void lambda$init$9();
    Code:
       0: invokestatic  #445                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: aload_0
       4: getfield      #20                 // Field shutdownHook:Ljava/lang/Thread;
       7: invokevirtual #450                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      10: aconst_null
      11: areturn

  private static java.lang.Boolean lambda$static$8();
    Code:
       0: ldc_w         #451                // String quantum.norenderjobs
       3: invokestatic  #452                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: astore_0
      10: aload_0
      11: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          26
      17: getstatic     #455                // Field java/lang/System.out:Ljava/io/PrintStream;
      20: ldc_w         #456                // String Warning: Quantum will not submit render jobs, nothing should draw
      23: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      26: aload_0
      27: areturn

  private static java.lang.Boolean lambda$static$7();
    Code:
       0: ldc_w         #457                // String quantum.singlethreaded
       3: invokestatic  #452                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: astore_0
      10: aload_0
      11: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          26
      17: getstatic     #455                // Field java/lang/System.out:Ljava/io/PrintStream;
      20: ldc_w         #458                // String Warning: Single GUI Threadiong is enabled, FPS should be slower
      23: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      26: aload_0
      27: areturn

  private static java.lang.Boolean lambda$static$6();
    Code:
       0: ldc_w         #459                // String swt
       3: ldc_w         #460                // String glass.platform
       6: invokestatic  #461                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #462                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: istore_0
      13: invokestatic  #463                // Method com/sun/javafx/PlatformUtil.isMac:()Z
      16: ifeq          29
      19: iload_0
      20: ifeq          29
      23: ldc_w         #464                // String true
      26: goto          32
      29: ldc_w         #465                // String false
      32: astore_1
      33: ldc_w         #464                // String true
      36: ldc_w         #466                // String javafx.draw.in.paint
      39: aload_1
      40: invokestatic  #467                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      43: invokevirtual #462                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      49: areturn

  private static java.lang.Boolean lambda$static$5();
    Code:
       0: ldc_w         #459                // String swt
       3: ldc_w         #460                // String glass.platform
       6: invokestatic  #461                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #462                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: istore_0
      13: invokestatic  #463                // Method com/sun/javafx/PlatformUtil.isMac:()Z
      16: ifne          25
      19: invokestatic  #468                // Method com/sun/javafx/PlatformUtil.isWindows:()Z
      22: ifeq          35
      25: iload_0
      26: ifne          35
      29: ldc_w         #464                // String true
      32: goto          38
      35: ldc_w         #465                // String false
      38: astore_1
      39: ldc_w         #464                // String true
      42: ldc_w         #469                // String javafx.live.resize
      45: aload_1
      46: invokestatic  #467                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      49: invokevirtual #462                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      55: areturn

  private static java.lang.Integer lambda$static$4();
    Code:
       0: ldc_w         #470                // String javafx.animation.pulse
       3: invokestatic  #471                // Method java/lang/Integer.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
       6: areturn

  private static java.lang.Boolean lambda$static$3();
    Code:
       0: ldc_w         #472                // String quantum.debug
       3: invokestatic  #452                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private static java.lang.Boolean lambda$static$2();
    Code:
       0: ldc_w         #473                // String quantum.multithreaded
       3: invokestatic  #461                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_0
       7: aload_0
       8: ifnonnull     16
      11: iconst_1
      12: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn
      16: aload_0
      17: invokestatic  #474                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      20: istore_1
      21: getstatic     #50                 // Field verbose:Z
      24: ifeq          46
      27: getstatic     #455                // Field java/lang/System.out:Ljava/io/PrintStream;
      30: iload_1
      31: ifeq          40
      34: ldc_w         #475                // String Multi-Threading Enabled
      37: goto          43
      40: ldc_w         #476                // String Multi-Threading Disabled
      43: invokevirtual #90                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      46: iload_1
      47: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      50: areturn

  private static java.lang.Boolean lambda$static$1();
    Code:
       0: ldc_w         #477                // String quantum.pulse
       3: invokestatic  #452                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc_w         #478                // String quantum.verbose
       3: invokestatic  #452                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: invokestatic  #453                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  static void access$000(com.sun.javafx.tk.TKScreenConfigurationListener);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method notifyScreenListener:(Lcom/sun/javafx/tk/TKScreenConfigurationListener;)V
       4: return

  static {};
    Code:
       0: ldc           #81                 // class com/sun/javafx/tk/quantum/QuantumToolkit
       2: invokevirtual #479                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #399                // Field $assertionsDisabled:Z
      16: invokedynamic #480,  0            // InvokeDynamic #16:run:()Ljava/security/PrivilegedAction;
      21: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      24: checkcast     #481                // class java/lang/Boolean
      27: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
      30: putstatic     #50                 // Field verbose:Z
      33: invokedynamic #482,  0            // InvokeDynamic #17:run:()Ljava/security/PrivilegedAction;
      38: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      41: checkcast     #481                // class java/lang/Boolean
      44: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
      47: putstatic     #483                // Field pulseDebug:Z
      50: invokedynamic #484,  0            // InvokeDynamic #18:run:()Ljava/security/PrivilegedAction;
      55: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      58: checkcast     #481                // class java/lang/Boolean
      61: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
      64: putstatic     #58                 // Field multithreaded:Z
      67: invokedynamic #485,  0            // InvokeDynamic #19:run:()Ljava/security/PrivilegedAction;
      72: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      75: checkcast     #481                // class java/lang/Boolean
      78: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
      81: putstatic     #115                // Field debug:Z
      84: invokedynamic #486,  0            // InvokeDynamic #20:run:()Ljava/security/PrivilegedAction;
      89: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      92: checkcast     #487                // class java/lang/Integer
      95: putstatic     #227                // Field pulseHZ:Ljava/lang/Integer;
      98: invokedynamic #488,  0            // InvokeDynamic #21:run:()Ljava/security/PrivilegedAction;
     103: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     106: checkcast     #481                // class java/lang/Boolean
     109: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
     112: putstatic     #489                // Field liveResize:Z
     115: invokedynamic #490,  0            // InvokeDynamic #22:run:()Ljava/security/PrivilegedAction;
     120: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     123: checkcast     #481                // class java/lang/Boolean
     126: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
     129: putstatic     #491                // Field drawInPaint:Z
     132: invokedynamic #492,  0            // InvokeDynamic #23:run:()Ljava/security/PrivilegedAction;
     137: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     140: checkcast     #481                // class java/lang/Boolean
     143: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
     146: putstatic     #108                // Field singleThreaded:Z
     149: invokedynamic #493,  0            // InvokeDynamic #24:run:()Ljava/security/PrivilegedAction;
     154: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     157: checkcast     #481                // class java/lang/Boolean
     160: invokevirtual #454                // Method java/lang/Boolean.booleanValue:()Z
     163: putstatic     #102                // Field noRenderJobs:Z
     166: new           #494                // class com/sun/javafx/tk/quantum/QuantumToolkit$3
     169: dup
     170: invokespecial #495                // Method com/sun/javafx/tk/quantum/QuantumToolkit$3."<init>":()V
     173: putstatic     #192                // Field screenAccessor:Lcom/sun/javafx/tk/ScreenConfigurationAccessor;
     176: new           #285                // class com/sun/prism/BasicStroke
     179: dup
     180: invokespecial #496                // Method com/sun/prism/BasicStroke."<init>":()V
     183: putstatic     #291                // Field tmpStroke:Lcom/sun/prism/BasicStroke;
     186: return
}
