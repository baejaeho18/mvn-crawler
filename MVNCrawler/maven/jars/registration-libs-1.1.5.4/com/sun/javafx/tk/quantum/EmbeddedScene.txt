Compiled from "EmbeddedScene.java"
final class com.sun.javafx.tk.quantum.EmbeddedScene extends com.sun.javafx.tk.quantum.GlassScene implements com.sun.javafx.embed.EmbeddedSceneInterface {
  private com.sun.javafx.embed.HostInterface host;

  private com.sun.javafx.tk.quantum.UploadingPainter painter;

  private com.sun.javafx.tk.quantum.PaintRenderJob paintRenderJob;

  private float renderScaleX;

  private float renderScaleY;

  private final com.sun.javafx.tk.quantum.EmbeddedSceneDnD embeddedDnD;

  private volatile java.nio.IntBuffer texBits;

  private volatile int texLineStride;

  private volatile float texScaleFactorX;

  private volatile float texScaleFactorY;

  private volatile javafx.scene.image.PixelFormat<?> pixelFormat;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.tk.quantum.EmbeddedScene(com.sun.javafx.embed.HostInterface, boolean, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #1                  // Method com/sun/javafx/tk/quantum/GlassScene."<init>":(ZZ)V
       6: aload_0
       7: fconst_1
       8: putfield      #2                  // Field texScaleFactorX:F
      11: aload_0
      12: fconst_1
      13: putfield      #3                  // Field texScaleFactorY:F
      16: aload_0
      17: new           #4                  // class com/sun/javafx/tk/quantum/EmbeddedState
      20: dup
      21: aload_0
      22: invokespecial #5                  // Method com/sun/javafx/tk/quantum/EmbeddedState."<init>":(Lcom/sun/javafx/tk/quantum/GlassScene;)V
      25: putfield      #6                  // Field sceneState:Lcom/sun/javafx/tk/quantum/SceneState;
      28: aload_0
      29: aload_1
      30: putfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      33: aload_0
      34: new           #8                  // class com/sun/javafx/tk/quantum/EmbeddedSceneDnD
      37: dup
      38: aload_0
      39: invokespecial #9                  // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD."<init>":(Lcom/sun/javafx/tk/quantum/GlassScene;)V
      42: putfield      #10                 // Field embeddedDnD:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
      45: invokestatic  #11                 // Method com/sun/javafx/tk/quantum/PaintCollector.getInstance:()Lcom/sun/javafx/tk/quantum/PaintCollector;
      48: astore        4
      50: aload_0
      51: new           #12                 // class com/sun/javafx/tk/quantum/UploadingPainter
      54: dup
      55: aload_0
      56: invokespecial #13                 // Method com/sun/javafx/tk/quantum/UploadingPainter."<init>":(Lcom/sun/javafx/tk/quantum/GlassScene;)V
      59: putfield      #14                 // Field painter:Lcom/sun/javafx/tk/quantum/UploadingPainter;
      62: aload_0
      63: new           #15                 // class com/sun/javafx/tk/quantum/PaintRenderJob
      66: dup
      67: aload_0
      68: aload         4
      70: invokevirtual #16                 // Method com/sun/javafx/tk/quantum/PaintCollector.getRendered:()Lcom/sun/javafx/tk/CompletionListener;
      73: aload_0
      74: getfield      #14                 // Field painter:Lcom/sun/javafx/tk/quantum/UploadingPainter;
      77: invokespecial #17                 // Method com/sun/javafx/tk/quantum/PaintRenderJob."<init>":(Lcom/sun/javafx/tk/quantum/GlassScene;Lcom/sun/javafx/tk/CompletionListener;Ljava/lang/Runnable;)V
      80: putfield      #18                 // Field paintRenderJob:Lcom/sun/javafx/tk/quantum/PaintRenderJob;
      83: invokestatic  #19                 // Method com/sun/glass/ui/Pixels.getNativeFormat:()I
      86: istore        5
      88: invokestatic  #20                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      91: astore        6
      93: iload         5
      95: iconst_1
      96: if_icmpne     117
      99: aload         6
     101: getstatic     #22                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     104: if_acmpne     117
     107: aload_0
     108: invokestatic  #23                 // Method javafx/scene/image/PixelFormat.getIntArgbPreInstance:()Ljavafx/scene/image/WritablePixelFormat;
     111: putfield      #24                 // Field pixelFormat:Ljavafx/scene/image/PixelFormat;
     114: goto          138
     117: iload         5
     119: iconst_2
     120: if_icmpne     138
     123: aload         6
     125: getstatic     #25                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
     128: if_acmpne     138
     131: aload_0
     132: invokestatic  #26                 // Method javafx/scene/image/PixelFormat.getIntArgbInstance:()Ljavafx/scene/image/WritablePixelFormat;
     135: putfield      #24                 // Field pixelFormat:Ljavafx/scene/image/PixelFormat;
     138: getstatic     #27                 // Field $assertionsDisabled:Z
     141: ifne          159
     144: aload_0
     145: getfield      #24                 // Field pixelFormat:Ljavafx/scene/image/PixelFormat;
     148: ifnonnull     159
     151: new           #28                 // class java/lang/AssertionError
     154: dup
     155: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
     158: athrow
     159: return

  public void dispose();
    Code:
       0: getstatic     #27                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      10: ifnonnull     21
      13: new           #28                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokedynamic #30,  0             // InvokeDynamic #0:get:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;)Ljava/util/function/Supplier;
      27: invokestatic  #31                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.runWithRenderLock:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: invokespecial #32                 // Method com/sun/javafx/tk/quantum/GlassScene.dispose:()V
      35: return

  void setStage(com.sun.javafx.tk.quantum.GlassStage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method com/sun/javafx/tk/quantum/GlassScene.setStage:(Lcom/sun/javafx/tk/quantum/GlassStage;)V
       5: getstatic     #27                 // Field $assertionsDisabled:Z
       8: ifne          26
      11: aload_0
      12: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      15: ifnonnull     26
      18: new           #28                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      30: aload_1
      31: ifnull        38
      34: aload_0
      35: goto          39
      38: aconst_null
      39: invokeinterface #34,  2           // InterfaceMethod com/sun/javafx/embed/HostInterface.setEmbeddedScene:(Lcom/sun/javafx/embed/EmbeddedSceneInterface;)V
      44: return

  protected boolean isSynchronous();
    Code:
       0: iconst_0
       1: ireturn

  public void setRoot(com.sun.javafx.sg.prism.NGNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method com/sun/javafx/tk/quantum/GlassScene.setRoot:(Lcom/sun/javafx/sg/prism/NGNode;)V
       5: aload_0
       6: getfield      #14                 // Field painter:Lcom/sun/javafx/tk/quantum/UploadingPainter;
       9: aload_1
      10: invokevirtual #36                 // Method com/sun/javafx/tk/quantum/UploadingPainter.setRoot:(Lcom/sun/javafx/sg/prism/NGNode;)V
      13: return

  public com.sun.javafx.tk.TKClipboard createDragboard(boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field embeddedDnD:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
       4: iload_1
       5: invokevirtual #37                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.createDragboard:(Z)Lcom/sun/javafx/tk/TKClipboard;
       8: areturn

  public void enableInputMethodEvents(boolean);
    Code:
       0: getstatic     #38                 // Field com/sun/javafx/tk/quantum/QuantumToolkit.verbose:Z
       3: ifeq          18
       6: getstatic     #39                 // Field java/lang/System.err:Ljava/io/PrintStream;
       9: iload_1
      10: invokedynamic #40,  0             // InvokeDynamic #1:makeConcatWithConstants:(Z)Ljava/lang/String;
      15: invokevirtual #41                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      18: return

  public void finishInputMethodComposition();
    Code:
       0: getstatic     #38                 // Field com/sun/javafx/tk/quantum/QuantumToolkit.verbose:Z
       3: ifeq          14
       6: getstatic     #39                 // Field java/lang/System.err:Ljava/io/PrintStream;
       9: ldc           #42                 // String EmbeddedScene.finishInputMethodComposition
      11: invokevirtual #41                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      14: return

  public void setPixelScaleFactors(float, float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #43                 // Field renderScaleX:F
       5: aload_0
       6: fload_2
       7: putfield      #44                 // Field renderScaleY:F
      10: aload_0
      11: invokevirtual #45                 // Method entireSceneNeedsRepaint:()V
      14: return

  public float getRenderScaleX();
    Code:
       0: aload_0
       1: getfield      #43                 // Field renderScaleX:F
       4: freturn

  public float getRenderScaleY();
    Code:
       0: aload_0
       1: getfield      #44                 // Field renderScaleY:F
       4: freturn

  public javafx.scene.image.PixelFormat<?> getPixelFormat();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pixelFormat:Ljavafx/scene/image/PixelFormat;
       4: areturn

  void uploadPixels(com.sun.glass.ui.Pixels);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method com/sun/glass/ui/Pixels.getPixels:()Ljava/nio/Buffer;
       5: checkcast     #47                 // class java/nio/IntBuffer
       8: putfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
      11: aload_0
      12: aload_1
      13: invokevirtual #49                 // Method com/sun/glass/ui/Pixels.getWidthUnsafe:()I
      16: putfield      #50                 // Field texLineStride:I
      19: aload_0
      20: aload_1
      21: invokevirtual #51                 // Method com/sun/glass/ui/Pixels.getScaleXUnsafe:()F
      24: putfield      #2                  // Field texScaleFactorX:F
      27: aload_0
      28: aload_1
      29: invokevirtual #52                 // Method com/sun/glass/ui/Pixels.getScaleYUnsafe:()F
      32: putfield      #3                  // Field texScaleFactorY:F
      35: aload_0
      36: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      39: ifnull        51
      42: aload_0
      43: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      46: invokeinterface #53,  1           // InterfaceMethod com/sun/javafx/embed/HostInterface.repaint:()V
      51: return

  public void repaint();
    Code:
       0: invokestatic  #54                 // Method com/sun/javafx/tk/Toolkit.getToolkit:()Lcom/sun/javafx/tk/Toolkit;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #18                 // Field paintRenderJob:Lcom/sun/javafx/tk/quantum/PaintRenderJob;
       9: invokevirtual #55                 // Method com/sun/javafx/tk/Toolkit.addRenderJob:(Lcom/sun/javafx/tk/RenderJob;)Ljava/util/concurrent/Future;
      12: pop
      13: return

  public boolean traverseOut(com.sun.javafx.scene.traversal.Direction);
    Code:
       0: aload_1
       1: getstatic     #56                 // Field com/sun/javafx/scene/traversal/Direction.NEXT:Lcom/sun/javafx/scene/traversal/Direction;
       4: if_acmpne     18
       7: aload_0
       8: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      11: iconst_1
      12: invokeinterface #57,  2           // InterfaceMethod com/sun/javafx/embed/HostInterface.traverseFocusOut:(Z)Z
      17: ireturn
      18: aload_1
      19: getstatic     #58                 // Field com/sun/javafx/scene/traversal/Direction.PREVIOUS:Lcom/sun/javafx/scene/traversal/Direction;
      22: if_acmpne     36
      25: aload_0
      26: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      29: iconst_0
      30: invokeinterface #57,  2           // InterfaceMethod com/sun/javafx/embed/HostInterface.traverseFocusOut:(Z)Z
      35: ireturn
      36: iconst_0
      37: ireturn

  public void setSize(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokedynamic #59,  0             // InvokeDynamic #2:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;II)Ljava/lang/Runnable;
       8: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      11: return

  public boolean getPixels(java.nio.IntBuffer, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: aload_1
       4: invokedynamic #61,  0             // InvokeDynamic #3:get:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IILjava/nio/IntBuffer;)Ljava/util/function/Supplier;
       9: invokestatic  #31                 // Method com/sun/javafx/tk/quantum/QuantumToolkit.runWithRenderLock:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #62                 // class java/lang/Boolean
      15: invokevirtual #63                 // Method java/lang/Boolean.booleanValue:()Z
      18: ireturn

  protected com.sun.prism.paint.Color getClearColor();
    Code:
       0: aload_0
       1: getfield      #64                 // Field fillPaint:Lcom/sun/prism/paint/Paint;
       4: ifnull        43
       7: aload_0
       8: getfield      #64                 // Field fillPaint:Lcom/sun/prism/paint/Paint;
      11: invokevirtual #65                 // Method com/sun/prism/paint/Paint.getType:()Lcom/sun/prism/paint/Paint$Type;
      14: getstatic     #66                 // Field com/sun/prism/paint/Paint$Type.COLOR:Lcom/sun/prism/paint/Paint$Type;
      17: if_acmpne     43
      20: aload_0
      21: getfield      #64                 // Field fillPaint:Lcom/sun/prism/paint/Paint;
      24: checkcast     #67                 // class com/sun/prism/paint/Color
      27: invokevirtual #68                 // Method com/sun/prism/paint/Color.getAlpha:()F
      30: fconst_0
      31: fcmpl
      32: ifne          43
      35: aload_0
      36: getfield      #64                 // Field fillPaint:Lcom/sun/prism/paint/Paint;
      39: checkcast     #67                 // class com/sun/prism/paint/Color
      42: areturn
      43: aload_0
      44: invokespecial #69                 // Method com/sun/javafx/tk/quantum/GlassScene.getClearColor:()Lcom/sun/prism/paint/Color;
      47: areturn

  public void mouseEvent(int, int, boolean, boolean, boolean, int, int, int, int, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload         6
       4: iload         7
       6: iload         8
       8: iload         9
      10: iload_2
      11: iload         14
      13: iload         10
      15: iload         11
      17: iload         12
      19: iload         13
      21: iload_3
      22: iload         4
      24: iload         5
      26: invokedynamic #70,  0             // InvokeDynamic #4:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IIIIIIZZZZZZZZ)Ljava/lang/Runnable;
      31: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      34: return

  public void scrollEvent(int, double, double, double, double, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: dload         10
      11: dload         12
      13: dload         14
      15: dload         16
      17: dload         18
      19: dload         20
      21: iload         22
      23: iload         23
      25: iload         24
      27: iload         25
      29: iload         26
      31: invokedynamic #71,  0             // InvokeDynamic #5:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDDDDDDDZZZZZ)Ljava/lang/Runnable;
      36: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      39: return

  public void inputMethodEvent(javafx.event.EventType<javafx.scene.input.InputMethodEvent>, javafx.collections.ObservableList<javafx.scene.input.InputMethodTextRun>, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokedynamic #72,  0             // InvokeDynamic #6:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;Ljavafx/event/EventType;Ljavafx/collections/ObservableList;Ljava/lang/String;I)Ljava/lang/Runnable;
      11: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      14: return

  public void menuEvent(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokedynamic #73,  0             // InvokeDynamic #7:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IIIIZ)Ljava/lang/Runnable;
      13: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      16: return

  public void keyEvent(int, int, char[], int);
    Code:
       0: aload_0
       1: iload         4
       3: aload_3
       4: iload_1
       5: iload_2
       6: invokedynamic #74,  0             // InvokeDynamic #8:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;I[CII)Ljava/lang/Runnable;
      11: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      14: return

  public void zoomEvent(int, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: dload         10
      11: dload         12
      13: iload         14
      15: iload         15
      17: iload         16
      19: iload         17
      21: iload         18
      23: invokedynamic #75,  0             // InvokeDynamic #9:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDDDZZZZZ)Ljava/lang/Runnable;
      28: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      31: return

  public void rotateEvent(int, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: dload         10
      11: dload         12
      13: iload         14
      15: iload         15
      17: iload         16
      19: iload         17
      21: iload         18
      23: invokedynamic #76,  0             // InvokeDynamic #10:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDDDZZZZZ)Ljava/lang/Runnable;
      28: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      31: return

  public void swipeEvent(int, double, double, double, double, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: iload         10
      11: iload         11
      13: iload         12
      15: iload         13
      17: invokedynamic #77,  0             // InvokeDynamic #11:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDZZZZ)Ljava/lang/Runnable;
      22: invokestatic  #60                 // Method javafx/application/Platform.runLater:(Ljava/lang/Runnable;)V
      25: return

  public void setCursor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #78                 // Method com/sun/javafx/tk/quantum/GlassScene.setCursor:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
       9: aload_1
      10: checkcast     #79                 // class com/sun/javafx/cursor/CursorFrame
      13: invokeinterface #80,  2           // InterfaceMethod com/sun/javafx/embed/HostInterface.setCursor:(Lcom/sun/javafx/cursor/CursorFrame;)V
      18: return

  public void setDragStartListener(com.sun.javafx.embed.HostDragStartListener);
    Code:
       0: aload_0
       1: getfield      #10                 // Field embeddedDnD:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
       4: aload_1
       5: invokevirtual #81                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.setDragStartListener:(Lcom/sun/javafx/embed/HostDragStartListener;)V
       8: return

  public com.sun.javafx.embed.EmbeddedSceneDTInterface createDropTarget();
    Code:
       0: aload_0
       1: getfield      #10                 // Field embeddedDnD:Lcom/sun/javafx/tk/quantum/EmbeddedSceneDnD;
       4: invokevirtual #82                 // Method com/sun/javafx/tk/quantum/EmbeddedSceneDnD.createDropTarget:()Lcom/sun/javafx/embed/EmbeddedSceneDTInterface;
       7: areturn

  public javafx.scene.input.InputMethodRequests getInputMethodRequests();
    Code:
       0: aload_0
       1: getfield      #83                 // Field inputMethodRequests:Ljavafx/scene/input/InputMethodRequests;
       4: areturn

  private void lambda$swipeEvent$19(int, double, double, double, double, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: iload         10
      11: iload         11
      13: iload         12
      15: iload         13
      17: invokedynamic #84,  0             // InvokeDynamic #12:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDZZZZ)Ljava/security/PrivilegedAction;
      22: aload_0
      23: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      26: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      29: pop
      30: return

  private java.lang.Void lambda$swipeEvent$18(int, double, double, double, double, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      13: iload_1
      14: invokestatic  #88                 // Method com/sun/javafx/embed/AbstractEvents.swipeIDToFXEventType:(I)Ljavafx/event/EventType;
      17: iconst_0
      18: dload_2
      19: dload         4
      21: dload         6
      23: dload         8
      25: iload         10
      27: iload         11
      29: iload         12
      31: iload         13
      33: iconst_0
      34: invokeinterface #89,  16          // InterfaceMethod com/sun/javafx/tk/TKSceneListener.swipeEvent:(Ljavafx/event/EventType;IDDDDZZZZZ)V
      39: aconst_null
      40: areturn

  private void lambda$rotateEvent$17(int, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: dload         10
      11: dload         12
      13: iload         14
      15: iload         15
      17: iload         16
      19: iload         17
      21: iload         18
      23: invokedynamic #90,  0             // InvokeDynamic #13:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDDDZZZZZ)Ljava/security/PrivilegedAction;
      28: aload_0
      29: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      32: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      35: pop
      36: return

  private java.lang.Void lambda$rotateEvent$16(int, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      13: iload_1
      14: invokestatic  #91                 // Method com/sun/javafx/embed/AbstractEvents.rotateIDToFXEventType:(I)Ljavafx/event/EventType;
      17: dload_2
      18: dload         4
      20: dload         6
      22: dload         8
      24: dload         10
      26: dload         12
      28: iload         14
      30: iload         15
      32: iload         16
      34: iload         17
      36: iconst_0
      37: iload         18
      39: invokeinterface #92,  20          // InterfaceMethod com/sun/javafx/tk/TKSceneListener.rotateEvent:(Ljavafx/event/EventType;DDDDDDZZZZZZ)V
      44: aconst_null
      45: areturn

  private void lambda$zoomEvent$15(int, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: dload         10
      11: dload         12
      13: iload         14
      15: iload         15
      17: iload         16
      19: iload         17
      21: iload         18
      23: invokedynamic #93,  0             // InvokeDynamic #14:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDDDZZZZZ)Ljava/security/PrivilegedAction;
      28: aload_0
      29: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      32: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      35: pop
      36: return

  private java.lang.Void lambda$zoomEvent$14(int, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      13: iload_1
      14: invokestatic  #94                 // Method com/sun/javafx/embed/AbstractEvents.zoomIDToFXEventType:(I)Ljavafx/event/EventType;
      17: dload_2
      18: dload         4
      20: dload         6
      22: dload         8
      24: dload         10
      26: dload         12
      28: iload         14
      30: iload         15
      32: iload         16
      34: iload         17
      36: iconst_0
      37: iload         18
      39: invokeinterface #95,  20          // InterfaceMethod com/sun/javafx/tk/TKSceneListener.zoomEvent:(Ljavafx/event/EventType;DDDDDDZZZZZZ)V
      44: aconst_null
      45: areturn

  private void lambda$keyEvent$13(int, char[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokedynamic #96,  0             // InvokeDynamic #15:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;I[CII)Ljava/security/PrivilegedAction;
      11: aload_0
      12: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      15: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      18: pop
      19: return

  private java.lang.Void lambda$keyEvent$12(int, char[], int, int);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnull        115
       7: iload_1
       8: iconst_1
       9: iand
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: istore        5
      20: iload_1
      21: iconst_2
      22: iand
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore        6
      33: iload_1
      34: iconst_4
      35: iand
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: istore        7
      46: iload_1
      47: bipush        8
      49: iand
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: istore        8
      60: new           #98                 // class java/lang/String
      63: dup
      64: aload_2
      65: invokespecial #99                 // Method java/lang/String."<init>":([C)V
      68: astore        9
      70: aload         9
      72: astore        10
      74: new           #100                // class javafx/scene/input/KeyEvent
      77: dup
      78: iload_3
      79: invokestatic  #101                // Method com/sun/javafx/embed/AbstractEvents.keyIDToFXEventType:(I)Ljavafx/event/EventType;
      82: aload         9
      84: aload         10
      86: iload         4
      88: invokestatic  #102                // Method com/sun/javafx/scene/input/KeyCodeMap.valueOf:(I)Ljavafx/scene/input/KeyCode;
      91: iload         5
      93: iload         6
      95: iload         7
      97: iload         8
      99: invokespecial #103                // Method javafx/scene/input/KeyEvent."<init>":(Ljavafx/event/EventType;Ljava/lang/String;Ljava/lang/String;Ljavafx/scene/input/KeyCode;ZZZZ)V
     102: astore        11
     104: aload_0
     105: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
     108: aload         11
     110: invokeinterface #104,  2          // InterfaceMethod com/sun/javafx/tk/TKSceneListener.keyEvent:(Ljavafx/scene/input/KeyEvent;)V
     115: aconst_null
     116: areturn

  private void lambda$menuEvent$11(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokedynamic #105,  0            // InvokeDynamic #16:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IIIIZ)Ljava/security/PrivilegedAction;
      13: aload_0
      14: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      17: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      20: pop
      21: return

  private java.lang.Void lambda$menuEvent$10(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnull        27
       7: aload_0
       8: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      11: iload_1
      12: i2d
      13: iload_2
      14: i2d
      15: iload_3
      16: i2d
      17: iload         4
      19: i2d
      20: iload         5
      22: invokeinterface #106,  10         // InterfaceMethod com/sun/javafx/tk/TKSceneListener.menuEvent:(DDDDZ)V
      27: aconst_null
      28: areturn

  private void lambda$inputMethodEvent$9(javafx.event.EventType, javafx.collections.ObservableList, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokedynamic #107,  0            // InvokeDynamic #17:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;Ljavafx/event/EventType;Ljavafx/collections/ObservableList;Ljava/lang/String;I)Ljava/security/PrivilegedAction;
      11: invokestatic  #108                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      14: pop
      15: return

  private java.lang.Void lambda$inputMethodEvent$8(javafx.event.EventType, javafx.collections.ObservableList, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnull        21
       7: aload_0
       8: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      11: aload_1
      12: aload_2
      13: aload_3
      14: iload         4
      16: invokeinterface #109,  5          // InterfaceMethod com/sun/javafx/tk/TKSceneListener.inputMethodEvent:(Ljavafx/event/EventType;Ljavafx/collections/ObservableList;Ljava/lang/String;I)V
      21: aconst_null
      22: areturn

  private void lambda$scrollEvent$7(int, double, double, double, double, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: dload         4
       5: dload         6
       7: dload         8
       9: dload         10
      11: dload         12
      13: dload         14
      15: dload         16
      17: dload         18
      19: dload         20
      21: iload         22
      23: iload         23
      25: iload         24
      27: iload         25
      29: iload         26
      31: invokedynamic #110,  0            // InvokeDynamic #18:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IDDDDDDDDDDZZZZZ)Ljava/security/PrivilegedAction;
      36: aload_0
      37: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      40: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      43: pop
      44: return

  private java.lang.Void lambda$scrollEvent$6(int, double, double, double, double, double, double, double, double, double, double, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      13: iload_1
      14: invokestatic  #111                // Method com/sun/javafx/embed/AbstractEvents.scrollIDToFXEventType:(I)Ljavafx/event/EventType;
      17: dload_2
      18: dload         4
      20: dload         6
      22: dload         8
      24: dload         10
      26: dload         12
      28: iconst_0
      29: iconst_0
      30: iconst_0
      31: iconst_0
      32: iconst_0
      33: dload         14
      35: dload         16
      37: dload         18
      39: dload         20
      41: iload         22
      43: iload         23
      45: iload         24
      47: iload         25
      49: iconst_0
      50: iload         26
      52: invokeinterface #112,  33         // InterfaceMethod com/sun/javafx/tk/TKSceneListener.scrollEvent:(Ljavafx/event/EventType;DDDDDDIIIIIDDDDZZZZZZ)V
      57: aconst_null
      58: areturn

  private void lambda$mouseEvent$5(int, int, int, int, int, int, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: iload         9
      16: iload         10
      18: iload         11
      20: iload         12
      22: iload         13
      24: iload         14
      26: invokedynamic #113,  0            // InvokeDynamic #19:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;IIIIIIZZZZZZZZ)Ljava/security/PrivilegedAction;
      31: aload_0
      32: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      35: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      38: pop
      39: return

  private java.lang.Void lambda$mouseEvent$4(int, int, int, int, int, int, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: getstatic     #27                 // Field $assertionsDisabled:Z
      12: ifne          28
      15: iload_1
      16: iconst_2
      17: if_icmpne     28
      20: new           #28                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: iload_1
      29: invokestatic  #114                // Method com/sun/javafx/embed/AbstractEvents.mouseIDToFXEventID:(I)Ljavafx/event/EventType;
      32: astore        15
      34: aload_0
      35: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      38: aload         15
      40: iload_2
      41: i2d
      42: iload_3
      43: i2d
      44: iload         4
      46: i2d
      47: iload         5
      49: i2d
      50: iload         6
      52: invokestatic  #115                // Method com/sun/javafx/embed/AbstractEvents.mouseButtonToFXMouseButton:(I)Ljavafx/scene/input/MouseButton;
      55: iload         7
      57: iconst_0
      58: iload         8
      60: iload         9
      62: iload         10
      64: iload         11
      66: iload         12
      68: iload         13
      70: iload         14
      72: invokeinterface #116,  20         // InterfaceMethod com/sun/javafx/tk/TKSceneListener.mouseEvent:(Ljavafx/event/EventType;DDDDLjavafx/scene/input/MouseButton;ZZZZZZZZZ)V
      77: aconst_null
      78: areturn

  private java.lang.Boolean lambda$getPixels$3(int, int, java.nio.IntBuffer);
    Code:
       0: iload_1
       1: istore        4
       3: iload_2
       4: istore        5
       6: aload_0
       7: invokevirtual #117                // Method getRenderScaleX:()F
      10: aload_0
      11: getfield      #2                  // Field texScaleFactorX:F
      14: fcmpl
      15: ifne          37
      18: aload_0
      19: invokevirtual #118                // Method getRenderScaleY:()F
      22: aload_0
      23: getfield      #3                  // Field texScaleFactorY:F
      26: fcmpl
      27: ifne          37
      30: aload_0
      31: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
      34: ifnonnull     42
      37: iconst_0
      38: invokestatic  #119                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: iload         4
      44: i2f
      45: aload_0
      46: getfield      #2                  // Field texScaleFactorX:F
      49: fmul
      50: invokestatic  #120                // Method java/lang/Math.round:(F)I
      53: istore        4
      55: iload         5
      57: i2f
      58: aload_0
      59: getfield      #3                  // Field texScaleFactorY:F
      62: fmul
      63: invokestatic  #120                // Method java/lang/Math.round:(F)I
      66: istore        5
      68: aload_3
      69: invokevirtual #121                // Method java/nio/IntBuffer.rewind:()Ljava/nio/IntBuffer;
      72: pop
      73: aload_0
      74: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
      77: invokevirtual #121                // Method java/nio/IntBuffer.rewind:()Ljava/nio/IntBuffer;
      80: pop
      81: aload_3
      82: invokevirtual #122                // Method java/nio/IntBuffer.capacity:()I
      85: aload_0
      86: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
      89: invokevirtual #122                // Method java/nio/IntBuffer.capacity:()I
      92: if_icmpeq     197
      95: iload         4
      97: aload_0
      98: getfield      #50                 // Field texLineStride:I
     101: invokestatic  #123                // Method java/lang/Math.min:(II)I
     104: istore        6
     106: iload         5
     108: aload_0
     109: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
     112: invokevirtual #122                // Method java/nio/IntBuffer.capacity:()I
     115: aload_0
     116: getfield      #50                 // Field texLineStride:I
     119: idiv
     120: invokestatic  #123                // Method java/lang/Math.min:(II)I
     123: istore        7
     125: iload         6
     127: newarray       int
     129: astore        8
     131: iconst_0
     132: istore        9
     134: iload         9
     136: iload         7
     138: if_icmpge     192
     141: aload_0
     142: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
     145: iload         9
     147: aload_0
     148: getfield      #50                 // Field texLineStride:I
     151: imul
     152: invokevirtual #124                // Method java/nio/IntBuffer.position:(I)Ljava/nio/IntBuffer;
     155: pop
     156: aload_0
     157: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
     160: aload         8
     162: iconst_0
     163: iload         6
     165: invokevirtual #125                // Method java/nio/IntBuffer.get:([III)Ljava/nio/IntBuffer;
     168: pop
     169: aload_3
     170: iload         9
     172: iload         4
     174: imul
     175: invokevirtual #124                // Method java/nio/IntBuffer.position:(I)Ljava/nio/IntBuffer;
     178: pop
     179: aload_3
     180: aload         8
     182: invokevirtual #126                // Method java/nio/IntBuffer.put:([I)Ljava/nio/IntBuffer;
     185: pop
     186: iinc          9, 1
     189: goto          134
     192: iconst_1
     193: invokestatic  #119                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     196: areturn
     197: aload_3
     198: aload_0
     199: getfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
     202: invokevirtual #127                // Method java/nio/IntBuffer.put:(Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer;
     205: pop
     206: iconst_1
     207: invokestatic  #119                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     210: areturn

  private void lambda$setSize$2(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokedynamic #128,  0            // InvokeDynamic #20:run:(Lcom/sun/javafx/tk/quantum/EmbeddedScene;II)Ljava/security/PrivilegedAction;
       8: aload_0
       9: invokevirtual #85                 // Method getAccessControlContext:()Ljava/security/AccessControlContext;
      12: invokestatic  #86                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;
      15: pop
      16: return

  private java.lang.Void lambda$setSize$1(int, int);
    Code:
       0: aload_0
       1: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
       4: ifnull        20
       7: aload_0
       8: getfield      #87                 // Field sceneListener:Lcom/sun/javafx/tk/TKSceneListener;
      11: iload_1
      12: i2f
      13: iload_2
      14: i2f
      15: invokeinterface #129,  3          // InterfaceMethod com/sun/javafx/tk/TKSceneListener.changedSize:(FF)V
      20: aconst_null
      21: areturn

  private java.lang.Object lambda$dispose$0();
    Code:
       0: aload_0
       1: getfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
       4: aconst_null
       5: invokeinterface #34,  2           // InterfaceMethod com/sun/javafx/embed/HostInterface.setEmbeddedScene:(Lcom/sun/javafx/embed/EmbeddedSceneInterface;)V
      10: aload_0
      11: aconst_null
      12: putfield      #7                  // Field host:Lcom/sun/javafx/embed/HostInterface;
      15: aload_0
      16: invokevirtual #130                // Method updateSceneState:()V
      19: aload_0
      20: aconst_null
      21: putfield      #14                 // Field painter:Lcom/sun/javafx/tk/quantum/UploadingPainter;
      24: aload_0
      25: aconst_null
      26: putfield      #18                 // Field paintRenderJob:Lcom/sun/javafx/tk/quantum/PaintRenderJob;
      29: aload_0
      30: aconst_null
      31: putfield      #48                 // Field texBits:Ljava/nio/IntBuffer;
      34: aconst_null
      35: areturn

  static {};
    Code:
       0: ldc           #131                // class com/sun/javafx/tk/quantum/EmbeddedScene
       2: invokevirtual #132                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #27                 // Field $assertionsDisabled:Z
      16: return
}
