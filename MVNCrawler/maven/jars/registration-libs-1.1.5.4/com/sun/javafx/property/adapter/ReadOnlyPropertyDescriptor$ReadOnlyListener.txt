Compiled from "ReadOnlyPropertyDescriptor.java"
public class com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor$ReadOnlyListener<T> implements java.beans.PropertyChangeListener, javafx.beans.WeakListener {
  protected final java.lang.Object bean;

  private final java.lang.ref.WeakReference<javafx.beans.property.adapter.ReadOnlyJavaBeanProperty<T>> propertyRef;

  final com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor this$0;

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bean:Ljava/lang/Object;
       4: areturn

  public com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor$ReadOnlyListener(java.lang.Object, javafx.beans.property.adapter.ReadOnlyJavaBeanProperty<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field bean:Ljava/lang/Object;
      14: aload_0
      15: new           #4                  // class java/lang/ref/WeakReference
      18: dup
      19: aload_3
      20: invokespecial #5                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      23: putfield      #6                  // Field propertyRef:Ljava/lang/ref/WeakReference;
      26: return

  protected javafx.beans.property.adapter.ReadOnlyJavaBeanProperty<T> checkRef();
    Code:
       0: aload_0
       1: getfield      #6                  // Field propertyRef:Ljava/lang/ref/WeakReference;
       4: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class javafx/beans/property/adapter/ReadOnlyJavaBeanProperty
      10: astore_1
      11: aload_1
      12: ifnonnull     23
      15: aload_0
      16: getfield      #2                  // Field this$0:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
      19: aload_0
      20: invokevirtual #9                  // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor.removeListener:(Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener;)V
      23: aload_1
      24: areturn

  public void propertyChange(java.beans.PropertyChangeEvent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bean:Ljava/lang/Object;
       4: aload_1
       5: invokevirtual #10                 // Method java/beans/PropertyChangeEvent.getSource:()Ljava/lang/Object;
       8: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          46
      14: aload_0
      15: getfield      #2                  // Field this$0:Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;
      18: getfield      #12                 // Field com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor.name:Ljava/lang/String;
      21: aload_1
      22: invokevirtual #13                 // Method java/beans/PropertyChangeEvent.getPropertyName:()Ljava/lang/String;
      25: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          46
      31: aload_0
      32: invokevirtual #15                 // Method checkRef:()Ljavafx/beans/property/adapter/ReadOnlyJavaBeanProperty;
      35: astore_2
      36: aload_2
      37: ifnull        46
      40: aload_2
      41: invokeinterface #16,  1           // InterfaceMethod javafx/beans/property/adapter/ReadOnlyJavaBeanProperty.fireValueChangedEvent:()V
      46: return

  public boolean wasGarbageCollected();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method checkRef:()Ljavafx/beans/property/adapter/ReadOnlyJavaBeanProperty;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
