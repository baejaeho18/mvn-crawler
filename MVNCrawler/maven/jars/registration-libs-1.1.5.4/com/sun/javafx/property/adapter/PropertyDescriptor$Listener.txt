Compiled from "PropertyDescriptor.java"
public class com.sun.javafx.property.adapter.PropertyDescriptor$Listener<T> extends com.sun.javafx.property.adapter.ReadOnlyPropertyDescriptor$ReadOnlyListener<T> implements javafx.beans.value.ChangeListener<T>, java.beans.VetoableChangeListener {
  private boolean updating;

  final com.sun.javafx.property.adapter.PropertyDescriptor this$0;

  public com.sun.javafx.property.adapter.PropertyDescriptor$Listener(java.lang.Object, javafx.beans.property.adapter.ReadOnlyJavaBeanProperty<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/sun/javafx/property/adapter/PropertyDescriptor;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokespecial #2                  // Method com/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor$ReadOnlyListener."<init>":(Lcom/sun/javafx/property/adapter/ReadOnlyPropertyDescriptor;Ljava/lang/Object;Ljavafx/beans/property/adapter/ReadOnlyJavaBeanProperty;)V
      12: return

  public void changed(javafx.beans.value.ObservableValue<? extends T>, T, T);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkRef:()Ljavafx/beans/property/adapter/ReadOnlyJavaBeanProperty;
       4: astore        4
       6: aload         4
       8: ifnonnull     21
      11: aload_1
      12: aload_0
      13: invokeinterface #4,  2            // InterfaceMethod javafx/beans/value/ObservableValue.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      18: goto          101
      21: aload_0
      22: getfield      #5                  // Field updating:Z
      25: ifne          101
      28: aload_0
      29: iconst_1
      30: putfield      #5                  // Field updating:Z
      33: aload_0
      34: getfield      #1                  // Field this$0:Lcom/sun/javafx/property/adapter/PropertyDescriptor;
      37: invokestatic  #6                  // Method com/sun/javafx/property/adapter/PropertyDescriptor.access$000:(Lcom/sun/javafx/property/adapter/PropertyDescriptor;)Ljava/lang/reflect/Method;
      40: aload_0
      41: getfield      #7                  // Field bean:Ljava/lang/Object;
      44: iconst_1
      45: anewarray     #8                  // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_3
      51: aastore
      52: invokestatic  #9                  // Method com/sun/javafx/property/MethodHelper.invoke:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload         4
      58: invokeinterface #10,  1           // InterfaceMethod javafx/beans/property/adapter/ReadOnlyJavaBeanProperty.fireValueChangedEvent:()V
      63: aload_0
      64: iconst_0
      65: putfield      #5                  // Field updating:Z
      68: goto          101
      71: astore        5
      73: aload_0
      74: iconst_0
      75: putfield      #5                  // Field updating:Z
      78: goto          101
      81: astore        5
      83: aload_0
      84: iconst_0
      85: putfield      #5                  // Field updating:Z
      88: goto          101
      91: astore        6
      93: aload_0
      94: iconst_0
      95: putfield      #5                  // Field updating:Z
      98: aload         6
     100: athrow
     101: return
    Exception table:
       from    to  target type
          33    63    71   Class java/lang/IllegalAccessException
          33    63    81   Class java/lang/reflect/InvocationTargetException
          33    63    91   any
          71    73    91   any
          81    83    91   any
          91    93    91   any

  public void vetoableChange(java.beans.PropertyChangeEvent) throws java.beans.PropertyVetoException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bean:Ljava/lang/Object;
       4: aload_1
       5: invokevirtual #13                 // Method java/beans/PropertyChangeEvent.getSource:()Ljava/lang/Object;
       8: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          73
      14: aload_0
      15: getfield      #1                  // Field this$0:Lcom/sun/javafx/property/adapter/PropertyDescriptor;
      18: getfield      #15                 // Field com/sun/javafx/property/adapter/PropertyDescriptor.name:Ljava/lang/String;
      21: aload_1
      22: invokevirtual #16                 // Method java/beans/PropertyChangeEvent.getPropertyName:()Ljava/lang/String;
      25: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          73
      31: aload_0
      32: invokevirtual #3                  // Method checkRef:()Ljavafx/beans/property/adapter/ReadOnlyJavaBeanProperty;
      35: astore_2
      36: aload_2
      37: instanceof    #18                 // class javafx/beans/property/Property
      40: ifeq          73
      43: aload_2
      44: checkcast     #18                 // class javafx/beans/property/Property
      47: invokeinterface #19,  1           // InterfaceMethod javafx/beans/property/Property.isBound:()Z
      52: ifeq          73
      55: aload_0
      56: getfield      #5                  // Field updating:Z
      59: ifne          73
      62: new           #20                 // class java/beans/PropertyVetoException
      65: dup
      66: ldc           #21                 // String A bound value cannot be set.
      68: aload_1
      69: invokespecial #22                 // Method java/beans/PropertyVetoException."<init>":(Ljava/lang/String;Ljava/beans/PropertyChangeEvent;)V
      72: athrow
      73: return
}
