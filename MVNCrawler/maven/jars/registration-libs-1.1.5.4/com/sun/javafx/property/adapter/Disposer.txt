Compiled from "Disposer.java"
public class com.sun.javafx.property.adapter.Disposer implements java.lang.Runnable {
  private static final java.lang.ref.ReferenceQueue queue;

  private static final java.util.Map<java.lang.Object, java.lang.Runnable> records;

  private static com.sun.javafx.property.adapter.Disposer disposerInstance;

  public com.sun.javafx.property.adapter.Disposer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void addRecord(java.lang.Object, java.lang.Runnable);
    Code:
       0: new           #3                  // class java/lang/ref/PhantomReference
       3: dup
       4: aload_0
       5: getstatic     #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       8: invokespecial #5                  // Method java/lang/ref/PhantomReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      11: astore_2
      12: getstatic     #6                  // Field records:Ljava/util/Map;
      15: aload_2
      16: aload_1
      17: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return

  public void run();
    Code:
       0: getstatic     #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       3: invokevirtual #8                  // Method java/lang/ref/ReferenceQueue.remove:()Ljava/lang/ref/Reference;
       6: astore_1
       7: aload_1
       8: checkcast     #9                  // class java/lang/ref/Reference
      11: invokevirtual #10                 // Method java/lang/ref/Reference.clear:()V
      14: getstatic     #6                  // Field records:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #12                 // class java/lang/Runnable
      26: astore_2
      27: aload_2
      28: invokeinterface #13,  1           // InterfaceMethod java/lang/Runnable.run:()V
      33: goto          0
      36: astore_1
      37: getstatic     #15                 // Field java/lang/System.out:Ljava/io/PrintStream;
      40: aload_1
      41: invokedynamic #16,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/Exception;)Ljava/lang/String;
      46: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      49: aload_1
      50: invokevirtual #18                 // Method java/lang/Exception.printStackTrace:()V
      53: goto          0
    Exception table:
       from    to  target type
           0    33    36   Class java/lang/Exception

  static com.sun.javafx.property.adapter.Disposer access$000();
    Code:
       0: getstatic     #1                  // Field disposerInstance:Lcom/sun/javafx/property/adapter/Disposer;
       3: areturn

  static {};
    Code:
       0: new           #19                 // class java/lang/ref/ReferenceQueue
       3: dup
       4: invokespecial #20                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       7: putstatic     #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      10: new           #21                 // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #22                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putstatic     #6                  // Field records:Ljava/util/Map;
      20: new           #23                 // class com/sun/javafx/property/adapter/Disposer
      23: dup
      24: invokespecial #24                 // Method "<init>":()V
      27: putstatic     #1                  // Field disposerInstance:Lcom/sun/javafx/property/adapter/Disposer;
      30: new           #25                 // class com/sun/javafx/property/adapter/Disposer$1
      33: dup
      34: invokespecial #26                 // Method com/sun/javafx/property/adapter/Disposer$1."<init>":()V
      37: invokestatic  #27                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      40: pop
      41: return
}
