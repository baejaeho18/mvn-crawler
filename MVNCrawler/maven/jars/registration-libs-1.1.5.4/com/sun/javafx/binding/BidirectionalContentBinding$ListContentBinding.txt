Compiled from "BidirectionalContentBinding.java"
class com.sun.javafx.binding.BidirectionalContentBinding$ListContentBinding<E> implements javafx.collections.ListChangeListener<E>, javafx.beans.WeakListener {
  private final java.lang.ref.WeakReference<javafx.collections.ObservableList<E>> propertyRef1;

  private final java.lang.ref.WeakReference<javafx.collections.ObservableList<E>> propertyRef2;

  private boolean updating;

  public com.sun.javafx.binding.BidirectionalContentBinding$ListContentBinding(javafx.collections.ObservableList<E>, javafx.collections.ObservableList<E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field updating:Z
       9: aload_0
      10: new           #3                  // class java/lang/ref/WeakReference
      13: dup
      14: aload_1
      15: invokespecial #4                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      18: putfield      #5                  // Field propertyRef1:Ljava/lang/ref/WeakReference;
      21: aload_0
      22: new           #3                  // class java/lang/ref/WeakReference
      25: dup
      26: aload_2
      27: invokespecial #4                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      30: putfield      #6                  // Field propertyRef2:Ljava/lang/ref/WeakReference;
      33: return

  public void onChanged(javafx.collections.ListChangeListener$Change<? extends E>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updating:Z
       4: ifne          214
       7: aload_0
       8: getfield      #5                  // Field propertyRef1:Ljava/lang/ref/WeakReference;
      11: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      14: checkcast     #8                  // class javafx/collections/ObservableList
      17: astore_2
      18: aload_0
      19: getfield      #6                  // Field propertyRef2:Ljava/lang/ref/WeakReference;
      22: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      25: checkcast     #8                  // class javafx/collections/ObservableList
      28: astore_3
      29: aload_2
      30: ifnull        37
      33: aload_3
      34: ifnonnull     62
      37: aload_2
      38: ifnull        48
      41: aload_2
      42: aload_0
      43: invokeinterface #9,  2            // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      48: aload_3
      49: ifnull        214
      52: aload_3
      53: aload_0
      54: invokeinterface #9,  2            // InterfaceMethod javafx/collections/ObservableList.removeListener:(Ljavafx/collections/ListChangeListener;)V
      59: goto          214
      62: aload_0
      63: iconst_1
      64: putfield      #2                  // Field updating:Z
      67: aload_2
      68: aload_1
      69: invokevirtual #10                 // Method javafx/collections/ListChangeListener$Change.getList:()Ljavafx/collections/ObservableList;
      72: if_acmpne     79
      75: aload_3
      76: goto          80
      79: aload_2
      80: astore        4
      82: aload_1
      83: invokevirtual #11                 // Method javafx/collections/ListChangeListener$Change.next:()Z
      86: ifeq          196
      89: aload_1
      90: invokevirtual #12                 // Method javafx/collections/ListChangeListener$Change.wasPermutated:()Z
      93: ifeq          143
      96: aload         4
      98: aload_1
      99: invokevirtual #13                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     102: aload_1
     103: invokevirtual #14                 // Method javafx/collections/ListChangeListener$Change.getTo:()I
     106: invokeinterface #15,  3           // InterfaceMethod javafx/collections/ObservableList.remove:(II)V
     111: aload         4
     113: aload_1
     114: invokevirtual #13                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     117: aload_1
     118: invokevirtual #10                 // Method javafx/collections/ListChangeListener$Change.getList:()Ljavafx/collections/ObservableList;
     121: aload_1
     122: invokevirtual #13                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     125: aload_1
     126: invokevirtual #14                 // Method javafx/collections/ListChangeListener$Change.getTo:()I
     129: invokeinterface #16,  3           // InterfaceMethod javafx/collections/ObservableList.subList:(II)Ljava/util/List;
     134: invokeinterface #17,  3           // InterfaceMethod javafx/collections/ObservableList.addAll:(ILjava/util/Collection;)Z
     139: pop
     140: goto          82
     143: aload_1
     144: invokevirtual #18                 // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
     147: ifeq          170
     150: aload         4
     152: aload_1
     153: invokevirtual #13                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     156: aload_1
     157: invokevirtual #13                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     160: aload_1
     161: invokevirtual #19                 // Method javafx/collections/ListChangeListener$Change.getRemovedSize:()I
     164: iadd
     165: invokeinterface #15,  3           // InterfaceMethod javafx/collections/ObservableList.remove:(II)V
     170: aload_1
     171: invokevirtual #20                 // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
     174: ifeq          82
     177: aload         4
     179: aload_1
     180: invokevirtual #13                 // Method javafx/collections/ListChangeListener$Change.getFrom:()I
     183: aload_1
     184: invokevirtual #21                 // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
     187: invokeinterface #17,  3           // InterfaceMethod javafx/collections/ObservableList.addAll:(ILjava/util/Collection;)Z
     192: pop
     193: goto          82
     196: aload_0
     197: iconst_0
     198: putfield      #2                  // Field updating:Z
     201: goto          214
     204: astore        5
     206: aload_0
     207: iconst_0
     208: putfield      #2                  // Field updating:Z
     211: aload         5
     213: athrow
     214: return
    Exception table:
       from    to  target type
          62   196   204   any
         204   206   204   any

  public boolean wasGarbageCollected();
    Code:
       0: aload_0
       1: getfield      #5                  // Field propertyRef1:Ljava/lang/ref/WeakReference;
       4: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: ifnull        20
      10: aload_0
      11: getfield      #6                  // Field propertyRef2:Ljava/lang/ref/WeakReference;
      14: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field propertyRef1:Ljava/lang/ref/WeakReference;
       4: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class javafx/collections/ObservableList
      10: astore_1
      11: aload_0
      12: getfield      #6                  // Field propertyRef2:Ljava/lang/ref/WeakReference;
      15: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      18: checkcast     #8                  // class javafx/collections/ObservableList
      21: astore_2
      22: aload_1
      23: ifnonnull     30
      26: iconst_0
      27: goto          34
      30: aload_1
      31: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      34: istore_3
      35: aload_2
      36: ifnonnull     43
      39: iconst_0
      40: goto          47
      43: aload_2
      44: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      47: istore        4
      49: iload_3
      50: iload         4
      52: imul
      53: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: getfield      #5                  // Field propertyRef1:Ljava/lang/ref/WeakReference;
      11: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      14: astore_2
      15: aload_0
      16: getfield      #6                  // Field propertyRef2:Ljava/lang/ref/WeakReference;
      19: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      22: astore_3
      23: aload_2
      24: ifnull        31
      27: aload_3
      28: ifnonnull     33
      31: iconst_0
      32: ireturn
      33: aload_1
      34: instanceof    #23                 // class com/sun/javafx/binding/BidirectionalContentBinding$ListContentBinding
      37: ifeq          106
      40: aload_1
      41: checkcast     #23                 // class com/sun/javafx/binding/BidirectionalContentBinding$ListContentBinding
      44: astore        4
      46: aload         4
      48: getfield      #5                  // Field propertyRef1:Ljava/lang/ref/WeakReference;
      51: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      54: astore        5
      56: aload         4
      58: getfield      #6                  // Field propertyRef2:Ljava/lang/ref/WeakReference;
      61: invokevirtual #7                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      64: astore        6
      66: aload         5
      68: ifnull        76
      71: aload         6
      73: ifnonnull     78
      76: iconst_0
      77: ireturn
      78: aload_2
      79: aload         5
      81: if_acmpne     92
      84: aload_3
      85: aload         6
      87: if_acmpne     92
      90: iconst_1
      91: ireturn
      92: aload_2
      93: aload         6
      95: if_acmpne     106
      98: aload_3
      99: aload         5
     101: if_acmpne     106
     104: iconst_1
     105: ireturn
     106: iconst_0
     107: ireturn
}
