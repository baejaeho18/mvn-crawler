Compiled from "ContentBinding.java"
class com.sun.javafx.binding.ContentBinding$MapContentBinding<K, V> implements javafx.collections.MapChangeListener<K, V>, javafx.beans.WeakListener {
  private final java.lang.ref.WeakReference<java.util.Map<K, V>> mapRef;

  public com.sun.javafx.binding.ContentBinding$MapContentBinding(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/WeakReference
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field mapRef:Ljava/lang/ref/WeakReference;
      16: return

  public void onChanged(javafx.collections.MapChangeListener$Change<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mapRef:Ljava/lang/ref/WeakReference;
       4: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class java/util/Map
      10: astore_2
      11: aload_2
      12: ifnonnull     28
      15: aload_1
      16: invokevirtual #7                  // Method javafx/collections/MapChangeListener$Change.getMap:()Ljavafx/collections/ObservableMap;
      19: aload_0
      20: invokeinterface #8,  2            // InterfaceMethod javafx/collections/ObservableMap.removeListener:(Ljavafx/collections/MapChangeListener;)V
      25: goto          68
      28: aload_1
      29: invokevirtual #9                  // Method javafx/collections/MapChangeListener$Change.wasRemoved:()Z
      32: ifeq          46
      35: aload_2
      36: aload_1
      37: invokevirtual #10                 // Method javafx/collections/MapChangeListener$Change.getKey:()Ljava/lang/Object;
      40: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_1
      47: invokevirtual #12                 // Method javafx/collections/MapChangeListener$Change.wasAdded:()Z
      50: ifeq          68
      53: aload_2
      54: aload_1
      55: invokevirtual #10                 // Method javafx/collections/MapChangeListener$Change.getKey:()Ljava/lang/Object;
      58: aload_1
      59: invokevirtual #13                 // Method javafx/collections/MapChangeListener$Change.getValueAdded:()Ljava/lang/Object;
      62: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: return

  public boolean wasGarbageCollected();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mapRef:Ljava/lang/ref/WeakReference;
       4: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: ifnonnull     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mapRef:Ljava/lang/ref/WeakReference;
       4: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class java/util/Map
      10: astore_1
      11: aload_1
      12: ifnonnull     19
      15: iconst_0
      16: goto          25
      19: aload_1
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Map.hashCode:()I
      25: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: getfield      #4                  // Field mapRef:Ljava/lang/ref/WeakReference;
      11: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      14: checkcast     #6                  // class java/util/Map
      17: astore_2
      18: aload_2
      19: ifnonnull     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: instanceof    #16                 // class com/sun/javafx/binding/ContentBinding$MapContentBinding
      28: ifeq          60
      31: aload_1
      32: checkcast     #16                 // class com/sun/javafx/binding/ContentBinding$MapContentBinding
      35: astore_3
      36: aload_3
      37: getfield      #4                  // Field mapRef:Ljava/lang/ref/WeakReference;
      40: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      43: checkcast     #6                  // class java/util/Map
      46: astore        4
      48: aload_2
      49: aload         4
      51: if_acmpne     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: iconst_0
      61: ireturn
}
