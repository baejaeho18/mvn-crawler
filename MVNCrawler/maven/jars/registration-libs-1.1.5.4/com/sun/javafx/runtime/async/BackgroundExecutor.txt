Compiled from "BackgroundExecutor.java"
public class com.sun.javafx.runtime.async.BackgroundExecutor {
  private static java.util.concurrent.ExecutorService instance;

  private static java.util.concurrent.ScheduledExecutorService timerInstance;

  private com.sun.javafx.runtime.async.BackgroundExecutor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static synchronized java.util.concurrent.ExecutorService getExecutor();
    Code:
       0: getstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
       3: ifnonnull     30
       6: invokedynamic #3,  0              // InvokeDynamic #0:newThread:()Ljava/util/concurrent/ThreadFactory;
      11: invokestatic  #4                  // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      14: putstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
      17: getstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
      20: checkcast     #5                  // class java/util/concurrent/ThreadPoolExecutor
      23: lconst_1
      24: getstatic     #6                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      27: invokevirtual #7                  // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      30: getstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
      33: areturn

  public static synchronized java.util.concurrent.ScheduledExecutorService getTimer();
    Code:
       0: getstatic     #8                  // Field timerInstance:Ljava/util/concurrent/ScheduledExecutorService;
       3: ifnonnull     22
       6: new           #9                  // class java/util/concurrent/ScheduledThreadPoolExecutor
       9: dup
      10: iconst_1
      11: invokedynamic #10,  0             // InvokeDynamic #1:newThread:()Ljava/util/concurrent/ThreadFactory;
      16: invokespecial #11                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      19: putstatic     #8                  // Field timerInstance:Ljava/util/concurrent/ScheduledExecutorService;
      22: getstatic     #8                  // Field timerInstance:Ljava/util/concurrent/ScheduledExecutorService;
      25: areturn

  private static synchronized void shutdown();
    Code:
       0: getstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
       3: ifnull        18
       6: getstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
       9: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      14: aconst_null
      15: putstatic     #2                  // Field instance:Ljava/util/concurrent/ExecutorService;
      18: getstatic     #8                  // Field timerInstance:Ljava/util/concurrent/ScheduledExecutorService;
      21: ifnull        36
      24: getstatic     #8                  // Field timerInstance:Ljava/util/concurrent/ScheduledExecutorService;
      27: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      32: aconst_null
      33: putstatic     #8                  // Field timerInstance:Ljava/util/concurrent/ScheduledExecutorService;
      36: return

  private static java.lang.Thread lambda$getTimer$1(java.lang.Runnable);
    Code:
       0: new           #14                 // class java/lang/Thread
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
       8: astore_1
       9: aload_1
      10: iconst_1
      11: invokevirtual #16                 // Method java/lang/Thread.setDaemon:(Z)V
      14: aload_1
      15: areturn

  private static java.lang.Thread lambda$getExecutor$0(java.lang.Runnable);
    Code:
       0: new           #14                 // class java/lang/Thread
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
       8: astore_1
       9: aload_1
      10: iconst_1
      11: invokevirtual #17                 // Method java/lang/Thread.setPriority:(I)V
      14: aload_1
      15: areturn
}
