Compiled from "ControlAcceleratorSupport.java"
public class com.sun.javafx.scene.control.ControlAcceleratorSupport {
  public com.sun.javafx.scene.control.ControlAcceleratorSupport();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void addAcceleratorsIntoScene(javafx.collections.ObservableList<javafx.scene.control.MenuItem>, javafx.scene.control.Tab);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method addAcceleratorsIntoScene:(Ljavafx/collections/ObservableList;Ljava/lang/Object;)V
       5: return

  public static void addAcceleratorsIntoScene(javafx.collections.ObservableList<javafx.scene.control.MenuItem>, javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method addAcceleratorsIntoScene:(Ljavafx/collections/ObservableList;Ljava/lang/Object;)V
       5: return

  public static void addAcceleratorsIntoScene(javafx.collections.ObservableList<javafx.scene.control.MenuItem>, javafx.scene.Node);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_1
       6: ifnonnull     19
       9: new           #4                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #5                  // String Anchor cannot be null
      15: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: invokevirtual #7                  // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
      23: astore_2
      24: aload_2
      25: ifnonnull     47
      28: aload_1
      29: invokevirtual #8                  // Method javafx/scene/Node.sceneProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      32: new           #9                  // class com/sun/javafx/scene/control/ControlAcceleratorSupport$1
      35: dup
      36: aload_1
      37: aload_0
      38: invokespecial #10                 // Method com/sun/javafx/scene/control/ControlAcceleratorSupport$1."<init>":(Ljavafx/scene/Node;Ljavafx/collections/ObservableList;)V
      41: invokevirtual #11                 // Method javafx/beans/property/ReadOnlyObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      44: goto          52
      47: aload_0
      48: aload_2
      49: invokestatic  #1                  // Method doAcceleratorInstall:(Ljavafx/collections/ObservableList;Ljavafx/scene/Scene;)V
      52: return

  private static void addAcceleratorsIntoScene(javafx.collections.ObservableList<javafx.scene.control.MenuItem>, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #5                  // String Anchor cannot be null
      10: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokestatic  #12                 // Method getControlProperty:(Ljava/lang/Object;)Ljavafx/beans/property/ReadOnlyObjectProperty;
      18: astore_2
      19: aload_2
      20: invokevirtual #13                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
      23: checkcast     #14                 // class javafx/scene/control/Control
      26: astore_3
      27: aload_3
      28: ifnonnull     47
      31: aload_2
      32: new           #15                 // class com/sun/javafx/scene/control/ControlAcceleratorSupport$2
      35: dup
      36: aload_2
      37: aload_0
      38: invokespecial #16                 // Method com/sun/javafx/scene/control/ControlAcceleratorSupport$2."<init>":(Ljavafx/beans/property/ReadOnlyObjectProperty;Ljavafx/collections/ObservableList;)V
      41: invokevirtual #11                 // Method javafx/beans/property/ReadOnlyObjectProperty.addListener:(Ljavafx/beans/InvalidationListener;)V
      44: goto          52
      47: aload_0
      48: aload_3
      49: invokestatic  #17                 // Method addAcceleratorsIntoScene:(Ljavafx/collections/ObservableList;Ljavafx/scene/Node;)V
      52: return

  private static void doAcceleratorInstall(javafx.collections.ObservableList<javafx.scene.control.MenuItem>, javafx.scene.Scene);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #18,  0             // InvokeDynamic #0:onChanged:(Ljavafx/scene/Scene;)Ljavafx/collections/ListChangeListener;
       7: invokeinterface #19,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
      12: aload_0
      13: aload_1
      14: invokestatic  #20                 // Method doAcceleratorInstall:(Ljava/util/List;Ljavafx/scene/Scene;)V
      17: return

  private static void doAcceleratorInstall(java.util.List<? extends javafx.scene.control.MenuItem>, javafx.scene.Scene);
    Code:
       0: aload_0
       1: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          98
      16: aload_2
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #24                 // class javafx/scene/control/MenuItem
      25: astore_3
      26: aload_3
      27: instanceof    #25                 // class javafx/scene/control/Menu
      30: ifeq          47
      33: aload_3
      34: checkcast     #25                 // class javafx/scene/control/Menu
      37: invokevirtual #26                 // Method javafx/scene/control/Menu.getItems:()Ljavafx/collections/ObservableList;
      40: aload_1
      41: invokestatic  #1                  // Method doAcceleratorInstall:(Ljavafx/collections/ObservableList;Ljavafx/scene/Scene;)V
      44: goto          95
      47: aload_3
      48: invokevirtual #27                 // Method javafx/scene/control/MenuItem.getAccelerator:()Ljavafx/scene/input/KeyCombination;
      51: ifnull        82
      54: aload_1
      55: invokevirtual #28                 // Method javafx/scene/Scene.getAccelerators:()Ljavafx/collections/ObservableMap;
      58: astore        4
      60: aload_3
      61: invokedynamic #29,  0             // InvokeDynamic #1:run:(Ljavafx/scene/control/MenuItem;)Ljava/lang/Runnable;
      66: astore        5
      68: aload         4
      70: aload_3
      71: invokevirtual #27                 // Method javafx/scene/control/MenuItem.getAccelerator:()Ljavafx/scene/input/KeyCombination;
      74: aload         5
      76: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: aload_3
      83: invokevirtual #31                 // Method javafx/scene/control/MenuItem.acceleratorProperty:()Ljavafx/beans/property/ObjectProperty;
      86: aload_1
      87: invokedynamic #32,  0             // InvokeDynamic #2:changed:(Ljavafx/scene/Scene;)Ljavafx/beans/value/ChangeListener;
      92: invokevirtual #33                 // Method javafx/beans/property/ObjectProperty.addListener:(Ljavafx/beans/value/ChangeListener;)V
      95: goto          7
      98: return

  public static void removeAcceleratorsFromScene(java.util.List<? extends javafx.scene.control.MenuItem>, javafx.scene.control.Tab);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method javafx/scene/control/Tab.getTabPane:()Ljavafx/scene/control/TabPane;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: aload_2
      11: invokevirtual #35                 // Method javafx/scene/control/TabPane.getScene:()Ljavafx/scene/Scene;
      14: astore_3
      15: aload_0
      16: aload_3
      17: invokestatic  #36                 // Method removeAcceleratorsFromScene:(Ljava/util/List;Ljavafx/scene/Scene;)V
      20: return

  public static void removeAcceleratorsFromScene(java.util.List<? extends javafx.scene.control.MenuItem>, javafx.scene.control.TableColumnBase<?, ?>);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method getControlProperty:(Ljava/lang/Object;)Ljavafx/beans/property/ReadOnlyObjectProperty;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: aload_2
      11: invokevirtual #13                 // Method javafx/beans/property/ReadOnlyObjectProperty.get:()Ljava/lang/Object;
      14: checkcast     #14                 // class javafx/scene/control/Control
      17: astore_3
      18: aload_3
      19: ifnonnull     23
      22: return
      23: aload_3
      24: invokevirtual #37                 // Method javafx/scene/control/Control.getScene:()Ljavafx/scene/Scene;
      27: astore        4
      29: aload_0
      30: aload         4
      32: invokestatic  #36                 // Method removeAcceleratorsFromScene:(Ljava/util/List;Ljavafx/scene/Scene;)V
      35: return

  public static void removeAcceleratorsFromScene(java.util.List<? extends javafx.scene.control.MenuItem>, javafx.scene.Node);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method javafx/scene/Node.getScene:()Ljavafx/scene/Scene;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokestatic  #36                 // Method removeAcceleratorsFromScene:(Ljava/util/List;Ljavafx/scene/Scene;)V
      10: return

  public static void removeAcceleratorsFromScene(java.util.List<? extends javafx.scene.control.MenuItem>, javafx.scene.Scene);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          73
      21: aload_2
      22: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #24                 // class javafx/scene/control/MenuItem
      30: astore_3
      31: aload_3
      32: instanceof    #25                 // class javafx/scene/control/Menu
      35: ifeq          52
      38: aload_3
      39: checkcast     #25                 // class javafx/scene/control/Menu
      42: invokevirtual #26                 // Method javafx/scene/control/Menu.getItems:()Ljavafx/collections/ObservableList;
      45: aload_1
      46: invokestatic  #36                 // Method removeAcceleratorsFromScene:(Ljava/util/List;Ljavafx/scene/Scene;)V
      49: goto          70
      52: aload_1
      53: invokevirtual #28                 // Method javafx/scene/Scene.getAccelerators:()Ljavafx/collections/ObservableMap;
      56: astore        4
      58: aload         4
      60: aload_3
      61: invokevirtual #27                 // Method javafx/scene/control/MenuItem.getAccelerator:()Ljavafx/scene/input/KeyCombination;
      64: invokeinterface #38,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: goto          12
      73: return

  private static javafx.beans.property.ReadOnlyObjectProperty<? extends javafx.scene.control.Control> getControlProperty(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #39                 // class javafx/scene/control/TableColumn
       4: ifeq          15
       7: aload_0
       8: checkcast     #39                 // class javafx/scene/control/TableColumn
      11: invokevirtual #40                 // Method javafx/scene/control/TableColumn.tableViewProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      14: areturn
      15: aload_0
      16: instanceof    #41                 // class javafx/scene/control/TreeTableColumn
      19: ifeq          30
      22: aload_0
      23: checkcast     #41                 // class javafx/scene/control/TreeTableColumn
      26: invokevirtual #42                 // Method javafx/scene/control/TreeTableColumn.treeTableViewProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      29: areturn
      30: aload_0
      31: instanceof    #43                 // class javafx/scene/control/Tab
      34: ifeq          45
      37: aload_0
      38: checkcast     #43                 // class javafx/scene/control/Tab
      41: invokevirtual #44                 // Method javafx/scene/control/Tab.tabPaneProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
      44: areturn
      45: aconst_null
      46: areturn

  private static void lambda$doAcceleratorInstall$2(javafx.scene.Scene, javafx.beans.value.ObservableValue, javafx.scene.input.KeyCombination, javafx.scene.input.KeyCombination);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method javafx/scene/Scene.getAccelerators:()Ljavafx/collections/ObservableMap;
       4: astore        4
       6: aload         4
       8: aload_2
       9: invokeinterface #38,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #45                 // class java/lang/Runnable
      17: astore        5
      19: aload_3
      20: ifnull        34
      23: aload         4
      25: aload_3
      26: aload         5
      28: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: return

  private static void lambda$doAcceleratorInstall$1(javafx.scene.control.MenuItem);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method javafx/scene/control/MenuItem.getOnMenuValidation:()Ljavafx/event/EventHandler;
       4: ifnull        21
       7: aload_0
       8: new           #47                 // class javafx/event/Event
      11: dup
      12: getstatic     #48                 // Field javafx/scene/control/MenuItem.MENU_VALIDATION_EVENT:Ljavafx/event/EventType;
      15: invokespecial #49                 // Method javafx/event/Event."<init>":(Ljavafx/event/EventType;)V
      18: invokestatic  #50                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      21: aload_0
      22: invokevirtual #51                 // Method javafx/scene/control/MenuItem.getParentMenu:()Ljavafx/scene/control/Menu;
      25: astore_1
      26: aload_1
      27: ifnull        51
      30: aload_1
      31: invokevirtual #52                 // Method javafx/scene/control/Menu.getOnMenuValidation:()Ljavafx/event/EventHandler;
      34: ifnull        51
      37: aload_1
      38: new           #47                 // class javafx/event/Event
      41: dup
      42: getstatic     #48                 // Field javafx/scene/control/MenuItem.MENU_VALIDATION_EVENT:Ljavafx/event/EventType;
      45: invokespecial #49                 // Method javafx/event/Event."<init>":(Ljavafx/event/EventType;)V
      48: invokestatic  #50                 // Method javafx/event/Event.fireEvent:(Ljavafx/event/EventTarget;Ljavafx/event/Event;)V
      51: aload_0
      52: invokevirtual #53                 // Method javafx/scene/control/MenuItem.isDisable:()Z
      55: ifne          123
      58: aload_0
      59: instanceof    #54                 // class javafx/scene/control/RadioMenuItem
      62: ifeq          90
      65: aload_0
      66: checkcast     #54                 // class javafx/scene/control/RadioMenuItem
      69: aload_0
      70: checkcast     #54                 // class javafx/scene/control/RadioMenuItem
      73: invokevirtual #55                 // Method javafx/scene/control/RadioMenuItem.isSelected:()Z
      76: ifne          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: invokevirtual #56                 // Method javafx/scene/control/RadioMenuItem.setSelected:(Z)V
      87: goto          119
      90: aload_0
      91: instanceof    #57                 // class javafx/scene/control/CheckMenuItem
      94: ifeq          119
      97: aload_0
      98: checkcast     #57                 // class javafx/scene/control/CheckMenuItem
     101: aload_0
     102: checkcast     #57                 // class javafx/scene/control/CheckMenuItem
     105: invokevirtual #58                 // Method javafx/scene/control/CheckMenuItem.isSelected:()Z
     108: ifne          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: invokevirtual #59                 // Method javafx/scene/control/CheckMenuItem.setSelected:(Z)V
     119: aload_0
     120: invokevirtual #60                 // Method javafx/scene/control/MenuItem.fire:()V
     123: return

  private static void lambda$doAcceleratorInstall$0(javafx.scene.Scene, javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          40
       7: aload_1
       8: invokevirtual #62                 // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
      11: ifeq          22
      14: aload_1
      15: invokevirtual #63                 // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      18: aload_0
      19: invokestatic  #36                 // Method removeAcceleratorsFromScene:(Ljava/util/List;Ljavafx/scene/Scene;)V
      22: aload_1
      23: invokevirtual #64                 // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
      26: ifeq          0
      29: aload_1
      30: invokevirtual #65                 // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      33: aload_0
      34: invokestatic  #20                 // Method doAcceleratorInstall:(Ljava/util/List;Ljavafx/scene/Scene;)V
      37: goto          0
      40: return

  static void access$000(javafx.collections.ObservableList, javafx.scene.Scene);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method doAcceleratorInstall:(Ljavafx/collections/ObservableList;Ljavafx/scene/Scene;)V
       5: return
}
