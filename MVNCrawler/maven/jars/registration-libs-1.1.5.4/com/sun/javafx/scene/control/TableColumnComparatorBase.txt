Compiled from "TableColumnComparatorBase.java"
public abstract class com.sun.javafx.scene.control.TableColumnComparatorBase<S, T> implements java.util.Comparator<S> {
  private final java.util.List<? extends javafx.scene.control.TableColumnBase> columns;

  public com.sun.javafx.scene.control.TableColumnComparatorBase(javafx.scene.control.TableColumnBase<S, T>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #2                  // Method "<init>":(Ljava/util/List;)V
       8: return

  public com.sun.javafx.scene.control.TableColumnComparatorBase(java.util.List<? extends javafx.scene.control.TableColumnBase>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: putfield      #6                  // Field columns:Ljava/util/List;
      16: return

  public java.util.List<? extends javafx.scene.control.TableColumnBase> getColumns();
    Code:
       0: aload_0
       1: getfield      #6                  // Field columns:Ljava/util/List;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public int compare(S, S);
    Code:
       0: aload_0
       1: getfield      #6                  // Field columns:Ljava/util/List;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          81
      19: aload_3
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #11                 // class javafx/scene/control/TableColumnBase
      28: astore        4
      30: aload_0
      31: aload         4
      33: invokevirtual #12                 // Method isSortable:(Ljavafx/scene/control/TableColumnBase;)Z
      36: ifne          42
      39: goto          10
      42: aload         4
      44: aload_1
      45: invokevirtual #13                 // Method javafx/scene/control/TableColumnBase.getCellData:(Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        5
      50: aload         4
      52: aload_2
      53: invokevirtual #13                 // Method javafx/scene/control/TableColumnBase.getCellData:(Ljava/lang/Object;)Ljava/lang/Object;
      56: astore        6
      58: aload_0
      59: aload         4
      61: aload         5
      63: aload         6
      65: invokevirtual #14                 // Method doCompare:(Ljavafx/scene/control/TableColumnBase;Ljava/lang/Object;Ljava/lang/Object;)I
      68: istore        7
      70: iload         7
      72: ifeq          78
      75: iload         7
      77: ireturn
      78: goto          10
      81: iconst_0
      82: ireturn

  public int hashCode();
    Code:
       0: bipush        7
       2: istore_1
       3: bipush        59
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #6                  // Field columns:Ljava/util/List;
      11: ifnull        26
      14: aload_0
      15: getfield      #6                  // Field columns:Ljava/util/List;
      18: invokeinterface #15,  1           // InterfaceMethod java/util/List.hashCode:()I
      23: goto          27
      26: iconst_0
      27: iadd
      28: istore_1
      29: iload_1
      30: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #17                 // class com/sun/javafx/scene/control/TableColumnComparatorBase
      23: astore_2
      24: aload_0
      25: getfield      #6                  // Field columns:Ljava/util/List;
      28: aload_2
      29: getfield      #6                  // Field columns:Ljava/util/List;
      32: if_acmpeq     60
      35: aload_0
      36: getfield      #6                  // Field columns:Ljava/util/List;
      39: ifnull        58
      42: aload_0
      43: getfield      #6                  // Field columns:Ljava/util/List;
      46: aload_2
      47: getfield      #6                  // Field columns:Ljava/util/List;
      50: invokeinterface #18,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: iconst_1
      61: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getColumns:()Ljava/util/List;
       4: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/util/List;)Ljava/lang/String;
       9: areturn

  public abstract boolean isSortable(javafx.scene.control.TableColumnBase<S, T>);

  public abstract int doCompare(javafx.scene.control.TableColumnBase<S, T>, T, T);
}
