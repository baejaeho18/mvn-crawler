Compiled from "TraversalEngine.java"
abstract class com.sun.javafx.scene.traversal.TraversalEngine$BaseEngineContext implements com.sun.javafx.scene.traversal.TraversalContext {
  final com.sun.javafx.scene.traversal.TraversalEngine this$0;

  private com.sun.javafx.scene.traversal.TraversalEngine$BaseEngineContext(com.sun.javafx.scene.traversal.TraversalEngine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public java.util.List<javafx.scene.Node> getAllTargetNodes();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_0
      11: invokevirtual #6                  // Method getRoot:()Ljavafx/scene/Parent;
      14: invokespecial #7                  // Method addFocusableChildrenToList:(Ljava/util/List;Ljavafx/scene/Parent;)V
      17: aload_1
      18: areturn

  public javafx.geometry.Bounds getSceneLayoutBounds(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
       4: aload_1
       5: aconst_null
       6: invokestatic  #8                  // Method com/sun/javafx/scene/traversal/TraversalEngine.access$300:(Lcom/sun/javafx/scene/traversal/TraversalEngine;Ljavafx/scene/Node;Ljavafx/scene/Parent;)Ljavafx/geometry/Bounds;
       9: areturn

  private void addFocusableChildrenToList(java.util.List<javafx.scene.Node>, javafx.scene.Parent);
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method javafx/scene/Parent.getChildrenUnmodifiable:()Ljavafx/collections/ObservableList;
       4: astore_3
       5: aload_3
       6: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          97
      23: aload         4
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #13                 // class javafx/scene/Node
      33: astore        5
      35: aload         5
      37: invokevirtual #14                 // Method javafx/scene/Node.isFocusTraversable:()Z
      40: ifeq          76
      43: aload         5
      45: invokevirtual #15                 // Method javafx/scene/Node.isFocused:()Z
      48: ifne          76
      51: aload         5
      53: invokestatic  #16                 // Method com/sun/javafx/scene/NodeHelper.isTreeVisible:(Ljavafx/scene/Node;)Z
      56: ifeq          76
      59: aload         5
      61: invokevirtual #17                 // Method javafx/scene/Node.isDisabled:()Z
      64: ifne          76
      67: aload_1
      68: aload         5
      70: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      75: pop
      76: aload         5
      78: instanceof    #19                 // class javafx/scene/Parent
      81: ifeq          94
      84: aload_0
      85: aload_1
      86: aload         5
      88: checkcast     #19                 // class javafx/scene/Parent
      91: invokespecial #7                  // Method addFocusableChildrenToList:(Ljava/util/List;Ljavafx/scene/Parent;)V
      94: goto          13
      97: return

  public javafx.scene.Node selectFirstInParent(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
       4: invokestatic  #20                 // Method com/sun/javafx/scene/traversal/TraversalEngine.access$400:(Lcom/sun/javafx/scene/traversal/TraversalEngine;)Lcom/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext;
       7: aload_1
       8: invokevirtual #21                 // Method com/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext.setRoot:(Ljavafx/scene/Parent;)V
      11: getstatic     #22                 // Field com/sun/javafx/scene/traversal/TraversalEngine.DEFAULT_ALGORITHM:Lcom/sun/javafx/scene/traversal/Algorithm;
      14: aload_0
      15: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
      18: invokestatic  #20                 // Method com/sun/javafx/scene/traversal/TraversalEngine.access$400:(Lcom/sun/javafx/scene/traversal/TraversalEngine;)Lcom/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext;
      21: invokeinterface #23,  2           // InterfaceMethod com/sun/javafx/scene/traversal/Algorithm.selectFirst:(Lcom/sun/javafx/scene/traversal/TraversalContext;)Ljavafx/scene/Node;
      26: areturn

  public javafx.scene.Node selectLastInParent(javafx.scene.Parent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
       4: invokestatic  #20                 // Method com/sun/javafx/scene/traversal/TraversalEngine.access$400:(Lcom/sun/javafx/scene/traversal/TraversalEngine;)Lcom/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext;
       7: aload_1
       8: invokevirtual #21                 // Method com/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext.setRoot:(Ljavafx/scene/Parent;)V
      11: getstatic     #22                 // Field com/sun/javafx/scene/traversal/TraversalEngine.DEFAULT_ALGORITHM:Lcom/sun/javafx/scene/traversal/Algorithm;
      14: aload_0
      15: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
      18: invokestatic  #20                 // Method com/sun/javafx/scene/traversal/TraversalEngine.access$400:(Lcom/sun/javafx/scene/traversal/TraversalEngine;)Lcom/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext;
      21: invokeinterface #24,  2           // InterfaceMethod com/sun/javafx/scene/traversal/Algorithm.selectLast:(Lcom/sun/javafx/scene/traversal/TraversalContext;)Ljavafx/scene/Node;
      26: areturn

  public javafx.scene.Node selectInSubtree(javafx.scene.Parent, javafx.scene.Node, com.sun.javafx.scene.traversal.Direction);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
       4: invokestatic  #20                 // Method com/sun/javafx/scene/traversal/TraversalEngine.access$400:(Lcom/sun/javafx/scene/traversal/TraversalEngine;)Lcom/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext;
       7: aload_1
       8: invokevirtual #21                 // Method com/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext.setRoot:(Ljavafx/scene/Parent;)V
      11: getstatic     #22                 // Field com/sun/javafx/scene/traversal/TraversalEngine.DEFAULT_ALGORITHM:Lcom/sun/javafx/scene/traversal/Algorithm;
      14: aload_2
      15: aload_3
      16: aload_0
      17: getfield      #2                  // Field this$0:Lcom/sun/javafx/scene/traversal/TraversalEngine;
      20: invokestatic  #20                 // Method com/sun/javafx/scene/traversal/TraversalEngine.access$400:(Lcom/sun/javafx/scene/traversal/TraversalEngine;)Lcom/sun/javafx/scene/traversal/TraversalEngine$TempEngineContext;
      23: invokeinterface #25,  4           // InterfaceMethod com/sun/javafx/scene/traversal/Algorithm.select:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;Lcom/sun/javafx/scene/traversal/TraversalContext;)Ljavafx/scene/Node;
      28: areturn

  com.sun.javafx.scene.traversal.TraversalEngine$BaseEngineContext(com.sun.javafx.scene.traversal.TraversalEngine, com.sun.javafx.scene.traversal.TraversalEngine$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/sun/javafx/scene/traversal/TraversalEngine;)V
       5: return
}
