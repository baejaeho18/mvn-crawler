Compiled from "ParentHelper.java"
public class com.sun.javafx.scene.ParentHelper extends com.sun.javafx.scene.NodeHelper {
  private static final com.sun.javafx.scene.ParentHelper theInstance;

  private static com.sun.javafx.scene.ParentHelper$ParentAccessor parentAccessor;

  public com.sun.javafx.scene.ParentHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/javafx/scene/NodeHelper."<init>":()V
       4: return

  private static com.sun.javafx.scene.ParentHelper getInstance();
    Code:
       0: getstatic     #2                  // Field theInstance:Lcom/sun/javafx/scene/ParentHelper;
       3: areturn

  public static void initHelper(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method getInstance:()Lcom/sun/javafx/scene/ParentHelper;
       4: invokestatic  #4                  // Method setHelper:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/NodeHelper;)V
       7: return

  public static void superProcessCSS(javafx.scene.Node);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method getHelper:(Ljavafx/scene/Node;)Lcom/sun/javafx/scene/NodeHelper;
       4: checkcast     #6                  // class com/sun/javafx/scene/ParentHelper
       7: aload_0
       8: invokevirtual #7                  // Method superProcessCSSImpl:(Ljavafx/scene/Node;)V
      11: return

  public static java.util.List<java.lang.String> getAllParentStylesheets(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method getHelper:(Ljavafx/scene/Node;)Lcom/sun/javafx/scene/NodeHelper;
       4: checkcast     #6                  // class com/sun/javafx/scene/ParentHelper
       7: aload_0
       8: invokevirtual #8                  // Method getAllParentStylesheetsImpl:(Ljavafx/scene/Parent;)Ljava/util/List;
      11: areturn

  protected com.sun.javafx.sg.prism.NGNode createPeerImpl(javafx.scene.Node);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_1
       4: invokeinterface #10,  2           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doCreatePeer:(Ljavafx/scene/Node;)Lcom/sun/javafx/sg/prism/NGNode;
       9: areturn

  protected void updatePeerImpl(javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/sun/javafx/scene/NodeHelper.updatePeerImpl:(Ljavafx/scene/Node;)V
       5: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       8: aload_1
       9: invokeinterface #12,  2           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doUpdatePeer:(Ljavafx/scene/Node;)V
      14: return

  protected com.sun.javafx.geom.BaseBounds computeGeomBoundsImpl(javafx.scene.Node, com.sun.javafx.geom.BaseBounds, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokeinterface #13,  4           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doComputeGeomBounds:(Ljavafx/scene/Node;Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/BaseBounds;
      11: areturn

  protected boolean computeContainsImpl(javafx.scene.Node, double, double);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_1
       4: dload_2
       5: dload         4
       7: invokeinterface #14,  6           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doComputeContains:(Ljavafx/scene/Node;DD)Z
      12: ireturn

  void superProcessCSSImpl(javafx.scene.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/sun/javafx/scene/NodeHelper.processCSSImpl:(Ljavafx/scene/Node;)V
       5: return

  protected void processCSSImpl(javafx.scene.Node);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_1
       4: invokeinterface #16,  2           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doProcessCSS:(Ljavafx/scene/Node;)V
       9: return

  protected java.util.List<java.lang.String> getAllParentStylesheetsImpl(javafx.scene.Parent);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_1
       4: invokeinterface #17,  2           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doGetAllParentStylesheets:(Ljavafx/scene/Parent;)Ljava/util/List;
       9: areturn

  protected void pickNodeLocalImpl(javafx.scene.Node, com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokeinterface #18,  4           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.doPickNodeLocal:(Ljavafx/scene/Node;Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)V
      11: return

  public static boolean pickChildrenNode(javafx.scene.Parent, com.sun.javafx.geom.PickRay, com.sun.javafx.scene.input.PickResultChooser);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokeinterface #19,  4           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.pickChildrenNode:(Ljavafx/scene/Parent;Lcom/sun/javafx/geom/PickRay;Lcom/sun/javafx/scene/input/PickResultChooser;)Z
      11: ireturn

  public static void setTraversalEngine(javafx.scene.Parent, com.sun.javafx.scene.traversal.ParentTraversalEngine);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_0
       4: aload_1
       5: invokeinterface #20,  3           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.setTraversalEngine:(Ljavafx/scene/Parent;Lcom/sun/javafx/scene/traversal/ParentTraversalEngine;)V
      10: return

  public static com.sun.javafx.scene.traversal.ParentTraversalEngine getTraversalEngine(javafx.scene.Parent);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: aload_0
       4: invokeinterface #21,  2           // InterfaceMethod com/sun/javafx/scene/ParentHelper$ParentAccessor.getTraversalEngine:(Ljavafx/scene/Parent;)Lcom/sun/javafx/scene/traversal/ParentTraversalEngine;
       9: areturn

  public static void setParentAccessor(com.sun.javafx.scene.ParentHelper$ParentAccessor);
    Code:
       0: getstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
       3: ifnull        14
       6: new           #22                 // class java/lang/IllegalStateException
       9: dup
      10: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":()V
      13: athrow
      14: aload_0
      15: putstatic     #9                  // Field parentAccessor:Lcom/sun/javafx/scene/ParentHelper$ParentAccessor;
      18: return

  static {};
    Code:
       0: new           #6                  // class com/sun/javafx/scene/ParentHelper
       3: dup
       4: invokespecial #24                 // Method "<init>":()V
       7: putstatic     #2                  // Field theInstance:Lcom/sun/javafx/scene/ParentHelper;
      10: ldc           #25                 // class javafx/scene/Parent
      12: invokestatic  #26                 // Method com/sun/javafx/util/Utils.forceInit:(Ljava/lang/Class;)V
      15: return
}
