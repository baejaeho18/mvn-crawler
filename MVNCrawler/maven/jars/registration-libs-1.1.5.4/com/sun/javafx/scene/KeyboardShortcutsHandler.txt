Compiled from "KeyboardShortcutsHandler.java"
public final class com.sun.javafx.scene.KeyboardShortcutsHandler extends com.sun.javafx.event.BasicEventDispatcher {
  private javafx.collections.ObservableMap<javafx.scene.input.KeyCombination, java.lang.Runnable> accelerators;

  private com.sun.javafx.scene.KeyboardShortcutsHandler$CopyOnWriteMap<javafx.scene.input.KeyCombination, java.lang.Runnable> acceleratorsBackingMap;

  private javafx.collections.ObservableMap<javafx.scene.input.KeyCombination, javafx.collections.ObservableList<javafx.scene.input.Mnemonic>> mnemonics;

  private boolean mnemonicsDisplayEnabled;

  public com.sun.javafx.scene.KeyboardShortcutsHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/javafx/event/BasicEventDispatcher."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field mnemonicsDisplayEnabled:Z
       9: return

  public void addMnemonic(javafx.scene.input.Mnemonic);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getMnemonics:()Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokevirtual #4                  // Method javafx/scene/input/Mnemonic.getKeyCombination:()Ljavafx/scene/input/KeyCombination;
       8: invokeinterface #5,  2            // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #6                  // class javafx/collections/ObservableList
      16: astore_2
      17: aload_2
      18: ifnonnull     51
      21: new           #7                  // class com/sun/javafx/collections/ObservableListWrapper
      24: dup
      25: new           #8                  // class java/util/ArrayList
      28: dup
      29: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      32: invokespecial #10                 // Method com/sun/javafx/collections/ObservableListWrapper."<init>":(Ljava/util/List;)V
      35: astore_2
      36: aload_0
      37: invokevirtual #3                  // Method getMnemonics:()Ljavafx/collections/ObservableMap;
      40: aload_1
      41: invokevirtual #4                  // Method javafx/scene/input/Mnemonic.getKeyCombination:()Ljavafx/scene/input/KeyCombination;
      44: aload_2
      45: invokeinterface #11,  3           // InterfaceMethod javafx/collections/ObservableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: iconst_0
      52: istore_3
      53: aload_2
      54: invokeinterface #12,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      59: astore        4
      61: aload         4
      63: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          97
      71: aload         4
      73: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #15                 // class javafx/scene/input/Mnemonic
      81: astore        5
      83: aload         5
      85: aload_1
      86: if_acmpne     94
      89: iconst_1
      90: istore_3
      91: goto          97
      94: goto          61
      97: iload_3
      98: ifne          109
     101: aload_2
     102: aload_1
     103: invokeinterface #16,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
     108: pop
     109: return

  public void removeMnemonic(javafx.scene.input.Mnemonic);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getMnemonics:()Ljavafx/collections/ObservableMap;
       4: aload_1
       5: invokevirtual #4                  // Method javafx/scene/input/Mnemonic.getKeyCombination:()Ljavafx/scene/input/KeyCombination;
       8: invokeinterface #5,  2            // InterfaceMethod javafx/collections/ObservableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #6                  // class javafx/collections/ObservableList
      16: astore_2
      17: aload_2
      18: ifnull        67
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_2
      25: invokeinterface #17,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      30: if_icmpge     67
      33: aload_2
      34: iload_3
      35: invokeinterface #18,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      40: checkcast     #15                 // class javafx/scene/input/Mnemonic
      43: invokevirtual #19                 // Method javafx/scene/input/Mnemonic.getNode:()Ljavafx/scene/Node;
      46: aload_1
      47: invokevirtual #19                 // Method javafx/scene/input/Mnemonic.getNode:()Ljavafx/scene/Node;
      50: if_acmpne     61
      53: aload_2
      54: iload_3
      55: invokeinterface #20,  2           // InterfaceMethod javafx/collections/ObservableList.remove:(I)Ljava/lang/Object;
      60: pop
      61: iinc          3, 1
      64: goto          23
      67: return

  public javafx.collections.ObservableMap<javafx.scene.input.KeyCombination, javafx.collections.ObservableList<javafx.scene.input.Mnemonic>> getMnemonics();
    Code:
       0: aload_0
       1: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
       4: ifnonnull     25
       7: aload_0
       8: new           #22                 // class com/sun/javafx/collections/ObservableMapWrapper
      11: dup
      12: new           #23                 // class java/util/HashMap
      15: dup
      16: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      19: invokespecial #25                 // Method com/sun/javafx/collections/ObservableMapWrapper."<init>":(Ljava/util/Map;)V
      22: putfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
      25: aload_0
      26: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
      29: areturn

  public javafx.collections.ObservableMap<javafx.scene.input.KeyCombination, java.lang.Runnable> getAccelerators();
    Code:
       0: aload_0
       1: getfield      #26                 // Field accelerators:Ljavafx/collections/ObservableMap;
       4: ifnonnull     34
       7: aload_0
       8: new           #27                 // class com/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap
      11: dup
      12: aconst_null
      13: invokespecial #28                 // Method com/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap."<init>":(Lcom/sun/javafx/scene/KeyboardShortcutsHandler$1;)V
      16: putfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
      19: aload_0
      20: new           #22                 // class com/sun/javafx/collections/ObservableMapWrapper
      23: dup
      24: aload_0
      25: getfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
      28: invokespecial #25                 // Method com/sun/javafx/collections/ObservableMapWrapper."<init>":(Ljava/util/Map;)V
      31: putfield      #26                 // Field accelerators:Ljavafx/collections/ObservableMap;
      34: aload_0
      35: getfield      #26                 // Field accelerators:Ljavafx/collections/ObservableMap;
      38: areturn

  private void traverse(javafx.event.Event, javafx.scene.Node, com.sun.javafx.scene.traversal.Direction);
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #30                 // Method com/sun/javafx/scene/NodeHelper.traverse:(Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)Z
       5: ifeq          12
       8: aload_1
       9: invokevirtual #31                 // Method javafx/event/Event.consume:()V
      12: return

  public void processTraversal(javafx.event.Event);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
       4: getstatic     #33                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
       7: if_acmpeq     11
      10: return
      11: aload_1
      12: instanceof    #34                 // class javafx/scene/input/KeyEvent
      15: ifne          19
      18: return
      19: aload_1
      20: checkcast     #34                 // class javafx/scene/input/KeyEvent
      23: astore_2
      24: aload_2
      25: invokevirtual #35                 // Method javafx/scene/input/KeyEvent.isMetaDown:()Z
      28: ifne          193
      31: aload_2
      32: invokevirtual #36                 // Method javafx/scene/input/KeyEvent.isControlDown:()Z
      35: ifne          193
      38: aload_2
      39: invokevirtual #37                 // Method javafx/scene/input/KeyEvent.isAltDown:()Z
      42: ifne          193
      45: aload_1
      46: invokevirtual #38                 // Method javafx/event/Event.getTarget:()Ljavafx/event/EventTarget;
      49: astore_3
      50: aload_3
      51: instanceof    #39                 // class javafx/scene/Node
      54: ifne          58
      57: return
      58: aload_3
      59: checkcast     #39                 // class javafx/scene/Node
      62: astore        4
      64: getstatic     #40                 // Field com/sun/javafx/scene/KeyboardShortcutsHandler$1.$SwitchMap$javafx$scene$input$KeyCode:[I
      67: aload_2
      68: invokevirtual #41                 // Method javafx/scene/input/KeyEvent.getCode:()Ljavafx/scene/input/KeyCode;
      71: invokevirtual #42                 // Method javafx/scene/input/KeyCode.ordinal:()I
      74: iaload
      75: tableswitch   { // 1 to 5
                     1: 108
                     2: 141
                     3: 154
                     4: 167
                     5: 180
               default: 193
          }
     108: aload_2
     109: invokevirtual #43                 // Method javafx/scene/input/KeyEvent.isShiftDown:()Z
     112: ifeq          128
     115: aload_0
     116: aload_1
     117: aload         4
     119: getstatic     #44                 // Field com/sun/javafx/scene/traversal/Direction.PREVIOUS:Lcom/sun/javafx/scene/traversal/Direction;
     122: invokespecial #45                 // Method traverse:(Ljavafx/event/Event;Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)V
     125: goto          193
     128: aload_0
     129: aload_1
     130: aload         4
     132: getstatic     #46                 // Field com/sun/javafx/scene/traversal/Direction.NEXT:Lcom/sun/javafx/scene/traversal/Direction;
     135: invokespecial #45                 // Method traverse:(Ljavafx/event/Event;Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)V
     138: goto          193
     141: aload_0
     142: aload_1
     143: aload         4
     145: getstatic     #47                 // Field com/sun/javafx/scene/traversal/Direction.UP:Lcom/sun/javafx/scene/traversal/Direction;
     148: invokespecial #45                 // Method traverse:(Ljavafx/event/Event;Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)V
     151: goto          193
     154: aload_0
     155: aload_1
     156: aload         4
     158: getstatic     #48                 // Field com/sun/javafx/scene/traversal/Direction.DOWN:Lcom/sun/javafx/scene/traversal/Direction;
     161: invokespecial #45                 // Method traverse:(Ljavafx/event/Event;Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)V
     164: goto          193
     167: aload_0
     168: aload_1
     169: aload         4
     171: getstatic     #49                 // Field com/sun/javafx/scene/traversal/Direction.LEFT:Lcom/sun/javafx/scene/traversal/Direction;
     174: invokespecial #45                 // Method traverse:(Ljavafx/event/Event;Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)V
     177: goto          193
     180: aload_0
     181: aload_1
     182: aload         4
     184: getstatic     #50                 // Field com/sun/javafx/scene/traversal/Direction.RIGHT:Lcom/sun/javafx/scene/traversal/Direction;
     187: invokespecial #45                 // Method traverse:(Ljavafx/event/Event;Ljavafx/scene/Node;Lcom/sun/javafx/scene/traversal/Direction;)V
     190: goto          193
     193: return

  public javafx.event.Event dispatchBubblingEvent(javafx.event.Event);
    Code:
       0: aload_1
       1: instanceof    #34                 // class javafx/scene/input/KeyEvent
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_1
      10: invokevirtual #32                 // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
      13: getstatic     #33                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      16: if_acmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore_2
      25: aload_1
      26: checkcast     #34                 // class javafx/scene/input/KeyEvent
      29: astore_3
      30: iload_2
      31: ifeq          58
      34: aload_1
      35: invokevirtual #51                 // Method javafx/event/Event.isConsumed:()Z
      38: ifne          46
      41: aload_0
      42: aload_3
      43: invokespecial #52                 // Method processAccelerators:(Ljavafx/scene/input/KeyEvent;)V
      46: aload_1
      47: invokevirtual #51                 // Method javafx/event/Event.isConsumed:()Z
      50: ifne          58
      53: aload_0
      54: aload_1
      55: invokevirtual #53                 // Method processTraversal:(Ljavafx/event/Event;)V
      58: aload_1
      59: areturn

  public javafx.event.Event dispatchCapturingEvent(javafx.event.Event);
    Code:
       0: aload_1
       1: instanceof    #34                 // class javafx/scene/input/KeyEvent
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_1
      10: invokevirtual #32                 // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
      13: getstatic     #33                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      16: if_acmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore_2
      25: aload_1
      26: invokevirtual #32                 // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
      29: getstatic     #54                 // Field javafx/scene/input/KeyEvent.KEY_TYPED:Ljavafx/event/EventType;
      32: if_acmpne     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_3
      41: aload_1
      42: invokevirtual #32                 // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
      45: getstatic     #55                 // Field javafx/scene/input/KeyEvent.KEY_RELEASED:Ljavafx/event/EventType;
      48: if_acmpne     55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore        4
      58: aload_1
      59: checkcast     #34                 // class javafx/scene/input/KeyEvent
      62: astore        5
      64: iload_2
      65: ifne          72
      68: iload_3
      69: ifeq          116
      72: invokestatic  #56                 // Method com/sun/javafx/PlatformUtil.isMac:()Z
      75: ifeq          95
      78: aload         5
      80: invokevirtual #35                 // Method javafx/scene/input/KeyEvent.isMetaDown:()Z
      83: ifeq          116
      86: aload_0
      87: aload         5
      89: invokespecial #57                 // Method processMnemonics:(Ljavafx/scene/input/KeyEvent;)V
      92: goto          116
      95: aload         5
      97: invokevirtual #37                 // Method javafx/scene/input/KeyEvent.isAltDown:()Z
     100: ifne          110
     103: aload_0
     104: invokevirtual #58                 // Method isMnemonicsDisplayEnabled:()Z
     107: ifeq          116
     110: aload_0
     111: aload         5
     113: invokespecial #57                 // Method processMnemonics:(Ljavafx/scene/input/KeyEvent;)V
     116: invokestatic  #56                 // Method com/sun/javafx/PlatformUtil.isMac:()Z
     119: ifne          221
     122: aload_1
     123: invokevirtual #51                 // Method javafx/event/Event.isConsumed:()Z
     126: ifne          221
     129: iload_2
     130: ifeq          197
     133: aload         5
     135: invokevirtual #37                 // Method javafx/scene/input/KeyEvent.isAltDown:()Z
     138: ifeq          181
     141: aload_0
     142: invokevirtual #58                 // Method isMnemonicsDisplayEnabled:()Z
     145: ifne          156
     148: aload_0
     149: iconst_1
     150: invokevirtual #59                 // Method setMnemonicsDisplayEnabled:(Z)V
     153: goto          197
     156: invokestatic  #60                 // Method com/sun/javafx/PlatformUtil.isWindows:()Z
     159: ifeq          197
     162: aload_0
     163: aload_0
     164: invokevirtual #58                 // Method isMnemonicsDisplayEnabled:()Z
     167: ifne          174
     170: iconst_1
     171: goto          175
     174: iconst_0
     175: invokevirtual #59                 // Method setMnemonicsDisplayEnabled:(Z)V
     178: goto          197
     181: aload         5
     183: invokevirtual #41                 // Method javafx/scene/input/KeyEvent.getCode:()Ljavafx/scene/input/KeyCode;
     186: getstatic     #61                 // Field javafx/scene/input/KeyCode.ESCAPE:Ljavafx/scene/input/KeyCode;
     189: if_acmpne     197
     192: aload_0
     193: iconst_0
     194: invokevirtual #59                 // Method setMnemonicsDisplayEnabled:(Z)V
     197: iload         4
     199: ifeq          221
     202: aload         5
     204: invokevirtual #37                 // Method javafx/scene/input/KeyEvent.isAltDown:()Z
     207: ifne          221
     210: invokestatic  #60                 // Method com/sun/javafx/PlatformUtil.isWindows:()Z
     213: ifne          221
     216: aload_0
     217: iconst_0
     218: invokevirtual #59                 // Method setMnemonicsDisplayEnabled:(Z)V
     221: aload_1
     222: areturn

  private void processMnemonics(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
       4: ifnonnull     8
       7: return
       8: aload_1
       9: astore_2
      10: aload_1
      11: invokevirtual #62                 // Method javafx/scene/input/KeyEvent.getEventType:()Ljavafx/event/EventType;
      14: getstatic     #54                 // Field javafx/scene/input/KeyEvent.KEY_TYPED:Ljavafx/event/EventType;
      17: if_acmpne     68
      20: new           #34                 // class javafx/scene/input/KeyEvent
      23: dup
      24: aconst_null
      25: aload_1
      26: invokevirtual #63                 // Method javafx/scene/input/KeyEvent.getTarget:()Ljavafx/event/EventTarget;
      29: getstatic     #33                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      32: ldc           #64                 // String
      34: aload_1
      35: invokevirtual #65                 // Method javafx/scene/input/KeyEvent.getCharacter:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #65                 // Method javafx/scene/input/KeyEvent.getCharacter:()Ljava/lang/String;
      42: invokestatic  #66                 // Method javafx/scene/input/KeyCode.getKeyCode:(Ljava/lang/String;)Ljavafx/scene/input/KeyCode;
      45: aload_1
      46: invokevirtual #43                 // Method javafx/scene/input/KeyEvent.isShiftDown:()Z
      49: aload_1
      50: invokevirtual #36                 // Method javafx/scene/input/KeyEvent.isControlDown:()Z
      53: aload_0
      54: invokevirtual #58                 // Method isMnemonicsDisplayEnabled:()Z
      57: aload_1
      58: invokevirtual #35                 // Method javafx/scene/input/KeyEvent.isMetaDown:()Z
      61: invokespecial #67                 // Method javafx/scene/input/KeyEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljava/lang/String;Ljava/lang/String;Ljavafx/scene/input/KeyCode;ZZZZ)V
      64: astore_2
      65: goto          119
      68: aload_0
      69: invokevirtual #58                 // Method isMnemonicsDisplayEnabled:()Z
      72: ifeq          119
      75: new           #34                 // class javafx/scene/input/KeyEvent
      78: dup
      79: aconst_null
      80: aload_1
      81: invokevirtual #63                 // Method javafx/scene/input/KeyEvent.getTarget:()Ljavafx/event/EventTarget;
      84: getstatic     #33                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      87: aload_1
      88: invokevirtual #65                 // Method javafx/scene/input/KeyEvent.getCharacter:()Ljava/lang/String;
      91: aload_1
      92: invokevirtual #68                 // Method javafx/scene/input/KeyEvent.getText:()Ljava/lang/String;
      95: aload_1
      96: invokevirtual #41                 // Method javafx/scene/input/KeyEvent.getCode:()Ljavafx/scene/input/KeyCode;
      99: aload_1
     100: invokevirtual #43                 // Method javafx/scene/input/KeyEvent.isShiftDown:()Z
     103: aload_1
     104: invokevirtual #36                 // Method javafx/scene/input/KeyEvent.isControlDown:()Z
     107: aload_0
     108: invokevirtual #58                 // Method isMnemonicsDisplayEnabled:()Z
     111: aload_1
     112: invokevirtual #35                 // Method javafx/scene/input/KeyEvent.isMetaDown:()Z
     115: invokespecial #67                 // Method javafx/scene/input/KeyEvent."<init>":(Ljava/lang/Object;Ljavafx/event/EventTarget;Ljavafx/event/EventType;Ljava/lang/String;Ljava/lang/String;Ljavafx/scene/input/KeyCode;ZZZZ)V
     118: astore_2
     119: aconst_null
     120: astore_3
     121: aload_0
     122: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
     125: invokeinterface #69,  1           // InterfaceMethod javafx/collections/ObservableMap.entrySet:()Ljava/util/Set;
     130: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     135: astore        4
     137: aload         4
     139: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     144: ifeq          193
     147: aload         4
     149: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #71                 // class java/util/Map$Entry
     157: astore        5
     159: aload         5
     161: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     166: checkcast     #73                 // class javafx/scene/input/KeyCombination
     169: aload_2
     170: invokevirtual #74                 // Method javafx/scene/input/KeyCombination.match:(Ljavafx/scene/input/KeyEvent;)Z
     173: ifeq          190
     176: aload         5
     178: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     183: checkcast     #6                  // class javafx/collections/ObservableList
     186: astore_3
     187: goto          193
     190: goto          137
     193: aload_3
     194: ifnonnull     198
     197: return
     198: iconst_0
     199: istore        4
     201: aconst_null
     202: astore        5
     204: aconst_null
     205: astore        6
     207: iconst_m1
     208: istore        7
     210: iconst_m1
     211: istore        8
     213: iconst_0
     214: istore        9
     216: iload         9
     218: aload_3
     219: invokeinterface #17,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     224: if_icmpge     345
     227: aload_3
     228: iload         9
     230: invokeinterface #18,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     235: checkcast     #15                 // class javafx/scene/input/Mnemonic
     238: astore        10
     240: aload         10
     242: invokevirtual #19                 // Method javafx/scene/input/Mnemonic.getNode:()Ljavafx/scene/Node;
     245: astore        11
     247: aload         6
     249: ifnonnull     272
     252: aload         11
     254: invokestatic  #76                 // Method com/sun/javafx/scene/NodeHelper.isTreeVisible:(Ljavafx/scene/Node;)Z
     257: ifeq          272
     260: aload         11
     262: invokevirtual #77                 // Method javafx/scene/Node.isDisabled:()Z
     265: ifne          272
     268: aload         10
     270: astore        6
     272: aload         11
     274: invokestatic  #76                 // Method com/sun/javafx/scene/NodeHelper.isTreeVisible:(Ljavafx/scene/Node;)Z
     277: ifeq          327
     280: aload         11
     282: invokevirtual #78                 // Method javafx/scene/Node.isFocusTraversable:()Z
     285: ifeq          327
     288: aload         11
     290: invokevirtual #77                 // Method javafx/scene/Node.isDisabled:()Z
     293: ifne          327
     296: aload         5
     298: ifnonnull     308
     301: aload         11
     303: astore        5
     305: goto          327
     308: iconst_1
     309: istore        4
     311: iload         7
     313: iconst_m1
     314: if_icmpeq     327
     317: iload         8
     319: iconst_m1
     320: if_icmpne     327
     323: iload         9
     325: istore        8
     327: aload         11
     329: invokevirtual #79                 // Method javafx/scene/Node.isFocused:()Z
     332: ifeq          339
     335: iload         9
     337: istore        7
     339: iinc          9, 1
     342: goto          216
     345: aload         5
     347: ifnull        452
     350: iload         4
     352: ifne          359
     355: iconst_1
     356: goto          360
     359: iconst_0
     360: iconst_1
     361: if_icmpne     376
     364: aload         5
     366: invokevirtual #80                 // Method javafx/scene/Node.requestFocus:()V
     369: aload_1
     370: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
     373: goto          452
     376: iload         7
     378: iconst_m1
     379: if_icmpne     394
     382: aload         5
     384: invokevirtual #80                 // Method javafx/scene/Node.requestFocus:()V
     387: aload_1
     388: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
     391: goto          452
     394: iload         7
     396: aload_3
     397: invokeinterface #17,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     402: if_icmplt     417
     405: aload         5
     407: invokevirtual #80                 // Method javafx/scene/Node.requestFocus:()V
     410: aload_1
     411: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
     414: goto          452
     417: iload         8
     419: iconst_m1
     420: if_icmpeq     443
     423: aload_3
     424: iload         8
     426: invokeinterface #18,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     431: checkcast     #15                 // class javafx/scene/input/Mnemonic
     434: invokevirtual #19                 // Method javafx/scene/input/Mnemonic.getNode:()Ljavafx/scene/Node;
     437: invokevirtual #80                 // Method javafx/scene/Node.requestFocus:()V
     440: goto          448
     443: aload         5
     445: invokevirtual #80                 // Method javafx/scene/Node.requestFocus:()V
     448: aload_1
     449: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
     452: iload         4
     454: ifne          488
     457: aload         6
     459: ifnull        488
     462: aload_1
     463: invokevirtual #62                 // Method javafx/scene/input/KeyEvent.getEventType:()Ljavafx/event/EventType;
     466: getstatic     #54                 // Field javafx/scene/input/KeyEvent.KEY_TYPED:Ljavafx/event/EventType;
     469: if_acmpne     479
     472: aload_1
     473: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
     476: goto          488
     479: aload         6
     481: invokevirtual #82                 // Method javafx/scene/input/Mnemonic.fire:()V
     484: aload_1
     485: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
     488: return

  private void processAccelerators(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: getfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
       4: ifnull        119
       7: aload_0
       8: getfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
      11: invokevirtual #83                 // Method com/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap.lock:()V
      14: aload_0
      15: getfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
      18: invokestatic  #84                 // Method com/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap.access$100:(Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;)Ljava/util/Map;
      21: invokeinterface #85,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          97
      41: aload_2
      42: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #71                 // class java/util/Map$Entry
      50: astore_3
      51: aload_3
      52: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: checkcast     #73                 // class javafx/scene/input/KeyCombination
      60: aload_1
      61: invokevirtual #74                 // Method javafx/scene/input/KeyCombination.match:(Ljavafx/scene/input/KeyEvent;)Z
      64: ifeq          94
      67: aload_3
      68: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: checkcast     #86                 // class java/lang/Runnable
      76: astore        4
      78: aload         4
      80: ifnull        94
      83: aload         4
      85: invokeinterface #87,  1           // InterfaceMethod java/lang/Runnable.run:()V
      90: aload_1
      91: invokevirtual #81                 // Method javafx/scene/input/KeyEvent.consume:()V
      94: goto          32
      97: aload_0
      98: getfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
     101: invokevirtual #88                 // Method com/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap.unlock:()V
     104: goto          119
     107: astore        5
     109: aload_0
     110: getfield      #29                 // Field acceleratorsBackingMap:Lcom/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap;
     113: invokevirtual #88                 // Method com/sun/javafx/scene/KeyboardShortcutsHandler$CopyOnWriteMap.unlock:()V
     116: aload         5
     118: athrow
     119: return
    Exception table:
       from    to  target type
          14    97   107   any
         107   109   107   any

  private void processMnemonicsKeyDisplay();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
       6: ifnull        105
       9: aload_0
      10: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
      13: invokeinterface #69,  1           // InterfaceMethod javafx/collections/ObservableMap.entrySet:()Ljava/util/Set;
      18: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          105
      33: aload_2
      34: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #71                 // class java/util/Map$Entry
      42: astore_3
      43: aload_3
      44: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: checkcast     #6                  // class javafx/collections/ObservableList
      52: astore_1
      53: aload_1
      54: ifnull        102
      57: iconst_0
      58: istore        4
      60: iload         4
      62: aload_1
      63: invokeinterface #17,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      68: if_icmpge     102
      71: aload_1
      72: iload         4
      74: invokeinterface #18,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      79: checkcast     #15                 // class javafx/scene/input/Mnemonic
      82: invokevirtual #19                 // Method javafx/scene/input/Mnemonic.getNode:()Ljavafx/scene/Node;
      85: astore        5
      87: aload         5
      89: aload_0
      90: getfield      #2                  // Field mnemonicsDisplayEnabled:Z
      93: invokestatic  #89                 // Method com/sun/javafx/scene/NodeHelper.setShowMnemonics:(Ljavafx/scene/Node;Z)V
      96: iinc          4, 1
      99: goto          60
     102: goto          24
     105: return

  public boolean isMnemonicsDisplayEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mnemonicsDisplayEnabled:Z
       4: ireturn

  public void setMnemonicsDisplayEnabled(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field mnemonicsDisplayEnabled:Z
       5: if_icmpeq     17
       8: aload_0
       9: iload_1
      10: putfield      #2                  // Field mnemonicsDisplayEnabled:Z
      13: aload_0
      14: invokespecial #90                 // Method processMnemonicsKeyDisplay:()V
      17: return

  public void clearNodeMnemonics(javafx.scene.Node);
    Code:
       0: aload_0
       1: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
       4: ifnull        93
       7: aload_0
       8: getfield      #21                 // Field mnemonics:Ljavafx/collections/ObservableMap;
      11: invokeinterface #91,  1           // InterfaceMethod javafx/collections/ObservableMap.values:()Ljava/util/Collection;
      16: invokeinterface #92,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          93
      31: aload_2
      32: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #6                  // class javafx/collections/ObservableList
      40: astore_3
      41: aload_3
      42: invokeinterface #12,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      47: astore        4
      49: aload         4
      51: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          90
      59: aload         4
      61: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #15                 // class javafx/scene/input/Mnemonic
      69: astore        5
      71: aload         5
      73: invokevirtual #19                 // Method javafx/scene/input/Mnemonic.getNode:()Ljavafx/scene/Node;
      76: aload_1
      77: if_acmpne     87
      80: aload         4
      82: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.remove:()V
      87: goto          49
      90: goto          22
      93: return
}
