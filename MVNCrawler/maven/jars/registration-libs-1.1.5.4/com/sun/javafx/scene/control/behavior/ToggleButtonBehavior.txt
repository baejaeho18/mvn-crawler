Compiled from "ToggleButtonBehavior.java"
public class com.sun.javafx.scene.control.behavior.ToggleButtonBehavior<C extends javafx.scene.control.ToggleButton> extends com.sun.javafx.scene.control.behavior.ButtonBehavior<C> {
  public com.sun.javafx.scene.control.behavior.ToggleButtonBehavior(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/sun/javafx/scene/control/behavior/ButtonBehavior."<init>":(Ljavafx/scene/control/ButtonBase;)V
       5: iconst_4
       6: anewarray     #2                  // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
       9: dup
      10: iconst_0
      11: new           #3                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      14: dup
      15: getstatic     #4                  // Field javafx/scene/input/KeyCode.RIGHT:Ljavafx/scene/input/KeyCode;
      18: aload_0
      19: invokedynamic #5,  0              // InvokeDynamic #0:handle:(Lcom/sun/javafx/scene/control/behavior/ToggleButtonBehavior;)Ljavafx/event/EventHandler;
      24: invokespecial #6                  // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventHandler;)V
      27: aastore
      28: dup
      29: iconst_1
      30: new           #3                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      33: dup
      34: getstatic     #7                  // Field javafx/scene/input/KeyCode.LEFT:Ljavafx/scene/input/KeyCode;
      37: aload_0
      38: invokedynamic #8,  0              // InvokeDynamic #1:handle:(Lcom/sun/javafx/scene/control/behavior/ToggleButtonBehavior;)Ljavafx/event/EventHandler;
      43: invokespecial #6                  // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventHandler;)V
      46: aastore
      47: dup
      48: iconst_2
      49: new           #3                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      52: dup
      53: getstatic     #9                  // Field javafx/scene/input/KeyCode.DOWN:Ljavafx/scene/input/KeyCode;
      56: aload_0
      57: invokedynamic #10,  0             // InvokeDynamic #2:handle:(Lcom/sun/javafx/scene/control/behavior/ToggleButtonBehavior;)Ljavafx/event/EventHandler;
      62: invokespecial #6                  // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventHandler;)V
      65: aastore
      66: dup
      67: iconst_3
      68: new           #3                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      71: dup
      72: getstatic     #11                 // Field javafx/scene/input/KeyCode.UP:Ljavafx/scene/input/KeyCode;
      75: aload_0
      76: invokedynamic #12,  0             // InvokeDynamic #3:handle:(Lcom/sun/javafx/scene/control/behavior/ToggleButtonBehavior;)Ljavafx/event/EventHandler;
      81: invokespecial #6                  // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventHandler;)V
      84: aastore
      85: invokestatic  #13                 // Method javafx/collections/FXCollections.observableArrayList:([Ljava/lang/Object;)Ljavafx/collections/ObservableList;
      88: astore_2
      89: aload_2
      90: invokeinterface #14,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      95: astore_3
      96: aload_3
      97: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          125
     105: aload_3
     106: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #2                  // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
     114: astore        4
     116: aload         4
     118: iconst_0
     119: invokevirtual #17                 // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.setAutoConsume:(Z)V
     122: goto          96
     125: new           #18                 // class com/sun/javafx/scene/control/inputmap/InputMap
     128: dup
     129: aload_1
     130: invokespecial #19                 // Method com/sun/javafx/scene/control/inputmap/InputMap."<init>":(Ljavafx/scene/Node;)V
     133: astore_3
     134: aload_3
     135: invokevirtual #20                 // Method com/sun/javafx/scene/control/inputmap/InputMap.getMappings:()Ljavafx/collections/ObservableList;
     138: aload_2
     139: invokeinterface #21,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:(Ljava/util/Collection;)Z
     144: pop
     145: aload_0
     146: aload_0
     147: invokevirtual #22                 // Method getInputMap:()Lcom/sun/javafx/scene/control/inputmap/InputMap;
     150: aload_3
     151: invokevirtual #23                 // Method addDefaultChildMap:(Lcom/sun/javafx/scene/control/inputmap/InputMap;Lcom/sun/javafx/scene/control/inputmap/InputMap;)V
     154: return

  private int nextToggleIndex(javafx.collections.ObservableList<javafx.scene.control.Toggle>, int);
    Code:
       0: iload_2
       1: iflt          14
       4: iload_2
       5: aload_1
       6: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: if_icmplt     16
      14: iconst_0
      15: ireturn
      16: iload_2
      17: iconst_1
      18: iadd
      19: aload_1
      20: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      25: irem
      26: istore        4
      28: iload         4
      30: iload_2
      31: if_icmpeq     79
      34: aload_1
      35: iload         4
      37: invokeinterface #25,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      42: checkcast     #26                 // class javafx/scene/control/Toggle
      45: dup
      46: astore_3
      47: instanceof    #27                 // class javafx/scene/Node
      50: ifeq          79
      53: aload_3
      54: checkcast     #27                 // class javafx/scene/Node
      57: invokevirtual #28                 // Method javafx/scene/Node.isDisabled:()Z
      60: ifeq          79
      63: iload         4
      65: iconst_1
      66: iadd
      67: aload_1
      68: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      73: irem
      74: istore        4
      76: goto          28
      79: iload         4
      81: ireturn

  private int previousToggleIndex(javafx.collections.ObservableList<javafx.scene.control.Toggle>, int);
    Code:
       0: iload_2
       1: iflt          14
       4: iload_2
       5: aload_1
       6: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      11: if_icmplt     21
      14: aload_1
      15: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      20: ireturn
      21: iload_2
      22: iconst_1
      23: isub
      24: aload_1
      25: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      30: invokestatic  #29                 // Method java/lang/Math.floorMod:(II)I
      33: istore        4
      35: iload         4
      37: iload_2
      38: if_icmpeq     88
      41: aload_1
      42: iload         4
      44: invokeinterface #25,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      49: checkcast     #26                 // class javafx/scene/control/Toggle
      52: dup
      53: astore_3
      54: instanceof    #27                 // class javafx/scene/Node
      57: ifeq          88
      60: aload_3
      61: checkcast     #27                 // class javafx/scene/Node
      64: invokevirtual #28                 // Method javafx/scene/Node.isDisabled:()Z
      67: ifeq          88
      70: iload         4
      72: iconst_1
      73: isub
      74: aload_1
      75: invokeinterface #24,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      80: invokestatic  #29                 // Method java/lang/Math.floorMod:(II)I
      83: istore        4
      85: goto          35
      88: iload         4
      90: ireturn

  private void traverse(javafx.scene.input.KeyEvent, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getNode:()Ljavafx/scene/Node;
       4: checkcast     #31                 // class javafx/scene/control/ToggleButton
       7: astore_3
       8: aload_3
       9: invokevirtual #32                 // Method javafx/scene/control/ToggleButton.getToggleGroup:()Ljavafx/scene/control/ToggleGroup;
      12: astore        4
      14: aload         4
      16: ifnonnull     24
      19: aload_1
      20: invokevirtual #33                 // Method javafx/scene/input/KeyEvent.consume:()V
      23: return
      24: aload         4
      26: invokevirtual #34                 // Method javafx/scene/control/ToggleGroup.getToggles:()Ljavafx/collections/ObservableList;
      29: astore        5
      31: aload         5
      33: aload_3
      34: invokeinterface #35,  2           // InterfaceMethod javafx/collections/ObservableList.indexOf:(Ljava/lang/Object;)I
      39: istore        6
      41: aload_0
      42: aload_2
      43: aload_3
      44: invokevirtual #36                 // Method javafx/scene/control/ToggleButton.getEffectiveNodeOrientation:()Ljavafx/geometry/NodeOrientation;
      47: invokespecial #37                 // Method traversingToNext:(Ljava/lang/String;Ljavafx/geometry/NodeOrientation;)Z
      50: istore        7
      52: invokestatic  #38                 // Method com/sun/javafx/scene/control/skin/Utils.isTwoLevelFocus:()Z
      55: ifeq          61
      58: goto          175
      61: iload         7
      63: ifeq          122
      66: aload_0
      67: aload         5
      69: iload         6
      71: invokespecial #39                 // Method nextToggleIndex:(Ljavafx/collections/ObservableList;I)I
      74: istore        8
      76: iload         8
      78: iload         6
      80: if_icmpne     86
      83: goto          119
      86: aload         5
      88: iload         8
      90: invokeinterface #25,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      95: checkcast     #26                 // class javafx/scene/control/Toggle
      98: astore        9
     100: aload         4
     102: aload         9
     104: invokevirtual #40                 // Method javafx/scene/control/ToggleGroup.selectToggle:(Ljavafx/scene/control/Toggle;)V
     107: aload         9
     109: checkcast     #41                 // class javafx/scene/control/Control
     112: invokevirtual #42                 // Method javafx/scene/control/Control.requestFocus:()V
     115: aload_1
     116: invokevirtual #33                 // Method javafx/scene/input/KeyEvent.consume:()V
     119: goto          175
     122: aload_0
     123: aload         5
     125: iload         6
     127: invokespecial #43                 // Method previousToggleIndex:(Ljavafx/collections/ObservableList;I)I
     130: istore        8
     132: iload         8
     134: iload         6
     136: if_icmpne     142
     139: goto          175
     142: aload         5
     144: iload         8
     146: invokeinterface #25,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     151: checkcast     #26                 // class javafx/scene/control/Toggle
     154: astore        9
     156: aload         4
     158: aload         9
     160: invokevirtual #40                 // Method javafx/scene/control/ToggleGroup.selectToggle:(Ljavafx/scene/control/Toggle;)V
     163: aload         9
     165: checkcast     #41                 // class javafx/scene/control/Control
     168: invokevirtual #42                 // Method javafx/scene/control/Control.requestFocus:()V
     171: aload_1
     172: invokevirtual #33                 // Method javafx/scene/input/KeyEvent.consume:()V
     175: return

  private boolean traversingToNext(java.lang.String, javafx.geometry.NodeOrientation);
    Code:
       0: aload_2
       1: getstatic     #44                 // Field javafx/geometry/NodeOrientation.RIGHT_TO_LEFT:Ljavafx/geometry/NodeOrientation;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_3
      13: aload_1
      14: astore        4
      16: iconst_m1
      17: istore        5
      19: aload         4
      21: invokevirtual #45                 // Method java/lang/String.hashCode:()I
      24: lookupswitch  { // 4
           -1226903242: 68
             254673449: 100
             491884861: 116
            1761126984: 84
               default: 129
          }
      68: aload         4
      70: ldc           #46                 // String ToggleNext-Right
      72: invokevirtual #47                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          129
      78: iconst_0
      79: istore        5
      81: goto          129
      84: aload         4
      86: ldc           #48                 // String ToggleNext-Down
      88: invokevirtual #47                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          129
      94: iconst_1
      95: istore        5
      97: goto          129
     100: aload         4
     102: ldc           #49                 // String TogglePrevious-Left
     104: invokevirtual #47                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     107: ifeq          129
     110: iconst_2
     111: istore        5
     113: goto          129
     116: aload         4
     118: ldc           #50                 // String TogglePrevious-Up
     120: invokevirtual #47                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     123: ifeq          129
     126: iconst_3
     127: istore        5
     129: iload         5
     131: tableswitch   { // 0 to 3
                     0: 160
                     1: 170
                     2: 172
                     3: 182
               default: 184
          }
     160: iload_3
     161: ifeq          168
     164: iconst_0
     165: goto          169
     168: iconst_1
     169: ireturn
     170: iconst_1
     171: ireturn
     172: iload_3
     173: ifeq          180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: ireturn
     182: iconst_0
     183: ireturn
     184: new           #51                 // class java/lang/IllegalArgumentException
     187: dup
     188: ldc           #52                 // String Not a toggle action
     190: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     193: athrow

  private void lambda$new$3(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #50                 // String TogglePrevious-Up
       4: invokespecial #54                 // Method traverse:(Ljavafx/scene/input/KeyEvent;Ljava/lang/String;)V
       7: return

  private void lambda$new$2(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #48                 // String ToggleNext-Down
       4: invokespecial #54                 // Method traverse:(Ljavafx/scene/input/KeyEvent;Ljava/lang/String;)V
       7: return

  private void lambda$new$1(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #49                 // String TogglePrevious-Left
       4: invokespecial #54                 // Method traverse:(Ljavafx/scene/input/KeyEvent;Ljava/lang/String;)V
       7: return

  private void lambda$new$0(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #46                 // String ToggleNext-Right
       4: invokespecial #54                 // Method traverse:(Ljavafx/scene/input/KeyEvent;Ljava/lang/String;)V
       7: return
}
