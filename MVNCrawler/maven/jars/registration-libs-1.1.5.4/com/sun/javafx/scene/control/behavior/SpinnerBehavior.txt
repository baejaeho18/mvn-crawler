Compiled from "SpinnerBehavior.java"
public class com.sun.javafx.scene.control.behavior.SpinnerBehavior<T> extends com.sun.javafx.scene.control.behavior.BehaviorBase<javafx.scene.control.Spinner<T>> {
  private static final double INITIAL_DURATION_MS;

  private final com.sun.javafx.scene.control.inputmap.InputMap<javafx.scene.control.Spinner<T>> spinnerInputMap;

  private static final int STEP_AMOUNT;

  private boolean isIncrementing;

  private javafx.animation.Timeline timeline;

  final javafx.event.EventHandler<javafx.event.ActionEvent> spinningKeyFrameEventHandler;

  public com.sun.javafx.scene.control.behavior.SpinnerBehavior(javafx.scene.control.Spinner<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/sun/javafx/scene/control/behavior/BehaviorBase."<init>":(Ljavafx/scene/Node;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field isIncrementing:Z
      10: aload_0
      11: aload_0
      12: invokedynamic #3,  0              // InvokeDynamic #0:handle:(Lcom/sun/javafx/scene/control/behavior/SpinnerBehavior;)Ljavafx/event/EventHandler;
      17: putfield      #4                  // Field spinningKeyFrameEventHandler:Ljavafx/event/EventHandler;
      20: aload_0
      21: aload_0
      22: invokevirtual #5                  // Method createInputMap:()Lcom/sun/javafx/scene/control/inputmap/InputMap;
      25: putfield      #6                  // Field spinnerInputMap:Lcom/sun/javafx/scene/control/inputmap/InputMap;
      28: aload_0
      29: aload_0
      30: getfield      #6                  // Field spinnerInputMap:Lcom/sun/javafx/scene/control/inputmap/InputMap;
      33: iconst_4
      34: anewarray     #7                  // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
      37: dup
      38: iconst_0
      39: new           #8                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      42: dup
      43: getstatic     #9                  // Field javafx/scene/input/KeyCode.UP:Ljavafx/scene/input/KeyCode;
      46: getstatic     #10                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      49: aload_0
      50: invokedynamic #11,  0             // InvokeDynamic #1:handle:(Lcom/sun/javafx/scene/control/behavior/SpinnerBehavior;)Ljavafx/event/EventHandler;
      55: invokespecial #12                 // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      58: aastore
      59: dup
      60: iconst_1
      61: new           #8                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      64: dup
      65: getstatic     #13                 // Field javafx/scene/input/KeyCode.RIGHT:Ljavafx/scene/input/KeyCode;
      68: getstatic     #10                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      71: aload_0
      72: invokedynamic #14,  0             // InvokeDynamic #2:handle:(Lcom/sun/javafx/scene/control/behavior/SpinnerBehavior;)Ljavafx/event/EventHandler;
      77: invokespecial #12                 // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      80: aastore
      81: dup
      82: iconst_2
      83: new           #8                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
      86: dup
      87: getstatic     #15                 // Field javafx/scene/input/KeyCode.LEFT:Ljavafx/scene/input/KeyCode;
      90: getstatic     #10                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
      93: aload_0
      94: invokedynamic #16,  0             // InvokeDynamic #3:handle:(Lcom/sun/javafx/scene/control/behavior/SpinnerBehavior;)Ljavafx/event/EventHandler;
      99: invokespecial #12                 // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
     102: aastore
     103: dup
     104: iconst_3
     105: new           #8                  // class com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping
     108: dup
     109: getstatic     #17                 // Field javafx/scene/input/KeyCode.DOWN:Ljavafx/scene/input/KeyCode;
     112: getstatic     #10                 // Field javafx/scene/input/KeyEvent.KEY_PRESSED:Ljavafx/event/EventType;
     115: aload_0
     116: invokedynamic #18,  0             // InvokeDynamic #4:handle:(Lcom/sun/javafx/scene/control/behavior/SpinnerBehavior;)Ljavafx/event/EventHandler;
     121: invokespecial #12                 // Method com/sun/javafx/scene/control/inputmap/InputMap$KeyMapping."<init>":(Ljavafx/scene/input/KeyCode;Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
     124: aastore
     125: invokevirtual #19                 // Method addDefaultMapping:(Lcom/sun/javafx/scene/control/inputmap/InputMap;[Lcom/sun/javafx/scene/control/inputmap/InputMap$Mapping;)V
     128: return

  public com.sun.javafx.scene.control.inputmap.InputMap<javafx.scene.control.Spinner<T>> getInputMap();
    Code:
       0: aload_0
       1: getfield      #6                  // Field spinnerInputMap:Lcom/sun/javafx/scene/control/inputmap/InputMap;
       4: areturn

  public void increment(int);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNode:()Ljavafx/scene/Node;
       4: checkcast     #21                 // class javafx/scene/control/Spinner
       7: iload_1
       8: invokevirtual #22                 // Method javafx/scene/control/Spinner.increment:(I)V
      11: return

  public void decrement(int);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNode:()Ljavafx/scene/Node;
       4: checkcast     #21                 // class javafx/scene/control/Spinner
       7: iload_1
       8: invokevirtual #23                 // Method javafx/scene/control/Spinner.decrement:(I)V
      11: return

  public void startSpinning(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field isIncrementing:Z
       5: aload_0
       6: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
       9: ifnull        19
      12: aload_0
      13: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
      16: invokevirtual #25                 // Method javafx/animation/Timeline.stop:()V
      19: aload_0
      20: new           #26                 // class javafx/animation/Timeline
      23: dup
      24: invokespecial #27                 // Method javafx/animation/Timeline."<init>":()V
      27: putfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
      30: aload_0
      31: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
      34: iconst_m1
      35: invokevirtual #28                 // Method javafx/animation/Timeline.setCycleCount:(I)V
      38: aload_0
      39: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
      42: aload_0
      43: invokevirtual #20                 // Method getNode:()Ljavafx/scene/Node;
      46: checkcast     #21                 // class javafx/scene/control/Spinner
      49: invokevirtual #29                 // Method javafx/scene/control/Spinner.getInitialDelay:()Ljavafx/util/Duration;
      52: invokevirtual #30                 // Method javafx/animation/Timeline.setDelay:(Ljavafx/util/Duration;)V
      55: new           #31                 // class javafx/animation/KeyFrame
      58: dup
      59: getstatic     #32                 // Field javafx/util/Duration.ZERO:Ljavafx/util/Duration;
      62: aload_0
      63: getfield      #4                  // Field spinningKeyFrameEventHandler:Ljavafx/event/EventHandler;
      66: iconst_0
      67: anewarray     #33                 // class javafx/animation/KeyValue
      70: invokespecial #34                 // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;Ljavafx/event/EventHandler;[Ljavafx/animation/KeyValue;)V
      73: astore_2
      74: new           #31                 // class javafx/animation/KeyFrame
      77: dup
      78: aload_0
      79: invokevirtual #20                 // Method getNode:()Ljavafx/scene/Node;
      82: checkcast     #21                 // class javafx/scene/control/Spinner
      85: invokevirtual #35                 // Method javafx/scene/control/Spinner.getRepeatDelay:()Ljavafx/util/Duration;
      88: iconst_0
      89: anewarray     #33                 // class javafx/animation/KeyValue
      92: invokespecial #36                 // Method javafx/animation/KeyFrame."<init>":(Ljavafx/util/Duration;[Ljavafx/animation/KeyValue;)V
      95: astore_3
      96: aload_0
      97: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
     100: invokevirtual #37                 // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
     103: iconst_2
     104: anewarray     #31                 // class javafx/animation/KeyFrame
     107: dup
     108: iconst_0
     109: aload_2
     110: aastore
     111: dup
     112: iconst_1
     113: aload_3
     114: aastore
     115: invokeinterface #38,  2           // InterfaceMethod javafx/collections/ObservableList.setAll:([Ljava/lang/Object;)Z
     120: pop
     121: aload_0
     122: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
     125: invokevirtual #39                 // Method javafx/animation/Timeline.playFromStart:()V
     128: aload_0
     129: getfield      #4                  // Field spinningKeyFrameEventHandler:Ljavafx/event/EventHandler;
     132: aconst_null
     133: invokeinterface #40,  2           // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
     138: return

  public void stopSpinning();
    Code:
       0: aload_0
       1: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
       4: ifnull        14
       7: aload_0
       8: getfield      #24                 // Field timeline:Ljavafx/animation/Timeline;
      11: invokevirtual #25                 // Method javafx/animation/Timeline.stop:()V
      14: return

  private boolean arrowsAreVertical();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNode:()Ljavafx/scene/Node;
       4: checkcast     #21                 // class javafx/scene/control/Spinner
       7: invokevirtual #41                 // Method javafx/scene/control/Spinner.getStyleClass:()Ljavafx/collections/ObservableList;
      10: astore_1
      11: aload_1
      12: ldc           #42                 // String arrows-on-left-horizontal
      14: invokeinterface #43,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      19: ifne          48
      22: aload_1
      23: ldc           #44                 // String arrows-on-right-horizontal
      25: invokeinterface #43,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      30: ifne          48
      33: aload_1
      34: ldc           #45                 // String split-arrows-horizontal
      36: invokeinterface #43,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  private void lambda$new$4(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method arrowsAreVertical:()Z
       4: ifeq          15
       7: aload_0
       8: iconst_1
       9: invokevirtual #47                 // Method decrement:(I)V
      12: goto          19
      15: aload_1
      16: invokestatic  #48                 // Method com/sun/javafx/scene/control/behavior/FocusTraversalInputMap.traverseDown:(Ljavafx/scene/input/KeyEvent;)V
      19: return

  private void lambda$new$3(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method arrowsAreVertical:()Z
       4: ifne          15
       7: aload_0
       8: iconst_1
       9: invokevirtual #47                 // Method decrement:(I)V
      12: goto          19
      15: aload_1
      16: invokestatic  #49                 // Method com/sun/javafx/scene/control/behavior/FocusTraversalInputMap.traverseLeft:(Ljavafx/scene/input/KeyEvent;)V
      19: return

  private void lambda$new$2(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method arrowsAreVertical:()Z
       4: ifne          15
       7: aload_0
       8: iconst_1
       9: invokevirtual #50                 // Method increment:(I)V
      12: goto          19
      15: aload_1
      16: invokestatic  #51                 // Method com/sun/javafx/scene/control/behavior/FocusTraversalInputMap.traverseRight:(Ljavafx/scene/input/KeyEvent;)V
      19: return

  private void lambda$new$1(javafx.scene.input.KeyEvent);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method arrowsAreVertical:()Z
       4: ifeq          15
       7: aload_0
       8: iconst_1
       9: invokevirtual #50                 // Method increment:(I)V
      12: goto          19
      15: aload_1
      16: invokestatic  #52                 // Method com/sun/javafx/scene/control/behavior/FocusTraversalInputMap.traverseUp:(Ljavafx/scene/input/KeyEvent;)V
      19: return

  private void lambda$new$0(javafx.event.ActionEvent);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getNode:()Ljavafx/scene/Node;
       4: checkcast     #21                 // class javafx/scene/control/Spinner
       7: invokevirtual #53                 // Method javafx/scene/control/Spinner.getValueFactory:()Ljavafx/scene/control/SpinnerValueFactory;
      10: astore_2
      11: aload_2
      12: ifnonnull     16
      15: return
      16: aload_0
      17: getfield      #2                  // Field isIncrementing:Z
      20: ifeq          31
      23: aload_0
      24: iconst_1
      25: invokevirtual #50                 // Method increment:(I)V
      28: goto          36
      31: aload_0
      32: iconst_1
      33: invokevirtual #47                 // Method decrement:(I)V
      36: return
}
