Compiled from "LambdaMultiplePropertyChangeListenerHandler.java"
public final class com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler {
  private final java.util.Map<javafx.beans.value.ObservableValue<?>, java.util.function.Consumer<javafx.beans.value.ObservableValue<?>>> propertyReferenceMap;

  private final javafx.beans.value.ChangeListener<java.lang.Object> propertyChangedListener;

  private final javafx.beans.value.WeakChangeListener<java.lang.Object> weakPropertyChangedListener;

  private static final java.util.function.Consumer<javafx.beans.value.ObservableValue<?>> EMPTY_CONSUMER;

  public com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
      15: aload_0
      16: aload_0
      17: invokedynamic #5,  0              // InvokeDynamic #0:changed:(Lcom/sun/javafx/scene/control/LambdaMultiplePropertyChangeListenerHandler;)Ljavafx/beans/value/ChangeListener;
      22: putfield      #6                  // Field propertyChangedListener:Ljavafx/beans/value/ChangeListener;
      25: aload_0
      26: new           #7                  // class javafx/beans/value/WeakChangeListener
      29: dup
      30: aload_0
      31: getfield      #6                  // Field propertyChangedListener:Ljavafx/beans/value/ChangeListener;
      34: invokespecial #8                  // Method javafx/beans/value/WeakChangeListener."<init>":(Ljavafx/beans/value/ChangeListener;)V
      37: putfield      #9                  // Field weakPropertyChangedListener:Ljavafx/beans/value/WeakChangeListener;
      40: return

  public final void registerChangeListener(javafx.beans.value.ObservableValue<?>, java.util.function.Consumer<javafx.beans.value.ObservableValue<?>>);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifne          28
      18: aload_1
      19: aload_0
      20: getfield      #9                  // Field weakPropertyChangedListener:Ljavafx/beans/value/WeakChangeListener;
      23: invokeinterface #11,  2           // InterfaceMethod javafx/beans/value/ObservableValue.addListener:(Ljavafx/beans/value/ChangeListener;)V
      28: aload_0
      29: getfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
      32: aload_1
      33: aload_2
      34: invokedynamic #12,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BiFunction;
      39: invokeinterface #13,  4           // InterfaceMethod java/util/Map.merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      44: pop
      45: return

  public final java.util.function.Consumer<javafx.beans.value.ObservableValue<?>> unregisterChangeListeners(javafx.beans.value.ObservableValue<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field weakPropertyChangedListener:Ljavafx/beans/value/WeakChangeListener;
       5: invokeinterface #14,  2           // InterfaceMethod javafx/beans/value/ObservableValue.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      10: aload_0
      11: getfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #15,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #16                 // class java/util/function/Consumer
      23: areturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_1
      25: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #21                 // class javafx/beans/value/ObservableValue
      33: astore_2
      34: aload_2
      35: aload_0
      36: getfield      #9                  // Field weakPropertyChangedListener:Ljavafx/beans/value/WeakChangeListener;
      39: invokeinterface #14,  2           // InterfaceMethod javafx/beans/value/ObservableValue.removeListener:(Ljavafx/beans/value/ChangeListener;)V
      44: goto          15
      47: aload_0
      48: getfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
      51: invokeinterface #22,  1           // InterfaceMethod java/util/Map.clear:()V
      56: return

  private void lambda$new$1(javafx.beans.value.ObservableValue, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertyReferenceMap:Ljava/util/Map;
       4: aload_1
       5: getstatic     #23                 // Field EMPTY_CONSUMER:Ljava/util/function/Consumer;
       8: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class java/util/function/Consumer
      16: aload_1
      17: invokeinterface #25,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      22: return

  private static void lambda$static$0(javafx.beans.value.ObservableValue);
    Code:
       0: return

  static {};
    Code:
       0: invokedynamic #26,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
       5: putstatic     #23                 // Field EMPTY_CONSUMER:Ljava/util/function/Consumer;
       8: return
}
