Compiled from "InputMap.java"
public class com.sun.javafx.scene.control.inputmap.InputMap<N extends javafx.scene.Node> implements javafx.event.EventHandler<javafx.event.Event> {
  private final N node;

  private final javafx.collections.ObservableList<com.sun.javafx.scene.control.inputmap.InputMap<N>> childInputMaps;

  private final javafx.collections.ObservableList<com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>> mappings;

  private final java.util.Map<javafx.event.EventType<?>, java.util.List<javafx.event.EventHandler<? super javafx.event.Event>>> installedEventHandlers;

  private final java.util.Map<javafx.event.EventType, java.util.List<com.sun.javafx.scene.control.inputmap.InputMap$Mapping>> eventTypeMappings;

  private javafx.beans.property.ReadOnlyObjectWrapper<com.sun.javafx.scene.control.inputmap.InputMap<N>> parentInputMap;

  private javafx.beans.property.ObjectProperty<java.util.function.Predicate<? extends javafx.event.Event>> interceptor;

  public com.sun.javafx.scene.control.inputmap.InputMap(N);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class com/sun/javafx/scene/control/inputmap/InputMap$1
       8: dup
       9: aload_0
      10: aload_0
      11: ldc           #4                  // String parentInputMap
      13: invokespecial #5                  // Method com/sun/javafx/scene/control/inputmap/InputMap$1."<init>":(Lcom/sun/javafx/scene/control/inputmap/InputMap;Ljava/lang/Object;Ljava/lang/String;)V
      16: putfield      #6                  // Field parentInputMap:Ljavafx/beans/property/ReadOnlyObjectWrapper;
      19: aload_0
      20: new           #7                  // class javafx/beans/property/SimpleObjectProperty
      23: dup
      24: aload_0
      25: ldc           #8                  // String interceptor
      27: invokespecial #9                  // Method javafx/beans/property/SimpleObjectProperty."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      30: putfield      #10                 // Field interceptor:Ljavafx/beans/property/ObjectProperty;
      33: aload_1
      34: ifnonnull     47
      37: new           #11                 // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #12                 // String Node can not be null
      43: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aload_1
      49: putfield      #14                 // Field node:Ljavafx/scene/Node;
      52: aload_0
      53: new           #15                 // class java/util/HashMap
      56: dup
      57: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      60: putfield      #17                 // Field eventTypeMappings:Ljava/util/Map;
      63: aload_0
      64: new           #15                 // class java/util/HashMap
      67: dup
      68: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      71: putfield      #18                 // Field installedEventHandlers:Ljava/util/Map;
      74: aload_0
      75: invokestatic  #19                 // Method javafx/collections/FXCollections.observableArrayList:()Ljavafx/collections/ObservableList;
      78: putfield      #20                 // Field mappings:Ljavafx/collections/ObservableList;
      81: aload_0
      82: getfield      #20                 // Field mappings:Ljavafx/collections/ObservableList;
      85: aload_0
      86: invokedynamic #21,  0             // InvokeDynamic #0:onChanged:(Lcom/sun/javafx/scene/control/inputmap/InputMap;)Ljavafx/collections/ListChangeListener;
      91: invokeinterface #22,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
      96: aload_0
      97: invokestatic  #19                 // Method javafx/collections/FXCollections.observableArrayList:()Ljavafx/collections/ObservableList;
     100: putfield      #23                 // Field childInputMaps:Ljavafx/collections/ObservableList;
     103: aload_0
     104: getfield      #23                 // Field childInputMaps:Ljavafx/collections/ObservableList;
     107: aload_0
     108: invokedynamic #24,  0             // InvokeDynamic #1:onChanged:(Lcom/sun/javafx/scene/control/inputmap/InputMap;)Ljavafx/collections/ListChangeListener;
     113: invokeinterface #22,  2           // InterfaceMethod javafx/collections/ObservableList.addListener:(Ljavafx/collections/ListChangeListener;)V
     118: return

  private final void setParentInputMap(com.sun.javafx.scene.control.inputmap.InputMap<N>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field parentInputMap:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: aload_1
       5: invokevirtual #25                 // Method javafx/beans/property/ReadOnlyObjectWrapper.set:(Ljava/lang/Object;)V
       8: return

  private final com.sun.javafx.scene.control.inputmap.InputMap<N> getParentInputMap();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parentInputMap:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #26                 // Method javafx/beans/property/ReadOnlyObjectWrapper.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
      10: areturn

  private final javafx.beans.property.ReadOnlyObjectProperty<com.sun.javafx.scene.control.inputmap.InputMap<N>> parentInputMapProperty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parentInputMap:Ljavafx/beans/property/ReadOnlyObjectWrapper;
       4: invokevirtual #28                 // Method javafx/beans/property/ReadOnlyObjectWrapper.getReadOnlyProperty:()Ljavafx/beans/property/ReadOnlyObjectProperty;
       7: areturn

  public final java.util.function.Predicate<? extends javafx.event.Event> getInterceptor();
    Code:
       0: aload_0
       1: getfield      #10                 // Field interceptor:Ljavafx/beans/property/ObjectProperty;
       4: invokevirtual #29                 // Method javafx/beans/property/ObjectProperty.get:()Ljava/lang/Object;
       7: checkcast     #30                 // class java/util/function/Predicate
      10: areturn

  public final void setInterceptor(java.util.function.Predicate<? extends javafx.event.Event>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field interceptor:Ljavafx/beans/property/ObjectProperty;
       4: aload_1
       5: invokevirtual #31                 // Method javafx/beans/property/ObjectProperty.set:(Ljava/lang/Object;)V
       8: return

  public final javafx.beans.property.ObjectProperty<java.util.function.Predicate<? extends javafx.event.Event>> interceptorProperty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field interceptor:Ljavafx/beans/property/ObjectProperty;
       4: areturn

  public final N getNode();
    Code:
       0: aload_0
       1: getfield      #14                 // Field node:Ljavafx/scene/Node;
       4: areturn

  public javafx.collections.ObservableList<com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>> getMappings();
    Code:
       0: aload_0
       1: getfield      #20                 // Field mappings:Ljavafx/collections/ObservableList;
       4: areturn

  public javafx.collections.ObservableList<com.sun.javafx.scene.control.inputmap.InputMap<N>> getChildInputMaps();
    Code:
       0: aload_0
       1: getfield      #23                 // Field childInputMaps:Ljavafx/collections/ObservableList;
       4: areturn

  public void dispose();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
       4: invokeinterface #33,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          36
      19: aload_1
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
      28: astore_2
      29: aload_2
      30: invokevirtual #36                 // Method dispose:()V
      33: goto          10
      36: aload_0
      37: invokespecial #37                 // Method removeAllEventHandlers:()V
      40: aload_0
      41: invokevirtual #38                 // Method getMappings:()Ljavafx/collections/ObservableList;
      44: invokeinterface #39,  1           // InterfaceMethod javafx/collections/ObservableList.clear:()V
      49: return

  public void handle(javafx.event.Event);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #40                 // Method javafx/event/Event.isConsumed:()Z
       8: ifeq          12
      11: return
      12: aload_0
      13: aload_1
      14: iconst_1
      15: invokespecial #41                 // Method lookup:(Ljavafx/event/Event;Z)Ljava/util/List;
      18: astore_2
      19: aload_2
      20: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          91
      35: aload_3
      36: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
      44: astore        4
      46: aload         4
      48: invokevirtual #44                 // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.getEventHandler:()Ljavafx/event/EventHandler;
      51: astore        5
      53: aload         5
      55: ifnull        66
      58: aload         5
      60: aload_1
      61: invokeinterface #45,  2           // InterfaceMethod javafx/event/EventHandler.handle:(Ljavafx/event/Event;)V
      66: aload         4
      68: invokevirtual #46                 // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.isAutoConsume:()Z
      71: ifeq          78
      74: aload_1
      75: invokevirtual #47                 // Method javafx/event/Event.consume:()V
      78: aload_1
      79: invokevirtual #40                 // Method javafx/event/Event.isConsumed:()Z
      82: ifeq          88
      85: goto          91
      88: goto          26
      91: return

  public java.util.Optional<com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>> lookupMapping(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #48                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       7: areturn
       8: aload_0
       9: aload_1
      10: invokespecial #49                 // Method lookupMappingKey:(Ljava/lang/Object;)Ljava/util/List;
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_0
      18: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
      21: invokeinterface #50,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
      26: if_icmpge     68
      29: aload_0
      30: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
      33: iload_3
      34: invokeinterface #51,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
      39: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
      42: astore        4
      44: aload         4
      46: aload_1
      47: invokespecial #49                 // Method lookupMappingKey:(Ljava/lang/Object;)Ljava/util/List;
      50: astore        5
      52: aload_2
      53: iconst_0
      54: aload         5
      56: invokeinterface #52,  3           // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
      61: pop
      62: iinc          3, 1
      65: goto          16
      68: aload_2
      69: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
      74: ifle          93
      77: aload_2
      78: iconst_0
      79: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      84: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
      87: invokestatic  #55                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      90: goto          96
      93: invokestatic  #48                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      96: areturn

  private java.util.List<com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>> lookupMappingKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getMappings:()Ljavafx/collections/ObservableList;
       4: invokeinterface #56,  1           // InterfaceMethod javafx/collections/ObservableList.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #57,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      14: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: aload_1
      20: invokedynamic #59,  0             // InvokeDynamic #3:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      25: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      30: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      33: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      38: checkcast     #62                 // class java/util/List
      41: areturn

  private java.util.List<com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>> lookup(javafx.event.Event, boolean);
    Code:
       0: iload_2
       1: ifeq          22
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #63                 // Method getInterceptor:()Ljava/util/function/Predicate;
      10: invokespecial #64                 // Method testInterceptor:(Ljavafx/event/Event;Ljava/util/function/Predicate;)Z
      13: istore_3
      14: iload_3
      15: ifeq          22
      18: invokestatic  #65                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      21: areturn
      22: new           #66                 // class java/util/ArrayList
      25: dup
      26: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      29: astore_3
      30: iconst_0
      31: istore        4
      33: aload_0
      34: aload_1
      35: iload         4
      37: invokespecial #68                 // Method lookupMappingAndSpecificity:(Ljavafx/event/Event;I)Ljava/util/List;
      40: astore        5
      42: aload         5
      44: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      49: ifne          109
      52: aload         5
      54: iconst_0
      55: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      60: checkcast     #70                 // class javafx/util/Pair
      63: invokevirtual #71                 // Method javafx/util/Pair.getKey:()Ljava/lang/Object;
      66: checkcast     #72                 // class java/lang/Integer
      69: invokevirtual #73                 // Method java/lang/Integer.intValue:()I
      72: istore        4
      74: aload_3
      75: aload         5
      77: invokeinterface #74,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      82: invokedynamic #75,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      87: invokeinterface #76,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      92: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      95: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     100: checkcast     #77                 // class java/util/Collection
     103: invokeinterface #78,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     108: pop
     109: iconst_0
     110: istore        6
     112: iload         6
     114: aload_0
     115: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
     118: invokeinterface #50,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     123: if_icmpge     161
     126: aload_0
     127: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
     130: iload         6
     132: invokeinterface #51,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     137: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
     140: astore        7
     142: aload_0
     143: aload         7
     145: aload_1
     146: iload_2
     147: iload         4
     149: aload_3
     150: invokespecial #79                 // Method scanRecursively:(Lcom/sun/javafx/scene/control/inputmap/InputMap;Ljavafx/event/Event;ZILjava/util/List;)I
     153: istore        4
     155: iinc          6, 1
     158: goto          112
     161: aload_3
     162: areturn

  private int scanRecursively(com.sun.javafx.scene.control.inputmap.InputMap<?>, javafx.event.Event, boolean, int, java.util.List<com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>>);
    Code:
       0: iload_3
       1: ifeq          23
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokevirtual #63                 // Method getInterceptor:()Ljava/util/function/Predicate;
      10: invokespecial #64                 // Method testInterceptor:(Ljavafx/event/Event;Ljava/util/function/Predicate;)Z
      13: istore        6
      15: iload         6
      17: ifeq          23
      20: iload         4
      22: ireturn
      23: aload_1
      24: aload_2
      25: iload         4
      27: invokespecial #68                 // Method lookupMappingAndSpecificity:(Ljavafx/event/Event;I)Ljava/util/List;
      30: astore        6
      32: aload         6
      34: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      39: ifne          143
      42: aload         6
      44: iconst_0
      45: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      50: checkcast     #70                 // class javafx/util/Pair
      53: invokevirtual #71                 // Method javafx/util/Pair.getKey:()Ljava/lang/Object;
      56: checkcast     #72                 // class java/lang/Integer
      59: invokevirtual #73                 // Method java/lang/Integer.intValue:()I
      62: istore        7
      64: aload         6
      66: invokeinterface #74,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      71: invokedynamic #80,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      76: invokeinterface #76,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      81: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      84: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      89: checkcast     #62                 // class java/util/List
      92: astore        8
      94: iload         7
      96: iload         4
      98: if_icmpne     115
     101: aload         5
     103: iconst_0
     104: aload         8
     106: invokeinterface #52,  3           // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
     111: pop
     112: goto          143
     115: iload         7
     117: iload         4
     119: if_icmple     143
     122: aload         5
     124: invokeinterface #81,  1           // InterfaceMethod java/util/List.clear:()V
     129: iload         7
     131: istore        4
     133: aload         5
     135: aload         8
     137: invokeinterface #78,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     142: pop
     143: iconst_0
     144: istore        7
     146: iload         7
     148: aload_1
     149: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
     152: invokeinterface #50,  1           // InterfaceMethod javafx/collections/ObservableList.size:()I
     157: if_icmpge     192
     160: aload_0
     161: aload_1
     162: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
     165: iload         7
     167: invokeinterface #51,  2           // InterfaceMethod javafx/collections/ObservableList.get:(I)Ljava/lang/Object;
     172: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
     175: aload_2
     176: iload_3
     177: iload         4
     179: aload         5
     181: invokespecial #79                 // Method scanRecursively:(Lcom/sun/javafx/scene/control/inputmap/InputMap;Ljavafx/event/Event;ZILjava/util/List;)I
     184: istore        4
     186: iinc          7, 1
     189: goto          146
     192: iload         4
     194: ireturn

  private com.sun.javafx.scene.control.inputmap.InputMap<N> getRootInputMap();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnonnull     9
       6: goto          26
       9: aload_1
      10: invokespecial #82                 // Method getParentInputMap:()Lcom/sun/javafx/scene/control/inputmap/InputMap;
      13: astore_2
      14: aload_2
      15: ifnonnull     21
      18: goto          26
      21: aload_2
      22: astore_1
      23: goto          2
      26: aload_1
      27: areturn

  private void addMapping(com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method getRootInputMap:()Lcom/sun/javafx/scene/control/inputmap/InputMap;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #84                 // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.access$100:(Lcom/sun/javafx/scene/control/inputmap/InputMap$Mapping;)Ljavafx/event/EventType;
      10: invokespecial #85                 // Method addEventHandler:(Ljavafx/event/EventType;)V
      13: aload_1
      14: invokevirtual #86                 // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.getEventType:()Ljavafx/event/EventType;
      17: astore_3
      18: aload_0
      19: getfield      #17                 // Field eventTypeMappings:Ljava/util/Map;
      22: aload_3
      23: invokedynamic #87,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      28: invokeinterface #88,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      33: checkcast     #62                 // class java/util/List
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: return

  private void removeMapping(com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>);
    Code:
       0: aload_1
       1: invokevirtual #86                 // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.getEventType:()Ljavafx/event/EventType;
       4: astore_2
       5: aload_0
       6: getfield      #17                 // Field eventTypeMappings:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #90,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          40
      18: aload_0
      19: getfield      #17                 // Field eventTypeMappings:Ljava/util/Map;
      22: aload_2
      23: invokeinterface #91,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #62                 // class java/util/List
      31: astore_3
      32: aload_3
      33: aload_1
      34: invokeinterface #92,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      39: pop
      40: return

  private void addEventHandler(javafx.event.EventType);
    Code:
       0: aload_0
       1: getfield      #18                 // Field installedEventHandlers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #93,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      10: invokeinterface #88,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #62                 // class java/util/List
      18: astore_2
      19: aload_0
      20: invokedynamic #94,  0             // InvokeDynamic #8:handle:(Lcom/sun/javafx/scene/control/inputmap/InputMap;)Ljavafx/event/EventHandler;
      25: astore_3
      26: aload_2
      27: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      32: ifeq          44
      35: aload_0
      36: getfield      #14                 // Field node:Ljavafx/scene/Node;
      39: aload_1
      40: aload_3
      41: invokevirtual #95                 // Method javafx/scene/Node.addEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      44: aload_2
      45: aload_3
      46: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: return

  private void removeAllEventHandlers();
    Code:
       0: aload_0
       1: getfield      #18                 // Field installedEventHandlers:Ljava/util/Map;
       4: invokeinterface #96,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #97,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          94
      24: aload_1
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #98                 // class javafx/event/EventType
      33: astore_2
      34: aload_0
      35: getfield      #18                 // Field installedEventHandlers:Ljava/util/Map;
      38: aload_2
      39: invokeinterface #91,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #62                 // class java/util/List
      47: astore_3
      48: aload_3
      49: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      54: astore        4
      56: aload         4
      58: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          91
      66: aload         4
      68: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #99                 // class javafx/event/EventHandler
      76: astore        5
      78: aload_0
      79: getfield      #14                 // Field node:Ljavafx/scene/Node;
      82: aload_2
      83: aload         5
      85: invokevirtual #100                // Method javafx/scene/Node.removeEventHandler:(Ljavafx/event/EventType;Ljavafx/event/EventHandler;)V
      88: goto          56
      91: goto          15
      94: return

  private void reprocessAllMappings();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method removeAllEventHandlers:()V
       4: aload_0
       5: getfield      #20                 // Field mappings:Ljavafx/collections/ObservableList;
       8: invokeinterface #56,  1           // InterfaceMethod javafx/collections/ObservableList.stream:()Ljava/util/stream/Stream;
      13: aload_0
      14: invokedynamic #101,  0            // InvokeDynamic #9:accept:(Lcom/sun/javafx/scene/control/inputmap/InputMap;)Ljava/util/function/Consumer;
      19: invokeinterface #102,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      24: aload_0
      25: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
      28: invokeinterface #33,  1           // InterfaceMethod javafx/collections/ObservableList.iterator:()Ljava/util/Iterator;
      33: astore_1
      34: aload_1
      35: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          60
      43: aload_1
      44: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
      52: astore_2
      53: aload_2
      54: invokespecial #1                  // Method reprocessAllMappings:()V
      57: goto          34
      60: return

  private java.util.List<javafx.util.Pair<java.lang.Integer, com.sun.javafx.scene.control.inputmap.InputMap$Mapping<?>>> lookupMappingAndSpecificity(javafx.event.Event, int);
    Code:
       0: iload_2
       1: istore_3
       2: aload_0
       3: getfield      #17                 // Field eventTypeMappings:Ljava/util/Map;
       6: aload_1
       7: invokevirtual #103                // Method javafx/event/Event.getEventType:()Ljavafx/event/EventType;
      10: invokestatic  #65                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      13: invokeinterface #104,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #62                 // class java/util/List
      21: astore        4
      23: new           #66                 // class java/util/ArrayList
      26: dup
      27: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      30: astore        5
      32: aload         4
      34: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore        6
      41: aload         6
      43: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          179
      51: aload         6
      53: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
      61: astore        7
      63: aload         7
      65: invokevirtual #105                // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.isDisabled:()Z
      68: ifeq          74
      71: goto          41
      74: aload_0
      75: aload_1
      76: aload         7
      78: invokevirtual #106                // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.getInterceptor:()Ljava/util/function/Predicate;
      81: invokespecial #64                 // Method testInterceptor:(Ljavafx/event/Event;Ljava/util/function/Predicate;)Z
      84: istore        8
      86: iload         8
      88: ifeq          94
      91: goto          41
      94: aload         7
      96: aload_1
      97: invokevirtual #107                // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.getSpecificity:(Ljavafx/event/Event;)I
     100: istore        9
     102: iload         9
     104: ifle          138
     107: iload         9
     109: iload_3
     110: if_icmpne     138
     113: aload         5
     115: new           #70                 // class javafx/util/Pair
     118: dup
     119: iload         9
     121: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     124: aload         7
     126: invokespecial #109                // Method javafx/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     129: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     134: pop
     135: goto          176
     138: iload         9
     140: iload_3
     141: if_icmple     176
     144: aload         5
     146: invokeinterface #81,  1           // InterfaceMethod java/util/List.clear:()V
     151: aload         5
     153: new           #70                 // class javafx/util/Pair
     156: dup
     157: iload         9
     159: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     162: aload         7
     164: invokespecial #109                // Method javafx/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     167: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     172: pop
     173: iload         9
     175: istore_3
     176: goto          41
     179: aload         5
     181: areturn

  private boolean testInterceptor(javafx.event.Event, java.util.function.Predicate);
    Code:
       0: aload_2
       1: ifnull        18
       4: aload_2
       5: aload_1
       6: invokeinterface #110,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static java.util.List lambda$addEventHandler$7(javafx.event.EventType);
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  private static java.util.List lambda$addMapping$6(javafx.event.EventType);
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  private static com.sun.javafx.scene.control.inputmap.InputMap$Mapping lambda$scanRecursively$5(javafx.util.Pair);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method javafx/util/Pair.getValue:()Ljava/lang/Object;
       4: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
       7: areturn

  private static com.sun.javafx.scene.control.inputmap.InputMap$Mapping lambda$lookup$4(javafx.util.Pair);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method javafx/util/Pair.getValue:()Ljava/lang/Object;
       4: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
       7: areturn

  private static boolean lambda$lookupMappingKey$3(java.lang.Object, com.sun.javafx.scene.control.inputmap.InputMap$Mapping);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #112                // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.getMappingKey:()Ljava/lang/Object;
       5: invokevirtual #113                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static boolean lambda$lookupMappingKey$2(com.sun.javafx.scene.control.inputmap.InputMap$Mapping);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method com/sun/javafx/scene/control/inputmap/InputMap$Mapping.isDisabled:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void lambda$new$1(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #114                // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          162
       7: aload_1
       8: invokevirtual #115                // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
      11: ifeq          51
      14: aload_1
      15: invokevirtual #116                // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      18: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          51
      33: aload_2
      34: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
      42: astore_3
      43: aload_3
      44: aconst_null
      45: invokespecial #117                // Method setParentInputMap:(Lcom/sun/javafx/scene/control/inputmap/InputMap;)V
      48: goto          24
      51: aload_1
      52: invokevirtual #118                // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
      55: ifeq          0
      58: new           #66                 // class java/util/ArrayList
      61: dup
      62: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      65: astore_2
      66: aload_1
      67: invokevirtual #119                // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      70: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore_3
      76: aload_3
      77: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          129
      85: aload_3
      86: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #27                 // class com/sun/javafx/scene/control/inputmap/InputMap
      94: astore        4
      96: aload         4
      98: invokevirtual #120                // Method getNode:()Ljavafx/scene/Node;
     101: aload_0
     102: invokevirtual #120                // Method getNode:()Ljavafx/scene/Node;
     105: if_acmpeq     120
     108: aload_2
     109: aload         4
     111: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          126
     120: aload         4
     122: aload_0
     123: invokespecial #117                // Method setParentInputMap:(Lcom/sun/javafx/scene/control/inputmap/InputMap;)V
     126: goto          76
     129: aload_2
     130: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     135: ifne          159
     138: aload_0
     139: invokevirtual #32                 // Method getChildInputMaps:()Ljavafx/collections/ObservableList;
     142: aload_2
     143: invokeinterface #121,  2          // InterfaceMethod javafx/collections/ObservableList.removeAll:(Ljava/util/Collection;)Z
     148: pop
     149: new           #11                 // class java/lang/IllegalArgumentException
     152: dup
     153: ldc           #122                // String Child InputMap intances need to share a common Node object
     155: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: goto          0
     162: return

  private void lambda$new$0(javafx.collections.ListChangeListener$Change);
    Code:
       0: aload_1
       1: invokevirtual #114                // Method javafx/collections/ListChangeListener$Change.next:()Z
       4: ifeq          154
       7: aload_1
       8: invokevirtual #115                // Method javafx/collections/ListChangeListener$Change.wasRemoved:()Z
      11: ifeq          51
      14: aload_1
      15: invokevirtual #116                // Method javafx/collections/ListChangeListener$Change.getRemoved:()Ljava/util/List;
      18: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          51
      33: aload_2
      34: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
      42: astore_3
      43: aload_0
      44: aload_3
      45: invokespecial #123                // Method removeMapping:(Lcom/sun/javafx/scene/control/inputmap/InputMap$Mapping;)V
      48: goto          24
      51: aload_1
      52: invokevirtual #118                // Method javafx/collections/ListChangeListener$Change.wasAdded:()Z
      55: ifeq          0
      58: new           #66                 // class java/util/ArrayList
      61: dup
      62: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      65: astore_2
      66: aload_1
      67: invokevirtual #119                // Method javafx/collections/ListChangeListener$Change.getAddedSubList:()Ljava/util/List;
      70: invokeinterface #42,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore_3
      76: aload_3
      77: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          121
      85: aload_3
      86: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #43                 // class com/sun/javafx/scene/control/inputmap/InputMap$Mapping
      94: astore        4
      96: aload         4
      98: ifnonnull     112
     101: aload_2
     102: aconst_null
     103: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     108: pop
     109: goto          118
     112: aload_0
     113: aload         4
     115: invokespecial #124                // Method addMapping:(Lcom/sun/javafx/scene/control/inputmap/InputMap$Mapping;)V
     118: goto          76
     121: aload_2
     122: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     127: ifne          151
     130: aload_0
     131: invokevirtual #38                 // Method getMappings:()Ljavafx/collections/ObservableList;
     134: aload_2
     135: invokeinterface #121,  2          // InterfaceMethod javafx/collections/ObservableList.removeAll:(Ljava/util/Collection;)Z
     140: pop
     141: new           #11                 // class java/lang/IllegalArgumentException
     144: dup
     145: ldc           #125                // String Null mappings not permitted
     147: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: goto          0
     154: return

  static void access$000(com.sun.javafx.scene.control.inputmap.InputMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reprocessAllMappings:()V
       4: return
}
