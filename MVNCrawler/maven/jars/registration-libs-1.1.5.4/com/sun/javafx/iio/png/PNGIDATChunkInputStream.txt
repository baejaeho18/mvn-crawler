Compiled from "PNGIDATChunkInputStream.java"
public class com.sun.javafx.iio.png.PNGIDATChunkInputStream extends java.io.InputStream {
  static final int IDAT_TYPE;

  private java.io.DataInputStream source;

  private int numBytesAvailable;

  private boolean foundAllIDATChunks;

  private int nextChunkLength;

  private int nextChunkType;

  com.sun.javafx.iio.png.PNGIDATChunkInputStream(java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field numBytesAvailable:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field foundAllIDATChunks:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field nextChunkLength:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field nextChunkType:I
      24: iload_2
      25: ifge          38
      28: new           #6                  // class java/io/IOException
      31: dup
      32: ldc           #7                  // String Invalid chunk length
      34: invokespecial #8                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_1
      40: putfield      #9                  // Field source:Ljava/io/DataInputStream;
      43: aload_0
      44: iload_2
      45: putfield      #2                  // Field numBytesAvailable:I
      48: return

  private void nextChunk() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field foundAllIDATChunks:Z
       4: ifne          81
       7: aload_0
       8: getfield      #9                  // Field source:Ljava/io/DataInputStream;
      11: ldc2_w        #10                 // long 4l
      14: invokestatic  #12                 // Method com/sun/javafx/iio/common/ImageTools.skipFully:(Ljava/io/InputStream;J)V
      17: aload_0
      18: getfield      #9                  // Field source:Ljava/io/DataInputStream;
      21: invokevirtual #13                 // Method java/io/DataInputStream.readInt:()I
      24: istore_1
      25: iload_1
      26: ifge          39
      29: new           #6                  // class java/io/IOException
      32: dup
      33: ldc           #7                  // String Invalid chunk length
      35: invokespecial #8                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #9                  // Field source:Ljava/io/DataInputStream;
      43: invokevirtual #13                 // Method java/io/DataInputStream.readInt:()I
      46: istore_2
      47: iload_2
      48: ldc           #15                 // int 1229209940
      50: if_icmpne     66
      53: aload_0
      54: dup
      55: getfield      #2                  // Field numBytesAvailable:I
      58: iload_1
      59: iadd
      60: putfield      #2                  // Field numBytesAvailable:I
      63: goto          81
      66: aload_0
      67: iconst_1
      68: putfield      #3                  // Field foundAllIDATChunks:Z
      71: aload_0
      72: iload_1
      73: putfield      #4                  // Field nextChunkLength:I
      76: aload_0
      77: iload_2
      78: putfield      #5                  // Field nextChunkType:I
      81: return

  boolean isFoundAllIDATChunks();
    Code:
       0: aload_0
       1: getfield      #3                  // Field foundAllIDATChunks:Z
       4: ireturn

  int getNextChunkLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nextChunkLength:I
       4: ireturn

  int getNextChunkType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nextChunkType:I
       4: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field numBytesAvailable:I
       4: ifne          11
       7: aload_0
       8: invokespecial #16                 // Method nextChunk:()V
      11: aload_0
      12: getfield      #2                  // Field numBytesAvailable:I
      15: ifne          20
      18: iconst_m1
      19: ireturn
      20: aload_0
      21: dup
      22: getfield      #2                  // Field numBytesAvailable:I
      25: iconst_1
      26: isub
      27: putfield      #2                  // Field numBytesAvailable:I
      30: aload_0
      31: getfield      #9                  // Field source:Ljava/io/DataInputStream;
      34: invokevirtual #17                 // Method java/io/DataInputStream.read:()I
      37: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field numBytesAvailable:I
       4: ifne          20
       7: aload_0
       8: invokespecial #16                 // Method nextChunk:()V
      11: aload_0
      12: getfield      #2                  // Field numBytesAvailable:I
      15: ifne          20
      18: iconst_m1
      19: ireturn
      20: iconst_0
      21: istore        4
      23: aload_0
      24: getfield      #2                  // Field numBytesAvailable:I
      27: ifle          125
      30: iload_3
      31: ifle          125
      34: iload_3
      35: aload_0
      36: getfield      #2                  // Field numBytesAvailable:I
      39: if_icmpge     46
      42: iload_3
      43: goto          50
      46: aload_0
      47: getfield      #2                  // Field numBytesAvailable:I
      50: istore        5
      52: aload_0
      53: getfield      #9                  // Field source:Ljava/io/DataInputStream;
      56: aload_1
      57: iload_2
      58: iload         5
      60: invokevirtual #18                 // Method java/io/DataInputStream.read:([BII)I
      63: istore        6
      65: iload         6
      67: iconst_m1
      68: if_icmpne     79
      71: new           #19                 // class java/io/EOFException
      74: dup
      75: invokespecial #20                 // Method java/io/EOFException."<init>":()V
      78: athrow
      79: aload_0
      80: dup
      81: getfield      #2                  // Field numBytesAvailable:I
      84: iload         6
      86: isub
      87: putfield      #2                  // Field numBytesAvailable:I
      90: iload_2
      91: iload         6
      93: iadd
      94: istore_2
      95: iload_3
      96: iload         6
      98: isub
      99: istore_3
     100: iload         4
     102: iload         6
     104: iadd
     105: istore        4
     107: aload_0
     108: getfield      #2                  // Field numBytesAvailable:I
     111: ifne          122
     114: iload_3
     115: ifle          122
     118: aload_0
     119: invokespecial #16                 // Method nextChunk:()V
     122: goto          23
     125: iload         4
     127: ireturn
}
