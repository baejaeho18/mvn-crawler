Compiled from "PNGImageLoader2.java"
public final class com.sun.javafx.iio.png.PNGImageLoader2 extends com.sun.javafx.iio.common.ImageLoaderImpl {
  static final byte[] FILE_SIG;

  static final int IHDR_TYPE;

  static final int PLTE_TYPE;

  static final int IDAT_TYPE;

  static final int IEND_TYPE;

  static final int tRNS_TYPE;

  static final int PNG_COLOR_GRAY;

  static final int PNG_COLOR_RGB;

  static final int PNG_COLOR_PALETTE;

  static final int PNG_COLOR_GRAY_ALPHA;

  static final int PNG_COLOR_RGB_ALPHA;

  static final int[] numBandsPerColorType;

  static final int PNG_FILTER_NONE;

  static final int PNG_FILTER_SUB;

  static final int PNG_FILTER_UP;

  static final int PNG_FILTER_AVERAGE;

  static final int PNG_FILTER_PAETH;

  private final java.io.DataInputStream stream;

  private int width;

  private int height;

  private int bitDepth;

  private int colorType;

  private boolean isInterlaced;

  private boolean tRNS_present;

  private boolean tRNS_GRAY_RGB;

  private int trnsR;

  private int trnsG;

  private int trnsB;

  private byte[][] palette;

  private static final int[] starting_y;

  private static final int[] starting_x;

  private static final int[] increment_y;

  private static final int[] increment_x;

  public com.sun.javafx.iio.png.PNGImageLoader2(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/sun/javafx/iio/png/PNGDescriptor.getInstance:()Lcom/sun/javafx/iio/common/ImageDescriptor;
       4: invokespecial #2                  // Method com/sun/javafx/iio/common/ImageLoaderImpl."<init>":(Lcom/sun/javafx/iio/ImageFormatDescription;)V
       7: aload_0
       8: iconst_0
       9: putfield      #3                  // Field tRNS_present:Z
      12: aload_0
      13: iconst_0
      14: putfield      #4                  // Field tRNS_GRAY_RGB:Z
      17: aload_0
      18: new           #5                  // class java/io/DataInputStream
      21: dup
      22: aload_1
      23: invokespecial #6                  // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      26: putfield      #7                  // Field stream:Ljava/io/DataInputStream;
      29: aload_0
      30: bipush        8
      32: newarray       byte
      34: invokespecial #8                  // Method readBytes:([B)[B
      37: astore_2
      38: getstatic     #9                  // Field FILE_SIG:[B
      41: aload_2
      42: invokestatic  #10                 // Method java/util/Arrays.equals:([B[B)Z
      45: ifne          58
      48: new           #11                 // class java/io/IOException
      51: dup
      52: ldc           #12                 // String Bad PNG signature!
      54: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: invokespecial #14                 // Method readHeader:()V
      62: return

  private void readHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method readChunk:()[I
       4: astore_1
       5: aload_1
       6: iconst_1
       7: iaload
       8: ldc           #17                 // int 1229472850
      10: if_icmpeq     31
      13: aload_1
      14: iconst_0
      15: iaload
      16: bipush        13
      18: if_icmpeq     31
      21: new           #11                 // class java/io/IOException
      24: dup
      25: ldc           #18                 // String Bad PNG header!
      27: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_0
      33: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      36: invokevirtual #19                 // Method java/io/DataInputStream.readInt:()I
      39: putfield      #20                 // Field width:I
      42: aload_0
      43: aload_0
      44: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      47: invokevirtual #19                 // Method java/io/DataInputStream.readInt:()I
      50: putfield      #21                 // Field height:I
      53: aload_0
      54: getfield      #20                 // Field width:I
      57: ifeq          67
      60: aload_0
      61: getfield      #21                 // Field height:I
      64: ifne          77
      67: new           #11                 // class java/io/IOException
      70: dup
      71: ldc           #22                 // String Bad PNG image size!
      73: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: aload_0
      79: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      82: invokevirtual #23                 // Method java/io/DataInputStream.readByte:()B
      85: putfield      #24                 // Field bitDepth:I
      88: aload_0
      89: getfield      #24                 // Field bitDepth:I
      92: iconst_1
      93: if_icmpeq     140
      96: aload_0
      97: getfield      #24                 // Field bitDepth:I
     100: iconst_2
     101: if_icmpeq     140
     104: aload_0
     105: getfield      #24                 // Field bitDepth:I
     108: iconst_4
     109: if_icmpeq     140
     112: aload_0
     113: getfield      #24                 // Field bitDepth:I
     116: bipush        8
     118: if_icmpeq     140
     121: aload_0
     122: getfield      #24                 // Field bitDepth:I
     125: bipush        16
     127: if_icmpeq     140
     130: new           #11                 // class java/io/IOException
     133: dup
     134: ldc           #25                 // String Bad PNG bit depth
     136: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: aload_0
     141: aload_0
     142: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     145: invokevirtual #23                 // Method java/io/DataInputStream.readByte:()B
     148: putfield      #26                 // Field colorType:I
     151: aload_0
     152: getfield      #26                 // Field colorType:I
     155: bipush        6
     157: if_icmpgt     176
     160: aload_0
     161: getfield      #26                 // Field colorType:I
     164: iconst_1
     165: if_icmpeq     176
     168: aload_0
     169: getfield      #26                 // Field colorType:I
     172: iconst_5
     173: if_icmpne     186
     176: new           #11                 // class java/io/IOException
     179: dup
     180: ldc           #27                 // String Bad PNG color type
     182: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     185: athrow
     186: aload_0
     187: getfield      #26                 // Field colorType:I
     190: iconst_3
     191: if_icmpeq     210
     194: aload_0
     195: getfield      #26                 // Field colorType:I
     198: ifeq          210
     201: aload_0
     202: getfield      #24                 // Field bitDepth:I
     205: bipush        8
     207: if_icmplt     227
     210: aload_0
     211: getfield      #26                 // Field colorType:I
     214: iconst_3
     215: if_icmpne     237
     218: aload_0
     219: getfield      #24                 // Field bitDepth:I
     222: bipush        16
     224: if_icmpne     237
     227: new           #11                 // class java/io/IOException
     230: dup
     231: ldc           #28                 // String Bad color type/bit depth combination!
     233: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     236: athrow
     237: aload_0
     238: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     241: invokevirtual #23                 // Method java/io/DataInputStream.readByte:()B
     244: istore_2
     245: iload_2
     246: ifeq          259
     249: new           #11                 // class java/io/IOException
     252: dup
     253: ldc           #29                 // String Bad PNG comression!
     255: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     258: athrow
     259: aload_0
     260: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     263: invokevirtual #23                 // Method java/io/DataInputStream.readByte:()B
     266: istore_3
     267: iload_3
     268: ifeq          281
     271: new           #11                 // class java/io/IOException
     274: dup
     275: ldc           #30                 // String Bad PNG filter method!
     277: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     280: athrow
     281: aload_0
     282: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     285: invokevirtual #23                 // Method java/io/DataInputStream.readByte:()B
     288: istore        4
     290: iload         4
     292: ifeq          311
     295: iload         4
     297: iconst_1
     298: if_icmpeq     311
     301: new           #11                 // class java/io/IOException
     304: dup
     305: ldc           #31                 // String Unknown interlace method (not 0 or 1)!
     307: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     310: athrow
     311: aload_0
     312: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     315: invokevirtual #19                 // Method java/io/DataInputStream.readInt:()I
     318: istore        5
     320: aload_0
     321: iload         4
     323: iconst_1
     324: if_icmpne     331
     327: iconst_1
     328: goto          332
     331: iconst_0
     332: putfield      #32                 // Field isInterlaced:Z
     335: return

  private int[] readChunk() throws java.io.IOException;
    Code:
       0: iconst_2
       1: newarray       int
       3: dup
       4: iconst_0
       5: aload_0
       6: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
       9: invokevirtual #19                 // Method java/io/DataInputStream.readInt:()I
      12: iastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      19: invokevirtual #19                 // Method java/io/DataInputStream.readInt:()I
      22: iastore
      23: areturn

  private byte[] readBytes(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #33                 // Method readBytes:([BII)[B
       8: areturn

  private byte[] readBytes(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #34                 // Method java/io/DataInputStream.readFully:([BII)V
      10: aload_1
      11: areturn

  private void skip(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
       5: iload_1
       6: invokevirtual #35                 // Method java/io/DataInputStream.skipBytes:(I)I
       9: if_icmpeq     20
      12: new           #36                 // class java/io/EOFException
      15: dup
      16: invokespecial #37                 // Method java/io/EOFException."<init>":()V
      19: athrow
      20: return

  private void readPaletteChunk(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_3
       2: idiv
       3: istore_2
       4: iconst_1
       5: aload_0
       6: getfield      #24                 // Field bitDepth:I
       9: ishl
      10: istore_3
      11: iload_2
      12: iload_3
      13: if_icmple     24
      16: aload_0
      17: ldc           #38                 // String PLTE chunk contains too many entries for bit depth, ignoring extras.
      19: invokevirtual #39                 // Method emitWarning:(Ljava/lang/String;)V
      22: iload_3
      23: istore_2
      24: aload_0
      25: iconst_3
      26: iload_3
      27: multianewarray #40,  2            // class "[[B"
      31: putfield      #41                 // Field palette:[[B
      34: aload_0
      35: iload_1
      36: newarray       byte
      38: invokespecial #8                  // Method readBytes:([B)[B
      41: astore        4
      43: iconst_0
      44: istore        5
      46: iconst_0
      47: istore        6
      49: iload         5
      51: iload_2
      52: if_icmpeq     94
      55: iconst_0
      56: istore        7
      58: iload         7
      60: iconst_3
      61: if_icmpeq     88
      64: aload_0
      65: getfield      #41                 // Field palette:[[B
      68: iload         7
      70: aaload
      71: iload         5
      73: aload         4
      75: iload         6
      77: iinc          6, 1
      80: baload
      81: bastore
      82: iinc          7, 1
      85: goto          58
      88: iinc          5, 1
      91: goto          49
      94: return

  private void parsePaletteChunk(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field palette:[[B
       4: ifnull        19
       7: aload_0
       8: ldc           #42                 // String A PNG image may not contain more than one PLTE chunk.\nThe chunk wil be ignored.
      10: invokevirtual #39                 // Method emitWarning:(Ljava/lang/String;)V
      13: aload_0
      14: iload_1
      15: invokespecial #43                 // Method skip:(I)V
      18: return
      19: aload_0
      20: getfield      #26                 // Field colorType:I
      23: tableswitch   { // 0 to 4
                     0: 62
                     1: 68
                     2: 68
                     3: 56
                     4: 62
               default: 68
          }
      56: aload_0
      57: iload_1
      58: invokespecial #44                 // Method readPaletteChunk:(I)V
      61: return
      62: aload_0
      63: ldc           #45                 // String A PNG gray or gray alpha image cannot have a PLTE chunk.\nThe chunk wil be ignored.
      65: invokevirtual #39                 // Method emitWarning:(Ljava/lang/String;)V
      68: aload_0
      69: iload_1
      70: invokespecial #43                 // Method skip:(I)V
      73: return

  private boolean readPaletteTransparency(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field palette:[[B
       4: ifnonnull     20
       7: aload_0
       8: ldc           #46                 // String tRNS chunk without prior PLTE chunk, ignoring it.
      10: invokevirtual #39                 // Method emitWarning:(Ljava/lang/String;)V
      13: aload_0
      14: iload_1
      15: invokespecial #43                 // Method skip:(I)V
      18: iconst_0
      19: ireturn
      20: iconst_4
      21: anewarray     #47                 // class "[B"
      24: astore_2
      25: aload_0
      26: getfield      #41                 // Field palette:[[B
      29: iconst_0
      30: aload_2
      31: iconst_0
      32: iconst_3
      33: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      36: aload_0
      37: getfield      #41                 // Field palette:[[B
      40: iconst_0
      41: aaload
      42: arraylength
      43: istore_3
      44: aload_2
      45: iconst_3
      46: iload_3
      47: newarray       byte
      49: aastore
      50: iload_1
      51: iload_3
      52: if_icmpge     59
      55: iload_1
      56: goto          60
      59: iload_3
      60: istore        4
      62: aload_0
      63: aload_2
      64: iconst_3
      65: aaload
      66: iconst_0
      67: iload         4
      69: invokespecial #33                 // Method readBytes:([BII)[B
      72: pop
      73: iload         4
      75: istore        5
      77: iload         5
      79: iload_3
      80: if_icmpge     96
      83: aload_2
      84: iconst_3
      85: aaload
      86: iload         5
      88: iconst_m1
      89: bastore
      90: iinc          5, 1
      93: goto          77
      96: iload         4
      98: iload_1
      99: if_icmpge     110
     102: aload_0
     103: iload_1
     104: iload         4
     106: isub
     107: invokespecial #43                 // Method skip:(I)V
     110: aload_0
     111: aload_2
     112: putfield      #41                 // Field palette:[[B
     115: iconst_1
     116: ireturn

  private boolean readGrayTransparency(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_2
       2: if_icmpne     18
       5: aload_0
       6: aload_0
       7: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      10: invokevirtual #49                 // Method java/io/DataInputStream.readShort:()S
      13: putfield      #50                 // Field trnsG:I
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  private boolean readRgbTransparency(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        6
       3: if_icmpne     41
       6: aload_0
       7: aload_0
       8: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      11: invokevirtual #49                 // Method java/io/DataInputStream.readShort:()S
      14: putfield      #51                 // Field trnsR:I
      17: aload_0
      18: aload_0
      19: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      22: invokevirtual #49                 // Method java/io/DataInputStream.readShort:()S
      25: putfield      #50                 // Field trnsG:I
      28: aload_0
      29: aload_0
      30: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
      33: invokevirtual #49                 // Method java/io/DataInputStream.readShort:()S
      36: putfield      #52                 // Field trnsB:I
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  private void parseTransparencyChunk(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field colorType:I
       4: tableswitch   { // 0 to 3
                     0: 48
                     1: 82
                     2: 65
                     3: 36
               default: 82
          }
      36: aload_0
      37: aload_0
      38: iload_1
      39: invokespecial #53                 // Method readPaletteTransparency:(I)Z
      42: putfield      #3                  // Field tRNS_present:Z
      45: goto          93
      48: aload_0
      49: aload_0
      50: aload_0
      51: iload_1
      52: invokespecial #54                 // Method readGrayTransparency:(I)Z
      55: dup_x1
      56: putfield      #3                  // Field tRNS_present:Z
      59: putfield      #4                  // Field tRNS_GRAY_RGB:Z
      62: goto          93
      65: aload_0
      66: aload_0
      67: aload_0
      68: iload_1
      69: invokespecial #55                 // Method readRgbTransparency:(I)Z
      72: dup_x1
      73: putfield      #3                  // Field tRNS_present:Z
      76: putfield      #4                  // Field tRNS_GRAY_RGB:Z
      79: goto          93
      82: aload_0
      83: ldc           #56                 // String TransparencyChunk may not present when alpha explicitly defined
      85: invokevirtual #39                 // Method emitWarning:(Ljava/lang/String;)V
      88: aload_0
      89: iload_1
      90: invokespecial #43                 // Method skip:(I)V
      93: return

  private int parsePngMeta() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method readChunk:()[I
       4: astore_1
       5: aload_1
       6: iconst_0
       7: iaload
       8: ifge          21
      11: new           #11                 // class java/io/IOException
      14: dup
      15: ldc           #57                 // String Invalid chunk length
      17: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: iconst_1
      23: iaload
      24: lookupswitch  { // 4
            1229209940: 68
            1229278788: 72
            1347179589: 74
            1951551059: 84
               default: 94
          }
      68: aload_1
      69: iconst_0
      70: iaload
      71: ireturn
      72: iconst_0
      73: ireturn
      74: aload_0
      75: aload_1
      76: iconst_0
      77: iaload
      78: invokespecial #58                 // Method parsePaletteChunk:(I)V
      81: goto          101
      84: aload_0
      85: aload_1
      86: iconst_0
      87: iaload
      88: invokespecial #59                 // Method parseTransparencyChunk:(I)V
      91: goto          101
      94: aload_0
      95: aload_1
      96: iconst_0
      97: iaload
      98: invokespecial #43                 // Method skip:(I)V
     101: aload_0
     102: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     105: invokevirtual #19                 // Method java/io/DataInputStream.readInt:()I
     108: istore_2
     109: goto          0

  public void dispose();
    Code:
       0: return

  private com.sun.javafx.iio.ImageStorage$ImageType getType();
    Code:
       0: aload_0
       1: getfield      #26                 // Field colorType:I
       4: tableswitch   { // 0 to 6
                     0: 48
                     1: 94
                     2: 65
                     3: 82
                     4: 86
                     5: 94
                     6: 90
               default: 94
          }
      48: aload_0
      49: getfield      #3                  // Field tRNS_present:Z
      52: ifeq          61
      55: getstatic     #60                 // Field com/sun/javafx/iio/ImageStorage$ImageType.GRAY_ALPHA:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      58: goto          64
      61: getstatic     #61                 // Field com/sun/javafx/iio/ImageStorage$ImageType.GRAY:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      64: areturn
      65: aload_0
      66: getfield      #3                  // Field tRNS_present:Z
      69: ifeq          78
      72: getstatic     #62                 // Field com/sun/javafx/iio/ImageStorage$ImageType.RGBA:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      75: goto          81
      78: getstatic     #63                 // Field com/sun/javafx/iio/ImageStorage$ImageType.RGB:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      81: areturn
      82: getstatic     #64                 // Field com/sun/javafx/iio/ImageStorage$ImageType.PALETTE:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      85: areturn
      86: getstatic     #60                 // Field com/sun/javafx/iio/ImageStorage$ImageType.GRAY_ALPHA:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      89: areturn
      90: getstatic     #62                 // Field com/sun/javafx/iio/ImageStorage$ImageType.RGBA:Lcom/sun/javafx/iio/ImageStorage$ImageType;
      93: areturn
      94: new           #65                 // class java/lang/RuntimeException
      97: dup
      98: invokespecial #66                 // Method java/lang/RuntimeException."<init>":()V
     101: athrow

  private void doSubFilter(byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: istore_3
       3: iload_2
       4: istore        4
       6: iload         4
       8: iload_3
       9: if_icmpeq     34
      12: aload_1
      13: iload         4
      15: aload_1
      16: iload         4
      18: baload
      19: aload_1
      20: iload         4
      22: iload_2
      23: isub
      24: baload
      25: iadd
      26: i2b
      27: bastore
      28: iinc          4, 1
      31: goto          6
      34: return

  private void doUpFilter(byte[], byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_3
       3: iconst_0
       4: istore        4
       6: iload         4
       8: iload_3
       9: if_icmpeq     32
      12: aload_1
      13: iload         4
      15: aload_1
      16: iload         4
      18: baload
      19: aload_2
      20: iload         4
      22: baload
      23: iadd
      24: i2b
      25: bastore
      26: iinc          4, 1
      29: goto          6
      32: return

  private void doAvrgFilter(byte[], byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: iconst_0
       5: istore        5
       7: iload         5
       9: iload_3
      10: if_icmpeq     39
      13: aload_1
      14: iload         5
      16: aload_1
      17: iload         5
      19: baload
      20: aload_2
      21: iload         5
      23: baload
      24: sipush        255
      27: iand
      28: iconst_2
      29: idiv
      30: iadd
      31: i2b
      32: bastore
      33: iinc          5, 1
      36: goto          7
      39: iload_3
      40: istore        5
      42: iload         5
      44: iload         4
      46: if_icmpeq     86
      49: aload_1
      50: iload         5
      52: aload_1
      53: iload         5
      55: baload
      56: aload_1
      57: iload         5
      59: iload_3
      60: isub
      61: baload
      62: sipush        255
      65: iand
      66: aload_2
      67: iload         5
      69: baload
      70: sipush        255
      73: iand
      74: iadd
      75: iconst_2
      76: idiv
      77: iadd
      78: i2b
      79: bastore
      80: iinc          5, 1
      83: goto          42
      86: return

  private static int paethPr(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: isub
       3: invokestatic  #67                 // Method java/lang/Math.abs:(I)I
       6: istore_3
       7: iload_0
       8: iload_2
       9: isub
      10: invokestatic  #67                 // Method java/lang/Math.abs:(I)I
      13: istore        4
      15: iload_1
      16: iload_2
      17: isub
      18: iload_0
      19: iadd
      20: iload_2
      21: isub
      22: invokestatic  #67                 // Method java/lang/Math.abs:(I)I
      25: istore        5
      27: iload_3
      28: iload         4
      30: if_icmpgt     43
      33: iload_3
      34: iload         5
      36: if_icmpgt     43
      39: iload_0
      40: goto          55
      43: iload         4
      45: iload         5
      47: if_icmpgt     54
      50: iload_1
      51: goto          55
      54: iload_2
      55: ireturn

  private void doPaethFilter(byte[], byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: iconst_0
       5: istore        5
       7: iload         5
       9: iload_3
      10: if_icmpeq     33
      13: aload_1
      14: iload         5
      16: aload_1
      17: iload         5
      19: baload
      20: aload_2
      21: iload         5
      23: baload
      24: iadd
      25: i2b
      26: bastore
      27: iinc          5, 1
      30: goto          7
      33: iload_3
      34: istore        5
      36: iload         5
      38: iload         4
      40: if_icmpeq     90
      43: aload_1
      44: iload         5
      46: aload_1
      47: iload         5
      49: baload
      50: aload_1
      51: iload         5
      53: iload_3
      54: isub
      55: baload
      56: sipush        255
      59: iand
      60: aload_2
      61: iload         5
      63: baload
      64: sipush        255
      67: iand
      68: aload_2
      69: iload         5
      71: iload_3
      72: isub
      73: baload
      74: sipush        255
      77: iand
      78: invokestatic  #68                 // Method paethPr:(III)I
      81: iadd
      82: i2b
      83: bastore
      84: iinc          5, 1
      87: goto          36
      90: return

  private void doFilter(byte[], byte[], int, int);
    Code:
       0: iload_3
       1: tableswitch   { // 1 to 4
                     1: 32
                     2: 42
                     3: 51
                     4: 62
               default: 70
          }
      32: aload_0
      33: aload_1
      34: iload         4
      36: invokespecial #69                 // Method doSubFilter:([BI)V
      39: goto          70
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #70                 // Method doUpFilter:([B[B)V
      48: goto          70
      51: aload_0
      52: aload_1
      53: aload_2
      54: iload         4
      56: invokespecial #71                 // Method doAvrgFilter:([B[BI)V
      59: goto          70
      62: aload_0
      63: aload_1
      64: aload_2
      65: iload         4
      67: invokespecial #72                 // Method doPaethFilter:([B[BI)V
      70: return

  private void downsample16to8trns_gray(byte[], byte[], int, int);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_2
       3: idiv
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iload_3
      10: istore        7
      12: iload         6
      14: iload         5
      16: if_icmpge     96
      19: aload_1
      20: iload         6
      22: iconst_2
      23: imul
      24: baload
      25: sipush        255
      28: iand
      29: sipush        256
      32: imul
      33: aload_1
      34: iload         6
      36: iconst_2
      37: imul
      38: iconst_1
      39: iadd
      40: baload
      41: sipush        255
      44: iand
      45: iadd
      46: i2s
      47: istore        8
      49: aload_2
      50: iload         7
      52: iconst_0
      53: iadd
      54: aload_1
      55: iload         6
      57: iconst_2
      58: imul
      59: baload
      60: bastore
      61: aload_2
      62: iload         7
      64: iconst_1
      65: iadd
      66: iload         8
      68: aload_0
      69: getfield      #50                 // Field trnsG:I
      72: if_icmpne     79
      75: iconst_0
      76: goto          80
      79: iconst_m1
      80: bastore
      81: iload         7
      83: iload         4
      85: iconst_2
      86: imul
      87: iadd
      88: istore        7
      90: iinc          6, 1
      93: goto          12
      96: return

  private void downsample16to8trns_rgb(byte[], byte[], int, int);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_2
       3: idiv
       4: iconst_3
       5: idiv
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload_3
      12: istore        7
      14: iload         6
      16: iload         5
      18: if_icmpge     201
      21: iload         6
      23: bipush        6
      25: imul
      26: istore        8
      28: aload_1
      29: iload         8
      31: iconst_0
      32: iadd
      33: baload
      34: sipush        255
      37: iand
      38: sipush        256
      41: imul
      42: aload_1
      43: iload         8
      45: iconst_1
      46: iadd
      47: baload
      48: sipush        255
      51: iand
      52: iadd
      53: i2s
      54: istore        9
      56: aload_1
      57: iload         8
      59: iconst_2
      60: iadd
      61: baload
      62: sipush        255
      65: iand
      66: sipush        256
      69: imul
      70: aload_1
      71: iload         8
      73: iconst_3
      74: iadd
      75: baload
      76: sipush        255
      79: iand
      80: iadd
      81: i2s
      82: istore        10
      84: aload_1
      85: iload         8
      87: iconst_4
      88: iadd
      89: baload
      90: sipush        255
      93: iand
      94: sipush        256
      97: imul
      98: aload_1
      99: iload         8
     101: iconst_5
     102: iadd
     103: baload
     104: sipush        255
     107: iand
     108: iadd
     109: i2s
     110: istore        11
     112: aload_2
     113: iload         7
     115: iconst_0
     116: iadd
     117: aload_1
     118: iload         8
     120: iconst_0
     121: iadd
     122: baload
     123: bastore
     124: aload_2
     125: iload         7
     127: iconst_1
     128: iadd
     129: aload_1
     130: iload         8
     132: iconst_2
     133: iadd
     134: baload
     135: bastore
     136: aload_2
     137: iload         7
     139: iconst_2
     140: iadd
     141: aload_1
     142: iload         8
     144: iconst_4
     145: iadd
     146: baload
     147: bastore
     148: aload_2
     149: iload         7
     151: iconst_3
     152: iadd
     153: iload         9
     155: aload_0
     156: getfield      #51                 // Field trnsR:I
     159: if_icmpne     184
     162: iload         10
     164: aload_0
     165: getfield      #50                 // Field trnsG:I
     168: if_icmpne     184
     171: iload         11
     173: aload_0
     174: getfield      #52                 // Field trnsB:I
     177: if_icmpne     184
     180: iconst_0
     181: goto          185
     184: iconst_m1
     185: bastore
     186: iload         7
     188: iload         4
     190: iconst_4
     191: imul
     192: iadd
     193: istore        7
     195: iinc          6, 1
     198: goto          14
     201: return

  private void downsample16to8_plain(byte[], byte[], int, int, int);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_2
       3: idiv
       4: iload         5
       6: idiv
       7: iload         5
       9: imul
      10: istore        6
      12: iload         4
      14: iload         5
      16: imul
      17: istore        7
      19: iconst_0
      20: istore        8
      22: iload_3
      23: istore        9
      25: iload         8
      27: iload         6
      29: if_icmpeq     81
      32: iconst_0
      33: istore        10
      35: iload         10
      37: iload         5
      39: if_icmpeq     64
      42: aload_2
      43: iload         9
      45: iload         10
      47: iadd
      48: aload_1
      49: iload         8
      51: iload         10
      53: iadd
      54: iconst_2
      55: imul
      56: baload
      57: bastore
      58: iinc          10, 1
      61: goto          35
      64: iload         9
      66: iload         7
      68: iadd
      69: istore        9
      71: iload         8
      73: iload         5
      75: iadd
      76: istore        8
      78: goto          25
      81: return

  private void downsample16to8(byte[], byte[], int, int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tRNS_GRAY_RGB:Z
       4: ifne          21
       7: aload_0
       8: aload_1
       9: aload_2
      10: iload_3
      11: iload         4
      13: iload         5
      15: invokespecial #73                 // Method downsample16to8_plain:([B[BIII)V
      18: goto          57
      21: aload_0
      22: getfield      #26                 // Field colorType:I
      25: ifne          40
      28: aload_0
      29: aload_1
      30: aload_2
      31: iload_3
      32: iload         4
      34: invokespecial #74                 // Method downsample16to8trns_gray:([B[BII)V
      37: goto          57
      40: aload_0
      41: getfield      #26                 // Field colorType:I
      44: iconst_2
      45: if_icmpne     57
      48: aload_0
      49: aload_1
      50: aload_2
      51: iload_3
      52: iload         4
      54: invokespecial #75                 // Method downsample16to8trns_rgb:([B[BII)V
      57: return

  private void copyTrns_gray(byte[], byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #50                 // Field trnsG:I
       4: i2b
       5: istore        5
       7: iconst_0
       8: istore        6
      10: iload_3
      11: istore        7
      13: aload_1
      14: arraylength
      15: istore        8
      17: iload         6
      19: iload         8
      21: if_icmpge     69
      24: aload_1
      25: iload         6
      27: baload
      28: istore        9
      30: aload_2
      31: iload         7
      33: iload         9
      35: bastore
      36: aload_2
      37: iload         7
      39: iconst_1
      40: iadd
      41: iload         9
      43: iload         5
      45: if_icmpne     52
      48: iconst_0
      49: goto          53
      52: iconst_m1
      53: bastore
      54: iload         7
      56: iconst_2
      57: iload         4
      59: imul
      60: iadd
      61: istore        7
      63: iinc          6, 1
      66: goto          17
      69: return

  private void copyTrns_rgb(byte[], byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #51                 // Field trnsR:I
       4: i2b
       5: istore        5
       7: aload_0
       8: getfield      #50                 // Field trnsG:I
      11: i2b
      12: istore        6
      14: aload_0
      15: getfield      #52                 // Field trnsB:I
      18: i2b
      19: istore        7
      21: aload_1
      22: arraylength
      23: iconst_3
      24: idiv
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iload_3
      31: istore        10
      33: iload         9
      35: iload         8
      37: if_icmpge     139
      40: aload_1
      41: iload         9
      43: iconst_3
      44: imul
      45: baload
      46: istore        11
      48: aload_1
      49: iload         9
      51: iconst_3
      52: imul
      53: iconst_1
      54: iadd
      55: baload
      56: istore        12
      58: aload_1
      59: iload         9
      61: iconst_3
      62: imul
      63: iconst_2
      64: iadd
      65: baload
      66: istore        13
      68: aload_2
      69: iload         10
      71: iconst_0
      72: iadd
      73: iload         11
      75: bastore
      76: aload_2
      77: iload         10
      79: iconst_1
      80: iadd
      81: iload         12
      83: bastore
      84: aload_2
      85: iload         10
      87: iconst_2
      88: iadd
      89: iload         13
      91: bastore
      92: aload_2
      93: iload         10
      95: iconst_3
      96: iadd
      97: iload         11
      99: iload         5
     101: if_icmpne     122
     104: iload         12
     106: iload         6
     108: if_icmpne     122
     111: iload         13
     113: iload         7
     115: if_icmpne     122
     118: iconst_0
     119: goto          123
     122: iconst_m1
     123: bastore
     124: iload         10
     126: iload         4
     128: iconst_4
     129: imul
     130: iadd
     131: istore        10
     133: iinc          9, 1
     136: goto          33
     139: return

  private void copy_plain(byte[], byte[], int, int, int);
    Code:
       0: aload_1
       1: arraylength
       2: istore        6
       4: iload         4
       6: iload         5
       8: imul
       9: istore        7
      11: iconst_0
      12: istore        8
      14: iload_3
      15: istore        9
      17: iload         8
      19: iload         6
      21: if_icmpeq     71
      24: iconst_0
      25: istore        10
      27: iload         10
      29: iload         5
      31: if_icmpeq     54
      34: aload_2
      35: iload         9
      37: iload         10
      39: iadd
      40: aload_1
      41: iload         8
      43: iload         10
      45: iadd
      46: baload
      47: bastore
      48: iinc          10, 1
      51: goto          27
      54: iload         9
      56: iload         7
      58: iadd
      59: istore        9
      61: iload         8
      63: iload         5
      65: iadd
      66: istore        8
      68: goto          17
      71: return

  private void copy(byte[], byte[], int, int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tRNS_GRAY_RGB:Z
       4: ifne          39
       7: iload         4
       9: iconst_1
      10: if_icmpne     25
      13: aload_1
      14: iconst_0
      15: aload_2
      16: iload_3
      17: aload_1
      18: arraylength
      19: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: goto          75
      25: aload_0
      26: aload_1
      27: aload_2
      28: iload_3
      29: iload         4
      31: iload         5
      33: invokespecial #76                 // Method copy_plain:([B[BIII)V
      36: goto          75
      39: aload_0
      40: getfield      #26                 // Field colorType:I
      43: ifne          58
      46: aload_0
      47: aload_1
      48: aload_2
      49: iload_3
      50: iload         4
      52: invokespecial #77                 // Method copyTrns_gray:([B[BII)V
      55: goto          75
      58: aload_0
      59: getfield      #26                 // Field colorType:I
      62: iconst_2
      63: if_icmpne     75
      66: aload_0
      67: aload_1
      68: aload_2
      69: iload_3
      70: iload         4
      72: invokespecial #78                 // Method copyTrns_rgb:([B[BII)V
      75: return

  private void upsampleTo8Palette(byte[], byte[], int, int, int);
    Code:
       0: bipush        8
       2: aload_0
       3: getfield      #24                 // Field bitDepth:I
       6: idiv
       7: istore        6
       9: iconst_1
      10: aload_0
      11: getfield      #24                 // Field bitDepth:I
      14: ishl
      15: iconst_1
      16: isub
      17: istore        7
      19: iconst_0
      20: istore        8
      22: iconst_0
      23: istore        9
      25: iload         8
      27: iload         4
      29: if_icmpge     128
      32: iload         4
      34: iload         8
      36: isub
      37: iload         6
      39: if_icmpge     50
      42: iload         4
      44: iload         8
      46: isub
      47: goto          52
      50: iload         6
      52: istore        10
      54: aload_1
      55: iload         9
      57: baload
      58: iload         6
      60: iload         10
      62: isub
      63: aload_0
      64: getfield      #24                 // Field bitDepth:I
      67: imul
      68: ishr
      69: istore        11
      71: iload         10
      73: iconst_1
      74: isub
      75: istore        12
      77: iload         12
      79: iflt          115
      82: aload_2
      83: iload_3
      84: iload         8
      86: iload         12
      88: iadd
      89: iload         5
      91: imul
      92: iadd
      93: iload         11
      95: iload         7
      97: iand
      98: i2b
      99: bastore
     100: iload         11
     102: aload_0
     103: getfield      #24                 // Field bitDepth:I
     106: ishr
     107: istore        11
     109: iinc          12, -1
     112: goto          77
     115: iinc          9, 1
     118: iload         8
     120: iload         6
     122: iadd
     123: istore        8
     125: goto          25
     128: return

  private void upsampleTo8Gray(byte[], byte[], int, int, int);
    Code:
       0: bipush        8
       2: aload_0
       3: getfield      #24                 // Field bitDepth:I
       6: idiv
       7: istore        6
       9: iconst_1
      10: aload_0
      11: getfield      #24                 // Field bitDepth:I
      14: ishl
      15: iconst_1
      16: isub
      17: istore        7
      19: iload         7
      21: iconst_2
      22: idiv
      23: istore        8
      25: iconst_0
      26: istore        9
      28: iconst_0
      29: istore        10
      31: iload         9
      33: iload         4
      35: if_icmpge     144
      38: iload         4
      40: iload         9
      42: isub
      43: iload         6
      45: if_icmpge     56
      48: iload         4
      50: iload         9
      52: isub
      53: goto          58
      56: iload         6
      58: istore        11
      60: aload_1
      61: iload         10
      63: baload
      64: iload         6
      66: iload         11
      68: isub
      69: aload_0
      70: getfield      #24                 // Field bitDepth:I
      73: imul
      74: ishr
      75: istore        12
      77: iload         11
      79: iconst_1
      80: isub
      81: istore        13
      83: iload         13
      85: iflt          131
      88: aload_2
      89: iload_3
      90: iload         9
      92: iload         13
      94: iadd
      95: iload         5
      97: imul
      98: iadd
      99: iload         12
     101: iload         7
     103: iand
     104: sipush        255
     107: imul
     108: iload         8
     110: iadd
     111: iload         7
     113: idiv
     114: i2b
     115: bastore
     116: iload         12
     118: aload_0
     119: getfield      #24                 // Field bitDepth:I
     122: ishr
     123: istore        12
     125: iinc          13, -1
     128: goto          83
     131: iinc          10, 1
     134: iload         9
     136: iload         6
     138: iadd
     139: istore        9
     141: goto          31
     144: return

  private void upsampleTo8GrayTrns(byte[], byte[], int, int, int);
    Code:
       0: bipush        8
       2: aload_0
       3: getfield      #24                 // Field bitDepth:I
       6: idiv
       7: istore        6
       9: iconst_1
      10: aload_0
      11: getfield      #24                 // Field bitDepth:I
      14: ishl
      15: iconst_1
      16: isub
      17: istore        7
      19: iload         7
      21: iconst_2
      22: idiv
      23: istore        8
      25: iconst_0
      26: istore        9
      28: iconst_0
      29: istore        10
      31: iload         9
      33: iload         4
      35: if_icmpge     174
      38: iload         4
      40: iload         9
      42: isub
      43: iload         6
      45: if_icmpge     56
      48: iload         4
      50: iload         9
      52: isub
      53: goto          58
      56: iload         6
      58: istore        11
      60: aload_1
      61: iload         10
      63: baload
      64: iload         6
      66: iload         11
      68: isub
      69: aload_0
      70: getfield      #24                 // Field bitDepth:I
      73: imul
      74: ishr
      75: istore        12
      77: iload         11
      79: iconst_1
      80: isub
      81: istore        13
      83: iload         13
      85: iflt          161
      88: iload_3
      89: iload         9
      91: iload         13
      93: iadd
      94: iload         5
      96: imul
      97: iconst_2
      98: imul
      99: iadd
     100: istore        14
     102: iload         12
     104: iload         7
     106: iand
     107: istore        15
     109: aload_2
     110: iload         14
     112: iload         15
     114: sipush        255
     117: imul
     118: iload         8
     120: iadd
     121: iload         7
     123: idiv
     124: i2b
     125: bastore
     126: aload_2
     127: iload         14
     129: iconst_1
     130: iadd
     131: iload         15
     133: aload_0
     134: getfield      #50                 // Field trnsG:I
     137: if_icmpne     144
     140: iconst_0
     141: goto          145
     144: iconst_m1
     145: bastore
     146: iload         12
     148: aload_0
     149: getfield      #24                 // Field bitDepth:I
     152: ishr
     153: istore        12
     155: iinc          13, -1
     158: goto          83
     161: iinc          10, 1
     164: iload         9
     166: iload         6
     168: iadd
     169: istore        9
     171: goto          31
     174: return

  private void upsampleTo8(byte[], byte[], int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field colorType:I
       4: iconst_3
       5: if_icmpne     22
       8: aload_0
       9: aload_1
      10: aload_2
      11: iload_3
      12: iload         4
      14: iload         5
      16: invokespecial #79                 // Method upsampleTo8Palette:([B[BIII)V
      19: goto          66
      22: iload         6
      24: iconst_1
      25: if_icmpne     42
      28: aload_0
      29: aload_1
      30: aload_2
      31: iload_3
      32: iload         4
      34: iload         5
      36: invokespecial #80                 // Method upsampleTo8Gray:([B[BIII)V
      39: goto          66
      42: aload_0
      43: getfield      #4                  // Field tRNS_GRAY_RGB:Z
      46: ifeq          66
      49: iload         6
      51: iconst_2
      52: if_icmpne     66
      55: aload_0
      56: aload_1
      57: aload_2
      58: iload_3
      59: iload         4
      61: iload         5
      63: invokespecial #81                 // Method upsampleTo8GrayTrns:([B[BIII)V
      66: return

  private static int mipSize(int, int, int[], int[]);
    Code:
       0: iload_0
       1: aload_2
       2: iload_1
       3: iaload
       4: isub
       5: aload_3
       6: iload_1
       7: iaload
       8: iadd
       9: iconst_1
      10: isub
      11: aload_3
      12: iload_1
      13: iaload
      14: idiv
      15: ireturn

  private static int mipPos(int, int, int[], int[]);
    Code:
       0: aload_2
       1: iload_1
       2: iaload
       3: iload_0
       4: aload_3
       5: iload_1
       6: iaload
       7: imul
       8: iadd
       9: ireturn

  private void loadMip(byte[], java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field width:I
       4: iload_3
       5: getstatic     #82                 // Field starting_x:[I
       8: getstatic     #83                 // Field increment_x:[I
      11: invokestatic  #84                 // Method mipSize:(II[I[I)I
      14: istore        4
      16: aload_0
      17: getfield      #21                 // Field height:I
      20: iload_3
      21: getstatic     #85                 // Field starting_y:[I
      24: getstatic     #86                 // Field increment_y:[I
      27: invokestatic  #84                 // Method mipSize:(II[I[I)I
      30: istore        5
      32: iload         4
      34: aload_0
      35: getfield      #24                 // Field bitDepth:I
      38: imul
      39: getstatic     #87                 // Field numBandsPerColorType:[I
      42: aload_0
      43: getfield      #26                 // Field colorType:I
      46: iaload
      47: imul
      48: bipush        7
      50: iadd
      51: bipush        8
      53: idiv
      54: istore        6
      56: iload         6
      58: newarray       byte
      60: astore        7
      62: iload         6
      64: newarray       byte
      66: astore        8
      68: aload_0
      69: invokespecial #88                 // Method bpp:()I
      72: istore        9
      74: getstatic     #87                 // Field numBandsPerColorType:[I
      77: aload_0
      78: getfield      #26                 // Field colorType:I
      81: iaload
      82: aload_0
      83: invokespecial #89                 // Method bytesPerColor:()I
      86: imul
      87: istore        10
      89: iconst_0
      90: istore        11
      92: iload         11
      94: iload         5
      96: if_icmpeq     268
      99: aload_2
     100: invokevirtual #90                 // Method java/io/InputStream.read:()I
     103: istore        12
     105: iload         12
     107: iconst_m1
     108: if_icmpne     119
     111: new           #36                 // class java/io/EOFException
     114: dup
     115: invokespecial #37                 // Method java/io/EOFException."<init>":()V
     118: athrow
     119: aload_2
     120: aload         7
     122: invokevirtual #91                 // Method java/io/InputStream.read:([B)I
     125: iload         6
     127: if_icmpeq     138
     130: new           #36                 // class java/io/EOFException
     133: dup
     134: invokespecial #37                 // Method java/io/EOFException."<init>":()V
     137: athrow
     138: aload_0
     139: aload         7
     141: aload         8
     143: iload         12
     145: iload         10
     147: invokespecial #92                 // Method doFilter:([B[BII)V
     150: iload         11
     152: iload_3
     153: getstatic     #85                 // Field starting_y:[I
     156: getstatic     #86                 // Field increment_y:[I
     159: invokestatic  #93                 // Method mipPos:(II[I[I)I
     162: aload_0
     163: getfield      #20                 // Field width:I
     166: imul
     167: getstatic     #82                 // Field starting_x:[I
     170: iload_3
     171: iaload
     172: iadd
     173: iload         9
     175: imul
     176: istore        13
     178: getstatic     #83                 // Field increment_x:[I
     181: iload_3
     182: iaload
     183: istore        14
     185: aload_0
     186: getfield      #24                 // Field bitDepth:I
     189: bipush        16
     191: if_icmpne     210
     194: aload_0
     195: aload         7
     197: aload_1
     198: iload         13
     200: iload         14
     202: iload         9
     204: invokespecial #94                 // Method downsample16to8:([B[BIII)V
     207: goto          250
     210: aload_0
     211: getfield      #24                 // Field bitDepth:I
     214: bipush        8
     216: if_icmpge     237
     219: aload_0
     220: aload         7
     222: aload_1
     223: iload         13
     225: iload         4
     227: iload         14
     229: iload         9
     231: invokespecial #95                 // Method upsampleTo8:([B[BIIII)V
     234: goto          250
     237: aload_0
     238: aload         7
     240: aload_1
     241: iload         13
     243: iload         14
     245: iload         9
     247: invokespecial #96                 // Method copy:([B[BIII)V
     250: aload         7
     252: astore        15
     254: aload         8
     256: astore        7
     258: aload         15
     260: astore        8
     262: iinc          11, 1
     265: goto          92
     268: return

  private void load(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field isInterlaced:Z
       4: ifeq          55
       7: iconst_0
       8: istore_3
       9: iload_3
      10: bipush        7
      12: if_icmpeq     52
      15: aload_0
      16: getfield      #20                 // Field width:I
      19: getstatic     #82                 // Field starting_x:[I
      22: iload_3
      23: iaload
      24: if_icmple     46
      27: aload_0
      28: getfield      #21                 // Field height:I
      31: getstatic     #85                 // Field starting_y:[I
      34: iload_3
      35: iaload
      36: if_icmple     46
      39: aload_0
      40: aload_1
      41: aload_2
      42: iload_3
      43: invokespecial #97                 // Method loadMip:([BLjava/io/InputStream;I)V
      46: iinc          3, 1
      49: goto          9
      52: goto          63
      55: aload_0
      56: aload_1
      57: aload_2
      58: bipush        7
      60: invokespecial #97                 // Method loadMip:([BLjava/io/InputStream;I)V
      63: return

  private com.sun.javafx.iio.ImageFrame decodePalette(byte[], com.sun.javafx.iio.ImageMetadata);
    Code:
       0: aload_0
       1: getfield      #3                  // Field tRNS_present:Z
       4: ifeq          11
       7: iconst_4
       8: goto          12
      11: iconst_3
      12: istore_3
      13: aload_0
      14: getfield      #20                 // Field width:I
      17: aload_0
      18: getfield      #21                 // Field height:I
      21: imul
      22: iload_3
      23: imul
      24: newarray       byte
      26: astore        4
      28: aload_0
      29: getfield      #20                 // Field width:I
      32: aload_0
      33: getfield      #21                 // Field height:I
      36: imul
      37: istore        5
      39: aload_0
      40: getfield      #3                  // Field tRNS_present:Z
      43: ifeq          145
      46: iconst_0
      47: istore        6
      49: iconst_0
      50: istore        7
      52: iload         6
      54: iload         5
      56: if_icmpeq     142
      59: sipush        255
      62: aload_1
      63: iload         6
      65: baload
      66: iand
      67: istore        8
      69: aload         4
      71: iload         7
      73: iconst_0
      74: iadd
      75: aload_0
      76: getfield      #41                 // Field palette:[[B
      79: iconst_0
      80: aaload
      81: iload         8
      83: baload
      84: bastore
      85: aload         4
      87: iload         7
      89: iconst_1
      90: iadd
      91: aload_0
      92: getfield      #41                 // Field palette:[[B
      95: iconst_1
      96: aaload
      97: iload         8
      99: baload
     100: bastore
     101: aload         4
     103: iload         7
     105: iconst_2
     106: iadd
     107: aload_0
     108: getfield      #41                 // Field palette:[[B
     111: iconst_2
     112: aaload
     113: iload         8
     115: baload
     116: bastore
     117: aload         4
     119: iload         7
     121: iconst_3
     122: iadd
     123: aload_0
     124: getfield      #41                 // Field palette:[[B
     127: iconst_3
     128: aaload
     129: iload         8
     131: baload
     132: bastore
     133: iinc          7, 4
     136: iinc          6, 1
     139: goto          52
     142: goto          225
     145: iconst_0
     146: istore        6
     148: iconst_0
     149: istore        7
     151: iload         6
     153: iload         5
     155: if_icmpeq     225
     158: sipush        255
     161: aload_1
     162: iload         6
     164: baload
     165: iand
     166: istore        8
     168: aload         4
     170: iload         7
     172: iconst_0
     173: iadd
     174: aload_0
     175: getfield      #41                 // Field palette:[[B
     178: iconst_0
     179: aaload
     180: iload         8
     182: baload
     183: bastore
     184: aload         4
     186: iload         7
     188: iconst_1
     189: iadd
     190: aload_0
     191: getfield      #41                 // Field palette:[[B
     194: iconst_1
     195: aaload
     196: iload         8
     198: baload
     199: bastore
     200: aload         4
     202: iload         7
     204: iconst_2
     205: iadd
     206: aload_0
     207: getfield      #41                 // Field palette:[[B
     210: iconst_2
     211: aaload
     212: iload         8
     214: baload
     215: bastore
     216: iinc          7, 3
     219: iinc          6, 1
     222: goto          151
     225: aload_0
     226: getfield      #3                  // Field tRNS_present:Z
     229: ifeq          238
     232: getstatic     #62                 // Field com/sun/javafx/iio/ImageStorage$ImageType.RGBA:Lcom/sun/javafx/iio/ImageStorage$ImageType;
     235: goto          241
     238: getstatic     #63                 // Field com/sun/javafx/iio/ImageStorage$ImageType.RGB:Lcom/sun/javafx/iio/ImageStorage$ImageType;
     241: astore        6
     243: new           #98                 // class com/sun/javafx/iio/ImageFrame
     246: dup
     247: aload         6
     249: aload         4
     251: invokestatic  #99                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     254: aload_0
     255: getfield      #20                 // Field width:I
     258: aload_0
     259: getfield      #21                 // Field height:I
     262: aload_0
     263: getfield      #20                 // Field width:I
     266: iload_3
     267: imul
     268: aconst_null
     269: aload_2
     270: invokespecial #100                // Method com/sun/javafx/iio/ImageFrame."<init>":(Lcom/sun/javafx/iio/ImageStorage$ImageType;Ljava/nio/ByteBuffer;III[[BLcom/sun/javafx/iio/ImageMetadata;)V
     273: areturn

  private int bpp();
    Code:
       0: getstatic     #87                 // Field numBandsPerColorType:[I
       3: aload_0
       4: getfield      #26                 // Field colorType:I
       7: iaload
       8: aload_0
       9: getfield      #4                  // Field tRNS_GRAY_RGB:Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: iadd
      21: ireturn

  private int bytesPerColor();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bitDepth:I
       4: bipush        16
       6: if_icmpne     13
       9: iconst_2
      10: goto          14
      13: iconst_1
      14: ireturn

  public com.sun.javafx.iio.ImageFrame load(int, int, int, boolean, boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokespecial #101                // Method parsePngMeta:()I
      10: istore        6
      12: iload         6
      14: ifne          25
      17: aload_0
      18: ldc           #102                // String No image data in PNG
      20: invokevirtual #39                 // Method emitWarning:(Ljava/lang/String;)V
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #20                 // Field width:I
      29: aload_0
      30: getfield      #21                 // Field height:I
      33: iload_2
      34: iload_3
      35: iload         4
      37: invokestatic  #103                // Method com/sun/javafx/iio/common/ImageTools.computeDimensions:(IIIIZ)[I
      40: astore        7
      42: aload         7
      44: iconst_0
      45: iaload
      46: istore_2
      47: aload         7
      49: iconst_1
      50: iaload
      51: istore_3
      52: new           #104                // class com/sun/javafx/iio/ImageMetadata
      55: dup
      56: aconst_null
      57: iconst_1
      58: invokestatic  #105                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      61: aconst_null
      62: aconst_null
      63: aconst_null
      64: aconst_null
      65: aconst_null
      66: iload_2
      67: invokestatic  #106                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: iload_3
      71: invokestatic  #106                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: aconst_null
      75: aconst_null
      76: aconst_null
      77: invokespecial #107                // Method com/sun/javafx/iio/ImageMetadata."<init>":(Ljava/lang/Float;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
      80: astore        8
      82: aload_0
      83: aload         8
      85: invokevirtual #108                // Method updateImageMetadata:(Lcom/sun/javafx/iio/ImageMetadata;)V
      88: aload_0
      89: invokespecial #88                 // Method bpp:()I
      92: istore        9
      94: iload         9
      96: aload_0
      97: getfield      #20                 // Field width:I
     100: imul
     101: aload_0
     102: getfield      #21                 // Field height:I
     105: imul
     106: invokestatic  #109                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     109: astore        10
     111: new           #110                // class com/sun/javafx/iio/png/PNGIDATChunkInputStream
     114: dup
     115: aload_0
     116: getfield      #7                  // Field stream:Ljava/io/DataInputStream;
     119: iload         6
     121: invokespecial #111                // Method com/sun/javafx/iio/png/PNGIDATChunkInputStream."<init>":(Ljava/io/DataInputStream;I)V
     124: astore        11
     126: new           #112                // class java/util/zip/Inflater
     129: dup
     130: invokespecial #113                // Method java/util/zip/Inflater."<init>":()V
     133: astore        12
     135: new           #114                // class java/io/BufferedInputStream
     138: dup
     139: new           #115                // class java/util/zip/InflaterInputStream
     142: dup
     143: aload         11
     145: aload         12
     147: invokespecial #116                // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V
     150: invokespecial #117                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
     153: astore        13
     155: aload_0
     156: aload         10
     158: invokevirtual #118                // Method java/nio/ByteBuffer.array:()[B
     161: aload         13
     163: invokespecial #119                // Method load:([BLjava/io/InputStream;)V
     166: aload         12
     168: ifnull        199
     171: aload         12
     173: invokevirtual #120                // Method java/util/zip/Inflater.end:()V
     176: goto          199
     179: astore        14
     181: aload         14
     183: athrow
     184: astore        15
     186: aload         12
     188: ifnull        196
     191: aload         12
     193: invokevirtual #120                // Method java/util/zip/Inflater.end:()V
     196: aload         15
     198: athrow
     199: aload_0
     200: getfield      #26                 // Field colorType:I
     203: iconst_3
     204: if_icmpne     221
     207: aload_0
     208: aload         10
     210: invokevirtual #118                // Method java/nio/ByteBuffer.array:()[B
     213: aload         8
     215: invokespecial #121                // Method decodePalette:([BLcom/sun/javafx/iio/ImageMetadata;)Lcom/sun/javafx/iio/ImageFrame;
     218: goto          255
     221: new           #98                 // class com/sun/javafx/iio/ImageFrame
     224: dup
     225: aload_0
     226: invokespecial #122                // Method getType:()Lcom/sun/javafx/iio/ImageStorage$ImageType;
     229: aload         10
     231: aload_0
     232: getfield      #20                 // Field width:I
     235: aload_0
     236: getfield      #21                 // Field height:I
     239: iload         9
     241: aload_0
     242: getfield      #20                 // Field width:I
     245: imul
     246: aload_0
     247: getfield      #41                 // Field palette:[[B
     250: aload         8
     252: invokespecial #100                // Method com/sun/javafx/iio/ImageFrame."<init>":(Lcom/sun/javafx/iio/ImageStorage$ImageType;Ljava/nio/ByteBuffer;III[[BLcom/sun/javafx/iio/ImageMetadata;)V
     255: astore        14
     257: aload_0
     258: getfield      #20                 // Field width:I
     261: iload_2
     262: if_icmpne     273
     265: aload_0
     266: getfield      #21                 // Field height:I
     269: iload_3
     270: if_icmpeq     284
     273: aload         14
     275: iload_2
     276: iload_3
     277: iload         5
     279: invokestatic  #123                // Method com/sun/javafx/iio/common/ImageTools.scaleImageFrame:(Lcom/sun/javafx/iio/ImageFrame;IIZ)Lcom/sun/javafx/iio/ImageFrame;
     282: astore        14
     284: aload         14
     286: areturn
    Exception table:
       from    to  target type
         155   166   179   Class java/io/IOException
         155   166   184   any
         179   186   184   any

  static {};
    Code:
       0: bipush        8
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        -119
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        80
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        78
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        71
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        13
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        10
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        26
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        10
      45: bastore
      46: putstatic     #9                  // Field FILE_SIG:[B
      49: bipush        7
      51: newarray       int
      53: dup
      54: iconst_0
      55: iconst_1
      56: iastore
      57: dup
      58: iconst_1
      59: iconst_m1
      60: iastore
      61: dup
      62: iconst_2
      63: iconst_3
      64: iastore
      65: dup
      66: iconst_3
      67: iconst_1
      68: iastore
      69: dup
      70: iconst_4
      71: iconst_2
      72: iastore
      73: dup
      74: iconst_5
      75: iconst_m1
      76: iastore
      77: dup
      78: bipush        6
      80: iconst_4
      81: iastore
      82: putstatic     #87                 // Field numBandsPerColorType:[I
      85: bipush        8
      87: newarray       int
      89: dup
      90: iconst_0
      91: iconst_0
      92: iastore
      93: dup
      94: iconst_1
      95: iconst_0
      96: iastore
      97: dup
      98: iconst_2
      99: iconst_4
     100: iastore
     101: dup
     102: iconst_3
     103: iconst_0
     104: iastore
     105: dup
     106: iconst_4
     107: iconst_2
     108: iastore
     109: dup
     110: iconst_5
     111: iconst_0
     112: iastore
     113: dup
     114: bipush        6
     116: iconst_1
     117: iastore
     118: dup
     119: bipush        7
     121: iconst_0
     122: iastore
     123: putstatic     #85                 // Field starting_y:[I
     126: bipush        8
     128: newarray       int
     130: dup
     131: iconst_0
     132: iconst_0
     133: iastore
     134: dup
     135: iconst_1
     136: iconst_4
     137: iastore
     138: dup
     139: iconst_2
     140: iconst_0
     141: iastore
     142: dup
     143: iconst_3
     144: iconst_2
     145: iastore
     146: dup
     147: iconst_4
     148: iconst_0
     149: iastore
     150: dup
     151: iconst_5
     152: iconst_1
     153: iastore
     154: dup
     155: bipush        6
     157: iconst_0
     158: iastore
     159: dup
     160: bipush        7
     162: iconst_0
     163: iastore
     164: putstatic     #82                 // Field starting_x:[I
     167: bipush        8
     169: newarray       int
     171: dup
     172: iconst_0
     173: bipush        8
     175: iastore
     176: dup
     177: iconst_1
     178: bipush        8
     180: iastore
     181: dup
     182: iconst_2
     183: bipush        8
     185: iastore
     186: dup
     187: iconst_3
     188: iconst_4
     189: iastore
     190: dup
     191: iconst_4
     192: iconst_4
     193: iastore
     194: dup
     195: iconst_5
     196: iconst_2
     197: iastore
     198: dup
     199: bipush        6
     201: iconst_2
     202: iastore
     203: dup
     204: bipush        7
     206: iconst_1
     207: iastore
     208: putstatic     #86                 // Field increment_y:[I
     211: bipush        8
     213: newarray       int
     215: dup
     216: iconst_0
     217: bipush        8
     219: iastore
     220: dup
     221: iconst_1
     222: bipush        8
     224: iastore
     225: dup
     226: iconst_2
     227: iconst_4
     228: iastore
     229: dup
     230: iconst_3
     231: iconst_4
     232: iastore
     233: dup
     234: iconst_4
     235: iconst_2
     236: iastore
     237: dup
     238: iconst_5
     239: iconst_2
     240: iastore
     241: dup
     242: bipush        6
     244: iconst_1
     245: iastore
     246: dup
     247: bipush        7
     249: iconst_1
     250: iastore
     251: putstatic     #83                 // Field increment_x:[I
     254: return
}
