Compiled from "NGImageView.java"
public class com.sun.javafx.sg.prism.NGImageView extends com.sun.javafx.sg.prism.NGNode {
  private com.sun.prism.Image image;

  private com.sun.prism.image.CachingCompoundImage compoundImage;

  private com.sun.prism.image.CompoundCoords compoundCoords;

  private float x;

  private float y;

  private float w;

  private float h;

  private com.sun.prism.image.Coords coords;

  private com.sun.prism.image.ViewPort reqviewport;

  private com.sun.prism.image.ViewPort imgviewport;

  private boolean renderable;

  private boolean coordsOK;

  static final int MAX_SIZE_OVERRIDE;

  static final boolean $assertionsDisabled;

  public com.sun.javafx.sg.prism.NGImageView();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/javafx/sg/prism/NGNode."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field renderable:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field coordsOK:Z
      14: return

  private void invalidate();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field coordsOK:Z
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
      10: aload_0
      11: aconst_null
      12: putfield      #6                  // Field compoundCoords:Lcom/sun/prism/image/CompoundCoords;
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field imgviewport:Lcom/sun/prism/image/ViewPort;
      20: aload_0
      21: invokevirtual #8                  // Method geometryChanged:()V
      24: return

  public void setViewport(float, float, float, float, float, float);
    Code:
       0: fload_3
       1: fconst_0
       2: fcmpl
       3: ifle          32
       6: fload         4
       8: fconst_0
       9: fcmpl
      10: ifle          32
      13: aload_0
      14: new           #9                  // class com/sun/prism/image/ViewPort
      17: dup
      18: fload_1
      19: fload_2
      20: fload_3
      21: fload         4
      23: invokespecial #10                 // Method com/sun/prism/image/ViewPort."<init>":(FFFF)V
      26: putfield      #11                 // Field reqviewport:Lcom/sun/prism/image/ViewPort;
      29: goto          37
      32: aload_0
      33: aconst_null
      34: putfield      #11                 // Field reqviewport:Lcom/sun/prism/image/ViewPort;
      37: aload_0
      38: fload         5
      40: putfield      #12                 // Field w:F
      43: aload_0
      44: fload         6
      46: putfield      #13                 // Field h:F
      49: aload_0
      50: invokespecial #14                 // Method invalidate:()V
      53: return

  private void calculatePositionAndClipping();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field renderable:Z
       5: aload_0
       6: iconst_1
       7: putfield      #4                  // Field coordsOK:Z
      10: aload_0
      11: getfield      #11                 // Field reqviewport:Lcom/sun/prism/image/ViewPort;
      14: ifnull        24
      17: aload_0
      18: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      21: ifnonnull     41
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      29: ifnull        36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: putfield      #3                  // Field renderable:Z
      40: return
      41: aload_0
      42: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      45: invokevirtual #16                 // Method com/sun/prism/Image.getWidth:()I
      48: i2f
      49: fstore_1
      50: aload_0
      51: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      54: invokevirtual #17                 // Method com/sun/prism/Image.getHeight:()I
      57: i2f
      58: fstore_2
      59: fload_1
      60: fconst_0
      61: fcmpl
      62: ifeq          71
      65: fload_2
      66: fconst_0
      67: fcmpl
      68: ifne          72
      71: return
      72: aload_0
      73: aload_0
      74: getfield      #11                 // Field reqviewport:Lcom/sun/prism/image/ViewPort;
      77: aload_0
      78: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      81: invokevirtual #18                 // Method com/sun/prism/Image.getPixelScale:()F
      84: invokevirtual #19                 // Method com/sun/prism/image/ViewPort.getScaledVersion:(F)Lcom/sun/prism/image/ViewPort;
      87: putfield      #7                  // Field imgviewport:Lcom/sun/prism/image/ViewPort;
      90: aload_0
      91: aload_0
      92: getfield      #7                  // Field imgviewport:Lcom/sun/prism/image/ViewPort;
      95: fload_1
      96: fload_2
      97: aload_0
      98: getfield      #12                 // Field w:F
     101: aload_0
     102: getfield      #13                 // Field h:F
     105: invokevirtual #20                 // Method com/sun/prism/image/ViewPort.getClippedCoords:(FFFF)Lcom/sun/prism/image/Coords;
     108: putfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
     111: aload_0
     112: aload_0
     113: getfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
     116: ifnull        123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: putfield      #3                  // Field renderable:Z
     127: return

  protected void doRender(com.sun.prism.Graphics);
    Code:
       0: aload_0
       1: getfield      #4                  // Field coordsOK:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #21                 // Method calculatePositionAndClipping:()V
      11: aload_0
      12: getfield      #3                  // Field renderable:Z
      15: ifeq          23
      18: aload_0
      19: aload_1
      20: invokespecial #22                 // Method com/sun/javafx/sg/prism/NGNode.doRender:(Lcom/sun/prism/Graphics;)V
      23: return

  private int maxSizeWrapper(com.sun.prism.ResourceFactory);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod com/sun/prism/ResourceFactory.getMaximumTextureSize:()I
       6: ireturn

  protected void renderContent(com.sun.prism.Graphics);
    Code:
       0: aload_0
       1: getfield      #15                 // Field image:Lcom/sun/prism/Image;
       4: invokevirtual #16                 // Method com/sun/prism/Image.getWidth:()I
       7: istore_2
       8: aload_0
       9: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      12: invokevirtual #17                 // Method com/sun/prism/Image.getHeight:()I
      15: istore_3
      16: aload_1
      17: invokeinterface #24,  1           // InterfaceMethod com/sun/prism/Graphics.getResourceFactory:()Lcom/sun/prism/ResourceFactory;
      22: astore        4
      24: aload_0
      25: aload         4
      27: invokespecial #25                 // Method maxSizeWrapper:(Lcom/sun/prism/ResourceFactory;)I
      30: istore        5
      32: iload_2
      33: iload         5
      35: if_icmpgt     138
      38: iload_3
      39: iload         5
      41: if_icmpgt     138
      44: aload         4
      46: aload_0
      47: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      50: getstatic     #26                 // Field com/sun/prism/Texture$WrapMode.CLAMP_TO_EDGE:Lcom/sun/prism/Texture$WrapMode;
      53: invokeinterface #27,  3           // InterfaceMethod com/sun/prism/ResourceFactory.getCachedTexture:(Lcom/sun/prism/Image;Lcom/sun/prism/Texture$WrapMode;)Lcom/sun/prism/Texture;
      58: astore        6
      60: aload_0
      61: getfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
      64: ifnonnull     110
      67: aload_1
      68: aload         6
      70: aload_0
      71: getfield      #28                 // Field x:F
      74: aload_0
      75: getfield      #29                 // Field y:F
      78: aload_0
      79: getfield      #28                 // Field x:F
      82: aload_0
      83: getfield      #12                 // Field w:F
      86: fadd
      87: aload_0
      88: getfield      #29                 // Field y:F
      91: aload_0
      92: getfield      #13                 // Field h:F
      95: fadd
      96: fconst_0
      97: fconst_0
      98: iload_2
      99: i2f
     100: iload_3
     101: i2f
     102: invokeinterface #30,  10          // InterfaceMethod com/sun/prism/Graphics.drawTexture:(Lcom/sun/prism/Texture;FFFFFFFF)V
     107: goto          128
     110: aload_0
     111: getfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
     114: aload         6
     116: aload_1
     117: aload_0
     118: getfield      #28                 // Field x:F
     121: aload_0
     122: getfield      #29                 // Field y:F
     125: invokevirtual #31                 // Method com/sun/prism/image/Coords.draw:(Lcom/sun/prism/Texture;Lcom/sun/prism/Graphics;FF)V
     128: aload         6
     130: invokeinterface #32,  1           // InterfaceMethod com/sun/prism/Texture.unlock:()V
     135: goto          247
     138: aload_0
     139: getfield      #33                 // Field compoundImage:Lcom/sun/prism/image/CachingCompoundImage;
     142: ifnonnull     162
     145: aload_0
     146: new           #34                 // class com/sun/prism/image/CachingCompoundImage
     149: dup
     150: aload_0
     151: getfield      #15                 // Field image:Lcom/sun/prism/Image;
     154: iload         5
     156: invokespecial #35                 // Method com/sun/prism/image/CachingCompoundImage."<init>":(Lcom/sun/prism/Image;I)V
     159: putfield      #33                 // Field compoundImage:Lcom/sun/prism/image/CachingCompoundImage;
     162: aload_0
     163: getfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
     166: ifnonnull     201
     169: aload_0
     170: new           #36                 // class com/sun/prism/image/Coords
     173: dup
     174: aload_0
     175: getfield      #12                 // Field w:F
     178: aload_0
     179: getfield      #13                 // Field h:F
     182: new           #9                  // class com/sun/prism/image/ViewPort
     185: dup
     186: fconst_0
     187: fconst_0
     188: iload_2
     189: i2f
     190: iload_3
     191: i2f
     192: invokespecial #10                 // Method com/sun/prism/image/ViewPort."<init>":(FFFF)V
     195: invokespecial #37                 // Method com/sun/prism/image/Coords."<init>":(FFLcom/sun/prism/image/ViewPort;)V
     198: putfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
     201: aload_0
     202: getfield      #6                  // Field compoundCoords:Lcom/sun/prism/image/CompoundCoords;
     205: ifnonnull     227
     208: aload_0
     209: new           #38                 // class com/sun/prism/image/CompoundCoords
     212: dup
     213: aload_0
     214: getfield      #33                 // Field compoundImage:Lcom/sun/prism/image/CachingCompoundImage;
     217: aload_0
     218: getfield      #5                  // Field coords:Lcom/sun/prism/image/Coords;
     221: invokespecial #39                 // Method com/sun/prism/image/CompoundCoords."<init>":(Lcom/sun/prism/image/CompoundImage;Lcom/sun/prism/image/Coords;)V
     224: putfield      #6                  // Field compoundCoords:Lcom/sun/prism/image/CompoundCoords;
     227: aload_0
     228: getfield      #6                  // Field compoundCoords:Lcom/sun/prism/image/CompoundCoords;
     231: aload_1
     232: aload_0
     233: getfield      #33                 // Field compoundImage:Lcom/sun/prism/image/CachingCompoundImage;
     236: aload_0
     237: getfield      #28                 // Field x:F
     240: aload_0
     241: getfield      #29                 // Field y:F
     244: invokevirtual #40                 // Method com/sun/prism/image/CompoundCoords.draw:(Lcom/sun/prism/Graphics;Lcom/sun/prism/image/CompoundImage;FF)V
     247: return

  protected boolean hasOverlappingContents();
    Code:
       0: iconst_0
       1: ireturn

  public void setImage(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #41                 // class com/sun/prism/Image
       4: astore_2
       5: aload_0
       6: getfield      #15                 // Field image:Lcom/sun/prism/Image;
       9: aload_2
      10: if_acmpne     14
      13: return
      14: aload_2
      15: ifnull        68
      18: aload_0
      19: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      22: ifnull        68
      25: aload_0
      26: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      29: invokevirtual #18                 // Method com/sun/prism/Image.getPixelScale:()F
      32: aload_2
      33: invokevirtual #18                 // Method com/sun/prism/Image.getPixelScale:()F
      36: fcmpl
      37: ifne          68
      40: aload_0
      41: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      44: invokevirtual #17                 // Method com/sun/prism/Image.getHeight:()I
      47: aload_2
      48: invokevirtual #17                 // Method com/sun/prism/Image.getHeight:()I
      51: if_icmpne     68
      54: aload_0
      55: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      58: invokevirtual #16                 // Method com/sun/prism/Image.getWidth:()I
      61: aload_2
      62: invokevirtual #16                 // Method com/sun/prism/Image.getWidth:()I
      65: if_icmpeq     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore_3
      74: aload_0
      75: aload_2
      76: putfield      #15                 // Field image:Lcom/sun/prism/Image;
      79: aload_0
      80: aconst_null
      81: putfield      #33                 // Field compoundImage:Lcom/sun/prism/image/CachingCompoundImage;
      84: iload_3
      85: ifeq          92
      88: aload_0
      89: invokespecial #14                 // Method invalidate:()V
      92: return

  public void setX(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field x:F
       4: fload_1
       5: fcmpl
       6: ifeq          18
       9: aload_0
      10: fload_1
      11: putfield      #28                 // Field x:F
      14: aload_0
      15: invokevirtual #8                  // Method geometryChanged:()V
      18: return

  public void setY(float);
    Code:
       0: aload_0
       1: getfield      #29                 // Field y:F
       4: fload_1
       5: fcmpl
       6: ifeq          18
       9: aload_0
      10: fload_1
      11: putfield      #29                 // Field y:F
      14: aload_0
      15: invokevirtual #8                  // Method geometryChanged:()V
      18: return

  public void setSmooth(boolean);
    Code:
       0: return

  protected boolean supportsOpaqueRegions();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean hasOpaqueRegion();
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          43
       6: aload_0
       7: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      10: ifnull        43
      13: aload_0
      14: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      17: invokevirtual #16                 // Method com/sun/prism/Image.getWidth:()I
      20: iconst_1
      21: if_icmplt     35
      24: aload_0
      25: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      28: invokevirtual #17                 // Method com/sun/prism/Image.getHeight:()I
      31: iconst_1
      32: if_icmpge     43
      35: new           #43                 // class java/lang/AssertionError
      38: dup
      39: invokespecial #44                 // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: aload_0
      44: invokespecial #45                 // Method com/sun/javafx/sg/prism/NGNode.hasOpaqueRegion:()Z
      47: ifeq          89
      50: aload_0
      51: getfield      #12                 // Field w:F
      54: fconst_1
      55: fcmpl
      56: iflt          89
      59: aload_0
      60: getfield      #13                 // Field h:F
      63: fconst_1
      64: fcmpl
      65: iflt          89
      68: aload_0
      69: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      72: ifnull        89
      75: aload_0
      76: getfield      #15                 // Field image:Lcom/sun/prism/Image;
      79: invokevirtual #46                 // Method com/sun/prism/Image.isOpaque:()Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn

  protected com.sun.javafx.geom.RectBounds computeOpaqueRegion(com.sun.javafx.geom.RectBounds);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #28                 // Field x:F
       5: aload_0
       6: getfield      #29                 // Field y:F
       9: fconst_0
      10: aload_0
      11: getfield      #28                 // Field x:F
      14: aload_0
      15: getfield      #12                 // Field w:F
      18: fadd
      19: aload_0
      20: getfield      #29                 // Field y:F
      23: aload_0
      24: getfield      #13                 // Field h:F
      27: fadd
      28: fconst_0
      29: invokevirtual #47                 // Method com/sun/javafx/geom/RectBounds.deriveWithNewBounds:(FFFFFF)Lcom/sun/javafx/geom/BaseBounds;
      32: checkcast     #48                 // class com/sun/javafx/geom/RectBounds
      35: areturn

  static {};
    Code:
       0: ldc           #1                  // class com/sun/javafx/sg/prism/NGImageView
       2: invokevirtual #49                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #42                 // Field $assertionsDisabled:Z
      16: return
}
