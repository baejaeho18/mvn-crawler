Compiled from "GrowableDataBuffer.java"
public class com.sun.javafx.sg.prism.GrowableDataBuffer {
  static final int VAL_GROW_QUANTUM;

  static final int MAX_VAL_GROW;

  static final int MIN_OBJ_GROW;

  static com.sun.javafx.sg.prism.GrowableDataBuffer$WeakLink buflist;

  byte[] vals;

  int writevalpos;

  int readvalpos;

  int savevalpos;

  java.lang.Object[] objs;

  int writeobjpos;

  int readobjpos;

  int saveobjpos;

  public static com.sun.javafx.sg.prism.GrowableDataBuffer getBuffer(int);
    Code:
       0: iload_0
       1: bipush        32
       3: invokestatic  #2                  // Method getBuffer:(II)Lcom/sun/javafx/sg/prism/GrowableDataBuffer;
       6: areturn

  public static synchronized com.sun.javafx.sg.prism.GrowableDataBuffer getBuffer(int, int);
    Code:
       0: getstatic     #3                  // Field buflist:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
       3: astore_2
       4: getstatic     #3                  // Field buflist:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
       7: getfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      10: astore_3
      11: aload_3
      12: ifnull        84
      15: aload_3
      16: getfield      #5                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.bufref:Ljava/lang/ref/WeakReference;
      19: invokevirtual #6                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      22: checkcast     #1                  // class com/sun/javafx/sg/prism/GrowableDataBuffer
      25: astore        4
      27: aload_3
      28: getfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      31: astore        5
      33: aload         4
      35: ifnonnull     49
      38: aload_2
      39: aload         5
      41: dup
      42: astore_3
      43: putfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      46: goto          11
      49: aload         4
      51: invokevirtual #7                  // Method valueCapacity:()I
      54: iload_0
      55: if_icmplt     76
      58: aload         4
      60: invokevirtual #8                  // Method objectCapacity:()I
      63: iload_1
      64: if_icmplt     76
      67: aload_2
      68: aload         5
      70: putfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      73: aload         4
      75: areturn
      76: aload_3
      77: astore_2
      78: aload         5
      80: astore_3
      81: goto          11
      84: new           #1                  // class com/sun/javafx/sg/prism/GrowableDataBuffer
      87: dup
      88: iload_0
      89: iload_1
      90: invokespecial #9                  // Method "<init>":(II)V
      93: areturn

  public static synchronized void returnBuffer(com.sun.javafx.sg.prism.GrowableDataBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method valueCapacity:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #8                  // Method objectCapacity:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #10                 // Method reset:()V
      14: getstatic     #3                  // Field buflist:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      17: astore_3
      18: getstatic     #3                  // Field buflist:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      21: getfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      24: astore        4
      26: aload         4
      28: ifnull        113
      31: aload         4
      33: getfield      #5                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.bufref:Ljava/lang/ref/WeakReference;
      36: invokevirtual #6                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      39: checkcast     #1                  // class com/sun/javafx/sg/prism/GrowableDataBuffer
      42: astore        5
      44: aload         4
      46: getfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      49: astore        6
      51: aload         5
      53: ifnonnull     68
      56: aload_3
      57: aload         6
      59: dup
      60: astore        4
      62: putfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      65: goto          26
      68: aload         5
      70: invokevirtual #7                  // Method valueCapacity:()I
      73: istore        7
      75: aload         5
      77: invokevirtual #8                  // Method objectCapacity:()I
      80: istore        8
      82: iload         7
      84: iload_1
      85: if_icmpgt     113
      88: iload         7
      90: iload_1
      91: if_icmpne     103
      94: iload         8
      96: iload_2
      97: if_icmplt     103
     100: goto          113
     103: aload         4
     105: astore_3
     106: aload         6
     108: astore        4
     110: goto          26
     113: new           #11                 // class com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink
     116: dup
     117: invokespecial #12                 // Method com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink."<init>":()V
     120: astore        5
     122: aload         5
     124: new           #13                 // class java/lang/ref/WeakReference
     127: dup
     128: aload_0
     129: invokespecial #14                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     132: putfield      #5                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.bufref:Ljava/lang/ref/WeakReference;
     135: aload_3
     136: aload         5
     138: putfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
     141: aload         5
     143: aload         4
     145: putfield      #4                  // Field com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink.next:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
     148: return

  private com.sun.javafx.sg.prism.GrowableDataBuffer(int, int);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       byte
       8: putfield      #16                 // Field vals:[B
      11: aload_0
      12: iload_2
      13: anewarray     #17                 // class java/lang/Object
      16: putfield      #18                 // Field objs:[Ljava/lang/Object;
      19: return

  public int readValuePosition();
    Code:
       0: aload_0
       1: getfield      #19                 // Field readvalpos:I
       4: ireturn

  public int writeValuePosition();
    Code:
       0: aload_0
       1: getfield      #20                 // Field writevalpos:I
       4: ireturn

  public int readObjectPosition();
    Code:
       0: aload_0
       1: getfield      #21                 // Field readobjpos:I
       4: ireturn

  public int writeObjectPosition();
    Code:
       0: aload_0
       1: getfield      #22                 // Field writeobjpos:I
       4: ireturn

  public int valueCapacity();
    Code:
       0: aload_0
       1: getfield      #16                 // Field vals:[B
       4: arraylength
       5: ireturn

  public int objectCapacity();
    Code:
       0: aload_0
       1: getfield      #18                 // Field objs:[Ljava/lang/Object;
       4: arraylength
       5: ireturn

  public void save();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field readvalpos:I
       5: putfield      #23                 // Field savevalpos:I
       8: aload_0
       9: aload_0
      10: getfield      #21                 // Field readobjpos:I
      13: putfield      #24                 // Field saveobjpos:I
      16: return

  public void restore();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field savevalpos:I
       5: putfield      #19                 // Field readvalpos:I
       8: aload_0
       9: aload_0
      10: getfield      #24                 // Field saveobjpos:I
      13: putfield      #21                 // Field readobjpos:I
      16: return

  public boolean hasValues();
    Code:
       0: aload_0
       1: getfield      #19                 // Field readvalpos:I
       4: aload_0
       5: getfield      #20                 // Field writevalpos:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean hasObjects();
    Code:
       0: aload_0
       1: getfield      #21                 // Field readobjpos:I
       4: aload_0
       5: getfield      #22                 // Field writeobjpos:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field writevalpos:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: iconst_0
       4: dup_x1
       5: putfield      #20                 // Field writevalpos:I
       8: dup_x1
       9: putfield      #23                 // Field savevalpos:I
      12: putfield      #19                 // Field readvalpos:I
      15: aload_0
      16: aload_0
      17: iconst_0
      18: dup_x1
      19: putfield      #24                 // Field saveobjpos:I
      22: putfield      #21                 // Field readobjpos:I
      25: aload_0
      26: getfield      #22                 // Field writeobjpos:I
      29: ifle          50
      32: aload_0
      33: getfield      #18                 // Field objs:[Ljava/lang/Object;
      36: iconst_0
      37: aload_0
      38: getfield      #22                 // Field writeobjpos:I
      41: aconst_null
      42: invokestatic  #25                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      45: aload_0
      46: iconst_0
      47: putfield      #22                 // Field writeobjpos:I
      50: return

  public void append(com.sun.javafx.sg.prism.GrowableDataBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #20                 // Field writevalpos:I
       5: invokespecial #26                 // Method ensureWriteCapacity:(I)V
       8: aload_1
       9: getfield      #16                 // Field vals:[B
      12: iconst_0
      13: aload_0
      14: getfield      #16                 // Field vals:[B
      17: aload_0
      18: getfield      #20                 // Field writevalpos:I
      21: aload_1
      22: getfield      #20                 // Field writevalpos:I
      25: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: aload_0
      29: dup
      30: getfield      #20                 // Field writevalpos:I
      33: aload_1
      34: getfield      #20                 // Field writevalpos:I
      37: iadd
      38: putfield      #20                 // Field writevalpos:I
      41: aload_0
      42: getfield      #22                 // Field writeobjpos:I
      45: aload_1
      46: getfield      #22                 // Field writeobjpos:I
      49: iadd
      50: aload_0
      51: getfield      #18                 // Field objs:[Ljava/lang/Object;
      54: arraylength
      55: if_icmple     78
      58: aload_0
      59: aload_0
      60: getfield      #18                 // Field objs:[Ljava/lang/Object;
      63: aload_0
      64: getfield      #22                 // Field writeobjpos:I
      67: aload_1
      68: getfield      #22                 // Field writeobjpos:I
      71: iadd
      72: invokestatic  #28                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      75: putfield      #18                 // Field objs:[Ljava/lang/Object;
      78: aload_1
      79: getfield      #18                 // Field objs:[Ljava/lang/Object;
      82: iconst_0
      83: aload_0
      84: getfield      #18                 // Field objs:[Ljava/lang/Object;
      87: aload_0
      88: getfield      #22                 // Field writeobjpos:I
      91: aload_1
      92: getfield      #22                 // Field writeobjpos:I
      95: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      98: aload_0
      99: dup
     100: getfield      #22                 // Field writeobjpos:I
     103: aload_1
     104: getfield      #22                 // Field writeobjpos:I
     107: iadd
     108: putfield      #22                 // Field writeobjpos:I
     111: return

  private void ensureWriteCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #16                 // Field vals:[B
       5: arraylength
       6: aload_0
       7: getfield      #20                 // Field writevalpos:I
      10: isub
      11: if_icmple     75
      14: aload_0
      15: getfield      #20                 // Field writevalpos:I
      18: iload_1
      19: iadd
      20: aload_0
      21: getfield      #16                 // Field vals:[B
      24: arraylength
      25: isub
      26: istore_1
      27: aload_0
      28: getfield      #16                 // Field vals:[B
      31: arraylength
      32: ldc           #29                 // int 1048576
      34: invokestatic  #30                 // Method java/lang/Math.min:(II)I
      37: istore_2
      38: iload_2
      39: iload_1
      40: if_icmpge     45
      43: iload_1
      44: istore_2
      45: aload_0
      46: getfield      #16                 // Field vals:[B
      49: arraylength
      50: iload_2
      51: iadd
      52: istore_3
      53: iload_3
      54: sipush        1023
      57: iadd
      58: sipush        -1024
      61: iand
      62: istore_3
      63: aload_0
      64: aload_0
      65: getfield      #16                 // Field vals:[B
      68: iload_3
      69: invokestatic  #31                 // Method java/util/Arrays.copyOf:([BI)[B
      72: putfield      #16                 // Field vals:[B
      75: return

  private void ensureReadCapacity(int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field readvalpos:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #20                 // Field writevalpos:I
      10: if_icmple     21
      13: new           #32                 // class java/nio/BufferOverflowException
      16: dup
      17: invokespecial #33                 // Method java/nio/BufferOverflowException."<init>":()V
      20: athrow
      21: return

  public void putBoolean(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #34                 // Method putByte:(B)V
      13: return

  public void putByte(byte);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #26                 // Method ensureWriteCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #20                 // Field writevalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #20                 // Field writevalpos:I
      20: iload_1
      21: bastore
      22: return

  public void putChar(char);
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #26                 // Method ensureWriteCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #20                 // Field writevalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #20                 // Field writevalpos:I
      20: iload_1
      21: bipush        8
      23: ishr
      24: i2b
      25: bastore
      26: aload_0
      27: getfield      #16                 // Field vals:[B
      30: aload_0
      31: dup
      32: getfield      #20                 // Field writevalpos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #20                 // Field writevalpos:I
      41: iload_1
      42: i2b
      43: bastore
      44: return

  public void putShort(short);
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #26                 // Method ensureWriteCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #20                 // Field writevalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #20                 // Field writevalpos:I
      20: iload_1
      21: bipush        8
      23: ishr
      24: i2b
      25: bastore
      26: aload_0
      27: getfield      #16                 // Field vals:[B
      30: aload_0
      31: dup
      32: getfield      #20                 // Field writevalpos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #20                 // Field writevalpos:I
      41: iload_1
      42: i2b
      43: bastore
      44: return

  public void putInt(int);
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #26                 // Method ensureWriteCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #20                 // Field writevalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #20                 // Field writevalpos:I
      20: iload_1
      21: bipush        24
      23: ishr
      24: i2b
      25: bastore
      26: aload_0
      27: getfield      #16                 // Field vals:[B
      30: aload_0
      31: dup
      32: getfield      #20                 // Field writevalpos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #20                 // Field writevalpos:I
      41: iload_1
      42: bipush        16
      44: ishr
      45: i2b
      46: bastore
      47: aload_0
      48: getfield      #16                 // Field vals:[B
      51: aload_0
      52: dup
      53: getfield      #20                 // Field writevalpos:I
      56: dup_x1
      57: iconst_1
      58: iadd
      59: putfield      #20                 // Field writevalpos:I
      62: iload_1
      63: bipush        8
      65: ishr
      66: i2b
      67: bastore
      68: aload_0
      69: getfield      #16                 // Field vals:[B
      72: aload_0
      73: dup
      74: getfield      #20                 // Field writevalpos:I
      77: dup_x1
      78: iconst_1
      79: iadd
      80: putfield      #20                 // Field writevalpos:I
      83: iload_1
      84: i2b
      85: bastore
      86: return

  public void putLong(long);
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #26                 // Method ensureWriteCapacity:(I)V
       6: aload_0
       7: getfield      #16                 // Field vals:[B
      10: aload_0
      11: dup
      12: getfield      #20                 // Field writevalpos:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #20                 // Field writevalpos:I
      21: lload_1
      22: bipush        56
      24: lshr
      25: l2i
      26: i2b
      27: bastore
      28: aload_0
      29: getfield      #16                 // Field vals:[B
      32: aload_0
      33: dup
      34: getfield      #20                 // Field writevalpos:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #20                 // Field writevalpos:I
      43: lload_1
      44: bipush        48
      46: lshr
      47: l2i
      48: i2b
      49: bastore
      50: aload_0
      51: getfield      #16                 // Field vals:[B
      54: aload_0
      55: dup
      56: getfield      #20                 // Field writevalpos:I
      59: dup_x1
      60: iconst_1
      61: iadd
      62: putfield      #20                 // Field writevalpos:I
      65: lload_1
      66: bipush        40
      68: lshr
      69: l2i
      70: i2b
      71: bastore
      72: aload_0
      73: getfield      #16                 // Field vals:[B
      76: aload_0
      77: dup
      78: getfield      #20                 // Field writevalpos:I
      81: dup_x1
      82: iconst_1
      83: iadd
      84: putfield      #20                 // Field writevalpos:I
      87: lload_1
      88: bipush        32
      90: lshr
      91: l2i
      92: i2b
      93: bastore
      94: aload_0
      95: getfield      #16                 // Field vals:[B
      98: aload_0
      99: dup
     100: getfield      #20                 // Field writevalpos:I
     103: dup_x1
     104: iconst_1
     105: iadd
     106: putfield      #20                 // Field writevalpos:I
     109: lload_1
     110: bipush        24
     112: lshr
     113: l2i
     114: i2b
     115: bastore
     116: aload_0
     117: getfield      #16                 // Field vals:[B
     120: aload_0
     121: dup
     122: getfield      #20                 // Field writevalpos:I
     125: dup_x1
     126: iconst_1
     127: iadd
     128: putfield      #20                 // Field writevalpos:I
     131: lload_1
     132: bipush        16
     134: lshr
     135: l2i
     136: i2b
     137: bastore
     138: aload_0
     139: getfield      #16                 // Field vals:[B
     142: aload_0
     143: dup
     144: getfield      #20                 // Field writevalpos:I
     147: dup_x1
     148: iconst_1
     149: iadd
     150: putfield      #20                 // Field writevalpos:I
     153: lload_1
     154: bipush        8
     156: lshr
     157: l2i
     158: i2b
     159: bastore
     160: aload_0
     161: getfield      #16                 // Field vals:[B
     164: aload_0
     165: dup
     166: getfield      #20                 // Field writevalpos:I
     169: dup_x1
     170: iconst_1
     171: iadd
     172: putfield      #20                 // Field writevalpos:I
     175: lload_1
     176: l2i
     177: i2b
     178: bastore
     179: return

  public void putFloat(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #35                 // Method java/lang/Float.floatToIntBits:(F)I
       5: invokevirtual #36                 // Method putInt:(I)V
       8: return

  public void putDouble(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #37                 // Method java/lang/Double.doubleToLongBits:(D)J
       5: invokevirtual #38                 // Method putLong:(J)V
       8: return

  public void putObject(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #22                 // Field writeobjpos:I
       4: aload_0
       5: getfield      #18                 // Field objs:[Ljava/lang/Object;
       8: arraylength
       9: if_icmplt     30
      12: aload_0
      13: aload_0
      14: getfield      #18                 // Field objs:[Ljava/lang/Object;
      17: aload_0
      18: getfield      #22                 // Field writeobjpos:I
      21: bipush        32
      23: iadd
      24: invokestatic  #28                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      27: putfield      #18                 // Field objs:[Ljava/lang/Object;
      30: aload_0
      31: getfield      #18                 // Field objs:[Ljava/lang/Object;
      34: aload_0
      35: dup
      36: getfield      #22                 // Field writeobjpos:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #22                 // Field writeobjpos:I
      45: aload_1
      46: aastore
      47: return

  public byte peekByte(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #20                 // Field writevalpos:I
       5: if_icmplt     16
       8: new           #32                 // class java/nio/BufferOverflowException
      11: dup
      12: invokespecial #33                 // Method java/nio/BufferOverflowException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #16                 // Field vals:[B
      20: iload_1
      21: baload
      22: ireturn

  public java.lang.Object peekObject(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #22                 // Field writeobjpos:I
       5: if_icmplt     16
       8: new           #32                 // class java/nio/BufferOverflowException
      11: dup
      12: invokespecial #33                 // Method java/nio/BufferOverflowException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #18                 // Field objs:[Ljava/lang/Object;
      20: iload_1
      21: aaload
      22: areturn

  public boolean getBoolean();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #39                 // Method ensureReadCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #19                 // Field readvalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #19                 // Field readvalpos:I
      20: baload
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public byte getByte();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #39                 // Method ensureReadCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #19                 // Field readvalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #19                 // Field readvalpos:I
      20: baload
      21: ireturn

  public int getUByte();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #39                 // Method ensureReadCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #19                 // Field readvalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #19                 // Field readvalpos:I
      20: baload
      21: sipush        255
      24: iand
      25: ireturn

  public char getChar();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #39                 // Method ensureReadCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #19                 // Field readvalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #19                 // Field readvalpos:I
      20: baload
      21: istore_1
      22: iload_1
      23: bipush        8
      25: ishl
      26: aload_0
      27: getfield      #16                 // Field vals:[B
      30: aload_0
      31: dup
      32: getfield      #19                 // Field readvalpos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #19                 // Field readvalpos:I
      41: baload
      42: sipush        255
      45: iand
      46: ior
      47: istore_1
      48: iload_1
      49: i2c
      50: ireturn

  public short getShort();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #39                 // Method ensureReadCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #19                 // Field readvalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #19                 // Field readvalpos:I
      20: baload
      21: istore_1
      22: iload_1
      23: bipush        8
      25: ishl
      26: aload_0
      27: getfield      #16                 // Field vals:[B
      30: aload_0
      31: dup
      32: getfield      #19                 // Field readvalpos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #19                 // Field readvalpos:I
      41: baload
      42: sipush        255
      45: iand
      46: ior
      47: istore_1
      48: iload_1
      49: i2s
      50: ireturn

  public int getInt();
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #39                 // Method ensureReadCapacity:(I)V
       5: aload_0
       6: getfield      #16                 // Field vals:[B
       9: aload_0
      10: dup
      11: getfield      #19                 // Field readvalpos:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #19                 // Field readvalpos:I
      20: baload
      21: istore_1
      22: iload_1
      23: bipush        8
      25: ishl
      26: aload_0
      27: getfield      #16                 // Field vals:[B
      30: aload_0
      31: dup
      32: getfield      #19                 // Field readvalpos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #19                 // Field readvalpos:I
      41: baload
      42: sipush        255
      45: iand
      46: ior
      47: istore_1
      48: iload_1
      49: bipush        8
      51: ishl
      52: aload_0
      53: getfield      #16                 // Field vals:[B
      56: aload_0
      57: dup
      58: getfield      #19                 // Field readvalpos:I
      61: dup_x1
      62: iconst_1
      63: iadd
      64: putfield      #19                 // Field readvalpos:I
      67: baload
      68: sipush        255
      71: iand
      72: ior
      73: istore_1
      74: iload_1
      75: bipush        8
      77: ishl
      78: aload_0
      79: getfield      #16                 // Field vals:[B
      82: aload_0
      83: dup
      84: getfield      #19                 // Field readvalpos:I
      87: dup_x1
      88: iconst_1
      89: iadd
      90: putfield      #19                 // Field readvalpos:I
      93: baload
      94: sipush        255
      97: iand
      98: ior
      99: istore_1
     100: iload_1
     101: ireturn

  public long getLong();
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #39                 // Method ensureReadCapacity:(I)V
       6: aload_0
       7: getfield      #16                 // Field vals:[B
      10: aload_0
      11: dup
      12: getfield      #19                 // Field readvalpos:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #19                 // Field readvalpos:I
      21: baload
      22: i2l
      23: lstore_1
      24: lload_1
      25: bipush        8
      27: lshl
      28: aload_0
      29: getfield      #16                 // Field vals:[B
      32: aload_0
      33: dup
      34: getfield      #19                 // Field readvalpos:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #19                 // Field readvalpos:I
      43: baload
      44: sipush        255
      47: iand
      48: i2l
      49: lor
      50: lstore_1
      51: lload_1
      52: bipush        8
      54: lshl
      55: aload_0
      56: getfield      #16                 // Field vals:[B
      59: aload_0
      60: dup
      61: getfield      #19                 // Field readvalpos:I
      64: dup_x1
      65: iconst_1
      66: iadd
      67: putfield      #19                 // Field readvalpos:I
      70: baload
      71: sipush        255
      74: iand
      75: i2l
      76: lor
      77: lstore_1
      78: lload_1
      79: bipush        8
      81: lshl
      82: aload_0
      83: getfield      #16                 // Field vals:[B
      86: aload_0
      87: dup
      88: getfield      #19                 // Field readvalpos:I
      91: dup_x1
      92: iconst_1
      93: iadd
      94: putfield      #19                 // Field readvalpos:I
      97: baload
      98: sipush        255
     101: iand
     102: i2l
     103: lor
     104: lstore_1
     105: lload_1
     106: bipush        8
     108: lshl
     109: aload_0
     110: getfield      #16                 // Field vals:[B
     113: aload_0
     114: dup
     115: getfield      #19                 // Field readvalpos:I
     118: dup_x1
     119: iconst_1
     120: iadd
     121: putfield      #19                 // Field readvalpos:I
     124: baload
     125: sipush        255
     128: iand
     129: i2l
     130: lor
     131: lstore_1
     132: lload_1
     133: bipush        8
     135: lshl
     136: aload_0
     137: getfield      #16                 // Field vals:[B
     140: aload_0
     141: dup
     142: getfield      #19                 // Field readvalpos:I
     145: dup_x1
     146: iconst_1
     147: iadd
     148: putfield      #19                 // Field readvalpos:I
     151: baload
     152: sipush        255
     155: iand
     156: i2l
     157: lor
     158: lstore_1
     159: lload_1
     160: bipush        8
     162: lshl
     163: aload_0
     164: getfield      #16                 // Field vals:[B
     167: aload_0
     168: dup
     169: getfield      #19                 // Field readvalpos:I
     172: dup_x1
     173: iconst_1
     174: iadd
     175: putfield      #19                 // Field readvalpos:I
     178: baload
     179: sipush        255
     182: iand
     183: i2l
     184: lor
     185: lstore_1
     186: lload_1
     187: bipush        8
     189: lshl
     190: aload_0
     191: getfield      #16                 // Field vals:[B
     194: aload_0
     195: dup
     196: getfield      #19                 // Field readvalpos:I
     199: dup_x1
     200: iconst_1
     201: iadd
     202: putfield      #19                 // Field readvalpos:I
     205: baload
     206: sipush        255
     209: iand
     210: i2l
     211: lor
     212: lstore_1
     213: lload_1
     214: lreturn

  public float getFloat();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getInt:()I
       4: invokestatic  #41                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public double getDouble();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getLong:()J
       4: invokestatic  #43                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #21                 // Field readobjpos:I
       4: aload_0
       5: getfield      #18                 // Field objs:[Ljava/lang/Object;
       8: arraylength
       9: if_icmplt     20
      12: new           #32                 // class java/nio/BufferOverflowException
      15: dup
      16: invokespecial #33                 // Method java/nio/BufferOverflowException."<init>":()V
      19: athrow
      20: aload_0
      21: getfield      #18                 // Field objs:[Ljava/lang/Object;
      24: aload_0
      25: dup
      26: getfield      #21                 // Field readobjpos:I
      29: dup_x1
      30: iconst_1
      31: iadd
      32: putfield      #21                 // Field readobjpos:I
      35: aaload
      36: areturn

  static {};
    Code:
       0: new           #11                 // class com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink
       3: dup
       4: invokespecial #12                 // Method com/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink."<init>":()V
       7: putstatic     #3                  // Field buflist:Lcom/sun/javafx/sg/prism/GrowableDataBuffer$WeakLink;
      10: return
}
