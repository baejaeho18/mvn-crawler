Compiled from "NGNode.java"
class com.sun.javafx.sg.prism.NGNode$EffectDirtyBoundsHelper extends com.sun.scenario.effect.Effect {
  private com.sun.javafx.geom.BaseBounds bounds;

  private static com.sun.javafx.sg.prism.NGNode$EffectDirtyBoundsHelper instance;

  private com.sun.javafx.geom.DirtyRegionContainer drc;

  private com.sun.javafx.sg.prism.NGNode$EffectDirtyBoundsHelper();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/scenario/effect/Effect."<init>":()V
       4: return

  public void setInputBounds(com.sun.javafx.geom.BaseBounds);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
       5: return

  public com.sun.scenario.effect.ImageData filter(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, java.lang.Object, com.sun.scenario.effect.Effect);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
       4: invokevirtual #6                  // Method com/sun/javafx/geom/BaseBounds.getBoundsType:()Lcom/sun/javafx/geom/BaseBounds$BoundsType;
       7: getstatic     #7                  // Field com/sun/javafx/geom/BaseBounds$BoundsType.RECTANGLE:Lcom/sun/javafx/geom/BaseBounds$BoundsType;
      10: if_acmpne     18
      13: aload_0
      14: getfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
      17: areturn
      18: new           #8                  // class com/sun/javafx/geom/RectBounds
      21: dup
      22: aload_0
      23: getfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
      26: invokevirtual #9                  // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
      29: aload_0
      30: getfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
      33: invokevirtual #10                 // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
      36: aload_0
      37: getfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
      40: invokevirtual #11                 // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
      43: aload_0
      44: getfield      #3                  // Field bounds:Lcom/sun/javafx/geom/BaseBounds;
      47: invokevirtual #12                 // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
      50: invokespecial #13                 // Method com/sun/javafx/geom/RectBounds."<init>":(FFFF)V
      53: areturn

  public com.sun.scenario.effect.Effect$AccelType getAccelType(com.sun.scenario.effect.FilterContext);
    Code:
       0: aconst_null
       1: areturn

  public static com.sun.javafx.sg.prism.NGNode$EffectDirtyBoundsHelper getInstance();
    Code:
       0: getstatic     #14                 // Field instance:Lcom/sun/javafx/sg/prism/NGNode$EffectDirtyBoundsHelper;
       3: ifnonnull     16
       6: new           #15                 // class com/sun/javafx/sg/prism/NGNode$EffectDirtyBoundsHelper
       9: dup
      10: invokespecial #16                 // Method "<init>":()V
      13: putstatic     #14                 // Field instance:Lcom/sun/javafx/sg/prism/NGNode$EffectDirtyBoundsHelper;
      16: getstatic     #14                 // Field instance:Lcom/sun/javafx/sg/prism/NGNode$EffectDirtyBoundsHelper;
      19: areturn

  public boolean reducesOpaquePixels();
    Code:
       0: iconst_1
       1: ireturn

  private void setDirtyRegions(com.sun.javafx.geom.DirtyRegionContainer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field drc:Lcom/sun/javafx/geom/DirtyRegionContainer;
       5: return

  public com.sun.javafx.geom.DirtyRegionContainer getDirtyRegions(com.sun.scenario.effect.Effect, com.sun.javafx.geom.DirtyRegionPool);
    Code:
       0: aload_2
       1: invokevirtual #18                 // Method com/sun/javafx/geom/DirtyRegionPool.checkOut:()Lcom/sun/javafx/geom/DirtyRegionContainer;
       4: astore_3
       5: aload_3
       6: aload_0
       7: getfield      #17                 // Field drc:Lcom/sun/javafx/geom/DirtyRegionContainer;
      10: invokevirtual #19                 // Method com/sun/javafx/geom/DirtyRegionContainer.deriveWithNewContainer:(Lcom/sun/javafx/geom/DirtyRegionContainer;)Lcom/sun/javafx/geom/DirtyRegionContainer;
      13: pop
      14: aload_3
      15: areturn

  static void access$000(com.sun.javafx.sg.prism.NGNode$EffectDirtyBoundsHelper, com.sun.javafx.geom.DirtyRegionContainer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method setDirtyRegions:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
       5: return

  static {};
    Code:
       0: aconst_null
       1: putstatic     #14                 // Field instance:Lcom/sun/javafx/sg/prism/NGNode$EffectDirtyBoundsHelper;
       4: return
}
