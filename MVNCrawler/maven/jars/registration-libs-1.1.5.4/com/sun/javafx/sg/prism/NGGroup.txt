Compiled from "NGGroup.java"
public class com.sun.javafx.sg.prism.NGGroup extends com.sun.javafx.sg.prism.NGNode {
  private com.sun.scenario.effect.Blend$Mode blendMode;

  private java.util.List<com.sun.javafx.sg.prism.NGNode> children;

  private java.util.List<com.sun.javafx.sg.prism.NGNode> unmod;

  private java.util.List<com.sun.javafx.sg.prism.NGNode> removed;

  private final java.util.List<com.sun.javafx.sg.prism.NGNode> viewOrderChildren;

  private static final int REGION_INTERSECTS_MASK;

  public com.sun.javafx.sg.prism.NGGroup();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/javafx/sg/prism/NGNode."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/sun/scenario/effect/Blend$Mode.SRC_OVER:Lcom/sun/scenario/effect/Blend$Mode;
       8: putfield      #3                  // Field blendMode:Lcom/sun/scenario/effect/Blend$Mode;
      11: aload_0
      12: new           #4                  // class java/util/ArrayList
      15: dup
      16: iconst_1
      17: invokespecial #5                  // Method java/util/ArrayList."<init>":(I)V
      20: putfield      #6                  // Field children:Ljava/util/List;
      23: aload_0
      24: aload_0
      25: getfield      #6                  // Field children:Ljava/util/List;
      28: invokestatic  #7                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      31: putfield      #8                  // Field unmod:Ljava/util/List;
      34: aload_0
      35: new           #4                  // class java/util/ArrayList
      38: dup
      39: iconst_1
      40: invokespecial #5                  // Method java/util/ArrayList."<init>":(I)V
      43: putfield      #9                  // Field viewOrderChildren:Ljava/util/List;
      46: return

  public java.util.List<com.sun.javafx.sg.prism.NGNode> getChildren();
    Code:
       0: aload_0
       1: getfield      #8                  // Field unmod:Ljava/util/List;
       4: areturn

  public void add(int, com.sun.javafx.sg.prism.NGNode);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmplt     18
       5: iload_1
       6: aload_0
       7: getfield      #6                  // Field children:Ljava/util/List;
      10: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      15: if_icmple     28
      18: new           #11                 // class java/lang/IndexOutOfBoundsException
      21: dup
      22: ldc           #12                 // String invalid index
      24: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_2
      29: astore_3
      30: aload_3
      31: aload_0
      32: invokevirtual #14                 // Method com/sun/javafx/sg/prism/NGNode.setParent:(Lcom/sun/javafx/sg/prism/NGNode;)V
      35: aload_0
      36: iconst_1
      37: putfield      #15                 // Field childDirty:Z
      40: iload_1
      41: iconst_m1
      42: if_icmpne     59
      45: aload_0
      46: getfield      #6                  // Field children:Ljava/util/List;
      49: aload_2
      50: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          70
      59: aload_0
      60: getfield      #6                  // Field children:Ljava/util/List;
      63: iload_1
      64: aload_2
      65: invokeinterface #17,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      70: aload_3
      71: invokevirtual #18                 // Method com/sun/javafx/sg/prism/NGNode.markDirty:()V
      74: aload_0
      75: invokevirtual #19                 // Method markTreeDirtyNoIncrement:()V
      78: aload_0
      79: invokevirtual #20                 // Method geometryChanged:()V
      82: return

  public void clearFrom(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field children:Ljava/util/List;
       5: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      10: if_icmpge     50
      13: aload_0
      14: getfield      #6                  // Field children:Ljava/util/List;
      17: iload_1
      18: aload_0
      19: getfield      #6                  // Field children:Ljava/util/List;
      22: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      27: invokeinterface #21,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      32: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
      37: aload_0
      38: invokevirtual #20                 // Method geometryChanged:()V
      41: aload_0
      42: iconst_1
      43: putfield      #15                 // Field childDirty:Z
      46: aload_0
      47: invokevirtual #19                 // Method markTreeDirtyNoIncrement:()V
      50: return

  public java.util.List<com.sun.javafx.sg.prism.NGNode> getRemovedChildren();
    Code:
       0: aload_0
       1: getfield      #23                 // Field removed:Ljava/util/List;
       4: areturn

  public void addToRemoved(com.sun.javafx.sg.prism.NGNode);
    Code:
       0: aload_0
       1: getfield      #23                 // Field removed:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #4                  // class java/util/ArrayList
      11: dup
      12: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #23                 // Field removed:Ljava/util/List;
      18: aload_0
      19: getfield      #25                 // Field dirtyChildrenAccumulated:I
      22: bipush        12
      24: if_icmple     28
      27: return
      28: aload_0
      29: getfield      #23                 // Field removed:Ljava/util/List;
      32: aload_1
      33: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: dup
      41: getfield      #25                 // Field dirtyChildrenAccumulated:I
      44: iconst_1
      45: iadd
      46: putfield      #25                 // Field dirtyChildrenAccumulated:I
      49: aload_0
      50: getfield      #25                 // Field dirtyChildrenAccumulated:I
      53: bipush        12
      55: if_icmple     67
      58: aload_0
      59: getfield      #23                 // Field removed:Ljava/util/List;
      62: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
      67: return

  protected void clearDirty();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method com/sun/javafx/sg/prism/NGNode.clearDirty:()V
       4: aload_0
       5: getfield      #23                 // Field removed:Ljava/util/List;
       8: ifnull        20
      11: aload_0
      12: getfield      #23                 // Field removed:Ljava/util/List;
      15: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
      20: return

  public void remove(com.sun.javafx.sg.prism.NGNode);
    Code:
       0: aload_0
       1: getfield      #6                  // Field children:Ljava/util/List;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #20                 // Method geometryChanged:()V
      15: aload_0
      16: iconst_1
      17: putfield      #15                 // Field childDirty:Z
      20: aload_0
      21: invokevirtual #19                 // Method markTreeDirtyNoIncrement:()V
      24: return

  public void remove(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field children:Ljava/util/List;
       4: iload_1
       5: invokeinterface #29,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: invokevirtual #20                 // Method geometryChanged:()V
      15: aload_0
      16: iconst_1
      17: putfield      #15                 // Field childDirty:Z
      20: aload_0
      21: invokevirtual #19                 // Method markTreeDirtyNoIncrement:()V
      24: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field children:Ljava/util/List;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: iconst_0
      11: putfield      #15                 // Field childDirty:Z
      14: aload_0
      15: invokevirtual #20                 // Method geometryChanged:()V
      18: aload_0
      19: invokevirtual #19                 // Method markTreeDirtyNoIncrement:()V
      22: return

  private java.util.List<com.sun.javafx.sg.prism.NGNode> getOrderedChildren();
    Code:
       0: aload_0
       1: getfield      #9                  // Field viewOrderChildren:Ljava/util/List;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          17
      12: aload_0
      13: getfield      #9                  // Field viewOrderChildren:Ljava/util/List;
      16: areturn
      17: aload_0
      18: getfield      #6                  // Field children:Ljava/util/List;
      21: areturn

  public void setViewOrderChildren(java.util.List<javafx.scene.Node>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field viewOrderChildren:Ljava/util/List;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          56
      25: aload_2
      26: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #34                 // class javafx/scene/Node
      34: astore_3
      35: aload_3
      36: invokestatic  #35                 // Method com/sun/javafx/scene/NodeHelper.getPeer:(Ljavafx/scene/Node;)Lcom/sun/javafx/sg/prism/NGNode;
      39: astore        4
      41: aload_0
      42: getfield      #9                  // Field viewOrderChildren:Ljava/util/List;
      45: aload         4
      47: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          16
      56: aload_0
      57: invokevirtual #36                 // Method visualsChanged:()V
      60: return

  public void setBlendMode(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #37                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #38                 // String Mode must be non-null
      10: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #3                  // Field blendMode:Lcom/sun/scenario/effect/Blend$Mode;
      18: aload_1
      19: if_acmpeq     34
      22: aload_0
      23: aload_1
      24: checkcast     #40                 // class com/sun/scenario/effect/Blend$Mode
      27: putfield      #3                  // Field blendMode:Lcom/sun/scenario/effect/Blend$Mode;
      30: aload_0
      31: invokevirtual #36                 // Method visualsChanged:()V
      34: return

  public void renderForcedContent(com.sun.prism.Graphics);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method getOrderedChildren:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_2
      14: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      19: if_icmpge     42
      22: aload_2
      23: iload_3
      24: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      29: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
      32: aload_1
      33: invokevirtual #43                 // Method com/sun/javafx/sg/prism/NGNode.renderForcedContent:(Lcom/sun/prism/Graphics;)V
      36: iinc          3, 1
      39: goto          12
      42: return

  protected void renderContent(com.sun.prism.Graphics);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method getOrderedChildren:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: aload_1
      11: invokeinterface #44,  1           // InterfaceMethod com/sun/prism/Graphics.getRenderRoot:()Lcom/sun/javafx/sg/prism/NodePath;
      16: astore_3
      17: iconst_0
      18: istore        4
      20: aload_3
      21: ifnull        87
      24: aload_3
      25: invokevirtual #45                 // Method com/sun/javafx/sg/prism/NodePath.hasNext:()Z
      28: ifeq          80
      31: aload_3
      32: invokevirtual #46                 // Method com/sun/javafx/sg/prism/NodePath.next:()V
      35: aload_2
      36: aload_3
      37: invokevirtual #47                 // Method com/sun/javafx/sg/prism/NodePath.getCurrentNode:()Lcom/sun/javafx/sg/prism/NGNode;
      40: invokeinterface #48,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      45: istore        4
      47: iconst_0
      48: istore        5
      50: iload         5
      52: iload         4
      54: if_icmpge     77
      57: aload_2
      58: iload         5
      60: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      65: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
      68: invokevirtual #49                 // Method com/sun/javafx/sg/prism/NGNode.clearDirtyTree:()V
      71: iinc          5, 1
      74: goto          50
      77: goto          87
      80: aload_1
      81: aconst_null
      82: invokeinterface #50,  2           // InterfaceMethod com/sun/prism/Graphics.setRenderRoot:(Lcom/sun/javafx/sg/prism/NodePath;)V
      87: aload_0
      88: getfield      #3                  // Field blendMode:Lcom/sun/scenario/effect/Blend$Mode;
      91: getstatic     #2                  // Field com/sun/scenario/effect/Blend$Mode.SRC_OVER:Lcom/sun/scenario/effect/Blend$Mode;
      94: if_acmpeq     107
      97: aload_2
      98: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
     103: iconst_2
     104: if_icmpge     161
     107: iload         4
     109: istore        5
     111: iload         5
     113: aload_2
     114: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
     119: if_icmpge     160
     122: aload_2
     123: iload         5
     125: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     130: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
     133: astore        6
     135: goto          143
     138: astore        7
     140: aconst_null
     141: astore        6
     143: aload         6
     145: ifnull        154
     148: aload         6
     150: aload_1
     151: invokevirtual #52                 // Method com/sun/javafx/sg/prism/NGNode.render:(Lcom/sun/prism/Graphics;)V
     154: iinc          5, 1
     157: goto          111
     160: return
     161: new           #53                 // class com/sun/scenario/effect/Blend
     164: dup
     165: aload_0
     166: getfield      #3                  // Field blendMode:Lcom/sun/scenario/effect/Blend$Mode;
     169: aconst_null
     170: aconst_null
     171: invokespecial #54                 // Method com/sun/scenario/effect/Blend."<init>":(Lcom/sun/scenario/effect/Blend$Mode;Lcom/sun/scenario/effect/Effect;Lcom/sun/scenario/effect/Effect;)V
     174: astore        5
     176: aload_1
     177: invokestatic  #55                 // Method getFilterContext:(Lcom/sun/prism/Graphics;)Lcom/sun/scenario/effect/FilterContext;
     180: astore        6
     182: aconst_null
     183: astore        7
     185: iconst_1
     186: istore        8
     188: aload_1
     189: invokeinterface #56,  1           // InterfaceMethod com/sun/prism/Graphics.getTransformNoClone:()Lcom/sun/javafx/geom/transform/BaseTransform;
     194: invokevirtual #57                 // Method com/sun/javafx/geom/transform/BaseTransform.copy:()Lcom/sun/javafx/geom/transform/BaseTransform;
     197: astore        9
     199: aload         7
     201: ifnull        212
     204: aload         7
     206: invokevirtual #58                 // Method com/sun/scenario/effect/ImageData.unref:()V
     209: aconst_null
     210: astore        7
     212: aload_1
     213: invokestatic  #59                 // Method com/sun/scenario/effect/impl/prism/PrEffectHelper.getGraphicsClipNoClone:(Lcom/sun/prism/Graphics;)Lcom/sun/javafx/geom/Rectangle;
     216: astore        10
     218: iload         4
     220: istore        11
     222: iload         11
     224: aload_2
     225: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
     230: if_icmpge     320
     233: aload_2
     234: iload         11
     236: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     241: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
     244: astore        12
     246: aload         6
     248: aload         12
     250: iconst_0
     251: aload         9
     253: aload         10
     255: invokestatic  #60                 // Method com/sun/javafx/sg/prism/NodeEffectInput.getImageDataForNode:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/sg/prism/NGNode;ZLcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/scenario/effect/ImageData;
     258: astore        13
     260: aload         7
     262: ifnonnull     272
     265: aload         13
     267: astore        7
     269: goto          314
     272: aload         5
     274: aload         6
     276: aload         9
     278: aload         10
     280: aconst_null
     281: iconst_2
     282: anewarray     #61                 // class com/sun/scenario/effect/ImageData
     285: dup
     286: iconst_0
     287: aload         7
     289: aastore
     290: dup
     291: iconst_1
     292: aload         13
     294: aastore
     295: invokevirtual #62                 // Method com/sun/scenario/effect/Blend.filterImageDatas:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Lcom/sun/scenario/effect/impl/state/RenderState;[Lcom/sun/scenario/effect/ImageData;)Lcom/sun/scenario/effect/ImageData;
     298: astore        14
     300: aload         7
     302: invokevirtual #58                 // Method com/sun/scenario/effect/ImageData.unref:()V
     305: aload         13
     307: invokevirtual #58                 // Method com/sun/scenario/effect/ImageData.unref:()V
     310: aload         14
     312: astore        7
     314: iinc          11, 1
     317: goto          222
     320: aload         7
     322: ifnull        401
     325: aload         7
     327: aload         6
     329: invokevirtual #63                 // Method com/sun/scenario/effect/ImageData.validate:(Lcom/sun/scenario/effect/FilterContext;)Z
     332: dup
     333: istore        8
     335: ifeq          401
     338: aload         7
     340: invokevirtual #64                 // Method com/sun/scenario/effect/ImageData.getUntransformedBounds:()Lcom/sun/javafx/geom/Rectangle;
     343: astore        11
     345: aload         7
     347: invokevirtual #65                 // Method com/sun/scenario/effect/ImageData.getUntransformedImage:()Lcom/sun/scenario/effect/Filterable;
     350: checkcast     #66                 // class com/sun/scenario/effect/impl/prism/PrDrawable
     353: astore        12
     355: aload_1
     356: aload         7
     358: invokevirtual #67                 // Method com/sun/scenario/effect/ImageData.getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
     361: invokeinterface #68,  2           // InterfaceMethod com/sun/prism/Graphics.setTransform:(Lcom/sun/javafx/geom/transform/BaseTransform;)V
     366: aload_1
     367: aload         12
     369: invokevirtual #69                 // Method com/sun/scenario/effect/impl/prism/PrDrawable.getTextureObject:()Lcom/sun/prism/Texture;
     372: aload         11
     374: getfield      #70                 // Field com/sun/javafx/geom/Rectangle.x:I
     377: i2f
     378: aload         11
     380: getfield      #71                 // Field com/sun/javafx/geom/Rectangle.y:I
     383: i2f
     384: aload         11
     386: getfield      #72                 // Field com/sun/javafx/geom/Rectangle.width:I
     389: i2f
     390: aload         11
     392: getfield      #73                 // Field com/sun/javafx/geom/Rectangle.height:I
     395: i2f
     396: invokeinterface #74,  6           // InterfaceMethod com/sun/prism/Graphics.drawTexture:(Lcom/sun/prism/Texture;FFFF)V
     401: aload         7
     403: ifnull        188
     406: iload         8
     408: ifeq          188
     411: aload         7
     413: ifnull        421
     416: aload         7
     418: invokevirtual #58                 // Method com/sun/scenario/effect/ImageData.unref:()V
     421: return
    Exception table:
       from    to  target type
         122   135   138   Class java/lang/Exception

  protected boolean hasOverlappingContents();
    Code:
       0: aload_0
       1: getfield      #3                  // Field blendMode:Lcom/sun/scenario/effect/Blend$Mode;
       4: getstatic     #2                  // Field com/sun/scenario/effect/Blend$Mode.SRC_OVER:Lcom/sun/scenario/effect/Blend$Mode;
       7: if_acmpeq     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: invokespecial #41                 // Method getOrderedChildren:()Ljava/util/List;
      16: astore_1
      17: aload_1
      18: ifnonnull     25
      21: iconst_0
      22: goto          31
      25: aload_1
      26: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      31: istore_2
      32: iload_2
      33: iconst_1
      34: if_icmpne     51
      37: aload_1
      38: iconst_0
      39: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
      47: invokevirtual #75                 // Method com/sun/javafx/sg/prism/NGNode.hasOverlappingContents:()Z
      50: ireturn
      51: iload_2
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field children:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field children:Ljava/util/List;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  protected boolean hasVisuals();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean needsBlending();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getNodeBlendMode:()Lcom/sun/scenario/effect/Blend$Mode;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  protected com.sun.javafx.sg.prism.NGNode$RenderRootResult computeRenderRoot(com.sun.javafx.sg.prism.NodePath, com.sun.javafx.geom.RectBounds, int, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.transform.GeneralTransform3D);
    Code:
       0: iload_3
       1: iconst_m1
       2: if_icmpeq     35
       5: aload_0
       6: getfield      #77                 // Field cullingBits:I
       9: iload_3
      10: iconst_2
      11: imul
      12: ishr
      13: istore        6
      15: iload         6
      17: iconst_3
      18: iand
      19: ifne          26
      22: getstatic     #78                 // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.NO_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
      25: areturn
      26: iload         6
      28: iconst_2
      29: iand
      30: ifeq          35
      33: iconst_m1
      34: istore_3
      35: aload_0
      36: invokevirtual #79                 // Method isVisible:()Z
      39: ifne          46
      42: getstatic     #78                 // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.NO_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
      45: areturn
      46: aload_0
      47: invokevirtual #80                 // Method getOpacity:()F
      50: f2d
      51: dconst_1
      52: dcmpl
      53: ifne          80
      56: aload_0
      57: invokevirtual #81                 // Method getEffect:()Lcom/sun/scenario/effect/Effect;
      60: ifnull        73
      63: aload_0
      64: invokevirtual #81                 // Method getEffect:()Lcom/sun/scenario/effect/Effect;
      67: invokevirtual #82                 // Method com/sun/scenario/effect/Effect.reducesOpaquePixels:()Z
      70: ifne          80
      73: aload_0
      74: invokevirtual #83                 // Method needsBlending:()Z
      77: ifeq          84
      80: getstatic     #78                 // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.NO_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
      83: areturn
      84: aload_0
      85: invokevirtual #84                 // Method getClipNode:()Lcom/sun/javafx/sg/prism/NGNode;
      88: ifnull        155
      91: aload_0
      92: invokevirtual #84                 // Method getClipNode:()Lcom/sun/javafx/sg/prism/NGNode;
      95: astore        6
      97: aload         6
      99: invokevirtual #85                 // Method com/sun/javafx/sg/prism/NGNode.getOpaqueRegion:()Lcom/sun/javafx/geom/RectBounds;
     102: astore        7
     104: aload         7
     106: ifnonnull     113
     109: getstatic     #78                 // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.NO_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     112: areturn
     113: getstatic     #86                 // Field TEMP_TRANSFORM:Lcom/sun/javafx/geom/transform/Affine3D;
     116: aload         4
     118: invokevirtual #87                 // Method com/sun/javafx/geom/transform/Affine3D.deriveWithNewTransform:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/transform/Affine3D;
     121: aload_0
     122: invokevirtual #88                 // Method getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
     125: invokevirtual #89                 // Method com/sun/javafx/geom/transform/Affine3D.deriveWithConcatenation:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/transform/Affine3D;
     128: aload         6
     130: invokevirtual #90                 // Method com/sun/javafx/sg/prism/NGNode.getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
     133: invokevirtual #89                 // Method com/sun/javafx/geom/transform/Affine3D.deriveWithConcatenation:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/transform/Affine3D;
     136: pop
     137: aload         7
     139: aload_2
     140: getstatic     #86                 // Field TEMP_TRANSFORM:Lcom/sun/javafx/geom/transform/Affine3D;
     143: aload         5
     145: invokestatic  #91                 // Method checkBoundsInQuad:(Lcom/sun/javafx/geom/RectBounds;Lcom/sun/javafx/geom/RectBounds;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/transform/GeneralTransform3D;)Z
     148: ifne          155
     151: getstatic     #78                 // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.NO_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     154: areturn
     155: aload         4
     157: invokevirtual #92                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxx:()D
     160: dstore        6
     162: aload         4
     164: invokevirtual #93                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxy:()D
     167: dstore        8
     169: aload         4
     171: invokevirtual #94                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxz:()D
     174: dstore        10
     176: aload         4
     178: invokevirtual #95                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxt:()D
     181: dstore        12
     183: aload         4
     185: invokevirtual #96                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyx:()D
     188: dstore        14
     190: aload         4
     192: invokevirtual #97                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyy:()D
     195: dstore        16
     197: aload         4
     199: invokevirtual #98                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyz:()D
     202: dstore        18
     204: aload         4
     206: invokevirtual #99                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyt:()D
     209: dstore        20
     211: aload         4
     213: invokevirtual #100                // Method com/sun/javafx/geom/transform/BaseTransform.getMzx:()D
     216: dstore        22
     218: aload         4
     220: invokevirtual #101                // Method com/sun/javafx/geom/transform/BaseTransform.getMzy:()D
     223: dstore        24
     225: aload         4
     227: invokevirtual #102                // Method com/sun/javafx/geom/transform/BaseTransform.getMzz:()D
     230: dstore        26
     232: aload         4
     234: invokevirtual #103                // Method com/sun/javafx/geom/transform/BaseTransform.getMzt:()D
     237: dstore        28
     239: aload         4
     241: aload_0
     242: invokevirtual #88                 // Method getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
     245: invokevirtual #104                // Method com/sun/javafx/geom/transform/BaseTransform.deriveWithConcatenation:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/transform/BaseTransform;
     248: astore        30
     250: getstatic     #78                 // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.NO_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     253: astore        31
     255: iconst_1
     256: istore        32
     258: aload_0
     259: invokespecial #41                 // Method getOrderedChildren:()Ljava/util/List;
     262: astore        33
     264: aload         33
     266: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
     271: iconst_1
     272: isub
     273: istore        34
     275: iload         34
     277: iflt          366
     280: aload         33
     282: iload         34
     284: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     289: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
     292: astore        35
     294: aload         35
     296: aload_1
     297: aload_2
     298: iload_3
     299: aload         30
     301: aload         5
     303: invokevirtual #105                // Method com/sun/javafx/sg/prism/NGNode.computeRenderRoot:(Lcom/sun/javafx/sg/prism/NodePath;Lcom/sun/javafx/geom/RectBounds;ILcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/transform/GeneralTransform3D;)Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     306: astore        31
     308: iload         32
     310: aload         35
     312: invokevirtual #106                // Method com/sun/javafx/sg/prism/NGNode.isClean:()Z
     315: iand
     316: istore        32
     318: aload         31
     320: getstatic     #107                // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.HAS_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     323: if_acmpne     334
     326: aload_1
     327: aload_0
     328: invokevirtual #108                // Method com/sun/javafx/sg/prism/NodePath.add:(Lcom/sun/javafx/sg/prism/NGNode;)V
     331: goto          366
     334: aload         31
     336: getstatic     #109                // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.HAS_RENDER_ROOT_AND_IS_CLEAN:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     339: if_acmpne     360
     342: aload_1
     343: aload_0
     344: invokevirtual #108                // Method com/sun/javafx/sg/prism/NodePath.add:(Lcom/sun/javafx/sg/prism/NGNode;)V
     347: iload         32
     349: ifne          366
     352: getstatic     #107                // Field com/sun/javafx/sg/prism/NGNode$RenderRootResult.HAS_RENDER_ROOT:Lcom/sun/javafx/sg/prism/NGNode$RenderRootResult;
     355: astore        31
     357: goto          366
     360: iinc          34, -1
     363: goto          275
     366: aload         4
     368: dload         6
     370: dload         8
     372: dload         10
     374: dload         12
     376: dload         14
     378: dload         16
     380: dload         18
     382: dload         20
     384: dload         22
     386: dload         24
     388: dload         26
     390: dload         28
     392: invokevirtual #110                // Method com/sun/javafx/geom/transform/BaseTransform.restoreTransform:(DDDDDDDDDDDD)V
     395: aload         31
     397: areturn

  protected void markCullRegions(com.sun.javafx.geom.DirtyRegionContainer, int, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.transform.GeneralTransform3D);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #111                // Method com/sun/javafx/sg/prism/NGNode.markCullRegions:(Lcom/sun/javafx/geom/DirtyRegionContainer;ILcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/transform/GeneralTransform3D;)V
       9: aload_0
      10: getfield      #77                 // Field cullingBits:I
      13: iconst_m1
      14: if_icmpeq     34
      17: aload_0
      18: getfield      #77                 // Field cullingBits:I
      21: ifeq          199
      24: aload_0
      25: getfield      #77                 // Field cullingBits:I
      28: ldc           #113                // int 357913941
      30: iand
      31: ifeq          199
      34: aload_3
      35: invokevirtual #92                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxx:()D
      38: dstore        5
      40: aload_3
      41: invokevirtual #93                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxy:()D
      44: dstore        7
      46: aload_3
      47: invokevirtual #94                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxz:()D
      50: dstore        9
      52: aload_3
      53: invokevirtual #95                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxt:()D
      56: dstore        11
      58: aload_3
      59: invokevirtual #96                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyx:()D
      62: dstore        13
      64: aload_3
      65: invokevirtual #97                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyy:()D
      68: dstore        15
      70: aload_3
      71: invokevirtual #98                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyz:()D
      74: dstore        17
      76: aload_3
      77: invokevirtual #99                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyt:()D
      80: dstore        19
      82: aload_3
      83: invokevirtual #100                // Method com/sun/javafx/geom/transform/BaseTransform.getMzx:()D
      86: dstore        21
      88: aload_3
      89: invokevirtual #101                // Method com/sun/javafx/geom/transform/BaseTransform.getMzy:()D
      92: dstore        23
      94: aload_3
      95: invokevirtual #102                // Method com/sun/javafx/geom/transform/BaseTransform.getMzz:()D
      98: dstore        25
     100: aload_3
     101: invokevirtual #103                // Method com/sun/javafx/geom/transform/BaseTransform.getMzt:()D
     104: dstore        27
     106: aload_3
     107: aload_0
     108: invokevirtual #88                 // Method getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
     111: invokevirtual #104                // Method com/sun/javafx/geom/transform/BaseTransform.deriveWithConcatenation:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/transform/BaseTransform;
     114: astore        29
     116: aload_0
     117: invokespecial #41                 // Method getOrderedChildren:()Ljava/util/List;
     120: astore        31
     122: iconst_0
     123: istore        32
     125: iload         32
     127: aload         31
     129: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
     134: if_icmpge     171
     137: aload         31
     139: iload         32
     141: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     146: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
     149: astore        30
     151: aload         30
     153: aload_1
     154: aload_0
     155: getfield      #77                 // Field cullingBits:I
     158: aload         29
     160: aload         4
     162: invokevirtual #111                // Method com/sun/javafx/sg/prism/NGNode.markCullRegions:(Lcom/sun/javafx/geom/DirtyRegionContainer;ILcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/transform/GeneralTransform3D;)V
     165: iinc          32, 1
     168: goto          125
     171: aload_3
     172: dload         5
     174: dload         7
     176: dload         9
     178: dload         11
     180: dload         13
     182: dload         15
     184: dload         17
     186: dload         19
     188: dload         21
     190: dload         23
     192: dload         25
     194: dload         27
     196: invokevirtual #110                // Method com/sun/javafx/geom/transform/BaseTransform.restoreTransform:(DDDDDDDDDDDD)V
     199: return

  public void drawDirtyOpts(com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.transform.GeneralTransform3D, com.sun.javafx.geom.Rectangle, int[], int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #114                // Method com/sun/javafx/sg/prism/NGNode.drawDirtyOpts:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/transform/GeneralTransform3D;Lcom/sun/javafx/geom/Rectangle;[II)V
      11: aload_1
      12: invokevirtual #57                 // Method com/sun/javafx/geom/transform/BaseTransform.copy:()Lcom/sun/javafx/geom/transform/BaseTransform;
      15: astore        6
      17: aload         6
      19: aload_0
      20: invokevirtual #88                 // Method getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
      23: invokevirtual #104                // Method com/sun/javafx/geom/transform/BaseTransform.deriveWithConcatenation:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/javafx/geom/transform/BaseTransform;
      26: astore        6
      28: aload_0
      29: invokespecial #41                 // Method getOrderedChildren:()Ljava/util/List;
      32: astore        7
      34: iconst_0
      35: istore        8
      37: iload         8
      39: aload         7
      41: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      46: if_icmpge     82
      49: aload         7
      51: iload         8
      53: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      58: checkcast     #26                 // class com/sun/javafx/sg/prism/NGNode
      61: astore        9
      63: aload         9
      65: aload         6
      67: aload_2
      68: aload_3
      69: aload         4
      71: iload         5
      73: invokevirtual #114                // Method com/sun/javafx/sg/prism/NGNode.drawDirtyOpts:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/transform/GeneralTransform3D;Lcom/sun/javafx/geom/Rectangle;[II)V
      76: iinc          8, 1
      79: goto          37
      82: return
}
