Compiled from "ChartLayoutAnimator.java"
public final class com.sun.javafx.charts.ChartLayoutAnimator extends javafx.animation.AnimationTimer implements javafx.event.EventHandler<javafx.event.ActionEvent> {
  private javafx.scene.Parent nodeToLayout;

  private final java.util.Map<java.lang.Object, javafx.animation.Animation> activeTimeLines;

  private final boolean isAxis;

  public com.sun.javafx.charts.ChartLayoutAnimator(javafx.scene.Parent);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javafx/animation/AnimationTimer."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field nodeToLayout:Ljavafx/scene/Parent;
      20: aload_0
      21: aload_1
      22: instanceof    #6                  // class javafx/scene/chart/Axis
      25: putfield      #7                  // Field isAxis:Z
      28: return

  public void handle(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field isAxis:Z
       4: ifeq          20
       7: aload_0
       8: getfield      #5                  // Field nodeToLayout:Ljavafx/scene/Parent;
      11: checkcast     #6                  // class javafx/scene/chart/Axis
      14: invokevirtual #8                  // Method javafx/scene/chart/Axis.requestAxisLayout:()V
      17: goto          27
      20: aload_0
      21: getfield      #5                  // Field nodeToLayout:Ljavafx/scene/Parent;
      24: invokevirtual #9                  // Method javafx/scene/Parent.requestLayout:()V
      27: return

  public void handle(javafx.event.ActionEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #10                 // Method javafx/event/ActionEvent.getSource:()Ljava/lang/Object;
       8: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      23: ifeq          30
      26: aload_0
      27: invokevirtual #13                 // Method stop:()V
      30: aload_0
      31: lconst_0
      32: invokevirtual #14                 // Method handle:(J)V
      35: return

  public void stop(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class javafx/animation/Animation
      13: astore_2
      14: aload_2
      15: ifnull        22
      18: aload_2
      19: invokevirtual #16                 // Method javafx/animation/Animation.stop:()V
      22: aload_0
      23: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      26: invokeinterface #12,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      31: ifeq          38
      34: aload_0
      35: invokevirtual #13                 // Method stop:()V
      38: return

  public java.lang.Object animate(javafx.animation.KeyFrame...);
    Code:
       0: new           #17                 // class javafx/animation/Timeline
       3: dup
       4: invokespecial #18                 // Method javafx/animation/Timeline."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_0
      10: invokevirtual #19                 // Method javafx/animation/Timeline.setAutoReverse:(Z)V
      13: aload_2
      14: iconst_1
      15: invokevirtual #20                 // Method javafx/animation/Timeline.setCycleCount:(I)V
      18: aload_2
      19: invokevirtual #21                 // Method javafx/animation/Timeline.getKeyFrames:()Ljavafx/collections/ObservableList;
      22: aload_1
      23: invokeinterface #22,  2           // InterfaceMethod javafx/collections/ObservableList.addAll:([Ljava/lang/Object;)Z
      28: pop
      29: aload_2
      30: aload_0
      31: invokevirtual #23                 // Method javafx/animation/Timeline.setOnFinished:(Ljavafx/event/EventHandler;)V
      34: aload_0
      35: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      38: invokeinterface #12,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      43: ifeq          50
      46: aload_0
      47: invokevirtual #24                 // Method start:()V
      50: aload_0
      51: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      54: aload_2
      55: aload_2
      56: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_2
      63: invokevirtual #26                 // Method javafx/animation/Timeline.play:()V
      66: aload_2
      67: areturn

  public java.lang.Object animate(javafx.animation.Animation);
    Code:
       0: new           #27                 // class javafx/animation/SequentialTransition
       3: dup
       4: invokespecial #28                 // Method javafx/animation/SequentialTransition."<init>":()V
       7: astore_2
       8: aload_2
       9: invokevirtual #29                 // Method javafx/animation/SequentialTransition.getChildren:()Ljavafx/collections/ObservableList;
      12: aload_1
      13: invokeinterface #30,  2           // InterfaceMethod javafx/collections/ObservableList.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_2
      20: aload_0
      21: invokevirtual #31                 // Method javafx/animation/SequentialTransition.setOnFinished:(Ljavafx/event/EventHandler;)V
      24: aload_0
      25: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      33: ifeq          40
      36: aload_0
      37: invokevirtual #24                 // Method start:()V
      40: aload_0
      41: getfield      #4                  // Field activeTimeLines:Ljava/util/Map;
      44: aload_2
      45: aload_2
      46: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_2
      53: invokevirtual #32                 // Method javafx/animation/SequentialTransition.play:()V
      56: aload_2
      57: areturn

  public void handle(javafx.event.Event);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class javafx/event/ActionEvent
       5: invokevirtual #34                 // Method handle:(Ljavafx/event/ActionEvent;)V
       8: return
}
