Compiled from "TextRun.java"
public class com.sun.javafx.text.TextRun implements com.sun.javafx.scene.text.GlyphList {
  int glyphCount;

  int[] gids;

  float[] positions;

  int[] charIndices;

  int start;

  int length;

  float width;

  byte level;

  int script;

  com.sun.javafx.scene.text.TextSpan span;

  com.sun.javafx.text.TextLine line;

  com.sun.javafx.geom.Point2D location;

  private float ascent;

  private float descent;

  private float leading;

  int flags;

  int slot;

  static final int FLAGS_TAB;

  static final int FLAGS_LINEBREAK;

  static final int FLAGS_SOFTBREAK;

  static final int FLAGS_NO_LINK_BEFORE;

  static final int FLAGS_NO_LINK_AFTER;

  static final int FLAGS_COMPLEX;

  static final int FLAGS_EMBEDDED;

  static final int FLAGS_SPLIT;

  static final int FLAGS_SPLIT_LAST;

  static final int FLAGS_LEFT_BEARING;

  static final int FLAGS_RIGHT_BEARING;

  static final int FLAGS_CANONICAL;

  static final int FLAGS_COMPACT;

  float cacheWidth;

  int cacheIndex;

  public com.sun.javafx.text.TextRun(int, int, byte, boolean, int, com.sun.javafx.scene.text.TextSpan, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // float -1.0f
       7: putfield      #3                  // Field width:F
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field flags:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field slot:I
      20: aload_0
      21: fconst_0
      22: putfield      #6                  // Field cacheWidth:F
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field cacheIndex:I
      30: aload_0
      31: iload_1
      32: putfield      #8                  // Field start:I
      35: aload_0
      36: iload_2
      37: putfield      #9                  // Field length:I
      40: aload_0
      41: iload_3
      42: putfield      #10                 // Field level:B
      45: aload_0
      46: iload         5
      48: putfield      #11                 // Field script:I
      51: aload_0
      52: aload         6
      54: putfield      #12                 // Field span:Lcom/sun/javafx/scene/text/TextSpan;
      57: aload_0
      58: iload         7
      60: putfield      #5                  // Field slot:I
      63: iload         4
      65: ifeq          79
      68: aload_0
      69: dup
      70: getfield      #4                  // Field flags:I
      73: bipush        32
      75: ior
      76: putfield      #4                  // Field flags:I
      79: iload         8
      81: ifeq          96
      84: aload_0
      85: dup
      86: getfield      #4                  // Field flags:I
      89: sipush        2048
      92: ior
      93: putfield      #4                  // Field flags:I
      96: return

  public int getStart();
    Code:
       0: aload_0
       1: getfield      #8                  // Field start:I
       4: ireturn

  public int getEnd();
    Code:
       0: aload_0
       1: getfield      #8                  // Field start:I
       4: aload_0
       5: getfield      #9                  // Field length:I
       8: iadd
       9: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: ireturn

  public byte getLevel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field level:B
       4: ireturn

  public com.sun.javafx.geom.RectBounds getLineBounds();
    Code:
       0: aload_0
       1: getfield      #14                 // Field line:Lcom/sun/javafx/text/TextLine;
       4: invokevirtual #15                 // Method com/sun/javafx/text/TextLine.getBounds:()Lcom/sun/javafx/geom/RectBounds;
       7: areturn

  public void setLine(com.sun.javafx.text.TextLine);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field line:Lcom/sun/javafx/text/TextLine;
       5: return

  public int getScript();
    Code:
       0: aload_0
       1: getfield      #11                 // Field script:I
       4: ireturn

  public com.sun.javafx.scene.text.TextSpan getTextSpan();
    Code:
       0: aload_0
       1: getfield      #12                 // Field span:Lcom/sun/javafx/scene/text/TextSpan;
       4: areturn

  public int getSlot();
    Code:
       0: aload_0
       1: getfield      #5                  // Field slot:I
       4: ireturn

  public boolean isLinebreak();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: iconst_2
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isCanonical();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        2048
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isSoftbreak();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: iconst_4
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isBreak();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: bipush        6
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTab();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: iconst_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isEmbedded();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: bipush        64
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isNoLinkBefore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: bipush        8
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isNoLinkAfter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: bipush        16
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSplit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        128
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isSplitLast();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        256
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isComplex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: bipush        32
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isLeftBearing();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        512
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isRightBearing();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        1024
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isLeftToRight();
    Code:
       0: aload_0
       1: getfield      #10                 // Field level:B
       4: iconst_1
       5: iand
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void setComplex(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: dup
       6: getfield      #4                  // Field flags:I
       9: bipush        32
      11: ior
      12: putfield      #4                  // Field flags:I
      15: goto          29
      18: aload_0
      19: dup
      20: getfield      #4                  // Field flags:I
      23: bipush        -33
      25: iand
      26: putfield      #4                  // Field flags:I
      29: return

  public float getWidth();
    Code:
       0: aload_0
       1: getfield      #3                  // Field width:F
       4: ldc           #2                  // float -1.0f
       6: fcmpl
       7: ifeq          15
      10: aload_0
      11: getfield      #3                  // Field width:F
      14: freturn
      15: aload_0
      16: getfield      #16                 // Field positions:[F
      19: ifnull        91
      22: aload_0
      23: getfield      #4                  // Field flags:I
      26: sipush        4096
      29: iand
      30: ifeq          79
      33: aload_0
      34: fconst_0
      35: putfield      #3                  // Field width:F
      38: iconst_0
      39: istore_1
      40: iload_1
      41: aload_0
      42: getfield      #17                 // Field glyphCount:I
      45: if_icmpge     74
      48: aload_0
      49: dup
      50: getfield      #3                  // Field width:F
      53: aload_0
      54: getfield      #16                 // Field positions:[F
      57: aload_0
      58: getfield      #8                  // Field start:I
      61: iload_1
      62: iadd
      63: faload
      64: fadd
      65: putfield      #3                  // Field width:F
      68: iinc          1, 1
      71: goto          40
      74: aload_0
      75: getfield      #3                  // Field width:F
      78: freturn
      79: aload_0
      80: getfield      #16                 // Field positions:[F
      83: aload_0
      84: getfield      #17                 // Field glyphCount:I
      87: iconst_1
      88: ishl
      89: faload
      90: freturn
      91: fconst_0
      92: freturn

  public float getHeight();
    Code:
       0: aload_0
       1: getfield      #18                 // Field ascent:F
       4: fneg
       5: aload_0
       6: getfield      #19                 // Field descent:F
       9: fadd
      10: aload_0
      11: getfield      #20                 // Field leading:F
      14: fadd
      15: freturn

  public void setWidth(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #3                  // Field width:F
       5: return

  public void setMetrics(float, float, float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #18                 // Field ascent:F
       5: aload_0
       6: fload_2
       7: putfield      #19                 // Field descent:F
      10: aload_0
      11: fload_3
      12: putfield      #20                 // Field leading:F
      15: return

  public float getAscent();
    Code:
       0: aload_0
       1: getfield      #18                 // Field ascent:F
       4: freturn

  public float getDescent();
    Code:
       0: aload_0
       1: getfield      #19                 // Field descent:F
       4: freturn

  public float getLeading();
    Code:
       0: aload_0
       1: getfield      #20                 // Field leading:F
       4: freturn

  public void setLocation(float, float);
    Code:
       0: aload_0
       1: new           #21                 // class com/sun/javafx/geom/Point2D
       4: dup
       5: fload_1
       6: fload_2
       7: invokespecial #22                 // Method com/sun/javafx/geom/Point2D."<init>":(FF)V
      10: putfield      #23                 // Field location:Lcom/sun/javafx/geom/Point2D;
      13: return

  public com.sun.javafx.geom.Point2D getLocation();
    Code:
       0: aload_0
       1: getfield      #23                 // Field location:Lcom/sun/javafx/geom/Point2D;
       4: areturn

  public void setTab();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field flags:I
       5: iconst_1
       6: ior
       7: putfield      #4                  // Field flags:I
      10: return

  public void setEmbedded(com.sun.javafx.geom.RectBounds, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method com/sun/javafx/geom/RectBounds.getWidth:()F
       5: iload_2
       6: i2f
       7: fmul
       8: putfield      #3                  // Field width:F
      11: aload_0
      12: aload_1
      13: invokevirtual #25                 // Method com/sun/javafx/geom/RectBounds.getMinY:()F
      16: putfield      #18                 // Field ascent:F
      19: aload_0
      20: aload_1
      21: invokevirtual #26                 // Method com/sun/javafx/geom/RectBounds.getHeight:()F
      24: aload_0
      25: getfield      #18                 // Field ascent:F
      28: fadd
      29: putfield      #19                 // Field descent:F
      32: aload_0
      33: iload_2
      34: putfield      #9                  // Field length:I
      37: aload_0
      38: dup
      39: getfield      #4                  // Field flags:I
      42: bipush        64
      44: ior
      45: putfield      #4                  // Field flags:I
      48: return

  public void setLinebreak();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field flags:I
       5: iconst_2
       6: ior
       7: putfield      #4                  // Field flags:I
      10: return

  public void setSoftbreak();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field flags:I
       5: iconst_4
       6: ior
       7: putfield      #4                  // Field flags:I
      10: return

  public void setLeftBearing();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field flags:I
       5: sipush        512
       8: ior
       9: putfield      #4                  // Field flags:I
      12: return

  public void setRightBearing();
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field flags:I
       5: sipush        1024
       8: ior
       9: putfield      #4                  // Field flags:I
      12: return

  public int getWrapIndex(float);
    Code:
       0: aload_0
       1: getfield      #17                 // Field glyphCount:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #27                 // Method isLeftToRight:()Z
      13: ifeq          112
      16: iconst_0
      17: istore_2
      18: aload_0
      19: getfield      #4                  // Field flags:I
      22: sipush        4096
      25: iand
      26: ifeq          74
      29: fconst_0
      30: fstore_3
      31: iload_2
      32: aload_0
      33: getfield      #17                 // Field glyphCount:I
      36: if_icmpge     71
      39: fload_3
      40: aload_0
      41: getfield      #16                 // Field positions:[F
      44: aload_0
      45: getfield      #8                  // Field start:I
      48: iload_2
      49: iadd
      50: faload
      51: fadd
      52: fstore_3
      53: fload_3
      54: fload_1
      55: fcmpl
      56: ifle          65
      59: aload_0
      60: iload_2
      61: invokevirtual #28                 // Method getCharOffset:(I)I
      64: ireturn
      65: iinc          2, 1
      68: goto          31
      71: goto          109
      74: iload_2
      75: aload_0
      76: getfield      #17                 // Field glyphCount:I
      79: if_icmpge     109
      82: aload_0
      83: getfield      #16                 // Field positions:[F
      86: iload_2
      87: iconst_1
      88: iadd
      89: iconst_1
      90: ishl
      91: faload
      92: fload_1
      93: fcmpl
      94: ifle          103
      97: aload_0
      98: iload_2
      99: invokevirtual #28                 // Method getCharOffset:(I)I
     102: ireturn
     103: iinc          2, 1
     106: goto          74
     109: goto          179
     112: iconst_0
     113: istore_2
     114: aload_0
     115: getfield      #16                 // Field positions:[F
     118: aload_0
     119: getfield      #17                 // Field glyphCount:I
     122: iconst_1
     123: ishl
     124: faload
     125: fstore_3
     126: fload_3
     127: fload_1
     128: fcmpl
     129: ifle          179
     132: aload_0
     133: getfield      #16                 // Field positions:[F
     136: iload_2
     137: iconst_1
     138: iadd
     139: iconst_1
     140: ishl
     141: faload
     142: aload_0
     143: getfield      #16                 // Field positions:[F
     146: iload_2
     147: iconst_1
     148: ishl
     149: faload
     150: fsub
     151: fstore        4
     153: fload_3
     154: fload         4
     156: fsub
     157: fload_1
     158: fcmpg
     159: ifgt          168
     162: aload_0
     163: iload_2
     164: invokevirtual #28                 // Method getCharOffset:(I)I
     167: ireturn
     168: fload_3
     169: fload         4
     171: fsub
     172: fstore_3
     173: iinc          2, 1
     176: goto          126
     179: iconst_0
     180: ireturn

  public int getGlyphCount();
    Code:
       0: aload_0
       1: getfield      #17                 // Field glyphCount:I
       4: ireturn

  public int getGlyphCode(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpgt     43
       5: iload_1
       6: aload_0
       7: getfield      #17                 // Field glyphCount:I
      10: if_icmpge     43
      13: aload_0
      14: getfield      #4                  // Field flags:I
      17: sipush        4096
      20: iand
      21: ifeq          36
      24: aload_0
      25: getfield      #29                 // Field gids:[I
      28: aload_0
      29: getfield      #8                  // Field start:I
      32: iload_1
      33: iadd
      34: iaload
      35: ireturn
      36: aload_0
      37: getfield      #29                 // Field gids:[I
      40: iload_1
      41: iaload
      42: ireturn
      43: ldc           #31                 // int 65535
      45: ireturn

  public float getPosX(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpgt     119
       5: iload_1
       6: aload_0
       7: getfield      #17                 // Field glyphCount:I
      10: if_icmpgt     119
      13: aload_0
      14: getfield      #4                  // Field flags:I
      17: sipush        4096
      20: iand
      21: ifeq          110
      24: aload_0
      25: getfield      #7                  // Field cacheIndex:I
      28: iload_1
      29: if_icmpne     37
      32: aload_0
      33: getfield      #6                  // Field cacheWidth:F
      36: freturn
      37: fconst_0
      38: fstore_2
      39: aload_0
      40: getfield      #7                  // Field cacheIndex:I
      43: iconst_1
      44: iadd
      45: iload_1
      46: if_icmpne     71
      49: aload_0
      50: getfield      #6                  // Field cacheWidth:F
      53: aload_0
      54: getfield      #16                 // Field positions:[F
      57: aload_0
      58: getfield      #8                  // Field start:I
      61: iload_1
      62: iadd
      63: iconst_1
      64: isub
      65: faload
      66: fadd
      67: fstore_2
      68: goto          98
      71: iconst_0
      72: istore_3
      73: iload_3
      74: iload_1
      75: if_icmpge     98
      78: fload_2
      79: aload_0
      80: getfield      #16                 // Field positions:[F
      83: aload_0
      84: getfield      #8                  // Field start:I
      87: iload_3
      88: iadd
      89: faload
      90: fadd
      91: fstore_2
      92: iinc          3, 1
      95: goto          73
      98: aload_0
      99: iload_1
     100: putfield      #7                  // Field cacheIndex:I
     103: aload_0
     104: fload_2
     105: putfield      #6                  // Field cacheWidth:F
     108: fload_2
     109: freturn
     110: aload_0
     111: getfield      #16                 // Field positions:[F
     114: iload_1
     115: iconst_1
     116: ishl
     117: faload
     118: freturn
     119: iload_1
     120: ifne          127
     123: fconst_0
     124: goto          131
     127: aload_0
     128: invokevirtual #32                 // Method getWidth:()F
     131: freturn

  public float getPosY(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        4096
       7: iand
       8: ifeq          13
      11: fconst_0
      12: freturn
      13: iconst_0
      14: iload_1
      15: if_icmpgt     37
      18: iload_1
      19: aload_0
      20: getfield      #17                 // Field glyphCount:I
      23: if_icmpgt     37
      26: aload_0
      27: getfield      #16                 // Field positions:[F
      30: iload_1
      31: iconst_1
      32: ishl
      33: iconst_1
      34: iadd
      35: faload
      36: freturn
      37: fconst_0
      38: freturn

  public float getAdvance(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field flags:I
       4: sipush        4096
       7: iand
       8: ifeq          23
      11: aload_0
      12: getfield      #16                 // Field positions:[F
      15: aload_0
      16: getfield      #8                  // Field start:I
      19: iload_1
      20: iadd
      21: faload
      22: freturn
      23: aload_0
      24: getfield      #16                 // Field positions:[F
      27: iload_1
      28: iconst_1
      29: iadd
      30: iconst_1
      31: ishl
      32: faload
      33: aload_0
      34: getfield      #16                 // Field positions:[F
      37: iload_1
      38: iconst_1
      39: ishl
      40: faload
      41: fsub
      42: freturn

  public void shape(int, int[], float[], int[]);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field glyphCount:I
       5: aload_0
       6: aload_2
       7: putfield      #29                 // Field gids:[I
      10: aload_0
      11: aload_3
      12: putfield      #16                 // Field positions:[F
      15: aload_0
      16: aload         4
      18: putfield      #33                 // Field charIndices:[I
      21: return

  public void shape(int, int[], float[]);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field glyphCount:I
       5: aload_0
       6: aload_2
       7: putfield      #29                 // Field gids:[I
      10: aload_0
      11: aload_3
      12: putfield      #16                 // Field positions:[F
      15: aload_0
      16: aconst_null
      17: putfield      #33                 // Field charIndices:[I
      20: aload_0
      21: dup
      22: getfield      #4                  // Field flags:I
      25: sipush        4096
      28: ior
      29: putfield      #4                  // Field flags:I
      32: return

  public float getXAtOffset(int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method isLeftToRight:()Z
       4: istore_3
       5: iload_1
       6: aload_0
       7: getfield      #9                  // Field length:I
      10: if_icmpne     26
      13: iload_3
      14: ifeq          24
      17: aload_0
      18: invokevirtual #32                 // Method getWidth:()F
      21: goto          25
      24: fconst_0
      25: freturn
      26: aload_0
      27: getfield      #17                 // Field glyphCount:I
      30: ifle          78
      33: aload_0
      34: iload_1
      35: invokevirtual #34                 // Method getGlyphIndex:(I)I
      38: istore        4
      40: iload_3
      41: ifeq          61
      44: aload_0
      45: iload         4
      47: iload_2
      48: ifeq          55
      51: iconst_0
      52: goto          56
      55: iconst_1
      56: iadd
      57: invokevirtual #35                 // Method getPosX:(I)F
      60: freturn
      61: aload_0
      62: iload         4
      64: iload_2
      65: ifeq          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: iadd
      74: invokevirtual #35                 // Method getPosX:(I)F
      77: freturn
      78: aload_0
      79: invokevirtual #36                 // Method isTab:()Z
      82: ifeq          115
      85: iload_3
      86: ifeq          102
      89: iload_2
      90: ifeq          97
      93: fconst_0
      94: goto          101
      97: aload_0
      98: invokevirtual #32                 // Method getWidth:()F
     101: freturn
     102: iload_2
     103: ifeq          113
     106: aload_0
     107: invokevirtual #32                 // Method getWidth:()F
     110: goto          114
     113: fconst_0
     114: freturn
     115: fconst_0
     116: freturn

  public int getGlyphAtX(float, int[]);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method isLeftToRight:()Z
       4: istore_3
       5: fconst_0
       6: fstore        4
       8: iconst_0
       9: istore        5
      11: iload         5
      13: aload_0
      14: getfield      #17                 // Field glyphCount:I
      17: if_icmpge     97
      20: aload_0
      21: iload         5
      23: invokevirtual #37                 // Method getAdvance:(I)F
      26: fstore        6
      28: fload         4
      30: fload         6
      32: fadd
      33: fload_1
      34: fcmpl
      35: ifle          84
      38: aload_2
      39: ifnull        81
      42: fload_1
      43: fload         4
      45: fsub
      46: fload         6
      48: fconst_2
      49: fdiv
      50: fcmpl
      51: ifle          69
      54: aload_2
      55: iconst_0
      56: iload_3
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: iastore
      66: goto          81
      69: aload_2
      70: iconst_0
      71: iload_3
      72: ifeq          79
      75: iconst_0
      76: goto          80
      79: iconst_1
      80: iastore
      81: iload         5
      83: ireturn
      84: fload         4
      86: fload         6
      88: fadd
      89: fstore        4
      91: iinc          5, 1
      94: goto          11
      97: aload_2
      98: ifnull        113
     101: aload_2
     102: iconst_0
     103: iload_3
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: iastore
     113: iconst_0
     114: aload_0
     115: getfield      #17                 // Field glyphCount:I
     118: iconst_1
     119: isub
     120: invokestatic  #38                 // Method java/lang/Math.max:(II)I
     123: ireturn

  public int getOffsetAtX(float, int[]);
    Code:
       0: aload_0
       1: getfield      #17                 // Field glyphCount:I
       4: ifle          20
       7: aload_0
       8: fload_1
       9: aload_2
      10: invokevirtual #39                 // Method getGlyphAtX:(F[I)I
      13: istore_3
      14: aload_0
      15: iload_3
      16: invokevirtual #28                 // Method getCharOffset:(I)I
      19: ireturn
      20: aload_0
      21: getfield      #3                  // Field width:F
      24: ldc           #2                  // float -1.0f
      26: fcmpl
      27: ifeq          56
      30: aload_0
      31: getfield      #9                  // Field length:I
      34: ifle          56
      37: aload_2
      38: ifnull        56
      41: fload_1
      42: aload_0
      43: getfield      #3                  // Field width:F
      46: fconst_2
      47: fdiv
      48: fcmpl
      49: ifle          56
      52: aload_2
      53: iconst_0
      54: iconst_1
      55: iastore
      56: iconst_0
      57: ireturn

  private void reset();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #16                 // Field positions:[F
       5: aload_0
       6: aconst_null
       7: putfield      #33                 // Field charIndices:[I
      10: aload_0
      11: aconst_null
      12: putfield      #29                 // Field gids:[I
      15: aload_0
      16: ldc           #2                  // float -1.0f
      18: putfield      #3                  // Field width:F
      21: aload_0
      22: aload_0
      23: aload_0
      24: fconst_0
      25: dup_x1
      26: putfield      #20                 // Field leading:F
      29: dup_x1
      30: putfield      #19                 // Field descent:F
      33: putfield      #18                 // Field ascent:F
      36: aload_0
      37: iconst_0
      38: putfield      #17                 // Field glyphCount:I
      41: return

  public com.sun.javafx.text.TextRun split(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: iload_1
       5: isub
       6: istore_2
       7: aload_0
       8: iload_1
       9: putfield      #9                  // Field length:I
      12: aload_0
      13: invokevirtual #40                 // Method isComplex:()Z
      16: istore_3
      17: new           #13                 // class com/sun/javafx/text/TextRun
      20: dup
      21: aload_0
      22: getfield      #8                  // Field start:I
      25: aload_0
      26: getfield      #9                  // Field length:I
      29: iadd
      30: iload_2
      31: aload_0
      32: getfield      #10                 // Field level:B
      35: iload_3
      36: aload_0
      37: getfield      #11                 // Field script:I
      40: aload_0
      41: getfield      #12                 // Field span:Lcom/sun/javafx/scene/text/TextSpan;
      44: aload_0
      45: getfield      #5                  // Field slot:I
      48: aload_0
      49: invokevirtual #41                 // Method isCanonical:()Z
      52: invokespecial #42                 // Method "<init>":(IIBZILcom/sun/javafx/scene/text/TextSpan;IZ)V
      55: astore        4
      57: aload_0
      58: dup
      59: getfield      #4                  // Field flags:I
      62: bipush        16
      64: ior
      65: putfield      #4                  // Field flags:I
      68: aload         4
      70: dup
      71: getfield      #4                  // Field flags:I
      74: bipush        8
      76: ior
      77: putfield      #4                  // Field flags:I
      80: aload_0
      81: dup
      82: getfield      #4                  // Field flags:I
      85: sipush        128
      88: ior
      89: putfield      #4                  // Field flags:I
      92: aload_0
      93: dup
      94: getfield      #4                  // Field flags:I
      97: sipush        -257
     100: iand
     101: putfield      #4                  // Field flags:I
     104: aload         4
     106: dup
     107: getfield      #4                  // Field flags:I
     110: sipush        256
     113: ior
     114: putfield      #4                  // Field flags:I
     117: aload         4
     119: aload_0
     120: getfield      #18                 // Field ascent:F
     123: aload_0
     124: getfield      #19                 // Field descent:F
     127: aload_0
     128: getfield      #20                 // Field leading:F
     131: invokevirtual #43                 // Method setMetrics:(FFF)V
     134: iload_3
     135: ifne          319
     138: aload_0
     139: aload_0
     140: getfield      #9                  // Field length:I
     143: putfield      #17                 // Field glyphCount:I
     146: aload_0
     147: getfield      #4                  // Field flags:I
     150: sipush        4096
     153: iand
     154: ifeq          233
     157: aload         4
     159: iload_2
     160: aload_0
     161: getfield      #29                 // Field gids:[I
     164: aload_0
     165: getfield      #16                 // Field positions:[F
     168: invokevirtual #44                 // Method shape:(I[I[F)V
     171: aload_0
     172: getfield      #3                  // Field width:F
     175: ldc           #2                  // float -1.0f
     177: fcmpl
     178: ifeq          323
     181: iload_2
     182: aload_0
     183: getfield      #9                  // Field length:I
     186: if_icmple     216
     189: aload_0
     190: getfield      #3                  // Field width:F
     193: fstore        5
     195: aload_0
     196: ldc           #2                  // float -1.0f
     198: putfield      #3                  // Field width:F
     201: aload         4
     203: fload         5
     205: aload_0
     206: invokevirtual #32                 // Method getWidth:()F
     209: fsub
     210: invokevirtual #45                 // Method setWidth:(F)V
     213: goto          323
     216: aload_0
     217: dup
     218: getfield      #3                  // Field width:F
     221: aload         4
     223: invokevirtual #32                 // Method getWidth:()F
     226: fsub
     227: putfield      #3                  // Field width:F
     230: goto          323
     233: iload_2
     234: newarray       int
     236: astore        5
     238: iload_2
     239: iconst_1
     240: iadd
     241: iconst_1
     242: ishl
     243: newarray       float
     245: astore        6
     247: aload_0
     248: getfield      #29                 // Field gids:[I
     251: iload_1
     252: aload         5
     254: iconst_0
     255: iload_2
     256: invokestatic  #46                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     259: aload_0
     260: invokevirtual #32                 // Method getWidth:()F
     263: fstore        7
     265: iload_1
     266: iconst_1
     267: ishl
     268: istore        8
     270: iconst_2
     271: istore        9
     273: iload         9
     275: aload         6
     277: arraylength
     278: if_icmpge     305
     281: aload         6
     283: iload         9
     285: aload_0
     286: getfield      #16                 // Field positions:[F
     289: iload         9
     291: iload         8
     293: iadd
     294: faload
     295: fload         7
     297: fsub
     298: fastore
     299: iinc          9, 2
     302: goto          273
     305: aload         4
     307: iload_2
     308: aload         5
     310: aload         6
     312: aconst_null
     313: invokevirtual #47                 // Method shape:(I[I[F[I)V
     316: goto          323
     319: aload_0
     320: invokespecial #48                 // Method reset:()V
     323: aload         4
     325: areturn

  public void merge(com.sun.javafx.text.TextRun);
    Code:
       0: aload_1
       1: ifnull        72
       4: aload_0
       5: dup
       6: getfield      #9                  // Field length:I
       9: aload_1
      10: getfield      #9                  // Field length:I
      13: iadd
      14: putfield      #9                  // Field length:I
      17: aload_0
      18: dup
      19: getfield      #17                 // Field glyphCount:I
      22: aload_1
      23: getfield      #17                 // Field glyphCount:I
      26: iadd
      27: putfield      #17                 // Field glyphCount:I
      30: aload_0
      31: getfield      #3                  // Field width:F
      34: ldc           #2                  // float -1.0f
      36: fcmpl
      37: ifeq          66
      40: aload_1
      41: getfield      #3                  // Field width:F
      44: ldc           #2                  // float -1.0f
      46: fcmpl
      47: ifeq          66
      50: aload_0
      51: dup
      52: getfield      #3                  // Field width:F
      55: aload_1
      56: getfield      #3                  // Field width:F
      59: fadd
      60: putfield      #3                  // Field width:F
      63: goto          72
      66: aload_0
      67: ldc           #2                  // float -1.0f
      69: putfield      #3                  // Field width:F
      72: aload_0
      73: dup
      74: getfield      #4                  // Field flags:I
      77: sipush        -129
      80: iand
      81: putfield      #4                  // Field flags:I
      84: aload_0
      85: dup
      86: getfield      #4                  // Field flags:I
      89: sipush        -257
      92: iand
      93: putfield      #4                  // Field flags:I
      96: return

  public com.sun.javafx.text.TextRun unwrap();
    Code:
       0: new           #13                 // class com/sun/javafx/text/TextRun
       3: dup
       4: aload_0
       5: getfield      #8                  // Field start:I
       8: aload_0
       9: getfield      #9                  // Field length:I
      12: aload_0
      13: getfield      #10                 // Field level:B
      16: aload_0
      17: invokevirtual #40                 // Method isComplex:()Z
      20: aload_0
      21: getfield      #11                 // Field script:I
      24: aload_0
      25: getfield      #12                 // Field span:Lcom/sun/javafx/scene/text/TextSpan;
      28: aload_0
      29: getfield      #5                  // Field slot:I
      32: aload_0
      33: invokevirtual #41                 // Method isCanonical:()Z
      36: invokespecial #42                 // Method "<init>":(IIBZILcom/sun/javafx/scene/text/TextSpan;IZ)V
      39: astore_1
      40: aload_1
      41: aload_0
      42: getfield      #17                 // Field glyphCount:I
      45: aload_0
      46: getfield      #29                 // Field gids:[I
      49: aload_0
      50: getfield      #16                 // Field positions:[F
      53: invokevirtual #44                 // Method shape:(I[I[F)V
      56: aload_1
      57: aload_0
      58: getfield      #3                  // Field width:F
      61: invokevirtual #45                 // Method setWidth:(F)V
      64: aload_1
      65: aload_0
      66: getfield      #18                 // Field ascent:F
      69: aload_0
      70: getfield      #19                 // Field descent:F
      73: aload_0
      74: getfield      #20                 // Field leading:F
      77: invokevirtual #43                 // Method setMetrics:(FFF)V
      80: bipush        28
      82: istore_2
      83: aload_1
      84: aload_0
      85: getfield      #4                  // Field flags:I
      88: iload_2
      89: iconst_m1
      90: ixor
      91: iand
      92: putfield      #4                  // Field flags:I
      95: aload_1
      96: areturn

  public void justify(int, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field positions:[F
       4: ifnull        62
       7: aload_0
       8: iload_1
       9: invokevirtual #34                 // Method getGlyphIndex:(I)I
      12: istore_3
      13: iload_3
      14: iconst_m1
      15: if_icmpeq     57
      18: iload_3
      19: iconst_1
      20: iadd
      21: istore        4
      23: iload         4
      25: aload_0
      26: getfield      #17                 // Field glyphCount:I
      29: if_icmpgt     51
      32: aload_0
      33: getfield      #16                 // Field positions:[F
      36: iload         4
      38: iconst_1
      39: ishl
      40: dup2
      41: faload
      42: fload_2
      43: fadd
      44: fastore
      45: iinc          4, 1
      48: goto          23
      51: aload_0
      52: ldc           #2                  // float -1.0f
      54: putfield      #3                  // Field width:F
      57: aload_0
      58: iconst_1
      59: invokevirtual #49                 // Method setComplex:(Z)V
      62: return

  public int getGlyphIndex(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field charIndices:[I
       4: ifnonnull     9
       7: iload_1
       8: ireturn
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_0
      13: getfield      #33                 // Field charIndices:[I
      16: arraylength
      17: if_icmpge     46
      20: iload_2
      21: aload_0
      22: getfield      #17                 // Field glyphCount:I
      25: if_icmpge     46
      28: aload_0
      29: getfield      #33                 // Field charIndices:[I
      32: iload_2
      33: iaload
      34: iload_1
      35: if_icmpne     40
      38: iload_2
      39: ireturn
      40: iinc          2, 1
      43: goto          11
      46: aload_0
      47: invokevirtual #27                 // Method isLeftToRight:()Z
      50: ifeq          65
      53: iload_1
      54: ifle          83
      57: aload_0
      58: iload_1
      59: iconst_1
      60: isub
      61: invokevirtual #34                 // Method getGlyphIndex:(I)I
      64: ireturn
      65: iload_1
      66: iconst_1
      67: iadd
      68: aload_0
      69: getfield      #9                  // Field length:I
      72: if_icmpge     83
      75: aload_0
      76: iload_1
      77: iconst_1
      78: iadd
      79: invokevirtual #34                 // Method getGlyphIndex:(I)I
      82: ireturn
      83: iconst_0
      84: ireturn

  public int getCharOffset(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field charIndices:[I
       4: ifnonnull     11
       7: iload_1
       8: goto          17
      11: aload_0
      12: getfield      #33                 // Field charIndices:[I
      15: iload_1
      16: iaload
      17: ireturn

  public java.lang.String toString();
    Code:
       0: new           #50                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #52                 // String TextRun start=
      11: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #8                  // Field start:I
      20: invokevirtual #54                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: ldc           #55                 // String , length=
      27: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #9                  // Field length:I
      36: invokevirtual #54                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      39: pop
      40: aload_1
      41: ldc           #56                 // String , script=
      43: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload_1
      48: aload_0
      49: getfield      #11                 // Field script:I
      52: invokevirtual #54                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      55: pop
      56: aload_1
      57: ldc           #57                 // String , linebreak=
      59: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: aload_1
      64: aload_0
      65: invokevirtual #58                 // Method isLinebreak:()Z
      68: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      71: pop
      72: aload_1
      73: ldc           #60                 // String , softbreak=
      75: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: pop
      79: aload_1
      80: aload_0
      81: invokevirtual #61                 // Method isSoftbreak:()Z
      84: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      87: pop
      88: aload_1
      89: ldc           #62                 // String , complex=
      91: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: aload_1
      96: aload_0
      97: invokevirtual #40                 // Method isComplex:()Z
     100: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     103: pop
     104: aload_1
     105: ldc           #63                 // String , tab=
     107: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     110: pop
     111: aload_1
     112: aload_0
     113: invokevirtual #36                 // Method isTab:()Z
     116: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     119: pop
     120: aload_1
     121: ldc           #64                 // String , compact=
     123: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     126: pop
     127: aload_1
     128: aload_0
     129: getfield      #4                  // Field flags:I
     132: sipush        4096
     135: iand
     136: ifeq          143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     147: pop
     148: aload_1
     149: ldc           #65                 // String , ltr=
     151: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     154: pop
     155: aload_1
     156: aload_0
     157: invokevirtual #27                 // Method isLeftToRight:()Z
     160: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     163: pop
     164: aload_1
     165: ldc           #66                 // String , split=
     167: invokevirtual #53                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     170: pop
     171: aload_1
     172: aload_0
     173: invokevirtual #67                 // Method isSplit:()Z
     176: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
     179: pop
     180: aload_1
     181: invokevirtual #68                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     184: areturn
}
