Compiled from "Pixels.java"
public abstract class com.sun.glass.ui.Pixels {
  protected final int width;

  protected final int height;

  protected final int bytesPerComponent;

  protected final java.nio.ByteBuffer bytes;

  protected final java.nio.IntBuffer ints;

  private final float scalex;

  private final float scaley;

  public static int getNativeFormat();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: invokestatic  #2                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       6: invokevirtual #3                  // Method com/sun/glass/ui/Application.staticPixels_getNativeFormat:()I
       9: ireturn

  protected com.sun.glass.ui.Pixels(int, int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #5                  // Field width:I
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field height:I
      14: aload_0
      15: iconst_1
      16: putfield      #7                  // Field bytesPerComponent:I
      19: aload_0
      20: aload_3
      21: invokevirtual #8                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      24: putfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      27: aload_0
      28: getfield      #5                  // Field width:I
      31: ifle          62
      34: aload_0
      35: getfield      #6                  // Field height:I
      38: ifle          62
      41: aload_0
      42: getfield      #5                  // Field width:I
      45: aload_0
      46: getfield      #6                  // Field height:I
      49: imul
      50: iconst_4
      51: imul
      52: aload_0
      53: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      56: invokevirtual #10                 // Method java/nio/ByteBuffer.capacity:()I
      59: if_icmple     101
      62: new           #11                 // class java/lang/IllegalArgumentException
      65: dup
      66: aload_0
      67: getfield      #5                  // Field width:I
      70: aload_0
      71: getfield      #6                  // Field height:I
      74: aload_0
      75: getfield      #5                  // Field width:I
      78: aload_0
      79: getfield      #6                  // Field height:I
      82: imul
      83: iconst_4
      84: imul
      85: aload_0
      86: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      89: invokevirtual #10                 // Method java/nio/ByteBuffer.capacity:()I
      92: invokedynamic #12,  0             // InvokeDynamic #0:makeConcatWithConstants:(IIII)Ljava/lang/String;
      97: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload_0
     102: aconst_null
     103: putfield      #14                 // Field ints:Ljava/nio/IntBuffer;
     106: aload_0
     107: fconst_1
     108: putfield      #15                 // Field scalex:F
     111: aload_0
     112: fconst_1
     113: putfield      #16                 // Field scaley:F
     116: return

  protected com.sun.glass.ui.Pixels(int, int, java.nio.IntBuffer);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #5                  // Field width:I
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field height:I
      14: aload_0
      15: iconst_4
      16: putfield      #7                  // Field bytesPerComponent:I
      19: aload_0
      20: aload_3
      21: invokevirtual #17                 // Method java/nio/IntBuffer.slice:()Ljava/nio/IntBuffer;
      24: putfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      27: aload_0
      28: getfield      #5                  // Field width:I
      31: ifle          60
      34: aload_0
      35: getfield      #6                  // Field height:I
      38: ifle          60
      41: aload_0
      42: getfield      #5                  // Field width:I
      45: aload_0
      46: getfield      #6                  // Field height:I
      49: imul
      50: aload_0
      51: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      54: invokevirtual #18                 // Method java/nio/IntBuffer.capacity:()I
      57: if_icmple     97
      60: new           #11                 // class java/lang/IllegalArgumentException
      63: dup
      64: aload_0
      65: getfield      #5                  // Field width:I
      68: aload_0
      69: getfield      #6                  // Field height:I
      72: aload_0
      73: getfield      #5                  // Field width:I
      76: aload_0
      77: getfield      #6                  // Field height:I
      80: imul
      81: aload_0
      82: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      85: invokevirtual #18                 // Method java/nio/IntBuffer.capacity:()I
      88: invokedynamic #19,  0             // InvokeDynamic #1:makeConcatWithConstants:(IIII)Ljava/lang/String;
      93: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_0
      98: aconst_null
      99: putfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
     102: aload_0
     103: fconst_1
     104: putfield      #15                 // Field scalex:F
     107: aload_0
     108: fconst_1
     109: putfield      #16                 // Field scaley:F
     112: return

  protected com.sun.glass.ui.Pixels(int, int, java.nio.IntBuffer, float, float);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #5                  // Field width:I
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field height:I
      14: aload_0
      15: iconst_4
      16: putfield      #7                  // Field bytesPerComponent:I
      19: aload_0
      20: aload_3
      21: invokevirtual #17                 // Method java/nio/IntBuffer.slice:()Ljava/nio/IntBuffer;
      24: putfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      27: aload_0
      28: getfield      #5                  // Field width:I
      31: ifle          60
      34: aload_0
      35: getfield      #6                  // Field height:I
      38: ifle          60
      41: aload_0
      42: getfield      #5                  // Field width:I
      45: aload_0
      46: getfield      #6                  // Field height:I
      49: imul
      50: aload_0
      51: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      54: invokevirtual #18                 // Method java/nio/IntBuffer.capacity:()I
      57: if_icmple     97
      60: new           #11                 // class java/lang/IllegalArgumentException
      63: dup
      64: aload_0
      65: getfield      #5                  // Field width:I
      68: aload_0
      69: getfield      #6                  // Field height:I
      72: aload_0
      73: getfield      #5                  // Field width:I
      76: aload_0
      77: getfield      #6                  // Field height:I
      80: imul
      81: aload_0
      82: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      85: invokevirtual #18                 // Method java/nio/IntBuffer.capacity:()I
      88: invokedynamic #19,  0             // InvokeDynamic #1:makeConcatWithConstants:(IIII)Ljava/lang/String;
      93: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_0
      98: aconst_null
      99: putfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
     102: aload_0
     103: fload         4
     105: putfield      #15                 // Field scalex:F
     108: aload_0
     109: fload         5
     111: putfield      #16                 // Field scaley:F
     114: return

  public final float getScaleX();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #15                 // Field scalex:F
       7: freturn

  public final float getScaleY();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #16                 // Field scaley:F
       7: freturn

  public final float getScaleXUnsafe();
    Code:
       0: aload_0
       1: getfield      #15                 // Field scalex:F
       4: freturn

  public final float getScaleYUnsafe();
    Code:
       0: aload_0
       1: getfield      #16                 // Field scaley:F
       4: freturn

  public final int getWidth();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #5                  // Field width:I
       7: ireturn

  public final int getWidthUnsafe();
    Code:
       0: aload_0
       1: getfield      #5                  // Field width:I
       4: ireturn

  public final int getHeight();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #6                  // Field height:I
       7: ireturn

  public final int getHeightUnsafe();
    Code:
       0: aload_0
       1: getfield      #6                  // Field height:I
       4: ireturn

  public final int getBytesPerComponent();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #7                  // Field bytesPerComponent:I
       7: ireturn

  public final java.nio.Buffer getPixels();
    Code:
       0: aload_0
       1: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
       4: ifnull        20
       7: aload_0
       8: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      11: invokevirtual #20                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/ByteBuffer;
      14: pop
      15: aload_0
      16: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      19: areturn
      20: aload_0
      21: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      24: ifnull        40
      27: aload_0
      28: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      31: invokevirtual #21                 // Method java/nio/IntBuffer.rewind:()Ljava/nio/IntBuffer;
      34: pop
      35: aload_0
      36: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      39: areturn
      40: new           #22                 // class java/lang/RuntimeException
      43: dup
      44: ldc           #23                 // String Unexpected Pixels state.
      46: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      49: athrow

  public final java.nio.ByteBuffer asByteBuffer();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokevirtual #25                 // Method getWidth:()I
       7: aload_0
       8: invokevirtual #26                 // Method getHeight:()I
      11: imul
      12: iconst_4
      13: imul
      14: invokestatic  #27                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      17: astore_1
      18: aload_1
      19: invokestatic  #28                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      22: invokevirtual #29                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_1
      27: invokevirtual #20                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/ByteBuffer;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #30                 // Method asByteBuffer:(Ljava/nio/ByteBuffer;)V
      36: aload_1
      37: areturn

  public final void asByteBuffer(java.nio.ByteBuffer);
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_1
       4: invokevirtual #31                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ifne          20
      10: new           #22                 // class java/lang/RuntimeException
      13: dup
      14: ldc           #32                 // String Expected direct buffer.
      16: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: invokevirtual #33                 // Method java/nio/ByteBuffer.remaining:()I
      24: aload_0
      25: invokevirtual #25                 // Method getWidth:()I
      28: aload_0
      29: invokevirtual #26                 // Method getHeight:()I
      32: imul
      33: iconst_4
      34: imul
      35: if_icmpge     48
      38: new           #22                 // class java/lang/RuntimeException
      41: dup
      42: ldc           #34                 // String Too small buffer.
      44: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_1
      50: invokevirtual #35                 // Method _fillDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
      53: return

  private void attachData(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
       4: ifnull        62
       7: aload_0
       8: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      11: invokevirtual #36                 // Method java/nio/IntBuffer.isDirect:()Z
      14: ifne          27
      17: aload_0
      18: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      21: invokevirtual #37                 // Method java/nio/IntBuffer.array:()[I
      24: goto          28
      27: aconst_null
      28: astore_3
      29: aload_0
      30: lload_1
      31: aload_0
      32: getfield      #5                  // Field width:I
      35: aload_0
      36: getfield      #6                  // Field height:I
      39: aload_0
      40: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      43: aload_3
      44: aload_3
      45: ifnull        58
      48: aload_0
      49: getfield      #14                 // Field ints:Ljava/nio/IntBuffer;
      52: invokevirtual #38                 // Method java/nio/IntBuffer.arrayOffset:()I
      55: goto          59
      58: iconst_0
      59: invokevirtual #39                 // Method _attachInt:(JIILjava/nio/IntBuffer;[II)V
      62: aload_0
      63: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      66: ifnull        124
      69: aload_0
      70: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      73: invokevirtual #31                 // Method java/nio/ByteBuffer.isDirect:()Z
      76: ifne          89
      79: aload_0
      80: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
      83: invokevirtual #40                 // Method java/nio/ByteBuffer.array:()[B
      86: goto          90
      89: aconst_null
      90: astore_3
      91: aload_0
      92: lload_1
      93: aload_0
      94: getfield      #5                  // Field width:I
      97: aload_0
      98: getfield      #6                  // Field height:I
     101: aload_0
     102: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
     105: aload_3
     106: aload_3
     107: ifnull        120
     110: aload_0
     111: getfield      #9                  // Field bytes:Ljava/nio/ByteBuffer;
     114: invokevirtual #41                 // Method java/nio/ByteBuffer.arrayOffset:()I
     117: goto          121
     120: iconst_0
     121: invokevirtual #42                 // Method _attachByte:(JIILjava/nio/ByteBuffer;[BI)V
     124: return

  protected abstract void _fillDirectByteBuffer(java.nio.ByteBuffer);

  protected abstract void _attachInt(long, int, int, java.nio.IntBuffer, int[], int);

  protected abstract void _attachByte(long, int, int, java.nio.ByteBuffer, byte[], int);

  public final boolean equals(java.lang.Object);
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_1
       4: ifnull        25
       7: aload_0
       8: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: aload_1
      12: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_2
      27: iload_2
      28: ifeq          96
      31: aload_1
      32: checkcast     #45                 // class com/sun/glass/ui/Pixels
      35: astore_3
      36: aload_0
      37: invokevirtual #25                 // Method getWidth:()I
      40: aload_3
      41: invokevirtual #25                 // Method getWidth:()I
      44: if_icmpne     62
      47: aload_0
      48: invokevirtual #26                 // Method getHeight:()I
      51: aload_3
      52: invokevirtual #26                 // Method getHeight:()I
      55: if_icmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: istore_2
      64: iload_2
      65: ifeq          96
      68: aload_0
      69: invokevirtual #46                 // Method asByteBuffer:()Ljava/nio/ByteBuffer;
      72: astore        4
      74: aload_3
      75: invokevirtual #46                 // Method asByteBuffer:()Ljava/nio/ByteBuffer;
      78: astore        5
      80: aload         4
      82: aload         5
      84: invokevirtual #47                 // Method java/nio/ByteBuffer.compareTo:(Ljava/nio/ByteBuffer;)I
      87: ifne          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore_2
      96: iload_2
      97: ireturn

  public final int hashCode();
    Code:
       0: invokestatic  #1                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokevirtual #25                 // Method getWidth:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: invokevirtual #26                 // Method getHeight:()I
      16: iadd
      17: istore_1
      18: bipush        17
      20: iload_1
      21: imul
      22: aload_0
      23: invokevirtual #46                 // Method asByteBuffer:()Ljava/nio/ByteBuffer;
      26: invokevirtual #48                 // Method java/nio/ByteBuffer.hashCode:()I
      29: iadd
      30: istore_1
      31: iload_1
      32: ireturn
}
