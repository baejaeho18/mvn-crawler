Compiled from "EventLoop.java"
public final class com.sun.glass.ui.EventLoop {
  private static final java.util.Deque<com.sun.glass.ui.EventLoop> stack;

  private com.sun.glass.ui.EventLoop$State state;

  private java.lang.Object returnValue;

  static final boolean $assertionsDisabled;

  com.sun.glass.ui.EventLoop();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/sun/glass/ui/EventLoop$State.IDLE:Lcom/sun/glass/ui/EventLoop$State;
       8: putfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
      11: invokestatic  #4                  // Method com/sun/glass/ui/Application.checkEventThread:()V
      14: return

  public com.sun.glass.ui.EventLoop$State getState();
    Code:
       0: invokestatic  #4                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
       7: areturn

  public java.lang.Object enter();
    Code:
       0: invokestatic  #4                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
       7: getstatic     #2                  // Field com/sun/glass/ui/EventLoop$State.IDLE:Lcom/sun/glass/ui/EventLoop$State;
      10: invokevirtual #5                  // Method com/sun/glass/ui/EventLoop$State.equals:(Ljava/lang/Object;)Z
      13: ifne          26
      16: new           #6                  // class java/lang/IllegalStateException
      19: dup
      20: ldc           #7                  // String The event loop object isn\'t idle
      22: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: getstatic     #9                  // Field com/sun/glass/ui/EventLoop$State.ACTIVE:Lcom/sun/glass/ui/EventLoop$State;
      30: putfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
      33: getstatic     #10                 // Field stack:Ljava/util/Deque;
      36: aload_0
      37: invokeinterface #11,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      42: invokestatic  #12                 // Method com/sun/glass/ui/Application.enterNestedEventLoop:()Ljava/lang/Object;
      45: astore_1
      46: getstatic     #13                 // Field $assertionsDisabled:Z
      49: ifne          67
      52: aload_1
      53: aload_0
      54: if_acmpeq     67
      57: new           #14                 // class java/lang/AssertionError
      60: dup
      61: ldc           #15                 // String Internal inconsistency - wrong EventLoop
      63: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: getstatic     #13                 // Field $assertionsDisabled:Z
      70: ifne          95
      73: getstatic     #10                 // Field stack:Ljava/util/Deque;
      76: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      81: aload_0
      82: if_acmpeq     95
      85: new           #14                 // class java/lang/AssertionError
      88: dup
      89: ldc           #18                 // String Internal inconsistency - corrupted event loops stack
      91: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      94: athrow
      95: getstatic     #13                 // Field $assertionsDisabled:Z
      98: ifne          124
     101: aload_0
     102: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
     105: getstatic     #19                 // Field com/sun/glass/ui/EventLoop$State.LEAVING:Lcom/sun/glass/ui/EventLoop$State;
     108: invokevirtual #5                  // Method com/sun/glass/ui/EventLoop$State.equals:(Ljava/lang/Object;)Z
     111: ifne          124
     114: new           #14                 // class java/lang/AssertionError
     117: dup
     118: ldc           #20                 // String The event loop isn\'t leaving
     120: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     123: athrow
     124: aload_0
     125: getfield      #21                 // Field returnValue:Ljava/lang/Object;
     128: astore_2
     129: aload_0
     130: aconst_null
     131: putfield      #21                 // Field returnValue:Ljava/lang/Object;
     134: aload_0
     135: getstatic     #2                  // Field com/sun/glass/ui/EventLoop$State.IDLE:Lcom/sun/glass/ui/EventLoop$State;
     138: putfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
     141: getstatic     #10                 // Field stack:Ljava/util/Deque;
     144: invokeinterface #22,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
     149: pop
     150: getstatic     #10                 // Field stack:Ljava/util/Deque;
     153: invokeinterface #23,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     158: ifne          192
     161: getstatic     #10                 // Field stack:Ljava/util/Deque;
     164: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
     169: checkcast     #24                 // class com/sun/glass/ui/EventLoop
     172: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
     175: getstatic     #19                 // Field com/sun/glass/ui/EventLoop$State.LEAVING:Lcom/sun/glass/ui/EventLoop$State;
     178: invokevirtual #5                  // Method com/sun/glass/ui/EventLoop$State.equals:(Ljava/lang/Object;)Z
     181: ifeq          192
     184: invokedynamic #25,  0             // InvokeDynamic #0:run:()Ljava/lang/Runnable;
     189: invokestatic  #26                 // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
     192: aload_2
     193: areturn
     194: astore_3
     195: aload_0
     196: aconst_null
     197: putfield      #21                 // Field returnValue:Ljava/lang/Object;
     200: aload_0
     201: getstatic     #2                  // Field com/sun/glass/ui/EventLoop$State.IDLE:Lcom/sun/glass/ui/EventLoop$State;
     204: putfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
     207: getstatic     #10                 // Field stack:Ljava/util/Deque;
     210: invokeinterface #22,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
     215: pop
     216: getstatic     #10                 // Field stack:Ljava/util/Deque;
     219: invokeinterface #23,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     224: ifne          258
     227: getstatic     #10                 // Field stack:Ljava/util/Deque;
     230: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
     235: checkcast     #24                 // class com/sun/glass/ui/EventLoop
     238: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
     241: getstatic     #19                 // Field com/sun/glass/ui/EventLoop$State.LEAVING:Lcom/sun/glass/ui/EventLoop$State;
     244: invokevirtual #5                  // Method com/sun/glass/ui/EventLoop$State.equals:(Ljava/lang/Object;)Z
     247: ifeq          258
     250: invokedynamic #25,  0             // InvokeDynamic #0:run:()Ljava/lang/Runnable;
     255: invokestatic  #26                 // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
     258: aload_3
     259: athrow
    Exception table:
       from    to  target type
          42   129   194   any

  public void leave(java.lang.Object);
    Code:
       0: invokestatic  #4                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
       7: getstatic     #9                  // Field com/sun/glass/ui/EventLoop$State.ACTIVE:Lcom/sun/glass/ui/EventLoop$State;
      10: invokevirtual #5                  // Method com/sun/glass/ui/EventLoop$State.equals:(Ljava/lang/Object;)Z
      13: ifne          26
      16: new           #6                  // class java/lang/IllegalStateException
      19: dup
      20: ldc           #27                 // String The event loop object isn\'t active
      22: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: getstatic     #19                 // Field com/sun/glass/ui/EventLoop$State.LEAVING:Lcom/sun/glass/ui/EventLoop$State;
      30: putfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
      33: aload_0
      34: aload_1
      35: putfield      #21                 // Field returnValue:Ljava/lang/Object;
      38: getstatic     #10                 // Field stack:Ljava/util/Deque;
      41: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      46: aload_0
      47: if_acmpne     54
      50: aload_0
      51: invokestatic  #28                 // Method com/sun/glass/ui/Application.leaveNestedEventLoop:(Ljava/lang/Object;)V
      54: return

  private static void lambda$enter$0();
    Code:
       0: getstatic     #10                 // Field stack:Ljava/util/Deque;
       3: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
       8: checkcast     #24                 // class com/sun/glass/ui/EventLoop
      11: astore_0
      12: aload_0
      13: ifnull        33
      16: aload_0
      17: getfield      #3                  // Field state:Lcom/sun/glass/ui/EventLoop$State;
      20: getstatic     #19                 // Field com/sun/glass/ui/EventLoop$State.LEAVING:Lcom/sun/glass/ui/EventLoop$State;
      23: invokevirtual #5                  // Method com/sun/glass/ui/EventLoop$State.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: aload_0
      30: invokestatic  #28                 // Method com/sun/glass/ui/Application.leaveNestedEventLoop:(Ljava/lang/Object;)V
      33: return

  static {};
    Code:
       0: ldc           #24                 // class com/sun/glass/ui/EventLoop
       2: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #13                 // Field $assertionsDisabled:Z
      16: new           #30                 // class java/util/ArrayDeque
      19: dup
      20: invokespecial #31                 // Method java/util/ArrayDeque."<init>":()V
      23: putstatic     #10                 // Field stack:Ljava/util/Deque;
      26: return
}
