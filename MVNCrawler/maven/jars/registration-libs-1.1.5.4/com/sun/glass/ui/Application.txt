Compiled from "Application.java"
public abstract class com.sun.glass.ui.Application {
  private static final java.lang.String DEFAULT_NAME;

  protected java.lang.String name;

  private com.sun.glass.ui.Application$EventHandler eventHandler;

  private boolean initialActiveEventReceived;

  private java.lang.String[] initialOpenedFiles;

  private static boolean loaded;

  private static com.sun.glass.ui.Application application;

  private static java.lang.Thread eventThread;

  private static final boolean disableThreadChecks;

  private static volatile java.util.Map deviceDetails;

  private boolean terminateWhenLastWindowClosed;

  private static int nestedEventLoopCounter;

  protected static synchronized void loadNativeLibrary(java.lang.String);
    Code:
       0: getstatic     #1                  // Field loaded:Z
       3: ifne          14
       6: aload_0
       7: invokestatic  #2                  // Method com/sun/glass/utils/NativeLibLoader.loadLibrary:(Ljava/lang/String;)V
      10: iconst_1
      11: putstatic     #1                  // Field loaded:Z
      14: return

  protected static synchronized void loadNativeLibrary();
    Code:
       0: ldc           #3                  // String glass
       2: invokestatic  #4                  // Method loadNativeLibrary:(Ljava/lang/String;)V
       5: return

  public static void setDeviceDetails(java.util.Map);
    Code:
       0: aload_0
       1: putstatic     #5                  // Field deviceDetails:Ljava/util/Map;
       4: return

  public static java.util.Map getDeviceDetails();
    Code:
       0: getstatic     #5                  // Field deviceDetails:Ljava/util/Map;
       3: areturn

  protected com.sun.glass.ui.Application();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #8                  // String java
       7: putfield      #9                  // Field name:Ljava/lang/String;
      10: aload_0
      11: iconst_0
      12: putfield      #10                 // Field initialActiveEventReceived:Z
      15: aload_0
      16: aconst_null
      17: putfield      #11                 // Field initialOpenedFiles:[Ljava/lang/String;
      20: aload_0
      21: iconst_1
      22: putfield      #12                 // Field terminateWhenLastWindowClosed:Z
      25: return

  public static void run(java.lang.Runnable);
    Code:
       0: getstatic     #13                 // Field application:Lcom/sun/glass/ui/Application;
       3: ifnull        16
       6: new           #14                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #15                 // String Application is already running
      12: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: invokestatic  #17                 // Method com/sun/glass/ui/PlatformFactory.getPlatformFactory:()Lcom/sun/glass/ui/PlatformFactory;
      19: invokevirtual #18                 // Method com/sun/glass/ui/PlatformFactory.createApplication:()Lcom/sun/glass/ui/Application;
      22: putstatic     #13                 // Field application:Lcom/sun/glass/ui/Application;
      25: getstatic     #13                 // Field application:Lcom/sun/glass/ui/Application;
      28: aload_0
      29: invokedynamic #19,  0             // InvokeDynamic #0:run:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
      34: invokevirtual #20                 // Method runLoop:(Ljava/lang/Runnable;)V
      37: goto          45
      40: astore_1
      41: aload_1
      42: invokevirtual #22                 // Method java/lang/Throwable.printStackTrace:()V
      45: return
    Exception table:
       from    to  target type
          25    37    40   Class java/lang/Throwable

  protected abstract void runLoop(java.lang.Runnable);

  protected void finishTerminating();
    Code:
       0: aconst_null
       1: putstatic     #13                 // Field application:Lcom/sun/glass/ui/Application;
       4: return

  public java.lang.String getName();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: getfield      #9                  // Field name:Ljava/lang/String;
       7: areturn

  public void setName(java.lang.String);
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_1
       4: ifnull        24
       7: ldc           #8                  // String java
       9: aload_0
      10: getfield      #9                  // Field name:Ljava/lang/String;
      13: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          24
      19: aload_0
      20: aload_1
      21: putfield      #9                  // Field name:Ljava/lang/String;
      24: return

  public java.lang.String getDataDirectory();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: invokedynamic #25,  0             // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;
       8: invokestatic  #26                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #27                 // class java/lang/String
      14: astore_1
      15: aload_1
      16: getstatic     #28                 // Field java/io/File.separator:Ljava/lang/String;
      19: aload_0
      20: getfield      #9                  // Field name:Ljava/lang/String;
      23: getstatic     #28                 // Field java/io/File.separator:Ljava/lang/String;
      26: invokedynamic #29,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      31: areturn

  private void notifyWillFinishLaunching();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #32                 // Method com/sun/glass/ui/Application$EventHandler.handleWillFinishLaunchingAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyDidFinishLaunching();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #33                 // Method com/sun/glass/ui/Application$EventHandler.handleDidFinishLaunchingAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyWillBecomeActive();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #34                 // Method com/sun/glass/ui/Application$EventHandler.handleWillBecomeActiveAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyDidBecomeActive();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field initialActiveEventReceived:Z
       5: aload_0
       6: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       9: astore_1
      10: aload_1
      11: ifnull        22
      14: aload_1
      15: aload_0
      16: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      19: invokevirtual #35                 // Method com/sun/glass/ui/Application$EventHandler.handleDidBecomeActiveAction:(Lcom/sun/glass/ui/Application;J)V
      22: return

  private void notifyWillResignActive();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #36                 // Method com/sun/glass/ui/Application$EventHandler.handleWillResignActiveAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private boolean notifyThemeChanged(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_2
       5: aload_2
       6: ifnull        15
       9: aload_2
      10: aload_1
      11: invokevirtual #37                 // Method com/sun/glass/ui/Application$EventHandler.handleThemeChanged:(Ljava/lang/String;)Z
      14: ireturn
      15: iconst_0
      16: ireturn

  private void notifyDidResignActive();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #38                 // Method com/sun/glass/ui/Application$EventHandler.handleDidResignActiveAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyDidReceiveMemoryWarning();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #39                 // Method com/sun/glass/ui/Application$EventHandler.handleDidReceiveMemoryWarning:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyWillHide();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #40                 // Method com/sun/glass/ui/Application$EventHandler.handleWillHideAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyDidHide();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #41                 // Method com/sun/glass/ui/Application$EventHandler.handleDidHideAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyWillUnhide();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #42                 // Method com/sun/glass/ui/Application$EventHandler.handleWillUnhideAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyDidUnhide();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #43                 // Method com/sun/glass/ui/Application$EventHandler.handleDidUnhideAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  private void notifyOpenFiles(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #10                 // Field initialActiveEventReceived:Z
       4: ifne          19
       7: aload_0
       8: getfield      #11                 // Field initialOpenedFiles:[Ljava/lang/String;
      11: ifnonnull     19
      14: aload_0
      15: aload_1
      16: putfield      #11                 // Field initialOpenedFiles:[Ljava/lang/String;
      19: aload_0
      20: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
      23: astore_2
      24: aload_2
      25: ifnull        41
      28: aload_1
      29: ifnull        41
      32: aload_2
      33: aload_0
      34: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      37: aload_1
      38: invokevirtual #44                 // Method com/sun/glass/ui/Application$EventHandler.handleOpenFilesAction:(Lcom/sun/glass/ui/Application;J[Ljava/lang/String;)V
      41: return

  private void notifyWillQuit();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getEventHandler:()Lcom/sun/glass/ui/Application$EventHandler;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_1
      10: aload_0
      11: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      14: invokevirtual #45                 // Method com/sun/glass/ui/Application$EventHandler.handleQuitAction:(Lcom/sun/glass/ui/Application;J)V
      17: return

  public void installDefaultMenus(com.sun.glass.ui.MenuBar);
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: return

  public com.sun.glass.ui.Application$EventHandler getEventHandler();
    Code:
       0: aload_0
       1: getfield      #46                 // Field eventHandler:Lcom/sun/glass/ui/Application$EventHandler;
       4: areturn

  public void setEventHandler(com.sun.glass.ui.Application$EventHandler);
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: getfield      #46                 // Field eventHandler:Lcom/sun/glass/ui/Application$EventHandler;
       7: ifnull        21
      10: aload_0
      11: getfield      #11                 // Field initialOpenedFiles:[Ljava/lang/String;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_2
      23: aload_0
      24: aload_1
      25: putfield      #46                 // Field eventHandler:Lcom/sun/glass/ui/Application$EventHandler;
      28: iload_2
      29: iconst_1
      30: if_icmpne     41
      33: aload_0
      34: aload_0
      35: getfield      #11                 // Field initialOpenedFiles:[Ljava/lang/String;
      38: invokespecial #47                 // Method notifyOpenFiles:([Ljava/lang/String;)V
      41: return

  public final boolean shouldTerminateWhenLastWindowClosed();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: getfield      #12                 // Field terminateWhenLastWindowClosed:Z
       7: ireturn

  public final void setTerminateWhenLastWindowClosed(boolean);
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: iload_1
       5: putfield      #12                 // Field terminateWhenLastWindowClosed:Z
       8: return

  public boolean shouldUpdateWindow();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: iconst_0
       4: ireturn

  public boolean hasWindowManager();
    Code:
       0: iconst_1
       1: ireturn

  public void notifyRenderingFinished();
    Code:
       0: return

  public void terminate();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: new           #48                 // class java/util/LinkedList
       6: dup
       7: invokestatic  #49                 // Method com/sun/glass/ui/Window.getWindows:()Ljava/util/List;
      10: invokespecial #50                 // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      13: astore_1
      14: aload_1
      15: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          48
      30: aload_2
      31: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #54                 // class com/sun/glass/ui/Window
      39: astore_3
      40: aload_3
      41: iconst_0
      42: invokevirtual #55                 // Method com/sun/glass/ui/Window.setVisible:(Z)V
      45: goto          21
      48: aload_1
      49: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      54: astore_2
      55: aload_2
      56: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          81
      64: aload_2
      65: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #54                 // class com/sun/glass/ui/Window
      73: astore_3
      74: aload_3
      75: invokevirtual #56                 // Method com/sun/glass/ui/Window.close:()V
      78: goto          55
      81: aload_0
      82: invokevirtual #57                 // Method finishTerminating:()V
      85: goto          109
      88: astore_1
      89: aload_1
      90: invokevirtual #22                 // Method java/lang/Throwable.printStackTrace:()V
      93: aload_0
      94: invokevirtual #57                 // Method finishTerminating:()V
      97: goto          109
     100: astore        4
     102: aload_0
     103: invokevirtual #57                 // Method finishTerminating:()V
     106: aload         4
     108: athrow
     109: return
    Exception table:
       from    to  target type
           3    81    88   Class java/lang/Throwable
           3    81   100   any
          88    93   100   any
         100   102   100   any

  public static com.sun.glass.ui.Application GetApplication();
    Code:
       0: getstatic     #13                 // Field application:Lcom/sun/glass/ui/Application;
       3: areturn

  protected static void setEventThread(java.lang.Thread);
    Code:
       0: aload_0
       1: putstatic     #58                 // Field eventThread:Ljava/lang/Thread;
       4: return

  protected static java.lang.Thread getEventThread();
    Code:
       0: getstatic     #58                 // Field eventThread:Ljava/lang/Thread;
       3: areturn

  public static boolean isEventThread();
    Code:
       0: invokestatic  #59                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: getstatic     #58                 // Field eventThread:Ljava/lang/Thread;
       6: if_acmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static void checkEventThread();
    Code:
       0: getstatic     #60                 // Field disableThreadChecks:Z
       3: ifne          34
       6: invokestatic  #59                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: getstatic     #58                 // Field eventThread:Ljava/lang/Thread;
      12: if_acmpeq     34
      15: new           #14                 // class java/lang/IllegalStateException
      18: dup
      19: invokestatic  #59                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: invokevirtual #61                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      25: invokedynamic #62,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      30: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return

  public static void reportException(java.lang.Throwable);
    Code:
       0: invokestatic  #59                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: invokevirtual #63                 // Method java/lang/Thread.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
       8: astore_2
       9: aload_2
      10: aload_1
      11: aload_0
      12: invokeinterface #64,  3           // InterfaceMethod java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      17: return

  protected abstract void _invokeAndWait(java.lang.Runnable);

  public static void invokeAndWait(java.lang.Runnable);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: invokestatic  #65                 // Method isEventThread:()Z
       8: ifeq          20
      11: aload_0
      12: invokeinterface #66,  1           // InterfaceMethod java/lang/Runnable.run:()V
      17: goto          27
      20: invokestatic  #67                 // Method GetApplication:()Lcom/sun/glass/ui/Application;
      23: aload_0
      24: invokevirtual #68                 // Method _invokeAndWait:(Ljava/lang/Runnable;)V
      27: return

  protected abstract void _invokeLater(java.lang.Runnable);

  public static void invokeLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: invokestatic  #67                 // Method GetApplication:()Lcom/sun/glass/ui/Application;
       8: aload_0
       9: invokevirtual #69                 // Method _invokeLater:(Ljava/lang/Runnable;)V
      12: return

  protected abstract java.lang.Object _enterNestedEventLoop();

  protected abstract void _leaveNestedEventLoop(java.lang.Object);

  static java.lang.Object enterNestedEventLoop();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: getstatic     #70                 // Field nestedEventLoopCounter:I
       6: iconst_1
       7: iadd
       8: putstatic     #70                 // Field nestedEventLoopCounter:I
      11: invokestatic  #67                 // Method GetApplication:()Lcom/sun/glass/ui/Application;
      14: invokevirtual #71                 // Method _enterNestedEventLoop:()Ljava/lang/Object;
      17: astore_0
      18: getstatic     #70                 // Field nestedEventLoopCounter:I
      21: iconst_1
      22: isub
      23: putstatic     #70                 // Field nestedEventLoopCounter:I
      26: aload_0
      27: areturn
      28: astore_1
      29: getstatic     #70                 // Field nestedEventLoopCounter:I
      32: iconst_1
      33: isub
      34: putstatic     #70                 // Field nestedEventLoopCounter:I
      37: aload_1
      38: athrow
    Exception table:
       from    to  target type
          11    18    28   any

  static void leaveNestedEventLoop(java.lang.Object);
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: getstatic     #70                 // Field nestedEventLoopCounter:I
       6: ifne          19
       9: new           #14                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #72                 // String Not in a nested event loop
      15: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: invokestatic  #67                 // Method GetApplication:()Lcom/sun/glass/ui/Application;
      22: aload_0
      23: invokevirtual #73                 // Method _leaveNestedEventLoop:(Ljava/lang/Object;)V
      26: return

  public static boolean isNestedLoopRunning();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: getstatic     #70                 // Field nestedEventLoopCounter:I
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void menuAboutAction();
    Code:
       0: getstatic     #74                 // Field java/lang/System.err:Ljava/io/PrintStream;
       3: ldc           #75                 // String about
       5: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       8: return

  public abstract com.sun.glass.ui.Window createWindow(com.sun.glass.ui.Window, com.sun.glass.ui.Screen, int);

  public final com.sun.glass.ui.Window createWindow(com.sun.glass.ui.Screen, int);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: iload_2
       4: invokevirtual #77                 // Method createWindow:(Lcom/sun/glass/ui/Window;Lcom/sun/glass/ui/Screen;I)Lcom/sun/glass/ui/Window;
       7: areturn

  public abstract com.sun.glass.ui.Window createWindow(long);

  public abstract com.sun.glass.ui.View createView();

  public abstract com.sun.glass.ui.Cursor createCursor(int);

  public abstract com.sun.glass.ui.Cursor createCursor(int, int, com.sun.glass.ui.Pixels);

  protected abstract void staticCursor_setVisible(boolean);

  protected abstract com.sun.glass.ui.Size staticCursor_getBestSize(int, int);

  public final com.sun.glass.ui.Menu createMenu(java.lang.String);
    Code:
       0: new           #78                 // class com/sun/glass/ui/Menu
       3: dup
       4: aload_1
       5: invokespecial #79                 // Method com/sun/glass/ui/Menu."<init>":(Ljava/lang/String;)V
       8: areturn

  public final com.sun.glass.ui.Menu createMenu(java.lang.String, boolean);
    Code:
       0: new           #78                 // class com/sun/glass/ui/Menu
       3: dup
       4: aload_1
       5: iload_2
       6: invokespecial #80                 // Method com/sun/glass/ui/Menu."<init>":(Ljava/lang/String;Z)V
       9: areturn

  public final com.sun.glass.ui.MenuBar createMenuBar();
    Code:
       0: new           #81                 // class com/sun/glass/ui/MenuBar
       3: dup
       4: invokespecial #82                 // Method com/sun/glass/ui/MenuBar."<init>":()V
       7: areturn

  public final com.sun.glass.ui.MenuItem createMenuItem(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #83                 // Method createMenuItem:(Ljava/lang/String;Lcom/sun/glass/ui/MenuItem$Callback;)Lcom/sun/glass/ui/MenuItem;
       6: areturn

  public final com.sun.glass.ui.MenuItem createMenuItem(java.lang.String, com.sun.glass.ui.MenuItem$Callback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_0
       5: invokevirtual #85                 // Method createMenuItem:(Ljava/lang/String;Lcom/sun/glass/ui/MenuItem$Callback;II)Lcom/sun/glass/ui/MenuItem;
       8: areturn

  public final com.sun.glass.ui.MenuItem createMenuItem(java.lang.String, com.sun.glass.ui.MenuItem$Callback, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aconst_null
       7: invokevirtual #86                 // Method createMenuItem:(Ljava/lang/String;Lcom/sun/glass/ui/MenuItem$Callback;IILcom/sun/glass/ui/Pixels;)Lcom/sun/glass/ui/MenuItem;
      10: areturn

  public final com.sun.glass.ui.MenuItem createMenuItem(java.lang.String, com.sun.glass.ui.MenuItem$Callback, int, int, com.sun.glass.ui.Pixels);
    Code:
       0: new           #87                 // class com/sun/glass/ui/MenuItem
       3: dup
       4: aload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: aload         5
      11: invokespecial #88                 // Method com/sun/glass/ui/MenuItem."<init>":(Ljava/lang/String;Lcom/sun/glass/ui/MenuItem$Callback;IILcom/sun/glass/ui/Pixels;)V
      14: areturn

  public abstract com.sun.glass.ui.Pixels createPixels(int, int, java.nio.ByteBuffer);

  public abstract com.sun.glass.ui.Pixels createPixels(int, int, java.nio.IntBuffer);

  public abstract com.sun.glass.ui.Pixels createPixels(int, int, java.nio.IntBuffer, float, float);

  protected abstract int staticPixels_getNativeFormat();

  static com.sun.glass.ui.Pixels createPixels(int, int, int[], float, float);
    Code:
       0: invokestatic  #67                 // Method GetApplication:()Lcom/sun/glass/ui/Application;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokestatic  #89                 // Method java/nio/IntBuffer.wrap:([I)Ljava/nio/IntBuffer;
       9: fload_3
      10: fload         4
      12: invokevirtual #90                 // Method createPixels:(IILjava/nio/IntBuffer;FF)Lcom/sun/glass/ui/Pixels;
      15: areturn

  static float getScaleFactor(int, int, int, int);
    Code:
       0: fconst_0
       1: fstore        4
       3: invokestatic  #91                 // Method com/sun/glass/ui/Screen.getScreens:()Ljava/util/List;
       6: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        5
      13: aload         5
      15: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          136
      23: aload         5
      25: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #92                 // class com/sun/glass/ui/Screen
      33: astore        6
      35: aload         6
      37: invokevirtual #93                 // Method com/sun/glass/ui/Screen.getX:()I
      40: istore        7
      42: aload         6
      44: invokevirtual #94                 // Method com/sun/glass/ui/Screen.getY:()I
      47: istore        8
      49: aload         6
      51: invokevirtual #95                 // Method com/sun/glass/ui/Screen.getWidth:()I
      54: istore        9
      56: aload         6
      58: invokevirtual #96                 // Method com/sun/glass/ui/Screen.getHeight:()I
      61: istore        10
      63: iload_0
      64: iload         7
      66: iload         9
      68: iadd
      69: if_icmpge     133
      72: iload_0
      73: iload_2
      74: iadd
      75: iload         7
      77: if_icmple     133
      80: iload_1
      81: iload         8
      83: iload         10
      85: iadd
      86: if_icmpge     133
      89: iload_1
      90: iload_3
      91: iadd
      92: iload         8
      94: if_icmple     133
      97: fload         4
      99: aload         6
     101: invokevirtual #97                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleX:()F
     104: fcmpg
     105: ifge          115
     108: aload         6
     110: invokevirtual #97                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleX:()F
     113: fstore        4
     115: fload         4
     117: aload         6
     119: invokevirtual #98                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleY:()F
     122: fcmpg
     123: ifge          133
     126: aload         6
     128: invokevirtual #98                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleY:()F
     131: fstore        4
     133: goto          13
     136: fload         4
     138: fconst_0
     139: fcmpl
     140: ifne          147
     143: fconst_1
     144: goto          149
     147: fload         4
     149: freturn

  public abstract com.sun.glass.ui.GlassRobot createRobot();

  protected abstract double staticScreen_getVideoRefreshPeriod();

  protected abstract com.sun.glass.ui.Screen[] staticScreen_getScreens();

  public abstract com.sun.glass.ui.Timer createTimer(java.lang.Runnable);

  protected abstract int staticTimer_getMinPeriod();

  protected abstract int staticTimer_getMaxPeriod();

  public final com.sun.glass.ui.EventLoop createEventLoop();
    Code:
       0: new           #99                 // class com/sun/glass/ui/EventLoop
       3: dup
       4: invokespecial #100                // Method com/sun/glass/ui/EventLoop."<init>":()V
       7: areturn

  public com.sun.glass.ui.Accessible createAccessible();
    Code:
       0: aconst_null
       1: areturn

  protected abstract com.sun.glass.ui.CommonDialogs$FileChooserResult staticCommonDialogs_showFileChooser(com.sun.glass.ui.Window, java.lang.String, java.lang.String, java.lang.String, int, boolean, com.sun.glass.ui.CommonDialogs$ExtensionFilter[], int);

  protected abstract java.io.File staticCommonDialogs_showFolderChooser(com.sun.glass.ui.Window, java.lang.String, java.lang.String);

  protected abstract long staticView_getMultiClickTime();

  protected abstract int staticView_getMultiClickMaxX();

  protected abstract int staticView_getMultiClickMaxY();

  public java.lang.String getHighContrastTheme();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aconst_null
       4: areturn

  protected boolean _supportsInputMethods();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean supportsInputMethods();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: invokevirtual #101                // Method _supportsInputMethods:()Z
       7: ireturn

  protected abstract boolean _supportsTransparentWindows();

  public final boolean supportsTransparentWindows();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: invokevirtual #102                // Method _supportsTransparentWindows:()Z
       7: ireturn

  public boolean hasTwoLevelFocus();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasVirtualKeyboard();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasTouch();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasMultiTouch();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasPointer();
    Code:
       0: iconst_1
       1: ireturn

  protected abstract boolean _supportsUnifiedWindows();

  public final boolean supportsUnifiedWindows();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: invokevirtual #103                // Method _supportsUnifiedWindows:()Z
       7: ireturn

  protected boolean _supportsSystemMenu();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean supportsSystemMenu();
    Code:
       0: invokestatic  #23                 // Method checkEventThread:()V
       3: aload_0
       4: invokevirtual #104                // Method _supportsSystemMenu:()Z
       7: ireturn

  protected abstract int _getKeyCodeForChar(char);

  public static int getKeyCodeForChar(char);
    Code:
       0: getstatic     #13                 // Field application:Lcom/sun/glass/ui/Application;
       3: iload_0
       4: invokevirtual #105                // Method _getKeyCodeForChar:(C)I
       7: ireturn

  private static java.lang.String lambda$getDataDirectory$2();
    Code:
       0: ldc           #106                // String user.home
       2: invokestatic  #107                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private static void lambda$run$1(java.lang.Runnable);
    Code:
       0: invokestatic  #108                // Method com/sun/glass/ui/Screen.initScreens:()V
       3: aload_0
       4: invokeinterface #66,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: return

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc           #109                // String glass.disableThreadChecks
       2: ldc           #110                // String false
       4: invokestatic  #111                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: astore_0
       8: ldc           #112                // String true
      10: aload_0
      11: invokevirtual #113                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      14: invokestatic  #114                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: areturn

  static {};
    Code:
       0: iconst_0
       1: putstatic     #1                  // Field loaded:Z
       4: invokedynamic #115,  0            // InvokeDynamic #4:run:()Ljava/security/PrivilegedAction;
       9: invokestatic  #26                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #116                // class java/lang/Boolean
      15: invokevirtual #117                // Method java/lang/Boolean.booleanValue:()Z
      18: putstatic     #60                 // Field disableThreadChecks:Z
      21: aconst_null
      22: putstatic     #5                  // Field deviceDetails:Ljava/util/Map;
      25: iconst_0
      26: putstatic     #70                 // Field nestedEventLoopCounter:I
      29: return
}
