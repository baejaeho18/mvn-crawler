Compiled from "View.java"
public abstract class com.sun.glass.ui.View {
  public static final int GESTURE_NO_VALUE;

  public static final double GESTURE_NO_DOUBLE_VALUE;

  public static final byte IME_ATTR_INPUT;

  public static final byte IME_ATTR_TARGET_CONVERTED;

  public static final byte IME_ATTR_CONVERTED;

  public static final byte IME_ATTR_TARGET_NOTCONVERTED;

  public static final byte IME_ATTR_INPUT_ERROR;

  static final boolean accessible;

  private volatile long ptr;

  private com.sun.glass.ui.Window window;

  private com.sun.glass.ui.View$EventHandler eventHandler;

  private int width;

  private int height;

  private boolean isValid;

  private boolean isVisible;

  private boolean inFullscreen;

  private static java.lang.ref.WeakReference<com.sun.glass.ui.View> lastClickedView;

  private static int lastClickedButton;

  private static long lastClickedTime;

  private static int lastClickedX;

  private static int lastClickedY;

  private static int clickCount;

  private static boolean dragProcessed;

  private com.sun.glass.ui.ClipboardAssistance dropSourceAssistant;

  com.sun.glass.ui.ClipboardAssistance dropTargetAssistant;

  public static long getMultiClickTime();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: invokestatic  #4                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       6: invokevirtual #5                  // Method com/sun/glass/ui/Application.staticView_getMultiClickTime:()J
       9: lreturn

  public static int getMultiClickMaxX();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: invokestatic  #4                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       6: invokevirtual #6                  // Method com/sun/glass/ui/Application.staticView_getMultiClickMaxX:()I
       9: ireturn

  public static int getMultiClickMaxY();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: invokestatic  #4                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
       6: invokevirtual #7                  // Method com/sun/glass/ui/Application.staticView_getMultiClickMaxY:()I
       9: ireturn

  protected abstract void _enableInputMethodEvents(long, boolean);

  protected void _finishInputMethodComposition(long);
    Code:
       0: return

  protected abstract long _create(java.util.Map);

  protected com.sun.glass.ui.View();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #9                  // Field width:I
       9: aload_0
      10: iconst_m1
      11: putfield      #10                 // Field height:I
      14: aload_0
      15: iconst_0
      16: putfield      #11                 // Field isValid:Z
      19: aload_0
      20: iconst_0
      21: putfield      #12                 // Field isVisible:Z
      24: aload_0
      25: iconst_0
      26: putfield      #13                 // Field inFullscreen:Z
      29: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
      32: aload_0
      33: aload_0
      34: invokestatic  #4                  // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
      37: pop
      38: invokestatic  #14                 // Method com/sun/glass/ui/Application.getDeviceDetails:()Ljava/util/Map;
      41: invokevirtual #15                 // Method _create:(Ljava/util/Map;)J
      44: putfield      #16                 // Field ptr:J
      47: aload_0
      48: getfield      #16                 // Field ptr:J
      51: lconst_0
      52: lcmp
      53: ifne          66
      56: new           #17                 // class java/lang/RuntimeException
      59: dup
      60: ldc           #18                 // String could not create platform view
      62: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: return

  private void checkNotClosed();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ptr:J
       4: lconst_0
       5: lcmp
       6: ifne          19
       9: new           #20                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #21                 // String The view has already been closed
      15: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return

  public boolean isClosed();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #16                 // Field ptr:J
       7: lconst_0
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  protected abstract long _getNativeView(long);

  public long getNativeView();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: invokevirtual #24                 // Method _getNativeView:(J)J
      15: lreturn

  public int getNativeRemoteLayerId(java.lang.String);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: new           #17                 // class java/lang/RuntimeException
       6: dup
       7: ldc           #25                 // String This operation is not supported on this platform
       9: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      12: athrow

  public com.sun.glass.ui.Window getWindow();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #26                 // Field window:Lcom/sun/glass/ui/Window;
       7: areturn

  protected abstract int _getX(long);

  public int getX();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: invokevirtual #27                 // Method _getX:(J)I
      15: ireturn

  protected abstract int _getY(long);

  public int getY();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: invokevirtual #28                 // Method _getY:(J)I
      15: ireturn

  public int getWidth();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #9                  // Field width:I
       7: ireturn

  public int getHeight();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #10                 // Field height:I
       7: ireturn

  protected abstract void _setParent(long, long);

  void setWindow(com.sun.glass.ui.Window);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_1
       9: putfield      #26                 // Field window:Lcom/sun/glass/ui/Window;
      12: aload_0
      13: aload_0
      14: getfield      #16                 // Field ptr:J
      17: aload_1
      18: ifnonnull     25
      21: lconst_0
      22: goto          29
      25: aload_1
      26: invokevirtual #29                 // Method com/sun/glass/ui/Window.getNativeHandle:()J
      29: invokevirtual #30                 // Method _setParent:(JJ)V
      32: aload_0
      33: aload_0
      34: getfield      #16                 // Field ptr:J
      37: lconst_0
      38: lcmp
      39: ifeq          50
      42: aload_1
      43: ifnull        50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: putfield      #11                 // Field isValid:Z
      54: return

  void setVisible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field isVisible:Z
       5: return

  protected abstract boolean _close(long);

  public void close();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #16                 // Field ptr:J
       7: lconst_0
       8: lcmp
       9: ifne          13
      12: return
      13: aload_0
      14: invokevirtual #31                 // Method isInFullscreen:()Z
      17: ifeq          29
      20: aload_0
      21: aload_0
      22: getfield      #16                 // Field ptr:J
      25: iconst_0
      26: invokevirtual #32                 // Method _exitFullscreen:(JZ)V
      29: aload_0
      30: invokevirtual #33                 // Method getWindow:()Lcom/sun/glass/ui/Window;
      33: astore_1
      34: aload_1
      35: ifnull        43
      38: aload_1
      39: aconst_null
      40: invokevirtual #34                 // Method com/sun/glass/ui/Window.setView:(Lcom/sun/glass/ui/View;)V
      43: aload_0
      44: iconst_0
      45: putfield      #11                 // Field isValid:Z
      48: aload_0
      49: aload_0
      50: getfield      #16                 // Field ptr:J
      53: invokevirtual #35                 // Method _close:(J)Z
      56: pop
      57: aload_0
      58: lconst_0
      59: putfield      #16                 // Field ptr:J
      62: return

  public com.sun.glass.ui.View$EventHandler getEventHandler();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       7: areturn

  public void setEventHandler(com.sun.glass.ui.View$EventHandler);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: aload_1
       5: putfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       8: return

  private void handleViewEvent(long, int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        17
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: lload_1
      13: iload_3
      14: invokevirtual #37                 // Method com/sun/glass/ui/View$EventHandler.handleViewEvent:(Lcom/sun/glass/ui/View;JI)V
      17: return

  private void handleKeyEvent(long, int, int, char[], int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        23
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: lload_1
      13: iload_3
      14: iload         4
      16: aload         5
      18: iload         6
      20: invokevirtual #38                 // Method com/sun/glass/ui/View$EventHandler.handleKeyEvent:(Lcom/sun/glass/ui/View;JII[CI)V
      23: return

  private void handleMouseEvent(long, int, int, int, int, int, int, int, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        33
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: lload_1
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: iload         7
      22: iload         8
      24: iload         9
      26: iload         10
      28: iload         11
      30: invokevirtual #39                 // Method com/sun/glass/ui/View$EventHandler.handleMouseEvent:(Lcom/sun/glass/ui/View;JIIIIIIIZZ)V
      33: return

  private void handleMenuEvent(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        22
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: invokevirtual #40                 // Method com/sun/glass/ui/View$EventHandler.handleMenuEvent:(Lcom/sun/glass/ui/View;IIIIZ)V
      22: return

  public void handleBeginTouchEvent(com.sun.glass.ui.View, long, int, boolean, int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        22
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: iload         4
      15: iload         5
      17: iload         6
      19: invokevirtual #41                 // Method com/sun/glass/ui/View$EventHandler.handleBeginTouchEvent:(Lcom/sun/glass/ui/View;JIZI)V
      22: return

  public void handleNextTouchEvent(com.sun.glass.ui.View, long, int, long, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        28
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: iload         4
      15: lload         5
      17: iload         7
      19: iload         8
      21: iload         9
      23: iload         10
      25: invokevirtual #42                 // Method com/sun/glass/ui/View$EventHandler.handleNextTouchEvent:(Lcom/sun/glass/ui/View;JIJIIII)V
      28: return

  public void handleEndTouchEvent(com.sun.glass.ui.View, long);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        16
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: invokevirtual #43                 // Method com/sun/glass/ui/View$EventHandler.handleEndTouchEvent:(Lcom/sun/glass/ui/View;J)V
      16: return

  public void handleScrollGestureEvent(com.sun.glass.ui.View, long, int, int, boolean, boolean, int, int, int, int, int, double, double, double, double, double, double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        46
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: iload         4
      15: iload         5
      17: iload         6
      19: iload         7
      21: iload         8
      23: iload         9
      25: iload         10
      27: iload         11
      29: iload         12
      31: dload         13
      33: dload         15
      35: dload         17
      37: dload         19
      39: dload         21
      41: dload         23
      43: invokevirtual #44                 // Method com/sun/glass/ui/View$EventHandler.handleScrollGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIIDDDDDD)V
      46: return

  public void handleZoomGestureEvent(com.sun.glass.ui.View, long, int, int, boolean, boolean, int, int, int, int, double, double, double, double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        40
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: iload         4
      15: iload         5
      17: iload         6
      19: iload         7
      21: iload         8
      23: iload         9
      25: iload         10
      27: iload         11
      29: dload         12
      31: dload         14
      33: dload         16
      35: dload         18
      37: invokevirtual #45                 // Method com/sun/glass/ui/View$EventHandler.handleZoomGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIDDDD)V
      40: return

  public void handleRotateGestureEvent(com.sun.glass.ui.View, long, int, int, boolean, boolean, int, int, int, int, double, double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        36
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: iload         4
      15: iload         5
      17: iload         6
      19: iload         7
      21: iload         8
      23: iload         9
      25: iload         10
      27: iload         11
      29: dload         12
      31: dload         14
      33: invokevirtual #46                 // Method com/sun/glass/ui/View$EventHandler.handleRotateGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIDD)V
      36: return

  public void handleSwipeGestureEvent(com.sun.glass.ui.View, long, int, int, boolean, boolean, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        36
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_1
      12: lload_2
      13: iload         4
      15: iload         5
      17: iload         6
      19: iload         7
      21: iload         8
      23: iload         9
      25: iload         10
      27: iload         11
      29: iload         12
      31: iload         13
      33: invokevirtual #47                 // Method com/sun/glass/ui/View$EventHandler.handleSwipeGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIII)V
      36: return

  private void handleInputMethodEvent(long, java.lang.String, int[], int[], byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        26
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: lload_1
      12: aload_3
      13: aload         4
      15: aload         5
      17: aload         6
      19: iload         7
      21: iload         8
      23: invokevirtual #48                 // Method com/sun/glass/ui/View$EventHandler.handleInputMethodEvent:(JLjava/lang/String;[I[I[BII)V
      26: return

  public void enableInputMethodEvents(boolean);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: iload_1
      13: invokevirtual #49                 // Method _enableInputMethodEvents:(JZ)V
      16: return

  public void finishInputMethodComposition();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: invokevirtual #50                 // Method _finishInputMethodComposition:(J)V
      15: return

  private double[] getInputMethodCandidatePos(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        16
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: iload_1
      12: invokevirtual #51                 // Method com/sun/glass/ui/View$EventHandler.getInputMethodCandidatePos:(I)[D
      15: areturn
      16: aconst_null
      17: areturn

  private void handleDragStart(int, int, int, int, int, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        24
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: aload         6
      21: invokevirtual #52                 // Method com/sun/glass/ui/View$EventHandler.handleDragStart:(Lcom/sun/glass/ui/View;IIIIILcom/sun/glass/ui/ClipboardAssistance;)V
      24: return

  private void handleDragEnd(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        16
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: iload_1
      13: invokevirtual #53                 // Method com/sun/glass/ui/View$EventHandler.handleDragEnd:(Lcom/sun/glass/ui/View;I)V
      16: return

  private int handleDragEnter(int, int, int, int, int, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        25
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: aload         6
      21: invokevirtual #54                 // Method com/sun/glass/ui/View$EventHandler.handleDragEnter:(Lcom/sun/glass/ui/View;IIIIILcom/sun/glass/ui/ClipboardAssistance;)I
      24: ireturn
      25: iload         5
      27: ireturn

  private int handleDragOver(int, int, int, int, int, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        25
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: aload         6
      21: invokevirtual #55                 // Method com/sun/glass/ui/View$EventHandler.handleDragOver:(Lcom/sun/glass/ui/View;IIIIILcom/sun/glass/ui/ClipboardAssistance;)I
      24: ireturn
      25: iload         5
      27: ireturn

  private void handleDragLeave(com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        16
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: aload_1
      13: invokevirtual #56                 // Method com/sun/glass/ui/View$EventHandler.handleDragLeave:(Lcom/sun/glass/ui/View;Lcom/sun/glass/ui/ClipboardAssistance;)V
      16: return

  private int handleDragDrop(int, int, int, int, int, com.sun.glass.ui.ClipboardAssistance);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        25
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: iload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: aload         6
      21: invokevirtual #57                 // Method com/sun/glass/ui/View$EventHandler.handleDragDrop:(Lcom/sun/glass/ui/View;IIIIILcom/sun/glass/ui/ClipboardAssistance;)I
      24: ireturn
      25: iconst_0
      26: ireturn

  protected abstract void _scheduleRepaint(long);

  public void scheduleRepaint();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: invokevirtual #59                 // Method _scheduleRepaint:(J)V
      15: return

  protected abstract void _begin(long);

  public void lock();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkNotClosed:()V
       4: aload_0
       5: aload_0
       6: getfield      #16                 // Field ptr:J
       9: invokevirtual #60                 // Method _begin:(J)V
      12: return

  protected abstract void _end(long);

  public void unlock();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkNotClosed:()V
       4: aload_0
       5: aload_0
       6: getfield      #16                 // Field ptr:J
       9: invokevirtual #61                 // Method _end:(J)V
      12: return

  protected abstract int _getNativeFrameBuffer(long);

  public int getNativeFrameBuffer();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field ptr:J
       5: invokevirtual #62                 // Method _getNativeFrameBuffer:(J)I
       8: ireturn

  protected abstract void _uploadPixels(long, com.sun.glass.ui.Pixels);

  public void uploadPixels(com.sun.glass.ui.Pixels);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: invokevirtual #63                 // Method lock:()V
      11: aload_0
      12: aload_0
      13: getfield      #16                 // Field ptr:J
      16: aload_1
      17: invokevirtual #64                 // Method _uploadPixels:(JLcom/sun/glass/ui/Pixels;)V
      20: aload_0
      21: invokevirtual #65                 // Method unlock:()V
      24: goto          34
      27: astore_2
      28: aload_0
      29: invokevirtual #65                 // Method unlock:()V
      32: aload_2
      33: athrow
      34: return
    Exception table:
       from    to  target type
          11    20    27   any

  protected abstract boolean _enterFullscreen(long, boolean, boolean, boolean);

  public boolean enterFullscreen(boolean, boolean, boolean);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: iload_1
      13: iload_2
      14: iload_3
      15: invokevirtual #66                 // Method _enterFullscreen:(JZZZ)Z
      18: ireturn

  protected abstract void _exitFullscreen(long, boolean);

  public void exitFullscreen(boolean);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #16                 // Field ptr:J
      12: iload_1
      13: invokevirtual #32                 // Method _exitFullscreen:(JZ)V
      16: return

  public boolean isInFullscreen();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #13                 // Field inFullscreen:Z
       7: ireturn

  public boolean toggleFullscreen(boolean, boolean, boolean);
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: aload_0
       8: getfield      #13                 // Field inFullscreen:Z
      11: ifne          25
      14: aload_0
      15: iload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #67                 // Method enterFullscreen:(ZZZ)Z
      21: pop
      22: goto          30
      25: aload_0
      26: iload_1
      27: invokevirtual #68                 // Method exitFullscreen:(Z)V
      30: aload_0
      31: aload_0
      32: getfield      #16                 // Field ptr:J
      35: invokevirtual #59                 // Method _scheduleRepaint:(J)V
      38: aload_0
      39: getfield      #13                 // Field inFullscreen:Z
      42: ireturn

  public void updateLocation();
    Code:
       0: aload_0
       1: sipush        423
       4: invokevirtual #70                 // Method notifyView:(I)V
       7: return

  protected void notifyView(int);
    Code:
       0: iload_1
       1: sipush        421
       4: if_icmpne     25
       7: aload_0
       8: getfield      #11                 // Field isValid:Z
      11: ifeq          196
      14: aload_0
      15: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
      18: iload_1
      19: invokespecial #72                 // Method handleViewEvent:(JI)V
      22: goto          196
      25: iconst_0
      26: istore_2
      27: iload_1
      28: lookupswitch  { // 6
                   411: 98
                   412: 88
                   422: 158
                   423: 158
                   431: 108
                   432: 133
               default: 161
          }
      88: aload_0
      89: iconst_0
      90: putfield      #11                 // Field isValid:Z
      93: iconst_1
      94: istore_2
      95: goto          174
      98: aload_0
      99: iconst_1
     100: putfield      #11                 // Field isValid:Z
     103: iconst_1
     104: istore_2
     105: goto          174
     108: aload_0
     109: iconst_1
     110: putfield      #13                 // Field inFullscreen:Z
     113: iconst_1
     114: istore_2
     115: aload_0
     116: invokevirtual #33                 // Method getWindow:()Lcom/sun/glass/ui/Window;
     119: ifnull        174
     122: aload_0
     123: invokevirtual #33                 // Method getWindow:()Lcom/sun/glass/ui/Window;
     126: iconst_1
     127: invokevirtual #73                 // Method com/sun/glass/ui/Window.notifyFullscreen:(Z)V
     130: goto          174
     133: aload_0
     134: iconst_0
     135: putfield      #13                 // Field inFullscreen:Z
     138: iconst_1
     139: istore_2
     140: aload_0
     141: invokevirtual #33                 // Method getWindow:()Lcom/sun/glass/ui/Window;
     144: ifnull        174
     147: aload_0
     148: invokevirtual #33                 // Method getWindow:()Lcom/sun/glass/ui/Window;
     151: iconst_0
     152: invokevirtual #73                 // Method com/sun/glass/ui/Window.notifyFullscreen:(Z)V
     155: goto          174
     158: goto          174
     161: getstatic     #74                 // Field java/lang/System.err:Ljava/io/PrintStream;
     164: iload_1
     165: invokedynamic #75,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     170: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     173: return
     174: aload_0
     175: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
     178: iload_1
     179: invokespecial #72                 // Method handleViewEvent:(JI)V
     182: iload_2
     183: ifeq          196
     186: aload_0
     187: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
     190: sipush        423
     193: invokespecial #72                 // Method handleViewEvent:(JI)V
     196: return

  protected void notifyResize(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field width:I
       4: iload_1
       5: if_icmpne     17
       8: aload_0
       9: getfield      #10                 // Field height:I
      12: iload_2
      13: if_icmpne     17
      16: return
      17: aload_0
      18: iload_1
      19: putfield      #9                  // Field width:I
      22: aload_0
      23: iload_2
      24: putfield      #10                 // Field height:I
      27: aload_0
      28: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
      31: sipush        422
      34: invokespecial #72                 // Method handleViewEvent:(JI)V
      37: return

  protected void notifyRepaint(int, int, int, int);
    Code:
       0: aload_0
       1: sipush        421
       4: invokevirtual #70                 // Method notifyView:(I)V
       7: return

  protected void notifyMenu(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokespecial #77                 // Method handleMenuEvent:(IIIIZ)V
      11: return

  protected void notifyMouse(int, int, int, int, int, int, int, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #26                 // Field window:Lcom/sun/glass/ui/Window;
       4: ifnull        27
       7: aload_0
       8: getfield      #26                 // Field window:Lcom/sun/glass/ui/Window;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #78                 // Method com/sun/glass/ui/Window.handleMouseEvent:(IIIIII)Z
      23: ifeq          27
      26: return
      27: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
      30: lstore        10
      32: iload_1
      33: sipush        221
      36: if_icmpne     163
      39: getstatic     #80                 // Field lastClickedView:Ljava/lang/ref/WeakReference;
      42: ifnonnull     49
      45: aconst_null
      46: goto          58
      49: getstatic     #80                 // Field lastClickedView:Ljava/lang/ref/WeakReference;
      52: invokevirtual #81                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      55: checkcast     #82                 // class com/sun/glass/ui/View
      58: astore        12
      60: aload         12
      62: aload_0
      63: if_acmpne     130
      66: getstatic     #83                 // Field lastClickedButton:I
      69: iload_2
      70: if_icmpne     130
      73: lload         10
      75: getstatic     #84                 // Field lastClickedTime:J
      78: lsub
      79: ldc2_w        #85                 // long 1000000l
      82: invokestatic  #87                 // Method getMultiClickTime:()J
      85: lmul
      86: lcmp
      87: ifgt          130
      90: iload_3
      91: getstatic     #88                 // Field lastClickedX:I
      94: isub
      95: invokestatic  #89                 // Method java/lang/Math.abs:(I)I
      98: invokestatic  #90                 // Method getMultiClickMaxX:()I
     101: if_icmpgt     130
     104: iload         4
     106: getstatic     #91                 // Field lastClickedY:I
     109: isub
     110: invokestatic  #89                 // Method java/lang/Math.abs:(I)I
     113: invokestatic  #92                 // Method getMultiClickMaxY:()I
     116: if_icmpgt     130
     119: getstatic     #93                 // Field clickCount:I
     122: iconst_1
     123: iadd
     124: putstatic     #93                 // Field clickCount:I
     127: goto          158
     130: iconst_1
     131: putstatic     #93                 // Field clickCount:I
     134: new           #94                 // class java/lang/ref/WeakReference
     137: dup
     138: aload_0
     139: invokespecial #95                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     142: putstatic     #80                 // Field lastClickedView:Ljava/lang/ref/WeakReference;
     145: iload_2
     146: putstatic     #83                 // Field lastClickedButton:I
     149: iload_3
     150: putstatic     #88                 // Field lastClickedX:I
     153: iload         4
     155: putstatic     #91                 // Field lastClickedY:I
     158: lload         10
     160: putstatic     #84                 // Field lastClickedTime:J
     163: aload_0
     164: lload         10
     166: iload_1
     167: iload_2
     168: iload_3
     169: iload         4
     171: iload         5
     173: iload         6
     175: iload         7
     177: iload         8
     179: iload         9
     181: invokespecial #96                 // Method handleMouseEvent:(JIIIIIIIZZ)V
     184: iload_1
     185: sipush        223
     188: if_icmpne     216
     191: getstatic     #97                 // Field dragProcessed:Z
     194: ifne          220
     197: aload_0
     198: iload_2
     199: iload_3
     200: iload         4
     202: iload         5
     204: iload         6
     206: invokevirtual #98                 // Method notifyDragStart:(IIIII)V
     209: iconst_1
     210: putstatic     #97                 // Field dragProcessed:Z
     213: goto          220
     216: iconst_0
     217: putstatic     #97                 // Field dragProcessed:Z
     220: return

  protected void notifyScroll(int, int, int, int, double, double, int, int, int, int, int, double, double);
    Code:
       0: aload_0
       1: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
       4: ifnull        41
       7: aload_0
       8: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      11: aload_0
      12: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
      15: iload_1
      16: iload_2
      17: iload_3
      18: iload         4
      20: dload         5
      22: dload         7
      24: iload         9
      26: iload         10
      28: iload         11
      30: iload         12
      32: iload         13
      34: dload         14
      36: dload         16
      38: invokevirtual #99                 // Method com/sun/glass/ui/View$EventHandler.handleScrollEvent:(Lcom/sun/glass/ui/View;JIIIIDDIIIIIDD)V
      41: return

  protected void notifyKey(int, int, char[], int);
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       4: iload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: invokespecial #100                // Method handleKeyEvent:(JII[CI)V
      12: return

  protected void notifyInputMethod(java.lang.String, int[], int[], byte[], int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: iload         5
      11: iload         6
      13: invokespecial #101                // Method handleInputMethodEvent:(JLjava/lang/String;[I[I[BII)V
      16: return

  protected double[] notifyInputMethodCandidatePosRequest(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #102                // Method getInputMethodCandidatePos:(I)[D
       5: astore_2
       6: aload_2
       7: ifnonnull     22
      10: iconst_2
      11: newarray       double
      13: astore_2
      14: aload_2
      15: iconst_0
      16: dconst_0
      17: dastore
      18: aload_2
      19: iconst_1
      20: dconst_0
      21: dastore
      22: aload_2
      23: areturn

  protected void notifyDragStart(int, int, int, int, int);
    Code:
       0: aload_0
       1: new           #103                // class com/sun/glass/ui/View$1
       4: dup
       5: aload_0
       6: ldc           #104                // String DND
       8: invokespecial #105                // Method com/sun/glass/ui/View$1."<init>":(Lcom/sun/glass/ui/View;Ljava/lang/String;)V
      11: putfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      14: aload_0
      15: iload_1
      16: iload_2
      17: iload_3
      18: iload         4
      20: iload         5
      22: aload_0
      23: getfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      26: invokespecial #107                // Method handleDragStart:(IIIIILcom/sun/glass/ui/ClipboardAssistance;)V
      29: aload_0
      30: getfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      33: ifnull        48
      36: aload_0
      37: getfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      40: invokevirtual #108                // Method com/sun/glass/ui/ClipboardAssistance.close:()V
      43: aload_0
      44: aconst_null
      45: putfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      48: return

  protected void notifyDragEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #109                // Method handleDragEnd:(I)V
       5: aload_0
       6: getfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
       9: ifnull        24
      12: aload_0
      13: getfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      16: invokevirtual #108                // Method com/sun/glass/ui/ClipboardAssistance.close:()V
      19: aload_0
      20: aconst_null
      21: putfield      #106                // Field dropSourceAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      24: return

  protected int notifyDragEnter(int, int, int, int, int);
    Code:
       0: aload_0
       1: new           #110                // class com/sun/glass/ui/View$2
       4: dup
       5: aload_0
       6: ldc           #104                // String DND
       8: invokespecial #111                // Method com/sun/glass/ui/View$2."<init>":(Lcom/sun/glass/ui/View;Ljava/lang/String;)V
      11: putfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      14: aload_0
      15: iload_1
      16: iload_2
      17: iload_3
      18: iload         4
      20: iload         5
      22: aload_0
      23: getfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      26: invokespecial #113                // Method handleDragEnter:(IIIIILcom/sun/glass/ui/ClipboardAssistance;)I
      29: ireturn

  protected int notifyDragOver(int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: aload_0
       9: getfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      12: invokespecial #114                // Method handleDragOver:(IIIIILcom/sun/glass/ui/ClipboardAssistance;)I
      15: ireturn

  protected void notifyDragLeave();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
       5: invokespecial #115                // Method handleDragLeave:(Lcom/sun/glass/ui/ClipboardAssistance;)V
       8: aload_0
       9: getfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      12: invokevirtual #108                // Method com/sun/glass/ui/ClipboardAssistance.close:()V
      15: return

  protected int notifyDragDrop(int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: aload_0
       9: getfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      12: invokespecial #116                // Method handleDragDrop:(IIIIILcom/sun/glass/ui/ClipboardAssistance;)I
      15: istore        6
      17: aload_0
      18: getfield      #112                // Field dropTargetAssistant:Lcom/sun/glass/ui/ClipboardAssistance;
      21: invokevirtual #108                // Method com/sun/glass/ui/ClipboardAssistance.close:()V
      24: iload         6
      26: ireturn

  public void notifyBeginTouchEvent(int, boolean, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: iload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #117                // Method handleBeginTouchEvent:(Lcom/sun/glass/ui/View;JIZI)V
      11: return

  public void notifyNextTouchEvent(int, long, int, int, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: iload_1
       6: lload_2
       7: iload         4
       9: iload         5
      11: iload         6
      13: iload         7
      15: invokevirtual #118                // Method handleNextTouchEvent:(Lcom/sun/glass/ui/View;JIJIIII)V
      18: return

  public void notifyEndTouchEvent();
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: invokevirtual #119                // Method handleEndTouchEvent:(Lcom/sun/glass/ui/View;J)V
       8: return

  public void notifyScrollGestureEvent(int, int, boolean, boolean, int, int, int, int, int, double, double, double, double, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: iload         5
      12: iload         6
      14: iload         7
      16: iload         8
      18: iload         9
      20: dload         10
      22: dload         12
      24: dload         14
      26: dload         16
      28: dload         18
      30: dload         20
      32: invokevirtual #120                // Method handleScrollGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIIDDDDDD)V
      35: return

  public void notifyZoomGestureEvent(int, int, boolean, boolean, int, int, int, int, double, double, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: iload         5
      12: iload         6
      14: iload         7
      16: iload         8
      18: dload         9
      20: dload         11
      22: dload         13
      24: dload         15
      26: invokevirtual #121                // Method handleZoomGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIDDDD)V
      29: return

  public void notifyRotateGestureEvent(int, int, boolean, boolean, int, int, int, int, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: iload         5
      12: iload         6
      14: iload         7
      16: iload         8
      18: dload         9
      20: dload         11
      22: invokevirtual #122                // Method handleRotateGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIDD)V
      25: return

  public void notifySwipeGestureEvent(int, int, boolean, boolean, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #71                 // Method java/lang/System.nanoTime:()J
       5: iload_1
       6: iload_2
       7: iload_3
       8: iload         4
      10: iload         5
      12: iload         6
      14: iload         7
      16: iload         8
      18: iload         9
      20: iload         10
      22: invokevirtual #123                // Method handleSwipeGestureEvent:(Lcom/sun/glass/ui/View;JIIZZIIIIII)V
      25: return

  long getAccessible();
    Code:
       0: invokestatic  #3                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #23                 // Method checkNotClosed:()V
       7: getstatic     #124                // Field accessible:Z
      10: ifeq          35
      13: aload_0
      14: getfield      #36                 // Field eventHandler:Lcom/sun/glass/ui/View$EventHandler;
      17: invokevirtual #125                // Method com/sun/glass/ui/View$EventHandler.getSceneAccessible:()Lcom/sun/glass/ui/Accessible;
      20: astore_1
      21: aload_1
      22: ifnull        35
      25: aload_1
      26: aload_0
      27: invokevirtual #126                // Method com/sun/glass/ui/Accessible.setView:(Lcom/sun/glass/ui/View;)V
      30: aload_1
      31: invokevirtual #127                // Method com/sun/glass/ui/Accessible.getNativeAccessible:()J
      34: lreturn
      35: lconst_0
      36: lreturn

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc           #128                // String glass.accessible.force
       2: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: aload_0
       7: ifnull        18
      10: aload_0
      11: invokestatic  #130                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      14: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: areturn
      18: invokestatic  #132                // Method com/sun/glass/ui/Platform.determinePlatform:()Ljava/lang/String;
      21: astore_1
      22: ldc           #133                // String os.version
      24: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: ldc           #134                // String (\\d+)\\.\\d+.*
      29: ldc           #135                // String $1
      31: invokevirtual #136                // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      34: astore_2
      35: ldc           #133                // String os.version
      37: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      40: ldc           #137                // String \\d+\\.(\\d+).*
      42: ldc           #135                // String $1
      44: invokevirtual #136                // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      47: astore_3
      48: aload_2
      49: invokestatic  #138                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      52: bipush        100
      54: imul
      55: aload_3
      56: invokestatic  #138                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      59: iadd
      60: istore        4
      62: aload_1
      63: ldc           #140                // String Mac
      65: invokevirtual #141                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          79
      71: iload         4
      73: sipush        1009
      76: if_icmpge     96
      79: aload_1
      80: ldc           #142                // String Win
      82: invokevirtual #141                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          100
      88: iload         4
      90: sipush        601
      93: if_icmplt     100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     104: areturn
     105: astore_1
     106: iconst_0
     107: invokestatic  #131                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     110: areturn
    Exception table:
       from    to  target type
          18   104   105   Class java/lang/Exception

  static {};
    Code:
       0: invokedynamic #144,  0            // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;
       5: invokestatic  #145                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       8: checkcast     #146                // class java/lang/Boolean
      11: invokevirtual #147                // Method java/lang/Boolean.booleanValue:()Z
      14: putstatic     #124                // Field accessible:Z
      17: aconst_null
      18: putstatic     #80                 // Field lastClickedView:Ljava/lang/ref/WeakReference;
      21: iconst_0
      22: putstatic     #97                 // Field dragProcessed:Z
      25: return
}
