Compiled from "Window.java"
public abstract class com.sun.glass.ui.Window {
  private long ptr;

  private volatile long delegatePtr;

  private static final java.util.LinkedList<com.sun.glass.ui.Window> visibleWindows;

  public static final int UNTITLED;

  public static final int TITLED;

  public static final int TRANSPARENT;

  public static final int NORMAL;

  public static final int UTILITY;

  public static final int POPUP;

  public static final int CLOSABLE;

  public static final int MINIMIZABLE;

  public static final int MAXIMIZABLE;

  public static final int RIGHT_TO_LEFT;

  public static final int UNIFIED;

  private final com.sun.glass.ui.Window owner;

  private final long parent;

  private final int styleMask;

  private final boolean isDecorated;

  private boolean shouldStartUndecoratedMove;

  protected com.sun.glass.ui.View view;

  protected com.sun.glass.ui.Screen screen;

  private com.sun.glass.ui.MenuBar menubar;

  private java.lang.String title;

  private com.sun.glass.ui.Window$UndecoratedMoveResizeHelper helper;

  private int state;

  private int level;

  protected int x;

  protected int y;

  protected int width;

  protected int height;

  private float alpha;

  protected float platformScaleX;

  protected float platformScaleY;

  private float outputScaleX;

  private float outputScaleY;

  private float renderScaleX;

  private float renderScaleY;

  private boolean appletMode;

  private com.sun.glass.ui.Timer embeddedLocationTimer;

  private int lastKnownEmbeddedX;

  private int lastKnownEmbeddedY;

  private volatile boolean isResizable;

  private volatile boolean isVisible;

  private volatile boolean isFocused;

  private volatile boolean isFocusable;

  private volatile boolean isModal;

  private volatile int disableCount;

  private int minimumWidth;

  private int minimumHeight;

  private int maximumWidth;

  private int maximumHeight;

  private com.sun.glass.ui.Window$EventHandler eventHandler;

  private static volatile com.sun.glass.ui.Window focusedWindow;

  public static synchronized java.util.List<com.sun.glass.ui.Window> getWindows();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: getstatic     #3                  // Field visibleWindows:Ljava/util/LinkedList;
       6: invokestatic  #4                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       9: areturn

  public static java.util.List<com.sun.glass.ui.Window> getWindowsClone();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: getstatic     #3                  // Field visibleWindows:Ljava/util/LinkedList;
       6: invokevirtual #5                  // Method java/util/LinkedList.clone:()Ljava/lang/Object;
       9: checkcast     #6                  // class java/util/List
      12: areturn

  protected static void add(com.sun.glass.ui.Window);
    Code:
       0: getstatic     #3                  // Field visibleWindows:Ljava/util/LinkedList;
       3: aload_0
       4: invokevirtual #7                  // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
       7: pop
       8: return

  protected static void addFirst(com.sun.glass.ui.Window);
    Code:
       0: getstatic     #3                  // Field visibleWindows:Ljava/util/LinkedList;
       3: aload_0
       4: invokevirtual #8                  // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
       7: return

  protected static void remove(com.sun.glass.ui.Window);
    Code:
       0: getstatic     #3                  // Field visibleWindows:Ljava/util/LinkedList;
       3: aload_0
       4: invokevirtual #9                  // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
       7: pop
       8: return

  protected abstract long _createWindow(long, long, int);

  protected com.sun.glass.ui.Window(com.sun.glass.ui.Window, com.sun.glass.ui.Screen, int);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #11                 // Field delegatePtr:J
       9: aload_0
      10: iconst_0
      11: putfield      #12                 // Field shouldStartUndecoratedMove:Z
      14: aload_0
      15: aconst_null
      16: putfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      19: aload_0
      20: aconst_null
      21: putfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      24: aload_0
      25: aconst_null
      26: putfield      #15                 // Field menubar:Lcom/sun/glass/ui/MenuBar;
      29: aload_0
      30: ldc           #16                 // String
      32: putfield      #17                 // Field title:Ljava/lang/String;
      35: aload_0
      36: aconst_null
      37: putfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      40: aload_0
      41: iconst_1
      42: putfield      #20                 // Field state:I
      45: aload_0
      46: iconst_1
      47: putfield      #21                 // Field level:I
      50: aload_0
      51: iconst_0
      52: putfield      #22                 // Field x:I
      55: aload_0
      56: iconst_0
      57: putfield      #23                 // Field y:I
      60: aload_0
      61: iconst_0
      62: putfield      #24                 // Field width:I
      65: aload_0
      66: iconst_0
      67: putfield      #25                 // Field height:I
      70: aload_0
      71: fconst_1
      72: putfield      #26                 // Field alpha:F
      75: aload_0
      76: fconst_1
      77: putfield      #27                 // Field platformScaleX:F
      80: aload_0
      81: fconst_1
      82: putfield      #28                 // Field platformScaleY:F
      85: aload_0
      86: fconst_1
      87: putfield      #29                 // Field outputScaleX:F
      90: aload_0
      91: fconst_1
      92: putfield      #30                 // Field outputScaleY:F
      95: aload_0
      96: fconst_1
      97: putfield      #31                 // Field renderScaleX:F
     100: aload_0
     101: fconst_1
     102: putfield      #32                 // Field renderScaleY:F
     105: aload_0
     106: iconst_0
     107: putfield      #33                 // Field appletMode:Z
     110: aload_0
     111: aconst_null
     112: putfield      #34                 // Field embeddedLocationTimer:Lcom/sun/glass/ui/Timer;
     115: aload_0
     116: iconst_0
     117: putfield      #35                 // Field lastKnownEmbeddedX:I
     120: aload_0
     121: iconst_0
     122: putfield      #36                 // Field lastKnownEmbeddedY:I
     125: aload_0
     126: iconst_0
     127: putfield      #37                 // Field isResizable:Z
     130: aload_0
     131: iconst_0
     132: putfield      #38                 // Field isVisible:Z
     135: aload_0
     136: iconst_0
     137: putfield      #39                 // Field isFocused:Z
     140: aload_0
     141: iconst_1
     142: putfield      #40                 // Field isFocusable:Z
     145: aload_0
     146: iconst_0
     147: putfield      #41                 // Field isModal:Z
     150: aload_0
     151: iconst_0
     152: putfield      #42                 // Field disableCount:I
     155: aload_0
     156: iconst_0
     157: putfield      #43                 // Field minimumWidth:I
     160: aload_0
     161: iconst_0
     162: putfield      #44                 // Field minimumHeight:I
     165: aload_0
     166: ldc           #46                 // int 2147483647
     168: putfield      #47                 // Field maximumWidth:I
     171: aload_0
     172: ldc           #46                 // int 2147483647
     174: putfield      #48                 // Field maximumHeight:I
     177: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
     180: iload_3
     181: iconst_3
     182: iand
     183: tableswitch   { // 0 to 2
                     0: 208
                     1: 208
                     2: 208
               default: 211
          }
     208: goto          221
     211: new           #50                 // class java/lang/RuntimeException
     214: dup
     215: ldc           #51                 // String The visual kind should be UNTITLED, TITLED, or TRANSPARENT, but not a combination of these
     217: invokespecial #52                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     220: athrow
     221: iload_3
     222: bipush        12
     224: iand
     225: lookupswitch  { // 3
                     0: 260
                     4: 260
                     8: 260
               default: 263
          }
     260: goto          273
     263: new           #50                 // class java/lang/RuntimeException
     266: dup
     267: ldc           #53                 // String The functional type should be NORMAL, POPUP, or UTILITY, but not a combination of these
     269: invokespecial #52                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     272: athrow
     273: iload_3
     274: sipush        256
     277: iand
     278: ifeq          296
     281: invokestatic  #54                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     284: invokevirtual #55                 // Method com/sun/glass/ui/Application.supportsUnifiedWindows:()Z
     287: ifne          296
     290: iload_3
     291: sipush        -257
     294: iand
     295: istore_3
     296: iload_3
     297: iconst_2
     298: iand
     299: ifeq          316
     302: invokestatic  #54                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     305: invokevirtual #56                 // Method com/sun/glass/ui/Application.supportsTransparentWindows:()Z
     308: ifne          316
     311: iload_3
     312: bipush        -3
     314: iand
     315: istore_3
     316: aload_0
     317: aload_1
     318: putfield      #57                 // Field owner:Lcom/sun/glass/ui/Window;
     321: aload_0
     322: lconst_0
     323: putfield      #58                 // Field parent:J
     326: aload_0
     327: iload_3
     328: putfield      #59                 // Field styleMask:I
     331: aload_0
     332: aload_0
     333: getfield      #59                 // Field styleMask:I
     336: iconst_1
     337: iand
     338: ifeq          345
     341: iconst_1
     342: goto          346
     345: iconst_0
     346: putfield      #60                 // Field isDecorated:Z
     349: aload_0
     350: aload_2
     351: ifnull        358
     354: aload_2
     355: goto          361
     358: invokestatic  #61                 // Method com/sun/glass/ui/Screen.getMainScreen:()Lcom/sun/glass/ui/Screen;
     361: putfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     364: getstatic     #62                 // Field com/sun/prism/impl/PrismSettings.allowHiDPIScaling:Z
     367: ifeq          414
     370: aload_0
     371: aload_0
     372: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     375: invokevirtual #63                 // Method com/sun/glass/ui/Screen.getPlatformScaleX:()F
     378: putfield      #27                 // Field platformScaleX:F
     381: aload_0
     382: aload_0
     383: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     386: invokevirtual #64                 // Method com/sun/glass/ui/Screen.getPlatformScaleY:()F
     389: putfield      #28                 // Field platformScaleY:F
     392: aload_0
     393: aload_0
     394: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     397: invokevirtual #65                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleX:()F
     400: putfield      #29                 // Field outputScaleX:F
     403: aload_0
     404: aload_0
     405: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     408: invokevirtual #66                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleY:()F
     411: putfield      #30                 // Field outputScaleY:F
     414: aload_0
     415: aload_0
     416: aload_1
     417: ifnull        427
     420: aload_1
     421: invokevirtual #67                 // Method getNativeHandle:()J
     424: goto          428
     427: lconst_0
     428: aload_0
     429: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     432: invokevirtual #68                 // Method com/sun/glass/ui/Screen.getNativeScreen:()J
     435: aload_0
     436: getfield      #59                 // Field styleMask:I
     439: invokevirtual #69                 // Method _createWindow:(JJI)J
     442: putfield      #70                 // Field ptr:J
     445: aload_0
     446: getfield      #70                 // Field ptr:J
     449: lconst_0
     450: lcmp
     451: ifne          464
     454: new           #50                 // class java/lang/RuntimeException
     457: dup
     458: ldc           #71                 // String could not create platform window
     460: invokespecial #52                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     463: athrow
     464: return

  protected abstract long _createChildWindow(long);

  protected com.sun.glass.ui.Window(long);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #11                 // Field delegatePtr:J
       9: aload_0
      10: iconst_0
      11: putfield      #12                 // Field shouldStartUndecoratedMove:Z
      14: aload_0
      15: aconst_null
      16: putfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      19: aload_0
      20: aconst_null
      21: putfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      24: aload_0
      25: aconst_null
      26: putfield      #15                 // Field menubar:Lcom/sun/glass/ui/MenuBar;
      29: aload_0
      30: ldc           #16                 // String
      32: putfield      #17                 // Field title:Ljava/lang/String;
      35: aload_0
      36: aconst_null
      37: putfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      40: aload_0
      41: iconst_1
      42: putfield      #20                 // Field state:I
      45: aload_0
      46: iconst_1
      47: putfield      #21                 // Field level:I
      50: aload_0
      51: iconst_0
      52: putfield      #22                 // Field x:I
      55: aload_0
      56: iconst_0
      57: putfield      #23                 // Field y:I
      60: aload_0
      61: iconst_0
      62: putfield      #24                 // Field width:I
      65: aload_0
      66: iconst_0
      67: putfield      #25                 // Field height:I
      70: aload_0
      71: fconst_1
      72: putfield      #26                 // Field alpha:F
      75: aload_0
      76: fconst_1
      77: putfield      #27                 // Field platformScaleX:F
      80: aload_0
      81: fconst_1
      82: putfield      #28                 // Field platformScaleY:F
      85: aload_0
      86: fconst_1
      87: putfield      #29                 // Field outputScaleX:F
      90: aload_0
      91: fconst_1
      92: putfield      #30                 // Field outputScaleY:F
      95: aload_0
      96: fconst_1
      97: putfield      #31                 // Field renderScaleX:F
     100: aload_0
     101: fconst_1
     102: putfield      #32                 // Field renderScaleY:F
     105: aload_0
     106: iconst_0
     107: putfield      #33                 // Field appletMode:Z
     110: aload_0
     111: aconst_null
     112: putfield      #34                 // Field embeddedLocationTimer:Lcom/sun/glass/ui/Timer;
     115: aload_0
     116: iconst_0
     117: putfield      #35                 // Field lastKnownEmbeddedX:I
     120: aload_0
     121: iconst_0
     122: putfield      #36                 // Field lastKnownEmbeddedY:I
     125: aload_0
     126: iconst_0
     127: putfield      #37                 // Field isResizable:Z
     130: aload_0
     131: iconst_0
     132: putfield      #38                 // Field isVisible:Z
     135: aload_0
     136: iconst_0
     137: putfield      #39                 // Field isFocused:Z
     140: aload_0
     141: iconst_1
     142: putfield      #40                 // Field isFocusable:Z
     145: aload_0
     146: iconst_0
     147: putfield      #41                 // Field isModal:Z
     150: aload_0
     151: iconst_0
     152: putfield      #42                 // Field disableCount:I
     155: aload_0
     156: iconst_0
     157: putfield      #43                 // Field minimumWidth:I
     160: aload_0
     161: iconst_0
     162: putfield      #44                 // Field minimumHeight:I
     165: aload_0
     166: ldc           #46                 // int 2147483647
     168: putfield      #47                 // Field maximumWidth:I
     171: aload_0
     172: ldc           #46                 // int 2147483647
     174: putfield      #48                 // Field maximumHeight:I
     177: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
     180: aload_0
     181: aconst_null
     182: putfield      #57                 // Field owner:Lcom/sun/glass/ui/Window;
     185: aload_0
     186: lload_1
     187: putfield      #58                 // Field parent:J
     190: aload_0
     191: iconst_0
     192: putfield      #59                 // Field styleMask:I
     195: aload_0
     196: iconst_0
     197: putfield      #60                 // Field isDecorated:Z
     200: aload_0
     201: aconst_null
     202: putfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     205: aload_0
     206: aload_0
     207: lload_1
     208: invokevirtual #72                 // Method _createChildWindow:(J)J
     211: putfield      #70                 // Field ptr:J
     214: aload_0
     215: getfield      #70                 // Field ptr:J
     218: lconst_0
     219: lcmp
     220: ifne          233
     223: new           #50                 // class java/lang/RuntimeException
     226: dup
     227: ldc           #71                 // String could not create platform window
     229: invokespecial #52                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     232: athrow
     233: aload_0
     234: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     237: ifnonnull     297
     240: aload_0
     241: invokestatic  #61                 // Method com/sun/glass/ui/Screen.getMainScreen:()Lcom/sun/glass/ui/Screen;
     244: putfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     247: getstatic     #62                 // Field com/sun/prism/impl/PrismSettings.allowHiDPIScaling:Z
     250: ifeq          297
     253: aload_0
     254: aload_0
     255: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     258: invokevirtual #63                 // Method com/sun/glass/ui/Screen.getPlatformScaleX:()F
     261: putfield      #27                 // Field platformScaleX:F
     264: aload_0
     265: aload_0
     266: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     269: invokevirtual #64                 // Method com/sun/glass/ui/Screen.getPlatformScaleY:()F
     272: putfield      #28                 // Field platformScaleY:F
     275: aload_0
     276: aload_0
     277: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     280: invokevirtual #65                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleX:()F
     283: putfield      #29                 // Field outputScaleX:F
     286: aload_0
     287: aload_0
     288: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
     291: invokevirtual #66                 // Method com/sun/glass/ui/Screen.getRecommendedOutputScaleY:()F
     294: putfield      #30                 // Field outputScaleY:F
     297: return

  public boolean isClosed();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #70                 // Field ptr:J
       7: lconst_0
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void checkNotClosed();
    Code:
       0: aload_0
       1: getfield      #70                 // Field ptr:J
       4: lconst_0
       5: lcmp
       6: ifne          19
       9: new           #73                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #74                 // String The window has already been closed
      15: invokespecial #75                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return

  protected abstract boolean _close(long);

  public void close();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #13                 // Field view:Lcom/sun/glass/ui/View;
       7: ifnull        49
      10: aload_0
      11: getfield      #70                 // Field ptr:J
      14: lconst_0
      15: lcmp
      16: ifeq          29
      19: aload_0
      20: aload_0
      21: getfield      #70                 // Field ptr:J
      24: aconst_null
      25: invokevirtual #76                 // Method _setView:(JLcom/sun/glass/ui/View;)Z
      28: pop
      29: aload_0
      30: getfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      33: aconst_null
      34: invokevirtual #77                 // Method com/sun/glass/ui/View.setWindow:(Lcom/sun/glass/ui/Window;)V
      37: aload_0
      38: getfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      41: invokevirtual #78                 // Method com/sun/glass/ui/View.close:()V
      44: aload_0
      45: aconst_null
      46: putfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      49: aload_0
      50: getfield      #70                 // Field ptr:J
      53: lconst_0
      54: lcmp
      55: ifeq          67
      58: aload_0
      59: aload_0
      60: getfield      #70                 // Field ptr:J
      63: invokevirtual #79                 // Method _close:(J)Z
      66: pop
      67: return

  private boolean isChild();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #58                 // Field parent:J
       7: lconst_0
       8: lcmp
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public long getNativeWindow();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: getfield      #11                 // Field delegatePtr:J
      11: lconst_0
      12: lcmp
      13: ifeq          23
      16: aload_0
      17: getfield      #11                 // Field delegatePtr:J
      20: goto          27
      23: aload_0
      24: getfield      #70                 // Field ptr:J
      27: lreturn

  public long getNativeHandle();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #11                 // Field delegatePtr:J
       7: lconst_0
       8: lcmp
       9: ifeq          19
      12: aload_0
      13: getfield      #11                 // Field delegatePtr:J
      16: goto          23
      19: aload_0
      20: getfield      #70                 // Field ptr:J
      23: lreturn

  public long getRawHandle();
    Code:
       0: aload_0
       1: getfield      #70                 // Field ptr:J
       4: lreturn

  public com.sun.glass.ui.Window getOwner();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #57                 // Field owner:Lcom/sun/glass/ui/Window;
       7: areturn

  public com.sun.glass.ui.View getView();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #13                 // Field view:Lcom/sun/glass/ui/View;
       7: areturn

  protected abstract boolean _setView(long, com.sun.glass.ui.View);

  public void setView(com.sun.glass.ui.View);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
      11: astore_2
      12: aload_2
      13: aload_1
      14: if_acmpne     18
      17: return
      18: aload_2
      19: ifnull        27
      22: aload_2
      23: aconst_null
      24: invokevirtual #77                 // Method com/sun/glass/ui/View.setWindow:(Lcom/sun/glass/ui/Window;)V
      27: aload_1
      28: ifnull        45
      31: aload_1
      32: invokevirtual #82                 // Method com/sun/glass/ui/View.getWindow:()Lcom/sun/glass/ui/Window;
      35: astore_3
      36: aload_3
      37: ifnull        45
      40: aload_3
      41: aconst_null
      42: invokevirtual #83                 // Method setView:(Lcom/sun/glass/ui/View;)V
      45: aload_1
      46: ifnull        96
      49: aload_0
      50: aload_0
      51: getfield      #70                 // Field ptr:J
      54: aload_1
      55: invokevirtual #76                 // Method _setView:(JLcom/sun/glass/ui/View;)Z
      58: ifeq          96
      61: aload_0
      62: aload_1
      63: putfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      66: aload_0
      67: getfield      #13                 // Field view:Lcom/sun/glass/ui/View;
      70: aload_0
      71: invokevirtual #77                 // Method com/sun/glass/ui/View.setWindow:(Lcom/sun/glass/ui/Window;)V
      74: aload_0
      75: getfield      #60                 // Field isDecorated:Z
      78: ifne          111
      81: aload_0
      82: new           #84                 // class com/sun/glass/ui/Window$UndecoratedMoveResizeHelper
      85: dup
      86: aload_0
      87: invokespecial #85                 // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper."<init>":(Lcom/sun/glass/ui/Window;)V
      90: putfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      93: goto          111
      96: aload_0
      97: aload_0
      98: getfield      #70                 // Field ptr:J
     101: aconst_null
     102: invokevirtual #76                 // Method _setView:(JLcom/sun/glass/ui/View;)Z
     105: pop
     106: aload_0
     107: aconst_null
     108: putfield      #13                 // Field view:Lcom/sun/glass/ui/View;
     111: return

  public com.sun.glass.ui.Screen getScreen();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
       7: areturn

  protected void setScreen(com.sun.glass.ui.Screen);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
       7: astore_2
       8: aload_0
       9: aload_1
      10: putfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      13: aload_0
      14: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
      17: ifnull        62
      20: aload_2
      21: ifnonnull     31
      24: aload_0
      25: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      28: ifnonnull     46
      31: aload_2
      32: ifnull        62
      35: aload_2
      36: aload_0
      37: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      40: invokevirtual #87                 // Method com/sun/glass/ui/Screen.equals:(Ljava/lang/Object;)Z
      43: ifne          62
      46: aload_0
      47: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
      50: aload_0
      51: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      54: aload_2
      55: aload_0
      56: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      59: invokevirtual #89                 // Method com/sun/glass/ui/Window$EventHandler.handleScreenChangedEvent:(Lcom/sun/glass/ui/Window;JLcom/sun/glass/ui/Screen;Lcom/sun/glass/ui/Screen;)V
      62: return

  public int getStyleMask();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #59                 // Field styleMask:I
       7: ireturn

  public com.sun.glass.ui.MenuBar getMenuBar();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #15                 // Field menubar:Lcom/sun/glass/ui/MenuBar;
       7: areturn

  protected abstract boolean _setMenubar(long, long);

  public void setMenuBar(com.sun.glass.ui.MenuBar);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: aload_1
      13: invokevirtual #90                 // Method com/sun/glass/ui/MenuBar.getNativeMenu:()J
      16: invokevirtual #91                 // Method _setMenubar:(JJ)Z
      19: ifeq          27
      22: aload_0
      23: aload_1
      24: putfield      #15                 // Field menubar:Lcom/sun/glass/ui/MenuBar;
      27: return

  public boolean isDecorated();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #60                 // Field isDecorated:Z
       7: ireturn

  public boolean isMinimized();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #20                 // Field state:I
       7: iconst_2
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected abstract boolean _minimize(long, boolean);

  public boolean minimize(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: iload_1
      13: invokevirtual #92                 // Method _minimize:(JZ)Z
      16: pop
      17: aload_0
      18: invokevirtual #93                 // Method isMinimized:()Z
      21: ireturn

  public boolean isMaximized();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #20                 // Field state:I
       7: iconst_3
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected abstract boolean _maximize(long, boolean, boolean);

  public boolean maximize(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: iload_1
      13: aload_0
      14: invokevirtual #94                 // Method isMaximized:()Z
      17: invokevirtual #95                 // Method _maximize:(JZZ)Z
      20: pop
      21: aload_0
      22: invokevirtual #94                 // Method isMaximized:()Z
      25: ireturn

  protected void notifyScaleChanged(float, float, float, float);
    Code:
       0: getstatic     #62                 // Field com/sun/prism/impl/PrismSettings.allowHiDPIScaling:Z
       3: ifne          7
       6: return
       7: aload_0
       8: fload_1
       9: putfield      #27                 // Field platformScaleX:F
      12: aload_0
      13: fload_2
      14: putfield      #28                 // Field platformScaleY:F
      17: aload_0
      18: fload_3
      19: putfield      #29                 // Field outputScaleX:F
      22: aload_0
      23: fload         4
      25: putfield      #30                 // Field outputScaleY:F
      28: aload_0
      29: invokevirtual #96                 // Method notifyRescale:()V
      32: return

  public final float getPlatformScaleX();
    Code:
       0: aload_0
       1: getfield      #27                 // Field platformScaleX:F
       4: freturn

  public final float getPlatformScaleY();
    Code:
       0: aload_0
       1: getfield      #28                 // Field platformScaleY:F
       4: freturn

  public void setRenderScaleX(float);
    Code:
       0: getstatic     #62                 // Field com/sun/prism/impl/PrismSettings.allowHiDPIScaling:Z
       3: ifne          7
       6: return
       7: aload_0
       8: fload_1
       9: putfield      #31                 // Field renderScaleX:F
      12: return

  public void setRenderScaleY(float);
    Code:
       0: getstatic     #62                 // Field com/sun/prism/impl/PrismSettings.allowHiDPIScaling:Z
       3: ifne          7
       6: return
       7: aload_0
       8: fload_1
       9: putfield      #32                 // Field renderScaleY:F
      12: return

  public final float getRenderScaleX();
    Code:
       0: aload_0
       1: getfield      #31                 // Field renderScaleX:F
       4: freturn

  public final float getRenderScaleY();
    Code:
       0: aload_0
       1: getfield      #32                 // Field renderScaleY:F
       4: freturn

  public float getOutputScaleX();
    Code:
       0: aload_0
       1: getfield      #29                 // Field outputScaleX:F
       4: freturn

  public float getOutputScaleY();
    Code:
       0: aload_0
       1: getfield      #30                 // Field outputScaleY:F
       4: freturn

  protected abstract int _getEmbeddedX(long);

  protected abstract int _getEmbeddedY(long);

  private void checkScreenLocation();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #70                 // Field ptr:J
       6: invokevirtual #97                 // Method _getEmbeddedX:(J)I
       9: putfield      #22                 // Field x:I
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #70                 // Field ptr:J
      18: invokevirtual #98                 // Method _getEmbeddedY:(J)I
      21: putfield      #23                 // Field y:I
      24: aload_0
      25: getfield      #22                 // Field x:I
      28: aload_0
      29: getfield      #35                 // Field lastKnownEmbeddedX:I
      32: if_icmpne     46
      35: aload_0
      36: getfield      #23                 // Field y:I
      39: aload_0
      40: getfield      #36                 // Field lastKnownEmbeddedY:I
      43: if_icmpeq     72
      46: aload_0
      47: aload_0
      48: getfield      #22                 // Field x:I
      51: putfield      #35                 // Field lastKnownEmbeddedX:I
      54: aload_0
      55: aload_0
      56: getfield      #23                 // Field y:I
      59: putfield      #36                 // Field lastKnownEmbeddedY:I
      62: aload_0
      63: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      66: sipush        512
      69: invokevirtual #100                // Method handleWindowEvent:(JI)V
      72: return

  public int getX();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #22                 // Field x:I
       7: ireturn

  public int getY();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #23                 // Field y:I
       7: ireturn

  public int getWidth();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #24                 // Field width:I
       7: ireturn

  public int getHeight();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #25                 // Field height:I
       7: ireturn

  protected abstract void _setBounds(long, int, int, boolean, boolean, int, int, int, int, float, float);

  public void setBounds(float, float, boolean, boolean, float, float, float, float, float, float);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: getfield      #27                 // Field platformScaleX:F
      11: fstore        11
      13: aload_0
      14: getfield      #28                 // Field platformScaleY:F
      17: fstore        12
      19: aload_0
      20: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      23: invokevirtual #101                // Method com/sun/glass/ui/Screen.getPlatformX:()I
      26: fload_1
      27: aload_0
      28: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      31: invokevirtual #102                // Method com/sun/glass/ui/Screen.getX:()I
      34: i2f
      35: fsub
      36: fload         11
      38: fmul
      39: invokestatic  #103                // Method java/lang/Math.round:(F)I
      42: iadd
      43: istore        13
      45: aload_0
      46: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      49: invokevirtual #104                // Method com/sun/glass/ui/Screen.getPlatformY:()I
      52: fload_2
      53: aload_0
      54: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      57: invokevirtual #105                // Method com/sun/glass/ui/Screen.getY:()I
      60: i2f
      61: fsub
      62: fload         12
      64: fmul
      65: invokestatic  #103                // Method java/lang/Math.round:(F)I
      68: iadd
      69: istore        14
      71: fload         5
      73: fconst_0
      74: fcmpl
      75: ifle          90
      78: fload         5
      80: fload         11
      82: fmul
      83: f2d
      84: invokestatic  #106                // Method java/lang/Math.ceil:(D)D
      87: goto          93
      90: fload         5
      92: f2d
      93: d2i
      94: istore        15
      96: fload         6
      98: fconst_0
      99: fcmpl
     100: ifle          115
     103: fload         6
     105: fload         12
     107: fmul
     108: f2d
     109: invokestatic  #106                // Method java/lang/Math.ceil:(D)D
     112: goto          118
     115: fload         6
     117: f2d
     118: d2i
     119: istore        16
     121: fload         7
     123: fconst_0
     124: fcmpl
     125: ifle          140
     128: fload         7
     130: fload         11
     132: fmul
     133: f2d
     134: invokestatic  #106                // Method java/lang/Math.ceil:(D)D
     137: goto          143
     140: fload         7
     142: f2d
     143: d2i
     144: istore        17
     146: fload         8
     148: fconst_0
     149: fcmpl
     150: ifle          165
     153: fload         8
     155: fload         12
     157: fmul
     158: f2d
     159: invokestatic  #106                // Method java/lang/Math.ceil:(D)D
     162: goto          168
     165: fload         8
     167: f2d
     168: d2i
     169: istore        18
     171: aload_0
     172: aload_0
     173: getfield      #70                 // Field ptr:J
     176: iload         13
     178: iload         14
     180: iload_3
     181: iload         4
     183: iload         15
     185: iload         16
     187: iload         17
     189: iload         18
     191: fload         9
     193: fload         10
     195: invokevirtual #107                // Method _setBounds:(JIIZZIIIIFF)V
     198: return

  public void setPosition(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: iload_1
      13: iload_2
      14: iconst_1
      15: iconst_1
      16: iconst_0
      17: iconst_0
      18: iconst_0
      19: iconst_0
      20: fconst_0
      21: fconst_0
      22: invokevirtual #107                // Method _setBounds:(JIIZZIIIIFF)V
      25: return

  public void setSize(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: iconst_0
      13: iconst_0
      14: iconst_0
      15: iconst_0
      16: iload_1
      17: iload_2
      18: iconst_0
      19: iconst_0
      20: fconst_0
      21: fconst_0
      22: invokevirtual #107                // Method _setBounds:(JIIZZIIIIFF)V
      25: return

  public void setContentSize(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: iconst_0
      13: iconst_0
      14: iconst_0
      15: iconst_0
      16: iconst_0
      17: iconst_0
      18: iload_1
      19: iload_2
      20: fconst_0
      21: fconst_0
      22: invokevirtual #107                // Method _setBounds:(JIIZZIIIIFF)V
      25: return

  public boolean isVisible();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #38                 // Field isVisible:Z
       7: ireturn

  private void synthesizeViewMoveEvent();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: sipush        423
      13: invokevirtual #109                // Method com/sun/glass/ui/View.notifyView:(I)V
      16: return

  protected abstract boolean _setVisible(long, boolean);

  public void setVisible(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #38                 // Field isVisible:Z
       7: iload_1
       8: if_icmpeq     169
      11: iload_1
      12: ifne          83
      15: aload_0
      16: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
      19: ifnull        30
      22: aload_0
      23: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
      26: iload_1
      27: invokevirtual #110                // Method com/sun/glass/ui/View.setVisible:(Z)V
      30: aload_0
      31: getfield      #70                 // Field ptr:J
      34: lconst_0
      35: lcmp
      36: ifeq          55
      39: aload_0
      40: aload_0
      41: aload_0
      42: getfield      #70                 // Field ptr:J
      45: iload_1
      46: invokevirtual #111                // Method _setVisible:(JZ)Z
      49: putfield      #38                 // Field isVisible:Z
      52: goto          60
      55: aload_0
      56: iload_1
      57: putfield      #38                 // Field isVisible:Z
      60: aload_0
      61: invokestatic  #112                // Method remove:(Lcom/sun/glass/ui/Window;)V
      64: aload_0
      65: getfield      #58                 // Field parent:J
      68: lconst_0
      69: lcmp
      70: ifeq          169
      73: aload_0
      74: getfield      #34                 // Field embeddedLocationTimer:Lcom/sun/glass/ui/Timer;
      77: invokevirtual #113                // Method com/sun/glass/ui/Timer.stop:()V
      80: goto          169
      83: aload_0
      84: invokespecial #80                 // Method checkNotClosed:()V
      87: aload_0
      88: aload_0
      89: aload_0
      90: getfield      #70                 // Field ptr:J
      93: iload_1
      94: invokevirtual #111                // Method _setVisible:(JZ)Z
      97: putfield      #38                 // Field isVisible:Z
     100: aload_0
     101: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
     104: ifnull        118
     107: aload_0
     108: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
     111: aload_0
     112: getfield      #38                 // Field isVisible:Z
     115: invokevirtual #110                // Method com/sun/glass/ui/View.setVisible:(Z)V
     118: aload_0
     119: invokestatic  #114                // Method add:(Lcom/sun/glass/ui/Window;)V
     122: aload_0
     123: getfield      #58                 // Field parent:J
     126: lconst_0
     127: lcmp
     128: ifeq          165
     131: aload_0
     132: invokedynamic #115,  0            // InvokeDynamic #0:run:(Lcom/sun/glass/ui/Window;)Ljava/lang/Runnable;
     137: astore_2
     138: aload_2
     139: invokedynamic #116,  0            // InvokeDynamic #1:run:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
     144: astore_3
     145: aload_0
     146: invokestatic  #54                 // Method com/sun/glass/ui/Application.GetApplication:()Lcom/sun/glass/ui/Application;
     149: aload_3
     150: invokevirtual #117                // Method com/sun/glass/ui/Application.createTimer:(Ljava/lang/Runnable;)Lcom/sun/glass/ui/Timer;
     153: putfield      #34                 // Field embeddedLocationTimer:Lcom/sun/glass/ui/Timer;
     156: aload_0
     157: getfield      #34                 // Field embeddedLocationTimer:Lcom/sun/glass/ui/Timer;
     160: bipush        16
     162: invokevirtual #118                // Method com/sun/glass/ui/Timer.start:(I)V
     165: aload_0
     166: invokespecial #119                // Method synthesizeViewMoveEvent:()V
     169: return

  protected abstract boolean _setResizable(long, boolean);

  public boolean setResizable(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: getfield      #37                 // Field isResizable:Z
      11: iload_1
      12: if_icmpeq     36
      15: aload_0
      16: aload_0
      17: getfield      #70                 // Field ptr:J
      20: iload_1
      21: invokevirtual #120                // Method _setResizable:(JZ)Z
      24: ifeq          36
      27: aload_0
      28: iload_1
      29: putfield      #37                 // Field isResizable:Z
      32: aload_0
      33: invokespecial #119                // Method synthesizeViewMoveEvent:()V
      36: aload_0
      37: getfield      #37                 // Field isResizable:Z
      40: ireturn

  public boolean isResizable();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #37                 // Field isResizable:Z
       7: ireturn

  public boolean isUnifiedWindow();
    Code:
       0: aload_0
       1: getfield      #59                 // Field styleMask:I
       4: sipush        256
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isTransparentWindow();
    Code:
       0: aload_0
       1: getfield      #59                 // Field styleMask:I
       4: iconst_2
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static com.sun.glass.ui.Window getFocusedWindow();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: getstatic     #121                // Field focusedWindow:Lcom/sun/glass/ui/Window;
       6: areturn

  private static void setFocusedWindow(com.sun.glass.ui.Window);
    Code:
       0: aload_0
       1: putstatic     #121                // Field focusedWindow:Lcom/sun/glass/ui/Window;
       4: return

  public boolean isFocused();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #39                 // Field isFocused:Z
       7: ireturn

  protected abstract boolean _requestFocus(long, int);

  public boolean requestFocus(int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: invokespecial #122                // Method isChild:()Z
      11: ifne          31
      14: iload_1
      15: sipush        542
      18: if_icmpeq     31
      21: new           #123                // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #124                // String Invalid focus event ID for top-level window
      27: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: invokespecial #122                // Method isChild:()Z
      35: ifeq          62
      38: iload_1
      39: sipush        541
      42: if_icmplt     52
      45: iload_1
      46: sipush        544
      49: if_icmple     62
      52: new           #123                // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #126                // String Invalid focus event ID for child window
      58: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: iload_1
      63: sipush        541
      66: if_icmpne     78
      69: aload_0
      70: invokevirtual #127                // Method isFocused:()Z
      73: ifne          78
      76: iconst_1
      77: ireturn
      78: aload_0
      79: getfield      #40                 // Field isFocusable:Z
      82: ifne          87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: aload_0
      89: getfield      #70                 // Field ptr:J
      92: iload_1
      93: invokevirtual #128                // Method _requestFocus:(JI)Z
      96: ireturn

  public boolean requestFocus();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: sipush        542
       7: invokevirtual #129                // Method requestFocus:(I)Z
      10: ireturn

  protected abstract void _setFocusable(long, boolean);

  public void setFocusable(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: iload_1
       9: putfield      #40                 // Field isFocusable:Z
      12: aload_0
      13: invokevirtual #130                // Method isEnabled:()Z
      16: ifeq          28
      19: aload_0
      20: aload_0
      21: getfield      #70                 // Field ptr:J
      24: iload_1
      25: invokevirtual #131                // Method _setFocusable:(JZ)V
      28: return

  protected abstract boolean _grabFocus(long);

  protected abstract void _ungrabFocus(long);

  public boolean grabFocus();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: invokevirtual #127                // Method isFocused:()Z
      11: ifne          24
      14: new           #73                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #132                // String The window must be focused when calling grabFocus()
      20: invokespecial #75                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: aload_0
      26: getfield      #70                 // Field ptr:J
      29: invokevirtual #133                // Method _grabFocus:(J)Z
      32: ireturn

  public void ungrabFocus();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: invokevirtual #134                // Method _ungrabFocus:(J)V
      15: return

  public java.lang.String getTitle();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #17                 // Field title:Ljava/lang/String;
       7: areturn

  protected abstract boolean _setTitle(long, java.lang.String);

  public void setTitle(java.lang.String);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_1
       8: ifnonnull     14
      11: ldc           #16                 // String
      13: astore_1
      14: aload_1
      15: aload_0
      16: getfield      #17                 // Field title:Ljava/lang/String;
      19: invokevirtual #135                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifne          42
      25: aload_0
      26: aload_0
      27: getfield      #70                 // Field ptr:J
      30: aload_1
      31: invokevirtual #136                // Method _setTitle:(JLjava/lang/String;)Z
      34: ifeq          42
      37: aload_0
      38: aload_1
      39: putfield      #17                 // Field title:Ljava/lang/String;
      42: return

  protected abstract void _setLevel(long, int);

  public void setLevel(int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: iload_1
       8: iconst_1
       9: if_icmplt     17
      12: iload_1
      13: iconst_3
      14: if_icmple     27
      17: new           #123                // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #137                // String Level should be in the range [1..3]
      23: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #21                 // Field level:I
      31: iload_1
      32: if_icmpeq     49
      35: aload_0
      36: aload_0
      37: getfield      #70                 // Field ptr:J
      40: iload_1
      41: invokevirtual #138                // Method _setLevel:(JI)V
      44: aload_0
      45: iload_1
      46: putfield      #21                 // Field level:I
      49: return

  public int getLevel();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #21                 // Field level:I
       7: ireturn

  private boolean isInFullscreen();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getView:()Lcom/sun/glass/ui/View;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          17
      13: aload_1
      14: invokevirtual #139                // Method com/sun/glass/ui/View.isInFullscreen:()Z
      17: ireturn

  void notifyFullscreen(boolean);
    Code:
       0: aload_0
       1: invokevirtual #140                // Method getAlpha:()F
       4: fstore_2
       5: fload_2
       6: fconst_1
       7: fcmpg
       8: ifge          32
      11: iload_1
      12: ifeq          27
      15: aload_0
      16: aload_0
      17: getfield      #70                 // Field ptr:J
      20: fconst_1
      21: invokevirtual #141                // Method _setAlpha:(JF)V
      24: goto          32
      27: aload_0
      28: fload_2
      29: invokevirtual #142                // Method setAlpha:(F)V
      32: return

  protected abstract void _setAlpha(long, float);

  public void setAlpha(float);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: fload_1
       8: fconst_0
       9: fcmpg
      10: iflt          19
      13: fload_1
      14: fconst_1
      15: fcmpl
      16: ifle          29
      19: new           #123                // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #143                // String Alpha should be in the range [0f..1f]
      25: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: fload_1
      31: putfield      #26                 // Field alpha:F
      34: fload_1
      35: fconst_1
      36: fcmpg
      37: ifge          48
      40: aload_0
      41: invokespecial #144                // Method isInFullscreen:()Z
      44: ifeq          48
      47: return
      48: aload_0
      49: aload_0
      50: getfield      #70                 // Field ptr:J
      53: aload_0
      54: getfield      #26                 // Field alpha:F
      57: invokevirtual #141                // Method _setAlpha:(JF)V
      60: return

  public float getAlpha();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #26                 // Field alpha:F
       7: freturn

  public boolean getAppletMode();
    Code:
       0: aload_0
       1: getfield      #33                 // Field appletMode:Z
       4: ireturn

  public void setAppletMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field appletMode:Z
       5: return

  protected abstract boolean _setBackground(long, float, float, float);

  public boolean setBackground(float, float, float);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: fload_1
      13: fload_2
      14: fload_3
      15: invokevirtual #145                // Method _setBackground:(JFFF)Z
      18: ireturn

  public boolean isEnabled();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #42                 // Field disableCount:I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected abstract void _setEnabled(long, boolean);

  public void setEnabled(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: iload_1
       8: ifne          27
      11: aload_0
      12: dup
      13: getfield      #42                 // Field disableCount:I
      16: iconst_1
      17: iadd
      18: dup_x1
      19: putfield      #42                 // Field disableCount:I
      22: iconst_1
      23: if_icmple     50
      26: return
      27: aload_0
      28: getfield      #42                 // Field disableCount:I
      31: ifne          35
      34: return
      35: aload_0
      36: dup
      37: getfield      #42                 // Field disableCount:I
      40: iconst_1
      41: isub
      42: dup_x1
      43: putfield      #42                 // Field disableCount:I
      46: ifle          50
      49: return
      50: aload_0
      51: aload_0
      52: getfield      #70                 // Field ptr:J
      55: aload_0
      56: invokevirtual #130                // Method isEnabled:()Z
      59: invokevirtual #146                // Method _setEnabled:(JZ)V
      62: return

  public int getMinimumWidth();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #43                 // Field minimumWidth:I
       7: ireturn

  public int getMinimumHeight();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #44                 // Field minimumHeight:I
       7: ireturn

  public int getMaximumWidth();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #47                 // Field maximumWidth:I
       7: ireturn

  public int getMaximumHeight();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #48                 // Field maximumHeight:I
       7: ireturn

  protected abstract boolean _setMinimumSize(long, int, int);

  public void setMinimumSize(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: iload_1
       4: iflt          11
       7: iload_2
       8: ifge          26
      11: new           #123                // class java/lang/IllegalArgumentException
      14: dup
      15: iload_1
      16: iload_2
      17: invokedynamic #147,  0            // InvokeDynamic #2:makeConcatWithConstants:(II)Ljava/lang/String;
      22: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: invokespecial #80                 // Method checkNotClosed:()V
      30: aload_0
      31: aload_0
      32: getfield      #70                 // Field ptr:J
      35: iload_1
      36: iload_2
      37: invokevirtual #148                // Method _setMinimumSize:(JII)Z
      40: ifeq          53
      43: aload_0
      44: iload_1
      45: putfield      #43                 // Field minimumWidth:I
      48: aload_0
      49: iload_2
      50: putfield      #44                 // Field minimumHeight:I
      53: return

  protected abstract boolean _setMaximumSize(long, int, int);

  public void setMaximumSize(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: iload_1
       4: iflt          11
       7: iload_2
       8: ifge          26
      11: new           #123                // class java/lang/IllegalArgumentException
      14: dup
      15: iload_1
      16: iload_2
      17: invokedynamic #147,  0            // InvokeDynamic #2:makeConcatWithConstants:(II)Ljava/lang/String;
      22: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: invokespecial #80                 // Method checkNotClosed:()V
      30: aload_0
      31: aload_0
      32: getfield      #70                 // Field ptr:J
      35: iload_1
      36: ldc           #46                 // int 2147483647
      38: if_icmpne     45
      41: iconst_m1
      42: goto          46
      45: iload_1
      46: iload_2
      47: ldc           #46                 // int 2147483647
      49: if_icmpne     56
      52: iconst_m1
      53: goto          57
      56: iload_2
      57: invokevirtual #149                // Method _setMaximumSize:(JII)Z
      60: ifeq          73
      63: aload_0
      64: iload_1
      65: putfield      #47                 // Field maximumWidth:I
      68: aload_0
      69: iload_2
      70: putfield      #48                 // Field maximumHeight:I
      73: return

  protected abstract void _setIcon(long, com.sun.glass.ui.Pixels);

  public void setIcon(com.sun.glass.ui.Pixels);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: aload_1
      13: invokevirtual #150                // Method _setIcon:(JLcom/sun/glass/ui/Pixels;)V
      16: return

  protected abstract void _setCursor(long, com.sun.glass.ui.Cursor);

  public void setCursor(com.sun.glass.ui.Cursor);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: aload_0
       5: getfield      #70                 // Field ptr:J
       8: aload_1
       9: invokevirtual #151                // Method _setCursor:(JLcom/sun/glass/ui/Cursor;)V
      12: return

  protected abstract void _toFront(long);

  public void toFront();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: invokevirtual #152                // Method _toFront:(J)V
      15: return

  protected abstract void _toBack(long);

  public void toBack();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokespecial #80                 // Method checkNotClosed:()V
       7: aload_0
       8: aload_0
       9: getfield      #70                 // Field ptr:J
      12: invokevirtual #153                // Method _toBack:(J)V
      15: return

  protected abstract void _enterModal(long);

  public void enterModal();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #41                 // Field isModal:Z
       8: ifne          24
      11: aload_0
      12: iconst_1
      13: putfield      #41                 // Field isModal:Z
      16: aload_0
      17: aload_0
      18: getfield      #70                 // Field ptr:J
      21: invokevirtual #154                // Method _enterModal:(J)V
      24: return

  protected abstract void _enterModalWithWindow(long, long);

  public void enterModal(com.sun.glass.ui.Window);
    Code:
       0: aload_0
       1: invokespecial #80                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #41                 // Field isModal:Z
       8: ifne          28
      11: aload_0
      12: iconst_1
      13: putfield      #41                 // Field isModal:Z
      16: aload_0
      17: aload_0
      18: getfield      #70                 // Field ptr:J
      21: aload_1
      22: invokevirtual #67                 // Method getNativeHandle:()J
      25: invokevirtual #155                // Method _enterModalWithWindow:(JJ)V
      28: return

  protected abstract void _exitModal(long);

  public void exitModal();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method checkNotClosed:()V
       4: aload_0
       5: getfield      #41                 // Field isModal:Z
       8: iconst_1
       9: if_icmpne     25
      12: aload_0
      13: aload_0
      14: getfield      #70                 // Field ptr:J
      17: invokevirtual #156                // Method _exitModal:(J)V
      20: aload_0
      21: iconst_0
      22: putfield      #41                 // Field isModal:Z
      25: return

  public boolean isModal();
    Code:
       0: aload_0
       1: getfield      #41                 // Field isModal:Z
       4: ireturn

  public void dispatchNpapiEvent(java.util.Map);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: new           #50                 // class java/lang/RuntimeException
       6: dup
       7: ldc           #157                // String This operation is not supported on this platform
       9: invokespecial #52                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      12: athrow

  public com.sun.glass.ui.Window$EventHandler getEventHandler();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
       7: areturn

  public void setEventHandler(com.sun.glass.ui.Window$EventHandler);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: aload_1
       5: putfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
       8: return

  public void setShouldStartUndecoratedMove(boolean);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: iload_1
       5: putfield      #12                 // Field shouldStartUndecoratedMove:Z
       8: return

  protected void notifyClose();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
       4: sipush        521
       7: invokevirtual #100                // Method handleWindowEvent:(JI)V
      10: return

  protected void notifyDestroy();
    Code:
       0: aload_0
       1: getfield      #70                 // Field ptr:J
       4: lconst_0
       5: lcmp
       6: ifne          10
       9: return
      10: aload_0
      11: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      14: sipush        522
      17: invokevirtual #100                // Method handleWindowEvent:(JI)V
      20: aload_0
      21: lconst_0
      22: putfield      #70                 // Field ptr:J
      25: aload_0
      26: iconst_0
      27: invokevirtual #158                // Method setVisible:(Z)V
      30: return

  protected void notifyMove(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field x:I
       5: aload_0
       6: iload_2
       7: putfield      #23                 // Field y:I
      10: aload_0
      11: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      14: sipush        512
      17: invokevirtual #100                // Method handleWindowEvent:(JI)V
      20: return

  protected void notifyRescale();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
       4: sipush        513
       7: invokevirtual #100                // Method handleWindowEvent:(JI)V
      10: return

  protected void notifyMoveToAnotherScreen(com.sun.glass.ui.Screen);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #159                // Method setScreen:(Lcom/sun/glass/ui/Screen;)V
       5: return

  protected void setState(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field state:I
       5: return

  protected void notifyResize(int, int, int);
    Code:
       0: iload_1
       1: sipush        531
       4: if_icmpne     15
       7: aload_0
       8: iconst_2
       9: putfield      #20                 // Field state:I
      12: goto          59
      15: iload_1
      16: sipush        532
      19: if_icmpne     30
      22: aload_0
      23: iconst_3
      24: putfield      #20                 // Field state:I
      27: goto          35
      30: aload_0
      31: iconst_1
      32: putfield      #20                 // Field state:I
      35: aload_0
      36: iload_2
      37: putfield      #24                 // Field width:I
      40: aload_0
      41: iload_3
      42: putfield      #25                 // Field height:I
      45: aload_0
      46: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      49: ifnull        59
      52: aload_0
      53: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      56: invokevirtual #160                // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper.updateRectangles:()V
      59: aload_0
      60: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      63: iload_1
      64: invokevirtual #100                // Method handleWindowEvent:(JI)V
      67: iload_1
      68: sipush        532
      71: if_icmpeq     81
      74: iload_1
      75: sipush        533
      78: if_icmpne     91
      81: aload_0
      82: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      85: sipush        511
      88: invokevirtual #100                // Method handleWindowEvent:(JI)V
      91: return

  protected void notifyFocus(int);
    Code:
       0: iload_1
       1: sipush        541
       4: if_icmpeq     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_2
      13: aload_0
      14: getfield      #39                 // Field isFocused:Z
      17: iload_2
      18: if_icmpeq     52
      21: aload_0
      22: iload_2
      23: putfield      #39                 // Field isFocused:Z
      26: aload_0
      27: getfield      #39                 // Field isFocused:Z
      30: ifeq          40
      33: aload_0
      34: invokestatic  #161                // Method setFocusedWindow:(Lcom/sun/glass/ui/Window;)V
      37: goto          44
      40: aconst_null
      41: invokestatic  #161                // Method setFocusedWindow:(Lcom/sun/glass/ui/Window;)V
      44: aload_0
      45: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      48: iload_1
      49: invokevirtual #100                // Method handleWindowEvent:(JI)V
      52: return

  protected void notifyFocusDisabled();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
       4: sipush        545
       7: invokevirtual #100                // Method handleWindowEvent:(JI)V
      10: return

  protected void notifyFocusUngrab();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
       4: sipush        546
       7: invokevirtual #100                // Method handleWindowEvent:(JI)V
      10: return

  protected void notifyDelegatePtr(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field delegatePtr:J
       5: return

  protected void handleWindowEvent(long, int);
    Code:
       0: aload_0
       1: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
       4: ifnull        17
       7: aload_0
       8: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
      11: aload_0
      12: lload_1
      13: iload_3
      14: invokevirtual #162                // Method com/sun/glass/ui/Window$EventHandler.handleWindowEvent:(Lcom/sun/glass/ui/Window;JI)V
      17: return

  public void setUndecoratedMoveRectangle(int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #60                 // Field isDecorated:Z
       7: iconst_1
       8: if_icmpne     23
      11: getstatic     #163                // Field java/lang/System.err:Ljava/io/PrintStream;
      14: ldc           #164                // String Glass Window.setUndecoratedMoveRectangle is only valid for Undecorated Window. In the future this will be hard error.
      16: invokevirtual #165                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      19: invokestatic  #166                // Method java/lang/Thread.dumpStack:()V
      22: return
      23: aload_0
      24: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      27: ifnull        38
      30: aload_0
      31: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      34: iload_1
      35: invokevirtual #167                // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper.setMoveRectangle:(I)V
      38: return

  public boolean shouldStartUndecoratedMove(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #12                 // Field shouldStartUndecoratedMove:Z
       7: iconst_1
       8: if_icmpne     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #60                 // Field isDecorated:Z
      17: iconst_1
      18: if_icmpne     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      27: ifnull        40
      30: aload_0
      31: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      34: iload_1
      35: iload_2
      36: invokevirtual #168                // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper.shouldStartMove:(II)Z
      39: ireturn
      40: iconst_0
      41: ireturn

  public void setUndecoratedResizeRectangle(int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #60                 // Field isDecorated:Z
       7: iconst_1
       8: if_icmpeq     18
      11: aload_0
      12: getfield      #37                 // Field isResizable:Z
      15: ifne          30
      18: getstatic     #163                // Field java/lang/System.err:Ljava/io/PrintStream;
      21: ldc           #169                // String Glass Window.setUndecoratedResizeRectangle is only valid for Undecorated Resizable Window. In the future this will be hard error.
      23: invokevirtual #165                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      26: invokestatic  #166                // Method java/lang/Thread.dumpStack:()V
      29: return
      30: aload_0
      31: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      34: ifnull        45
      37: aload_0
      38: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      41: iload_1
      42: invokevirtual #170                // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper.setResizeRectangle:(I)V
      45: return

  public boolean shouldStartUndecoratedResize(int, int);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: getfield      #60                 // Field isDecorated:Z
       7: iconst_1
       8: if_icmpeq     18
      11: aload_0
      12: getfield      #37                 // Field isResizable:Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      24: ifnull        37
      27: aload_0
      28: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      31: iload_1
      32: iload_2
      33: invokevirtual #171                // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper.shouldStartResize:(II)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  boolean handleMouseEvent(int, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #60                 // Field isDecorated:Z
       4: ifne          24
       7: aload_0
       8: getfield      #18                 // Field helper:Lcom/sun/glass/ui/Window$UndecoratedMoveResizeHelper;
      11: iload_1
      12: iload_2
      13: iload_3
      14: iload         4
      16: iload         5
      18: iload         6
      20: invokevirtual #172                // Method com/sun/glass/ui/Window$UndecoratedMoveResizeHelper.handleMouseEvent:(IIIIII)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public java.lang.String toString();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: invokevirtual #173                // Method getNativeWindow:()J
       7: aload_0
       8: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      11: ifnull        27
      14: aload_0
      15: getfield      #14                 // Field screen:Lcom/sun/glass/ui/Screen;
      18: invokevirtual #68                 // Method com/sun/glass/ui/Screen.getNativeScreen:()J
      21: invokestatic  #174                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      24: goto          29
      27: ldc           #175                // String null
      29: aload_0
      30: invokevirtual #176                // Method isDecorated:()Z
      33: aload_0
      34: invokevirtual #177                // Method getTitle:()Ljava/lang/String;
      37: aload_0
      38: invokevirtual #178                // Method isVisible:()Z
      41: aload_0
      42: invokevirtual #127                // Method isFocused:()Z
      45: aload_0
      46: invokevirtual #179                // Method isModal:()Z
      49: aload_0
      50: getfield      #20                 // Field state:I
      53: aload_0
      54: invokevirtual #180                // Method getX:()I
      57: aload_0
      58: invokevirtual #181                // Method getY:()I
      61: aload_0
      62: invokevirtual #182                // Method getWidth:()I
      65: aload_0
      66: invokevirtual #183                // Method getHeight:()I
      69: invokedynamic #184,  0            // InvokeDynamic #3:makeConcatWithConstants:(JLjava/io/Serializable;ZLjava/lang/String;ZZZIIIII)Ljava/lang/String;
      74: areturn

  protected void notifyLevelChanged(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field level:I
       5: aload_0
       6: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
       9: ifnull        20
      12: aload_0
      13: getfield      #86                 // Field eventHandler:Lcom/sun/glass/ui/Window$EventHandler;
      16: iload_1
      17: invokevirtual #185                // Method com/sun/glass/ui/Window$EventHandler.handleLevelEvent:(I)V
      20: return

  public void requestInput(java.lang.String, int, double, double, double, double, double, double, double, double, double, double, double, double, double, double);
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: aload_0
       5: getfield      #70                 // Field ptr:J
       8: aload_1
       9: iload_2
      10: dload_3
      11: dload         5
      13: dload         7
      15: dload         9
      17: dload         11
      19: dload         13
      21: dload         15
      23: dload         17
      25: dload         19
      27: dload         21
      29: dload         23
      31: dload         25
      33: dload         27
      35: dload         29
      37: invokevirtual #186                // Method _requestInput:(JLjava/lang/String;IDDDDDDDDDDDDDD)V
      40: return

  public void releaseInput();
    Code:
       0: invokestatic  #2                  // Method com/sun/glass/ui/Application.checkEventThread:()V
       3: aload_0
       4: aload_0
       5: getfield      #70                 // Field ptr:J
       8: invokevirtual #187                // Method _releaseInput:(J)V
      11: return

  protected abstract void _requestInput(long, java.lang.String, int, double, double, double, double, double, double, double, double, double, double, double, double, double, double);

  protected abstract void _releaseInput(long);

  private static void lambda$setVisible$1(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokestatic  #188                // Method com/sun/glass/ui/Application.invokeLater:(Ljava/lang/Runnable;)V
       4: return

  private void lambda$setVisible$0();
    Code:
       0: aload_0
       1: invokespecial #189                // Method checkScreenLocation:()V
       4: return

  static {};
    Code:
       0: new           #190                // class java/util/LinkedList
       3: dup
       4: invokespecial #191                // Method java/util/LinkedList."<init>":()V
       7: putstatic     #3                  // Field visibleWindows:Ljava/util/LinkedList;
      10: aconst_null
      11: putstatic     #121                // Field focusedWindow:Lcom/sun/glass/ui/Window;
      14: return
}
