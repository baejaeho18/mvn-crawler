Compiled from "DataWriter.java"
public class com.sun.xml.bind.marshaller.DataWriter extends com.sun.xml.bind.marshaller.XMLWriter {
  private static final java.lang.Object SEEN_NOTHING;

  private static final java.lang.Object SEEN_ELEMENT;

  private static final java.lang.Object SEEN_DATA;

  private java.lang.Object state;

  private java.util.Stack<java.lang.Object> stateStack;

  private java.lang.String indentStep;

  private int depth;

  public com.sun.xml.bind.marshaller.DataWriter(java.io.Writer, java.lang.String, com.sun.xml.bind.marshaller.CharacterEscapeHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/sun/xml/bind/marshaller/XMLWriter."<init>":(Ljava/io/Writer;Ljava/lang/String;Lcom/sun/xml/bind/marshaller/CharacterEscapeHandler;)V
       7: aload_0
       8: getstatic     #2                  // Field SEEN_NOTHING:Ljava/lang/Object;
      11: putfield      #3                  // Field state:Ljava/lang/Object;
      14: aload_0
      15: new           #4                  // class java/util/Stack
      18: dup
      19: invokespecial #5                  // Method java/util/Stack."<init>":()V
      22: putfield      #6                  // Field stateStack:Ljava/util/Stack;
      25: aload_0
      26: ldc           #7                  // String
      28: putfield      #8                  // Field indentStep:Ljava/lang/String;
      31: aload_0
      32: iconst_0
      33: putfield      #9                  // Field depth:I
      36: return

  public com.sun.xml.bind.marshaller.DataWriter(java.io.Writer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #10                 // Field com/sun/xml/bind/marshaller/DumbEscapeHandler.theInstance:Lcom/sun/xml/bind/marshaller/CharacterEscapeHandler;
       6: invokespecial #11                 // Method "<init>":(Ljava/io/Writer;Ljava/lang/String;Lcom/sun/xml/bind/marshaller/CharacterEscapeHandler;)V
       9: return

  public int getIndentStep();
    Code:
       0: aload_0
       1: getfield      #8                  // Field indentStep:Ljava/lang/String;
       4: invokevirtual #12                 // Method java/lang/String.length:()I
       7: ireturn

  public void setIndentStep(int);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iload_1
       9: ifle          25
      12: aload_2
      13: bipush        32
      15: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: pop
      19: iinc          1, -1
      22: goto          8
      25: aload_0
      26: aload_2
      27: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #17                 // Method setIndentStep:(Ljava/lang/String;)V
      33: return

  public void setIndentStep(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field indentStep:Ljava/lang/String;
       5: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #9                  // Field depth:I
       5: aload_0
       6: getstatic     #2                  // Field SEEN_NOTHING:Ljava/lang/Object;
       9: putfield      #3                  // Field state:Ljava/lang/Object;
      12: aload_0
      13: new           #4                  // class java/util/Stack
      16: dup
      17: invokespecial #5                  // Method java/util/Stack."<init>":()V
      20: putfield      #6                  // Field stateStack:Ljava/util/Stack;
      23: aload_0
      24: invokespecial #18                 // Method com/sun/xml/bind/marshaller/XMLWriter.reset:()V
      27: return

  protected void writeXmlDecl(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method com/sun/xml/bind/marshaller/XMLWriter.writeXmlDecl:(Ljava/lang/String;)V
       5: aload_0
       6: bipush        10
       8: invokevirtual #20                 // Method write:(C)V
      11: return

  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field stateStack:Ljava/util/Stack;
       4: getstatic     #21                 // Field SEEN_ELEMENT:Ljava/lang/Object;
       7: invokevirtual #22                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getstatic     #2                  // Field SEEN_NOTHING:Ljava/lang/Object;
      15: putfield      #3                  // Field state:Ljava/lang/Object;
      18: aload_0
      19: getfield      #9                  // Field depth:I
      22: ifle          31
      25: aload_0
      26: ldc           #23                 // String \n
      28: invokespecial #24                 // Method com/sun/xml/bind/marshaller/XMLWriter.characters:(Ljava/lang/String;)V
      31: aload_0
      32: invokespecial #25                 // Method doIndent:()V
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload_3
      39: aload         4
      41: invokespecial #26                 // Method com/sun/xml/bind/marshaller/XMLWriter.startElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
      44: aload_0
      45: dup
      46: getfield      #9                  // Field depth:I
      49: iconst_1
      50: iadd
      51: putfield      #9                  // Field depth:I
      54: return

  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field depth:I
       5: iconst_1
       6: isub
       7: putfield      #9                  // Field depth:I
      10: aload_0
      11: getfield      #3                  // Field state:Ljava/lang/Object;
      14: getstatic     #21                 // Field SEEN_ELEMENT:Ljava/lang/Object;
      17: if_acmpne     30
      20: aload_0
      21: ldc           #23                 // String \n
      23: invokespecial #24                 // Method com/sun/xml/bind/marshaller/XMLWriter.characters:(Ljava/lang/String;)V
      26: aload_0
      27: invokespecial #25                 // Method doIndent:()V
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokespecial #27                 // Method com/sun/xml/bind/marshaller/XMLWriter.endElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      37: aload_0
      38: aload_0
      39: getfield      #6                  // Field stateStack:Ljava/util/Stack;
      42: invokevirtual #28                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      45: putfield      #3                  // Field state:Ljava/lang/Object;
      48: return

  public void endDocument() throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #20                 // Method write:(C)V
       6: goto          19
       9: astore_1
      10: new           #30                 // class org/xml/sax/SAXException
      13: dup
      14: aload_1
      15: invokespecial #31                 // Method org/xml/sax/SAXException."<init>":(Ljava/lang/Exception;)V
      18: athrow
      19: aload_0
      20: invokespecial #32                 // Method com/sun/xml/bind/marshaller/XMLWriter.endDocument:()V
      23: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  public void characters(char[], int, int) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: getstatic     #33                 // Field SEEN_DATA:Ljava/lang/Object;
       4: putfield      #3                  // Field state:Ljava/lang/Object;
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #34                 // Method com/sun/xml/bind/marshaller/XMLWriter.characters:([CII)V
      14: return

  private void doIndent() throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field depth:I
       4: ifle          39
       7: aload_0
       8: getfield      #8                  // Field indentStep:Ljava/lang/String;
      11: invokevirtual #35                 // Method java/lang/String.toCharArray:()[C
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #9                  // Field depth:I
      22: if_icmpge     39
      25: aload_0
      26: aload_1
      27: iconst_0
      28: aload_1
      29: arraylength
      30: invokevirtual #36                 // Method characters:([CII)V
      33: iinc          2, 1
      36: goto          17
      39: return

  static {};
    Code:
       0: new           #37                 // class java/lang/Object
       3: dup
       4: invokespecial #38                 // Method java/lang/Object."<init>":()V
       7: putstatic     #2                  // Field SEEN_NOTHING:Ljava/lang/Object;
      10: new           #37                 // class java/lang/Object
      13: dup
      14: invokespecial #38                 // Method java/lang/Object."<init>":()V
      17: putstatic     #21                 // Field SEEN_ELEMENT:Ljava/lang/Object;
      20: new           #37                 // class java/lang/Object
      23: dup
      24: invokespecial #38                 // Method java/lang/Object."<init>":()V
      27: putstatic     #33                 // Field SEEN_DATA:Ljava/lang/Object;
      30: return
}
