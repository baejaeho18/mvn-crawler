Compiled from "IntArrayData.java"
public final class com.sun.xml.bind.v2.runtime.unmarshaller.IntArrayData extends com.sun.xml.bind.v2.runtime.output.Pcdata {
  private int[] data;

  private int start;

  private int len;

  private java.lang.StringBuilder literal;

  public com.sun.xml.bind.v2.runtime.unmarshaller.IntArrayData(int[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/xml/bind/v2/runtime/output/Pcdata."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #2                  // Method set:([III)V
      11: return

  public com.sun.xml.bind.v2.runtime.unmarshaller.IntArrayData();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/xml/bind/v2/runtime/output/Pcdata."<init>":()V
       4: return

  public void set(int[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field data:[I
       5: aload_0
       6: iload_2
       7: putfield      #4                  // Field start:I
      10: aload_0
      11: iload_3
      12: putfield      #5                  // Field len:I
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      20: return

  public int length();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method getLiteral:()Ljava/lang/StringBuilder;
       4: invokevirtual #8                  // Method java/lang/StringBuilder.length:()I
       7: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method getLiteral:()Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #9                  // Method java/lang/StringBuilder.charAt:(I)C
       8: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method getLiteral:()Ljava/lang/StringBuilder;
       4: iload_1
       5: iload_2
       6: invokevirtual #10                 // Method java/lang/StringBuilder.subSequence:(II)Ljava/lang/CharSequence;
       9: areturn

  private java.lang.StringBuilder getLiteral();
    Code:
       0: aload_0
       1: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
       4: ifnull        12
       7: aload_0
       8: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      11: areturn
      12: aload_0
      13: new           #11                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      20: putfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #4                  // Field start:I
      27: istore_1
      28: aload_0
      29: getfield      #5                  // Field len:I
      32: istore_2
      33: iload_2
      34: ifle          80
      37: aload_0
      38: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      41: invokevirtual #8                  // Method java/lang/StringBuilder.length:()I
      44: ifle          57
      47: aload_0
      48: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      51: bipush        32
      53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: aload_0
      58: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #3                  // Field data:[I
      65: iload_1
      66: iinc          1, 1
      69: iaload
      70: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: pop
      74: iinc          2, -1
      77: goto          33
      80: aload_0
      81: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
      84: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field literal:Ljava/lang/StringBuilder;
       4: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       7: areturn

  public void writeTo(com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field start:I
       4: istore_2
       5: aload_0
       6: getfield      #5                  // Field len:I
       9: istore_3
      10: iload_3
      11: ifle          47
      14: iload_3
      15: aload_0
      16: getfield      #5                  // Field len:I
      19: if_icmpeq     28
      22: aload_1
      23: bipush        32
      25: invokevirtual #16                 // Method com/sun/xml/bind/v2/runtime/output/UTF8XmlOutput.write:(I)V
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field data:[I
      33: iload_2
      34: iinc          2, 1
      37: iaload
      38: invokevirtual #17                 // Method com/sun/xml/bind/v2/runtime/output/UTF8XmlOutput.text:(I)V
      41: iinc          3, -1
      44: goto          10
      47: return
}
