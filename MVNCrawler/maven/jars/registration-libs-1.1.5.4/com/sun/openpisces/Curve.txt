Compiled from "Curve.java"
final class com.sun.openpisces.Curve {
  float ax;

  float ay;

  float bx;

  float by;

  float cx;

  float cy;

  float dx;

  float dy;

  float dax;

  float day;

  float dbx;

  float dby;

  static final boolean $assertionsDisabled;

  com.sun.openpisces.Curve();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  void set(float[], int);
    Code:
       0: iload_2
       1: lookupswitch  { // 2
                     6: 61
                     8: 28
               default: 86
          }
      28: aload_0
      29: aload_1
      30: iconst_0
      31: faload
      32: aload_1
      33: iconst_1
      34: faload
      35: aload_1
      36: iconst_2
      37: faload
      38: aload_1
      39: iconst_3
      40: faload
      41: aload_1
      42: iconst_4
      43: faload
      44: aload_1
      45: iconst_5
      46: faload
      47: aload_1
      48: bipush        6
      50: faload
      51: aload_1
      52: bipush        7
      54: faload
      55: invokevirtual #2                  // Method set:(FFFFFFFF)V
      58: goto          96
      61: aload_0
      62: aload_1
      63: iconst_0
      64: faload
      65: aload_1
      66: iconst_1
      67: faload
      68: aload_1
      69: iconst_2
      70: faload
      71: aload_1
      72: iconst_3
      73: faload
      74: aload_1
      75: iconst_4
      76: faload
      77: aload_1
      78: iconst_5
      79: faload
      80: invokevirtual #3                  // Method set:(FFFFFF)V
      83: goto          96
      86: new           #4                  // class java/lang/InternalError
      89: dup
      90: ldc           #5                  // String Curves can only be cubic or quadratic
      92: invokespecial #6                  // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      95: athrow
      96: return

  void set(float, float, float, float, float, float, float, float);
    Code:
       0: aload_0
       1: ldc           #7                  // float 3.0f
       3: fload_3
       4: fload         5
       6: fsub
       7: fmul
       8: fload         7
      10: fadd
      11: fload_1
      12: fsub
      13: putfield      #8                  // Field ax:F
      16: aload_0
      17: ldc           #7                  // float 3.0f
      19: fload         4
      21: fload         6
      23: fsub
      24: fmul
      25: fload         8
      27: fadd
      28: fload_2
      29: fsub
      30: putfield      #9                  // Field ay:F
      33: aload_0
      34: ldc           #7                  // float 3.0f
      36: fload_1
      37: fconst_2
      38: fload_3
      39: fmul
      40: fsub
      41: fload         5
      43: fadd
      44: fmul
      45: putfield      #10                 // Field bx:F
      48: aload_0
      49: ldc           #7                  // float 3.0f
      51: fload_2
      52: fconst_2
      53: fload         4
      55: fmul
      56: fsub
      57: fload         6
      59: fadd
      60: fmul
      61: putfield      #11                 // Field by:F
      64: aload_0
      65: ldc           #7                  // float 3.0f
      67: fload_3
      68: fload_1
      69: fsub
      70: fmul
      71: putfield      #12                 // Field cx:F
      74: aload_0
      75: ldc           #7                  // float 3.0f
      77: fload         4
      79: fload_2
      80: fsub
      81: fmul
      82: putfield      #13                 // Field cy:F
      85: aload_0
      86: fload_1
      87: putfield      #14                 // Field dx:F
      90: aload_0
      91: fload_2
      92: putfield      #15                 // Field dy:F
      95: aload_0
      96: ldc           #7                  // float 3.0f
      98: aload_0
      99: getfield      #8                  // Field ax:F
     102: fmul
     103: putfield      #16                 // Field dax:F
     106: aload_0
     107: ldc           #7                  // float 3.0f
     109: aload_0
     110: getfield      #9                  // Field ay:F
     113: fmul
     114: putfield      #17                 // Field day:F
     117: aload_0
     118: fconst_2
     119: aload_0
     120: getfield      #10                 // Field bx:F
     123: fmul
     124: putfield      #18                 // Field dbx:F
     127: aload_0
     128: fconst_2
     129: aload_0
     130: getfield      #11                 // Field by:F
     133: fmul
     134: putfield      #19                 // Field dby:F
     137: return

  void set(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: aload_0
       2: fconst_0
       3: dup_x1
       4: putfield      #9                  // Field ay:F
       7: putfield      #8                  // Field ax:F
      10: aload_0
      11: fload_1
      12: fconst_2
      13: fload_3
      14: fmul
      15: fsub
      16: fload         5
      18: fadd
      19: putfield      #10                 // Field bx:F
      22: aload_0
      23: fload_2
      24: fconst_2
      25: fload         4
      27: fmul
      28: fsub
      29: fload         6
      31: fadd
      32: putfield      #11                 // Field by:F
      35: aload_0
      36: fconst_2
      37: fload_3
      38: fload_1
      39: fsub
      40: fmul
      41: putfield      #12                 // Field cx:F
      44: aload_0
      45: fconst_2
      46: fload         4
      48: fload_2
      49: fsub
      50: fmul
      51: putfield      #13                 // Field cy:F
      54: aload_0
      55: fload_1
      56: putfield      #14                 // Field dx:F
      59: aload_0
      60: fload_2
      61: putfield      #15                 // Field dy:F
      64: aload_0
      65: fconst_0
      66: putfield      #16                 // Field dax:F
      69: aload_0
      70: fconst_0
      71: putfield      #17                 // Field day:F
      74: aload_0
      75: fconst_2
      76: aload_0
      77: getfield      #10                 // Field bx:F
      80: fmul
      81: putfield      #18                 // Field dbx:F
      84: aload_0
      85: fconst_2
      86: aload_0
      87: getfield      #11                 // Field by:F
      90: fmul
      91: putfield      #19                 // Field dby:F
      94: return

  float xat(float);
    Code:
       0: fload_1
       1: fload_1
       2: fload_1
       3: aload_0
       4: getfield      #8                  // Field ax:F
       7: fmul
       8: aload_0
       9: getfield      #10                 // Field bx:F
      12: fadd
      13: fmul
      14: aload_0
      15: getfield      #12                 // Field cx:F
      18: fadd
      19: fmul
      20: aload_0
      21: getfield      #14                 // Field dx:F
      24: fadd
      25: freturn

  float yat(float);
    Code:
       0: fload_1
       1: fload_1
       2: fload_1
       3: aload_0
       4: getfield      #9                  // Field ay:F
       7: fmul
       8: aload_0
       9: getfield      #11                 // Field by:F
      12: fadd
      13: fmul
      14: aload_0
      15: getfield      #13                 // Field cy:F
      18: fadd
      19: fmul
      20: aload_0
      21: getfield      #15                 // Field dy:F
      24: fadd
      25: freturn

  float dxat(float);
    Code:
       0: fload_1
       1: fload_1
       2: aload_0
       3: getfield      #16                 // Field dax:F
       6: fmul
       7: aload_0
       8: getfield      #18                 // Field dbx:F
      11: fadd
      12: fmul
      13: aload_0
      14: getfield      #12                 // Field cx:F
      17: fadd
      18: freturn

  float dyat(float);
    Code:
       0: fload_1
       1: fload_1
       2: aload_0
       3: getfield      #17                 // Field day:F
       6: fmul
       7: aload_0
       8: getfield      #19                 // Field dby:F
      11: fadd
      12: fmul
      13: aload_0
      14: getfield      #13                 // Field cy:F
      17: fadd
      18: freturn

  int dxRoots(float[], int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field dax:F
       4: aload_0
       5: getfield      #18                 // Field dbx:F
       8: aload_0
       9: getfield      #12                 // Field cx:F
      12: aload_1
      13: iload_2
      14: invokestatic  #20                 // Method com/sun/openpisces/Helpers.quadraticRoots:(FFF[FI)I
      17: ireturn

  int dyRoots(float[], int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field day:F
       4: aload_0
       5: getfield      #19                 // Field dby:F
       8: aload_0
       9: getfield      #13                 // Field cy:F
      12: aload_1
      13: iload_2
      14: invokestatic  #20                 // Method com/sun/openpisces/Helpers.quadraticRoots:(FFF[FI)I
      17: ireturn

  int infPoints(float[], int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field dax:F
       4: aload_0
       5: getfield      #19                 // Field dby:F
       8: fmul
       9: aload_0
      10: getfield      #18                 // Field dbx:F
      13: aload_0
      14: getfield      #17                 // Field day:F
      17: fmul
      18: fsub
      19: fstore_3
      20: fconst_2
      21: aload_0
      22: getfield      #13                 // Field cy:F
      25: aload_0
      26: getfield      #16                 // Field dax:F
      29: fmul
      30: aload_0
      31: getfield      #17                 // Field day:F
      34: aload_0
      35: getfield      #12                 // Field cx:F
      38: fmul
      39: fsub
      40: fmul
      41: fstore        4
      43: aload_0
      44: getfield      #13                 // Field cy:F
      47: aload_0
      48: getfield      #18                 // Field dbx:F
      51: fmul
      52: aload_0
      53: getfield      #12                 // Field cx:F
      56: aload_0
      57: getfield      #19                 // Field dby:F
      60: fmul
      61: fsub
      62: fstore        5
      64: fload_3
      65: fload         4
      67: fload         5
      69: aload_1
      70: iload_2
      71: invokestatic  #20                 // Method com/sun/openpisces/Helpers.quadraticRoots:(FFF[FI)I
      74: ireturn

  private int perpendiculardfddf(float[], int);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          22
       6: aload_1
       7: arraylength
       8: iload_2
       9: iconst_4
      10: iadd
      11: if_icmpge     22
      14: new           #22                 // class java/lang/AssertionError
      17: dup
      18: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: fconst_2
      23: aload_0
      24: getfield      #16                 // Field dax:F
      27: aload_0
      28: getfield      #16                 // Field dax:F
      31: fmul
      32: aload_0
      33: getfield      #17                 // Field day:F
      36: aload_0
      37: getfield      #17                 // Field day:F
      40: fmul
      41: fadd
      42: fmul
      43: fstore_3
      44: ldc           #7                  // float 3.0f
      46: aload_0
      47: getfield      #16                 // Field dax:F
      50: aload_0
      51: getfield      #18                 // Field dbx:F
      54: fmul
      55: aload_0
      56: getfield      #17                 // Field day:F
      59: aload_0
      60: getfield      #19                 // Field dby:F
      63: fmul
      64: fadd
      65: fmul
      66: fstore        4
      68: fconst_2
      69: aload_0
      70: getfield      #16                 // Field dax:F
      73: aload_0
      74: getfield      #12                 // Field cx:F
      77: fmul
      78: aload_0
      79: getfield      #17                 // Field day:F
      82: aload_0
      83: getfield      #13                 // Field cy:F
      86: fmul
      87: fadd
      88: fmul
      89: aload_0
      90: getfield      #18                 // Field dbx:F
      93: aload_0
      94: getfield      #18                 // Field dbx:F
      97: fmul
      98: fadd
      99: aload_0
     100: getfield      #19                 // Field dby:F
     103: aload_0
     104: getfield      #19                 // Field dby:F
     107: fmul
     108: fadd
     109: fstore        5
     111: aload_0
     112: getfield      #18                 // Field dbx:F
     115: aload_0
     116: getfield      #12                 // Field cx:F
     119: fmul
     120: aload_0
     121: getfield      #19                 // Field dby:F
     124: aload_0
     125: getfield      #13                 // Field cy:F
     128: fmul
     129: fadd
     130: fstore        6
     132: fload_3
     133: fload         4
     135: fload         5
     137: fload         6
     139: aload_1
     140: iload_2
     141: fconst_0
     142: fconst_1
     143: invokestatic  #24                 // Method com/sun/openpisces/Helpers.cubicRootsInAB:(FFFF[FIFF)I
     146: ireturn

  int rootsOfROCMinusW(float[], int, float, float);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          27
       6: iload_2
       7: bipush        6
       9: if_icmpgt     19
      12: aload_1
      13: arraylength
      14: bipush        10
      16: if_icmpge     27
      19: new           #22                 // class java/lang/AssertionError
      22: dup
      23: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: iload_2
      28: istore        5
      30: aload_0
      31: aload_1
      32: iload_2
      33: invokespecial #25                 // Method perpendiculardfddf:([FI)I
      36: istore        6
      38: fconst_0
      39: fstore        7
      41: aload_0
      42: fload         7
      44: invokespecial #26                 // Method ROCsq:(F)F
      47: fload_3
      48: fload_3
      49: fmul
      50: fsub
      51: fstore        8
      53: aload_1
      54: iload_2
      55: iload         6
      57: iadd
      58: fconst_1
      59: fastore
      60: iinc          6, 1
      63: iload_2
      64: istore        9
      66: iload         9
      68: iload_2
      69: iload         6
      71: iadd
      72: if_icmpge     156
      75: aload_1
      76: iload         9
      78: faload
      79: fstore        10
      81: aload_0
      82: fload         10
      84: invokespecial #26                 // Method ROCsq:(F)F
      87: fload_3
      88: fload_3
      89: fmul
      90: fsub
      91: fstore        11
      93: fload         8
      95: fconst_0
      96: fcmpl
      97: ifne          112
     100: aload_1
     101: iload         5
     103: iinc          5, 1
     106: fload         7
     108: fastore
     109: goto          142
     112: fload         11
     114: fload         8
     116: fmul
     117: fconst_0
     118: fcmpg
     119: ifge          142
     122: aload_1
     123: iload         5
     125: iinc          5, 1
     128: aload_0
     129: fload         7
     131: fload         10
     133: fload_3
     134: fload_3
     135: fmul
     136: fload         4
     138: invokespecial #27                 // Method falsePositionROCsqMinusX:(FFFF)F
     141: fastore
     142: fload         10
     144: fstore        7
     146: fload         11
     148: fstore        8
     150: iinc          9, 1
     153: goto          66
     156: iload         5
     158: iload_2
     159: isub
     160: ireturn

  private static float eliminateInf(float);
    Code:
       0: fload_0
       1: ldc           #29                 // float Infinityf
       3: fcmpl
       4: ifne          12
       7: ldc           #30                 // float 3.4028235E38f
       9: goto          25
      12: fload_0
      13: ldc           #31                 // float -Infinityf
      15: fcmpl
      16: ifne          24
      19: ldc           #32                 // float 1.4E-45f
      21: goto          25
      24: fload_0
      25: freturn

  private float falsePositionROCsqMinusX(float, float, float, float);
    Code:
       0: iconst_0
       1: istore        6
       3: fload_2
       4: fstore        7
       6: aload_0
       7: fload         7
       9: invokespecial #26                 // Method ROCsq:(F)F
      12: fload_3
      13: fsub
      14: invokestatic  #33                 // Method eliminateInf:(F)F
      17: fstore        8
      19: fload_1
      20: fstore        9
      22: aload_0
      23: fload         9
      25: invokespecial #26                 // Method ROCsq:(F)F
      28: fload_3
      29: fsub
      30: invokestatic  #33                 // Method eliminateInf:(F)F
      33: fstore        10
      35: fload         9
      37: fstore        11
      39: iconst_0
      40: istore        13
      42: iload         13
      44: bipush        100
      46: if_icmpge     197
      49: fload         7
      51: fload         9
      53: fsub
      54: invokestatic  #34                 // Method java/lang/Math.abs:(F)F
      57: fload         4
      59: fload         7
      61: fload         9
      63: fadd
      64: invokestatic  #34                 // Method java/lang/Math.abs:(F)F
      67: fmul
      68: fcmpl
      69: ifle          197
      72: fload         10
      74: fload         7
      76: fmul
      77: fload         8
      79: fload         9
      81: fmul
      82: fsub
      83: fload         10
      85: fload         8
      87: fsub
      88: fdiv
      89: fstore        11
      91: aload_0
      92: fload         11
      94: invokespecial #26                 // Method ROCsq:(F)F
      97: fload_3
      98: fsub
      99: fstore        12
     101: fload         12
     103: f2d
     104: fload         8
     106: f2d
     107: invokestatic  #35                 // Method sameSign:(DD)Z
     110: ifeq          149
     113: fload         12
     115: fstore        8
     117: fload         11
     119: fstore        7
     121: iload         6
     123: ifge          143
     126: fload         10
     128: iconst_1
     129: iload         6
     131: ineg
     132: ishl
     133: i2f
     134: fdiv
     135: fstore        10
     137: iinc          6, -1
     140: goto          191
     143: iconst_m1
     144: istore        6
     146: goto          191
     149: fload         12
     151: fload         10
     153: fmul
     154: fconst_0
     155: fcmpl
     156: ifle          197
     159: fload         12
     161: fstore        10
     163: fload         11
     165: fstore        9
     167: iload         6
     169: ifle          188
     172: fload         8
     174: iconst_1
     175: iload         6
     177: ishl
     178: i2f
     179: fdiv
     180: fstore        8
     182: iinc          6, 1
     185: goto          191
     188: iconst_1
     189: istore        6
     191: iinc          13, 1
     194: goto          42
     197: fload         11
     199: freturn

  private static boolean sameSign(double, double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpg
       3: ifge          12
       6: dload_2
       7: dconst_0
       8: dcmpg
       9: iflt          24
      12: dload_0
      13: dconst_0
      14: dcmpl
      15: ifle          28
      18: dload_2
      19: dconst_0
      20: dcmpl
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private float ROCsq(float);
    Code:
       0: fload_1
       1: fload_1
       2: aload_0
       3: getfield      #16                 // Field dax:F
       6: fmul
       7: aload_0
       8: getfield      #18                 // Field dbx:F
      11: fadd
      12: fmul
      13: aload_0
      14: getfield      #12                 // Field cx:F
      17: fadd
      18: fstore_2
      19: fload_1
      20: fload_1
      21: aload_0
      22: getfield      #17                 // Field day:F
      25: fmul
      26: aload_0
      27: getfield      #19                 // Field dby:F
      30: fadd
      31: fmul
      32: aload_0
      33: getfield      #13                 // Field cy:F
      36: fadd
      37: fstore_3
      38: fconst_2
      39: aload_0
      40: getfield      #16                 // Field dax:F
      43: fmul
      44: fload_1
      45: fmul
      46: aload_0
      47: getfield      #18                 // Field dbx:F
      50: fadd
      51: fstore        4
      53: fconst_2
      54: aload_0
      55: getfield      #17                 // Field day:F
      58: fmul
      59: fload_1
      60: fmul
      61: aload_0
      62: getfield      #19                 // Field dby:F
      65: fadd
      66: fstore        5
      68: fload_2
      69: fload_2
      70: fmul
      71: fload_3
      72: fload_3
      73: fmul
      74: fadd
      75: fstore        6
      77: fload         4
      79: fload         4
      81: fmul
      82: fload         5
      84: fload         5
      86: fmul
      87: fadd
      88: fstore        7
      90: fload         4
      92: fload_2
      93: fmul
      94: fload         5
      96: fload_3
      97: fmul
      98: fadd
      99: fstore        8
     101: fload         6
     103: fload         6
     105: fload         6
     107: fmul
     108: fload         6
     110: fload         7
     112: fmul
     113: fload         8
     115: fload         8
     117: fmul
     118: fsub
     119: fdiv
     120: fmul
     121: freturn

  static java.util.Iterator<java.lang.Integer> breakPtsAtTs(float[], int, float[], int);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: arraylength
       8: iconst_2
       9: iload_1
      10: imul
      11: if_icmplt     20
      14: iload_3
      15: aload_2
      16: arraylength
      17: if_icmple     28
      20: new           #22                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: new           #36                 // class com/sun/openpisces/Curve$1
      31: dup
      32: iload_1
      33: iload_3
      34: aload_2
      35: aload_0
      36: invokespecial #37                 // Method com/sun/openpisces/Curve$1."<init>":(II[F[F)V
      39: areturn

  static {};
    Code:
       0: ldc           #38                 // class com/sun/openpisces/Curve
       2: invokevirtual #39                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #21                 // Field $assertionsDisabled:Z
      16: return
}
