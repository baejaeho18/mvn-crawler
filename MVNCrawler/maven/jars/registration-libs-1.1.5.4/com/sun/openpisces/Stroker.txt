Compiled from "Stroker.java"
public final class com.sun.openpisces.Stroker implements com.sun.javafx.geom.PathConsumer2D {
  private static final int MOVE_TO;

  private static final int DRAWING_OP_TO;

  private static final int CLOSE;

  public static final int JOIN_MITER;

  public static final int JOIN_ROUND;

  public static final int JOIN_BEVEL;

  public static final int CAP_BUTT;

  public static final int CAP_ROUND;

  public static final int CAP_SQUARE;

  private com.sun.javafx.geom.PathConsumer2D out;

  private int capStyle;

  private int joinStyle;

  private float lineWidth2;

  private final float[][] offset;

  private final float[] miter;

  private float miterLimitSq;

  private int prev;

  private float sx0;

  private float sy0;

  private float sdx;

  private float sdy;

  private float cx0;

  private float cy0;

  private float cdx;

  private float cdy;

  private float smx;

  private float smy;

  private float cmx;

  private float cmy;

  private final com.sun.openpisces.Stroker$PolyStack reverse;

  private static final float ROUND_JOIN_THRESHOLD;

  private float[] middle;

  private float[] lp;

  private float[] rp;

  private static final int MAX_N_CURVES;

  private float[] subdivTs;

  private static com.sun.openpisces.Curve c;

  static final boolean $assertionsDisabled;

  public com.sun.openpisces.Stroker(com.sun.javafx.geom.PathConsumer2D, float, int, int, float);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/sun/javafx/geom/PathConsumer2D;)V
       5: aload_0
       6: fload_2
       7: iload_3
       8: iload         4
      10: fload         5
      12: invokevirtual #2                  // Method reset:(FIIF)V
      15: return

  public com.sun.openpisces.Stroker(com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_3
       6: iconst_2
       7: multianewarray #4,  2             // class "[[F"
      11: putfield      #5                  // Field offset:[[F
      14: aload_0
      15: iconst_2
      16: newarray       float
      18: putfield      #6                  // Field miter:[F
      21: aload_0
      22: new           #7                  // class com/sun/openpisces/Stroker$PolyStack
      25: dup
      26: invokespecial #8                  // Method com/sun/openpisces/Stroker$PolyStack."<init>":()V
      29: putfield      #9                  // Field reverse:Lcom/sun/openpisces/Stroker$PolyStack;
      32: aload_0
      33: bipush        88
      35: newarray       float
      37: putfield      #11                 // Field middle:[F
      40: aload_0
      41: bipush        8
      43: newarray       float
      45: putfield      #12                 // Field lp:[F
      48: aload_0
      49: bipush        8
      51: newarray       float
      53: putfield      #13                 // Field rp:[F
      56: aload_0
      57: bipush        10
      59: newarray       float
      61: putfield      #14                 // Field subdivTs:[F
      64: aload_0
      65: aload_1
      66: invokevirtual #15                 // Method setConsumer:(Lcom/sun/javafx/geom/PathConsumer2D;)V
      69: return

  public void setConsumer(com.sun.javafx.geom.PathConsumer2D);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       5: return

  public void reset(float, int, int, float);
    Code:
       0: aload_0
       1: fload_1
       2: fconst_2
       3: fdiv
       4: putfield      #17                 // Field lineWidth2:F
       7: aload_0
       8: iload_2
       9: putfield      #18                 // Field capStyle:I
      12: aload_0
      13: iload_3
      14: putfield      #19                 // Field joinStyle:I
      17: fload         4
      19: aload_0
      20: getfield      #17                 // Field lineWidth2:F
      23: fmul
      24: fstore        5
      26: aload_0
      27: fload         5
      29: fload         5
      31: fmul
      32: putfield      #20                 // Field miterLimitSq:F
      35: aload_0
      36: iconst_2
      37: putfield      #21                 // Field prev:I
      40: return

  private static void computeOffset(float, float, float, float[]);
    Code:
       0: fload_0
       1: fload_0
       2: fmul
       3: fload_1
       4: fload_1
       5: fmul
       6: fadd
       7: f2d
       8: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
      11: d2f
      12: fstore        4
      14: fload         4
      16: fconst_0
      17: fcmpl
      18: ifne          32
      21: aload_3
      22: iconst_0
      23: aload_3
      24: iconst_1
      25: fconst_0
      26: dup_x2
      27: fastore
      28: fastore
      29: goto          51
      32: aload_3
      33: iconst_0
      34: fload_1
      35: fload_2
      36: fmul
      37: fload         4
      39: fdiv
      40: fastore
      41: aload_3
      42: iconst_1
      43: fload_0
      44: fload_2
      45: fmul
      46: fneg
      47: fload         4
      49: fdiv
      50: fastore
      51: return

  private static boolean isCW(float, float, float, float);
    Code:
       0: fload_0
       1: fload_3
       2: fmul
       3: fload_1
       4: fload_2
       5: fmul
       6: fcmpg
       7: ifgt          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void drawRoundJoin(float, float, float, float, float, float, boolean, float);
    Code:
       0: fload_3
       1: fconst_0
       2: fcmpl
       3: ifne          13
       6: fload         4
       8: fconst_0
       9: fcmpl
      10: ifeq          27
      13: fload         5
      15: fconst_0
      16: fcmpl
      17: ifne          28
      20: fload         6
      22: fconst_0
      23: fcmpl
      24: ifne          28
      27: return
      28: fload_3
      29: fload         5
      31: fsub
      32: fstore        9
      34: fload         4
      36: fload         6
      38: fsub
      39: fstore        10
      41: fload         9
      43: fload         9
      45: fmul
      46: fload         10
      48: fload         10
      50: fmul
      51: fadd
      52: fstore        11
      54: fload         11
      56: fload         8
      58: fcmpg
      59: ifge          63
      62: return
      63: iload         7
      65: ifeq          86
      68: fload_3
      69: fneg
      70: fstore_3
      71: fload         4
      73: fneg
      74: fstore        4
      76: fload         5
      78: fneg
      79: fstore        5
      81: fload         6
      83: fneg
      84: fstore        6
      86: aload_0
      87: fload_1
      88: fload_2
      89: fload_3
      90: fload         4
      92: fload         5
      94: fload         6
      96: iload         7
      98: invokespecial #23                 // Method drawRoundJoin:(FFFFFFZ)V
     101: return

  private void drawRoundJoin(float, float, float, float, float, float, boolean);
    Code:
       0: fload_3
       1: fload         5
       3: fmul
       4: fload         4
       6: fload         6
       8: fmul
       9: fadd
      10: f2d
      11: dstore        8
      13: dload         8
      15: dconst_0
      16: dcmpl
      17: iflt          24
      20: iconst_1
      21: goto          25
      24: iconst_2
      25: istore        10
      27: iload         10
      29: lookupswitch  { // 2
                     1: 56
                     2: 74
               default: 174
          }
      56: aload_0
      57: fload_1
      58: fload_2
      59: fload_3
      60: fload         4
      62: fload         5
      64: fload         6
      66: iload         7
      68: invokespecial #24                 // Method drawBezApproxForArc:(FFFFFFZ)V
      71: goto          174
      74: fload         6
      76: fload         4
      78: fsub
      79: fstore        11
      81: fload_3
      82: fload         5
      84: fsub
      85: fstore        12
      87: fload         11
      89: fload         11
      91: fmul
      92: fload         12
      94: fload         12
      96: fmul
      97: fadd
      98: f2d
      99: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
     102: d2f
     103: fstore        13
     105: aload_0
     106: getfield      #17                 // Field lineWidth2:F
     109: fload         13
     111: fdiv
     112: fstore        14
     114: fload         11
     116: fload         14
     118: fmul
     119: fstore        15
     121: fload         12
     123: fload         14
     125: fmul
     126: fstore        16
     128: iload         7
     130: ifeq          143
     133: fload         15
     135: fneg
     136: fstore        15
     138: fload         16
     140: fneg
     141: fstore        16
     143: aload_0
     144: fload_1
     145: fload_2
     146: fload_3
     147: fload         4
     149: fload         15
     151: fload         16
     153: iload         7
     155: invokespecial #24                 // Method drawBezApproxForArc:(FFFFFFZ)V
     158: aload_0
     159: fload_1
     160: fload_2
     161: fload         15
     163: fload         16
     165: fload         5
     167: fload         6
     169: iload         7
     171: invokespecial #24                 // Method drawBezApproxForArc:(FFFFFFZ)V
     174: return

  private void drawBezApproxForArc(float, float, float, float, float, float, boolean);
    Code:
       0: fload_3
       1: fload         5
       3: fmul
       4: fload         4
       6: fload         6
       8: fmul
       9: fadd
      10: fconst_2
      11: aload_0
      12: getfield      #17                 // Field lineWidth2:F
      15: fmul
      16: aload_0
      17: getfield      #17                 // Field lineWidth2:F
      20: fmul
      21: fdiv
      22: fstore        8
      24: ldc2_w        #25                 // double 1.3333333333333333d
      27: ldc2_w        #27                 // double 0.5d
      30: fload         8
      32: f2d
      33: dsub
      34: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
      37: dmul
      38: dconst_1
      39: fload         8
      41: f2d
      42: ldc2_w        #27                 // double 0.5d
      45: dadd
      46: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
      49: dadd
      50: ddiv
      51: d2f
      52: fstore        9
      54: iload         7
      56: ifeq          64
      59: fload         9
      61: fneg
      62: fstore        9
      64: fload_1
      65: fload_3
      66: fadd
      67: fstore        10
      69: fload_2
      70: fload         4
      72: fadd
      73: fstore        11
      75: fload         10
      77: fload         9
      79: fload         4
      81: fmul
      82: fsub
      83: fstore        12
      85: fload         11
      87: fload         9
      89: fload_3
      90: fmul
      91: fadd
      92: fstore        13
      94: fload_1
      95: fload         5
      97: fadd
      98: fstore        14
     100: fload_2
     101: fload         6
     103: fadd
     104: fstore        15
     106: fload         14
     108: fload         9
     110: fload         6
     112: fmul
     113: fadd
     114: fstore        16
     116: fload         15
     118: fload         9
     120: fload         5
     122: fmul
     123: fsub
     124: fstore        17
     126: aload_0
     127: fload         10
     129: fload         11
     131: fload         12
     133: fload         13
     135: fload         16
     137: fload         17
     139: fload         14
     141: fload         15
     143: iload         7
     145: invokespecial #29                 // Method emitCurveTo:(FFFFFFFFZ)V
     148: return

  private void drawRoundCap(float, float, float, float);
    Code:
       0: aload_0
       1: fload_1
       2: fload_3
       3: fadd
       4: fload_2
       5: fload         4
       7: fadd
       8: fload_1
       9: fload_3
      10: fadd
      11: ldc           #30                 // float 0.5522848f
      13: fload         4
      15: fmul
      16: fsub
      17: fload_2
      18: fload         4
      20: fadd
      21: ldc           #30                 // float 0.5522848f
      23: fload_3
      24: fmul
      25: fadd
      26: fload_1
      27: fload         4
      29: fsub
      30: ldc           #30                 // float 0.5522848f
      32: fload_3
      33: fmul
      34: fadd
      35: fload_2
      36: fload_3
      37: fadd
      38: ldc           #30                 // float 0.5522848f
      40: fload         4
      42: fmul
      43: fadd
      44: fload_1
      45: fload         4
      47: fsub
      48: fload_2
      49: fload_3
      50: fadd
      51: iconst_0
      52: invokespecial #29                 // Method emitCurveTo:(FFFFFFFFZ)V
      55: aload_0
      56: fload_1
      57: fload         4
      59: fsub
      60: fload_2
      61: fload_3
      62: fadd
      63: fload_1
      64: fload         4
      66: fsub
      67: ldc           #30                 // float 0.5522848f
      69: fload_3
      70: fmul
      71: fsub
      72: fload_2
      73: fload_3
      74: fadd
      75: ldc           #30                 // float 0.5522848f
      77: fload         4
      79: fmul
      80: fsub
      81: fload_1
      82: fload_3
      83: fsub
      84: ldc           #30                 // float 0.5522848f
      86: fload         4
      88: fmul
      89: fsub
      90: fload_2
      91: fload         4
      93: fsub
      94: ldc           #30                 // float 0.5522848f
      96: fload_3
      97: fmul
      98: fadd
      99: fload_1
     100: fload_3
     101: fsub
     102: fload_2
     103: fload         4
     105: fsub
     106: iconst_0
     107: invokespecial #29                 // Method emitCurveTo:(FFFFFFFFZ)V
     110: return

  private void computeMiter(float, float, float, float, float, float, float, float, float[], int);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fstore        11
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        12
      11: fload         7
      13: fload         5
      15: fsub
      16: fstore        13
      18: fload         8
      20: fload         6
      22: fsub
      23: fstore        14
      25: fload         11
      27: fload         14
      29: fmul
      30: fload         13
      32: fload         12
      34: fmul
      35: fsub
      36: fstore        15
      38: fload         13
      40: fload_2
      41: fload         6
      43: fsub
      44: fmul
      45: fload         14
      47: fload_1
      48: fload         5
      50: fsub
      51: fmul
      52: fsub
      53: fstore        16
      55: fload         16
      57: fload         15
      59: fdiv
      60: fstore        16
      62: aload         9
      64: iload         10
      66: iinc          10, 1
      69: fload_1
      70: fload         16
      72: fload         11
      74: fmul
      75: fadd
      76: fastore
      77: aload         9
      79: iload         10
      81: fload_2
      82: fload         16
      84: fload         12
      86: fmul
      87: fadd
      88: fastore
      89: return

  private void safecomputeMiter(float, float, float, float, float, float, float, float, float[], int);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fstore        11
       5: fload         4
       7: fload_2
       8: fsub
       9: fstore        12
      11: fload         7
      13: fload         5
      15: fsub
      16: fstore        13
      18: fload         8
      20: fload         6
      22: fsub
      23: fstore        14
      25: fload         11
      27: fload         14
      29: fmul
      30: fload         13
      32: fload         12
      34: fmul
      35: fsub
      36: fstore        15
      38: fload         15
      40: fconst_0
      41: fcmpl
      42: ifne          71
      45: aload         9
      47: iload         10
      49: iinc          10, 1
      52: fload_1
      53: fload         5
      55: fadd
      56: fconst_2
      57: fdiv
      58: fastore
      59: aload         9
      61: iload         10
      63: fload_2
      64: fload         6
      66: fadd
      67: fconst_2
      68: fdiv
      69: fastore
      70: return
      71: fload         13
      73: fload_2
      74: fload         6
      76: fsub
      77: fmul
      78: fload         14
      80: fload_1
      81: fload         5
      83: fsub
      84: fmul
      85: fsub
      86: fstore        16
      88: fload         16
      90: fload         15
      92: fdiv
      93: fstore        16
      95: aload         9
      97: iload         10
      99: iinc          10, 1
     102: fload_1
     103: fload         16
     105: fload         11
     107: fmul
     108: fadd
     109: fastore
     110: aload         9
     112: iload         10
     114: fload_2
     115: fload         16
     117: fload         12
     119: fmul
     120: fadd
     121: fastore
     122: return

  private void drawMiter(float, float, float, float, float, float, float, float, float, float, boolean);
    Code:
       0: fload         9
       2: fload         7
       4: fcmpl
       5: ifne          16
       8: fload         10
      10: fload         8
      12: fcmpl
      13: ifeq          42
      16: fload_1
      17: fconst_0
      18: fcmpl
      19: ifne          28
      22: fload_2
      23: fconst_0
      24: fcmpl
      25: ifeq          42
      28: fload         5
      30: fconst_0
      31: fcmpl
      32: ifne          43
      35: fload         6
      37: fconst_0
      38: fcmpl
      39: ifne          43
      42: return
      43: iload         11
      45: ifeq          68
      48: fload         7
      50: fneg
      51: fstore        7
      53: fload         8
      55: fneg
      56: fstore        8
      58: fload         9
      60: fneg
      61: fstore        9
      63: fload         10
      65: fneg
      66: fstore        10
      68: aload_0
      69: fload_3
      70: fload_1
      71: fsub
      72: fload         7
      74: fadd
      75: fload         4
      77: fload_2
      78: fsub
      79: fload         8
      81: fadd
      82: fload_3
      83: fload         7
      85: fadd
      86: fload         4
      88: fload         8
      90: fadd
      91: fload         5
      93: fload_3
      94: fadd
      95: fload         9
      97: fadd
      98: fload         6
     100: fload         4
     102: fadd
     103: fload         10
     105: fadd
     106: fload_3
     107: fload         9
     109: fadd
     110: fload         4
     112: fload         10
     114: fadd
     115: aload_0
     116: getfield      #6                  // Field miter:[F
     119: iconst_0
     120: invokespecial #31                 // Method computeMiter:(FFFFFFFF[FI)V
     123: aload_0
     124: getfield      #6                  // Field miter:[F
     127: iconst_0
     128: faload
     129: fload_3
     130: fsub
     131: aload_0
     132: getfield      #6                  // Field miter:[F
     135: iconst_0
     136: faload
     137: fload_3
     138: fsub
     139: fmul
     140: aload_0
     141: getfield      #6                  // Field miter:[F
     144: iconst_1
     145: faload
     146: fload         4
     148: fsub
     149: aload_0
     150: getfield      #6                  // Field miter:[F
     153: iconst_1
     154: faload
     155: fload         4
     157: fsub
     158: fmul
     159: fadd
     160: fstore        12
     162: fload         12
     164: aload_0
     165: getfield      #20                 // Field miterLimitSq:F
     168: fcmpg
     169: ifge          190
     172: aload_0
     173: aload_0
     174: getfield      #6                  // Field miter:[F
     177: iconst_0
     178: faload
     179: aload_0
     180: getfield      #6                  // Field miter:[F
     183: iconst_1
     184: faload
     185: iload         11
     187: invokespecial #32                 // Method emitLineTo:(FFZ)V
     190: return

  public void moveTo(float, float);
    Code:
       0: aload_0
       1: getfield      #21                 // Field prev:I
       4: iconst_1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #33                 // Method finish:()V
      12: aload_0
      13: aload_0
      14: fload_1
      15: dup_x1
      16: putfield      #34                 // Field cx0:F
      19: putfield      #35                 // Field sx0:F
      22: aload_0
      23: aload_0
      24: fload_2
      25: dup_x1
      26: putfield      #36                 // Field cy0:F
      29: putfield      #37                 // Field sy0:F
      32: aload_0
      33: aload_0
      34: fconst_1
      35: dup_x1
      36: putfield      #38                 // Field sdx:F
      39: putfield      #39                 // Field cdx:F
      42: aload_0
      43: aload_0
      44: fconst_0
      45: dup_x1
      46: putfield      #40                 // Field sdy:F
      49: putfield      #41                 // Field cdy:F
      52: aload_0
      53: iconst_0
      54: putfield      #21                 // Field prev:I
      57: return

  public void lineTo(float, float);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #34                 // Field cx0:F
       5: fsub
       6: fstore_3
       7: fload_2
       8: aload_0
       9: getfield      #36                 // Field cy0:F
      12: fsub
      13: fstore        4
      15: fload_3
      16: fconst_0
      17: fcmpl
      18: ifne          30
      21: fload         4
      23: fconst_0
      24: fcmpl
      25: ifne          30
      28: fconst_1
      29: fstore_3
      30: fload_3
      31: fload         4
      33: aload_0
      34: getfield      #17                 // Field lineWidth2:F
      37: aload_0
      38: getfield      #5                  // Field offset:[[F
      41: iconst_0
      42: aaload
      43: invokestatic  #42                 // Method computeOffset:(FFF[F)V
      46: aload_0
      47: getfield      #5                  // Field offset:[[F
      50: iconst_0
      51: aaload
      52: iconst_0
      53: faload
      54: fstore        5
      56: aload_0
      57: getfield      #5                  // Field offset:[[F
      60: iconst_0
      61: aaload
      62: iconst_1
      63: faload
      64: fstore        6
      66: aload_0
      67: aload_0
      68: getfield      #39                 // Field cdx:F
      71: aload_0
      72: getfield      #41                 // Field cdy:F
      75: aload_0
      76: getfield      #34                 // Field cx0:F
      79: aload_0
      80: getfield      #36                 // Field cy0:F
      83: fload_3
      84: fload         4
      86: aload_0
      87: getfield      #43                 // Field cmx:F
      90: aload_0
      91: getfield      #44                 // Field cmy:F
      94: fload         5
      96: fload         6
      98: invokespecial #45                 // Method drawJoin:(FFFFFFFFFF)V
     101: aload_0
     102: aload_0
     103: getfield      #34                 // Field cx0:F
     106: fload         5
     108: fadd
     109: aload_0
     110: getfield      #36                 // Field cy0:F
     113: fload         6
     115: fadd
     116: invokespecial #46                 // Method emitLineTo:(FF)V
     119: aload_0
     120: fload_1
     121: fload         5
     123: fadd
     124: fload_2
     125: fload         6
     127: fadd
     128: invokespecial #46                 // Method emitLineTo:(FF)V
     131: aload_0
     132: aload_0
     133: getfield      #34                 // Field cx0:F
     136: fload         5
     138: fsub
     139: aload_0
     140: getfield      #36                 // Field cy0:F
     143: fload         6
     145: fsub
     146: iconst_1
     147: invokespecial #32                 // Method emitLineTo:(FFZ)V
     150: aload_0
     151: fload_1
     152: fload         5
     154: fsub
     155: fload_2
     156: fload         6
     158: fsub
     159: iconst_1
     160: invokespecial #32                 // Method emitLineTo:(FFZ)V
     163: aload_0
     164: fload         5
     166: putfield      #43                 // Field cmx:F
     169: aload_0
     170: fload         6
     172: putfield      #44                 // Field cmy:F
     175: aload_0
     176: fload_3
     177: putfield      #39                 // Field cdx:F
     180: aload_0
     181: fload         4
     183: putfield      #41                 // Field cdy:F
     186: aload_0
     187: fload_1
     188: putfield      #34                 // Field cx0:F
     191: aload_0
     192: fload_2
     193: putfield      #36                 // Field cy0:F
     196: aload_0
     197: iconst_1
     198: putfield      #21                 // Field prev:I
     201: return

  public void closePath();
    Code:
       0: aload_0
       1: getfield      #21                 // Field prev:I
       4: iconst_1
       5: if_icmpeq     83
       8: aload_0
       9: getfield      #21                 // Field prev:I
      12: iconst_2
      13: if_icmpne     17
      16: return
      17: aload_0
      18: aload_0
      19: getfield      #34                 // Field cx0:F
      22: aload_0
      23: getfield      #36                 // Field cy0:F
      26: aload_0
      27: getfield      #17                 // Field lineWidth2:F
      30: fsub
      31: invokespecial #47                 // Method emitMoveTo:(FF)V
      34: aload_0
      35: aload_0
      36: fconst_0
      37: dup_x1
      38: putfield      #48                 // Field smx:F
      41: putfield      #43                 // Field cmx:F
      44: aload_0
      45: aload_0
      46: aload_0
      47: getfield      #17                 // Field lineWidth2:F
      50: fneg
      51: dup_x1
      52: putfield      #49                 // Field smy:F
      55: putfield      #44                 // Field cmy:F
      58: aload_0
      59: aload_0
      60: fconst_1
      61: dup_x1
      62: putfield      #38                 // Field sdx:F
      65: putfield      #39                 // Field cdx:F
      68: aload_0
      69: aload_0
      70: fconst_0
      71: dup_x1
      72: putfield      #40                 // Field sdy:F
      75: putfield      #41                 // Field cdy:F
      78: aload_0
      79: invokespecial #33                 // Method finish:()V
      82: return
      83: aload_0
      84: getfield      #34                 // Field cx0:F
      87: aload_0
      88: getfield      #35                 // Field sx0:F
      91: fcmpl
      92: ifne          107
      95: aload_0
      96: getfield      #36                 // Field cy0:F
      99: aload_0
     100: getfield      #37                 // Field sy0:F
     103: fcmpl
     104: ifeq          119
     107: aload_0
     108: aload_0
     109: getfield      #35                 // Field sx0:F
     112: aload_0
     113: getfield      #37                 // Field sy0:F
     116: invokevirtual #50                 // Method lineTo:(FF)V
     119: aload_0
     120: aload_0
     121: getfield      #39                 // Field cdx:F
     124: aload_0
     125: getfield      #41                 // Field cdy:F
     128: aload_0
     129: getfield      #34                 // Field cx0:F
     132: aload_0
     133: getfield      #36                 // Field cy0:F
     136: aload_0
     137: getfield      #38                 // Field sdx:F
     140: aload_0
     141: getfield      #40                 // Field sdy:F
     144: aload_0
     145: getfield      #43                 // Field cmx:F
     148: aload_0
     149: getfield      #44                 // Field cmy:F
     152: aload_0
     153: getfield      #48                 // Field smx:F
     156: aload_0
     157: getfield      #49                 // Field smy:F
     160: invokespecial #45                 // Method drawJoin:(FFFFFFFFFF)V
     163: aload_0
     164: aload_0
     165: getfield      #35                 // Field sx0:F
     168: aload_0
     169: getfield      #48                 // Field smx:F
     172: fadd
     173: aload_0
     174: getfield      #37                 // Field sy0:F
     177: aload_0
     178: getfield      #49                 // Field smy:F
     181: fadd
     182: invokespecial #46                 // Method emitLineTo:(FF)V
     185: aload_0
     186: aload_0
     187: getfield      #35                 // Field sx0:F
     190: aload_0
     191: getfield      #48                 // Field smx:F
     194: fsub
     195: aload_0
     196: getfield      #37                 // Field sy0:F
     199: aload_0
     200: getfield      #49                 // Field smy:F
     203: fsub
     204: invokespecial #47                 // Method emitMoveTo:(FF)V
     207: aload_0
     208: invokespecial #51                 // Method emitReverse:()V
     211: aload_0
     212: iconst_2
     213: putfield      #21                 // Field prev:I
     216: aload_0
     217: invokespecial #52                 // Method emitClose:()V
     220: return

  private void emitReverse();
    Code:
       0: aload_0
       1: getfield      #9                  // Field reverse:Lcom/sun/openpisces/Stroker$PolyStack;
       4: invokevirtual #53                 // Method com/sun/openpisces/Stroker$PolyStack.isEmpty:()Z
       7: ifne          24
      10: aload_0
      11: getfield      #9                  // Field reverse:Lcom/sun/openpisces/Stroker$PolyStack;
      14: aload_0
      15: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      18: invokevirtual #54                 // Method com/sun/openpisces/Stroker$PolyStack.pop:(Lcom/sun/javafx/geom/PathConsumer2D;)V
      21: goto          0
      24: return

  public void pathDone();
    Code:
       0: aload_0
       1: getfield      #21                 // Field prev:I
       4: iconst_1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #33                 // Method finish:()V
      12: aload_0
      13: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      16: invokeinterface #55,  1           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.pathDone:()V
      21: aload_0
      22: iconst_2
      23: putfield      #21                 // Field prev:I
      26: return

  private void finish();
    Code:
       0: aload_0
       1: getfield      #18                 // Field capStyle:I
       4: iconst_1
       5: if_icmpne     31
       8: aload_0
       9: aload_0
      10: getfield      #34                 // Field cx0:F
      13: aload_0
      14: getfield      #36                 // Field cy0:F
      17: aload_0
      18: getfield      #43                 // Field cmx:F
      21: aload_0
      22: getfield      #44                 // Field cmy:F
      25: invokespecial #56                 // Method drawRoundCap:(FFFF)V
      28: goto          103
      31: aload_0
      32: getfield      #18                 // Field capStyle:I
      35: iconst_2
      36: if_icmpne     103
      39: aload_0
      40: aload_0
      41: getfield      #34                 // Field cx0:F
      44: aload_0
      45: getfield      #44                 // Field cmy:F
      48: fsub
      49: aload_0
      50: getfield      #43                 // Field cmx:F
      53: fadd
      54: aload_0
      55: getfield      #36                 // Field cy0:F
      58: aload_0
      59: getfield      #43                 // Field cmx:F
      62: fadd
      63: aload_0
      64: getfield      #44                 // Field cmy:F
      67: fadd
      68: invokespecial #46                 // Method emitLineTo:(FF)V
      71: aload_0
      72: aload_0
      73: getfield      #34                 // Field cx0:F
      76: aload_0
      77: getfield      #44                 // Field cmy:F
      80: fsub
      81: aload_0
      82: getfield      #43                 // Field cmx:F
      85: fsub
      86: aload_0
      87: getfield      #36                 // Field cy0:F
      90: aload_0
      91: getfield      #43                 // Field cmx:F
      94: fadd
      95: aload_0
      96: getfield      #44                 // Field cmy:F
      99: fsub
     100: invokespecial #46                 // Method emitLineTo:(FF)V
     103: aload_0
     104: invokespecial #51                 // Method emitReverse:()V
     107: aload_0
     108: getfield      #18                 // Field capStyle:I
     111: iconst_1
     112: if_icmpne     140
     115: aload_0
     116: aload_0
     117: getfield      #35                 // Field sx0:F
     120: aload_0
     121: getfield      #37                 // Field sy0:F
     124: aload_0
     125: getfield      #48                 // Field smx:F
     128: fneg
     129: aload_0
     130: getfield      #49                 // Field smy:F
     133: fneg
     134: invokespecial #56                 // Method drawRoundCap:(FFFF)V
     137: goto          212
     140: aload_0
     141: getfield      #18                 // Field capStyle:I
     144: iconst_2
     145: if_icmpne     212
     148: aload_0
     149: aload_0
     150: getfield      #35                 // Field sx0:F
     153: aload_0
     154: getfield      #49                 // Field smy:F
     157: fadd
     158: aload_0
     159: getfield      #48                 // Field smx:F
     162: fsub
     163: aload_0
     164: getfield      #37                 // Field sy0:F
     167: aload_0
     168: getfield      #48                 // Field smx:F
     171: fsub
     172: aload_0
     173: getfield      #49                 // Field smy:F
     176: fsub
     177: invokespecial #46                 // Method emitLineTo:(FF)V
     180: aload_0
     181: aload_0
     182: getfield      #35                 // Field sx0:F
     185: aload_0
     186: getfield      #49                 // Field smy:F
     189: fadd
     190: aload_0
     191: getfield      #48                 // Field smx:F
     194: fadd
     195: aload_0
     196: getfield      #37                 // Field sy0:F
     199: aload_0
     200: getfield      #48                 // Field smx:F
     203: fsub
     204: aload_0
     205: getfield      #49                 // Field smy:F
     208: fadd
     209: invokespecial #46                 // Method emitLineTo:(FF)V
     212: aload_0
     213: invokespecial #52                 // Method emitClose:()V
     216: return

  private void emitMoveTo(float, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: fload_1
       5: fload_2
       6: invokeinterface #57,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.moveTo:(FF)V
      11: return

  private void emitLineTo(float, float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: fload_1
       5: fload_2
       6: invokeinterface #58,  3           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.lineTo:(FF)V
      11: return

  private void emitLineTo(float, float, boolean);
    Code:
       0: iload_3
       1: ifeq          16
       4: aload_0
       5: getfield      #9                  // Field reverse:Lcom/sun/openpisces/Stroker$PolyStack;
       8: fload_1
       9: fload_2
      10: invokevirtual #59                 // Method com/sun/openpisces/Stroker$PolyStack.pushLine:(FF)V
      13: goto          22
      16: aload_0
      17: fload_1
      18: fload_2
      19: invokespecial #46                 // Method emitLineTo:(FF)V
      22: return

  private void emitQuadTo(float, float, float, float, float, float, boolean);
    Code:
       0: iload         7
       2: ifeq          20
       5: aload_0
       6: getfield      #9                  // Field reverse:Lcom/sun/openpisces/Stroker$PolyStack;
       9: fload_1
      10: fload_2
      11: fload_3
      12: fload         4
      14: invokevirtual #60                 // Method com/sun/openpisces/Stroker$PolyStack.pushQuad:(FFFF)V
      17: goto          36
      20: aload_0
      21: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      24: fload_3
      25: fload         4
      27: fload         5
      29: fload         6
      31: invokeinterface #61,  5           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.quadTo:(FFFF)V
      36: return

  private void emitCurveTo(float, float, float, float, float, float, float, float, boolean);
    Code:
       0: iload         9
       2: ifeq          24
       5: aload_0
       6: getfield      #9                  // Field reverse:Lcom/sun/openpisces/Stroker$PolyStack;
       9: fload_1
      10: fload_2
      11: fload_3
      12: fload         4
      14: fload         5
      16: fload         6
      18: invokevirtual #62                 // Method com/sun/openpisces/Stroker$PolyStack.pushCubic:(FFFFFF)V
      21: goto          44
      24: aload_0
      25: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
      28: fload_3
      29: fload         4
      31: fload         5
      33: fload         6
      35: fload         7
      37: fload         8
      39: invokeinterface #63,  7           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.curveTo:(FFFFFF)V
      44: return

  private void emitClose();
    Code:
       0: aload_0
       1: getfield      #16                 // Field out:Lcom/sun/javafx/geom/PathConsumer2D;
       4: invokeinterface #64,  1           // InterfaceMethod com/sun/javafx/geom/PathConsumer2D.closePath:()V
       9: return

  private void drawJoin(float, float, float, float, float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #21                 // Field prev:I
       4: iconst_1
       5: if_icmpeq     48
       8: aload_0
       9: fload_3
      10: fload         9
      12: fadd
      13: fload         4
      15: fload         10
      17: fadd
      18: invokespecial #47                 // Method emitMoveTo:(FF)V
      21: aload_0
      22: fload         5
      24: putfield      #38                 // Field sdx:F
      27: aload_0
      28: fload         6
      30: putfield      #40                 // Field sdy:F
      33: aload_0
      34: fload         9
      36: putfield      #48                 // Field smx:F
      39: aload_0
      40: fload         10
      42: putfield      #49                 // Field smy:F
      45: goto          136
      48: fload_1
      49: fload_2
      50: fload         5
      52: fload         6
      54: invokestatic  #65                 // Method isCW:(FFFF)Z
      57: istore        11
      59: aload_0
      60: getfield      #19                 // Field joinStyle:I
      63: ifne          92
      66: aload_0
      67: fload_1
      68: fload_2
      69: fload_3
      70: fload         4
      72: fload         5
      74: fload         6
      76: fload         7
      78: fload         8
      80: fload         9
      82: fload         10
      84: iload         11
      86: invokespecial #66                 // Method drawMiter:(FFFFFFFFFFZ)V
      89: goto          119
      92: aload_0
      93: getfield      #19                 // Field joinStyle:I
      96: iconst_1
      97: if_icmpne     119
     100: aload_0
     101: fload_3
     102: fload         4
     104: fload         7
     106: fload         8
     108: fload         9
     110: fload         10
     112: iload         11
     114: ldc           #67                 // float 0.015258789f
     116: invokespecial #68                 // Method drawRoundJoin:(FFFFFFZF)V
     119: aload_0
     120: fload_3
     121: fload         4
     123: iload         11
     125: ifne          132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: invokespecial #32                 // Method emitLineTo:(FFZ)V
     136: aload_0
     137: iconst_1
     138: putfield      #21                 // Field prev:I
     141: return

  private static boolean within(float, float, float, float, float);
    Code:
       0: getstatic     #69                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: fload         4
       8: fconst_0
       9: fcmpl
      10: ifgt          23
      13: new           #70                 // class java/lang/AssertionError
      16: dup
      17: ldc           #71                 // String
      19: invokespecial #72                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      22: athrow
      23: fload_0
      24: fload_2
      25: fload         4
      27: invokestatic  #73                 // Method com/sun/openpisces/Helpers.within:(FFF)Z
      30: ifeq          47
      33: fload_1
      34: fload_3
      35: fload         4
      37: invokestatic  #73                 // Method com/sun/openpisces/Helpers.within:(FFF)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  private void getLineOffsets(float, float, float, float, float[], float[]);
    Code:
       0: fload_3
       1: fload_1
       2: fsub
       3: fload         4
       5: fload_2
       6: fsub
       7: aload_0
       8: getfield      #17                 // Field lineWidth2:F
      11: aload_0
      12: getfield      #5                  // Field offset:[[F
      15: iconst_0
      16: aaload
      17: invokestatic  #42                 // Method computeOffset:(FFF[F)V
      20: aload         5
      22: iconst_0
      23: fload_1
      24: aload_0
      25: getfield      #5                  // Field offset:[[F
      28: iconst_0
      29: aaload
      30: iconst_0
      31: faload
      32: fadd
      33: fastore
      34: aload         5
      36: iconst_1
      37: fload_2
      38: aload_0
      39: getfield      #5                  // Field offset:[[F
      42: iconst_0
      43: aaload
      44: iconst_1
      45: faload
      46: fadd
      47: fastore
      48: aload         5
      50: iconst_2
      51: fload_3
      52: aload_0
      53: getfield      #5                  // Field offset:[[F
      56: iconst_0
      57: aaload
      58: iconst_0
      59: faload
      60: fadd
      61: fastore
      62: aload         5
      64: iconst_3
      65: fload         4
      67: aload_0
      68: getfield      #5                  // Field offset:[[F
      71: iconst_0
      72: aaload
      73: iconst_1
      74: faload
      75: fadd
      76: fastore
      77: aload         6
      79: iconst_0
      80: fload_1
      81: aload_0
      82: getfield      #5                  // Field offset:[[F
      85: iconst_0
      86: aaload
      87: iconst_0
      88: faload
      89: fsub
      90: fastore
      91: aload         6
      93: iconst_1
      94: fload_2
      95: aload_0
      96: getfield      #5                  // Field offset:[[F
      99: iconst_0
     100: aaload
     101: iconst_1
     102: faload
     103: fsub
     104: fastore
     105: aload         6
     107: iconst_2
     108: fload_3
     109: aload_0
     110: getfield      #5                  // Field offset:[[F
     113: iconst_0
     114: aaload
     115: iconst_0
     116: faload
     117: fsub
     118: fastore
     119: aload         6
     121: iconst_3
     122: fload         4
     124: aload_0
     125: getfield      #5                  // Field offset:[[F
     128: iconst_0
     129: aaload
     130: iconst_1
     131: faload
     132: fsub
     133: fastore
     134: return

  private int computeOffsetCubic(float[], int, float[], float[]);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: faload
       5: fstore        5
       7: aload_1
       8: iload_2
       9: iconst_1
      10: iadd
      11: faload
      12: fstore        6
      14: aload_1
      15: iload_2
      16: iconst_2
      17: iadd
      18: faload
      19: fstore        7
      21: aload_1
      22: iload_2
      23: iconst_3
      24: iadd
      25: faload
      26: fstore        8
      28: aload_1
      29: iload_2
      30: iconst_4
      31: iadd
      32: faload
      33: fstore        9
      35: aload_1
      36: iload_2
      37: iconst_5
      38: iadd
      39: faload
      40: fstore        10
      42: aload_1
      43: iload_2
      44: bipush        6
      46: iadd
      47: faload
      48: fstore        11
      50: aload_1
      51: iload_2
      52: bipush        7
      54: iadd
      55: faload
      56: fstore        12
      58: fload         11
      60: fload         9
      62: fsub
      63: fstore        13
      65: fload         12
      67: fload         10
      69: fsub
      70: fstore        14
      72: fload         7
      74: fload         5
      76: fsub
      77: fstore        15
      79: fload         8
      81: fload         6
      83: fsub
      84: fstore        16
      86: fload         5
      88: fload         6
      90: fload         7
      92: fload         8
      94: ldc           #74                 // float 6.0f
      96: fload         8
      98: invokestatic  #75                 // Method java/lang/Math.ulp:(F)F
     101: fmul
     102: invokestatic  #76                 // Method within:(FFFFF)Z
     105: istore        17
     107: fload         9
     109: fload         10
     111: fload         11
     113: fload         12
     115: ldc           #74                 // float 6.0f
     117: fload         12
     119: invokestatic  #75                 // Method java/lang/Math.ulp:(F)F
     122: fmul
     123: invokestatic  #76                 // Method within:(FFFFF)Z
     126: istore        18
     128: iload         17
     130: ifeq          155
     133: iload         18
     135: ifeq          155
     138: aload_0
     139: fload         5
     141: fload         6
     143: fload         11
     145: fload         12
     147: aload_3
     148: aload         4
     150: invokespecial #77                 // Method getLineOffsets:(FFFF[F[F)V
     153: iconst_4
     154: ireturn
     155: iload         17
     157: ifeq          177
     160: fload         9
     162: fload         5
     164: fsub
     165: fstore        15
     167: fload         10
     169: fload         6
     171: fsub
     172: fstore        16
     174: goto          196
     177: iload         18
     179: ifeq          196
     182: fload         11
     184: fload         7
     186: fsub
     187: fstore        13
     189: fload         12
     191: fload         8
     193: fsub
     194: fstore        14
     196: fload         15
     198: fload         13
     200: fmul
     201: fload         16
     203: fload         14
     205: fmul
     206: fadd
     207: fstore        19
     209: fload         19
     211: fload         19
     213: fmul
     214: fstore        19
     216: fload         15
     218: fload         15
     220: fmul
     221: fload         16
     223: fload         16
     225: fmul
     226: fadd
     227: fstore        20
     229: fload         13
     231: fload         13
     233: fmul
     234: fload         14
     236: fload         14
     238: fmul
     239: fadd
     240: fstore        21
     242: fload         19
     244: fload         20
     246: fload         21
     248: fmul
     249: ldc           #78                 // float 4.0f
     251: fload         19
     253: invokestatic  #75                 // Method java/lang/Math.ulp:(F)F
     256: fmul
     257: invokestatic  #73                 // Method com/sun/openpisces/Helpers.within:(FFF)Z
     260: ifeq          280
     263: aload_0
     264: fload         5
     266: fload         6
     268: fload         11
     270: fload         12
     272: aload_3
     273: aload         4
     275: invokespecial #77                 // Method getLineOffsets:(FFFF[F[F)V
     278: iconst_4
     279: ireturn
     280: ldc           #79                 // float 0.125f
     282: fload         5
     284: ldc           #80                 // float 3.0f
     286: fload         7
     288: fload         9
     290: fadd
     291: fmul
     292: fadd
     293: fload         11
     295: fadd
     296: fmul
     297: fstore        22
     299: ldc           #79                 // float 0.125f
     301: fload         6
     303: ldc           #80                 // float 3.0f
     305: fload         8
     307: fload         10
     309: fadd
     310: fmul
     311: fadd
     312: fload         12
     314: fadd
     315: fmul
     316: fstore        23
     318: fload         9
     320: fload         11
     322: fadd
     323: fload         5
     325: fsub
     326: fload         7
     328: fsub
     329: fstore        24
     331: fload         10
     333: fload         12
     335: fadd
     336: fload         6
     338: fsub
     339: fload         8
     341: fsub
     342: fstore        25
     344: fload         15
     346: fload         16
     348: aload_0
     349: getfield      #17                 // Field lineWidth2:F
     352: aload_0
     353: getfield      #5                  // Field offset:[[F
     356: iconst_0
     357: aaload
     358: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     361: fload         24
     363: fload         25
     365: aload_0
     366: getfield      #17                 // Field lineWidth2:F
     369: aload_0
     370: getfield      #5                  // Field offset:[[F
     373: iconst_1
     374: aaload
     375: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     378: fload         13
     380: fload         14
     382: aload_0
     383: getfield      #17                 // Field lineWidth2:F
     386: aload_0
     387: getfield      #5                  // Field offset:[[F
     390: iconst_2
     391: aaload
     392: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     395: fload         5
     397: aload_0
     398: getfield      #5                  // Field offset:[[F
     401: iconst_0
     402: aaload
     403: iconst_0
     404: faload
     405: fadd
     406: fstore        26
     408: fload         6
     410: aload_0
     411: getfield      #5                  // Field offset:[[F
     414: iconst_0
     415: aaload
     416: iconst_1
     417: faload
     418: fadd
     419: fstore        27
     421: fload         22
     423: aload_0
     424: getfield      #5                  // Field offset:[[F
     427: iconst_1
     428: aaload
     429: iconst_0
     430: faload
     431: fadd
     432: fstore        28
     434: fload         23
     436: aload_0
     437: getfield      #5                  // Field offset:[[F
     440: iconst_1
     441: aaload
     442: iconst_1
     443: faload
     444: fadd
     445: fstore        29
     447: fload         11
     449: aload_0
     450: getfield      #5                  // Field offset:[[F
     453: iconst_2
     454: aaload
     455: iconst_0
     456: faload
     457: fadd
     458: fstore        30
     460: fload         12
     462: aload_0
     463: getfield      #5                  // Field offset:[[F
     466: iconst_2
     467: aaload
     468: iconst_1
     469: faload
     470: fadd
     471: fstore        31
     473: ldc           #78                 // float 4.0f
     475: ldc           #80                 // float 3.0f
     477: fload         15
     479: fload         14
     481: fmul
     482: fload         16
     484: fload         13
     486: fmul
     487: fsub
     488: fmul
     489: fdiv
     490: fstore        32
     492: fconst_2
     493: fload         28
     495: fmul
     496: fload         26
     498: fsub
     499: fload         30
     501: fsub
     502: fstore        33
     504: fconst_2
     505: fload         29
     507: fmul
     508: fload         27
     510: fsub
     511: fload         31
     513: fsub
     514: fstore        34
     516: fload         32
     518: fload         14
     520: fload         33
     522: fmul
     523: fload         13
     525: fload         34
     527: fmul
     528: fsub
     529: fmul
     530: fstore        35
     532: fload         32
     534: fload         15
     536: fload         34
     538: fmul
     539: fload         16
     541: fload         33
     543: fmul
     544: fsub
     545: fmul
     546: fstore        36
     548: fload         26
     550: fload         35
     552: fload         15
     554: fmul
     555: fadd
     556: fstore        37
     558: fload         27
     560: fload         35
     562: fload         16
     564: fmul
     565: fadd
     566: fstore        38
     568: fload         30
     570: fload         36
     572: fload         13
     574: fmul
     575: fadd
     576: fstore        39
     578: fload         31
     580: fload         36
     582: fload         14
     584: fmul
     585: fadd
     586: fstore        40
     588: aload_3
     589: iconst_0
     590: fload         26
     592: fastore
     593: aload_3
     594: iconst_1
     595: fload         27
     597: fastore
     598: aload_3
     599: iconst_2
     600: fload         37
     602: fastore
     603: aload_3
     604: iconst_3
     605: fload         38
     607: fastore
     608: aload_3
     609: iconst_4
     610: fload         39
     612: fastore
     613: aload_3
     614: iconst_5
     615: fload         40
     617: fastore
     618: aload_3
     619: bipush        6
     621: fload         30
     623: fastore
     624: aload_3
     625: bipush        7
     627: fload         31
     629: fastore
     630: fload         5
     632: aload_0
     633: getfield      #5                  // Field offset:[[F
     636: iconst_0
     637: aaload
     638: iconst_0
     639: faload
     640: fsub
     641: fstore        26
     643: fload         6
     645: aload_0
     646: getfield      #5                  // Field offset:[[F
     649: iconst_0
     650: aaload
     651: iconst_1
     652: faload
     653: fsub
     654: fstore        27
     656: fload         28
     658: fconst_2
     659: aload_0
     660: getfield      #5                  // Field offset:[[F
     663: iconst_1
     664: aaload
     665: iconst_0
     666: faload
     667: fmul
     668: fsub
     669: fstore        28
     671: fload         29
     673: fconst_2
     674: aload_0
     675: getfield      #5                  // Field offset:[[F
     678: iconst_1
     679: aaload
     680: iconst_1
     681: faload
     682: fmul
     683: fsub
     684: fstore        29
     686: fload         11
     688: aload_0
     689: getfield      #5                  // Field offset:[[F
     692: iconst_2
     693: aaload
     694: iconst_0
     695: faload
     696: fsub
     697: fstore        30
     699: fload         12
     701: aload_0
     702: getfield      #5                  // Field offset:[[F
     705: iconst_2
     706: aaload
     707: iconst_1
     708: faload
     709: fsub
     710: fstore        31
     712: fconst_2
     713: fload         28
     715: fmul
     716: fload         26
     718: fsub
     719: fload         30
     721: fsub
     722: fstore        33
     724: fconst_2
     725: fload         29
     727: fmul
     728: fload         27
     730: fsub
     731: fload         31
     733: fsub
     734: fstore        34
     736: fload         32
     738: fload         14
     740: fload         33
     742: fmul
     743: fload         13
     745: fload         34
     747: fmul
     748: fsub
     749: fmul
     750: fstore        35
     752: fload         32
     754: fload         15
     756: fload         34
     758: fmul
     759: fload         16
     761: fload         33
     763: fmul
     764: fsub
     765: fmul
     766: fstore        36
     768: fload         26
     770: fload         35
     772: fload         15
     774: fmul
     775: fadd
     776: fstore        37
     778: fload         27
     780: fload         35
     782: fload         16
     784: fmul
     785: fadd
     786: fstore        38
     788: fload         30
     790: fload         36
     792: fload         13
     794: fmul
     795: fadd
     796: fstore        39
     798: fload         31
     800: fload         36
     802: fload         14
     804: fmul
     805: fadd
     806: fstore        40
     808: aload         4
     810: iconst_0
     811: fload         26
     813: fastore
     814: aload         4
     816: iconst_1
     817: fload         27
     819: fastore
     820: aload         4
     822: iconst_2
     823: fload         37
     825: fastore
     826: aload         4
     828: iconst_3
     829: fload         38
     831: fastore
     832: aload         4
     834: iconst_4
     835: fload         39
     837: fastore
     838: aload         4
     840: iconst_5
     841: fload         40
     843: fastore
     844: aload         4
     846: bipush        6
     848: fload         30
     850: fastore
     851: aload         4
     853: bipush        7
     855: fload         31
     857: fastore
     858: bipush        8
     860: ireturn

  private int computeOffsetQuad(float[], int, float[], float[]);
    Code:
       0: aload_1
       1: iload_2
       2: iconst_0
       3: iadd
       4: faload
       5: fstore        5
       7: aload_1
       8: iload_2
       9: iconst_1
      10: iadd
      11: faload
      12: fstore        6
      14: aload_1
      15: iload_2
      16: iconst_2
      17: iadd
      18: faload
      19: fstore        7
      21: aload_1
      22: iload_2
      23: iconst_3
      24: iadd
      25: faload
      26: fstore        8
      28: aload_1
      29: iload_2
      30: iconst_4
      31: iadd
      32: faload
      33: fstore        9
      35: aload_1
      36: iload_2
      37: iconst_5
      38: iadd
      39: faload
      40: fstore        10
      42: fload         9
      44: fload         7
      46: fsub
      47: fstore        11
      49: fload         10
      51: fload         8
      53: fsub
      54: fstore        12
      56: fload         7
      58: fload         5
      60: fsub
      61: fstore        13
      63: fload         8
      65: fload         6
      67: fsub
      68: fstore        14
      70: fload         5
      72: fload         6
      74: fload         7
      76: fload         8
      78: ldc           #74                 // float 6.0f
      80: fload         8
      82: invokestatic  #75                 // Method java/lang/Math.ulp:(F)F
      85: fmul
      86: invokestatic  #76                 // Method within:(FFFFF)Z
      89: istore        15
      91: fload         7
      93: fload         8
      95: fload         9
      97: fload         10
      99: ldc           #74                 // float 6.0f
     101: fload         10
     103: invokestatic  #75                 // Method java/lang/Math.ulp:(F)F
     106: fmul
     107: invokestatic  #76                 // Method within:(FFFFF)Z
     110: istore        16
     112: iload         15
     114: ifne          122
     117: iload         16
     119: ifeq          139
     122: aload_0
     123: fload         5
     125: fload         6
     127: fload         9
     129: fload         10
     131: aload_3
     132: aload         4
     134: invokespecial #77                 // Method getLineOffsets:(FFFF[F[F)V
     137: iconst_4
     138: ireturn
     139: fload         13
     141: fload         11
     143: fmul
     144: fload         14
     146: fload         12
     148: fmul
     149: fadd
     150: fstore        17
     152: fload         17
     154: fload         17
     156: fmul
     157: fstore        17
     159: fload         13
     161: fload         13
     163: fmul
     164: fload         14
     166: fload         14
     168: fmul
     169: fadd
     170: fstore        18
     172: fload         11
     174: fload         11
     176: fmul
     177: fload         12
     179: fload         12
     181: fmul
     182: fadd
     183: fstore        19
     185: fload         17
     187: fload         18
     189: fload         19
     191: fmul
     192: ldc           #78                 // float 4.0f
     194: fload         17
     196: invokestatic  #75                 // Method java/lang/Math.ulp:(F)F
     199: fmul
     200: invokestatic  #73                 // Method com/sun/openpisces/Helpers.within:(FFF)Z
     203: ifeq          223
     206: aload_0
     207: fload         5
     209: fload         6
     211: fload         9
     213: fload         10
     215: aload_3
     216: aload         4
     218: invokespecial #77                 // Method getLineOffsets:(FFFF[F[F)V
     221: iconst_4
     222: ireturn
     223: fload         13
     225: fload         14
     227: aload_0
     228: getfield      #17                 // Field lineWidth2:F
     231: aload_0
     232: getfield      #5                  // Field offset:[[F
     235: iconst_0
     236: aaload
     237: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     240: fload         11
     242: fload         12
     244: aload_0
     245: getfield      #17                 // Field lineWidth2:F
     248: aload_0
     249: getfield      #5                  // Field offset:[[F
     252: iconst_1
     253: aaload
     254: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     257: fload         5
     259: aload_0
     260: getfield      #5                  // Field offset:[[F
     263: iconst_0
     264: aaload
     265: iconst_0
     266: faload
     267: fadd
     268: fstore        20
     270: fload         6
     272: aload_0
     273: getfield      #5                  // Field offset:[[F
     276: iconst_0
     277: aaload
     278: iconst_1
     279: faload
     280: fadd
     281: fstore        21
     283: fload         9
     285: aload_0
     286: getfield      #5                  // Field offset:[[F
     289: iconst_1
     290: aaload
     291: iconst_0
     292: faload
     293: fadd
     294: fstore        22
     296: fload         10
     298: aload_0
     299: getfield      #5                  // Field offset:[[F
     302: iconst_1
     303: aaload
     304: iconst_1
     305: faload
     306: fadd
     307: fstore        23
     309: aload_0
     310: fload         20
     312: fload         21
     314: fload         20
     316: fload         13
     318: fadd
     319: fload         21
     321: fload         14
     323: fadd
     324: fload         22
     326: fload         23
     328: fload         22
     330: fload         11
     332: fsub
     333: fload         23
     335: fload         12
     337: fsub
     338: aload_3
     339: iconst_2
     340: invokespecial #81                 // Method safecomputeMiter:(FFFFFFFF[FI)V
     343: aload_3
     344: iconst_0
     345: fload         20
     347: fastore
     348: aload_3
     349: iconst_1
     350: fload         21
     352: fastore
     353: aload_3
     354: iconst_4
     355: fload         22
     357: fastore
     358: aload_3
     359: iconst_5
     360: fload         23
     362: fastore
     363: fload         5
     365: aload_0
     366: getfield      #5                  // Field offset:[[F
     369: iconst_0
     370: aaload
     371: iconst_0
     372: faload
     373: fsub
     374: fstore        20
     376: fload         6
     378: aload_0
     379: getfield      #5                  // Field offset:[[F
     382: iconst_0
     383: aaload
     384: iconst_1
     385: faload
     386: fsub
     387: fstore        21
     389: fload         9
     391: aload_0
     392: getfield      #5                  // Field offset:[[F
     395: iconst_1
     396: aaload
     397: iconst_0
     398: faload
     399: fsub
     400: fstore        22
     402: fload         10
     404: aload_0
     405: getfield      #5                  // Field offset:[[F
     408: iconst_1
     409: aaload
     410: iconst_1
     411: faload
     412: fsub
     413: fstore        23
     415: aload_0
     416: fload         20
     418: fload         21
     420: fload         20
     422: fload         13
     424: fadd
     425: fload         21
     427: fload         14
     429: fadd
     430: fload         22
     432: fload         23
     434: fload         22
     436: fload         11
     438: fsub
     439: fload         23
     441: fload         12
     443: fsub
     444: aload         4
     446: iconst_2
     447: invokespecial #81                 // Method safecomputeMiter:(FFFFFFFF[FI)V
     450: aload         4
     452: iconst_0
     453: fload         20
     455: fastore
     456: aload         4
     458: iconst_1
     459: fload         21
     461: fastore
     462: aload         4
     464: iconst_4
     465: fload         22
     467: fastore
     468: aload         4
     470: iconst_5
     471: fload         23
     473: fastore
     474: bipush        6
     476: ireturn

  private static int findSubdivPoints(float[], float[], int, float);
    Code:
       0: aload_0
       1: iconst_2
       2: faload
       3: aload_0
       4: iconst_0
       5: faload
       6: fsub
       7: fstore        4
       9: aload_0
      10: iconst_3
      11: faload
      12: aload_0
      13: iconst_1
      14: faload
      15: fsub
      16: fstore        5
      18: fload         5
      20: fconst_0
      21: fcmpl
      22: ifeq          260
      25: fload         4
      27: fconst_0
      28: fcmpl
      29: ifeq          260
      32: fload         4
      34: fload         4
      36: fmul
      37: fload         5
      39: fload         5
      41: fmul
      42: fadd
      43: f2d
      44: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
      47: d2f
      48: fstore        6
      50: fload         4
      52: fload         6
      54: fdiv
      55: fstore        7
      57: fload         5
      59: fload         6
      61: fdiv
      62: fstore        8
      64: fload         7
      66: aload_0
      67: iconst_0
      68: faload
      69: fmul
      70: fload         8
      72: aload_0
      73: iconst_1
      74: faload
      75: fmul
      76: fadd
      77: fstore        9
      79: fload         7
      81: aload_0
      82: iconst_1
      83: faload
      84: fmul
      85: fload         8
      87: aload_0
      88: iconst_0
      89: faload
      90: fmul
      91: fsub
      92: fstore        10
      94: fload         7
      96: aload_0
      97: iconst_2
      98: faload
      99: fmul
     100: fload         8
     102: aload_0
     103: iconst_3
     104: faload
     105: fmul
     106: fadd
     107: fstore        11
     109: fload         7
     111: aload_0
     112: iconst_3
     113: faload
     114: fmul
     115: fload         8
     117: aload_0
     118: iconst_2
     119: faload
     120: fmul
     121: fsub
     122: fstore        12
     124: fload         7
     126: aload_0
     127: iconst_4
     128: faload
     129: fmul
     130: fload         8
     132: aload_0
     133: iconst_5
     134: faload
     135: fmul
     136: fadd
     137: fstore        13
     139: fload         7
     141: aload_0
     142: iconst_5
     143: faload
     144: fmul
     145: fload         8
     147: aload_0
     148: iconst_4
     149: faload
     150: fmul
     151: fsub
     152: fstore        14
     154: iload_2
     155: lookupswitch  { // 2
                     6: 239
                     8: 180
               default: 257
          }
     180: fload         7
     182: aload_0
     183: bipush        6
     185: faload
     186: fmul
     187: fload         8
     189: aload_0
     190: bipush        7
     192: faload
     193: fmul
     194: fadd
     195: fstore        15
     197: fload         7
     199: aload_0
     200: bipush        7
     202: faload
     203: fmul
     204: fload         8
     206: aload_0
     207: bipush        6
     209: faload
     210: fmul
     211: fsub
     212: fstore        16
     214: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     217: fload         9
     219: fload         10
     221: fload         11
     223: fload         12
     225: fload         13
     227: fload         14
     229: fload         15
     231: fload         16
     233: invokevirtual #83                 // Method com/sun/openpisces/Curve.set:(FFFFFFFF)V
     236: goto          257
     239: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     242: fload         9
     244: fload         10
     246: fload         11
     248: fload         12
     250: fload         13
     252: fload         14
     254: invokevirtual #84                 // Method com/sun/openpisces/Curve.set:(FFFFFF)V
     257: goto          268
     260: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     263: aload_0
     264: iload_2
     265: invokevirtual #85                 // Method com/sun/openpisces/Curve.set:([FI)V
     268: iconst_0
     269: istore        6
     271: iload         6
     273: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     276: aload_1
     277: iload         6
     279: invokevirtual #86                 // Method com/sun/openpisces/Curve.dxRoots:([FI)I
     282: iadd
     283: istore        6
     285: iload         6
     287: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     290: aload_1
     291: iload         6
     293: invokevirtual #87                 // Method com/sun/openpisces/Curve.dyRoots:([FI)I
     296: iadd
     297: istore        6
     299: iload_2
     300: bipush        8
     302: if_icmpne     319
     305: iload         6
     307: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     310: aload_1
     311: iload         6
     313: invokevirtual #88                 // Method com/sun/openpisces/Curve.infPoints:([FI)I
     316: iadd
     317: istore        6
     319: iload         6
     321: getstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
     324: aload_1
     325: iload         6
     327: fload_3
     328: ldc           #89                 // float 1.0E-4f
     330: invokevirtual #90                 // Method com/sun/openpisces/Curve.rootsOfROCMinusW:([FIFF)I
     333: iadd
     334: istore        6
     336: aload_1
     337: iconst_0
     338: iload         6
     340: ldc           #89                 // float 1.0E-4f
     342: ldc           #91                 // float 0.9999f
     344: invokestatic  #92                 // Method com/sun/openpisces/Helpers.filterOutNotInAB:([FIIFF)I
     347: istore        6
     349: aload_1
     350: iconst_0
     351: iload         6
     353: invokestatic  #93                 // Method com/sun/openpisces/Helpers.isort:([FII)V
     356: iload         6
     358: ireturn

  public void curveTo(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field middle:[F
       4: iconst_0
       5: aload_0
       6: getfield      #34                 // Field cx0:F
       9: fastore
      10: aload_0
      11: getfield      #11                 // Field middle:[F
      14: iconst_1
      15: aload_0
      16: getfield      #36                 // Field cy0:F
      19: fastore
      20: aload_0
      21: getfield      #11                 // Field middle:[F
      24: iconst_2
      25: fload_1
      26: fastore
      27: aload_0
      28: getfield      #11                 // Field middle:[F
      31: iconst_3
      32: fload_2
      33: fastore
      34: aload_0
      35: getfield      #11                 // Field middle:[F
      38: iconst_4
      39: fload_3
      40: fastore
      41: aload_0
      42: getfield      #11                 // Field middle:[F
      45: iconst_5
      46: fload         4
      48: fastore
      49: aload_0
      50: getfield      #11                 // Field middle:[F
      53: bipush        6
      55: fload         5
      57: fastore
      58: aload_0
      59: getfield      #11                 // Field middle:[F
      62: bipush        7
      64: fload         6
      66: fastore
      67: aload_0
      68: getfield      #11                 // Field middle:[F
      71: bipush        6
      73: faload
      74: fstore        7
      76: aload_0
      77: getfield      #11                 // Field middle:[F
      80: bipush        7
      82: faload
      83: fstore        8
      85: aload_0
      86: getfield      #11                 // Field middle:[F
      89: iconst_2
      90: faload
      91: aload_0
      92: getfield      #11                 // Field middle:[F
      95: iconst_0
      96: faload
      97: fsub
      98: fstore        9
     100: aload_0
     101: getfield      #11                 // Field middle:[F
     104: iconst_3
     105: faload
     106: aload_0
     107: getfield      #11                 // Field middle:[F
     110: iconst_1
     111: faload
     112: fsub
     113: fstore        10
     115: aload_0
     116: getfield      #11                 // Field middle:[F
     119: bipush        6
     121: faload
     122: aload_0
     123: getfield      #11                 // Field middle:[F
     126: iconst_4
     127: faload
     128: fsub
     129: fstore        11
     131: aload_0
     132: getfield      #11                 // Field middle:[F
     135: bipush        7
     137: faload
     138: aload_0
     139: getfield      #11                 // Field middle:[F
     142: iconst_5
     143: faload
     144: fsub
     145: fstore        12
     147: fload         9
     149: fconst_0
     150: fcmpl
     151: ifne          165
     154: fload         10
     156: fconst_0
     157: fcmpl
     158: ifne          165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: istore        13
     168: fload         11
     170: fconst_0
     171: fcmpl
     172: ifne          186
     175: fload         12
     177: fconst_0
     178: fcmpl
     179: ifne          186
     182: iconst_1
     183: goto          187
     186: iconst_0
     187: istore        14
     189: iload         13
     191: ifeq          270
     194: aload_0
     195: getfield      #11                 // Field middle:[F
     198: iconst_4
     199: faload
     200: aload_0
     201: getfield      #11                 // Field middle:[F
     204: iconst_0
     205: faload
     206: fsub
     207: fstore        9
     209: aload_0
     210: getfield      #11                 // Field middle:[F
     213: iconst_5
     214: faload
     215: aload_0
     216: getfield      #11                 // Field middle:[F
     219: iconst_1
     220: faload
     221: fsub
     222: fstore        10
     224: fload         9
     226: fconst_0
     227: fcmpl
     228: ifne          270
     231: fload         10
     233: fconst_0
     234: fcmpl
     235: ifne          270
     238: aload_0
     239: getfield      #11                 // Field middle:[F
     242: bipush        6
     244: faload
     245: aload_0
     246: getfield      #11                 // Field middle:[F
     249: iconst_0
     250: faload
     251: fsub
     252: fstore        9
     254: aload_0
     255: getfield      #11                 // Field middle:[F
     258: bipush        7
     260: faload
     261: aload_0
     262: getfield      #11                 // Field middle:[F
     265: iconst_1
     266: faload
     267: fsub
     268: fstore        10
     270: iload         14
     272: ifeq          353
     275: aload_0
     276: getfield      #11                 // Field middle:[F
     279: bipush        6
     281: faload
     282: aload_0
     283: getfield      #11                 // Field middle:[F
     286: iconst_2
     287: faload
     288: fsub
     289: fstore        11
     291: aload_0
     292: getfield      #11                 // Field middle:[F
     295: bipush        7
     297: faload
     298: aload_0
     299: getfield      #11                 // Field middle:[F
     302: iconst_3
     303: faload
     304: fsub
     305: fstore        12
     307: fload         11
     309: fconst_0
     310: fcmpl
     311: ifne          353
     314: fload         12
     316: fconst_0
     317: fcmpl
     318: ifne          353
     321: aload_0
     322: getfield      #11                 // Field middle:[F
     325: bipush        6
     327: faload
     328: aload_0
     329: getfield      #11                 // Field middle:[F
     332: iconst_0
     333: faload
     334: fsub
     335: fstore        11
     337: aload_0
     338: getfield      #11                 // Field middle:[F
     341: bipush        7
     343: faload
     344: aload_0
     345: getfield      #11                 // Field middle:[F
     348: iconst_1
     349: faload
     350: fsub
     351: fstore        12
     353: fload         9
     355: fconst_0
     356: fcmpl
     357: ifne          384
     360: fload         10
     362: fconst_0
     363: fcmpl
     364: ifne          384
     367: aload_0
     368: aload_0
     369: getfield      #11                 // Field middle:[F
     372: iconst_0
     373: faload
     374: aload_0
     375: getfield      #11                 // Field middle:[F
     378: iconst_1
     379: faload
     380: invokevirtual #50                 // Method lineTo:(FF)V
     383: return
     384: fload         9
     386: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     389: ldc           #95                 // float 0.1f
     391: fcmpg
     392: ifge          438
     395: fload         10
     397: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     400: ldc           #95                 // float 0.1f
     402: fcmpg
     403: ifge          438
     406: fload         9
     408: fload         9
     410: fmul
     411: fload         10
     413: fload         10
     415: fmul
     416: fadd
     417: f2d
     418: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
     421: d2f
     422: fstore        15
     424: fload         9
     426: fload         15
     428: fdiv
     429: fstore        9
     431: fload         10
     433: fload         15
     435: fdiv
     436: fstore        10
     438: fload         11
     440: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     443: ldc           #95                 // float 0.1f
     445: fcmpg
     446: ifge          492
     449: fload         12
     451: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     454: ldc           #95                 // float 0.1f
     456: fcmpg
     457: ifge          492
     460: fload         11
     462: fload         11
     464: fmul
     465: fload         12
     467: fload         12
     469: fmul
     470: fadd
     471: f2d
     472: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
     475: d2f
     476: fstore        15
     478: fload         11
     480: fload         15
     482: fdiv
     483: fstore        11
     485: fload         12
     487: fload         15
     489: fdiv
     490: fstore        12
     492: fload         9
     494: fload         10
     496: aload_0
     497: getfield      #17                 // Field lineWidth2:F
     500: aload_0
     501: getfield      #5                  // Field offset:[[F
     504: iconst_0
     505: aaload
     506: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     509: aload_0
     510: getfield      #5                  // Field offset:[[F
     513: iconst_0
     514: aaload
     515: iconst_0
     516: faload
     517: fstore        15
     519: aload_0
     520: getfield      #5                  // Field offset:[[F
     523: iconst_0
     524: aaload
     525: iconst_1
     526: faload
     527: fstore        16
     529: aload_0
     530: aload_0
     531: getfield      #39                 // Field cdx:F
     534: aload_0
     535: getfield      #41                 // Field cdy:F
     538: aload_0
     539: getfield      #34                 // Field cx0:F
     542: aload_0
     543: getfield      #36                 // Field cy0:F
     546: fload         9
     548: fload         10
     550: aload_0
     551: getfield      #43                 // Field cmx:F
     554: aload_0
     555: getfield      #44                 // Field cmy:F
     558: fload         15
     560: fload         16
     562: invokespecial #45                 // Method drawJoin:(FFFFFFFFFF)V
     565: aload_0
     566: getfield      #11                 // Field middle:[F
     569: aload_0
     570: getfield      #14                 // Field subdivTs:[F
     573: bipush        8
     575: aload_0
     576: getfield      #17                 // Field lineWidth2:F
     579: invokestatic  #96                 // Method findSubdivPoints:([F[FIF)I
     582: istore        17
     584: fconst_0
     585: fstore        18
     587: iconst_0
     588: istore        19
     590: iload         19
     592: iload         17
     594: if_icmpge     659
     597: aload_0
     598: getfield      #14                 // Field subdivTs:[F
     601: iload         19
     603: faload
     604: fstore        20
     606: fload         20
     608: fload         18
     610: fsub
     611: fconst_1
     612: fload         18
     614: fsub
     615: fdiv
     616: aload_0
     617: getfield      #11                 // Field middle:[F
     620: iload         19
     622: bipush        6
     624: imul
     625: aload_0
     626: getfield      #11                 // Field middle:[F
     629: iload         19
     631: bipush        6
     633: imul
     634: aload_0
     635: getfield      #11                 // Field middle:[F
     638: iload         19
     640: bipush        6
     642: imul
     643: bipush        6
     645: iadd
     646: invokestatic  #97                 // Method com/sun/openpisces/Helpers.subdivideCubicAt:(F[FI[FI[FI)V
     649: fload         20
     651: fstore        18
     653: iinc          19, 1
     656: goto          590
     659: iconst_0
     660: istore        19
     662: iconst_0
     663: istore        20
     665: iload         20
     667: iload         17
     669: if_icmpgt     919
     672: aload_0
     673: aload_0
     674: getfield      #11                 // Field middle:[F
     677: iload         20
     679: bipush        6
     681: imul
     682: aload_0
     683: getfield      #12                 // Field lp:[F
     686: aload_0
     687: getfield      #13                 // Field rp:[F
     690: invokespecial #98                 // Method computeOffsetCubic:([FI[F[F)I
     693: istore        19
     695: iload         19
     697: ifeq          913
     700: aload_0
     701: aload_0
     702: getfield      #12                 // Field lp:[F
     705: iconst_0
     706: faload
     707: aload_0
     708: getfield      #12                 // Field lp:[F
     711: iconst_1
     712: faload
     713: invokespecial #46                 // Method emitLineTo:(FF)V
     716: iload         19
     718: lookupswitch  { // 2
                     4: 857
                     8: 744
               default: 890
          }
     744: aload_0
     745: aload_0
     746: getfield      #12                 // Field lp:[F
     749: iconst_0
     750: faload
     751: aload_0
     752: getfield      #12                 // Field lp:[F
     755: iconst_1
     756: faload
     757: aload_0
     758: getfield      #12                 // Field lp:[F
     761: iconst_2
     762: faload
     763: aload_0
     764: getfield      #12                 // Field lp:[F
     767: iconst_3
     768: faload
     769: aload_0
     770: getfield      #12                 // Field lp:[F
     773: iconst_4
     774: faload
     775: aload_0
     776: getfield      #12                 // Field lp:[F
     779: iconst_5
     780: faload
     781: aload_0
     782: getfield      #12                 // Field lp:[F
     785: bipush        6
     787: faload
     788: aload_0
     789: getfield      #12                 // Field lp:[F
     792: bipush        7
     794: faload
     795: iconst_0
     796: invokespecial #29                 // Method emitCurveTo:(FFFFFFFFZ)V
     799: aload_0
     800: aload_0
     801: getfield      #13                 // Field rp:[F
     804: iconst_0
     805: faload
     806: aload_0
     807: getfield      #13                 // Field rp:[F
     810: iconst_1
     811: faload
     812: aload_0
     813: getfield      #13                 // Field rp:[F
     816: iconst_2
     817: faload
     818: aload_0
     819: getfield      #13                 // Field rp:[F
     822: iconst_3
     823: faload
     824: aload_0
     825: getfield      #13                 // Field rp:[F
     828: iconst_4
     829: faload
     830: aload_0
     831: getfield      #13                 // Field rp:[F
     834: iconst_5
     835: faload
     836: aload_0
     837: getfield      #13                 // Field rp:[F
     840: bipush        6
     842: faload
     843: aload_0
     844: getfield      #13                 // Field rp:[F
     847: bipush        7
     849: faload
     850: iconst_1
     851: invokespecial #29                 // Method emitCurveTo:(FFFFFFFFZ)V
     854: goto          890
     857: aload_0
     858: aload_0
     859: getfield      #12                 // Field lp:[F
     862: iconst_2
     863: faload
     864: aload_0
     865: getfield      #12                 // Field lp:[F
     868: iconst_3
     869: faload
     870: invokespecial #46                 // Method emitLineTo:(FF)V
     873: aload_0
     874: aload_0
     875: getfield      #13                 // Field rp:[F
     878: iconst_0
     879: faload
     880: aload_0
     881: getfield      #13                 // Field rp:[F
     884: iconst_1
     885: faload
     886: iconst_1
     887: invokespecial #32                 // Method emitLineTo:(FFZ)V
     890: aload_0
     891: aload_0
     892: getfield      #13                 // Field rp:[F
     895: iload         19
     897: iconst_2
     898: isub
     899: faload
     900: aload_0
     901: getfield      #13                 // Field rp:[F
     904: iload         19
     906: iconst_1
     907: isub
     908: faload
     909: iconst_1
     910: invokespecial #32                 // Method emitLineTo:(FFZ)V
     913: iinc          20, 1
     916: goto          665
     919: aload_0
     920: aload_0
     921: getfield      #12                 // Field lp:[F
     924: iload         19
     926: iconst_2
     927: isub
     928: faload
     929: aload_0
     930: getfield      #13                 // Field rp:[F
     933: iload         19
     935: iconst_2
     936: isub
     937: faload
     938: fsub
     939: fconst_2
     940: fdiv
     941: putfield      #43                 // Field cmx:F
     944: aload_0
     945: aload_0
     946: getfield      #12                 // Field lp:[F
     949: iload         19
     951: iconst_1
     952: isub
     953: faload
     954: aload_0
     955: getfield      #13                 // Field rp:[F
     958: iload         19
     960: iconst_1
     961: isub
     962: faload
     963: fsub
     964: fconst_2
     965: fdiv
     966: putfield      #44                 // Field cmy:F
     969: aload_0
     970: fload         11
     972: putfield      #39                 // Field cdx:F
     975: aload_0
     976: fload         12
     978: putfield      #41                 // Field cdy:F
     981: aload_0
     982: fload         7
     984: putfield      #34                 // Field cx0:F
     987: aload_0
     988: fload         8
     990: putfield      #36                 // Field cy0:F
     993: aload_0
     994: iconst_1
     995: putfield      #21                 // Field prev:I
     998: return

  public void quadTo(float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #11                 // Field middle:[F
       4: iconst_0
       5: aload_0
       6: getfield      #34                 // Field cx0:F
       9: fastore
      10: aload_0
      11: getfield      #11                 // Field middle:[F
      14: iconst_1
      15: aload_0
      16: getfield      #36                 // Field cy0:F
      19: fastore
      20: aload_0
      21: getfield      #11                 // Field middle:[F
      24: iconst_2
      25: fload_1
      26: fastore
      27: aload_0
      28: getfield      #11                 // Field middle:[F
      31: iconst_3
      32: fload_2
      33: fastore
      34: aload_0
      35: getfield      #11                 // Field middle:[F
      38: iconst_4
      39: fload_3
      40: fastore
      41: aload_0
      42: getfield      #11                 // Field middle:[F
      45: iconst_5
      46: fload         4
      48: fastore
      49: aload_0
      50: getfield      #11                 // Field middle:[F
      53: iconst_4
      54: faload
      55: fstore        5
      57: aload_0
      58: getfield      #11                 // Field middle:[F
      61: iconst_5
      62: faload
      63: fstore        6
      65: aload_0
      66: getfield      #11                 // Field middle:[F
      69: iconst_2
      70: faload
      71: aload_0
      72: getfield      #11                 // Field middle:[F
      75: iconst_0
      76: faload
      77: fsub
      78: fstore        7
      80: aload_0
      81: getfield      #11                 // Field middle:[F
      84: iconst_3
      85: faload
      86: aload_0
      87: getfield      #11                 // Field middle:[F
      90: iconst_1
      91: faload
      92: fsub
      93: fstore        8
      95: aload_0
      96: getfield      #11                 // Field middle:[F
      99: iconst_4
     100: faload
     101: aload_0
     102: getfield      #11                 // Field middle:[F
     105: iconst_2
     106: faload
     107: fsub
     108: fstore        9
     110: aload_0
     111: getfield      #11                 // Field middle:[F
     114: iconst_5
     115: faload
     116: aload_0
     117: getfield      #11                 // Field middle:[F
     120: iconst_3
     121: faload
     122: fsub
     123: fstore        10
     125: fload         7
     127: fconst_0
     128: fcmpl
     129: ifne          139
     132: fload         8
     134: fconst_0
     135: fcmpl
     136: ifeq          153
     139: fload         9
     141: fconst_0
     142: fcmpl
     143: ifne          189
     146: fload         10
     148: fconst_0
     149: fcmpl
     150: ifne          189
     153: aload_0
     154: getfield      #11                 // Field middle:[F
     157: iconst_4
     158: faload
     159: aload_0
     160: getfield      #11                 // Field middle:[F
     163: iconst_0
     164: faload
     165: fsub
     166: dup
     167: fstore        9
     169: fstore        7
     171: aload_0
     172: getfield      #11                 // Field middle:[F
     175: iconst_5
     176: faload
     177: aload_0
     178: getfield      #11                 // Field middle:[F
     181: iconst_1
     182: faload
     183: fsub
     184: dup
     185: fstore        10
     187: fstore        8
     189: fload         7
     191: fconst_0
     192: fcmpl
     193: ifne          220
     196: fload         8
     198: fconst_0
     199: fcmpl
     200: ifne          220
     203: aload_0
     204: aload_0
     205: getfield      #11                 // Field middle:[F
     208: iconst_0
     209: faload
     210: aload_0
     211: getfield      #11                 // Field middle:[F
     214: iconst_1
     215: faload
     216: invokevirtual #50                 // Method lineTo:(FF)V
     219: return
     220: fload         7
     222: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     225: ldc           #95                 // float 0.1f
     227: fcmpg
     228: ifge          274
     231: fload         8
     233: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     236: ldc           #95                 // float 0.1f
     238: fcmpg
     239: ifge          274
     242: fload         7
     244: fload         7
     246: fmul
     247: fload         8
     249: fload         8
     251: fmul
     252: fadd
     253: f2d
     254: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
     257: d2f
     258: fstore        11
     260: fload         7
     262: fload         11
     264: fdiv
     265: fstore        7
     267: fload         8
     269: fload         11
     271: fdiv
     272: fstore        8
     274: fload         9
     276: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     279: ldc           #95                 // float 0.1f
     281: fcmpg
     282: ifge          328
     285: fload         10
     287: invokestatic  #94                 // Method java/lang/Math.abs:(F)F
     290: ldc           #95                 // float 0.1f
     292: fcmpg
     293: ifge          328
     296: fload         9
     298: fload         9
     300: fmul
     301: fload         10
     303: fload         10
     305: fmul
     306: fadd
     307: f2d
     308: invokestatic  #22                 // Method java/lang/Math.sqrt:(D)D
     311: d2f
     312: fstore        11
     314: fload         9
     316: fload         11
     318: fdiv
     319: fstore        9
     321: fload         10
     323: fload         11
     325: fdiv
     326: fstore        10
     328: fload         7
     330: fload         8
     332: aload_0
     333: getfield      #17                 // Field lineWidth2:F
     336: aload_0
     337: getfield      #5                  // Field offset:[[F
     340: iconst_0
     341: aaload
     342: invokestatic  #42                 // Method computeOffset:(FFF[F)V
     345: aload_0
     346: getfield      #5                  // Field offset:[[F
     349: iconst_0
     350: aaload
     351: iconst_0
     352: faload
     353: fstore        11
     355: aload_0
     356: getfield      #5                  // Field offset:[[F
     359: iconst_0
     360: aaload
     361: iconst_1
     362: faload
     363: fstore        12
     365: aload_0
     366: aload_0
     367: getfield      #39                 // Field cdx:F
     370: aload_0
     371: getfield      #41                 // Field cdy:F
     374: aload_0
     375: getfield      #34                 // Field cx0:F
     378: aload_0
     379: getfield      #36                 // Field cy0:F
     382: fload         7
     384: fload         8
     386: aload_0
     387: getfield      #43                 // Field cmx:F
     390: aload_0
     391: getfield      #44                 // Field cmy:F
     394: fload         11
     396: fload         12
     398: invokespecial #45                 // Method drawJoin:(FFFFFFFFFF)V
     401: aload_0
     402: getfield      #11                 // Field middle:[F
     405: aload_0
     406: getfield      #14                 // Field subdivTs:[F
     409: bipush        6
     411: aload_0
     412: getfield      #17                 // Field lineWidth2:F
     415: invokestatic  #96                 // Method findSubdivPoints:([F[FIF)I
     418: istore        13
     420: fconst_0
     421: fstore        14
     423: iconst_0
     424: istore        15
     426: iload         15
     428: iload         13
     430: if_icmpge     491
     433: aload_0
     434: getfield      #14                 // Field subdivTs:[F
     437: iload         15
     439: faload
     440: fstore        16
     442: fload         16
     444: fload         14
     446: fsub
     447: fconst_1
     448: fload         14
     450: fsub
     451: fdiv
     452: aload_0
     453: getfield      #11                 // Field middle:[F
     456: iload         15
     458: iconst_4
     459: imul
     460: aload_0
     461: getfield      #11                 // Field middle:[F
     464: iload         15
     466: iconst_4
     467: imul
     468: aload_0
     469: getfield      #11                 // Field middle:[F
     472: iload         15
     474: iconst_4
     475: imul
     476: iconst_4
     477: iadd
     478: invokestatic  #99                 // Method com/sun/openpisces/Helpers.subdivideQuadAt:(F[FI[FI[FI)V
     481: fload         16
     483: fstore        14
     485: iinc          15, 1
     488: goto          426
     491: iconst_0
     492: istore        15
     494: iconst_0
     495: istore        16
     497: iload         16
     499: iload         13
     501: if_icmpgt     723
     504: aload_0
     505: aload_0
     506: getfield      #11                 // Field middle:[F
     509: iload         16
     511: iconst_4
     512: imul
     513: aload_0
     514: getfield      #12                 // Field lp:[F
     517: aload_0
     518: getfield      #13                 // Field rp:[F
     521: invokespecial #100                // Method computeOffsetQuad:([FI[F[F)I
     524: istore        15
     526: iload         15
     528: ifeq          717
     531: aload_0
     532: aload_0
     533: getfield      #12                 // Field lp:[F
     536: iconst_0
     537: faload
     538: aload_0
     539: getfield      #12                 // Field lp:[F
     542: iconst_1
     543: faload
     544: invokespecial #46                 // Method emitLineTo:(FF)V
     547: iload         15
     549: lookupswitch  { // 2
                     4: 661
                     6: 576
               default: 694
          }
     576: aload_0
     577: aload_0
     578: getfield      #12                 // Field lp:[F
     581: iconst_0
     582: faload
     583: aload_0
     584: getfield      #12                 // Field lp:[F
     587: iconst_1
     588: faload
     589: aload_0
     590: getfield      #12                 // Field lp:[F
     593: iconst_2
     594: faload
     595: aload_0
     596: getfield      #12                 // Field lp:[F
     599: iconst_3
     600: faload
     601: aload_0
     602: getfield      #12                 // Field lp:[F
     605: iconst_4
     606: faload
     607: aload_0
     608: getfield      #12                 // Field lp:[F
     611: iconst_5
     612: faload
     613: iconst_0
     614: invokespecial #101                // Method emitQuadTo:(FFFFFFZ)V
     617: aload_0
     618: aload_0
     619: getfield      #13                 // Field rp:[F
     622: iconst_0
     623: faload
     624: aload_0
     625: getfield      #13                 // Field rp:[F
     628: iconst_1
     629: faload
     630: aload_0
     631: getfield      #13                 // Field rp:[F
     634: iconst_2
     635: faload
     636: aload_0
     637: getfield      #13                 // Field rp:[F
     640: iconst_3
     641: faload
     642: aload_0
     643: getfield      #13                 // Field rp:[F
     646: iconst_4
     647: faload
     648: aload_0
     649: getfield      #13                 // Field rp:[F
     652: iconst_5
     653: faload
     654: iconst_1
     655: invokespecial #101                // Method emitQuadTo:(FFFFFFZ)V
     658: goto          694
     661: aload_0
     662: aload_0
     663: getfield      #12                 // Field lp:[F
     666: iconst_2
     667: faload
     668: aload_0
     669: getfield      #12                 // Field lp:[F
     672: iconst_3
     673: faload
     674: invokespecial #46                 // Method emitLineTo:(FF)V
     677: aload_0
     678: aload_0
     679: getfield      #13                 // Field rp:[F
     682: iconst_0
     683: faload
     684: aload_0
     685: getfield      #13                 // Field rp:[F
     688: iconst_1
     689: faload
     690: iconst_1
     691: invokespecial #32                 // Method emitLineTo:(FFZ)V
     694: aload_0
     695: aload_0
     696: getfield      #13                 // Field rp:[F
     699: iload         15
     701: iconst_2
     702: isub
     703: faload
     704: aload_0
     705: getfield      #13                 // Field rp:[F
     708: iload         15
     710: iconst_1
     711: isub
     712: faload
     713: iconst_1
     714: invokespecial #32                 // Method emitLineTo:(FFZ)V
     717: iinc          16, 1
     720: goto          497
     723: aload_0
     724: aload_0
     725: getfield      #12                 // Field lp:[F
     728: iload         15
     730: iconst_2
     731: isub
     732: faload
     733: aload_0
     734: getfield      #13                 // Field rp:[F
     737: iload         15
     739: iconst_2
     740: isub
     741: faload
     742: fsub
     743: fconst_2
     744: fdiv
     745: putfield      #43                 // Field cmx:F
     748: aload_0
     749: aload_0
     750: getfield      #12                 // Field lp:[F
     753: iload         15
     755: iconst_1
     756: isub
     757: faload
     758: aload_0
     759: getfield      #13                 // Field rp:[F
     762: iload         15
     764: iconst_1
     765: isub
     766: faload
     767: fsub
     768: fconst_2
     769: fdiv
     770: putfield      #44                 // Field cmy:F
     773: aload_0
     774: fload         9
     776: putfield      #39                 // Field cdx:F
     779: aload_0
     780: fload         10
     782: putfield      #41                 // Field cdy:F
     785: aload_0
     786: fload         5
     788: putfield      #34                 // Field cx0:F
     791: aload_0
     792: fload         6
     794: putfield      #36                 // Field cy0:F
     797: aload_0
     798: iconst_1
     799: putfield      #21                 // Field prev:I
     802: return

  static {};
    Code:
       0: ldc           #10                 // class com/sun/openpisces/Stroker
       2: invokevirtual #102                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #69                 // Field $assertionsDisabled:Z
      16: new           #103                // class com/sun/openpisces/Curve
      19: dup
      20: invokespecial #104                // Method com/sun/openpisces/Curve."<init>":()V
      23: putstatic     #82                 // Field c:Lcom/sun/openpisces/Curve;
      26: return
}
