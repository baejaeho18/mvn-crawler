Compiled from "SplineInterpolator.java"
public class com.sun.scenario.animation.SplineInterpolator extends javafx.animation.Interpolator {
  private final double x1;

  private final double y1;

  private final double x2;

  private final double y2;

  private final boolean isCurveLinear;

  private static final int SAMPLE_SIZE;

  private static final double SAMPLE_INCREMENT;

  private final double[] xSamples;

  public com.sun.scenario.animation.SplineInterpolator(double, double, double, double);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javafx/animation/Interpolator."<init>":()V
       4: aload_0
       5: bipush        17
       7: newarray       double
       9: putfield      #3                  // Field xSamples:[D
      12: dload_1
      13: dconst_0
      14: dcmpg
      15: iflt          64
      18: dload_1
      19: dconst_1
      20: dcmpl
      21: ifgt          64
      24: dload_3
      25: dconst_0
      26: dcmpg
      27: iflt          64
      30: dload_3
      31: dconst_1
      32: dcmpl
      33: ifgt          64
      36: dload         5
      38: dconst_0
      39: dcmpg
      40: iflt          64
      43: dload         5
      45: dconst_1
      46: dcmpl
      47: ifgt          64
      50: dload         7
      52: dconst_0
      53: dcmpg
      54: iflt          64
      57: dload         7
      59: dconst_1
      60: dcmpl
      61: ifle          74
      64: new           #4                  // class java/lang/IllegalArgumentException
      67: dup
      68: ldc           #5                  // String Control point coordinates must all be in range [0,1]
      70: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: dload_1
      76: putfield      #7                  // Field x1:D
      79: aload_0
      80: dload_3
      81: putfield      #8                  // Field y1:D
      84: aload_0
      85: dload         5
      87: putfield      #9                  // Field x2:D
      90: aload_0
      91: dload         7
      93: putfield      #10                 // Field y2:D
      96: aload_0
      97: aload_0
      98: getfield      #7                  // Field x1:D
     101: aload_0
     102: getfield      #8                  // Field y1:D
     105: dcmpl
     106: ifne          125
     109: aload_0
     110: getfield      #9                  // Field x2:D
     113: aload_0
     114: getfield      #10                 // Field y2:D
     117: dcmpl
     118: ifne          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: putfield      #11                 // Field isCurveLinear:Z
     129: aload_0
     130: getfield      #11                 // Field isCurveLinear:Z
     133: ifne          178
     136: iconst_0
     137: istore        9
     139: iload         9
     141: bipush        17
     143: if_icmpge     178
     146: aload_0
     147: getfield      #3                  // Field xSamples:[D
     150: iload         9
     152: aload_0
     153: iload         9
     155: i2d
     156: ldc2_w        #12                 // double 0.0625d
     159: dmul
     160: aload_0
     161: getfield      #7                  // Field x1:D
     164: aload_0
     165: getfield      #9                  // Field x2:D
     168: invokespecial #14                 // Method eval:(DDD)D
     171: dastore
     172: iinc          9, 1
     175: goto          139
     178: return

  public double getX1();
    Code:
       0: aload_0
       1: getfield      #7                  // Field x1:D
       4: dreturn

  public double getY1();
    Code:
       0: aload_0
       1: getfield      #8                  // Field y1:D
       4: dreturn

  public double getX2();
    Code:
       0: aload_0
       1: getfield      #9                  // Field x2:D
       4: dreturn

  public double getY2();
    Code:
       0: aload_0
       1: getfield      #10                 // Field y2:D
       4: dreturn

  public int hashCode();
    Code:
       0: bipush        7
       2: istore_1
       3: bipush        19
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #7                  // Field x1:D
      11: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      14: aload_0
      15: getfield      #7                  // Field x1:D
      18: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      21: bipush        32
      23: lushr
      24: lxor
      25: l2i
      26: iadd
      27: istore_1
      28: bipush        19
      30: iload_1
      31: imul
      32: aload_0
      33: getfield      #8                  // Field y1:D
      36: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      39: aload_0
      40: getfield      #8                  // Field y1:D
      43: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      46: bipush        32
      48: lushr
      49: lxor
      50: l2i
      51: iadd
      52: istore_1
      53: bipush        19
      55: iload_1
      56: imul
      57: aload_0
      58: getfield      #9                  // Field x2:D
      61: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      64: aload_0
      65: getfield      #9                  // Field x2:D
      68: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      71: bipush        32
      73: lushr
      74: lxor
      75: l2i
      76: iadd
      77: istore_1
      78: bipush        19
      80: iload_1
      81: imul
      82: aload_0
      83: getfield      #10                 // Field y2:D
      86: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      89: aload_0
      90: getfield      #10                 // Field y2:D
      93: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      96: bipush        32
      98: lushr
      99: lxor
     100: l2i
     101: iadd
     102: istore_1
     103: iload_1
     104: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #1                  // class com/sun/scenario/animation/SplineInterpolator
      23: astore_2
      24: aload_0
      25: getfield      #7                  // Field x1:D
      28: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      31: aload_2
      32: getfield      #7                  // Field x1:D
      35: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      38: lcmp
      39: ifeq          44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: getfield      #8                  // Field y1:D
      48: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      51: aload_2
      52: getfield      #8                  // Field y1:D
      55: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      58: lcmp
      59: ifeq          64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #9                  // Field x2:D
      68: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      71: aload_2
      72: getfield      #9                  // Field x2:D
      75: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      78: lcmp
      79: ifeq          84
      82: iconst_0
      83: ireturn
      84: aload_0
      85: getfield      #10                 // Field y2:D
      88: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      91: aload_2
      92: getfield      #10                 // Field y2:D
      95: invokestatic  #15                 // Method java/lang/Double.doubleToLongBits:(D)J
      98: lcmp
      99: ifeq          104
     102: iconst_0
     103: ireturn
     104: iconst_1
     105: ireturn

  public double curve(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_1
       8: dcmpl
       9: ifle          22
      12: new           #4                  // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #17                 // String x must be in range [0,1]
      18: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #11                 // Field isCurveLinear:Z
      26: ifne          41
      29: dload_1
      30: dconst_0
      31: dcmpl
      32: ifeq          41
      35: dload_1
      36: dconst_1
      37: dcmpl
      38: ifne          43
      41: dload_1
      42: dreturn
      43: aload_0
      44: aload_0
      45: dload_1
      46: invokespecial #18                 // Method findTForX:(D)D
      49: aload_0
      50: getfield      #8                  // Field y1:D
      53: aload_0
      54: getfield      #10                 // Field y2:D
      57: invokespecial #14                 // Method eval:(DDD)D
      60: dreturn

  private double eval(double, double, double);
    Code:
       0: dconst_1
       1: dload_1
       2: dsub
       3: dstore        7
       5: dload_1
       6: ldc2_w        #19                 // double 3.0d
       9: dload         7
      11: dmul
      12: dload         7
      14: dload_3
      15: dmul
      16: dload_1
      17: dload         5
      19: dmul
      20: dadd
      21: dmul
      22: dload_1
      23: dload_1
      24: dmul
      25: dadd
      26: dmul
      27: dreturn

  private double evalDerivative(double, double, double);
    Code:
       0: dconst_1
       1: dload_1
       2: dsub
       3: dstore        7
       5: ldc2_w        #19                 // double 3.0d
       8: dload         7
      10: dload         7
      12: dload_3
      13: dmul
      14: ldc2_w        #21                 // double 2.0d
      17: dload_1
      18: dmul
      19: dload         5
      21: dload_3
      22: dsub
      23: dmul
      24: dadd
      25: dmul
      26: dload_1
      27: dload_1
      28: dmul
      29: dconst_1
      30: dload         5
      32: dsub
      33: dmul
      34: dadd
      35: dmul
      36: dreturn

  private double getInitialGuessForT(double);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_3
       3: bipush        17
       5: if_icmpge     81
       8: aload_0
       9: getfield      #3                  // Field xSamples:[D
      12: iload_3
      13: daload
      14: dload_1
      15: dcmpl
      16: iflt          75
      19: aload_0
      20: getfield      #3                  // Field xSamples:[D
      23: iload_3
      24: daload
      25: aload_0
      26: getfield      #3                  // Field xSamples:[D
      29: iload_3
      30: iconst_1
      31: isub
      32: daload
      33: dsub
      34: dstore        4
      36: dload         4
      38: dconst_0
      39: dcmpl
      40: ifne          52
      43: iload_3
      44: iconst_1
      45: isub
      46: i2d
      47: ldc2_w        #12                 // double 0.0625d
      50: dmul
      51: dreturn
      52: iload_3
      53: iconst_1
      54: isub
      55: i2d
      56: dload_1
      57: aload_0
      58: getfield      #3                  // Field xSamples:[D
      61: iload_3
      62: iconst_1
      63: isub
      64: daload
      65: dsub
      66: dload         4
      68: ddiv
      69: dadd
      70: ldc2_w        #12                 // double 0.0625d
      73: dmul
      74: dreturn
      75: iinc          3, 1
      78: goto          2
      81: dconst_1
      82: dreturn

  private double findTForX(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #23                 // Method getInitialGuessForT:(D)D
       5: dstore_3
       6: iconst_0
       7: istore        6
       9: iload         6
      11: iconst_4
      12: if_icmpge     81
      15: aload_0
      16: dload_3
      17: aload_0
      18: getfield      #7                  // Field x1:D
      21: aload_0
      22: getfield      #9                  // Field x2:D
      25: invokespecial #14                 // Method eval:(DDD)D
      28: dload_1
      29: dsub
      30: dstore        7
      32: dload         7
      34: dconst_0
      35: dcmpl
      36: ifne          42
      39: goto          81
      42: aload_0
      43: dload_3
      44: aload_0
      45: getfield      #7                  // Field x1:D
      48: aload_0
      49: getfield      #9                  // Field x2:D
      52: invokespecial #24                 // Method evalDerivative:(DDD)D
      55: dstore        9
      57: dload         9
      59: dconst_0
      60: dcmpl
      61: ifne          67
      64: goto          81
      67: dload_3
      68: dload         7
      70: dload         9
      72: ddiv
      73: dsub
      74: dstore_3
      75: iinc          6, 1
      78: goto          9
      81: dload_3
      82: dreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field x1:D
       4: aload_0
       5: getfield      #8                  // Field y1:D
       8: aload_0
       9: getfield      #9                  // Field x2:D
      12: aload_0
      13: getfield      #10                 // Field y2:D
      16: invokedynamic #25,  0             // InvokeDynamic #0:makeConcatWithConstants:(DDDD)Ljava/lang/String;
      21: areturn
}
