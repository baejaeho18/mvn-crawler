Compiled from "InterpolationInterval.java"
class com.sun.scenario.animation.shared.InterpolationInterval$TangentFloatInterpolationInterval extends com.sun.scenario.animation.shared.InterpolationInterval$TangentInterpolationInterval {
  private final javafx.beans.value.WritableFloatValue target;

  static final boolean $assertionsDisabled;

  private com.sun.scenario.animation.shared.InterpolationInterval$TangentFloatInterpolationInterval(javafx.animation.KeyValue, long, javafx.animation.KeyValue, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: lload         5
       7: aconst_null
       8: invokespecial #3                  // Method com/sun/scenario/animation/shared/InterpolationInterval$TangentInterpolationInterval."<init>":(Ljavafx/animation/KeyValue;JLjavafx/animation/KeyValue;JLcom/sun/scenario/animation/shared/InterpolationInterval$1;)V
      11: getstatic     #4                  // Field $assertionsDisabled:Z
      14: ifne          35
      17: aload_1
      18: invokevirtual #5                  // Method javafx/animation/KeyValue.getTarget:()Ljavafx/beans/value/WritableValue;
      21: instanceof    #6                  // class javafx/beans/value/WritableFloatValue
      24: ifne          35
      27: new           #7                  // class java/lang/AssertionError
      30: dup
      31: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: aload_0
      36: aload_1
      37: invokevirtual #5                  // Method javafx/animation/KeyValue.getTarget:()Ljavafx/beans/value/WritableValue;
      40: checkcast     #6                  // class javafx/beans/value/WritableFloatValue
      43: putfield      #9                  // Field target:Ljavafx/beans/value/WritableFloatValue;
      46: return

  private com.sun.scenario.animation.shared.InterpolationInterval$TangentFloatInterpolationInterval(javafx.animation.KeyValue, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aconst_null
       4: invokespecial #10                 // Method com/sun/scenario/animation/shared/InterpolationInterval$TangentInterpolationInterval."<init>":(Ljavafx/animation/KeyValue;JLcom/sun/scenario/animation/shared/InterpolationInterval$1;)V
       7: getstatic     #4                  // Field $assertionsDisabled:Z
      10: ifne          31
      13: aload_1
      14: invokevirtual #5                  // Method javafx/animation/KeyValue.getTarget:()Ljavafx/beans/value/WritableValue;
      17: instanceof    #6                  // class javafx/beans/value/WritableFloatValue
      20: ifne          31
      23: new           #7                  // class java/lang/AssertionError
      26: dup
      27: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: aload_1
      33: invokevirtual #5                  // Method javafx/animation/KeyValue.getTarget:()Ljavafx/beans/value/WritableValue;
      36: checkcast     #6                  // class javafx/beans/value/WritableFloatValue
      39: putfield      #9                  // Field target:Ljavafx/beans/value/WritableFloatValue;
      42: aload_0
      43: aload_0
      44: getfield      #9                  // Field target:Ljavafx/beans/value/WritableFloatValue;
      47: invokeinterface #11,  1           // InterfaceMethod javafx/beans/value/WritableFloatValue.get:()F
      52: f2d
      53: invokevirtual #12                 // Method recalculateStartValue:(D)V
      56: return

  public void interpolate(double);
    Code:
       0: aload_0
       1: getfield      #9                  // Field target:Ljavafx/beans/value/WritableFloatValue;
       4: aload_0
       5: dload_1
       6: invokevirtual #13                 // Method calculate:(D)D
       9: d2f
      10: invokeinterface #14,  2           // InterfaceMethod javafx/beans/value/WritableFloatValue.set:(F)V
      15: return

  public void recalculateStartValue();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field target:Ljavafx/beans/value/WritableFloatValue;
       5: invokeinterface #11,  1           // InterfaceMethod javafx/beans/value/WritableFloatValue.get:()F
      10: f2d
      11: invokevirtual #12                 // Method recalculateStartValue:(D)V
      14: return

  com.sun.scenario.animation.shared.InterpolationInterval$TangentFloatInterpolationInterval(javafx.animation.KeyValue, long, javafx.animation.KeyValue, long, com.sun.scenario.animation.shared.InterpolationInterval$1);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: lload         5
       7: invokespecial #2                  // Method "<init>":(Ljavafx/animation/KeyValue;JLjavafx/animation/KeyValue;J)V
      10: return

  com.sun.scenario.animation.shared.InterpolationInterval$TangentFloatInterpolationInterval(javafx.animation.KeyValue, long, com.sun.scenario.animation.shared.InterpolationInterval$1);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #1                  // Method "<init>":(Ljavafx/animation/KeyValue;J)V
       6: return

  static {};
    Code:
       0: ldc           #15                 // class com/sun/scenario/animation/shared/InterpolationInterval
       2: invokevirtual #16                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #4                  // Field $assertionsDisabled:Z
      16: return
}
