Compiled from "ClipEnvelope.java"
public abstract class com.sun.scenario.animation.shared.ClipEnvelope {
  protected static final long INDEFINITE;

  protected static final double EPSILON;

  protected javafx.animation.Animation animation;

  protected double rate;

  protected long cycleTicks;

  protected long deltaTicks;

  protected long ticks;

  protected double currentRate;

  protected boolean inTimePulse;

  protected boolean aborted;

  protected com.sun.scenario.animation.shared.ClipEnvelope(javafx.animation.Animation);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dconst_1
       6: putfield      #3                  // Field rate:D
       9: aload_0
      10: lconst_0
      11: putfield      #4                  // Field cycleTicks:J
      14: aload_0
      15: lconst_0
      16: putfield      #5                  // Field deltaTicks:J
      19: aload_0
      20: lconst_0
      21: putfield      #6                  // Field ticks:J
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field rate:D
      29: putfield      #7                  // Field currentRate:D
      32: aload_0
      33: iconst_0
      34: putfield      #8                  // Field inTimePulse:Z
      37: aload_0
      38: iconst_0
      39: putfield      #9                  // Field aborted:Z
      42: aload_0
      43: aload_1
      44: putfield      #10                 // Field animation:Ljavafx/animation/Animation;
      47: aload_1
      48: ifnull        72
      51: aload_1
      52: invokevirtual #11                 // Method javafx/animation/Animation.getCycleDuration:()Ljavafx/util/Duration;
      55: astore_2
      56: aload_0
      57: aload_2
      58: invokestatic  #12                 // Method com/sun/javafx/animation/TickCalculation.fromDuration:(Ljavafx/util/Duration;)J
      61: putfield      #4                  // Field cycleTicks:J
      64: aload_0
      65: aload_1
      66: invokevirtual #13                 // Method javafx/animation/Animation.getRate:()D
      69: putfield      #3                  // Field rate:D
      72: return

  public static com.sun.scenario.animation.shared.ClipEnvelope create(javafx.animation.Animation);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method javafx/animation/Animation.getCycleCount:()I
       4: iconst_1
       5: if_icmpeq     18
       8: aload_0
       9: invokevirtual #11                 // Method javafx/animation/Animation.getCycleDuration:()Ljavafx/util/Duration;
      12: invokevirtual #15                 // Method javafx/util/Duration.isIndefinite:()Z
      15: ifeq          27
      18: new           #16                 // class com/sun/scenario/animation/shared/SingleLoopClipEnvelope
      21: dup
      22: aload_0
      23: invokespecial #17                 // Method com/sun/scenario/animation/shared/SingleLoopClipEnvelope."<init>":(Ljavafx/animation/Animation;)V
      26: areturn
      27: aload_0
      28: invokevirtual #14                 // Method javafx/animation/Animation.getCycleCount:()I
      31: iconst_m1
      32: if_icmpne     44
      35: new           #19                 // class com/sun/scenario/animation/shared/InfiniteClipEnvelope
      38: dup
      39: aload_0
      40: invokespecial #20                 // Method com/sun/scenario/animation/shared/InfiniteClipEnvelope."<init>":(Ljavafx/animation/Animation;)V
      43: areturn
      44: new           #21                 // class com/sun/scenario/animation/shared/FiniteClipEnvelope
      47: dup
      48: aload_0
      49: invokespecial #22                 // Method com/sun/scenario/animation/shared/FiniteClipEnvelope."<init>":(Ljavafx/animation/Animation;)V
      52: areturn

  public abstract com.sun.scenario.animation.shared.ClipEnvelope setCycleDuration(javafx.util.Duration);

  public abstract void setRate(double);

  public abstract void setAutoReverse(boolean);

  public abstract com.sun.scenario.animation.shared.ClipEnvelope setCycleCount(int);

  protected void updateCycleTicks(javafx.util.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method com/sun/javafx/animation/TickCalculation.fromDuration:(Ljavafx/util/Duration;)J
       5: putfield      #4                  // Field cycleTicks:J
       8: return

  public boolean wasSynched();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cycleTicks:J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method calculateCurrentRate:()D
       5: invokevirtual #24                 // Method setCurrentRate:(D)V
       8: aload_0
       9: aload_0
      10: getfield      #6                  // Field ticks:J
      13: putfield      #5                  // Field deltaTicks:J
      16: return

  public abstract void timePulse(long);

  public abstract void jumpTo(long);

  public void abortCurrentPulse();
    Code:
       0: aload_0
       1: getfield      #8                  // Field inTimePulse:Z
       4: ifeq          17
       7: aload_0
       8: iconst_1
       9: putfield      #9                  // Field aborted:Z
      12: aload_0
      13: iconst_0
      14: putfield      #8                  // Field inTimePulse:Z
      17: return

  protected abstract double calculateCurrentRate();

  protected void setCurrentRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #7                  // Field currentRate:D
       5: invokestatic  #25                 // Method com/sun/scenario/animation/shared/AnimationAccessor.getDefault:()Lcom/sun/scenario/animation/shared/AnimationAccessor;
       8: aload_0
       9: getfield      #10                 // Field animation:Ljavafx/animation/Animation;
      12: dload_1
      13: invokevirtual #26                 // Method com/sun/scenario/animation/shared/AnimationAccessor.setCurrentRate:(Ljavafx/animation/Animation;D)V
      16: return

  protected static long checkBounds(long, long);
    Code:
       0: lconst_0
       1: lload_0
       2: lload_2
       3: invokestatic  #27                 // Method java/lang/Math.min:(JJ)J
       6: invokestatic  #28                 // Method java/lang/Math.max:(JJ)J
       9: lreturn

  public double getCurrentRate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentRate:D
       4: dreturn
}
