Compiled from "RendererFactory.java"
class com.sun.scenario.effect.impl.RendererFactory {
  private static java.lang.String rootPkg;

  private static boolean tryRSL;

  private static boolean trySIMD;

  private static boolean tryJOGL;

  private static boolean tryPrism;

  com.sun.scenario.effect.impl.RendererFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static boolean isRSLFriendly(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #3                  // String sun.java2d.pipe.hw.AccelGraphicsConfig
       6: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: iconst_0
      15: istore_1
      16: aload_0
      17: invokevirtual #5                  // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      20: astore_2
      21: aload_2
      22: arraylength
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     58
      33: aload_2
      34: iload         4
      36: aaload
      37: astore        5
      39: aload         5
      41: invokestatic  #6                  // Method isRSLFriendly:(Ljava/lang/Class;)Z
      44: ifeq          52
      47: iconst_1
      48: istore_1
      49: goto          58
      52: iinc          4, 1
      55: goto          27
      58: iload_1
      59: ireturn

  private static boolean isRSLAvailable(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method com/sun/scenario/effect/FilterContext.getReferent:()Ljava/lang/Object;
       4: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokestatic  #6                  // Method isRSLFriendly:(Ljava/lang/Class;)Z
      10: ireturn

  private static com.sun.scenario.effect.impl.Renderer createRSLRenderer(com.sun.scenario.effect.FilterContext);
    Code:
       0: getstatic     #9                  // Field rootPkg:Ljava/lang/String;
       3: invokedynamic #10,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      11: astore_1
      12: aload_1
      13: ldc           #12                 // String createRenderer
      15: iconst_1
      16: anewarray     #13                 // class java/lang/Class
      19: dup
      20: iconst_0
      21: ldc           #14                 // class com/sun/scenario/effect/FilterContext
      23: aastore
      24: invokevirtual #15                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: astore_2
      28: aload_2
      29: aconst_null
      30: iconst_1
      31: anewarray     #16                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_0
      37: aastore
      38: invokevirtual #17                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      44: areturn
      45: astore_1
      46: aconst_null
      47: areturn
    Exception table:
       from    to  target type
           0    44    45   Class java/lang/Throwable

  private static com.sun.scenario.effect.impl.Renderer createJOGLRenderer(com.sun.scenario.effect.FilterContext);
    Code:
       0: getstatic     #20                 // Field tryJOGL:Z
       3: ifeq          52
       6: getstatic     #9                  // Field rootPkg:Ljava/lang/String;
       9: invokedynamic #21,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: astore_1
      18: aload_1
      19: ldc           #12                 // String createRenderer
      21: iconst_1
      22: anewarray     #13                 // class java/lang/Class
      25: dup
      26: iconst_0
      27: ldc           #14                 // class com/sun/scenario/effect/FilterContext
      29: aastore
      30: invokevirtual #15                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      33: astore_2
      34: aload_2
      35: aconst_null
      36: iconst_1
      37: anewarray     #16                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: aastore
      44: invokevirtual #17                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      50: areturn
      51: astore_1
      52: aconst_null
      53: areturn
    Exception table:
       from    to  target type
           6    50    51   Class java/lang/Throwable

  private static com.sun.scenario.effect.impl.Renderer createPrismRenderer(com.sun.scenario.effect.FilterContext);
    Code:
       0: getstatic     #22                 // Field tryPrism:Z
       3: ifeq          56
       6: getstatic     #9                  // Field rootPkg:Ljava/lang/String;
       9: invokedynamic #23,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: astore_1
      18: aload_1
      19: ldc           #12                 // String createRenderer
      21: iconst_1
      22: anewarray     #13                 // class java/lang/Class
      25: dup
      26: iconst_0
      27: ldc           #14                 // class com/sun/scenario/effect/FilterContext
      29: aastore
      30: invokevirtual #15                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      33: astore_2
      34: aload_2
      35: aconst_null
      36: iconst_1
      37: anewarray     #16                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: aastore
      44: invokevirtual #17                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      50: areturn
      51: astore_1
      52: aload_1
      53: invokevirtual #24                 // Method java/lang/Throwable.printStackTrace:()V
      56: aconst_null
      57: areturn
    Exception table:
       from    to  target type
           6    50    51   Class java/lang/Throwable

  private static com.sun.scenario.effect.impl.Renderer getSSERenderer();
    Code:
       0: getstatic     #25                 // Field trySIMD:Z
       3: ifeq          60
       6: getstatic     #9                  // Field rootPkg:Ljava/lang/String;
       9: invokedynamic #26,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: astore_0
      18: aload_0
      19: ldc           #27                 // String getSSEInstance
      21: aconst_null
      22: checkcast     #28                 // class "[Ljava/lang/Class;"
      25: invokevirtual #15                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      28: astore_1
      29: aload_1
      30: aconst_null
      31: aconst_null
      32: checkcast     #29                 // class "[Ljava/lang/Object;"
      35: invokevirtual #17                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      41: astore_2
      42: aload_2
      43: ifnull        48
      46: aload_2
      47: areturn
      48: goto          56
      51: astore_0
      52: aload_0
      53: invokevirtual #24                 // Method java/lang/Throwable.printStackTrace:()V
      56: iconst_0
      57: putstatic     #25                 // Field trySIMD:Z
      60: aconst_null
      61: areturn
    Exception table:
       from    to  target type
           6    47    51   Class java/lang/Throwable

  private static com.sun.scenario.effect.impl.Renderer getJavaRenderer();
    Code:
       0: getstatic     #9                  // Field rootPkg:Ljava/lang/String;
       3: invokedynamic #30,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      11: astore_0
      12: ldc           #31                 // String com.sun.glass.ui.Screen
      14: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: astore_1
      18: aload_0
      19: ldc           #32                 // String createJSWInstance
      21: iconst_1
      22: anewarray     #13                 // class java/lang/Class
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: invokevirtual #15                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      32: astore_2
      33: aload_2
      34: aconst_null
      35: iconst_1
      36: anewarray     #16                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aconst_null
      42: aastore
      43: invokevirtual #17                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      49: astore_3
      50: aload_3
      51: ifnull        56
      54: aload_3
      55: areturn
      56: goto          64
      59: astore_0
      60: aload_0
      61: invokevirtual #24                 // Method java/lang/Throwable.printStackTrace:()V
      64: aconst_null
      65: areturn
    Exception table:
       from    to  target type
           0    55    59   Class java/lang/Throwable

  private static com.sun.scenario.effect.impl.Renderer getJavaRenderer(com.sun.scenario.effect.FilterContext);
    Code:
       0: getstatic     #9                  // Field rootPkg:Ljava/lang/String;
       3: invokedynamic #30,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #11                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      11: astore_1
      12: aload_1
      13: ldc           #32                 // String createJSWInstance
      15: iconst_1
      16: anewarray     #13                 // class java/lang/Class
      19: dup
      20: iconst_0
      21: ldc           #14                 // class com/sun/scenario/effect/FilterContext
      23: aastore
      24: invokevirtual #15                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: astore_2
      28: aload_2
      29: aconst_null
      30: iconst_1
      31: anewarray     #16                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_0
      37: aastore
      38: invokevirtual #17                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      44: astore_3
      45: aload_3
      46: ifnull        51
      49: aload_3
      50: areturn
      51: goto          55
      54: astore_1
      55: aconst_null
      56: areturn
    Exception table:
       from    to  target type
           0    50    54   Class java/lang/Throwable

  static com.sun.scenario.effect.impl.Renderer getSoftwareRenderer();
    Code:
       0: invokestatic  #33                 // Method getSSERenderer:()Lcom/sun/scenario/effect/impl/Renderer;
       3: astore_0
       4: aload_0
       5: ifnonnull     12
       8: invokestatic  #34                 // Method getJavaRenderer:()Lcom/sun/scenario/effect/impl/Renderer;
      11: astore_0
      12: aload_0
      13: areturn

  static com.sun.scenario.effect.impl.Renderer createRenderer(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: invokedynamic #35,  0             // InvokeDynamic #5:run:(Lcom/sun/scenario/effect/FilterContext;)Ljava/security/PrivilegedAction;
       6: invokestatic  #36                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       9: checkcast     #18                 // class com/sun/scenario/effect/impl/Renderer
      12: areturn

  private static com.sun.scenario.effect.impl.Renderer lambda$createRenderer$0(com.sun.scenario.effect.FilterContext);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #2                  // Method java/lang/Class.getName:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: aload_2
      12: ldc           #37                 // String .
      14: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      17: iconst_1
      18: iadd
      19: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      22: astore_3
      23: aload_3
      24: ldc           #40                 // String PrFilterContext
      26: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          43
      32: getstatic     #22                 // Field tryPrism:Z
      35: ifeq          43
      38: aload_0
      39: invokestatic  #41                 // Method createPrismRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
      42: astore_1
      43: aload_1
      44: ifnonnull     65
      47: getstatic     #42                 // Field tryRSL:Z
      50: ifeq          65
      53: aload_0
      54: invokestatic  #43                 // Method isRSLAvailable:(Lcom/sun/scenario/effect/FilterContext;)Z
      57: ifeq          65
      60: aload_0
      61: invokestatic  #44                 // Method createRSLRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
      64: astore_1
      65: aload_1
      66: ifnonnull     80
      69: getstatic     #20                 // Field tryJOGL:Z
      72: ifeq          80
      75: aload_0
      76: invokestatic  #45                 // Method createJOGLRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
      79: astore_1
      80: aload_1
      81: ifnonnull     94
      84: getstatic     #25                 // Field trySIMD:Z
      87: ifeq          94
      90: invokestatic  #33                 // Method getSSERenderer:()Lcom/sun/scenario/effect/impl/Renderer;
      93: astore_1
      94: aload_1
      95: ifnonnull     103
      98: aload_0
      99: invokestatic  #46                 // Method getJavaRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
     102: astore_1
     103: aload_1
     104: areturn

  static {};
    Code:
       0: ldc           #47                 // String com.sun.scenario.effect
       2: putstatic     #9                  // Field rootPkg:Ljava/lang/String;
       5: iconst_1
       6: putstatic     #42                 // Field tryRSL:Z
       9: iconst_0
      10: putstatic     #25                 // Field trySIMD:Z
      13: invokestatic  #48                 // Method com/sun/javafx/PlatformUtil.isMac:()Z
      16: putstatic     #20                 // Field tryJOGL:Z
      19: iconst_1
      20: putstatic     #22                 // Field tryPrism:Z
      23: ldc           #49                 // String false
      25: ldc           #50                 // String decora.rsl
      27: invokestatic  #51                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      30: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_0
      37: putstatic     #42                 // Field tryRSL:Z
      40: ldc           #49                 // String false
      42: ldc           #52                 // String decora.simd
      44: invokestatic  #51                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      47: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          57
      53: iconst_0
      54: putstatic     #25                 // Field trySIMD:Z
      57: ldc           #53                 // String decora.jogl
      59: invokestatic  #51                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      62: astore_0
      63: aload_0
      64: ifnull        74
      67: aload_0
      68: invokestatic  #54                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      71: putstatic     #20                 // Field tryJOGL:Z
      74: ldc           #49                 // String false
      76: ldc           #55                 // String decora.prism
      78: invokestatic  #51                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      81: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          91
      87: iconst_0
      88: putstatic     #22                 // Field tryPrism:Z
      91: goto          95
      94: astore_0
      95: return
    Exception table:
       from    to  target type
          23    91    94   Class java/lang/SecurityException
}
