Compiled from "PPSLinearConvolvePeer.java"
public class com.sun.scenario.effect.impl.prism.ps.PPSLinearConvolvePeer extends com.sun.scenario.effect.impl.prism.ps.PPSOneSamplerPeer<com.sun.scenario.effect.impl.state.LinearConvolveRenderState> {
  public com.sun.scenario.effect.impl.prism.ps.PPSLinearConvolvePeer(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.impl.Renderer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/sun/scenario/effect/impl/prism/ps/PPSOneSamplerPeer."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/impl/Renderer;Ljava/lang/String;)V
       7: return

  protected final com.sun.scenario.effect.Effect getEffect();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/scenario/effect/impl/prism/ps/PPSOneSamplerPeer.getEffect:()Lcom/sun/scenario/effect/Effect;
       4: areturn

  public com.sun.javafx.geom.Rectangle getResultBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.ImageData...);
    Code:
       0: aload_3
       1: iconst_0
       2: aaload
       3: aconst_null
       4: invokevirtual #3                  // Method com/sun/scenario/effect/ImageData.getTransformedBounds:(Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/javafx/geom/Rectangle;
       7: astore        4
       9: aload_0
      10: invokevirtual #4                  // Method getRenderState:()Lcom/sun/scenario/effect/impl/state/RenderState;
      13: checkcast     #5                  // class com/sun/scenario/effect/impl/state/LinearConvolveRenderState
      16: aload         4
      18: aload_2
      19: invokevirtual #6                  // Method com/sun/scenario/effect/impl/state/LinearConvolveRenderState.getPassResultBounds:(Lcom/sun/javafx/geom/Rectangle;Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/javafx/geom/Rectangle;
      22: astore        4
      24: aload         4
      26: areturn

  private int getCount();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getRenderState:()Lcom/sun/scenario/effect/impl/state/RenderState;
       4: checkcast     #5                  // class com/sun/scenario/effect/impl/state/LinearConvolveRenderState
       7: invokevirtual #7                  // Method com/sun/scenario/effect/impl/state/LinearConvolveRenderState.getPassKernelSize:()I
      10: iconst_3
      11: iadd
      12: iconst_4
      13: idiv
      14: ireturn

  private float[] getOffset();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getRenderState:()Lcom/sun/scenario/effect/impl/state/RenderState;
       4: checkcast     #5                  // class com/sun/scenario/effect/impl/state/LinearConvolveRenderState
       7: invokevirtual #8                  // Method com/sun/scenario/effect/impl/state/LinearConvolveRenderState.getPassVector:()[F
      10: areturn

  private java.nio.FloatBuffer getWeights();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getRenderState:()Lcom/sun/scenario/effect/impl/state/RenderState;
       4: checkcast     #5                  // class com/sun/scenario/effect/impl/state/LinearConvolveRenderState
       7: invokevirtual #9                  // Method com/sun/scenario/effect/impl/state/LinearConvolveRenderState.getPassWeights:()Ljava/nio/FloatBuffer;
      10: areturn

  private int getWeightsArrayLength();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getRenderState:()Lcom/sun/scenario/effect/impl/state/RenderState;
       4: checkcast     #5                  // class com/sun/scenario/effect/impl/state/LinearConvolveRenderState
       7: invokevirtual #10                 // Method com/sun/scenario/effect/impl/state/LinearConvolveRenderState.getPassWeightsArrayLength:()I
      10: ireturn

  protected boolean isSamplerLinear(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 0
               default: 12
          }
      12: iconst_0
      13: ireturn

  protected com.sun.prism.ps.Shader createShader();
    Code:
       0: new           #11                 // class java/util/HashMap
       3: dup
       4: invokespecial #12                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #13                 // String img
      11: iconst_0
      12: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #15                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: new           #11                 // class java/util/HashMap
      22: dup
      23: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      26: astore_2
      27: aload_2
      28: ldc           #16                 // String offset
      30: iconst_1
      31: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokevirtual #15                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: ldc           #17                 // String count
      41: iconst_0
      42: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: invokevirtual #15                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_2
      50: ldc           #18                 // String weights
      52: iconst_2
      53: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokevirtual #15                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: invokevirtual #19                 // Method getRenderer:()Lcom/sun/scenario/effect/impl/prism/ps/PPSRenderer;
      64: aload_0
      65: invokevirtual #20                 // Method getShaderName:()Ljava/lang/String;
      68: aload_1
      69: aload_2
      70: iconst_0
      71: invokevirtual #21                 // Method com/sun/scenario/effect/impl/prism/ps/PPSRenderer.createShader:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Z)Lcom/sun/prism/ps/Shader;
      74: areturn

  protected void updateShader(com.sun.prism.ps.Shader);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method getOffset:()[F
       4: astore_2
       5: aload_1
       6: ldc           #16                 // String offset
       8: aload_2
       9: iconst_0
      10: faload
      11: aload_2
      12: iconst_1
      13: faload
      14: aload_2
      15: iconst_2
      16: faload
      17: aload_2
      18: iconst_3
      19: faload
      20: invokeinterface #23,  6           // InterfaceMethod com/sun/prism/ps/Shader.setConstant:(Ljava/lang/String;FFFF)V
      25: aload_1
      26: ldc           #17                 // String count
      28: aload_0
      29: invokespecial #24                 // Method getCount:()I
      32: invokeinterface #25,  3           // InterfaceMethod com/sun/prism/ps/Shader.setConstant:(Ljava/lang/String;I)V
      37: aload_1
      38: ldc           #18                 // String weights
      40: aload_0
      41: invokespecial #26                 // Method getWeights:()Ljava/nio/FloatBuffer;
      44: iconst_0
      45: aload_0
      46: invokespecial #27                 // Method getWeightsArrayLength:()I
      49: invokeinterface #28,  5           // InterfaceMethod com/sun/prism/ps/Shader.setConstants:(Ljava/lang/String;Ljava/nio/FloatBuffer;II)V
      54: return
}
