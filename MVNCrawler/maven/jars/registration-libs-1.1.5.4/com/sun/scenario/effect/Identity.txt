Compiled from "Identity.java"
public class com.sun.scenario.effect.Identity extends com.sun.scenario.effect.Effect {
  private com.sun.scenario.effect.Filterable src;

  private com.sun.javafx.geom.Point2D loc;

  private final java.util.Map<com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.ImageData> datacache;

  public com.sun.scenario.effect.Identity(com.sun.scenario.effect.Filterable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/scenario/effect/Effect."<init>":()V
       4: aload_0
       5: new           #2                  // class com/sun/javafx/geom/Point2D
       8: dup
       9: invokespecial #3                  // Method com/sun/javafx/geom/Point2D."<init>":()V
      12: putfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field datacache:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      31: return

  public final com.sun.scenario.effect.Filterable getSource();
    Code:
       0: aload_0
       1: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
       4: areturn

  public void setSource(com.sun.scenario.effect.Filterable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      10: aload_0
      11: invokespecial #9                  // Method clearCache:()V
      14: return

  public final com.sun.javafx.geom.Point2D getLocation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
       4: areturn

  public void setLocation(com.sun.javafx.geom.Point2D);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String Location must be non-null
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      18: astore_2
      19: aload_0
      20: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      23: aload_1
      24: invokevirtual #13                 // Method com/sun/javafx/geom/Point2D.setLocation:(Lcom/sun/javafx/geom/Point2D;)V
      27: return

  public com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
       4: ifnonnull     15
       7: new           #14                 // class com/sun/javafx/geom/RectBounds
      10: dup
      11: invokespecial #15                 // Method com/sun/javafx/geom/RectBounds."<init>":()V
      14: areturn
      15: aload_0
      16: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      19: invokeinterface #16,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.getPhysicalWidth:()I
      24: i2f
      25: aload_0
      26: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      29: invokeinterface #17,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.getPixelScale:()F
      34: fdiv
      35: fstore_3
      36: aload_0
      37: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      40: invokeinterface #18,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.getPhysicalHeight:()I
      45: i2f
      46: aload_0
      47: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      50: invokeinterface #17,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.getPixelScale:()F
      55: fdiv
      56: fstore        4
      58: new           #14                 // class com/sun/javafx/geom/RectBounds
      61: dup
      62: aload_0
      63: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      66: getfield      #19                 // Field com/sun/javafx/geom/Point2D.x:F
      69: aload_0
      70: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      73: getfield      #20                 // Field com/sun/javafx/geom/Point2D.y:F
      76: aload_0
      77: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      80: getfield      #19                 // Field com/sun/javafx/geom/Point2D.x:F
      83: fload_3
      84: fadd
      85: aload_0
      86: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
      89: getfield      #20                 // Field com/sun/javafx/geom/Point2D.y:F
      92: fload         4
      94: fadd
      95: invokespecial #21                 // Method com/sun/javafx/geom/RectBounds."<init>":(FFFF)V
      98: astore        5
     100: aload_1
     101: ifnull        119
     104: aload_1
     105: invokevirtual #22                 // Method com/sun/javafx/geom/transform/BaseTransform.isIdentity:()Z
     108: ifne          119
     111: aload_1
     112: aload         5
     114: invokestatic  #23                 // Method transformBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
     117: astore        5
     119: aload         5
     121: areturn

  public com.sun.scenario.effect.ImageData filter(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, java.lang.Object, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: getfield      #7                  // Field datacache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class com/sun/scenario/effect/ImageData
      13: astore        6
      15: aload         6
      17: ifnull        53
      20: aload         6
      22: invokevirtual #26                 // Method com/sun/scenario/effect/ImageData.addref:()Z
      25: ifne          53
      28: aload         6
      30: iconst_0
      31: invokevirtual #27                 // Method com/sun/scenario/effect/ImageData.setReusable:(Z)V
      34: aload_0
      35: getfield      #7                  // Field datacache:Ljava/util/Map;
      38: aload_1
      39: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload         6
      47: invokevirtual #29                 // Method com/sun/scenario/effect/ImageData.unref:()V
      50: aconst_null
      51: astore        6
      53: aload         6
      55: ifnonnull     152
      58: aload_1
      59: invokestatic  #30                 // Method com/sun/scenario/effect/impl/Renderer.getRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
      62: astore        7
      64: aload_0
      65: getfield      #8                  // Field src:Lcom/sun/scenario/effect/Filterable;
      68: astore        8
      70: aload         8
      72: ifnonnull     107
      75: aload_1
      76: iconst_1
      77: iconst_1
      78: invokestatic  #31                 // Method getCompatibleImage:(Lcom/sun/scenario/effect/FilterContext;II)Lcom/sun/scenario/effect/Filterable;
      81: astore        8
      83: new           #25                 // class com/sun/scenario/effect/ImageData
      86: dup
      87: aload_1
      88: aload         8
      90: new           #32                 // class com/sun/javafx/geom/Rectangle
      93: dup
      94: iconst_1
      95: iconst_1
      96: invokespecial #33                 // Method com/sun/javafx/geom/Rectangle."<init>":(II)V
      99: invokespecial #34                 // Method com/sun/scenario/effect/ImageData."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/Filterable;Lcom/sun/javafx/geom/Rectangle;)V
     102: astore        6
     104: goto          117
     107: aload         7
     109: aload_1
     110: aload         8
     112: invokevirtual #35                 // Method com/sun/scenario/effect/impl/Renderer.createImageData:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/Filterable;)Lcom/sun/scenario/effect/ImageData;
     115: astore        6
     117: aload         6
     119: ifnonnull     133
     122: new           #25                 // class com/sun/scenario/effect/ImageData
     125: dup
     126: aload_1
     127: aconst_null
     128: aconst_null
     129: invokespecial #34                 // Method com/sun/scenario/effect/ImageData."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/Filterable;Lcom/sun/javafx/geom/Rectangle;)V
     132: areturn
     133: aload         6
     135: iconst_1
     136: invokevirtual #27                 // Method com/sun/scenario/effect/ImageData.setReusable:(Z)V
     139: aload_0
     140: getfield      #7                  // Field datacache:Ljava/util/Map;
     143: aload_1
     144: aload         6
     146: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     151: pop
     152: aload_2
     153: aload_0
     154: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
     157: getfield      #19                 // Field com/sun/javafx/geom/Point2D.x:F
     160: f2d
     161: aload_0
     162: getfield      #4                  // Field loc:Lcom/sun/javafx/geom/Point2D;
     165: getfield      #20                 // Field com/sun/javafx/geom/Point2D.y:F
     168: f2d
     169: invokestatic  #37                 // Method com/sun/scenario/effect/Offset.getOffsetTransform:(Lcom/sun/javafx/geom/transform/BaseTransform;DD)Lcom/sun/javafx/geom/transform/BaseTransform;
     172: astore_2
     173: aload         6
     175: aload_2
     176: invokevirtual #38                 // Method com/sun/scenario/effect/ImageData.transform:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/scenario/effect/ImageData;
     179: astore        6
     181: aload         6
     183: areturn

  public com.sun.scenario.effect.Effect$AccelType getAccelType(com.sun.scenario.effect.FilterContext);
    Code:
       0: getstatic     #39                 // Field com/sun/scenario/effect/Effect$AccelType.INTRINSIC:Lcom/sun/scenario/effect/Effect$AccelType;
       3: areturn

  private void clearCache();
    Code:
       0: aload_0
       1: getfield      #7                  // Field datacache:Ljava/util/Map;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean reducesOpaquePixels();
    Code:
       0: iconst_1
       1: ireturn

  public com.sun.javafx.geom.DirtyRegionContainer getDirtyRegions(com.sun.scenario.effect.Effect, com.sun.javafx.geom.DirtyRegionPool);
    Code:
       0: aload_2
       1: invokevirtual #41                 // Method com/sun/javafx/geom/DirtyRegionPool.checkOut:()Lcom/sun/javafx/geom/DirtyRegionContainer;
       4: astore_3
       5: aload_3
       6: invokevirtual #42                 // Method com/sun/javafx/geom/DirtyRegionContainer.reset:()V
       9: aload_3
      10: areturn
}
