Compiled from "InvertMask.java"
public class com.sun.scenario.effect.InvertMask extends com.sun.scenario.effect.CoreEffect<com.sun.scenario.effect.impl.state.RenderState> {
  private int pad;

  private int xoff;

  private int yoff;

  public com.sun.scenario.effect.InvertMask();
    Code:
       0: aload_0
       1: bipush        10
       3: invokespecial #2                  // Method "<init>":(I)V
       6: return

  public com.sun.scenario.effect.InvertMask(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: bipush        10
       3: aload_1
       4: invokespecial #3                  // Method "<init>":(ILcom/sun/scenario/effect/Effect;)V
       7: return

  public com.sun.scenario.effect.InvertMask(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #4                  // Field DefaultInput:Lcom/sun/scenario/effect/Effect;
       5: invokespecial #3                  // Method "<init>":(ILcom/sun/scenario/effect/Effect;)V
       8: return

  public com.sun.scenario.effect.InvertMask(int, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #5                  // Method com/sun/scenario/effect/CoreEffect."<init>":(Lcom/sun/scenario/effect/Effect;)V
       5: aload_0
       6: iload_1
       7: invokevirtual #6                  // Method setPad:(I)V
      10: aload_0
      11: ldc           #7                  // String InvertMask
      13: invokevirtual #8                  // Method updatePeerKey:(Ljava/lang/String;)V
      16: return

  public final com.sun.scenario.effect.Effect getInput();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getInputs:()Ljava/util/List;
       4: iconst_0
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #11                 // class com/sun/scenario/effect/Effect
      13: areturn

  public void setInput(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #12                 // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
       6: return

  public int getPad();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pad:I
       4: ireturn

  public void setPad(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #13                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #14                 // String Pad value must be non-negative
      10: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #1                  // Field pad:I
      18: istore_2
      19: aload_0
      20: iload_1
      21: putfield      #1                  // Field pad:I
      24: return

  public int getOffsetX();
    Code:
       0: aload_0
       1: getfield      #16                 // Field xoff:I
       4: ireturn

  public void setOffsetX(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field xoff:I
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #16                 // Field xoff:I
      10: return

  public int getOffsetY();
    Code:
       0: aload_0
       1: getfield      #17                 // Field yoff:I
       4: ireturn

  public void setOffsetY(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field yoff:I
       4: i2f
       5: fstore_2
       6: aload_0
       7: iload_1
       8: putfield      #17                 // Field yoff:I
      11: return

  public com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
       4: aload_2
       5: invokespecial #19                 // Method com/sun/scenario/effect/CoreEffect.getBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/BaseBounds;
       8: astore_3
       9: new           #20                 // class com/sun/javafx/geom/RectBounds
      12: dup
      13: aload_3
      14: invokevirtual #21                 // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
      17: aload_3
      18: invokevirtual #22                 // Method com/sun/javafx/geom/BaseBounds.getMinY:()F
      21: aload_3
      22: invokevirtual #23                 // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
      25: aload_3
      26: invokevirtual #24                 // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
      29: invokespecial #25                 // Method com/sun/javafx/geom/RectBounds."<init>":(FFFF)V
      32: astore        4
      34: aload         4
      36: checkcast     #20                 // class com/sun/javafx/geom/RectBounds
      39: aload_0
      40: getfield      #1                  // Field pad:I
      43: i2f
      44: aload_0
      45: getfield      #1                  // Field pad:I
      48: i2f
      49: invokevirtual #26                 // Method com/sun/javafx/geom/RectBounds.grow:(FF)V
      52: aload_1
      53: invokevirtual #27                 // Method com/sun/javafx/geom/transform/BaseTransform.isIdentity:()Z
      56: ifne          67
      59: aload_1
      60: aload         4
      62: invokestatic  #28                 // Method transformBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      65: astore        4
      67: aload         4
      69: areturn

  public com.sun.javafx.geom.Rectangle getResultBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.ImageData...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #29                 // Method com/sun/scenario/effect/CoreEffect.getResultBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;[Lcom/sun/scenario/effect/ImageData;)Lcom/sun/javafx/geom/Rectangle;
       7: astore        4
       9: new           #30                 // class com/sun/javafx/geom/Rectangle
      12: dup
      13: aload         4
      15: invokespecial #31                 // Method com/sun/javafx/geom/Rectangle."<init>":(Lcom/sun/javafx/geom/Rectangle;)V
      18: astore        5
      20: aload         5
      22: aload_0
      23: getfield      #1                  // Field pad:I
      26: aload_0
      27: getfield      #1                  // Field pad:I
      30: invokevirtual #32                 // Method com/sun/javafx/geom/Rectangle.grow:(II)V
      33: aload         5
      35: areturn

  public com.sun.scenario.effect.impl.state.RenderState getRenderState(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, java.lang.Object, com.sun.scenario.effect.Effect);
    Code:
       0: new           #33                 // class com/sun/scenario/effect/InvertMask$1
       3: dup
       4: aload_0
       5: invokespecial #34                 // Method com/sun/scenario/effect/InvertMask$1."<init>":(Lcom/sun/scenario/effect/InvertMask;)V
       8: areturn

  public boolean reducesOpaquePixels();
    Code:
       0: iconst_1
       1: ireturn

  public com.sun.javafx.geom.DirtyRegionContainer getDirtyRegions(com.sun.scenario.effect.Effect, com.sun.javafx.geom.DirtyRegionPool);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #35                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: astore_3
       7: aload_3
       8: aload_1
       9: aload_2
      10: invokevirtual #36                 // Method com/sun/scenario/effect/Effect.getDirtyRegions:(Lcom/sun/scenario/effect/Effect;Lcom/sun/javafx/geom/DirtyRegionPool;)Lcom/sun/javafx/geom/DirtyRegionContainer;
      13: astore        4
      15: aload_0
      16: getfield      #16                 // Field xoff:I
      19: ifne          29
      22: aload_0
      23: getfield      #17                 // Field yoff:I
      26: ifeq          69
      29: iconst_0
      30: istore        5
      32: iload         5
      34: aload         4
      36: invokevirtual #37                 // Method com/sun/javafx/geom/DirtyRegionContainer.size:()I
      39: if_icmpge     69
      42: aload         4
      44: iload         5
      46: invokevirtual #38                 // Method com/sun/javafx/geom/DirtyRegionContainer.getDirtyRegion:(I)Lcom/sun/javafx/geom/RectBounds;
      49: aload_0
      50: getfield      #16                 // Field xoff:I
      53: i2f
      54: aload_0
      55: getfield      #17                 // Field yoff:I
      58: i2f
      59: fconst_0
      60: invokevirtual #39                 // Method com/sun/javafx/geom/RectBounds.translate:(FFF)V
      63: iinc          5, 1
      66: goto          32
      69: aload         4
      71: areturn

  public com.sun.scenario.effect.Effect$AccelType getAccelType(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method com/sun/scenario/effect/CoreEffect.getAccelType:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/Effect$AccelType;
       5: areturn

  public com.sun.scenario.effect.ImageData filterImageDatas(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.impl.state.RenderState, com.sun.scenario.effect.ImageData[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #41                 // Method com/sun/scenario/effect/CoreEffect.filterImageDatas:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Lcom/sun/scenario/effect/impl/state/RenderState;[Lcom/sun/scenario/effect/ImageData;)Lcom/sun/scenario/effect/ImageData;
      11: areturn

  static int access$000(com.sun.scenario.effect.InvertMask);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pad:I
       4: ireturn
}
