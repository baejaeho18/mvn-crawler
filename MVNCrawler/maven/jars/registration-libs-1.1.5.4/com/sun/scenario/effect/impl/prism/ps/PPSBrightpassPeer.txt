Compiled from "PPSBrightpassPeer.java"
public class com.sun.scenario.effect.impl.prism.ps.PPSBrightpassPeer extends com.sun.scenario.effect.impl.prism.ps.PPSOneSamplerPeer {
  public com.sun.scenario.effect.impl.prism.ps.PPSBrightpassPeer(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.impl.Renderer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/sun/scenario/effect/impl/prism/ps/PPSOneSamplerPeer."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/impl/Renderer;Ljava/lang/String;)V
       7: return

  protected final com.sun.scenario.effect.Brightpass getEffect();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/scenario/effect/impl/prism/ps/PPSOneSamplerPeer.getEffect:()Lcom/sun/scenario/effect/Effect;
       4: checkcast     #3                  // class com/sun/scenario/effect/Brightpass
       7: areturn

  private float getThreshold();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/Brightpass;
       4: invokevirtual #5                  // Method com/sun/scenario/effect/Brightpass.getThreshold:()F
       7: freturn

  protected boolean isSamplerLinear(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 0
               default: 12
          }
      12: iconst_0
      13: ireturn

  protected com.sun.prism.ps.Shader createShader();
    Code:
       0: new           #6                  // class java/util/HashMap
       3: dup
       4: invokespecial #7                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #8                  // String baseImg
      11: iconst_0
      12: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: new           #6                  // class java/util/HashMap
      22: dup
      23: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      26: astore_2
      27: aload_2
      28: ldc           #11                 // String threshold
      30: iconst_0
      31: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: invokevirtual #12                 // Method getRenderer:()Lcom/sun/scenario/effect/impl/prism/ps/PPSRenderer;
      42: aload_0
      43: invokevirtual #13                 // Method getShaderName:()Ljava/lang/String;
      46: aload_1
      47: aload_2
      48: iconst_0
      49: invokevirtual #14                 // Method com/sun/scenario/effect/impl/prism/ps/PPSRenderer.createShader:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Z)Lcom/sun/prism/ps/Shader;
      52: areturn

  protected void updateShader(com.sun.prism.ps.Shader);
    Code:
       0: aload_1
       1: ldc           #11                 // String threshold
       3: aload_0
       4: invokespecial #15                 // Method getThreshold:()F
       7: invokeinterface #16,  3           // InterfaceMethod com/sun/prism/ps/Shader.setConstant:(Ljava/lang/String;F)V
      12: return

  protected com.sun.scenario.effect.Effect getEffect();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/Brightpass;
       4: areturn
}
