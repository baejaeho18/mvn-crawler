Compiled from "ImagePool.java"
public class com.sun.scenario.effect.impl.ImagePool {
  public static long numEffects;

  static long numCreated;

  static long pixelsCreated;

  static long numAccessed;

  static long pixelsAccessed;

  static final int QUANT;

  private final java.util.List<java.lang.ref.SoftReference<com.sun.scenario.effect.impl.PoolFilterable>> unlocked;

  private final java.util.List<java.lang.ref.SoftReference<com.sun.scenario.effect.impl.PoolFilterable>> locked;

  private final boolean usePurgatory;

  private final java.util.List<com.sun.scenario.effect.Filterable> hardPurgatory;

  private final java.util.List<java.lang.ref.SoftReference<com.sun.scenario.effect.impl.PoolFilterable>> softPurgatory;

  static void printStats();
    Code:
       0: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
       3: getstatic     #2                  // Field numEffects:J
       6: invokedynamic #3,  0              // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
      11: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      14: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
      17: getstatic     #5                  // Field numCreated:J
      20: invokedynamic #6,  0              // InvokeDynamic #1:makeConcatWithConstants:(J)Ljava/lang/String;
      25: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      28: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
      31: getstatic     #7                  // Field pixelsCreated:J
      34: invokedynamic #8,  0              // InvokeDynamic #2:makeConcatWithConstants:(J)Ljava/lang/String;
      39: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      42: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
      45: getstatic     #9                  // Field numAccessed:J
      48: invokedynamic #10,  0             // InvokeDynamic #3:makeConcatWithConstants:(J)Ljava/lang/String;
      53: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      56: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
      59: getstatic     #11                 // Field pixelsAccessed:J
      62: invokedynamic #12,  0             // InvokeDynamic #4:makeConcatWithConstants:(J)Ljava/lang/String;
      67: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      70: getstatic     #2                  // Field numEffects:J
      73: lconst_0
      74: lcmp
      75: ifeq          122
      78: getstatic     #9                  // Field numAccessed:J
      81: l2d
      82: getstatic     #2                  // Field numEffects:J
      85: l2d
      86: ddiv
      87: dstore_0
      88: getstatic     #11                 // Field pixelsAccessed:J
      91: l2d
      92: getstatic     #2                  // Field numEffects:J
      95: l2d
      96: ddiv
      97: dstore_2
      98: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
     101: dload_0
     102: invokedynamic #13,  0             // InvokeDynamic #5:makeConcatWithConstants:(D)Ljava/lang/String;
     107: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     110: getstatic     #1                  // Field java/lang/System.out:Ljava/io/PrintStream;
     113: dload_2
     114: invokedynamic #14,  0             // InvokeDynamic #6:makeConcatWithConstants:(D)Ljava/lang/String;
     119: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     122: return

  com.sun.scenario.effect.impl.ImagePool();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #16                 // class java/util/ArrayList
       8: dup
       9: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #18                 // Field unlocked:Ljava/util/List;
      15: aload_0
      16: new           #16                 // class java/util/ArrayList
      19: dup
      20: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #19                 // Field locked:Ljava/util/List;
      26: aload_0
      27: ldc           #20                 // String decora.purgatory
      29: invokestatic  #21                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      32: putfield      #22                 // Field usePurgatory:Z
      35: aload_0
      36: new           #16                 // class java/util/ArrayList
      39: dup
      40: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      43: putfield      #23                 // Field hardPurgatory:Ljava/util/List;
      46: aload_0
      47: new           #16                 // class java/util/ArrayList
      50: dup
      51: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      54: putfield      #24                 // Field softPurgatory:Ljava/util/List;
      57: return

  public synchronized com.sun.scenario.effect.impl.PoolFilterable checkOut(com.sun.scenario.effect.impl.Renderer, int, int);
    Code:
       0: iload_2
       1: ifle          8
       4: iload_3
       5: ifgt          12
       8: iconst_1
       9: dup
      10: istore_3
      11: istore_2
      12: iload_2
      13: bipush        32
      15: iadd
      16: iconst_1
      17: isub
      18: bipush        32
      20: idiv
      21: bipush        32
      23: imul
      24: istore_2
      25: iload_3
      26: bipush        32
      28: iadd
      29: iconst_1
      30: isub
      31: bipush        32
      33: idiv
      34: bipush        32
      36: imul
      37: istore_3
      38: aload_1
      39: iload_2
      40: invokevirtual #26                 // Method com/sun/scenario/effect/impl/Renderer.getCompatibleWidth:(I)I
      43: istore_2
      44: aload_1
      45: iload_3
      46: invokevirtual #27                 // Method com/sun/scenario/effect/impl/Renderer.getCompatibleHeight:(I)I
      49: istore_3
      50: getstatic     #9                  // Field numAccessed:J
      53: lconst_1
      54: ladd
      55: putstatic     #9                  // Field numAccessed:J
      58: getstatic     #11                 // Field pixelsAccessed:J
      61: iload_2
      62: i2l
      63: iload_3
      64: i2l
      65: lmul
      66: ladd
      67: putstatic     #11                 // Field pixelsAccessed:J
      70: aconst_null
      71: astore        4
      73: aconst_null
      74: astore        5
      76: ldc           #29                 // int 2147483647
      78: istore        6
      80: aload_0
      81: getfield      #18                 // Field unlocked:Ljava/util/List;
      84: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      89: astore        7
      91: aload         7
      93: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          258
     101: aload         7
     103: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #33                 // class java/lang/ref/SoftReference
     111: astore        8
     113: aload         8
     115: invokevirtual #34                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
     118: checkcast     #35                 // class com/sun/scenario/effect/impl/PoolFilterable
     121: astore        9
     123: aload         9
     125: ifnonnull     138
     128: aload         7
     130: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.remove:()V
     135: goto          91
     138: aload         9
     140: invokeinterface #37,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.getMaxContentWidth:()I
     145: istore        10
     147: aload         9
     149: invokeinterface #38,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.getMaxContentHeight:()I
     154: istore        11
     156: iload         10
     158: iload_2
     159: if_icmplt     255
     162: iload         11
     164: iload_3
     165: if_icmplt     255
     168: iload         10
     170: iload         11
     172: imul
     173: iconst_2
     174: idiv
     175: iload_2
     176: iload_3
     177: imul
     178: if_icmpgt     255
     181: iload         10
     183: iload_2
     184: isub
     185: iload         11
     187: iload_3
     188: isub
     189: imul
     190: istore        12
     192: aload         4
     194: ifnull        204
     197: iload         12
     199: iload         6
     201: if_icmpge     255
     204: aload         9
     206: invokeinterface #39,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.lock:()V
     211: aload         9
     213: invokeinterface #40,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.isLost:()Z
     218: ifeq          231
     221: aload         7
     223: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.remove:()V
     228: goto          91
     231: aload         5
     233: ifnull        243
     236: aload         5
     238: invokeinterface #41,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.unlock:()V
     243: aload         8
     245: astore        4
     247: aload         9
     249: astore        5
     251: iload         12
     253: istore        6
     255: goto          91
     258: aload         4
     260: ifnull        296
     263: aload_0
     264: getfield      #18                 // Field unlocked:Ljava/util/List;
     267: aload         4
     269: invokeinterface #42,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     274: pop
     275: aload_0
     276: getfield      #19                 // Field locked:Ljava/util/List;
     279: aload         4
     281: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     286: pop
     287: aload_1
     288: aload         5
     290: invokevirtual #44                 // Method com/sun/scenario/effect/impl/Renderer.clearImage:(Lcom/sun/scenario/effect/Filterable;)V
     293: aload         5
     295: areturn
     296: aload_0
     297: getfield      #19                 // Field locked:Ljava/util/List;
     300: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     305: astore        7
     307: aload         7
     309: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     314: ifeq          354
     317: aload         7
     319: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     324: checkcast     #33                 // class java/lang/ref/SoftReference
     327: astore        8
     329: aload         8
     331: invokevirtual #34                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
     334: checkcast     #45                 // class com/sun/scenario/effect/Filterable
     337: astore        9
     339: aload         9
     341: ifnonnull     351
     344: aload         7
     346: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.remove:()V
     351: goto          307
     354: aconst_null
     355: astore        8
     357: aload_1
     358: iload_2
     359: iload_3
     360: invokevirtual #46                 // Method com/sun/scenario/effect/impl/Renderer.createCompatibleImage:(II)Lcom/sun/scenario/effect/impl/PoolFilterable;
     363: astore        8
     365: goto          370
     368: astore        9
     370: aload         8
     372: ifnonnull     392
     375: aload_0
     376: invokespecial #48                 // Method pruneCache:()V
     379: aload_1
     380: iload_2
     381: iload_3
     382: invokevirtual #46                 // Method com/sun/scenario/effect/impl/Renderer.createCompatibleImage:(II)Lcom/sun/scenario/effect/impl/PoolFilterable;
     385: astore        8
     387: goto          392
     390: astore        9
     392: aload         8
     394: ifnull        444
     397: aload         8
     399: aload_0
     400: invokeinterface #49,  2           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.setImagePool:(Lcom/sun/scenario/effect/impl/ImagePool;)V
     405: aload_0
     406: getfield      #19                 // Field locked:Ljava/util/List;
     409: new           #33                 // class java/lang/ref/SoftReference
     412: dup
     413: aload         8
     415: invokespecial #50                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
     418: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     423: pop
     424: getstatic     #5                  // Field numCreated:J
     427: lconst_1
     428: ladd
     429: putstatic     #5                  // Field numCreated:J
     432: getstatic     #7                  // Field pixelsCreated:J
     435: iload_2
     436: i2l
     437: iload_3
     438: i2l
     439: lmul
     440: ladd
     441: putstatic     #7                  // Field pixelsCreated:J
     444: aload         8
     446: areturn
    Exception table:
       from    to  target type
         357   365   368   Class java/lang/OutOfMemoryError
         379   387   390   Class java/lang/OutOfMemoryError

  public synchronized void checkIn(com.sun.scenario.effect.impl.PoolFilterable);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: getfield      #19                 // Field locked:Ljava/util/List;
       8: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          86
      25: aload         4
      27: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #33                 // class java/lang/ref/SoftReference
      35: astore        5
      37: aload         5
      39: invokevirtual #34                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      42: checkcast     #45                 // class com/sun/scenario/effect/Filterable
      45: astore        6
      47: aload         6
      49: ifnonnull     62
      52: aload         4
      54: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.remove:()V
      59: goto          83
      62: aload         6
      64: aload_1
      65: if_acmpne     83
      68: aload         5
      70: astore_2
      71: aload         6
      73: astore_3
      74: aload_1
      75: invokeinterface #41,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.unlock:()V
      80: goto          86
      83: goto          15
      86: aload_2
      87: ifnull        144
      90: aload_0
      91: getfield      #19                 // Field locked:Ljava/util/List;
      94: aload_2
      95: invokeinterface #42,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     100: pop
     101: aload_0
     102: getfield      #22                 // Field usePurgatory:Z
     105: ifeq          133
     108: aload_0
     109: getfield      #23                 // Field hardPurgatory:Ljava/util/List;
     112: aload_3
     113: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: aload_0
     120: getfield      #24                 // Field softPurgatory:Ljava/util/List;
     123: aload_2
     124: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     129: pop
     130: goto          144
     133: aload_0
     134: getfield      #18                 // Field unlocked:Ljava/util/List;
     137: aload_2
     138: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     143: pop
     144: return

  public synchronized void releasePurgatory();
    Code:
       0: aload_0
       1: getfield      #22                 // Field usePurgatory:Z
       4: ifeq          51
       7: aload_0
       8: getfield      #24                 // Field softPurgatory:Ljava/util/List;
      11: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          51
      19: aload_0
      20: getfield      #18                 // Field unlocked:Ljava/util/List;
      23: aload_0
      24: getfield      #24                 // Field softPurgatory:Ljava/util/List;
      27: invokeinterface #52,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: aload_0
      34: getfield      #24                 // Field softPurgatory:Ljava/util/List;
      37: invokeinterface #53,  1           // InterfaceMethod java/util/List.clear:()V
      42: aload_0
      43: getfield      #23                 // Field hardPurgatory:Ljava/util/List;
      46: invokeinterface #53,  1           // InterfaceMethod java/util/List.clear:()V
      51: return

  private void pruneCache();
    Code:
       0: aload_0
       1: getfield      #18                 // Field unlocked:Ljava/util/List;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          50
      19: aload_1
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #33                 // class java/lang/ref/SoftReference
      28: astore_2
      29: aload_2
      30: invokevirtual #34                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      33: checkcast     #45                 // class com/sun/scenario/effect/Filterable
      36: astore_3
      37: aload_3
      38: ifnull        47
      41: aload_3
      42: invokeinterface #54,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.flush:()V
      47: goto          10
      50: aload_0
      51: getfield      #18                 // Field unlocked:Ljava/util/List;
      54: invokeinterface #53,  1           // InterfaceMethod java/util/List.clear:()V
      59: invokestatic  #55                 // Method java/lang/System.gc:()V
      62: invokestatic  #56                 // Method java/lang/System.runFinalization:()V
      65: invokestatic  #55                 // Method java/lang/System.gc:()V
      68: invokestatic  #56                 // Method java/lang/System.runFinalization:()V
      71: return

  public synchronized void dispose();
    Code:
       0: aload_0
       1: getfield      #18                 // Field unlocked:Ljava/util/List;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          50
      19: aload_1
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #33                 // class java/lang/ref/SoftReference
      28: astore_2
      29: aload_2
      30: invokevirtual #34                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      33: checkcast     #45                 // class com/sun/scenario/effect/Filterable
      36: astore_3
      37: aload_3
      38: ifnull        47
      41: aload_3
      42: invokeinterface #54,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.flush:()V
      47: goto          10
      50: aload_0
      51: getfield      #18                 // Field unlocked:Ljava/util/List;
      54: invokeinterface #53,  1           // InterfaceMethod java/util/List.clear:()V
      59: aload_0
      60: getfield      #19                 // Field locked:Ljava/util/List;
      63: invokeinterface #53,  1           // InterfaceMethod java/util/List.clear:()V
      68: return

  private static java.lang.Object lambda$static$0();
    Code:
       0: ldc           #57                 // String decora.showstats
       2: invokestatic  #58                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ifnull        21
       8: invokestatic  #59                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      11: new           #60                 // class com/sun/scenario/effect/impl/ImagePool$1
      14: dup
      15: invokespecial #61                 // Method com/sun/scenario/effect/impl/ImagePool$1."<init>":()V
      18: invokevirtual #62                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      21: aconst_null
      22: areturn

  static {};
    Code:
       0: invokedynamic #63,  0             // InvokeDynamic #7:run:()Ljava/security/PrivilegedAction;
       5: invokestatic  #64                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       8: pop
       9: return
}
