Compiled from "Effect.java"
public abstract class com.sun.scenario.effect.Effect {
  public static final com.sun.scenario.effect.Effect DefaultInput;

  private final java.util.List<com.sun.scenario.effect.Effect> inputs;

  private final java.util.List<com.sun.scenario.effect.Effect> unmodifiableInputs;

  private final int maxInputs;

  protected com.sun.scenario.effect.Effect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #3                  // Field inputs:Ljava/util/List;
      11: aload_0
      12: aload_0
      13: getfield      #3                  // Field inputs:Ljava/util/List;
      16: putfield      #4                  // Field unmodifiableInputs:Ljava/util/List;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field maxInputs:I
      24: return

  protected com.sun.scenario.effect.Effect(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: iconst_1
      10: invokespecial #7                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #3                  // Field inputs:Ljava/util/List;
      16: aload_0
      17: aload_0
      18: getfield      #3                  // Field inputs:Ljava/util/List;
      21: invokestatic  #8                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      24: putfield      #4                  // Field unmodifiableInputs:Ljava/util/List;
      27: aload_0
      28: iconst_1
      29: putfield      #5                  // Field maxInputs:I
      32: aload_0
      33: iconst_0
      34: aload_1
      35: invokevirtual #9                  // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
      38: return

  protected com.sun.scenario.effect.Effect(com.sun.scenario.effect.Effect, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: iconst_2
      10: invokespecial #7                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #3                  // Field inputs:Ljava/util/List;
      16: aload_0
      17: aload_0
      18: getfield      #3                  // Field inputs:Ljava/util/List;
      21: invokestatic  #8                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      24: putfield      #4                  // Field unmodifiableInputs:Ljava/util/List;
      27: aload_0
      28: iconst_2
      29: putfield      #5                  // Field maxInputs:I
      32: aload_0
      33: iconst_0
      34: aload_1
      35: invokevirtual #9                  // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
      38: aload_0
      39: iconst_1
      40: aload_2
      41: invokevirtual #9                  // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
      44: return

  java.lang.Object getState();
    Code:
       0: aconst_null
       1: areturn

  public int getNumInputs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field inputs:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public final java.util.List<com.sun.scenario.effect.Effect> getInputs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field unmodifiableInputs:Ljava/util/List;
       4: areturn

  protected void setInput(int, com.sun.scenario.effect.Effect);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #5                  // Field maxInputs:I
       9: if_icmplt     22
      12: new           #11                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #12                 // String Index must be within allowable range
      18: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iload_1
      23: aload_0
      24: getfield      #3                  // Field inputs:Ljava/util/List;
      27: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      32: if_icmpge     50
      35: aload_0
      36: getfield      #3                  // Field inputs:Ljava/util/List;
      39: iload_1
      40: aload_2
      41: invokeinterface #14,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: goto          61
      50: aload_0
      51: getfield      #3                  // Field inputs:Ljava/util/List;
      54: aload_2
      55: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: return

  public static com.sun.javafx.geom.BaseBounds combineBounds(com.sun.javafx.geom.BaseBounds...);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: arraylength
       4: iconst_1
       5: if_icmpne     15
       8: aload_0
       9: iconst_0
      10: aaload
      11: astore_1
      12: goto          71
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: arraylength
      20: if_icmpge     71
      23: aload_0
      24: iload_2
      25: aaload
      26: astore_3
      27: aload_3
      28: ifnull        65
      31: aload_3
      32: invokevirtual #16                 // Method com/sun/javafx/geom/BaseBounds.isEmpty:()Z
      35: ifne          65
      38: aload_1
      39: ifnonnull     59
      42: new           #17                 // class com/sun/javafx/geom/RectBounds
      45: dup
      46: invokespecial #18                 // Method com/sun/javafx/geom/RectBounds."<init>":()V
      49: astore_1
      50: aload_1
      51: aload_3
      52: invokevirtual #19                 // Method com/sun/javafx/geom/BaseBounds.deriveWithNewBounds:(Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      55: astore_1
      56: goto          65
      59: aload_1
      60: aload_3
      61: invokevirtual #20                 // Method com/sun/javafx/geom/BaseBounds.deriveWithUnion:(Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      64: astore_1
      65: iinc          2, 1
      68: goto          17
      71: aload_1
      72: ifnonnull     83
      75: new           #17                 // class com/sun/javafx/geom/RectBounds
      78: dup
      79: invokespecial #18                 // Method com/sun/javafx/geom/RectBounds."<init>":()V
      82: astore_1
      83: aload_1
      84: areturn

  public static com.sun.javafx.geom.Rectangle combineBounds(com.sun.javafx.geom.Rectangle...);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: arraylength
       4: iconst_1
       5: if_icmpne     15
       8: aload_0
       9: iconst_0
      10: aaload
      11: astore_1
      12: goto          65
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: arraylength
      20: if_icmpge     65
      23: aload_0
      24: iload_2
      25: aaload
      26: astore_3
      27: aload_3
      28: ifnull        59
      31: aload_3
      32: invokevirtual #21                 // Method com/sun/javafx/geom/Rectangle.isEmpty:()Z
      35: ifne          59
      38: aload_1
      39: ifnonnull     54
      42: new           #22                 // class com/sun/javafx/geom/Rectangle
      45: dup
      46: aload_3
      47: invokespecial #23                 // Method com/sun/javafx/geom/Rectangle."<init>":(Lcom/sun/javafx/geom/Rectangle;)V
      50: astore_1
      51: goto          59
      54: aload_1
      55: aload_3
      56: invokevirtual #24                 // Method com/sun/javafx/geom/Rectangle.add:(Lcom/sun/javafx/geom/Rectangle;)V
      59: iinc          2, 1
      62: goto          17
      65: aload_1
      66: ifnonnull     77
      69: new           #22                 // class com/sun/javafx/geom/Rectangle
      72: dup
      73: invokespecial #25                 // Method com/sun/javafx/geom/Rectangle."<init>":()V
      76: astore_1
      77: aload_1
      78: areturn

  public com.sun.javafx.geom.Rectangle getResultBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.ImageData...);
    Code:
       0: aload_3
       1: arraylength
       2: istore        4
       4: iload         4
       6: anewarray     #22                 // class com/sun/javafx/geom/Rectangle
       9: astore        5
      11: iconst_0
      12: istore        6
      14: iload         6
      16: iload         4
      18: if_icmpge     40
      21: aload         5
      23: iload         6
      25: aload_3
      26: iload         6
      28: aaload
      29: aload_2
      30: invokevirtual #26                 // Method com/sun/scenario/effect/ImageData.getTransformedBounds:(Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/javafx/geom/Rectangle;
      33: aastore
      34: iinc          6, 1
      37: goto          14
      40: aload         5
      42: invokestatic  #27                 // Method combineBounds:([Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/javafx/geom/Rectangle;
      45: astore        6
      47: aload         6
      49: areturn

  public abstract com.sun.scenario.effect.ImageData filter(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, java.lang.Object, com.sun.scenario.effect.Effect);

  public static com.sun.javafx.geom.BaseBounds transformBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.BaseBounds);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #28                 // Method com/sun/javafx/geom/transform/BaseTransform.isIdentity:()Z
       8: ifeq          13
      11: aload_1
      12: areturn
      13: new           #17                 // class com/sun/javafx/geom/RectBounds
      16: dup
      17: invokespecial #18                 // Method com/sun/javafx/geom/RectBounds."<init>":()V
      20: astore_2
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #29                 // Method com/sun/javafx/geom/transform/BaseTransform.transform:(Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      27: astore_2
      28: aload_2
      29: areturn

  protected com.sun.scenario.effect.ImageData ensureTransform(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.ImageData, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle);
    Code:
       0: aload_3
       1: ifnull        11
       4: aload_3
       5: invokevirtual #28                 // Method com/sun/javafx/geom/transform/BaseTransform.isIdentity:()Z
       8: ifeq          13
      11: aload_2
      12: areturn
      13: aload_2
      14: aload_1
      15: invokevirtual #30                 // Method com/sun/scenario/effect/ImageData.validate:(Lcom/sun/scenario/effect/FilterContext;)Z
      18: ifne          42
      21: aload_2
      22: invokevirtual #31                 // Method com/sun/scenario/effect/ImageData.unref:()V
      25: new           #32                 // class com/sun/scenario/effect/ImageData
      28: dup
      29: aload_1
      30: aconst_null
      31: new           #22                 // class com/sun/javafx/geom/Rectangle
      34: dup
      35: invokespecial #25                 // Method com/sun/javafx/geom/Rectangle."<init>":()V
      38: invokespecial #33                 // Method com/sun/scenario/effect/ImageData."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/Filterable;Lcom/sun/javafx/geom/Rectangle;)V
      41: areturn
      42: aload_2
      43: aload_3
      44: invokevirtual #34                 // Method com/sun/scenario/effect/ImageData.transform:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/scenario/effect/ImageData;
      47: areturn

  public com.sun.javafx.geom.DirtyRegionContainer getDirtyRegions(com.sun.scenario.effect.Effect, com.sun.javafx.geom.DirtyRegionPool);
    Code:
       0: aconst_null
       1: astore_3
       2: iconst_0
       3: istore        4
       5: iload         4
       7: aload_0
       8: getfield      #3                  // Field inputs:Ljava/util/List;
      11: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      16: if_icmpge     61
      19: aload_0
      20: iload         4
      22: aload_1
      23: invokevirtual #35                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
      26: aload_1
      27: aload_2
      28: invokevirtual #36                 // Method getDirtyRegions:(Lcom/sun/scenario/effect/Effect;Lcom/sun/javafx/geom/DirtyRegionPool;)Lcom/sun/javafx/geom/DirtyRegionContainer;
      31: astore        5
      33: aload_3
      34: ifnonnull     43
      37: aload         5
      39: astore_3
      40: goto          55
      43: aload_3
      44: aload         5
      46: invokevirtual #37                 // Method com/sun/javafx/geom/DirtyRegionContainer.merge:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
      49: aload_2
      50: aload         5
      52: invokevirtual #38                 // Method com/sun/javafx/geom/DirtyRegionPool.checkIn:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
      55: iinc          4, 1
      58: goto          5
      61: aload_3
      62: ifnonnull     70
      65: aload_2
      66: invokevirtual #39                 // Method com/sun/javafx/geom/DirtyRegionPool.checkOut:()Lcom/sun/javafx/geom/DirtyRegionContainer;
      69: astore_3
      70: aload_3
      71: areturn

  com.sun.scenario.effect.Effect getDefaultedInput(int, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: getfield      #3                  // Field inputs:Ljava/util/List;
       4: iload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #41                 // class com/sun/scenario/effect/Effect
      13: aload_2
      14: invokestatic  #42                 // Method getDefaultedInput:(Lcom/sun/scenario/effect/Effect;Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
      17: areturn

  static com.sun.scenario.effect.Effect getDefaultedInput(com.sun.scenario.effect.Effect, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aload_1
       5: goto          9
       8: aload_0
       9: areturn

  public abstract com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.scenario.effect.Effect);

  public com.sun.javafx.geom.Point2D transform(com.sun.javafx.geom.Point2D, com.sun.scenario.effect.Effect);
    Code:
       0: aload_1
       1: areturn

  public com.sun.javafx.geom.Point2D untransform(com.sun.javafx.geom.Point2D, com.sun.scenario.effect.Effect);
    Code:
       0: aload_1
       1: areturn

  public static com.sun.scenario.effect.Filterable createCompatibleImage(com.sun.scenario.effect.FilterContext, int, int);
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method com/sun/scenario/effect/impl/Renderer.getRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
       4: iload_1
       5: iload_2
       6: invokevirtual #44                 // Method com/sun/scenario/effect/impl/Renderer.createCompatibleImage:(II)Lcom/sun/scenario/effect/impl/PoolFilterable;
       9: areturn

  public static com.sun.scenario.effect.Filterable getCompatibleImage(com.sun.scenario.effect.FilterContext, int, int);
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method com/sun/scenario/effect/impl/Renderer.getRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
       4: iload_1
       5: iload_2
       6: invokevirtual #45                 // Method com/sun/scenario/effect/impl/Renderer.getCompatibleImage:(II)Lcom/sun/scenario/effect/impl/PoolFilterable;
       9: areturn

  public static void releaseCompatibleImage(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.Filterable);
    Code:
       0: aload_0
       1: invokestatic  #43                 // Method com/sun/scenario/effect/impl/Renderer.getRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
       4: aload_1
       5: invokevirtual #46                 // Method com/sun/scenario/effect/impl/Renderer.releaseCompatibleImage:(Lcom/sun/scenario/effect/Filterable;)V
       8: return

  public abstract boolean reducesOpaquePixels();

  public abstract com.sun.scenario.effect.Effect$AccelType getAccelType(com.sun.scenario.effect.FilterContext);

  private static java.lang.Object lambda$static$0(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getState:()Ljava/lang/Object;
       4: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #48                 // Field DefaultInput:Lcom/sun/scenario/effect/Effect;
       4: invokedynamic #49,  0             // InvokeDynamic #0:getState:()Lcom/sun/scenario/effect/impl/state/AccessHelper$StateAccessor;
       9: invokestatic  #50                 // Method com/sun/scenario/effect/impl/state/AccessHelper.setStateAccessor:(Lcom/sun/scenario/effect/impl/state/AccessHelper$StateAccessor;)V
      12: return
}
