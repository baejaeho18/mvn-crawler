Compiled from "PhongLighting.java"
public class com.sun.scenario.effect.PhongLighting extends com.sun.scenario.effect.CoreEffect<com.sun.scenario.effect.impl.state.RenderState> {
  private float surfaceScale;

  private float diffuseConstant;

  private float specularConstant;

  private float specularExponent;

  private com.sun.scenario.effect.light.Light light;

  public com.sun.scenario.effect.PhongLighting(com.sun.scenario.effect.light.Light);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class com/sun/scenario/effect/GaussianShadow
       5: dup
       6: ldc           #2                  // float 10.0f
       8: invokespecial #3                  // Method com/sun/scenario/effect/GaussianShadow."<init>":(F)V
      11: getstatic     #4                  // Field DefaultInput:Lcom/sun/scenario/effect/Effect;
      14: invokespecial #5                  // Method "<init>":(Lcom/sun/scenario/effect/light/Light;Lcom/sun/scenario/effect/Effect;Lcom/sun/scenario/effect/Effect;)V
      17: return

  public com.sun.scenario.effect.PhongLighting(com.sun.scenario.effect.light.Light, com.sun.scenario.effect.Effect, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #6                  // Method com/sun/scenario/effect/CoreEffect."<init>":(Lcom/sun/scenario/effect/Effect;Lcom/sun/scenario/effect/Effect;)V
       6: aload_0
       7: fconst_1
       8: putfield      #7                  // Field surfaceScale:F
      11: aload_0
      12: fconst_1
      13: putfield      #8                  // Field diffuseConstant:F
      16: aload_0
      17: fconst_1
      18: putfield      #9                  // Field specularConstant:F
      21: aload_0
      22: fconst_1
      23: putfield      #10                 // Field specularExponent:F
      26: aload_0
      27: aload_1
      28: invokevirtual #11                 // Method setLight:(Lcom/sun/scenario/effect/light/Light;)V
      31: return

  public final com.sun.scenario.effect.Effect getBumpInput();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getInputs:()Ljava/util/List;
       4: iconst_0
       5: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #14                 // class com/sun/scenario/effect/Effect
      13: areturn

  public void setBumpInput(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #15                 // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
       6: return

  public final com.sun.scenario.effect.Effect getContentInput();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getInputs:()Ljava/util/List;
       4: iconst_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #14                 // class com/sun/scenario/effect/Effect
      13: areturn

  private com.sun.scenario.effect.Effect getContentInput(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokevirtual #16                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: areturn

  public void setContentInput(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokevirtual #15                 // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
       6: return

  public com.sun.scenario.effect.light.Light getLight();
    Code:
       0: aload_0
       1: getfield      #17                 // Field light:Lcom/sun/scenario/effect/light/Light;
       4: areturn

  public void setLight(com.sun.scenario.effect.light.Light);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #18                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #19                 // String Light must be non-null
      10: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #17                 // Field light:Lcom/sun/scenario/effect/light/Light;
      19: aload_0
      20: aload_1
      21: invokevirtual #21                 // Method com/sun/scenario/effect/light/Light.getType:()Lcom/sun/scenario/effect/light/Light$Type;
      24: invokevirtual #22                 // Method com/sun/scenario/effect/light/Light$Type.name:()Ljava/lang/String;
      27: invokedynamic #23,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      32: invokevirtual #24                 // Method updatePeerKey:(Ljava/lang/String;)V
      35: return

  public float getDiffuseConstant();
    Code:
       0: aload_0
       1: getfield      #8                  // Field diffuseConstant:F
       4: freturn

  public void setDiffuseConstant(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          12
       6: fload_1
       7: fconst_2
       8: fcmpl
       9: ifle          22
      12: new           #18                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #25                 // String Diffuse constant must be in the range [0,2]
      18: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #8                  // Field diffuseConstant:F
      26: fstore_2
      27: aload_0
      28: fload_1
      29: putfield      #8                  // Field diffuseConstant:F
      32: return

  public float getSpecularConstant();
    Code:
       0: aload_0
       1: getfield      #9                  // Field specularConstant:F
       4: freturn

  public void setSpecularConstant(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          12
       6: fload_1
       7: fconst_2
       8: fcmpl
       9: ifle          22
      12: new           #18                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #26                 // String Specular constant must be in the range [0,2]
      18: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #9                  // Field specularConstant:F
      26: fstore_2
      27: aload_0
      28: fload_1
      29: putfield      #9                  // Field specularConstant:F
      32: return

  public float getSpecularExponent();
    Code:
       0: aload_0
       1: getfield      #10                 // Field specularExponent:F
       4: freturn

  public void setSpecularExponent(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          13
       6: fload_1
       7: ldc           #27                 // float 40.0f
       9: fcmpl
      10: ifle          23
      13: new           #18                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #28                 // String Specular exponent must be in the range [0,40]
      19: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #10                 // Field specularExponent:F
      27: fstore_2
      28: aload_0
      29: fload_1
      30: putfield      #10                 // Field specularExponent:F
      33: return

  public float getSurfaceScale();
    Code:
       0: aload_0
       1: getfield      #7                  // Field surfaceScale:F
       4: freturn

  public void setSurfaceScale(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          13
       6: fload_1
       7: ldc           #2                  // float 10.0f
       9: fcmpl
      10: ifle          23
      13: new           #18                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #29                 // String Surface scale must be in the range [0,10]
      19: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #7                  // Field surfaceScale:F
      27: fstore_2
      28: aload_0
      29: fload_1
      30: putfield      #7                  // Field surfaceScale:F
      33: return

  public com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #30                 // Method getContentInput:(Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       5: aload_1
       6: aload_2
       7: invokevirtual #31                 // Method com/sun/scenario/effect/Effect.getBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/BaseBounds;
      10: areturn

  public com.sun.javafx.geom.Rectangle getResultBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.ImageData...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: anewarray     #32                 // class com/sun/scenario/effect/ImageData
       7: dup
       8: iconst_0
       9: aload_3
      10: iconst_1
      11: aaload
      12: aastore
      13: invokespecial #33                 // Method com/sun/scenario/effect/CoreEffect.getResultBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;[Lcom/sun/scenario/effect/ImageData;)Lcom/sun/javafx/geom/Rectangle;
      16: areturn

  public com.sun.javafx.geom.Point2D transform(com.sun.javafx.geom.Point2D, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #30                 // Method getContentInput:(Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       5: aload_1
       6: aload_2
       7: invokevirtual #34                 // Method com/sun/scenario/effect/Effect.transform:(Lcom/sun/javafx/geom/Point2D;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/Point2D;
      10: areturn

  public com.sun.javafx.geom.Point2D untransform(com.sun.javafx.geom.Point2D, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #30                 // Method getContentInput:(Lcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       5: aload_1
       6: aload_2
       7: invokevirtual #35                 // Method com/sun/scenario/effect/Effect.untransform:(Lcom/sun/javafx/geom/Point2D;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/Point2D;
      10: areturn

  public com.sun.scenario.effect.impl.state.RenderState getRenderState(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, java.lang.Object, com.sun.scenario.effect.Effect);
    Code:
       0: new           #36                 // class com/sun/scenario/effect/PhongLighting$1
       3: dup
       4: aload_0
       5: invokespecial #37                 // Method com/sun/scenario/effect/PhongLighting$1."<init>":(Lcom/sun/scenario/effect/PhongLighting;)V
       8: areturn

  public boolean reducesOpaquePixels();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getContentInput:()Lcom/sun/scenario/effect/Effect;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #39                 // Method com/sun/scenario/effect/Effect.reducesOpaquePixels:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public com.sun.javafx.geom.DirtyRegionContainer getDirtyRegions(com.sun.scenario.effect.Effect, com.sun.javafx.geom.DirtyRegionPool);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #16                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: astore_3
       7: aload_3
       8: aload_1
       9: aload_2
      10: invokevirtual #40                 // Method com/sun/scenario/effect/Effect.getDirtyRegions:(Lcom/sun/scenario/effect/Effect;Lcom/sun/javafx/geom/DirtyRegionPool;)Lcom/sun/javafx/geom/DirtyRegionContainer;
      13: astore        4
      15: aload         4
      17: iconst_1
      18: iconst_1
      19: invokevirtual #41                 // Method com/sun/javafx/geom/DirtyRegionContainer.grow:(II)V
      22: aload_0
      23: iconst_1
      24: aload_1
      25: invokevirtual #16                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
      28: astore        5
      30: aload         5
      32: aload_1
      33: aload_2
      34: invokevirtual #40                 // Method com/sun/scenario/effect/Effect.getDirtyRegions:(Lcom/sun/scenario/effect/Effect;Lcom/sun/javafx/geom/DirtyRegionPool;)Lcom/sun/javafx/geom/DirtyRegionContainer;
      37: astore        6
      39: aload         4
      41: aload         6
      43: invokevirtual #42                 // Method com/sun/javafx/geom/DirtyRegionContainer.merge:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
      46: aload_2
      47: aload         6
      49: invokevirtual #43                 // Method com/sun/javafx/geom/DirtyRegionPool.checkIn:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
      52: aload         4
      54: areturn

  public com.sun.scenario.effect.Effect$AccelType getAccelType(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method com/sun/scenario/effect/CoreEffect.getAccelType:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/Effect$AccelType;
       5: areturn

  public com.sun.scenario.effect.ImageData filterImageDatas(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.impl.state.RenderState, com.sun.scenario.effect.ImageData[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #45                 // Method com/sun/scenario/effect/CoreEffect.filterImageDatas:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Lcom/sun/scenario/effect/impl/state/RenderState;[Lcom/sun/scenario/effect/ImageData;)Lcom/sun/scenario/effect/ImageData;
      11: areturn
}
