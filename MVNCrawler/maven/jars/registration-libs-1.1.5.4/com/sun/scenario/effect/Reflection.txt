Compiled from "Reflection.java"
public class com.sun.scenario.effect.Reflection extends com.sun.scenario.effect.CoreEffect<com.sun.scenario.effect.impl.state.RenderState> {
  private float topOffset;

  private float topOpacity;

  private float bottomOpacity;

  private float fraction;

  public com.sun.scenario.effect.Reflection();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field DefaultInput:Lcom/sun/scenario/effect/Effect;
       4: invokespecial #2                  // Method "<init>":(Lcom/sun/scenario/effect/Effect;)V
       7: return

  public com.sun.scenario.effect.Reflection(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method com/sun/scenario/effect/CoreEffect."<init>":(Lcom/sun/scenario/effect/Effect;)V
       5: aload_0
       6: fconst_0
       7: putfield      #4                  // Field topOffset:F
      10: aload_0
      11: ldc           #5                  // float 0.5f
      13: putfield      #6                  // Field topOpacity:F
      16: aload_0
      17: fconst_0
      18: putfield      #7                  // Field bottomOpacity:F
      21: aload_0
      22: ldc           #8                  // float 0.75f
      24: putfield      #9                  // Field fraction:F
      27: aload_0
      28: ldc           #10                 // String Reflection
      30: invokevirtual #11                 // Method updatePeerKey:(Ljava/lang/String;)V
      33: return

  public final com.sun.scenario.effect.Effect getInput();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getInputs:()Ljava/util/List;
       4: iconst_0
       5: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #14                 // class com/sun/scenario/effect/Effect
      13: areturn

  public void setInput(com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #15                 // Method setInput:(ILcom/sun/scenario/effect/Effect;)V
       6: return

  public float getTopOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field topOffset:F
       4: freturn

  public void setTopOffset(float);
    Code:
       0: aload_0
       1: getfield      #4                  // Field topOffset:F
       4: fstore_2
       5: aload_0
       6: fload_1
       7: putfield      #4                  // Field topOffset:F
      10: return

  public float getTopOpacity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field topOpacity:F
       4: freturn

  public void setTopOpacity(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          12
       6: fload_1
       7: fconst_1
       8: fcmpl
       9: ifle          22
      12: new           #16                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #17                 // String Top opacity must be in the range [0,1]
      18: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #6                  // Field topOpacity:F
      26: fstore_2
      27: aload_0
      28: fload_1
      29: putfield      #6                  // Field topOpacity:F
      32: return

  public float getBottomOpacity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bottomOpacity:F
       4: freturn

  public void setBottomOpacity(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          12
       6: fload_1
       7: fconst_1
       8: fcmpl
       9: ifle          22
      12: new           #16                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #19                 // String Bottom opacity must be in the range [0,1]
      18: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #7                  // Field bottomOpacity:F
      26: fstore_2
      27: aload_0
      28: fload_1
      29: putfield      #7                  // Field bottomOpacity:F
      32: return

  public float getFraction();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fraction:F
       4: freturn

  public void setFraction(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: iflt          12
       6: fload_1
       7: fconst_1
       8: fcmpl
       9: ifle          22
      12: new           #16                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #20                 // String Fraction must be in the range [0,1]
      18: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #9                  // Field fraction:F
      26: fstore_2
      27: aload_0
      28: fload_1
      29: putfield      #9                  // Field fraction:F
      32: return

  public com.sun.javafx.geom.BaseBounds getBounds(com.sun.javafx.geom.transform.BaseTransform, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_2
       3: invokevirtual #21                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: astore_3
       7: aload_3
       8: getstatic     #22                 // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      11: aload_2
      12: invokevirtual #23                 // Method com/sun/scenario/effect/Effect.getBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/BaseBounds;
      15: astore        4
      17: aload         4
      19: invokevirtual #24                 // Method com/sun/javafx/geom/BaseBounds.roundOut:()V
      22: aload         4
      24: invokevirtual #25                 // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
      27: fstore        5
      29: aload         4
      31: invokevirtual #26                 // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
      34: aload_0
      35: getfield      #4                  // Field topOffset:F
      38: fadd
      39: fstore        6
      41: aload         4
      43: invokevirtual #27                 // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
      46: fstore        7
      48: fload         6
      50: aload_0
      51: getfield      #9                  // Field fraction:F
      54: aload         4
      56: invokevirtual #28                 // Method com/sun/javafx/geom/BaseBounds.getHeight:()F
      59: fmul
      60: fadd
      61: fstore        8
      63: new           #29                 // class com/sun/javafx/geom/RectBounds
      66: dup
      67: fload         5
      69: fload         6
      71: fload         7
      73: fload         8
      75: invokespecial #30                 // Method com/sun/javafx/geom/RectBounds."<init>":(FFFF)V
      78: astore        9
      80: aload         9
      82: aload         4
      84: invokevirtual #31                 // Method com/sun/javafx/geom/BaseBounds.deriveWithUnion:(Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      87: astore        9
      89: aload_1
      90: aload         9
      92: invokestatic  #32                 // Method transformBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)Lcom/sun/javafx/geom/BaseBounds;
      95: areturn

  public com.sun.javafx.geom.Point2D transform(com.sun.javafx.geom.Point2D, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_2
       3: invokevirtual #21                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: aload_1
       7: aload_2
       8: invokevirtual #33                 // Method com/sun/scenario/effect/Effect.transform:(Lcom/sun/javafx/geom/Point2D;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/Point2D;
      11: areturn

  public com.sun.javafx.geom.Point2D untransform(com.sun.javafx.geom.Point2D, com.sun.scenario.effect.Effect);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_2
       3: invokevirtual #21                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: aload_1
       7: aload_2
       8: invokevirtual #34                 // Method com/sun/scenario/effect/Effect.untransform:(Lcom/sun/javafx/geom/Point2D;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/Point2D;
      11: areturn

  public com.sun.scenario.effect.impl.state.RenderState getRenderState(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, java.lang.Object, com.sun.scenario.effect.Effect);
    Code:
       0: getstatic     #35                 // Field com/sun/scenario/effect/impl/state/RenderState.UnclippedUserSpaceRenderState:Lcom/sun/scenario/effect/impl/state/RenderState;
       3: areturn

  public boolean reducesOpaquePixels();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getInput:()Lcom/sun/scenario/effect/Effect;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #37                 // Method com/sun/scenario/effect/Effect.reducesOpaquePixels:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public com.sun.javafx.geom.DirtyRegionContainer getDirtyRegions(com.sun.scenario.effect.Effect, com.sun.javafx.geom.DirtyRegionPool);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #21                 // Method getDefaultedInput:(ILcom/sun/scenario/effect/Effect;)Lcom/sun/scenario/effect/Effect;
       6: astore_3
       7: aload_3
       8: aload_1
       9: aload_2
      10: invokevirtual #38                 // Method com/sun/scenario/effect/Effect.getDirtyRegions:(Lcom/sun/scenario/effect/Effect;Lcom/sun/javafx/geom/DirtyRegionPool;)Lcom/sun/javafx/geom/DirtyRegionContainer;
      13: astore        4
      15: aload_3
      16: getstatic     #22                 // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      19: aload_1
      20: invokevirtual #23                 // Method com/sun/scenario/effect/Effect.getBounds:(Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/scenario/effect/Effect;)Lcom/sun/javafx/geom/BaseBounds;
      23: astore        5
      25: aload         5
      27: invokevirtual #26                 // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
      30: fstore        6
      32: fconst_2
      33: fload         6
      35: fmul
      36: aload_0
      37: invokevirtual #39                 // Method getTopOffset:()F
      40: fadd
      41: fstore        7
      43: fload         6
      45: aload_0
      46: invokevirtual #39                 // Method getTopOffset:()F
      49: fadd
      50: aload_0
      51: getfield      #9                  // Field fraction:F
      54: aload         5
      56: invokevirtual #28                 // Method com/sun/javafx/geom/BaseBounds.getHeight:()F
      59: fmul
      60: fadd
      61: fstore        8
      63: aload_2
      64: invokevirtual #40                 // Method com/sun/javafx/geom/DirtyRegionPool.checkOut:()Lcom/sun/javafx/geom/DirtyRegionContainer;
      67: astore        9
      69: iconst_0
      70: istore        10
      72: iload         10
      74: aload         4
      76: invokevirtual #41                 // Method com/sun/javafx/geom/DirtyRegionContainer.size:()I
      79: if_icmpge     148
      82: aload         4
      84: iload         10
      86: invokevirtual #42                 // Method com/sun/javafx/geom/DirtyRegionContainer.getDirtyRegion:(I)Lcom/sun/javafx/geom/RectBounds;
      89: astore        11
      91: fload         7
      93: aload         11
      95: invokevirtual #26                 // Method com/sun/javafx/geom/BaseBounds.getMaxY:()F
      98: fsub
      99: fstore        12
     101: fload         8
     103: fload         12
     105: aload         11
     107: invokevirtual #28                 // Method com/sun/javafx/geom/BaseBounds.getHeight:()F
     110: fadd
     111: invokestatic  #43                 // Method java/lang/Math.min:(FF)F
     114: fstore        13
     116: aload         9
     118: new           #29                 // class com/sun/javafx/geom/RectBounds
     121: dup
     122: aload         11
     124: invokevirtual #25                 // Method com/sun/javafx/geom/BaseBounds.getMinX:()F
     127: fload         12
     129: aload         11
     131: invokevirtual #27                 // Method com/sun/javafx/geom/BaseBounds.getMaxX:()F
     134: fload         13
     136: invokespecial #30                 // Method com/sun/javafx/geom/RectBounds."<init>":(FFFF)V
     139: invokevirtual #44                 // Method com/sun/javafx/geom/DirtyRegionContainer.addDirtyRegion:(Lcom/sun/javafx/geom/RectBounds;)V
     142: iinc          10, 1
     145: goto          72
     148: aload         4
     150: aload         9
     152: invokevirtual #45                 // Method com/sun/javafx/geom/DirtyRegionContainer.merge:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
     155: aload_2
     156: aload         9
     158: invokevirtual #46                 // Method com/sun/javafx/geom/DirtyRegionPool.checkIn:(Lcom/sun/javafx/geom/DirtyRegionContainer;)V
     161: aload         4
     163: areturn

  public com.sun.scenario.effect.Effect$AccelType getAccelType(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method com/sun/scenario/effect/CoreEffect.getAccelType:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/Effect$AccelType;
       5: areturn

  public com.sun.scenario.effect.ImageData filterImageDatas(com.sun.scenario.effect.FilterContext, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.scenario.effect.impl.state.RenderState, com.sun.scenario.effect.ImageData[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #48                 // Method com/sun/scenario/effect/CoreEffect.filterImageDatas:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Lcom/sun/scenario/effect/impl/state/RenderState;[Lcom/sun/scenario/effect/ImageData;)Lcom/sun/scenario/effect/ImageData;
      11: areturn
}
