Compiled from "FloatMap.java"
public class com.sun.scenario.effect.FloatMap {
  private final int width;

  private final int height;

  private final java.nio.FloatBuffer buf;

  private boolean cacheValid;

  private java.util.Map<com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.FloatMap$Entry> cache;

  public com.sun.scenario.effect.FloatMap(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifle          26
       8: iload_1
       9: sipush        4096
      12: if_icmpgt     26
      15: iload_2
      16: ifle          26
      19: iload_2
      20: sipush        4096
      23: if_icmple     36
      26: new           #2                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #3                  // String Width and height must be in the range [1, 4096]
      32: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #5                  // Field width:I
      41: aload_0
      42: iload_2
      43: putfield      #6                  // Field height:I
      46: iload_1
      47: iload_2
      48: imul
      49: iconst_4
      50: imul
      51: istore_3
      52: aload_0
      53: iload_3
      54: newarray       float
      56: invokestatic  #7                  // Method java/nio/FloatBuffer.wrap:([F)Ljava/nio/FloatBuffer;
      59: putfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      62: return

  public int getWidth();
    Code:
       0: aload_0
       1: getfield      #5                  // Field width:I
       4: ireturn

  public int getHeight();
    Code:
       0: aload_0
       1: getfield      #6                  // Field height:I
       4: ireturn

  public float[] getData();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
       4: invokevirtual #9                  // Method java/nio/FloatBuffer.array:()[F
       7: areturn

  public java.nio.FloatBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
       4: areturn

  public float getSample(int, int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
       4: iload_1
       5: iload_2
       6: aload_0
       7: getfield      #5                  // Field width:I
      10: imul
      11: iadd
      12: iconst_4
      13: imul
      14: iload_3
      15: iadd
      16: invokevirtual #10                 // Method java/nio/FloatBuffer.get:(I)F
      19: freturn

  public void setSample(int, int, int, float);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
       4: iload_1
       5: iload_2
       6: aload_0
       7: getfield      #5                  // Field width:I
      10: imul
      11: iadd
      12: iconst_4
      13: imul
      14: iload_3
      15: iadd
      16: fload         4
      18: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      21: pop
      22: aload_0
      23: iconst_0
      24: putfield      #12                 // Field cacheValid:Z
      27: return

  public void setSamples(int, int, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: getfield      #5                  // Field width:I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        4
      12: aload_0
      13: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      16: iload         4
      18: iconst_0
      19: iadd
      20: fload_3
      21: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      24: pop
      25: aload_0
      26: iconst_0
      27: putfield      #12                 // Field cacheValid:Z
      30: return

  public void setSamples(int, int, float, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: getfield      #5                  // Field width:I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        5
      12: aload_0
      13: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      16: iload         5
      18: iconst_0
      19: iadd
      20: fload_3
      21: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      24: pop
      25: aload_0
      26: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      29: iload         5
      31: iconst_1
      32: iadd
      33: fload         4
      35: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      38: pop
      39: aload_0
      40: iconst_0
      41: putfield      #12                 // Field cacheValid:Z
      44: return

  public void setSamples(int, int, float, float, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: getfield      #5                  // Field width:I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        6
      12: aload_0
      13: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      16: iload         6
      18: iconst_0
      19: iadd
      20: fload_3
      21: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      24: pop
      25: aload_0
      26: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      29: iload         6
      31: iconst_1
      32: iadd
      33: fload         4
      35: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      38: pop
      39: aload_0
      40: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      43: iload         6
      45: iconst_2
      46: iadd
      47: fload         5
      49: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      52: pop
      53: aload_0
      54: iconst_0
      55: putfield      #12                 // Field cacheValid:Z
      58: return

  public void setSamples(int, int, float, float, float, float);
    Code:
       0: iload_1
       1: iload_2
       2: aload_0
       3: getfield      #5                  // Field width:I
       6: imul
       7: iadd
       8: iconst_4
       9: imul
      10: istore        7
      12: aload_0
      13: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      16: iload         7
      18: iconst_0
      19: iadd
      20: fload_3
      21: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      24: pop
      25: aload_0
      26: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      29: iload         7
      31: iconst_1
      32: iadd
      33: fload         4
      35: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      38: pop
      39: aload_0
      40: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      43: iload         7
      45: iconst_2
      46: iadd
      47: fload         5
      49: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      52: pop
      53: aload_0
      54: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      57: iload         7
      59: iconst_3
      60: iadd
      61: fload         6
      63: invokevirtual #11                 // Method java/nio/FloatBuffer.put:(IF)Ljava/nio/FloatBuffer;
      66: pop
      67: aload_0
      68: iconst_0
      69: putfield      #12                 // Field cacheValid:Z
      72: return

  public void put(float[]);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
       4: invokevirtual #13                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/FloatBuffer;
       7: pop
       8: aload_0
       9: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      12: aload_1
      13: invokevirtual #14                 // Method java/nio/FloatBuffer.put:([F)Ljava/nio/FloatBuffer;
      16: pop
      17: aload_0
      18: getfield      #8                  // Field buf:Ljava/nio/FloatBuffer;
      21: invokevirtual #13                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/FloatBuffer;
      24: pop
      25: aload_0
      26: iconst_0
      27: putfield      #12                 // Field cacheValid:Z
      30: return

  public com.sun.scenario.effect.LockableResource getAccelData(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: getfield      #15                 // Field cache:Ljava/util/Map;
       4: ifnonnull     21
       7: aload_0
       8: new           #16                 // class java/util/HashMap
      11: dup
      12: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      15: putfield      #15                 // Field cache:Ljava/util/Map;
      18: goto          75
      21: aload_0
      22: getfield      #12                 // Field cacheValid:Z
      25: ifne          75
      28: aload_0
      29: getfield      #15                 // Field cache:Ljava/util/Map;
      32: invokeinterface #18,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          70
      52: aload_2
      53: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #22                 // class com/sun/scenario/effect/FloatMap$Entry
      61: astore_3
      62: aload_3
      63: iconst_0
      64: putfield      #23                 // Field com/sun/scenario/effect/FloatMap$Entry.valid:Z
      67: goto          43
      70: aload_0
      71: iconst_1
      72: putfield      #12                 // Field cacheValid:Z
      75: aload_1
      76: invokestatic  #24                 // Method com/sun/scenario/effect/impl/Renderer.getRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
      79: astore_2
      80: aload_0
      81: getfield      #15                 // Field cache:Ljava/util/Map;
      84: aload_1
      85: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #22                 // class com/sun/scenario/effect/FloatMap$Entry
      93: astore_3
      94: aload_3
      95: ifnull        141
      98: aload_3
      99: getfield      #26                 // Field com/sun/scenario/effect/FloatMap$Entry.texture:Lcom/sun/scenario/effect/LockableResource;
     102: invokeinterface #27,  1           // InterfaceMethod com/sun/scenario/effect/LockableResource.lock:()V
     107: aload_3
     108: getfield      #26                 // Field com/sun/scenario/effect/FloatMap$Entry.texture:Lcom/sun/scenario/effect/LockableResource;
     111: invokeinterface #28,  1           // InterfaceMethod com/sun/scenario/effect/LockableResource.isLost:()Z
     116: ifeq          141
     119: aload_3
     120: getfield      #26                 // Field com/sun/scenario/effect/FloatMap$Entry.texture:Lcom/sun/scenario/effect/LockableResource;
     123: invokeinterface #29,  1           // InterfaceMethod com/sun/scenario/effect/LockableResource.unlock:()V
     128: aload_0
     129: getfield      #15                 // Field cache:Ljava/util/Map;
     132: aload_1
     133: invokeinterface #30,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: aconst_null
     140: astore_3
     141: aload_3
     142: ifnonnull     181
     145: aload_2
     146: aload_0
     147: getfield      #5                  // Field width:I
     150: aload_0
     151: getfield      #6                  // Field height:I
     154: invokevirtual #31                 // Method com/sun/scenario/effect/impl/Renderer.createFloatTexture:(II)Lcom/sun/scenario/effect/LockableResource;
     157: astore        4
     159: new           #22                 // class com/sun/scenario/effect/FloatMap$Entry
     162: dup
     163: aload         4
     165: invokespecial #32                 // Method com/sun/scenario/effect/FloatMap$Entry."<init>":(Lcom/sun/scenario/effect/LockableResource;)V
     168: astore_3
     169: aload_0
     170: getfield      #15                 // Field cache:Ljava/util/Map;
     173: aload_1
     174: aload_3
     175: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: aload_3
     182: getfield      #23                 // Field com/sun/scenario/effect/FloatMap$Entry.valid:Z
     185: ifne          202
     188: aload_2
     189: aload_3
     190: getfield      #26                 // Field com/sun/scenario/effect/FloatMap$Entry.texture:Lcom/sun/scenario/effect/LockableResource;
     193: aload_0
     194: invokevirtual #34                 // Method com/sun/scenario/effect/impl/Renderer.updateFloatTexture:(Lcom/sun/scenario/effect/LockableResource;Lcom/sun/scenario/effect/FloatMap;)V
     197: aload_3
     198: iconst_1
     199: putfield      #23                 // Field com/sun/scenario/effect/FloatMap$Entry.valid:Z
     202: aload_3
     203: getfield      #26                 // Field com/sun/scenario/effect/FloatMap$Entry.texture:Lcom/sun/scenario/effect/LockableResource;
     206: areturn
}
