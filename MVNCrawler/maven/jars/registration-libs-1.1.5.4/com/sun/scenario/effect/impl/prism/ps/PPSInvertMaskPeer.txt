Compiled from "PPSInvertMaskPeer.java"
public class com.sun.scenario.effect.impl.prism.ps.PPSInvertMaskPeer extends com.sun.scenario.effect.impl.prism.ps.PPSOneSamplerPeer {
  public com.sun.scenario.effect.impl.prism.ps.PPSInvertMaskPeer(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.impl.Renderer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/sun/scenario/effect/impl/prism/ps/PPSOneSamplerPeer."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/impl/Renderer;Ljava/lang/String;)V
       7: return

  protected final com.sun.scenario.effect.InvertMask getEffect();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/scenario/effect/impl/prism/ps/PPSOneSamplerPeer.getEffect:()Lcom/sun/scenario/effect/Effect;
       4: checkcast     #3                  // class com/sun/scenario/effect/InvertMask
       7: areturn

  private float[] getOffset();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/InvertMask;
       4: invokevirtual #5                  // Method com/sun/scenario/effect/InvertMask.getOffsetX:()I
       7: i2f
       8: fstore_1
       9: aload_0
      10: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/InvertMask;
      13: invokevirtual #6                  // Method com/sun/scenario/effect/InvertMask.getOffsetY:()I
      16: i2f
      17: fstore_2
      18: iconst_2
      19: newarray       float
      21: dup
      22: iconst_0
      23: fload_1
      24: fastore
      25: dup
      26: iconst_1
      27: fload_2
      28: fastore
      29: astore_3
      30: aload_0
      31: iconst_0
      32: invokevirtual #7                  // Method getInputTransform:(I)Lcom/sun/javafx/geom/transform/BaseTransform;
      35: aload_3
      36: iconst_0
      37: aload_3
      38: iconst_0
      39: iconst_1
      40: invokevirtual #8                  // Method com/sun/javafx/geom/transform/BaseTransform.inverseDeltaTransform:([FI[FII)V
      43: goto          48
      46: astore        4
      48: aload_3
      49: iconst_0
      50: dup2
      51: faload
      52: aload_0
      53: iconst_0
      54: invokevirtual #10                 // Method getInputNativeBounds:(I)Lcom/sun/javafx/geom/Rectangle;
      57: getfield      #11                 // Field com/sun/javafx/geom/Rectangle.width:I
      60: i2f
      61: fdiv
      62: fastore
      63: aload_3
      64: iconst_1
      65: dup2
      66: faload
      67: aload_0
      68: iconst_0
      69: invokevirtual #10                 // Method getInputNativeBounds:(I)Lcom/sun/javafx/geom/Rectangle;
      72: getfield      #12                 // Field com/sun/javafx/geom/Rectangle.height:I
      75: i2f
      76: fdiv
      77: fastore
      78: aload_3
      79: areturn
    Exception table:
       from    to  target type
          30    43    46   Class java/lang/Exception

  protected boolean isSamplerLinear(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 0
               default: 12
          }
      12: iconst_0
      13: ireturn

  protected com.sun.prism.ps.Shader createShader();
    Code:
       0: new           #13                 // class java/util/HashMap
       3: dup
       4: invokespecial #14                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #15                 // String baseImg
      11: iconst_0
      12: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #17                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: new           #13                 // class java/util/HashMap
      22: dup
      23: invokespecial #14                 // Method java/util/HashMap."<init>":()V
      26: astore_2
      27: aload_2
      28: ldc           #18                 // String offset
      30: iconst_0
      31: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokevirtual #17                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: invokevirtual #19                 // Method getRenderer:()Lcom/sun/scenario/effect/impl/prism/ps/PPSRenderer;
      42: aload_0
      43: invokevirtual #20                 // Method getShaderName:()Ljava/lang/String;
      46: aload_1
      47: aload_2
      48: iconst_0
      49: invokevirtual #21                 // Method com/sun/scenario/effect/impl/prism/ps/PPSRenderer.createShader:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Z)Lcom/sun/prism/ps/Shader;
      52: areturn

  protected void updateShader(com.sun.prism.ps.Shader);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method getOffset:()[F
       4: astore_2
       5: aload_1
       6: ldc           #18                 // String offset
       8: aload_2
       9: iconst_0
      10: faload
      11: aload_2
      12: iconst_1
      13: faload
      14: invokeinterface #23,  4           // InterfaceMethod com/sun/prism/ps/Shader.setConstant:(Ljava/lang/String;FF)V
      19: return

  protected com.sun.scenario.effect.Effect getEffect();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/InvertMask;
       4: areturn
}
