Compiled from "PPSBlend_ADDPeer.java"
public class com.sun.scenario.effect.impl.prism.ps.PPSBlend_ADDPeer extends com.sun.scenario.effect.impl.prism.ps.PPSTwoSamplerPeer {
  public com.sun.scenario.effect.impl.prism.ps.PPSBlend_ADDPeer(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.impl.Renderer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/sun/scenario/effect/impl/prism/ps/PPSTwoSamplerPeer."<init>":(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/impl/Renderer;Ljava/lang/String;)V
       7: return

  protected final com.sun.scenario.effect.Blend getEffect();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/sun/scenario/effect/impl/prism/ps/PPSTwoSamplerPeer.getEffect:()Lcom/sun/scenario/effect/Effect;
       4: checkcast     #3                  // class com/sun/scenario/effect/Blend
       7: areturn

  private float getOpacity();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/Blend;
       4: invokevirtual #5                  // Method com/sun/scenario/effect/Blend.getOpacity:()F
       7: freturn

  protected boolean isSamplerLinear(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 0
               default: 12
          }
      12: iconst_0
      13: ireturn

  protected com.sun.prism.ps.Shader createShader();
    Code:
       0: new           #6                  // class java/util/HashMap
       3: dup
       4: invokespecial #7                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #8                  // String botImg
      11: iconst_0
      12: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #11                 // String topImg
      22: iconst_1
      23: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: new           #6                  // class java/util/HashMap
      33: dup
      34: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      37: astore_2
      38: aload_2
      39: ldc           #12                 // String opacity
      41: iconst_0
      42: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_0
      50: invokevirtual #13                 // Method getRenderer:()Lcom/sun/scenario/effect/impl/prism/ps/PPSRenderer;
      53: aload_0
      54: invokevirtual #14                 // Method getShaderName:()Ljava/lang/String;
      57: aload_1
      58: aload_2
      59: iconst_0
      60: invokevirtual #15                 // Method com/sun/scenario/effect/impl/prism/ps/PPSRenderer.createShader:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Z)Lcom/sun/prism/ps/Shader;
      63: areturn

  protected void updateShader(com.sun.prism.ps.Shader);
    Code:
       0: aload_1
       1: ldc           #12                 // String opacity
       3: aload_0
       4: invokespecial #16                 // Method getOpacity:()F
       7: invokeinterface #17,  3           // InterfaceMethod com/sun/prism/ps/Shader.setConstant:(Ljava/lang/String;F)V
      12: return

  protected com.sun.scenario.effect.Effect getEffect();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getEffect:()Lcom/sun/scenario/effect/Blend;
       4: areturn
}
