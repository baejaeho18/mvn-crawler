Compiled from "Renderer.java"
public abstract class com.sun.scenario.effect.impl.Renderer {
  public static final java.lang.String rootPkg;

  private static final java.util.Map<com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.impl.Renderer> rendererMap;

  private java.util.Map<java.lang.String, com.sun.scenario.effect.impl.EffectPeer> peerCache;

  private final com.sun.scenario.effect.impl.ImagePool imagePool;

  protected static final boolean verbose;

  protected com.sun.scenario.effect.impl.Renderer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: iconst_5
      10: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
      13: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      16: putfield      #5                  // Field peerCache:Ljava/util/Map;
      19: aload_0
      20: new           #6                  // class com/sun/scenario/effect/impl/ImagePool
      23: dup
      24: invokespecial #7                  // Method com/sun/scenario/effect/impl/ImagePool."<init>":()V
      27: putfield      #8                  // Field imagePool:Lcom/sun/scenario/effect/impl/ImagePool;
      30: return

  public abstract com.sun.scenario.effect.Effect$AccelType getAccelType();

  public abstract int getCompatibleWidth(int);

  public abstract int getCompatibleHeight(int);

  public abstract com.sun.scenario.effect.impl.PoolFilterable createCompatibleImage(int, int);

  public com.sun.scenario.effect.impl.PoolFilterable getCompatibleImage(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field imagePool:Lcom/sun/scenario/effect/impl/ImagePool;
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #9                  // Method com/sun/scenario/effect/impl/ImagePool.checkOut:(Lcom/sun/scenario/effect/impl/Renderer;II)Lcom/sun/scenario/effect/impl/PoolFilterable;
      10: areturn

  public void releaseCompatibleImage(com.sun.scenario.effect.Filterable);
    Code:
       0: aload_1
       1: instanceof    #10                 // class com/sun/scenario/effect/impl/PoolFilterable
       4: ifeq          30
       7: aload_1
       8: checkcast     #10                 // class com/sun/scenario/effect/impl/PoolFilterable
      11: invokeinterface #11,  1           // InterfaceMethod com/sun/scenario/effect/impl/PoolFilterable.getImagePool:()Lcom/sun/scenario/effect/impl/ImagePool;
      16: astore_2
      17: aload_2
      18: ifnull        30
      21: aload_2
      22: aload_1
      23: checkcast     #10                 // class com/sun/scenario/effect/impl/PoolFilterable
      26: invokevirtual #12                 // Method com/sun/scenario/effect/impl/ImagePool.checkIn:(Lcom/sun/scenario/effect/impl/PoolFilterable;)V
      29: return
      30: aload_1
      31: invokeinterface #13,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.unlock:()V
      36: return

  public void releasePurgatory();
    Code:
       0: aload_0
       1: getfield      #8                  // Field imagePool:Lcom/sun/scenario/effect/impl/ImagePool;
       4: invokevirtual #14                 // Method com/sun/scenario/effect/impl/ImagePool.releasePurgatory:()V
       7: return

  public abstract void clearImage(com.sun.scenario.effect.Filterable);

  public abstract com.sun.scenario.effect.ImageData createImageData(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.Filterable);

  public com.sun.scenario.effect.ImageData transform(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.ImageData, int, int);
    Code:
       0: aload_2
       1: invokevirtual #15                 // Method com/sun/scenario/effect/ImageData.getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
       4: invokevirtual #16                 // Method com/sun/javafx/geom/transform/BaseTransform.isIdentity:()Z
       7: ifne          20
      10: new           #17                 // class java/lang/InternalError
      13: dup
      14: ldc           #18                 // String transform by powers of 2 requires untransformed source
      16: invokespecial #19                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iload_3
      21: iload         4
      23: ior
      24: ifne          29
      27: aload_2
      28: areturn
      29: new           #20                 // class com/sun/javafx/geom/transform/Affine2D
      32: dup
      33: invokespecial #21                 // Method com/sun/javafx/geom/transform/Affine2D."<init>":()V
      36: astore        5
      38: iload_3
      39: iconst_m1
      40: if_icmplt     49
      43: iload         4
      45: iconst_m1
      46: if_icmpge     172
      49: aload_2
      50: invokevirtual #22                 // Method com/sun/scenario/effect/ImageData.getUntransformedBounds:()Lcom/sun/javafx/geom/Rectangle;
      53: astore        6
      55: new           #23                 // class com/sun/javafx/geom/Rectangle
      58: dup
      59: aload         6
      61: invokespecial #24                 // Method com/sun/javafx/geom/Rectangle."<init>":(Lcom/sun/javafx/geom/Rectangle;)V
      64: astore        7
      66: dconst_1
      67: dstore        8
      69: dconst_1
      70: dstore        10
      72: iload_3
      73: ifge          109
      76: ldc2_w        #25                 // double 0.5d
      79: dstore        8
      81: aload         7
      83: aload         6
      85: getfield      #27                 // Field com/sun/javafx/geom/Rectangle.width:I
      88: iconst_1
      89: iadd
      90: iconst_2
      91: idiv
      92: putfield      #27                 // Field com/sun/javafx/geom/Rectangle.width:I
      95: aload         7
      97: dup
      98: getfield      #28                 // Field com/sun/javafx/geom/Rectangle.x:I
     101: iconst_2
     102: idiv
     103: putfield      #28                 // Field com/sun/javafx/geom/Rectangle.x:I
     106: iinc          3, 1
     109: iload         4
     111: ifge          147
     114: ldc2_w        #25                 // double 0.5d
     117: dstore        10
     119: aload         7
     121: aload         6
     123: getfield      #29                 // Field com/sun/javafx/geom/Rectangle.height:I
     126: iconst_1
     127: iadd
     128: iconst_2
     129: idiv
     130: putfield      #29                 // Field com/sun/javafx/geom/Rectangle.height:I
     133: aload         7
     135: dup
     136: getfield      #30                 // Field com/sun/javafx/geom/Rectangle.y:I
     139: iconst_2
     140: idiv
     141: putfield      #30                 // Field com/sun/javafx/geom/Rectangle.y:I
     144: iinc          4, 1
     147: aload         5
     149: dload         8
     151: dload         10
     153: invokevirtual #31                 // Method com/sun/javafx/geom/transform/Affine2D.setToScale:(DD)V
     156: aload_0
     157: aload_1
     158: aload_2
     159: aload         5
     161: aload         6
     163: aload         7
     165: invokevirtual #32                 // Method transform:(Lcom/sun/scenario/effect/FilterContext;Lcom/sun/scenario/effect/ImageData;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/Rectangle;Lcom/sun/javafx/geom/Rectangle;)Lcom/sun/scenario/effect/ImageData;
     168: astore_2
     169: goto          38
     172: iload_3
     173: iload         4
     175: ior
     176: ifeq          229
     179: iload_3
     180: ifge          189
     183: ldc2_w        #25                 // double 0.5d
     186: goto          193
     189: iconst_1
     190: iload_3
     191: ishl
     192: i2d
     193: dstore        6
     195: iload         4
     197: ifge          206
     200: ldc2_w        #25                 // double 0.5d
     203: goto          211
     206: iconst_1
     207: iload         4
     209: ishl
     210: i2d
     211: dstore        8
     213: aload         5
     215: dload         6
     217: dload         8
     219: invokevirtual #31                 // Method com/sun/javafx/geom/transform/Affine2D.setToScale:(DD)V
     222: aload_2
     223: aload         5
     225: invokevirtual #33                 // Method com/sun/scenario/effect/ImageData.transform:(Lcom/sun/javafx/geom/transform/BaseTransform;)Lcom/sun/scenario/effect/ImageData;
     228: astore_2
     229: aload_2
     230: areturn

  public abstract com.sun.scenario.effect.Filterable transform(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.Filterable, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.javafx.geom.Rectangle);

  public abstract com.sun.scenario.effect.ImageData transform(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.ImageData, com.sun.javafx.geom.transform.BaseTransform, com.sun.javafx.geom.Rectangle, com.sun.javafx.geom.Rectangle);

  public com.sun.scenario.effect.LockableResource createFloatTexture(int, int);
    Code:
       0: new           #17                 // class java/lang/InternalError
       3: dup
       4: invokespecial #34                 // Method java/lang/InternalError."<init>":()V
       7: athrow

  public void updateFloatTexture(com.sun.scenario.effect.LockableResource, com.sun.scenario.effect.FloatMap);
    Code:
       0: new           #17                 // class java/lang/InternalError
       3: dup
       4: invokespecial #34                 // Method java/lang/InternalError."<init>":()V
       7: athrow

  public final synchronized com.sun.scenario.effect.impl.EffectPeer getPeerInstance(com.sun.scenario.effect.FilterContext, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field peerCache:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class com/sun/scenario/effect/impl/EffectPeer
      13: astore        4
      15: aload         4
      17: ifnull        23
      20: aload         4
      22: areturn
      23: iload_3
      24: ifle          56
      27: aload_0
      28: getfield      #5                  // Field peerCache:Ljava/util/Map;
      31: aload_2
      32: iload_3
      33: invokedynamic #37,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
      38: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #36                 // class com/sun/scenario/effect/impl/EffectPeer
      46: astore        4
      48: aload         4
      50: ifnull        56
      53: aload         4
      55: areturn
      56: aload_0
      57: aload_1
      58: aload_2
      59: iload_3
      60: invokevirtual #38                 // Method createPeer:(Lcom/sun/scenario/effect/FilterContext;Ljava/lang/String;I)Lcom/sun/scenario/effect/impl/EffectPeer;
      63: astore        4
      65: aload         4
      67: ifnonnull     85
      70: new           #39                 // class java/lang/RuntimeException
      73: dup
      74: aload_2
      75: aload_0
      76: invokedynamic #40,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Lcom/sun/scenario/effect/impl/Renderer;)Ljava/lang/String;
      81: invokespecial #41                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #5                  // Field peerCache:Ljava/util/Map;
      89: aload         4
      91: invokevirtual #42                 // Method com/sun/scenario/effect/impl/EffectPeer.getUniqueName:()Ljava/lang/String;
      94: aload         4
      96: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload         4
     104: areturn

  public abstract com.sun.scenario.effect.impl.Renderer$RendererState getRendererState();

  protected abstract com.sun.scenario.effect.impl.EffectPeer createPeer(com.sun.scenario.effect.FilterContext, java.lang.String, int);

  protected java.util.Collection<com.sun.scenario.effect.impl.EffectPeer> getPeers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field peerCache:Ljava/util/Map;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  protected static com.sun.scenario.effect.impl.Renderer getSoftwareRenderer();
    Code:
       0: invokestatic  #45                 // Method com/sun/scenario/effect/impl/RendererFactory.getSoftwareRenderer:()Lcom/sun/scenario/effect/impl/Renderer;
       3: areturn

  protected abstract com.sun.scenario.effect.impl.Renderer getBackupRenderer();

  protected com.sun.scenario.effect.impl.Renderer getRendererForSize(com.sun.scenario.effect.Effect, int, int);
    Code:
       0: aload_0
       1: areturn

  public static synchronized com.sun.scenario.effect.impl.Renderer getRenderer(com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #46                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #47                 // String FilterContext must be non-null
      10: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #49                 // Field rendererMap:Ljava/util/Map;
      17: aload_0
      18: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #50                 // class com/sun/scenario/effect/impl/Renderer
      26: astore_1
      27: aload_1
      28: ifnull        70
      31: aload_1
      32: invokevirtual #51                 // Method getRendererState:()Lcom/sun/scenario/effect/impl/Renderer$RendererState;
      35: getstatic     #52                 // Field com/sun/scenario/effect/impl/Renderer$RendererState.OK:Lcom/sun/scenario/effect/impl/Renderer$RendererState;
      38: if_acmpne     43
      41: aload_1
      42: areturn
      43: aload_1
      44: invokevirtual #51                 // Method getRendererState:()Lcom/sun/scenario/effect/impl/Renderer$RendererState;
      47: getstatic     #53                 // Field com/sun/scenario/effect/impl/Renderer$RendererState.LOST:Lcom/sun/scenario/effect/impl/Renderer$RendererState;
      50: if_acmpne     58
      53: aload_1
      54: invokevirtual #54                 // Method getBackupRenderer:()Lcom/sun/scenario/effect/impl/Renderer;
      57: areturn
      58: aload_1
      59: invokevirtual #51                 // Method getRendererState:()Lcom/sun/scenario/effect/impl/Renderer$RendererState;
      62: getstatic     #55                 // Field com/sun/scenario/effect/impl/Renderer$RendererState.DISPOSED:Lcom/sun/scenario/effect/impl/Renderer$RendererState;
      65: if_acmpne     70
      68: aconst_null
      69: astore_1
      70: aload_1
      71: ifnonnull     221
      74: getstatic     #49                 // Field rendererMap:Ljava/util/Map;
      77: invokeinterface #44,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      82: astore_2
      83: aload_2
      84: invokeinterface #56,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      89: astore_3
      90: aload_3
      91: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          138
      99: aload_3
     100: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #50                 // class com/sun/scenario/effect/impl/Renderer
     108: astore        4
     110: aload         4
     112: invokevirtual #51                 // Method getRendererState:()Lcom/sun/scenario/effect/impl/Renderer$RendererState;
     115: getstatic     #55                 // Field com/sun/scenario/effect/impl/Renderer$RendererState.DISPOSED:Lcom/sun/scenario/effect/impl/Renderer$RendererState;
     118: if_acmpne     135
     121: aload         4
     123: getfield      #8                  // Field imagePool:Lcom/sun/scenario/effect/impl/ImagePool;
     126: invokevirtual #59                 // Method com/sun/scenario/effect/impl/ImagePool.dispose:()V
     129: aload_3
     130: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.remove:()V
     135: goto          90
     138: aload_0
     139: invokestatic  #61                 // Method com/sun/scenario/effect/impl/RendererFactory.createRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
     142: astore_1
     143: aload_1
     144: ifnonnull     157
     147: new           #39                 // class java/lang/RuntimeException
     150: dup
     151: ldc           #62                 // String Error creating a Renderer
     153: invokespecial #41                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: getstatic     #63                 // Field verbose:Z
     160: ifeq          210
     163: aload_1
     164: invokevirtual #64                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     167: invokevirtual #65                 // Method java/lang/Class.getName:()Ljava/lang/String;
     170: astore_3
     171: aload_3
     172: aload_3
     173: ldc           #66                 // String .
     175: invokevirtual #67                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
     178: iconst_1
     179: iadd
     180: invokevirtual #68                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     183: astore        4
     185: aload_0
     186: invokevirtual #69                 // Method com/sun/scenario/effect/FilterContext.getReferent:()Ljava/lang/Object;
     189: astore        5
     191: getstatic     #70                 // Field java/lang/System.out:Ljava/io/PrintStream;
     194: aload         4
     196: aload_1
     197: invokevirtual #71                 // Method getAccelType:()Lcom/sun/scenario/effect/Effect$AccelType;
     200: aload         5
     202: invokedynamic #72,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;Lcom/sun/scenario/effect/Effect$AccelType;Ljava/lang/Object;)Ljava/lang/String;
     207: invokevirtual #73                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     210: getstatic     #49                 // Field rendererMap:Ljava/util/Map;
     213: aload_0
     214: aload_1
     215: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     220: pop
     221: aload_1
     222: areturn

  public static com.sun.scenario.effect.impl.Renderer getRenderer(com.sun.scenario.effect.FilterContext, com.sun.scenario.effect.Effect, int, int);
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method getRenderer:(Lcom/sun/scenario/effect/FilterContext;)Lcom/sun/scenario/effect/impl/Renderer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #75                 // Method getRendererForSize:(Lcom/sun/scenario/effect/Effect;II)Lcom/sun/scenario/effect/impl/Renderer;
      10: areturn

  public abstract boolean isImageDataCompatible(com.sun.scenario.effect.ImageData);

  private static java.lang.Boolean lambda$static$0();
    Code:
       0: ldc           #76                 // String decora.verbose
       2: invokestatic  #77                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: invokestatic  #78                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: areturn

  static {};
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: iconst_1
       5: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
       8: putstatic     #49                 // Field rendererMap:Ljava/util/Map;
      11: invokedynamic #79,  0             // InvokeDynamic #3:run:()Ljava/security/PrivilegedAction;
      16: invokestatic  #80                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      19: checkcast     #81                 // class java/lang/Boolean
      22: invokevirtual #82                 // Method java/lang/Boolean.booleanValue:()Z
      25: putstatic     #63                 // Field verbose:Z
      28: return
}
