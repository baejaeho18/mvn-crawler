Compiled from "BoxRenderState.java"
public class com.sun.scenario.effect.impl.state.BoxRenderState extends com.sun.scenario.effect.impl.state.LinearConvolveRenderState {
  private static final int[] MAX_BOX_SIZES;

  private final boolean isShadow;

  private final int blurPasses;

  private final float spread;

  private com.sun.scenario.effect.Color4f shadowColor;

  private com.sun.scenario.effect.impl.state.RenderState$EffectCoordinateSpace space;

  private com.sun.javafx.geom.transform.BaseTransform inputtx;

  private com.sun.javafx.geom.transform.BaseTransform resulttx;

  private final float inputSizeH;

  private final float inputSizeV;

  private final int spreadPass;

  private float[] samplevectors;

  private int validatedPass;

  private float passSize;

  private java.nio.FloatBuffer weights;

  private float weightsValidSize;

  private float weightsValidSpread;

  private boolean swCompatible;

  static final boolean $assertionsDisabled;

  public static int getMaxSizeForKernelSize(int, int);
    Code:
       0: iload_1
       1: ifne          7
       4: ldc           #2                  // int 2147483647
       6: ireturn
       7: iload_0
       8: iconst_1
       9: isub
      10: iconst_1
      11: ior
      12: istore_2
      13: iload_2
      14: iconst_1
      15: isub
      16: iload_1
      17: idiv
      18: iconst_1
      19: ior
      20: istore_2
      21: getstatic     #3                  // Field $assertionsDisabled:Z
      24: ifne          44
      27: iload_2
      28: iload_1
      29: invokestatic  #4                  // Method getKernelSize:(II)I
      32: iload_0
      33: if_icmple     44
      36: new           #5                  // class java/lang/AssertionError
      39: dup
      40: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      43: athrow
      44: iload_2
      45: ireturn

  public static int getKernelSize(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     9
       5: iconst_1
       6: goto          10
       9: iload_0
      10: istore_2
      11: iload_2
      12: iconst_1
      13: isub
      14: iload_1
      15: imul
      16: iconst_1
      17: iadd
      18: istore_2
      19: iload_2
      20: iconst_1
      21: ior
      22: istore_2
      23: iload_2
      24: ireturn

  public com.sun.scenario.effect.impl.state.BoxRenderState(float, float, int, float, boolean, com.sun.scenario.effect.Color4f, com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method com/sun/scenario/effect/impl/state/LinearConvolveRenderState."<init>":()V
       4: aload_0
       5: iload         5
       7: putfield      #8                  // Field isShadow:Z
      10: aload_0
      11: aload         6
      13: putfield      #9                  // Field shadowColor:Lcom/sun/scenario/effect/Color4f;
      16: aload_0
      17: fload         4
      19: putfield      #10                 // Field spread:F
      22: aload_0
      23: iload_3
      24: putfield      #11                 // Field blurPasses:I
      27: aload         7
      29: ifnonnull     37
      32: getstatic     #12                 // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
      35: astore        7
      37: aload         7
      39: invokevirtual #13                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxx:()D
      42: aload         7
      44: invokevirtual #14                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyx:()D
      47: invokestatic  #15                 // Method java/lang/Math.hypot:(DD)D
      50: dstore        8
      52: aload         7
      54: invokevirtual #16                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxy:()D
      57: aload         7
      59: invokevirtual #17                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyy:()D
      62: invokestatic  #15                 // Method java/lang/Math.hypot:(DD)D
      65: dstore        10
      67: fload_1
      68: f2d
      69: dload         8
      71: dmul
      72: d2f
      73: fstore        12
      75: fload_2
      76: f2d
      77: dload         10
      79: dmul
      80: d2f
      81: fstore        13
      83: getstatic     #18                 // Field MAX_BOX_SIZES:[I
      86: iload_3
      87: iaload
      88: istore        14
      90: fload         12
      92: iload         14
      94: i2f
      95: fcmpl
      96: ifle          112
      99: iload         14
     101: i2f
     102: fload_1
     103: fdiv
     104: f2d
     105: dstore        8
     107: iload         14
     109: i2f
     110: fstore        12
     112: fload         13
     114: iload         14
     116: i2f
     117: fcmpl
     118: ifle          134
     121: iload         14
     123: i2f
     124: fload_2
     125: fdiv
     126: f2d
     127: dstore        10
     129: iload         14
     131: i2f
     132: fstore        13
     134: aload_0
     135: fload         12
     137: putfield      #19                 // Field inputSizeH:F
     140: aload_0
     141: fload         13
     143: putfield      #20                 // Field inputSizeV:F
     146: aload_0
     147: fload         13
     149: fconst_1
     150: fcmpl
     151: ifle          158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: putfield      #21                 // Field spreadPass:I
     162: dload         8
     164: aload         7
     166: invokevirtual #13                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxx:()D
     169: dcmpl
     170: ifne          204
     173: dconst_0
     174: aload         7
     176: invokevirtual #14                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyx:()D
     179: dcmpl
     180: ifne          204
     183: dload         10
     185: aload         7
     187: invokevirtual #17                 // Method com/sun/javafx/geom/transform/BaseTransform.getMyy:()D
     190: dcmpl
     191: ifne          204
     194: dconst_0
     195: aload         7
     197: invokevirtual #16                 // Method com/sun/javafx/geom/transform/BaseTransform.getMxy:()D
     200: dcmpl
     201: ifeq          208
     204: iconst_1
     205: goto          209
     208: iconst_0
     209: istore        15
     211: iload         15
     213: ifeq          258
     216: aload_0
     217: getstatic     #22                 // Field com/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace.CustomSpace:Lcom/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace;
     220: putfield      #23                 // Field space:Lcom/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace;
     223: aload_0
     224: dload         8
     226: dload         10
     228: invokestatic  #24                 // Method com/sun/javafx/geom/transform/BaseTransform.getScaleInstance:(DD)Lcom/sun/javafx/geom/transform/BaseTransform;
     231: putfield      #25                 // Field inputtx:Lcom/sun/javafx/geom/transform/BaseTransform;
     234: aload_0
     235: aload         7
     237: invokevirtual #26                 // Method com/sun/javafx/geom/transform/BaseTransform.copy:()Lcom/sun/javafx/geom/transform/BaseTransform;
     240: dconst_1
     241: dload         8
     243: ddiv
     244: dconst_1
     245: dload         10
     247: ddiv
     248: dconst_1
     249: invokevirtual #27                 // Method com/sun/javafx/geom/transform/BaseTransform.deriveWithScale:(DDD)Lcom/sun/javafx/geom/transform/BaseTransform;
     252: putfield      #28                 // Field resulttx:Lcom/sun/javafx/geom/transform/BaseTransform;
     255: goto          278
     258: aload_0
     259: getstatic     #29                 // Field com/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace.RenderSpace:Lcom/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace;
     262: putfield      #23                 // Field space:Lcom/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace;
     265: aload_0
     266: aload         7
     268: putfield      #25                 // Field inputtx:Lcom/sun/javafx/geom/transform/BaseTransform;
     271: aload_0
     272: getstatic     #12                 // Field com/sun/javafx/geom/transform/BaseTransform.IDENTITY_TRANSFORM:Lcom/sun/javafx/geom/transform/BaseTransform;
     275: putfield      #28                 // Field resulttx:Lcom/sun/javafx/geom/transform/BaseTransform;
     278: return

  public int getBoxPixelSize(int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field passSize:F
       4: fstore_2
       5: fload_2
       6: fconst_1
       7: fcmpg
       8: ifge          13
      11: fconst_1
      12: fstore_2
      13: fload_2
      14: f2d
      15: invokestatic  #31                 // Method java/lang/Math.ceil:(D)D
      18: d2i
      19: iconst_1
      20: ior
      21: istore_3
      22: iload_3
      23: ireturn

  public int getBlurPasses();
    Code:
       0: aload_0
       1: getfield      #11                 // Field blurPasses:I
       4: ireturn

  public float getSpread();
    Code:
       0: aload_0
       1: getfield      #10                 // Field spread:F
       4: freturn

  public boolean isShadow();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isShadow:Z
       4: ireturn

  public com.sun.scenario.effect.Color4f getShadowColor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field shadowColor:Lcom/sun/scenario/effect/Color4f;
       4: areturn

  public float[] getPassShadowColorComponents();
    Code:
       0: aload_0
       1: getfield      #32                 // Field validatedPass:I
       4: ifne          13
       7: getstatic     #33                 // Field BLACK_COMPONENTS:[F
      10: goto          20
      13: aload_0
      14: getfield      #9                  // Field shadowColor:Lcom/sun/scenario/effect/Color4f;
      17: invokevirtual #34                 // Method com/sun/scenario/effect/Color4f.getPremultipliedRGBComponents:()[F
      20: areturn

  public com.sun.scenario.effect.impl.state.RenderState$EffectCoordinateSpace getEffectTransformSpace();
    Code:
       0: aload_0
       1: getfield      #23                 // Field space:Lcom/sun/scenario/effect/impl/state/RenderState$EffectCoordinateSpace;
       4: areturn

  public com.sun.javafx.geom.transform.BaseTransform getInputTransform(com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: getfield      #25                 // Field inputtx:Lcom/sun/javafx/geom/transform/BaseTransform;
       4: areturn

  public com.sun.javafx.geom.transform.BaseTransform getResultTransform(com.sun.javafx.geom.transform.BaseTransform);
    Code:
       0: aload_0
       1: getfield      #28                 // Field resulttx:Lcom/sun/javafx/geom/transform/BaseTransform;
       4: areturn

  public com.sun.scenario.effect.impl.EffectPeer<com.sun.scenario.effect.impl.state.BoxRenderState> getPassPeer(com.sun.scenario.effect.impl.Renderer, com.sun.scenario.effect.FilterContext);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method isPassNop:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #36                 // Method getPassKernelSize:()I
      13: istore_3
      14: iload_3
      15: invokestatic  #37                 // Method getPeerSize:(I)I
      18: istore        4
      20: aload_1
      21: invokevirtual #38                 // Method com/sun/scenario/effect/impl/Renderer.getAccelType:()Lcom/sun/scenario/effect/Effect$AccelType;
      24: astore        5
      26: getstatic     #39                 // Field com/sun/scenario/effect/impl/state/BoxRenderState$1.$SwitchMap$com$sun$scenario$effect$Effect$AccelType:[I
      29: aload         5
      31: invokevirtual #40                 // Method com/sun/scenario/effect/Effect$AccelType.ordinal:()I
      34: iaload
      35: lookupswitch  { // 2
                     1: 60
                     2: 60
               default: 95
          }
      60: aload_0
      61: getfield      #41                 // Field swCompatible:Z
      64: ifeq          95
      67: aload_0
      68: getfield      #10                 // Field spread:F
      71: fconst_0
      72: fcmpl
      73: ifne          95
      76: aload_0
      77: invokevirtual #42                 // Method isShadow:()Z
      80: ifeq          88
      83: ldc           #43                 // String BoxShadow
      85: goto          90
      88: ldc           #44                 // String BoxBlur
      90: astore        6
      92: goto          111
      95: aload_0
      96: invokevirtual #42                 // Method isShadow:()Z
      99: ifeq          107
     102: ldc           #45                 // String LinearConvolveShadow
     104: goto          109
     107: ldc           #46                 // String LinearConvolve
     109: astore        6
     111: aload_1
     112: aload_2
     113: aload         6
     115: iload         4
     117: invokevirtual #47                 // Method com/sun/scenario/effect/impl/Renderer.getPeerInstance:(Lcom/sun/scenario/effect/FilterContext;Ljava/lang/String;I)Lcom/sun/scenario/effect/impl/EffectPeer;
     120: astore        7
     122: aload         7
     124: areturn

  public com.sun.javafx.geom.Rectangle getInputClip(int, com.sun.javafx.geom.Rectangle);
    Code:
       0: aload_2
       1: ifnull        45
       4: aload_0
       5: iconst_0
       6: invokevirtual #48                 // Method getInputKernelSize:(I)I
       9: istore_3
      10: aload_0
      11: iconst_1
      12: invokevirtual #48                 // Method getInputKernelSize:(I)I
      15: istore        4
      17: iload_3
      18: iload         4
      20: ior
      21: iconst_1
      22: if_icmple     45
      25: new           #49                 // class com/sun/javafx/geom/Rectangle
      28: dup
      29: aload_2
      30: invokespecial #50                 // Method com/sun/javafx/geom/Rectangle."<init>":(Lcom/sun/javafx/geom/Rectangle;)V
      33: astore_2
      34: aload_2
      35: iload_3
      36: iconst_2
      37: idiv
      38: iload         4
      40: iconst_2
      41: idiv
      42: invokevirtual #51                 // Method com/sun/javafx/geom/Rectangle.grow:(II)V
      45: aload_2
      46: areturn

  public com.sun.scenario.effect.ImageData validatePassInput(com.sun.scenario.effect.ImageData, int);
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #32                 // Field validatedPass:I
       5: aload_1
       6: invokevirtual #52                 // Method com/sun/scenario/effect/ImageData.getTransform:()Lcom/sun/javafx/geom/transform/BaseTransform;
       9: astore_3
      10: aload_0
      11: iconst_2
      12: newarray       float
      14: putfield      #53                 // Field samplevectors:[F
      17: aload_0
      18: getfield      #53                 // Field samplevectors:[F
      21: iload_2
      22: fconst_1
      23: fastore
      24: iload_2
      25: ifne          35
      28: aload_0
      29: getfield      #19                 // Field inputSizeH:F
      32: goto          39
      35: aload_0
      36: getfield      #20                 // Field inputSizeV:F
      39: fstore        4
      41: aload_3
      42: invokevirtual #54                 // Method com/sun/javafx/geom/transform/BaseTransform.isTranslateOrIdentity:()Z
      45: ifeq          62
      48: aload_0
      49: iconst_1
      50: putfield      #41                 // Field swCompatible:Z
      53: aload_0
      54: fload         4
      56: putfield      #30                 // Field passSize:F
      59: goto          309
      62: aload_3
      63: aload_0
      64: getfield      #53                 // Field samplevectors:[F
      67: iconst_0
      68: aload_0
      69: getfield      #53                 // Field samplevectors:[F
      72: iconst_0
      73: iconst_1
      74: invokevirtual #55                 // Method com/sun/javafx/geom/transform/BaseTransform.inverseDeltaTransform:([FI[FII)V
      77: goto          108
      80: astore        5
      82: aload_0
      83: fconst_0
      84: putfield      #30                 // Field passSize:F
      87: aload_0
      88: getfield      #53                 // Field samplevectors:[F
      91: iconst_0
      92: aload_0
      93: getfield      #53                 // Field samplevectors:[F
      96: iconst_1
      97: fconst_0
      98: dup_x2
      99: fastore
     100: fastore
     101: aload_0
     102: iconst_1
     103: putfield      #41                 // Field swCompatible:Z
     106: aload_1
     107: areturn
     108: aload_0
     109: getfield      #53                 // Field samplevectors:[F
     112: iconst_0
     113: faload
     114: f2d
     115: aload_0
     116: getfield      #53                 // Field samplevectors:[F
     119: iconst_1
     120: faload
     121: f2d
     122: invokestatic  #15                 // Method java/lang/Math.hypot:(DD)D
     125: dstore        5
     127: fload         4
     129: f2d
     130: dload         5
     132: dmul
     133: d2f
     134: fstore        7
     136: fload         7
     138: f2d
     139: dload         5
     141: dmul
     142: d2f
     143: fstore        7
     145: getstatic     #18                 // Field MAX_BOX_SIZES:[I
     148: aload_0
     149: getfield      #11                 // Field blurPasses:I
     152: iaload
     153: istore        8
     155: fload         7
     157: iload         8
     159: i2f
     160: fcmpl
     161: ifle          178
     164: iload         8
     166: i2f
     167: fstore        7
     169: iload         8
     171: i2f
     172: fload         4
     174: fdiv
     175: f2d
     176: dstore        5
     178: aload_0
     179: fload         7
     181: putfield      #30                 // Field passSize:F
     184: aload_0
     185: getfield      #53                 // Field samplevectors:[F
     188: iconst_0
     189: dup2
     190: faload
     191: f2d
     192: dload         5
     194: ddiv
     195: d2f
     196: fastore
     197: aload_0
     198: getfield      #53                 // Field samplevectors:[F
     201: iconst_1
     202: dup2
     203: faload
     204: f2d
     205: dload         5
     207: ddiv
     208: d2f
     209: fastore
     210: aload_1
     211: invokevirtual #57                 // Method com/sun/scenario/effect/ImageData.getUntransformedBounds:()Lcom/sun/javafx/geom/Rectangle;
     214: astore        9
     216: iload_2
     217: ifne          266
     220: aload_0
     221: aload_0
     222: getfield      #53                 // Field samplevectors:[F
     225: iconst_0
     226: faload
     227: aload         9
     229: getfield      #58                 // Field com/sun/javafx/geom/Rectangle.width:I
     232: invokestatic  #59                 // Method nearOne:(FI)Z
     235: ifeq          259
     238: aload_0
     239: getfield      #53                 // Field samplevectors:[F
     242: iconst_1
     243: faload
     244: aload         9
     246: getfield      #58                 // Field com/sun/javafx/geom/Rectangle.width:I
     249: invokestatic  #60                 // Method nearZero:(FI)Z
     252: ifeq          259
     255: iconst_1
     256: goto          260
     259: iconst_0
     260: putfield      #41                 // Field swCompatible:Z
     263: goto          309
     266: aload_0
     267: aload_0
     268: getfield      #53                 // Field samplevectors:[F
     271: iconst_0
     272: faload
     273: aload         9
     275: getfield      #61                 // Field com/sun/javafx/geom/Rectangle.height:I
     278: invokestatic  #60                 // Method nearZero:(FI)Z
     281: ifeq          305
     284: aload_0
     285: getfield      #53                 // Field samplevectors:[F
     288: iconst_1
     289: faload
     290: aload         9
     292: getfield      #61                 // Field com/sun/javafx/geom/Rectangle.height:I
     295: invokestatic  #59                 // Method nearOne:(FI)Z
     298: ifeq          305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: putfield      #41                 // Field swCompatible:Z
     309: aload_1
     310: invokevirtual #62                 // Method com/sun/scenario/effect/ImageData.getUntransformedImage:()Lcom/sun/scenario/effect/Filterable;
     313: astore        5
     315: aload_0
     316: getfield      #53                 // Field samplevectors:[F
     319: iconst_0
     320: dup2
     321: faload
     322: aload         5
     324: invokeinterface #63,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.getPhysicalWidth:()I
     329: i2f
     330: fdiv
     331: fastore
     332: aload_0
     333: getfield      #53                 // Field samplevectors:[F
     336: iconst_1
     337: dup2
     338: faload
     339: aload         5
     341: invokeinterface #64,  1           // InterfaceMethod com/sun/scenario/effect/Filterable.getPhysicalHeight:()I
     346: i2f
     347: fdiv
     348: fastore
     349: aload_1
     350: areturn
    Exception table:
       from    to  target type
          62    77    80   Class com/sun/javafx/geom/transform/NoninvertibleTransformException

  public com.sun.javafx.geom.Rectangle getPassResultBounds(com.sun.javafx.geom.Rectangle, com.sun.javafx.geom.Rectangle);
    Code:
       0: new           #49                 // class com/sun/javafx/geom/Rectangle
       3: dup
       4: aload_1
       5: invokespecial #50                 // Method com/sun/javafx/geom/Rectangle."<init>":(Lcom/sun/javafx/geom/Rectangle;)V
       8: astore_3
       9: aload_0
      10: getfield      #32                 // Field validatedPass:I
      13: ifne          31
      16: aload_3
      17: aload_0
      18: iconst_0
      19: invokevirtual #48                 // Method getInputKernelSize:(I)I
      22: iconst_2
      23: idiv
      24: iconst_0
      25: invokevirtual #51                 // Method com/sun/javafx/geom/Rectangle.grow:(II)V
      28: goto          43
      31: aload_3
      32: iconst_0
      33: aload_0
      34: iconst_1
      35: invokevirtual #48                 // Method getInputKernelSize:(I)I
      38: iconst_2
      39: idiv
      40: invokevirtual #51                 // Method com/sun/javafx/geom/Rectangle.grow:(II)V
      43: aload_2
      44: ifnull        80
      47: aload_0
      48: getfield      #32                 // Field validatedPass:I
      51: ifne          75
      54: new           #49                 // class com/sun/javafx/geom/Rectangle
      57: dup
      58: aload_2
      59: invokespecial #50                 // Method com/sun/javafx/geom/Rectangle."<init>":(Lcom/sun/javafx/geom/Rectangle;)V
      62: astore_2
      63: aload_2
      64: iconst_0
      65: aload_0
      66: iconst_1
      67: invokevirtual #48                 // Method getInputKernelSize:(I)I
      70: iconst_2
      71: idiv
      72: invokevirtual #51                 // Method com/sun/javafx/geom/Rectangle.grow:(II)V
      75: aload_3
      76: aload_2
      77: invokevirtual #65                 // Method com/sun/javafx/geom/Rectangle.intersectWith:(Lcom/sun/javafx/geom/Rectangle;)V
      80: aload_3
      81: areturn

  public float[] getPassVector();
    Code:
       0: aload_0
       1: getfield      #53                 // Field samplevectors:[F
       4: iconst_0
       5: faload
       6: fstore_1
       7: aload_0
       8: getfield      #53                 // Field samplevectors:[F
      11: iconst_1
      12: faload
      13: fstore_2
      14: aload_0
      15: invokevirtual #36                 // Method getPassKernelSize:()I
      18: istore_3
      19: iload_3
      20: iconst_2
      21: idiv
      22: istore        4
      24: iconst_4
      25: newarray       float
      27: astore        5
      29: aload         5
      31: iconst_0
      32: fload_1
      33: fastore
      34: aload         5
      36: iconst_1
      37: fload_2
      38: fastore
      39: aload         5
      41: iconst_2
      42: iload         4
      44: ineg
      45: i2f
      46: fload_1
      47: fmul
      48: fastore
      49: aload         5
      51: iconst_3
      52: iload         4
      54: ineg
      55: i2f
      56: fload_2
      57: fmul
      58: fastore
      59: aload         5
      61: areturn

  public int getPassWeightsArrayLength();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method validateWeights:()V
       4: aload_0
       5: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
       8: invokevirtual #68                 // Method java/nio/FloatBuffer.limit:()I
      11: iconst_4
      12: idiv
      13: ireturn

  public java.nio.FloatBuffer getPassWeights();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method validateWeights:()V
       4: aload_0
       5: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
       8: invokevirtual #69                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/FloatBuffer;
      11: pop
      12: aload_0
      13: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
      16: areturn

  private void validateWeights();
    Code:
       0: aload_0
       1: getfield      #11                 // Field blurPasses:I
       4: ifne          12
       7: fconst_1
       8: fstore_1
       9: goto          25
      12: aload_0
      13: getfield      #30                 // Field passSize:F
      16: fstore_1
      17: fload_1
      18: fconst_1
      19: fcmpg
      20: ifge          25
      23: fconst_1
      24: fstore_1
      25: aload_0
      26: getfield      #32                 // Field validatedPass:I
      29: aload_0
      30: getfield      #21                 // Field spreadPass:I
      33: if_icmpne     43
      36: aload_0
      37: getfield      #10                 // Field spread:F
      40: goto          44
      43: fconst_0
      44: fstore_2
      45: aload_0
      46: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
      49: ifnull        71
      52: aload_0
      53: getfield      #70                 // Field weightsValidSize:F
      56: fload_1
      57: fcmpl
      58: ifne          71
      61: aload_0
      62: getfield      #71                 // Field weightsValidSpread:F
      65: fload_2
      66: fcmpl
      67: ifne          71
      70: return
      71: fload_1
      72: f2d
      73: invokestatic  #31                 // Method java/lang/Math.ceil:(D)D
      76: d2i
      77: iconst_1
      78: ior
      79: istore_3
      80: iload_3
      81: istore        4
      83: iconst_1
      84: istore        5
      86: iload         5
      88: aload_0
      89: getfield      #11                 // Field blurPasses:I
      92: if_icmpge     109
      95: iload         4
      97: iload_3
      98: iconst_1
      99: isub
     100: iadd
     101: istore        4
     103: iinc          5, 1
     106: goto          86
     109: iload         4
     111: newarray       double
     113: astore        5
     115: iconst_0
     116: istore        6
     118: iload         6
     120: iload_3
     121: if_icmpge     136
     124: aload         5
     126: iload         6
     128: dconst_1
     129: dastore
     130: iinc          6, 1
     133: goto          118
     136: iload_3
     137: i2f
     138: fload_1
     139: fsub
     140: f2d
     141: dstore        6
     143: dload         6
     145: dconst_0
     146: dcmpl
     147: ifle          169
     150: aload         5
     152: iconst_0
     153: aload         5
     155: iload_3
     156: iconst_1
     157: isub
     158: dconst_1
     159: dload         6
     161: ldc2_w        #72                 // double 0.5d
     164: dmul
     165: dsub
     166: dup2_x2
     167: dastore
     168: dastore
     169: iload_3
     170: istore        8
     172: iconst_1
     173: istore        9
     175: iload         9
     177: aload_0
     178: getfield      #11                 // Field blurPasses:I
     181: if_icmpge     309
     184: iload         8
     186: iload_3
     187: iconst_1
     188: isub
     189: iadd
     190: istore        8
     192: iload         8
     194: iconst_1
     195: isub
     196: istore        10
     198: iload         10
     200: iload_3
     201: if_icmple     252
     204: aload         5
     206: iload         10
     208: daload
     209: dstore        11
     211: iconst_1
     212: istore        13
     214: iload         13
     216: iload_3
     217: if_icmpge     239
     220: dload         11
     222: aload         5
     224: iload         10
     226: iload         13
     228: isub
     229: daload
     230: dadd
     231: dstore        11
     233: iinc          13, 1
     236: goto          214
     239: aload         5
     241: iload         10
     243: iinc          10, -1
     246: dload         11
     248: dastore
     249: goto          198
     252: iload         10
     254: ifle          303
     257: aload         5
     259: iload         10
     261: daload
     262: dstore        11
     264: iconst_0
     265: istore        13
     267: iload         13
     269: iload         10
     271: if_icmpge     290
     274: dload         11
     276: aload         5
     278: iload         13
     280: daload
     281: dadd
     282: dstore        11
     284: iinc          13, 1
     287: goto          267
     290: aload         5
     292: iload         10
     294: iinc          10, -1
     297: dload         11
     299: dastore
     300: goto          252
     303: iinc          9, 1
     306: goto          175
     309: dconst_0
     310: dstore        9
     312: iconst_0
     313: istore        11
     315: iload         11
     317: aload         5
     319: arraylength
     320: if_icmpge     339
     323: dload         9
     325: aload         5
     327: iload         11
     329: daload
     330: dadd
     331: dstore        9
     333: iinc          11, 1
     336: goto          315
     339: dload         9
     341: dconst_1
     342: dload         9
     344: dsub
     345: fload_2
     346: f2d
     347: dmul
     348: dadd
     349: dstore        9
     351: aload_0
     352: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     355: ifnonnull     384
     358: getstatic     #74                 // Field MAX_KERNEL_SIZE:I
     361: invokestatic  #37                 // Method getPeerSize:(I)I
     364: istore        11
     366: iload         11
     368: iconst_3
     369: iadd
     370: bipush        -4
     372: iand
     373: istore        11
     375: aload_0
     376: iload         11
     378: invokestatic  #75                 // Method com/sun/scenario/effect/impl/BufferUtil.newFloatBuffer:(I)Ljava/nio/FloatBuffer;
     381: putfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     384: aload_0
     385: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     388: invokevirtual #76                 // Method java/nio/FloatBuffer.clear:()Ljava/nio/FloatBuffer;
     391: pop
     392: iconst_0
     393: istore        11
     395: iload         11
     397: aload         5
     399: arraylength
     400: if_icmpge     426
     403: aload_0
     404: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     407: aload         5
     409: iload         11
     411: daload
     412: dload         9
     414: ddiv
     415: d2f
     416: invokevirtual #77                 // Method java/nio/FloatBuffer.put:(F)Ljava/nio/FloatBuffer;
     419: pop
     420: iinc          11, 1
     423: goto          395
     426: aload         5
     428: arraylength
     429: invokestatic  #37                 // Method getPeerSize:(I)I
     432: istore        11
     434: aload_0
     435: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     438: invokevirtual #78                 // Method java/nio/FloatBuffer.position:()I
     441: iload         11
     443: if_icmpge     458
     446: aload_0
     447: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     450: fconst_0
     451: invokevirtual #77                 // Method java/nio/FloatBuffer.put:(F)Ljava/nio/FloatBuffer;
     454: pop
     455: goto          434
     458: aload_0
     459: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     462: iload         11
     464: invokevirtual #79                 // Method java/nio/FloatBuffer.limit:(I)Ljava/nio/FloatBuffer;
     467: pop
     468: aload_0
     469: getfield      #67                 // Field weights:Ljava/nio/FloatBuffer;
     472: invokevirtual #69                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/FloatBuffer;
     475: pop
     476: return

  public int getInputKernelSize(int);
    Code:
       0: iload_1
       1: ifne          11
       4: aload_0
       5: getfield      #19                 // Field inputSizeH:F
       8: goto          15
      11: aload_0
      12: getfield      #20                 // Field inputSizeV:F
      15: fstore_2
      16: fload_2
      17: fconst_1
      18: fcmpg
      19: ifge          24
      22: fconst_1
      23: fstore_2
      24: fload_2
      25: f2d
      26: invokestatic  #31                 // Method java/lang/Math.ceil:(D)D
      29: d2i
      30: iconst_1
      31: ior
      32: istore_3
      33: iconst_1
      34: istore        4
      36: iconst_0
      37: istore        5
      39: iload         5
      41: aload_0
      42: getfield      #11                 // Field blurPasses:I
      45: if_icmpge     62
      48: iload         4
      50: iload_3
      51: iconst_1
      52: isub
      53: iadd
      54: istore        4
      56: iinc          5, 1
      59: goto          39
      62: iload         4
      64: ireturn

  public int getPassKernelSize();
    Code:
       0: aload_0
       1: getfield      #30                 // Field passSize:F
       4: fstore_1
       5: fload_1
       6: fconst_1
       7: fcmpg
       8: ifge          13
      11: fconst_1
      12: fstore_1
      13: fload_1
      14: f2d
      15: invokestatic  #31                 // Method java/lang/Math.ceil:(D)D
      18: d2i
      19: iconst_1
      20: ior
      21: istore_2
      22: iconst_1
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: aload_0
      30: getfield      #11                 // Field blurPasses:I
      33: if_icmpge     48
      36: iload_3
      37: iload_2
      38: iconst_1
      39: isub
      40: iadd
      41: istore_3
      42: iinc          4, 1
      45: goto          27
      48: iload_3
      49: ireturn

  public boolean isNop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isShadow:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #11                 // Field blurPasses:I
      13: ifeq          34
      16: aload_0
      17: getfield      #19                 // Field inputSizeH:F
      20: fconst_1
      21: fcmpg
      22: ifgt          38
      25: aload_0
      26: getfield      #20                 // Field inputSizeV:F
      29: fconst_1
      30: fcmpg
      31: ifgt          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean isPassNop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isShadow:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #32                 // Field validatedPass:I
      11: iconst_1
      12: if_icmpne     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #11                 // Field blurPasses:I
      21: ifeq          33
      24: aload_0
      25: getfield      #30                 // Field passSize:F
      28: fconst_1
      29: fcmpg
      30: ifgt          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  static {};
    Code:
       0: ldc           #80                 // class com/sun/scenario/effect/impl/state/BoxRenderState
       2: invokevirtual #81                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: iconst_4
      17: newarray       int
      19: dup
      20: iconst_0
      21: getstatic     #74                 // Field MAX_KERNEL_SIZE:I
      24: iconst_0
      25: invokestatic  #82                 // Method getMaxSizeForKernelSize:(II)I
      28: iastore
      29: dup
      30: iconst_1
      31: getstatic     #74                 // Field MAX_KERNEL_SIZE:I
      34: iconst_1
      35: invokestatic  #82                 // Method getMaxSizeForKernelSize:(II)I
      38: iastore
      39: dup
      40: iconst_2
      41: getstatic     #74                 // Field MAX_KERNEL_SIZE:I
      44: iconst_2
      45: invokestatic  #82                 // Method getMaxSizeForKernelSize:(II)I
      48: iastore
      49: dup
      50: iconst_3
      51: getstatic     #74                 // Field MAX_KERNEL_SIZE:I
      54: iconst_3
      55: invokestatic  #82                 // Method getMaxSizeForKernelSize:(II)I
      58: iastore
      59: putstatic     #18                 // Field MAX_BOX_SIZES:[I
      62: return
}
