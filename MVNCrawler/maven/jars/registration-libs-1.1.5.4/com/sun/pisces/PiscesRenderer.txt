Compiled from "PiscesRenderer.java"
public final class com.sun.pisces.PiscesRenderer {
  public static final int ARC_OPEN;

  public static final int ARC_CHORD;

  public static final int ARC_PIE;

  private long nativePtr;

  private com.sun.pisces.AbstractSurface surface;

  public com.sun.pisces.PiscesRenderer(com.sun.pisces.AbstractSurface);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field nativePtr:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      14: aload_0
      15: invokespecial #4                  // Method initialize:()V
      18: return

  private native void initialize();

  public void setColor(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #5                  // String RED
       4: invokespecial #6                  // Method checkColorRange:(ILjava/lang/String;)V
       7: aload_0
       8: iload_2
       9: ldc           #7                  // String GREEN
      11: invokespecial #6                  // Method checkColorRange:(ILjava/lang/String;)V
      14: aload_0
      15: iload_3
      16: ldc           #8                  // String BLUE
      18: invokespecial #6                  // Method checkColorRange:(ILjava/lang/String;)V
      21: aload_0
      22: iload         4
      24: ldc           #9                  // String ALPHA
      26: invokespecial #6                  // Method checkColorRange:(ILjava/lang/String;)V
      29: aload_0
      30: iload_1
      31: iload_2
      32: iload_3
      33: iload         4
      35: invokespecial #10                 // Method setColorImpl:(IIII)V
      38: return

  private native void setColorImpl(int, int, int, int);

  private void checkColorRange(int, java.lang.String);
    Code:
       0: iload_1
       1: iflt          11
       4: iload_1
       5: sipush        255
       8: if_icmple     25
      11: new           #11                 // class java/lang/IllegalArgumentException
      14: dup
      15: aload_2
      16: invokedynamic #12,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      21: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  public void setColor(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: sipush        255
       7: invokevirtual #14                 // Method setColor:(IIII)V
      10: return

  public void setCompositeRule(int);
    Code:
       0: iload_1
       1: ifeq          24
       4: iload_1
       5: iconst_1
       6: if_icmpeq     24
       9: iload_1
      10: iconst_2
      11: if_icmpeq     24
      14: new           #11                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #16                 // String Invalid value for Composite-Rule
      20: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: invokespecial #17                 // Method setCompositeRuleImpl:(I)V
      29: return

  private native void setCompositeRuleImpl(int);

  private native void setLinearGradientImpl(int, int, int, int, int[], int, com.sun.pisces.Transform6);

  public void setLinearGradient(int, int, int, int, int[], int[], int, com.sun.pisces.Transform6);
    Code:
       0: new           #18                 // class com/sun/pisces/GradientColorMap
       3: dup
       4: aload         5
       6: aload         6
       8: iload         7
      10: invokespecial #19                 // Method com/sun/pisces/GradientColorMap."<init>":([I[II)V
      13: astore        9
      15: aload_0
      16: iload_1
      17: iload_2
      18: iload_3
      19: iload         4
      21: aload         9
      23: getfield      #20                 // Field com/sun/pisces/GradientColorMap.colors:[I
      26: iload         7
      28: aload         8
      30: ifnonnull     51
      33: new           #21                 // class com/sun/pisces/Transform6
      36: dup
      37: ldc           #22                 // int 65536
      39: iconst_0
      40: iconst_0
      41: ldc           #22                 // int 65536
      43: iconst_0
      44: iconst_0
      45: invokespecial #23                 // Method com/sun/pisces/Transform6."<init>":(IIIIII)V
      48: goto          53
      51: aload         8
      53: invokespecial #24                 // Method setLinearGradientImpl:(IIII[IILcom/sun/pisces/Transform6;)V
      56: return

  public void setLinearGradient(int, int, int, int, com.sun.pisces.GradientColorMap, com.sun.pisces.Transform6);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: getfield      #20                 // Field com/sun/pisces/GradientColorMap.colors:[I
      11: aload         5
      13: getfield      #25                 // Field com/sun/pisces/GradientColorMap.cycleMethod:I
      16: aload         6
      18: ifnonnull     39
      21: new           #21                 // class com/sun/pisces/Transform6
      24: dup
      25: ldc           #22                 // int 65536
      27: iconst_0
      28: iconst_0
      29: ldc           #22                 // int 65536
      31: iconst_0
      32: iconst_0
      33: invokespecial #23                 // Method com/sun/pisces/Transform6."<init>":(IIIIII)V
      36: goto          41
      39: aload         6
      41: invokespecial #24                 // Method setLinearGradientImpl:(IIII[IILcom/sun/pisces/Transform6;)V
      44: return

  public void setLinearGradient(int, int, int, int, int, int, int);
    Code:
       0: iconst_2
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_0
       6: iastore
       7: dup
       8: iconst_1
       9: ldc           #22                 // int 65536
      11: iastore
      12: astore        8
      14: iconst_2
      15: newarray       int
      17: dup
      18: iconst_0
      19: iload_3
      20: iastore
      21: dup
      22: iconst_1
      23: iload         6
      25: iastore
      26: astore        9
      28: new           #21                 // class com/sun/pisces/Transform6
      31: dup
      32: ldc           #22                 // int 65536
      34: iconst_0
      35: iconst_0
      36: ldc           #22                 // int 65536
      38: iconst_0
      39: iconst_0
      40: invokespecial #23                 // Method com/sun/pisces/Transform6."<init>":(IIIIII)V
      43: astore        10
      45: aload_0
      46: iload_1
      47: iload_2
      48: iload         4
      50: iload         5
      52: aload         8
      54: aload         9
      56: iload         7
      58: aload         10
      60: invokevirtual #26                 // Method setLinearGradient:(IIII[I[IILcom/sun/pisces/Transform6;)V
      63: return

  private native void setRadialGradientImpl(int, int, int, int, int, int[], int, com.sun.pisces.Transform6);

  public void setRadialGradient(int, int, int, int, int, int[], int[], int, com.sun.pisces.Transform6);
    Code:
       0: new           #18                 // class com/sun/pisces/GradientColorMap
       3: dup
       4: aload         6
       6: aload         7
       8: iload         8
      10: invokespecial #19                 // Method com/sun/pisces/GradientColorMap."<init>":([I[II)V
      13: astore        10
      15: aload_0
      16: iload_1
      17: iload_2
      18: iload_3
      19: iload         4
      21: iload         5
      23: aload         10
      25: getfield      #20                 // Field com/sun/pisces/GradientColorMap.colors:[I
      28: iload         8
      30: aload         9
      32: ifnonnull     53
      35: new           #21                 // class com/sun/pisces/Transform6
      38: dup
      39: ldc           #22                 // int 65536
      41: iconst_0
      42: iconst_0
      43: ldc           #22                 // int 65536
      45: iconst_0
      46: iconst_0
      47: invokespecial #23                 // Method com/sun/pisces/Transform6."<init>":(IIIIII)V
      50: goto          55
      53: aload         9
      55: invokespecial #27                 // Method setRadialGradientImpl:(IIIII[IILcom/sun/pisces/Transform6;)V
      58: return

  public void setRadialGradient(int, int, int, int, int, com.sun.pisces.GradientColorMap, com.sun.pisces.Transform6);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: getfield      #20                 // Field com/sun/pisces/GradientColorMap.colors:[I
      13: aload         6
      15: getfield      #25                 // Field com/sun/pisces/GradientColorMap.cycleMethod:I
      18: aload         7
      20: ifnonnull     41
      23: new           #21                 // class com/sun/pisces/Transform6
      26: dup
      27: ldc           #22                 // int 65536
      29: iconst_0
      30: iconst_0
      31: ldc           #22                 // int 65536
      33: iconst_0
      34: iconst_0
      35: invokespecial #23                 // Method com/sun/pisces/Transform6."<init>":(IIIIII)V
      38: goto          43
      41: aload         7
      43: invokespecial #27                 // Method setRadialGradientImpl:(IIIII[IILcom/sun/pisces/Transform6;)V
      46: return

  public void setTexture(int, int[], int, int, int, com.sun.pisces.Transform6, boolean, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: iload         4
       4: iconst_0
       5: iload         5
       7: aload_2
       8: arraylength
       9: invokespecial #28                 // Method inputImageCheck:(IIIII)V
      12: aload_0
      13: iload_1
      14: aload_2
      15: iload_3
      16: iload         4
      18: iload         5
      20: aload         6
      22: iload         7
      24: iload         8
      26: invokespecial #29                 // Method setTextureImpl:(I[IIIILcom/sun/pisces/Transform6;ZZ)V
      29: return

  private native void setTextureImpl(int, int[], int, int, int, com.sun.pisces.Transform6, boolean, boolean);

  public void setClip(int, int, int, int);
    Code:
       0: iload_1
       1: iconst_0
       2: invokestatic  #30                 // Method java/lang/Math.max:(II)I
       5: istore        5
       7: iload_2
       8: iconst_0
       9: invokestatic  #30                 // Method java/lang/Math.max:(II)I
      12: istore        6
      14: iload_1
      15: iload_3
      16: iadd
      17: aload_0
      18: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      21: invokevirtual #31                 // Method com/sun/pisces/AbstractSurface.getWidth:()I
      24: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      27: istore        7
      29: iload_2
      30: iload         4
      32: iadd
      33: aload_0
      34: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      37: invokevirtual #33                 // Method com/sun/pisces/AbstractSurface.getHeight:()I
      40: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      43: istore        8
      45: aload_0
      46: iload         5
      48: iload         6
      50: iload         7
      52: iload         5
      54: isub
      55: iload         8
      57: iload         6
      59: isub
      60: invokespecial #34                 // Method setClipImpl:(IIII)V
      63: return

  private native void setClipImpl(int, int, int, int);

  public void resetClip();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: aload_0
       4: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
       7: invokevirtual #31                 // Method com/sun/pisces/AbstractSurface.getWidth:()I
      10: aload_0
      11: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      14: invokevirtual #33                 // Method com/sun/pisces/AbstractSurface.getHeight:()I
      17: invokespecial #34                 // Method setClipImpl:(IIII)V
      20: return

  public void clearRect(int, int, int, int);
    Code:
       0: iload_1
       1: iconst_0
       2: invokestatic  #30                 // Method java/lang/Math.max:(II)I
       5: istore        5
       7: iload_2
       8: iconst_0
       9: invokestatic  #30                 // Method java/lang/Math.max:(II)I
      12: istore        6
      14: iload_1
      15: iload_3
      16: iadd
      17: aload_0
      18: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      21: invokevirtual #31                 // Method com/sun/pisces/AbstractSurface.getWidth:()I
      24: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      27: istore        7
      29: iload_2
      30: iload         4
      32: iadd
      33: aload_0
      34: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      37: invokevirtual #33                 // Method com/sun/pisces/AbstractSurface.getHeight:()I
      40: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      43: istore        8
      45: aload_0
      46: iload         5
      48: iload         6
      50: iload         7
      52: iload         5
      54: isub
      55: iload         8
      57: iload         6
      59: isub
      60: invokespecial #35                 // Method clearRectImpl:(IIII)V
      63: return

  private native void clearRectImpl(int, int, int, int);

  public void fillRect(int, int, int, int);
    Code:
       0: iload_1
       1: iconst_0
       2: invokestatic  #30                 // Method java/lang/Math.max:(II)I
       5: istore        5
       7: iload_2
       8: iconst_0
       9: invokestatic  #30                 // Method java/lang/Math.max:(II)I
      12: istore        6
      14: iload_1
      15: iload_3
      16: iadd
      17: aload_0
      18: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      21: invokevirtual #31                 // Method com/sun/pisces/AbstractSurface.getWidth:()I
      24: bipush        16
      26: ishl
      27: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      30: istore        7
      32: iload_2
      33: iload         4
      35: iadd
      36: aload_0
      37: getfield      #3                  // Field surface:Lcom/sun/pisces/AbstractSurface;
      40: invokevirtual #33                 // Method com/sun/pisces/AbstractSurface.getHeight:()I
      43: bipush        16
      45: ishl
      46: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      49: istore        8
      51: iload         7
      53: iload         5
      55: isub
      56: istore        9
      58: iload         8
      60: iload         6
      62: isub
      63: istore        10
      65: iload         9
      67: ifle          87
      70: iload         10
      72: ifle          87
      75: aload_0
      76: iload         5
      78: iload         6
      80: iload         9
      82: iload         10
      84: invokespecial #36                 // Method fillRectImpl:(IIII)V
      87: return

  private native void fillRectImpl(int, int, int, int);

  public void emitAndClearAlphaRow(byte[], int[], int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iconst_0
       9: iload         6
      11: invokevirtual #37                 // Method emitAndClearAlphaRow:([B[IIIIII)V
      14: return

  public void emitAndClearAlphaRow(byte[], int[], int, int, int, int, int);
    Code:
       0: iload         6
       2: iflt          18
       5: iload         6
       7: iload         5
       9: iload         4
      11: isub
      12: iadd
      13: aload_2
      14: arraylength
      15: if_icmple     28
      18: new           #11                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #38                 // String rendering range exceeds length of data
      24: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: aload_2
      31: iload_3
      32: iload         4
      34: iload         5
      36: iload         6
      38: iload         7
      40: invokespecial #39                 // Method emitAndClearAlphaRowImpl:([B[IIIIII)V
      43: return

  private native void emitAndClearAlphaRowImpl(byte[], int[], int, int, int, int, int);

  public void fillAlphaMask(byte[], int, int, int, int, int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #40                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #41                 // String Mask is NULL
      10: invokespecial #42                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload         4
      17: iload         5
      19: iload         6
      21: iload         7
      23: aload_1
      24: arraylength
      25: invokespecial #28                 // Method inputImageCheck:(IIIII)V
      28: aload_0
      29: aload_1
      30: iload_2
      31: iload_3
      32: iload         4
      34: iload         5
      36: iload         6
      38: iload         7
      40: invokespecial #43                 // Method fillAlphaMaskImpl:([BIIIIII)V
      43: return

  private native void fillAlphaMaskImpl(byte[], int, int, int, int, int, int);

  public void setLCDGammaCorrection(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: ifgt          16
       6: new           #11                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #44                 // String Gamma must be greater than zero
      12: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: fload_1
      18: invokespecial #45                 // Method setLCDGammaCorrectionImpl:(F)V
      21: return

  private native void setLCDGammaCorrectionImpl(float);

  public void fillLCDAlphaMask(byte[], int, int, int, int, int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #40                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #41                 // String Mask is NULL
      10: invokespecial #42                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload         4
      17: iload         5
      19: iload         6
      21: iload         7
      23: aload_1
      24: arraylength
      25: invokespecial #28                 // Method inputImageCheck:(IIIII)V
      28: aload_0
      29: aload_1
      30: iload_2
      31: iload_3
      32: iload         4
      34: iload         5
      36: iload         6
      38: iload         7
      40: invokespecial #46                 // Method fillLCDAlphaMaskImpl:([BIIIIII)V
      43: return

  private native void fillLCDAlphaMaskImpl(byte[], int, int, int, int, int, int);

  public void drawImage(int, int, int[], int, int, int, int, com.sun.pisces.Transform6, boolean, int, int, int, int, int, int, int, int, int, int, int, int, boolean);
    Code:
       0: aload_0
       1: iload         4
       3: iload         5
       5: iload         6
       7: iload         7
       9: aload_3
      10: arraylength
      11: invokespecial #28                 // Method inputImageCheck:(IIIII)V
      14: aload_0
      15: iload_1
      16: iload_2
      17: aload_3
      18: iload         4
      20: iload         5
      22: iload         6
      24: iload         7
      26: aload         8
      28: iload         9
      30: iload         10
      32: iload         11
      34: iload         12
      36: iload         13
      38: iload         14
      40: iload         15
      42: iload         16
      44: iload         17
      46: iload         18
      48: iload         19
      50: iload         20
      52: iload         21
      54: iload         22
      56: invokespecial #47                 // Method drawImageImpl:(II[IIIIILcom/sun/pisces/Transform6;ZIIIIIIIIIIIIZ)V
      59: return

  private native void drawImageImpl(int, int, int[], int, int, int, int, com.sun.pisces.Transform6, boolean, int, int, int, int, int, int, int, int, int, int, int, int, boolean);

  private void inputImageCheck(int, int, int, int, int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #11                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #48                 // String WIDTH must be positive
      10: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifge          28
      18: new           #11                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #49                 // String HEIGHT must be positive
      24: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iload_3
      29: ifge          42
      32: new           #11                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #50                 // String OFFSET must be positive
      38: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload         4
      44: ifge          57
      47: new           #11                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #51                 // String STRIDE must be positive
      53: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iload         4
      59: iload_1
      60: if_icmpge     73
      63: new           #11                 // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #52                 // String STRIDE must be >= WIDTH
      69: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: bipush        32
      75: iload         4
      77: invokestatic  #53                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      80: isub
      81: bipush        32
      83: iadd
      84: iload_2
      85: invokestatic  #53                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      88: isub
      89: istore        6
      91: iload         6
      93: bipush        31
      95: if_icmple     108
      98: new           #11                 // class java/lang/IllegalArgumentException
     101: dup
     102: ldc           #54                 // String STRIDE * HEIGHT is too large
     104: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: iload_3
     109: iload         4
     111: iload_2
     112: iconst_1
     113: isub
     114: imul
     115: iadd
     116: iload_1
     117: iadd
     118: iload         5
     120: if_icmple     133
     123: new           #11                 // class java/lang/IllegalArgumentException
     126: dup
     127: ldc           #55                 // String STRIDE * HEIGHT exceeds length of data
     129: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     132: athrow
     133: return

  protected void finalize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method nativeFinalize:()V
       4: return

  private native void nativeFinalize();
}
