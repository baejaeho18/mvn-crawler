Compiled from "OptionalDoubleSerializer.java"
public class com.fasterxml.jackson.datatype.jdk8.OptionalDoubleSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.util.OptionalDouble> {
  private static final long serialVersionUID;

  static final com.fasterxml.jackson.datatype.jdk8.OptionalDoubleSerializer INSTANCE;

  public com.fasterxml.jackson.datatype.jdk8.OptionalDoubleSerializer();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/util/OptionalDouble
       3: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;)V
       6: return

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.util.OptionalDouble);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #3                  // Method java/util/OptionalDouble.isPresent:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #4,  2            // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectNumberFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonNumberFormatVisitor;
       7: astore_3
       8: aload_3
       9: ifnull        21
      12: aload_3
      13: getstatic     #5                  // Field com/fasterxml/jackson/core/JsonParser$NumberType.DOUBLE:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
      16: invokeinterface #6,  2            // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonNumberFormatVisitor.numberType:(Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
      21: return

  public void serialize(java.util.OptionalDouble, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/util/OptionalDouble.isPresent:()Z
       4: ifeq          18
       7: aload_2
       8: aload_1
       9: invokevirtual #7                  // Method java/util/OptionalDouble.getAsDouble:()D
      12: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
      15: goto          22
      18: aload_2
      19: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
      22: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/util/OptionalDouble
       5: aload_2
       6: aload_3
       7: invokevirtual #10                 // Method serialize:(Ljava/util/OptionalDouble;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #1                  // class java/util/OptionalDouble
       6: invokevirtual #11                 // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/util/OptionalDouble;)Z
       9: ireturn

  static {};
    Code:
       0: new           #12                 // class com/fasterxml/jackson/datatype/jdk8/OptionalDoubleSerializer
       3: dup
       4: invokespecial #13                 // Method "<init>":()V
       7: putstatic     #14                 // Field INSTANCE:Lcom/fasterxml/jackson/datatype/jdk8/OptionalDoubleSerializer;
      10: return
}
