Compiled from "AtomicReferenceSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer extends com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<?>> {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer(com.fasterxml.jackson.databind.type.ReferenceType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method com/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer."<init>":(Lcom/fasterxml/jackson/databind/type/ReferenceType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;)V
       9: return

  protected com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.util.NameTransformer, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer."<init>":(Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Ljava/lang/Object;Z)V
      15: return

  protected com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<?>> withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.util.NameTransformer);
    Code:
       0: new           #3                  // class com/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload_0
      11: getfield      #4                  // Field _suppressableValue:Ljava/lang/Object;
      14: aload_0
      15: getfield      #5                  // Field _suppressNulls:Z
      18: invokespecial #6                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Ljava/lang/Object;Z)V
      21: areturn

  public com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<?>> withContentInclusion(java.lang.Object, boolean);
    Code:
       0: new           #3                  // class com/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field _property:Lcom/fasterxml/jackson/databind/BeanProperty;
       9: aload_0
      10: getfield      #8                  // Field _valueTypeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
      13: aload_0
      14: getfield      #9                  // Field _valueSerializer:Lcom/fasterxml/jackson/databind/JsonSerializer;
      17: aload_0
      18: getfield      #10                 // Field _unwrapper:Lcom/fasterxml/jackson/databind/util/NameTransformer;
      21: aload_1
      22: iload_2
      23: invokespecial #6                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Ljava/lang/Object;Z)V
      26: areturn

  protected boolean _isValuePresent(java.util.concurrent.atomic.AtomicReference<?>);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference<?>);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: areturn

  protected java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference<?>);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: areturn

  protected java.lang.Object _getReferencedIfPresent(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #13                 // Method _getReferencedIfPresent:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;
       8: areturn

  protected java.lang.Object _getReferenced(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #14                 // Method _getReferenced:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;
       8: areturn

  protected boolean _isValuePresent(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #15                 // Method _isValuePresent:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       8: ireturn
}
