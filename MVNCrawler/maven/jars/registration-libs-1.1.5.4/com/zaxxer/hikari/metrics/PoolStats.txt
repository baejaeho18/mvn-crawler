Compiled from "PoolStats.java"
public abstract class com.zaxxer.hikari.metrics.PoolStats {
  private final java.util.concurrent.atomic.AtomicLong reloadAt;

  private final long timeoutMs;

  protected volatile int totalConnections;

  protected volatile int idleConnections;

  protected volatile int activeConnections;

  protected volatile int pendingThreads;

  protected volatile int maxConnections;

  protected volatile int minConnections;

  public com.zaxxer.hikari.metrics.PoolStats(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field timeoutMs:J
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      17: putfield      #5                  // Field reloadAt:Ljava/util/concurrent/atomic/AtomicLong;
      20: return

  public int getTotalConnections();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method shouldLoad:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method update:()V
      11: aload_0
      12: getfield      #8                  // Field totalConnections:I
      15: ireturn

  public int getIdleConnections();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method shouldLoad:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method update:()V
      11: aload_0
      12: getfield      #9                  // Field idleConnections:I
      15: ireturn

  public int getActiveConnections();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method shouldLoad:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method update:()V
      11: aload_0
      12: getfield      #10                 // Field activeConnections:I
      15: ireturn

  public int getPendingThreads();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method shouldLoad:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method update:()V
      11: aload_0
      12: getfield      #11                 // Field pendingThreads:I
      15: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method shouldLoad:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method update:()V
      11: aload_0
      12: getfield      #12                 // Field maxConnections:I
      15: ireturn

  public int getMinConnections();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method shouldLoad:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #7                  // Method update:()V
      11: aload_0
      12: getfield      #13                 // Field minConnections:I
      15: ireturn

  protected abstract void update();

  private boolean shouldLoad();
    Code:
       0: invokestatic  #14                 // InterfaceMethod com/zaxxer/hikari/util/ClockSource.currentTime:()J
       3: lstore_1
       4: aload_0
       5: getfield      #5                  // Field reloadAt:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      11: lstore_3
      12: lload_3
      13: lload_1
      14: lcmp
      15: ifle          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #5                  // Field reloadAt:Ljava/util/concurrent/atomic/AtomicLong;
      24: lload_3
      25: lload_1
      26: aload_0
      27: getfield      #2                  // Field timeoutMs:J
      30: invokestatic  #16                 // InterfaceMethod com/zaxxer/hikari/util/ClockSource.plusMillis:(JJ)J
      33: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          0
}
