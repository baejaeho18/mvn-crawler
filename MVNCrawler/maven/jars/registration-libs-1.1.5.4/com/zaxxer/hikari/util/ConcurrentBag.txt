Compiled from "ConcurrentBag.java"
public class com.zaxxer.hikari.util.ConcurrentBag<T extends com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry> implements java.lang.AutoCloseable {
  private static final org.slf4j.Logger LOGGER;

  private final java.util.concurrent.CopyOnWriteArrayList<T> sharedList;

  private final boolean weakThreadLocals;

  private final java.lang.ThreadLocal<java.util.List<java.lang.Object>> threadList;

  private final com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener listener;

  private final java.util.concurrent.atomic.AtomicInteger waiters;

  private volatile boolean closed;

  private final java.util.concurrent.SynchronousQueue<T> handoffQueue;

  public com.zaxxer.hikari.util.ConcurrentBag(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field listener:Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;
       9: aload_0
      10: aload_0
      11: invokespecial #4                  // Method useWeakThreadLocals:()Z
      14: putfield      #5                  // Field weakThreadLocals:Z
      17: aload_0
      18: new           #6                  // class java/util/concurrent/SynchronousQueue
      21: dup
      22: iconst_1
      23: invokespecial #7                  // Method java/util/concurrent/SynchronousQueue."<init>":(Z)V
      26: putfield      #8                  // Field handoffQueue:Ljava/util/concurrent/SynchronousQueue;
      29: aload_0
      30: new           #9                  // class java/util/concurrent/atomic/AtomicInteger
      33: dup
      34: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      37: putfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
      40: aload_0
      41: new           #12                 // class java/util/concurrent/CopyOnWriteArrayList
      44: dup
      45: invokespecial #13                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      48: putfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
      51: aload_0
      52: getfield      #5                  // Field weakThreadLocals:Z
      55: ifeq          73
      58: aload_0
      59: invokedynamic #15,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      64: invokestatic  #16                 // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      67: putfield      #17                 // Field threadList:Ljava/lang/ThreadLocal;
      70: goto          85
      73: aload_0
      74: invokedynamic #18,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      79: invokestatic  #16                 // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      82: putfield      #17                 // Field threadList:Ljava/lang/ThreadLocal;
      85: return

  public T borrow(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field threadList:Ljava/lang/ThreadLocal;
       4: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #20                 // class java/util/List
      10: astore        4
      12: aload         4
      14: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
      19: iconst_1
      20: isub
      21: istore        5
      23: iload         5
      25: iflt          93
      28: aload         4
      30: iload         5
      32: invokeinterface #22,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      37: astore        6
      39: aload_0
      40: getfield      #5                  // Field weakThreadLocals:Z
      43: ifeq          60
      46: aload         6
      48: checkcast     #23                 // class java/lang/ref/WeakReference
      51: invokevirtual #24                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      54: checkcast     #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
      57: goto          65
      60: aload         6
      62: checkcast     #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
      65: astore        7
      67: aload         7
      69: ifnull        87
      72: aload         7
      74: iconst_0
      75: iconst_1
      76: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
      81: ifeq          87
      84: aload         7
      86: areturn
      87: iinc          5, -1
      90: goto          23
      93: aload_0
      94: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
      97: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     100: istore        5
     102: aload_0
     103: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
     106: invokevirtual #27                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
     109: astore        6
     111: aload         6
     113: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          182
     121: aload         6
     123: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: checkcast     #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
     131: astore        7
     133: aload         7
     135: iconst_0
     136: iconst_1
     137: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
     142: ifeq          179
     145: iload         5
     147: iconst_1
     148: if_icmple     164
     151: aload_0
     152: getfield      #3                  // Field listener:Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;
     155: iload         5
     157: iconst_1
     158: isub
     159: invokeinterface #30,  2           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IBagStateListener.addBagItem:(I)V
     164: aload         7
     166: astore        8
     168: aload_0
     169: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
     172: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     175: pop
     176: aload         8
     178: areturn
     179: goto          111
     182: aload_0
     183: getfield      #3                  // Field listener:Lcom/zaxxer/hikari/util/ConcurrentBag$IBagStateListener;
     186: iload         5
     188: invokeinterface #30,  2           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IBagStateListener.addBagItem:(I)V
     193: aload_3
     194: lload_1
     195: invokevirtual #32                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     198: lstore_1
     199: invokestatic  #33                 // InterfaceMethod com/zaxxer/hikari/util/ClockSource.currentTime:()J
     202: lstore        6
     204: aload_0
     205: getfield      #8                  // Field handoffQueue:Ljava/util/concurrent/SynchronousQueue;
     208: lload_1
     209: getstatic     #34                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     212: invokevirtual #35                 // Method java/util/concurrent/SynchronousQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
     215: checkcast     #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
     218: astore        8
     220: aload         8
     222: ifnull        237
     225: aload         8
     227: iconst_0
     228: iconst_1
     229: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
     234: ifeq          252
     237: aload         8
     239: astore        9
     241: aload_0
     242: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
     245: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     248: pop
     249: aload         9
     251: areturn
     252: lload_1
     253: lload         6
     255: invokestatic  #36                 // InterfaceMethod com/zaxxer/hikari/util/ClockSource.elapsedNanos:(J)J
     258: lsub
     259: lstore_1
     260: lload_1
     261: ldc2_w        #37                 // long 10000l
     264: lcmp
     265: ifgt          199
     268: aconst_null
     269: astore        6
     271: aload_0
     272: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
     275: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     278: pop
     279: aload         6
     281: areturn
     282: astore        10
     284: aload_0
     285: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
     288: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     291: pop
     292: aload         10
     294: athrow
    Exception table:
       from    to  target type
         102   168   282   any
         179   241   282   any
         252   271   282   any
         282   284   282   any

  public void requite(T);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #39,  2           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.setState:(I)V
       7: iconst_0
       8: istore_2
       9: aload_0
      10: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
      13: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      16: ifle          75
      19: aload_1
      20: invokeinterface #41,  1           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.getState:()I
      25: ifne          39
      28: aload_0
      29: getfield      #8                  // Field handoffQueue:Ljava/util/concurrent/SynchronousQueue;
      32: aload_1
      33: invokevirtual #42                 // Method java/util/concurrent/SynchronousQueue.offer:(Ljava/lang/Object;)Z
      36: ifeq          40
      39: return
      40: iload_2
      41: sipush        255
      44: iand
      45: sipush        255
      48: if_icmpne     66
      51: getstatic     #43                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
      54: ldc2_w        #44                 // long 10l
      57: invokevirtual #32                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      60: invokestatic  #46                 // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
      63: goto          69
      66: invokestatic  #47                 // Method java/lang/Thread.yield:()V
      69: iinc          2, 1
      72: goto          9
      75: aload_0
      76: getfield      #17                 // Field threadList:Ljava/lang/ThreadLocal;
      79: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      82: checkcast     #20                 // class java/util/List
      85: astore_2
      86: aload_2
      87: aload_0
      88: getfield      #5                  // Field weakThreadLocals:Z
      91: ifeq          105
      94: new           #23                 // class java/lang/ref/WeakReference
      97: dup
      98: aload_1
      99: invokespecial #48                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     102: goto          106
     105: aload_1
     106: invokeinterface #49,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: return

  public void add(T);
    Code:
       0: aload_0
       1: getfield      #50                 // Field closed:Z
       4: ifeq          27
       7: getstatic     #51                 // Field LOGGER:Lorg/slf4j/Logger;
      10: ldc           #52                 // String ConcurrentBag has been closed, ignoring add()
      12: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      17: new           #54                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #52                 // String ConcurrentBag has been closed, ignoring add()
      23: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
      31: aload_1
      32: invokevirtual #56                 // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
      40: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      43: ifle          63
      46: aload_0
      47: getfield      #8                  // Field handoffQueue:Ljava/util/concurrent/SynchronousQueue;
      50: aload_1
      51: invokevirtual #42                 // Method java/util/concurrent/SynchronousQueue.offer:(Ljava/lang/Object;)Z
      54: ifne          63
      57: invokestatic  #47                 // Method java/lang/Thread.yield:()V
      60: goto          36
      63: return

  public boolean remove(T);
    Code:
       0: aload_1
       1: iconst_1
       2: iconst_m1
       3: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
       8: ifne          43
      11: aload_1
      12: bipush        -2
      14: iconst_m1
      15: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
      20: ifne          43
      23: aload_0
      24: getfield      #50                 // Field closed:Z
      27: ifne          43
      30: getstatic     #51                 // Field LOGGER:Lorg/slf4j/Logger;
      33: ldc           #57                 // String Attempt to remove an object from the bag that was not borrowed or reserved: {}
      35: aload_1
      36: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
      47: aload_1
      48: invokevirtual #59                 // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
      51: istore_2
      52: iload_2
      53: ifne          74
      56: aload_0
      57: getfield      #50                 // Field closed:Z
      60: ifne          74
      63: getstatic     #51                 // Field LOGGER:Lorg/slf4j/Logger;
      66: ldc           #60                 // String Attempt to remove an object from the bag that does not exist: {}
      68: aload_1
      69: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      74: iload_2
      75: ireturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #50                 // Field closed:Z
       5: return

  public java.util.List<T> values(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #61                 // Method java/util/concurrent/CopyOnWriteArrayList.stream:()Ljava/util/stream/Stream;
       7: iload_1
       8: invokedynamic #62,  0             // InvokeDynamic #2:test:(I)Ljava/util/function/Predicate;
      13: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokestatic  #64                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      21: invokeinterface #65,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      26: checkcast     #20                 // class java/util/List
      29: astore_2
      30: aload_2
      31: invokestatic  #66                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      34: aload_2
      35: areturn

  public java.util.List<T> values();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #67                 // Method java/util/concurrent/CopyOnWriteArrayList.clone:()Ljava/lang/Object;
       7: checkcast     #20                 // class java/util/List
      10: areturn

  public boolean reserve(T);
    Code:
       0: aload_1
       1: iconst_0
       2: bipush        -2
       4: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
       9: ireturn

  public void unreserve(T);
    Code:
       0: aload_1
       1: bipush        -2
       3: iconst_0
       4: invokeinterface #25,  3           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.compareAndSet:(II)Z
       9: ifeq          39
      12: aload_0
      13: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      19: ifle          50
      22: aload_0
      23: getfield      #8                  // Field handoffQueue:Ljava/util/concurrent/SynchronousQueue;
      26: aload_1
      27: invokevirtual #42                 // Method java/util/concurrent/SynchronousQueue.offer:(Ljava/lang/Object;)Z
      30: ifne          50
      33: invokestatic  #47                 // Method java/lang/Thread.yield:()V
      36: goto          12
      39: getstatic     #51                 // Field LOGGER:Lorg/slf4j/Logger;
      42: ldc           #68                 // String Attempt to relinquish an object to the bag that was not reserved: {}
      44: aload_1
      45: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      50: return

  public int getWaitingThreadCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getCount(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
       6: invokevirtual #27                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_3
      20: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
      28: astore        4
      30: aload         4
      32: invokeinterface #41,  1           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.getState:()I
      37: iload_1
      38: if_icmpne     44
      41: iinc          2, 1
      44: goto          10
      47: iload_2
      48: ireturn

  public int[] getStateCounts();
    Code:
       0: bipush        6
       2: newarray       int
       4: astore_1
       5: aload_0
       6: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
       9: invokevirtual #27                 // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          47
      22: aload_2
      23: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokeinterface #41,  1           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.getState:()I
      39: dup2
      40: iaload
      41: iconst_1
      42: iadd
      43: iastore
      44: goto          13
      47: aload_1
      48: iconst_4
      49: aload_0
      50: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
      53: invokevirtual #69                 // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
      56: iastore
      57: aload_1
      58: iconst_5
      59: aload_0
      60: getfield      #11                 // Field waiters:Ljava/util/concurrent/atomic/AtomicInteger;
      63: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      66: iastore
      67: aload_1
      68: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #69                 // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
       7: ireturn

  public void dumpState();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sharedList:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokedynamic #70,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #71                 // Method java/util/concurrent/CopyOnWriteArrayList.forEach:(Ljava/util/function/Consumer;)V
      12: return

  private boolean useWeakThreadLocals();
    Code:
       0: ldc           #72                 // String com.zaxxer.hikari.useWeakReferences
       2: invokestatic  #73                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ifnull        14
       8: ldc           #72                 // String com.zaxxer.hikari.useWeakReferences
      10: invokestatic  #74                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      13: ireturn
      14: aload_0
      15: invokevirtual #75                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #76                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      21: invokestatic  #77                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      24: if_acmpeq     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: astore_1
      34: iconst_1
      35: ireturn
    Exception table:
       from    to  target type
           0    13    33   Class java/lang/SecurityException
          14    32    33   Class java/lang/SecurityException

  private static void lambda$dumpState$3(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry);
    Code:
       0: getstatic     #51                 // Field LOGGER:Lorg/slf4j/Logger;
       3: aload_0
       4: invokevirtual #79                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      12: return

  private static boolean lambda$values$2(int, com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry);
    Code:
       0: aload_1
       1: invokeinterface #41,  1           // InterfaceMethod com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry.getState:()I
       6: iload_0
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static java.util.List lambda$new$1();
    Code:
       0: new           #80                 // class com/zaxxer/hikari/util/FastList
       3: dup
       4: ldc           #1                  // class com/zaxxer/hikari/util/ConcurrentBag$IConcurrentBagEntry
       6: bipush        16
       8: invokespecial #81                 // Method com/zaxxer/hikari/util/FastList."<init>":(Ljava/lang/Class;I)V
      11: areturn

  private static java.util.List lambda$new$0();
    Code:
       0: new           #82                 // class java/util/ArrayList
       3: dup
       4: bipush        16
       6: invokespecial #83                 // Method java/util/ArrayList."<init>":(I)V
       9: areturn

  static {};
    Code:
       0: ldc           #84                 // class com/zaxxer/hikari/util/ConcurrentBag
       2: invokestatic  #85                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #51                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
