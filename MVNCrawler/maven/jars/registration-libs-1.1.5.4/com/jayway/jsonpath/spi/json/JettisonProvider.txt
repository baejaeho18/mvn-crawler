Compiled from "JettisonProvider.java"
public class com.jayway.jsonpath.spi.json.JettisonProvider extends com.jayway.jsonpath.spi.json.AbstractJsonProvider {
  public com.jayway.jsonpath.spi.json.JettisonProvider();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/jayway/jsonpath/spi/json/AbstractJsonProvider."<init>":()V
       4: return

  private static java.lang.Object jettisonUnwrap(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: getstatic     #3                  // Field org/codehaus/jettison/json/JSONObject.NULL:Ljava/lang/Object;
       8: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: areturn

  private static java.lang.Object jettisonWrap(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #3                  // Field org/codehaus/jettison/json/JSONObject.NULL:Ljava/lang/Object;
       7: areturn
       8: aload_0
       9: areturn

  private java.lang.Object parse(com.jayway.jsonpath.spi.json.JettisonProvider$JettisonTokener);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener.nextClean:()C
       4: istore_2
       5: aload_1
       6: invokevirtual #6                  // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener.back:()V
       9: iload_2
      10: bipush        123
      12: if_icmpne     25
      15: new           #7                  // class com/jayway/jsonpath/spi/json/JettisonProvider$JettisonObject
      18: dup
      19: aload_1
      20: aconst_null
      21: invokespecial #8                  // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonObject."<init>":(Lcom/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener;Lcom/jayway/jsonpath/spi/json/JettisonProvider$1;)V
      24: areturn
      25: iload_2
      26: bipush        91
      28: if_icmpne     41
      31: new           #9                  // class com/jayway/jsonpath/spi/json/JettisonProvider$JettisonArray
      34: dup
      35: aload_1
      36: aconst_null
      37: invokespecial #10                 // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonArray."<init>":(Lcom/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener;Lcom/jayway/jsonpath/spi/json/JettisonProvider$1;)V
      40: areturn
      41: new           #11                 // class org/codehaus/jettison/json/JSONException
      44: dup
      45: ldc           #12                 // String Invalid JSON
      47: invokespecial #13                 // Method org/codehaus/jettison/json/JSONException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: astore_2
      52: new           #14                 // class java/lang/IllegalStateException
      55: dup
      56: aload_2
      57: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      60: athrow
    Exception table:
       from    to  target type
           0    24    51   Class org/codehaus/jettison/json/JSONException
          25    40    51   Class org/codehaus/jettison/json/JSONException
          41    51    51   Class org/codehaus/jettison/json/JSONException

  public java.lang.Object parse(java.lang.String) throws com.jayway.jsonpath.InvalidJsonException;
    Code:
       0: aload_0
       1: new           #16                 // class com/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener
       4: dup
       5: aload_1
       6: invokespecial #17                 // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener."<init>":(Ljava/lang/String;)V
       9: invokespecial #18                 // Method parse:(Lcom/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener;)Ljava/lang/Object;
      12: areturn

  public java.lang.Object parse(java.io.InputStream, java.lang.String) throws com.jayway.jsonpath.InvalidJsonException;
    Code:
       0: new           #19                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #20                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_3
       8: sipush        1024
      11: newarray       byte
      13: astore        4
      15: aload_1
      16: aload         4
      18: invokevirtual #21                 // Method java/io/InputStream.read:([B)I
      21: dup
      22: istore        5
      24: ifle          39
      27: aload_3
      28: aload         4
      30: iconst_0
      31: iload         5
      33: invokevirtual #22                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      36: goto          15
      39: aload_0
      40: new           #16                 // class com/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener
      43: dup
      44: new           #23                 // class java/lang/String
      47: dup
      48: aload_3
      49: invokevirtual #24                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      52: aload_2
      53: invokespecial #25                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      56: invokespecial #17                 // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener."<init>":(Ljava/lang/String;)V
      59: invokespecial #18                 // Method parse:(Lcom/jayway/jsonpath/spi/json/JettisonProvider$JettisonTokener;)Ljava/lang/Object;
      62: areturn
      63: astore_3
      64: new           #27                 // class com/jayway/jsonpath/InvalidJsonException
      67: dup
      68: aload_3
      69: invokespecial #28                 // Method com/jayway/jsonpath/InvalidJsonException."<init>":(Ljava/lang/Throwable;)V
      72: athrow
    Exception table:
       from    to  target type
           0    62    63   Class java/io/IOException

  public java.lang.String toJson(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/codehaus/jettison/json/JSONArray
       4: ifeq          16
       7: aload_1
       8: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
      11: iconst_2
      12: invokevirtual #30                 // Method org/codehaus/jettison/json/JSONArray.toString:(I)Ljava/lang/String;
      15: areturn
      16: aload_1
      17: instanceof    #31                 // class org/codehaus/jettison/json/JSONObject
      20: ifeq          32
      23: aload_1
      24: checkcast     #31                 // class org/codehaus/jettison/json/JSONObject
      27: iconst_2
      28: invokevirtual #32                 // Method org/codehaus/jettison/json/JSONObject.toString:(I)Ljava/lang/String;
      31: areturn
      32: aload_1
      33: invokestatic  #33                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      36: areturn
      37: astore_2
      38: new           #14                 // class java/lang/IllegalStateException
      41: dup
      42: aload_2
      43: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
    Exception table:
       from    to  target type
           0    15    37   Class org/codehaus/jettison/json/JSONException
          16    31    37   Class org/codehaus/jettison/json/JSONException
          32    36    37   Class org/codehaus/jettison/json/JSONException

  public java.lang.Object createMap();
    Code:
       0: new           #7                  // class com/jayway/jsonpath/spi/json/JettisonProvider$JettisonObject
       3: dup
       4: aconst_null
       5: invokespecial #34                 // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonObject."<init>":(Lcom/jayway/jsonpath/spi/json/JettisonProvider$1;)V
       8: areturn

  public java.lang.Iterable<?> createArray();
    Code:
       0: new           #9                  // class com/jayway/jsonpath/spi/json/JettisonProvider$JettisonArray
       3: dup
       4: aconst_null
       5: invokespecial #35                 // Method com/jayway/jsonpath/spi/json/JettisonProvider$JettisonArray."<init>":(Lcom/jayway/jsonpath/spi/json/JettisonProvider$1;)V
       8: areturn

  public java.lang.Object unwrap(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #1                  // Method jettisonUnwrap:(Ljava/lang/Object;)Ljava/lang/Object;
       4: areturn

  public boolean isArray(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/codehaus/jettison/json/JSONArray
       4: ireturn

  public boolean isMap(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #31                 // class org/codehaus/jettison/json/JSONObject
       4: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/codehaus/jettison/json/JSONArray
       4: ifeq          15
       7: aload_1
       8: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
      11: invokevirtual #36                 // Method org/codehaus/jettison/json/JSONArray.length:()I
      14: ireturn
      15: aload_1
      16: instanceof    #31                 // class org/codehaus/jettison/json/JSONObject
      19: ifeq          30
      22: aload_1
      23: checkcast     #31                 // class org/codehaus/jettison/json/JSONObject
      26: invokevirtual #37                 // Method org/codehaus/jettison/json/JSONObject.length:()I
      29: ireturn
      30: aload_1
      31: instanceof    #23                 // class java/lang/String
      34: ifeq          45
      37: aload_1
      38: checkcast     #23                 // class java/lang/String
      41: invokevirtual #38                 // Method java/lang/String.length:()I
      44: ireturn
      45: iconst_0
      46: ireturn

  public java.lang.Iterable<?> toIterable(java.lang.Object);
    Code:
       0: new           #39                 // class com/jayway/jsonpath/spi/json/JettisonProvider$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #40                 // Method com/jayway/jsonpath/spi/json/JettisonProvider$1."<init>":(Lcom/jayway/jsonpath/spi/json/JettisonProvider;Ljava/lang/Object;)V
       9: areturn

  public java.util.Collection<java.lang.String> getPropertyKeys(java.lang.Object);
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #42                 // Method length:(Ljava/lang/Object;)I
       9: invokespecial #43                 // Method java/util/ArrayList."<init>":(I)V
      12: astore_2
      13: aload_1
      14: instanceof    #29                 // class org/codehaus/jettison/json/JSONArray
      17: ifeq          48
      20: iconst_0
      21: istore_3
      22: iload_3
      23: aload_0
      24: aload_1
      25: invokevirtual #42                 // Method length:(Ljava/lang/Object;)I
      28: if_icmpge     48
      31: aload_2
      32: iload_3
      33: invokestatic  #44                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      36: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: iinc          3, 1
      45: goto          22
      48: aload_1
      49: instanceof    #31                 // class org/codehaus/jettison/json/JSONObject
      52: ifeq          91
      55: aload_1
      56: checkcast     #31                 // class org/codehaus/jettison/json/JSONObject
      59: invokevirtual #46                 // Method org/codehaus/jettison/json/JSONObject.keys:()Ljava/util/Iterator;
      62: astore_3
      63: aload_3
      64: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          91
      72: aload_2
      73: aload_3
      74: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: invokestatic  #33                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      82: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          63
      91: aload_2
      92: areturn

  public java.lang.Object getArrayIndex(java.lang.Object, int);
    Code:
       0: aload_1
       1: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
       4: iload_2
       5: invokevirtual #49                 // Method org/codehaus/jettison/json/JSONArray.opt:(I)Ljava/lang/Object;
       8: invokestatic  #1                  // Method jettisonUnwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public void setArrayIndex(java.lang.Object, int, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method isArray:(Ljava/lang/Object;)Z
       5: ifne          16
       8: new           #51                 // class java/lang/UnsupportedOperationException
      11: dup
      12: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":()V
      15: athrow
      16: aload_1
      17: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
      20: iload_2
      21: aload_3
      22: invokestatic  #53                 // Method jettisonWrap:(Ljava/lang/Object;)Ljava/lang/Object;
      25: invokevirtual #54                 // Method org/codehaus/jettison/json/JSONArray.put:(ILjava/lang/Object;)Lorg/codehaus/jettison/json/JSONArray;
      28: pop
      29: goto          44
      32: astore        4
      34: new           #55                 // class java/lang/IllegalArgumentException
      37: dup
      38: aload         4
      40: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
          16    29    32   Class org/codehaus/jettison/json/JSONException

  public java.lang.Object getMapValue(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: checkcast     #31                 // class org/codehaus/jettison/json/JSONObject
       4: aload_2
       5: invokevirtual #57                 // Method org/codehaus/jettison/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnonnull     17
      13: getstatic     #58                 // Field com/jayway/jsonpath/spi/json/JsonProvider.UNDEFINED:Ljava/lang/Object;
      16: areturn
      17: aload_3
      18: invokestatic  #1                  // Method jettisonUnwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn

  public void setProperty(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/codehaus/jettison/json/JSONArray
       4: ifeq          47
       7: aload_2
       8: instanceof    #59                 // class java/lang/Integer
      11: ifeq          24
      14: aload_2
      15: checkcast     #59                 // class java/lang/Integer
      18: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      21: goto          31
      24: aload_2
      25: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      31: istore        4
      33: aload_1
      34: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
      37: iload         4
      39: aload_3
      40: invokestatic  #53                 // Method jettisonWrap:(Ljava/lang/Object;)Ljava/lang/Object;
      43: invokevirtual #54                 // Method org/codehaus/jettison/json/JSONArray.put:(ILjava/lang/Object;)Lorg/codehaus/jettison/json/JSONArray;
      46: pop
      47: aload_1
      48: instanceof    #31                 // class org/codehaus/jettison/json/JSONObject
      51: ifeq          70
      54: aload_1
      55: checkcast     #31                 // class org/codehaus/jettison/json/JSONObject
      58: aload_2
      59: invokestatic  #33                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      62: aload_3
      63: invokestatic  #53                 // Method jettisonWrap:(Ljava/lang/Object;)Ljava/lang/Object;
      66: invokevirtual #63                 // Method org/codehaus/jettison/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/codehaus/jettison/json/JSONObject;
      69: pop
      70: goto          85
      73: astore        4
      75: new           #14                 // class java/lang/IllegalStateException
      78: dup
      79: aload         4
      81: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      84: athrow
      85: return
    Exception table:
       from    to  target type
           0    70    73   Class org/codehaus/jettison/json/JSONException

  public void removeProperty(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/codehaus/jettison/json/JSONArray
       4: ifeq          71
       7: aload_2
       8: instanceof    #59                 // class java/lang/Integer
      11: ifeq          24
      14: aload_2
      15: checkcast     #59                 // class java/lang/Integer
      18: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      21: goto          31
      24: aload_2
      25: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      31: istore_3
      32: iload_3
      33: aload_0
      34: aload_1
      35: invokevirtual #42                 // Method length:(Ljava/lang/Object;)I
      38: if_icmpge     71
      41: new           #64                 // class java/lang/Object
      44: dup
      45: invokespecial #65                 // Method java/lang/Object."<init>":()V
      48: astore        4
      50: aload_1
      51: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
      54: iload_3
      55: aload         4
      57: invokevirtual #54                 // Method org/codehaus/jettison/json/JSONArray.put:(ILjava/lang/Object;)Lorg/codehaus/jettison/json/JSONArray;
      60: pop
      61: aload_1
      62: checkcast     #29                 // class org/codehaus/jettison/json/JSONArray
      65: aload         4
      67: invokevirtual #66                 // Method org/codehaus/jettison/json/JSONArray.remove:(Ljava/lang/Object;)Lorg/codehaus/jettison/json/JSONArray;
      70: pop
      71: aload_1
      72: instanceof    #31                 // class org/codehaus/jettison/json/JSONObject
      75: ifeq          90
      78: aload_1
      79: checkcast     #31                 // class org/codehaus/jettison/json/JSONObject
      82: aload_2
      83: invokestatic  #33                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      86: invokevirtual #67                 // Method org/codehaus/jettison/json/JSONObject.remove:(Ljava/lang/String;)Ljava/lang/Object;
      89: pop
      90: goto          103
      93: astore_3
      94: new           #14                 // class java/lang/IllegalStateException
      97: dup
      98: aload_3
      99: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     102: athrow
     103: return
    Exception table:
       from    to  target type
           0    90    93   Class org/codehaus/jettison/json/JSONException

  public java.lang.Object createArray();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method createArray:()Ljava/lang/Iterable;
       4: areturn

  static java.lang.Object access$400(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method jettisonUnwrap:(Ljava/lang/Object;)Ljava/lang/Object;
       4: areturn
}
