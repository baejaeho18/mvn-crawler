Compiled from "JsonSmartMappingProvider.java"
public class com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider implements com.jayway.jsonpath.spi.mapper.MappingProvider {
  private static net.minidev.json.writer.JsonReader DEFAULT;

  private final java.util.concurrent.Callable<net.minidev.json.writer.JsonReader> factory;

  public com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider(net.minidev.json.writer.JsonReader);
    Code:
       0: aload_0
       1: new           #1                  // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$1
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$1."<init>":(Lnet/minidev/json/writer/JsonReader;)V
       9: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Callable;)V
      12: return

  public com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider(java.util.concurrent.Callable<net.minidev.json.writer.JsonReader>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field factory:Ljava/util/concurrent/Callable;
       9: return

  public com.jayway.jsonpath.spi.mapper.JsonSmartMappingProvider();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
       4: invokespecial #7                  // Method "<init>":(Lnet/minidev/json/writer/JsonReader;)V
       7: return

  public <T> T map(java.lang.Object, java.lang.Class<T>, com.jayway.jsonpath.Configuration);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_2
       7: aload_1
       8: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      14: ifeq          19
      17: aload_1
      18: areturn
      19: aload_3
      20: invokevirtual #10                 // Method com/jayway/jsonpath/Configuration.jsonProvider:()Lcom/jayway/jsonpath/spi/json/JsonProvider;
      23: aload_1
      24: invokeinterface #11,  2           // InterfaceMethod com/jayway/jsonpath/spi/json/JsonProvider.isMap:(Ljava/lang/Object;)Z
      29: ifne          66
      32: aload_3
      33: invokevirtual #10                 // Method com/jayway/jsonpath/Configuration.jsonProvider:()Lcom/jayway/jsonpath/spi/json/JsonProvider;
      36: aload_1
      37: invokeinterface #12,  2           // InterfaceMethod com/jayway/jsonpath/spi/json/JsonProvider.isArray:(Ljava/lang/Object;)Z
      42: ifne          66
      45: aload_0
      46: getfield      #5                  // Field factory:Ljava/util/concurrent/Callable;
      49: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      54: checkcast     #14                 // class net/minidev/json/writer/JsonReader
      57: aload_2
      58: invokevirtual #15                 // Method net/minidev/json/writer/JsonReader.getMapper:(Ljava/lang/Class;)Lnet/minidev/json/writer/JsonReaderI;
      61: aload_1
      62: invokevirtual #16                 // Method net/minidev/json/writer/JsonReaderI.convert:(Ljava/lang/Object;)Ljava/lang/Object;
      65: areturn
      66: aload_3
      67: invokevirtual #10                 // Method com/jayway/jsonpath/Configuration.jsonProvider:()Lcom/jayway/jsonpath/spi/json/JsonProvider;
      70: aload_1
      71: invokeinterface #17,  2           // InterfaceMethod com/jayway/jsonpath/spi/json/JsonProvider.toJson:(Ljava/lang/Object;)Ljava/lang/String;
      76: astore        4
      78: aload         4
      80: aload_2
      81: invokestatic  #18                 // Method net/minidev/json/JSONValue.parse:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      84: areturn
      85: astore        4
      87: new           #20                 // class com/jayway/jsonpath/spi/mapper/MappingException
      90: dup
      91: aload         4
      93: invokespecial #21                 // Method com/jayway/jsonpath/spi/mapper/MappingException."<init>":(Ljava/lang/Throwable;)V
      96: athrow
    Exception table:
       from    to  target type
          19    65    85   Class java/lang/Exception
          66    84    85   Class java/lang/Exception

  public <T> T map(java.lang.Object, com.jayway.jsonpath.TypeRef<T>, com.jayway.jsonpath.Configuration);
    Code:
       0: new           #22                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #23                 // String Json-smart provider does not support TypeRef! Use a Jackson or Gson based provider
       6: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  static {};
    Code:
       0: new           #14                 // class net/minidev/json/writer/JsonReader
       3: dup
       4: invokespecial #25                 // Method net/minidev/json/writer/JsonReader."<init>":()V
       7: putstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      10: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      13: ldc           #26                 // class java/lang/Long
      15: new           #27                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$LongReader
      18: dup
      19: invokespecial #28                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$LongReader."<init>":()V
      22: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
      25: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      28: getstatic     #30                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      31: new           #27                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$LongReader
      34: dup
      35: invokespecial #28                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$LongReader."<init>":()V
      38: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
      41: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      44: ldc           #31                 // class java/lang/Integer
      46: new           #32                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$IntegerReader
      49: dup
      50: invokespecial #33                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$IntegerReader."<init>":()V
      53: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
      56: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      59: getstatic     #34                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      62: new           #32                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$IntegerReader
      65: dup
      66: invokespecial #33                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$IntegerReader."<init>":()V
      69: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
      72: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      75: ldc           #35                 // class java/lang/Double
      77: new           #36                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$DoubleReader
      80: dup
      81: invokespecial #37                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$DoubleReader."<init>":()V
      84: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
      87: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
      90: getstatic     #38                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      93: new           #36                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$DoubleReader
      96: dup
      97: invokespecial #37                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$DoubleReader."<init>":()V
     100: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     103: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     106: ldc           #39                 // class java/lang/Float
     108: new           #40                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$FloatReader
     111: dup
     112: invokespecial #41                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$FloatReader."<init>":()V
     115: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     118: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     121: getstatic     #42                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     124: new           #40                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$FloatReader
     127: dup
     128: invokespecial #41                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$FloatReader."<init>":()V
     131: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     134: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     137: ldc           #43                 // class java/math/BigDecimal
     139: new           #44                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$BigDecimalReader
     142: dup
     143: invokespecial #45                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$BigDecimalReader."<init>":()V
     146: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     149: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     152: ldc           #46                 // class java/lang/String
     154: new           #47                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$StringReader
     157: dup
     158: invokespecial #48                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$StringReader."<init>":()V
     161: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     164: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     167: ldc           #49                 // class java/util/Date
     169: new           #50                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$DateReader
     172: dup
     173: invokespecial #51                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$DateReader."<init>":()V
     176: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     179: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     182: ldc           #52                 // class java/math/BigInteger
     184: new           #53                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$BigIntegerReader
     187: dup
     188: invokespecial #54                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$BigIntegerReader."<init>":()V
     191: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     194: getstatic     #6                  // Field DEFAULT:Lnet/minidev/json/writer/JsonReader;
     197: getstatic     #55                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     200: new           #56                 // class com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$BooleanReader
     203: dup
     204: invokespecial #57                 // Method com/jayway/jsonpath/spi/mapper/JsonSmartMappingProvider$BooleanReader."<init>":()V
     207: invokevirtual #29                 // Method net/minidev/json/writer/JsonReader.registerReader:(Ljava/lang/Class;Lnet/minidev/json/writer/JsonReaderI;)V
     210: return
}
