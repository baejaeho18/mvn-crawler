Compiled from "CharacterIndex.java"
public class com.jayway.jsonpath.internal.CharacterIndex {
  private static final char OPEN_PARENTHESIS;

  private static final char CLOSE_PARENTHESIS;

  private static final char CLOSE_SQUARE_BRACKET;

  private static final char SPACE;

  private static final char ESCAPE;

  private static final char SINGLE_QUOTE;

  private static final char DOUBLE_QUOTE;

  private static final char MINUS;

  private static final char PERIOD;

  private static final char REGEX;

  private final java.lang.CharSequence charSequence;

  private int position;

  private int endPosition;

  public com.jayway.jsonpath.internal.CharacterIndex(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field position:I
      14: aload_0
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      21: iconst_1
      22: isub
      23: putfield      #5                  // Field endPosition:I
      26: return

  public int length();
    Code:
       0: aload_0
       1: getfield      #5                  // Field endPosition:I
       4: iconst_1
       5: iadd
       6: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: iload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      10: ireturn

  public char currentChar();
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: aload_0
       5: getfield      #3                  // Field position:I
       8: invokeinterface #6,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      13: ireturn

  public boolean currentCharIs(char);
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: aload_0
       5: getfield      #3                  // Field position:I
       8: invokeinterface #6,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      13: iload_1
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean lastCharIs(char);
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: aload_0
       5: getfield      #5                  // Field endPosition:I
       8: invokeinterface #6,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      13: iload_1
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean nextCharIs(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iconst_1
       6: iadd
       7: invokevirtual #7                  // Method inBounds:(I)Z
      10: ifeq          36
      13: aload_0
      14: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
      17: aload_0
      18: getfield      #3                  // Field position:I
      21: iconst_1
      22: iadd
      23: invokeinterface #6,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      28: iload_1
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public int incrementPosition(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iload_1
       6: iadd
       7: invokevirtual #8                  // Method setPosition:(I)I
      10: ireturn

  public int decrementEndPosition(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field endPosition:I
       5: iload_1
       6: isub
       7: invokespecial #9                  // Method setEndPosition:(I)I
      10: ireturn

  public int setPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field position:I
       5: aload_0
       6: getfield      #3                  // Field position:I
       9: ireturn

  private int setEndPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field endPosition:I
       5: aload_0
       6: getfield      #5                  // Field endPosition:I
       9: ireturn

  public int position();
    Code:
       0: aload_0
       1: getfield      #3                  // Field position:I
       4: ireturn

  public int indexOfClosingSquareBracket(int);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: iload_2
       4: invokevirtual #7                  // Method inBounds:(I)Z
       7: ifeq          28
      10: aload_0
      11: iload_2
      12: invokevirtual #10                 // Method charAt:(I)C
      15: bipush        93
      17: if_icmpne     22
      20: iload_2
      21: ireturn
      22: iinc          2, 1
      25: goto          2
      28: iconst_m1
      29: ireturn

  public int indexOfMatchingCloseChar(int, char, char, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #10                 // Method charAt:(I)C
       5: iload_2
       6: if_icmpeq     49
       9: new           #12                 // class com/jayway/jsonpath/InvalidPathException
      12: dup
      13: new           #13                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #15                 // String Expected
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_2
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: ldc           #18                 // String  but found
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: iload_1
      36: invokevirtual #10                 // Method charAt:(I)C
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      42: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #20                 // Method com/jayway/jsonpath/InvalidPathException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: iconst_1
      50: istore        6
      52: iload_1
      53: iconst_1
      54: iadd
      55: istore        7
      57: aload_0
      58: iload         7
      60: invokevirtual #7                  // Method inBounds:(I)Z
      63: ifeq          257
      66: iload         4
      68: ifeq          152
      71: aload_0
      72: iload         7
      74: invokevirtual #10                 // Method charAt:(I)C
      77: istore        8
      79: iload         8
      81: bipush        39
      83: if_icmpeq     93
      86: iload         8
      88: bipush        34
      90: if_icmpne     152
      93: aload_0
      94: iload         7
      96: iload         8
      98: invokevirtual #21                 // Method nextIndexOfUnescaped:(IC)I
     101: istore        7
     103: iload         7
     105: iconst_m1
     106: if_icmpne     149
     109: new           #12                 // class com/jayway/jsonpath/InvalidPathException
     112: dup
     113: new           #13                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #22                 // String Could not find matching close quote for
     122: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: iload         8
     127: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     130: ldc           #23                 // String  when parsing :
     132: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_0
     136: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
     139: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     142: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #20                 // Method com/jayway/jsonpath/InvalidPathException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: iinc          7, 1
     152: iload         5
     154: ifeq          217
     157: aload_0
     158: iload         7
     160: invokevirtual #10                 // Method charAt:(I)C
     163: bipush        47
     165: if_icmpne     217
     168: aload_0
     169: iload         7
     171: bipush        47
     173: invokevirtual #21                 // Method nextIndexOfUnescaped:(IC)I
     176: istore        7
     178: iload         7
     180: iconst_m1
     181: if_icmpne     214
     184: new           #12                 // class com/jayway/jsonpath/InvalidPathException
     187: dup
     188: new           #13                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     195: ldc           #25                 // String Could not find matching close for / when parsing regex in :
     197: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload_0
     201: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
     204: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #20                 // Method com/jayway/jsonpath/InvalidPathException."<init>":(Ljava/lang/String;)V
     213: athrow
     214: iinc          7, 1
     217: aload_0
     218: iload         7
     220: invokevirtual #10                 // Method charAt:(I)C
     223: iload_2
     224: if_icmpne     230
     227: iinc          6, 1
     230: aload_0
     231: iload         7
     233: invokevirtual #10                 // Method charAt:(I)C
     236: iload_3
     237: if_icmpne     251
     240: iinc          6, -1
     243: iload         6
     245: ifne          251
     248: iload         7
     250: ireturn
     251: iinc          7, 1
     254: goto          57
     257: iconst_m1
     258: ireturn

  public int indexOfClosingBracket(int, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        40
       4: bipush        41
       6: iload_2
       7: iload_3
       8: invokevirtual #26                 // Method indexOfMatchingCloseChar:(ICCZZ)I
      11: ireturn

  public int indexOfNextSignificantChar(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iload_1
       6: invokevirtual #27                 // Method indexOfNextSignificantChar:(IC)I
       9: ireturn

  public int indexOfNextSignificantChar(int, char);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore_3
       4: aload_0
       5: iload_3
       6: invokevirtual #28                 // Method isOutOfBounds:(I)Z
       9: ifne          28
      12: aload_0
      13: iload_3
      14: invokevirtual #10                 // Method charAt:(I)C
      17: bipush        32
      19: if_icmpne     28
      22: iinc          3, 1
      25: goto          4
      28: aload_0
      29: iload_3
      30: invokevirtual #10                 // Method charAt:(I)C
      33: iload_2
      34: if_icmpne     39
      37: iload_3
      38: ireturn
      39: iconst_m1
      40: ireturn

  public int nextIndexOf(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iconst_1
       6: iadd
       7: iload_1
       8: invokevirtual #29                 // Method nextIndexOf:(IC)I
      11: ireturn

  public int nextIndexOf(int, char);
    Code:
       0: iload_1
       1: istore_3
       2: aload_0
       3: iload_3
       4: invokevirtual #28                 // Method isOutOfBounds:(I)Z
       7: ifne          27
      10: aload_0
      11: iload_3
      12: invokevirtual #10                 // Method charAt:(I)C
      15: iload_2
      16: if_icmpne     21
      19: iload_3
      20: ireturn
      21: iinc          3, 1
      24: goto          2
      27: iconst_m1
      28: ireturn

  public int nextIndexOfUnescaped(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iload_1
       6: invokevirtual #21                 // Method nextIndexOfUnescaped:(IC)I
       9: ireturn

  public int nextIndexOfUnescaped(int, char);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_0
       8: iload_3
       9: invokevirtual #28                 // Method isOutOfBounds:(I)Z
      12: ifne          64
      15: iload         4
      17: ifeq          26
      20: iconst_0
      21: istore        4
      23: goto          58
      26: bipush        92
      28: aload_0
      29: iload_3
      30: invokevirtual #10                 // Method charAt:(I)C
      33: if_icmpne     42
      36: iconst_1
      37: istore        4
      39: goto          58
      42: iload_2
      43: aload_0
      44: iload_3
      45: invokevirtual #10                 // Method charAt:(I)C
      48: if_icmpne     58
      51: iload         4
      53: ifne          58
      56: iload_3
      57: ireturn
      58: iinc          3, 1
      61: goto          7
      64: iconst_m1
      65: ireturn

  public char charAtOr(int, char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #7                  // Method inBounds:(I)Z
       5: ifne          10
       8: iload_2
       9: ireturn
      10: aload_0
      11: iload_1
      12: invokevirtual #10                 // Method charAt:(I)C
      15: ireturn

  public boolean nextSignificantCharIs(int, char);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore_3
       4: aload_0
       5: iload_3
       6: invokevirtual #28                 // Method isOutOfBounds:(I)Z
       9: ifne          28
      12: aload_0
      13: iload_3
      14: invokevirtual #10                 // Method charAt:(I)C
      17: bipush        32
      19: if_icmpne     28
      22: iinc          3, 1
      25: goto          4
      28: aload_0
      29: iload_3
      30: invokevirtual #28                 // Method isOutOfBounds:(I)Z
      33: ifne          49
      36: aload_0
      37: iload_3
      38: invokevirtual #10                 // Method charAt:(I)C
      41: iload_2
      42: if_icmpne     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public boolean nextSignificantCharIs(char);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iload_1
       6: invokevirtual #30                 // Method nextSignificantCharIs:(IC)Z
       9: ireturn

  public char nextSignificantChar();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: invokevirtual #31                 // Method nextSignificantChar:(I)C
       8: ireturn

  public char nextSignificantChar(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: istore_2
       4: aload_0
       5: iload_2
       6: invokevirtual #28                 // Method isOutOfBounds:(I)Z
       9: ifne          28
      12: aload_0
      13: iload_2
      14: invokevirtual #10                 // Method charAt:(I)C
      17: bipush        32
      19: if_icmpne     28
      22: iinc          2, 1
      25: goto          4
      28: aload_0
      29: iload_2
      30: invokevirtual #28                 // Method isOutOfBounds:(I)Z
      33: ifne          42
      36: aload_0
      37: iload_2
      38: invokevirtual #10                 // Method charAt:(I)C
      41: ireturn
      42: bipush        32
      44: ireturn

  public void readSignificantChar(char);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method skipBlanks:()Lcom/jayway/jsonpath/internal/CharacterIndex;
       4: invokevirtual #33                 // Method currentChar:()C
       7: iload_1
       8: if_icmpeq     35
      11: new           #12                 // class com/jayway/jsonpath/InvalidPathException
      14: dup
      15: ldc           #34                 // String Expected character: %c
      17: iconst_1
      18: anewarray     #35                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: iload_1
      24: invokestatic  #36                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      27: aastore
      28: invokestatic  #37                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #20                 // Method com/jayway/jsonpath/InvalidPathException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: iconst_1
      37: invokevirtual #38                 // Method incrementPosition:(I)I
      40: pop
      41: return

  public void readSignificantSubSequence(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method skipBlanks:()Lcom/jayway/jsonpath/internal/CharacterIndex;
       4: pop
       5: aload_0
       6: aload_0
       7: getfield      #3                  // Field position:I
      10: aload_1
      11: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      16: iadd
      17: iconst_1
      18: isub
      19: invokevirtual #7                  // Method inBounds:(I)Z
      22: ifne          46
      25: new           #12                 // class com/jayway/jsonpath/InvalidPathException
      28: dup
      29: ldc           #39                 // String End of string reached while expecting: %s
      31: iconst_1
      32: anewarray     #35                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_1
      38: aastore
      39: invokestatic  #37                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #20                 // Method com/jayway/jsonpath/InvalidPathException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_0
      48: getfield      #3                  // Field position:I
      51: aload_0
      52: getfield      #3                  // Field position:I
      55: aload_1
      56: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      61: iadd
      62: invokevirtual #40                 // Method subSequence:(II)Ljava/lang/CharSequence;
      65: aload_1
      66: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifne          93
      72: new           #12                 // class com/jayway/jsonpath/InvalidPathException
      75: dup
      76: ldc           #42                 // String Expected: %s
      78: iconst_1
      79: anewarray     #35                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload_1
      85: aastore
      86: invokestatic  #37                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      89: invokespecial #20                 // Method com/jayway/jsonpath/InvalidPathException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_0
      94: aload_1
      95: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I
     100: invokevirtual #38                 // Method incrementPosition:(I)I
     103: pop
     104: return

  public int indexOfPreviousSignificantChar(int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: istore_2
       4: aload_0
       5: iload_2
       6: invokevirtual #28                 // Method isOutOfBounds:(I)Z
       9: ifne          28
      12: aload_0
      13: iload_2
      14: invokevirtual #10                 // Method charAt:(I)C
      17: bipush        32
      19: if_icmpne     28
      22: iinc          2, -1
      25: goto          4
      28: aload_0
      29: iload_2
      30: invokevirtual #28                 // Method isOutOfBounds:(I)Z
      33: ifne          38
      36: iload_2
      37: ireturn
      38: iconst_m1
      39: ireturn

  public int indexOfPreviousSignificantChar();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: invokevirtual #43                 // Method indexOfPreviousSignificantChar:(I)I
       8: ireturn

  public char previousSignificantChar(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method indexOfPreviousSignificantChar:(I)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     14
      11: bipush        32
      13: ireturn
      14: aload_0
      15: iload_2
      16: invokevirtual #10                 // Method charAt:(I)C
      19: ireturn

  public char previousSignificantChar();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: invokevirtual #44                 // Method previousSignificantChar:(I)C
       8: ireturn

  public boolean currentIsTail();
    Code:
       0: aload_0
       1: getfield      #3                  // Field position:I
       4: aload_0
       5: getfield      #5                  // Field endPosition:I
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean hasMoreCharacters();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: iconst_1
       6: iadd
       7: invokevirtual #7                  // Method inBounds:(I)Z
      10: ireturn

  public boolean inBounds(int);
    Code:
       0: iload_1
       1: iflt          16
       4: iload_1
       5: aload_0
       6: getfield      #5                  // Field endPosition:I
       9: if_icmpgt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean inBounds();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field position:I
       5: invokevirtual #7                  // Method inBounds:(I)Z
       8: ireturn

  public boolean isOutOfBounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #7                  // Method inBounds:(I)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: iload_1
       5: iload_2
       6: invokeinterface #45,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      11: areturn

  public java.lang.CharSequence charSequence();
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field charSequence:Ljava/lang/CharSequence;
       4: invokeinterface #46,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
       9: areturn

  public boolean isNumberCharacter(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #10                 // Method charAt:(I)C
       5: istore_2
       6: iload_2
       7: invokestatic  #47                 // Method java/lang/Character.isDigit:(C)Z
      10: ifne          25
      13: iload_2
      14: bipush        45
      16: if_icmpeq     25
      19: iload_2
      20: bipush        46
      22: if_icmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public com.jayway.jsonpath.internal.CharacterIndex skipBlanks();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method inBounds:()Z
       4: ifeq          36
       7: aload_0
       8: getfield      #3                  // Field position:I
      11: aload_0
      12: getfield      #5                  // Field endPosition:I
      15: if_icmpge     36
      18: aload_0
      19: invokevirtual #33                 // Method currentChar:()C
      22: bipush        32
      24: if_icmpne     36
      27: aload_0
      28: iconst_1
      29: invokevirtual #38                 // Method incrementPosition:(I)I
      32: pop
      33: goto          0
      36: aload_0
      37: areturn

  private com.jayway.jsonpath.internal.CharacterIndex skipBlanksAtEnd();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method inBounds:()Z
       4: ifeq          36
       7: aload_0
       8: getfield      #3                  // Field position:I
      11: aload_0
      12: getfield      #5                  // Field endPosition:I
      15: if_icmpge     36
      18: aload_0
      19: bipush        32
      21: invokevirtual #49                 // Method lastCharIs:(C)Z
      24: ifeq          36
      27: aload_0
      28: iconst_1
      29: invokevirtual #50                 // Method decrementEndPosition:(I)I
      32: pop
      33: goto          0
      36: aload_0
      37: areturn

  public com.jayway.jsonpath.internal.CharacterIndex trim();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method skipBlanks:()Lcom/jayway/jsonpath/internal/CharacterIndex;
       4: pop
       5: aload_0
       6: invokespecial #51                 // Method skipBlanksAtEnd:()Lcom/jayway/jsonpath/internal/CharacterIndex;
       9: pop
      10: aload_0
      11: areturn
}
