Compiled from "Subquery.java"
public interface javax.persistence.criteria.Subquery<T> extends javax.persistence.criteria.AbstractQuery<T>, javax.persistence.criteria.Expression<T> {
  public abstract javax.persistence.criteria.Subquery<T> select(javax.persistence.criteria.Expression<T>);

  public abstract javax.persistence.criteria.Subquery<T> where(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.Subquery<T> where(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.Subquery<T> groupBy(javax.persistence.criteria.Expression<?>...);

  public abstract javax.persistence.criteria.Subquery<T> groupBy(java.util.List<javax.persistence.criteria.Expression<?>>);

  public abstract javax.persistence.criteria.Subquery<T> having(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.Subquery<T> having(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.Subquery<T> distinct(boolean);

  public abstract <Y> javax.persistence.criteria.Root<Y> correlate(javax.persistence.criteria.Root<Y>);

  public abstract <X, Y> javax.persistence.criteria.Join<X, Y> correlate(javax.persistence.criteria.Join<X, Y>);

  public abstract <X, Y> javax.persistence.criteria.CollectionJoin<X, Y> correlate(javax.persistence.criteria.CollectionJoin<X, Y>);

  public abstract <X, Y> javax.persistence.criteria.SetJoin<X, Y> correlate(javax.persistence.criteria.SetJoin<X, Y>);

  public abstract <X, Y> javax.persistence.criteria.ListJoin<X, Y> correlate(javax.persistence.criteria.ListJoin<X, Y>);

  public abstract <X, K, V> javax.persistence.criteria.MapJoin<X, K, V> correlate(javax.persistence.criteria.MapJoin<X, K, V>);

  public abstract javax.persistence.criteria.AbstractQuery<?> getParent();

  public abstract javax.persistence.criteria.CommonAbstractCriteria getContainingQuery();

  public abstract javax.persistence.criteria.Expression<T> getSelection();

  public abstract java.util.Set<javax.persistence.criteria.Join<?, ?>> getCorrelatedJoins();

  public default javax.persistence.criteria.Selection getSelection();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getSelection:()Ljavax/persistence/criteria/Expression;
       6: areturn

  public default javax.persistence.criteria.AbstractQuery distinct(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #2,  2            // InterfaceMethod distinct:(Z)Ljavax/persistence/criteria/Subquery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery having(javax.persistence.criteria.Predicate[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  2            // InterfaceMethod having:([Ljavax/persistence/criteria/Predicate;)Ljavax/persistence/criteria/Subquery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery having(javax.persistence.criteria.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod having:(Ljavax/persistence/criteria/Expression;)Ljavax/persistence/criteria/Subquery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery groupBy(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod groupBy:(Ljava/util/List;)Ljavax/persistence/criteria/Subquery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery groupBy(javax.persistence.criteria.Expression[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  2            // InterfaceMethod groupBy:([Ljavax/persistence/criteria/Expression;)Ljavax/persistence/criteria/Subquery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery where(javax.persistence.criteria.Predicate[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod where:([Ljavax/persistence/criteria/Predicate;)Ljavax/persistence/criteria/Subquery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery where(javax.persistence.criteria.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  2            // InterfaceMethod where:(Ljavax/persistence/criteria/Expression;)Ljavax/persistence/criteria/Subquery;
       7: areturn
}
