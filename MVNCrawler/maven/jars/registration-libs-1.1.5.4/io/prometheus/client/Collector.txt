Compiled from "Collector.java"
public abstract class io.prometheus.client.Collector {
  public static final double NANOSECONDS_PER_SECOND;

  public static final double MILLISECONDS_PER_SECOND;

  private static final java.util.regex.Pattern METRIC_NAME_RE;

  private static final java.util.regex.Pattern METRIC_LABEL_NAME_RE;

  private static final java.util.regex.Pattern RESERVED_METRIC_LABEL_NAME_RE;

  private static final java.util.regex.Pattern SANITIZE_PREFIX_PATTERN;

  private static final java.util.regex.Pattern SANITIZE_BODY_PATTERN;

  public io.prometheus.client.Collector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.util.List<io.prometheus.client.Collector$MetricFamilySamples> collect();

  public <T extends io.prometheus.client.Collector> T register();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field io/prometheus/client/CollectorRegistry.defaultRegistry:Lio/prometheus/client/CollectorRegistry;
       4: invokevirtual #3                  // Method register:(Lio/prometheus/client/CollectorRegistry;)Lio/prometheus/client/Collector;
       7: areturn

  public <T extends io.prometheus.client.Collector> T register(io.prometheus.client.CollectorRegistry);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #4                  // Method io/prometheus/client/CollectorRegistry.register:(Lio/prometheus/client/Collector;)V
       5: aload_0
       6: areturn

  protected static void checkMetricName(java.lang.String);
    Code:
       0: getstatic     #5                  // Field METRIC_NAME_RE:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #7                  // Method java/util/regex/Matcher.matches:()Z
      10: ifne          40
      13: new           #8                  // class java/lang/IllegalArgumentException
      16: dup
      17: new           #9                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #11                 // String Invalid metric name:
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return

  public static java.lang.String sanitizeMetricName(java.lang.String);
    Code:
       0: getstatic     #15                 // Field SANITIZE_BODY_PATTERN:Ljava/util/regex/Pattern;
       3: getstatic     #16                 // Field SANITIZE_PREFIX_PATTERN:Ljava/util/regex/Pattern;
       6: aload_0
       7: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      10: ldc           #17                 // String _
      12: invokevirtual #18                 // Method java/util/regex/Matcher.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;
      15: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      18: ldc           #17                 // String _
      20: invokevirtual #19                 // Method java/util/regex/Matcher.replaceAll:(Ljava/lang/String;)Ljava/lang/String;
      23: areturn

  protected static void checkMetricLabelName(java.lang.String);
    Code:
       0: getstatic     #20                 // Field METRIC_LABEL_NAME_RE:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #7                  // Method java/util/regex/Matcher.matches:()Z
      10: ifne          40
      13: new           #8                  // class java/lang/IllegalArgumentException
      16: dup
      17: new           #9                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #21                 // String Invalid metric label name:
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: getstatic     #22                 // Field RESERVED_METRIC_LABEL_NAME_RE:Ljava/util/regex/Pattern;
      43: aload_0
      44: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      47: invokevirtual #7                  // Method java/util/regex/Matcher.matches:()Z
      50: ifeq          80
      53: new           #8                  // class java/lang/IllegalArgumentException
      56: dup
      57: new           #9                  // class java/lang/StringBuilder
      60: dup
      61: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #23                 // String Invalid metric label name, reserved for internal use:
      66: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: return

  public static java.lang.String doubleToGoString(double);
    Code:
       0: dload_0
       1: ldc2_w        #25                 // double Infinityd
       4: dcmpl
       5: ifne          11
       8: ldc           #27                 // String +Inf
      10: areturn
      11: dload_0
      12: ldc2_w        #28                 // double -Infinityd
      15: dcmpl
      16: ifne          22
      19: ldc           #30                 // String -Inf
      21: areturn
      22: dload_0
      23: invokestatic  #31                 // Method java/lang/Double.isNaN:(D)Z
      26: ifeq          32
      29: ldc           #32                 // String NaN
      31: areturn
      32: dload_0
      33: invokestatic  #33                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      36: areturn

  static {};
    Code:
       0: ldc           #34                 // String [a-zA-Z_:][a-zA-Z0-9_:]*
       2: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #5                  // Field METRIC_NAME_RE:Ljava/util/regex/Pattern;
       8: ldc           #36                 // String [a-zA-Z_][a-zA-Z0-9_]*
      10: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #20                 // Field METRIC_LABEL_NAME_RE:Ljava/util/regex/Pattern;
      16: ldc           #37                 // String __.*
      18: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      21: putstatic     #22                 // Field RESERVED_METRIC_LABEL_NAME_RE:Ljava/util/regex/Pattern;
      24: ldc           #38                 // String ^[^a-zA-Z_:]
      26: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      29: putstatic     #16                 // Field SANITIZE_PREFIX_PATTERN:Ljava/util/regex/Pattern;
      32: ldc           #39                 // String [^a-zA-Z0-9_:]
      34: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      37: putstatic     #15                 // Field SANITIZE_BODY_PATTERN:Ljava/util/regex/Pattern;
      40: return
}
