Compiled from "Histogram.java"
public class io.prometheus.client.Histogram extends io.prometheus.client.SimpleCollector<io.prometheus.client.Histogram$Child> implements io.prometheus.client.Collector$Describable {
  private final double[] buckets;

  io.prometheus.client.Histogram(io.prometheus.client.Histogram$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/prometheus/client/SimpleCollector."<init>":(Lio/prometheus/client/SimpleCollector$Builder;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #2                  // Method io/prometheus/client/Histogram$Builder.access$000:(Lio/prometheus/client/Histogram$Builder;)[D
      10: putfield      #3                  // Field buckets:[D
      13: aload_0
      14: invokevirtual #4                  // Method initializeNoLabelsChild:()V
      17: return

  public static io.prometheus.client.Histogram$Builder build(java.lang.String, java.lang.String);
    Code:
       0: new           #5                  // class io/prometheus/client/Histogram$Builder
       3: dup
       4: invokespecial #6                  // Method io/prometheus/client/Histogram$Builder."<init>":()V
       7: aload_0
       8: invokevirtual #7                  // Method io/prometheus/client/Histogram$Builder.name:(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
      11: checkcast     #5                  // class io/prometheus/client/Histogram$Builder
      14: aload_1
      15: invokevirtual #8                  // Method io/prometheus/client/Histogram$Builder.help:(Ljava/lang/String;)Lio/prometheus/client/SimpleCollector$Builder;
      18: checkcast     #5                  // class io/prometheus/client/Histogram$Builder
      21: areturn

  public static io.prometheus.client.Histogram$Builder build();
    Code:
       0: new           #5                  // class io/prometheus/client/Histogram$Builder
       3: dup
       4: invokespecial #6                  // Method io/prometheus/client/Histogram$Builder."<init>":()V
       7: areturn

  protected io.prometheus.client.Histogram$Child newChild();
    Code:
       0: new           #9                  // class io/prometheus/client/Histogram$Child
       3: dup
       4: aload_0
       5: getfield      #3                  // Field buckets:[D
       8: aconst_null
       9: invokespecial #10                 // Method io/prometheus/client/Histogram$Child."<init>":([DLio/prometheus/client/Histogram$1;)V
      12: areturn

  public void observe(double);
    Code:
       0: aload_0
       1: getfield      #11                 // Field noLabelsChild:Ljava/lang/Object;
       4: checkcast     #9                  // class io/prometheus/client/Histogram$Child
       7: dload_1
       8: invokevirtual #12                 // Method io/prometheus/client/Histogram$Child.observe:(D)V
      11: return

  public io.prometheus.client.Histogram$Timer startTimer();
    Code:
       0: aload_0
       1: getfield      #11                 // Field noLabelsChild:Ljava/lang/Object;
       4: checkcast     #9                  // class io/prometheus/client/Histogram$Child
       7: invokevirtual #13                 // Method io/prometheus/client/Histogram$Child.startTimer:()Lio/prometheus/client/Histogram$Timer;
      10: areturn

  public double time(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field noLabelsChild:Ljava/lang/Object;
       4: checkcast     #9                  // class io/prometheus/client/Histogram$Child
       7: aload_1
       8: invokevirtual #14                 // Method io/prometheus/client/Histogram$Child.time:(Ljava/lang/Runnable;)D
      11: dreturn

  public <E> E time(java.util.concurrent.Callable<E>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field noLabelsChild:Ljava/lang/Object;
       4: checkcast     #9                  // class io/prometheus/client/Histogram$Child
       7: aload_1
       8: invokevirtual #15                 // Method io/prometheus/client/Histogram$Child.time:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      11: areturn

  public java.util.List<io.prometheus.client.Collector$MetricFamilySamples> collect();
    Code:
       0: new           #16                 // class java/util/ArrayList
       3: dup
       4: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #18                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          302
      32: aload_2
      33: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #23                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #9                  // class io/prometheus/client/Histogram$Child
      51: invokevirtual #25                 // Method io/prometheus/client/Histogram$Child.get:()Lio/prometheus/client/Histogram$Child$Value;
      54: astore        4
      56: new           #16                 // class java/util/ArrayList
      59: dup
      60: aload_0
      61: getfield      #26                 // Field labelNames:Ljava/util/List;
      64: invokespecial #27                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      67: astore        5
      69: aload         5
      71: ldc           #28                 // String le
      73: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iconst_0
      80: istore        6
      82: iload         6
      84: aload         4
      86: getfield      #30                 // Field io/prometheus/client/Histogram$Child$Value.buckets:[D
      89: arraylength
      90: if_icmpge     183
      93: new           #16                 // class java/util/ArrayList
      96: dup
      97: aload_3
      98: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     103: checkcast     #32                 // class java/util/Collection
     106: invokespecial #27                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     109: astore        7
     111: aload         7
     113: aload_0
     114: getfield      #3                  // Field buckets:[D
     117: iload         6
     119: daload
     120: invokestatic  #33                 // Method doubleToGoString:(D)Ljava/lang/String;
     123: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     128: pop
     129: aload_1
     130: new           #34                 // class io/prometheus/client/Collector$MetricFamilySamples$Sample
     133: dup
     134: new           #35                 // class java/lang/StringBuilder
     137: dup
     138: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     141: aload_0
     142: getfield      #37                 // Field fullname:Ljava/lang/String;
     145: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #39                 // String _bucket
     150: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: aload         5
     158: aload         7
     160: aload         4
     162: getfield      #30                 // Field io/prometheus/client/Histogram$Child$Value.buckets:[D
     165: iload         6
     167: daload
     168: invokespecial #41                 // Method io/prometheus/client/Collector$MetricFamilySamples$Sample."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/List;D)V
     171: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     176: pop
     177: iinc          6, 1
     180: goto          82
     183: aload_1
     184: new           #34                 // class io/prometheus/client/Collector$MetricFamilySamples$Sample
     187: dup
     188: new           #35                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     195: aload_0
     196: getfield      #37                 // Field fullname:Ljava/lang/String;
     199: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: ldc           #42                 // String _count
     204: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: aload_0
     211: getfield      #26                 // Field labelNames:Ljava/util/List;
     214: aload_3
     215: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     220: checkcast     #43                 // class java/util/List
     223: aload         4
     225: getfield      #30                 // Field io/prometheus/client/Histogram$Child$Value.buckets:[D
     228: aload_0
     229: getfield      #3                  // Field buckets:[D
     232: arraylength
     233: iconst_1
     234: isub
     235: daload
     236: invokespecial #41                 // Method io/prometheus/client/Collector$MetricFamilySamples$Sample."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/List;D)V
     239: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     244: pop
     245: aload_1
     246: new           #34                 // class io/prometheus/client/Collector$MetricFamilySamples$Sample
     249: dup
     250: new           #35                 // class java/lang/StringBuilder
     253: dup
     254: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     257: aload_0
     258: getfield      #37                 // Field fullname:Ljava/lang/String;
     261: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: ldc           #44                 // String _sum
     266: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     272: aload_0
     273: getfield      #26                 // Field labelNames:Ljava/util/List;
     276: aload_3
     277: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     282: checkcast     #43                 // class java/util/List
     285: aload         4
     287: getfield      #45                 // Field io/prometheus/client/Histogram$Child$Value.sum:D
     290: invokespecial #41                 // Method io/prometheus/client/Collector$MetricFamilySamples$Sample."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/List;D)V
     293: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     298: pop
     299: goto          23
     302: aload_0
     303: getstatic     #46                 // Field io/prometheus/client/Collector$Type.HISTOGRAM:Lio/prometheus/client/Collector$Type;
     306: aload_1
     307: invokevirtual #47                 // Method familySamplesList:(Lio/prometheus/client/Collector$Type;Ljava/util/List;)Ljava/util/List;
     310: areturn

  public java.util.List<io.prometheus.client.Collector$MetricFamilySamples> describe();
    Code:
       0: new           #48                 // class io/prometheus/client/Collector$MetricFamilySamples
       3: dup
       4: aload_0
       5: getfield      #37                 // Field fullname:Ljava/lang/String;
       8: getstatic     #46                 // Field io/prometheus/client/Collector$Type.HISTOGRAM:Lio/prometheus/client/Collector$Type;
      11: aload_0
      12: getfield      #49                 // Field help:Ljava/lang/String;
      15: invokestatic  #50                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: invokespecial #51                 // Method io/prometheus/client/Collector$MetricFamilySamples."<init>":(Ljava/lang/String;Lio/prometheus/client/Collector$Type;Ljava/lang/String;Ljava/util/List;)V
      21: invokestatic  #52                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      24: areturn

  double[] getBuckets();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buckets:[D
       4: areturn

  protected java.lang.Object newChild();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method newChild:()Lio/prometheus/client/Histogram$Child;
       4: areturn
}
