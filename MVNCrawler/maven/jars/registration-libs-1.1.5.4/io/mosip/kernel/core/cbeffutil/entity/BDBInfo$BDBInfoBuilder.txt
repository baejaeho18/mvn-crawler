Compiled from "BDBInfo.java"
public class io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder {
  private byte[] challengeResponse;

  private java.lang.String index;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType format;

  private java.lang.Boolean encryption;

  private java.time.LocalDateTime creationDate;

  private java.time.LocalDateTime notValidBefore;

  private java.time.LocalDateTime notValidAfter;

  private java.util.List<io.mosip.kernel.core.cbeffutil.jaxbclasses.SingleType> type;

  private java.util.List<java.lang.String> subtype;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.ProcessedLevelType level;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType product;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.PurposeType purpose;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.QualityType quality;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType captureDevice;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType featureExtractionAlgorithm;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType comparisonAlgorithm;

  private io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType compressionAlgorithm;

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withChallengeResponse(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field challengeResponse:[B
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withIndex(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field index:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withFormat(io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field format:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/RegistryIDType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withEncryption(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field encryption:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withCreationDate(java.time.LocalDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field creationDate:Ljava/time/LocalDateTime;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withNotValidBefore(java.time.LocalDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field notValidBefore:Ljava/time/LocalDateTime;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withNotValidAfter(java.time.LocalDateTime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field notValidAfter:Ljava/time/LocalDateTime;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withType(java.util.List<io.mosip.kernel.core.cbeffutil.jaxbclasses.SingleType>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field type:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withSubtype(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field subtype:Ljava/util/List;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withLevel(io.mosip.kernel.core.cbeffutil.jaxbclasses.ProcessedLevelType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field level:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/ProcessedLevelType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withProduct(io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field product:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/RegistryIDType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withPurpose(io.mosip.kernel.core.cbeffutil.jaxbclasses.PurposeType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field purpose:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/PurposeType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withQuality(io.mosip.kernel.core.cbeffutil.jaxbclasses.QualityType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field quality:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/QualityType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo build();
    Code:
       0: new           #15                 // class io/mosip/kernel/core/cbeffutil/entity/BDBInfo
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method io/mosip/kernel/core/cbeffutil/entity/BDBInfo."<init>":(Lio/mosip/kernel/core/cbeffutil/entity/BDBInfo$BDBInfoBuilder;)V
       8: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withCaptureDevice(io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field captureDevice:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/RegistryIDType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withFeatureExtractionAlgorithm(io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field featureExtractionAlgorithm:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/RegistryIDType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withComparisonAlgorithm(io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field comparisonAlgorithm:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/RegistryIDType;
       5: aload_0
       6: areturn

  public io.mosip.kernel.core.cbeffutil.entity.BDBInfo$BDBInfoBuilder withCompressionAlgorithm(io.mosip.kernel.core.cbeffutil.jaxbclasses.RegistryIDType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field compressionAlgorithm:Lio/mosip/kernel/core/cbeffutil/jaxbclasses/RegistryIDType;
       5: aload_0
       6: areturn
}
