Compiled from "LoggerImpl.java"
public class io.mosip.kernel.logger.logback.impl.LoggerImpl implements io.mosip.kernel.core.logger.spi.Logger {
  private static java.util.Map<java.lang.String, ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>> rollingFileAppenders;

  private static java.util.Map<java.lang.String, ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>> fileAppenders;

  private ch.qos.logback.classic.Logger logger;

  private static final java.lang.String LOGDISPLAY;

  private io.mosip.kernel.logger.logback.impl.LoggerImpl(io.mosip.kernel.logger.logback.appender.ConsoleAppender, java.lang.String, io.mosip.kernel.logger.logback.constant.LogLevel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method org/slf4j/LoggerFactory.getILoggerFactory:()Lorg/slf4j/ILoggerFactory;
       7: checkcast     #3                  // class ch/qos/logback/classic/LoggerContext
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_2
      16: invokevirtual #4                  // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      19: putfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
      22: aload_0
      23: aload         4
      25: invokevirtual #6                  // Method getdefaultPattern:(Lch/qos/logback/classic/LoggerContext;)Lch/qos/logback/classic/encoder/PatternLayoutEncoder;
      28: astore        5
      30: new           #7                  // class ch/qos/logback/core/ConsoleAppender
      33: dup
      34: invokespecial #8                  // Method ch/qos/logback/core/ConsoleAppender."<init>":()V
      37: astore        6
      39: aload         6
      41: aload         4
      43: invokevirtual #9                  // Method ch/qos/logback/core/ConsoleAppender.setContext:(Lch/qos/logback/core/Context;)V
      46: aload         6
      48: aload         5
      50: invokevirtual #10                 // Method ch/qos/logback/core/ConsoleAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      53: aload         6
      55: aload_1
      56: invokevirtual #11                 // Method io/mosip/kernel/logger/logback/appender/ConsoleAppender.getAppenderName:()Ljava/lang/String;
      59: invokevirtual #12                 // Method ch/qos/logback/core/ConsoleAppender.setName:(Ljava/lang/String;)V
      62: aload         6
      64: aload_1
      65: invokevirtual #13                 // Method io/mosip/kernel/logger/logback/appender/ConsoleAppender.isImmediateFlush:()Z
      68: invokevirtual #14                 // Method ch/qos/logback/core/ConsoleAppender.setImmediateFlush:(Z)V
      71: aload         6
      73: aload_1
      74: invokevirtual #15                 // Method io/mosip/kernel/logger/logback/appender/ConsoleAppender.getTarget:()Ljava/lang/String;
      77: invokevirtual #16                 // Method ch/qos/logback/core/ConsoleAppender.setTarget:(Ljava/lang/String;)V
      80: aload         6
      82: invokevirtual #17                 // Method ch/qos/logback/core/ConsoleAppender.start:()V
      85: aload_3
      86: ifnull        106
      89: aload_0
      90: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
      93: aload_3
      94: invokevirtual #18                 // Method io/mosip/kernel/logger/logback/constant/LogLevel.getLevel:()Ljava/lang/String;
      97: invokestatic  #19                 // Method ch/qos/logback/classic/Level.valueOf:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
     100: invokevirtual #20                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
     103: goto          122
     106: aload_0
     107: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     110: getstatic     #21                 // Field io/mosip/kernel/logger/logback/constant/LogLevel.DEBUG:Lio/mosip/kernel/logger/logback/constant/LogLevel;
     113: invokevirtual #18                 // Method io/mosip/kernel/logger/logback/constant/LogLevel.getLevel:()Ljava/lang/String;
     116: invokestatic  #19                 // Method ch/qos/logback/classic/Level.valueOf:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
     119: invokevirtual #20                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
     122: aload_0
     123: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     126: iconst_0
     127: invokevirtual #22                 // Method ch/qos/logback/classic/Logger.setAdditive:(Z)V
     130: aload_0
     131: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     134: aload         6
     136: invokevirtual #23                 // Method ch/qos/logback/classic/Logger.addAppender:(Lch/qos/logback/core/Appender;)V
     139: return

  private io.mosip.kernel.logger.logback.impl.LoggerImpl(io.mosip.kernel.logger.logback.appender.FileAppender, java.lang.String, io.mosip.kernel.logger.logback.constant.LogLevel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method org/slf4j/LoggerFactory.getILoggerFactory:()Lorg/slf4j/ILoggerFactory;
       7: checkcast     #3                  // class ch/qos/logback/classic/LoggerContext
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_2
      16: invokevirtual #4                  // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      19: putfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
      22: aload_0
      23: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
      26: iconst_0
      27: invokevirtual #22                 // Method ch/qos/logback/classic/Logger.setAdditive:(Z)V
      30: aload_0
      31: aload         4
      33: invokevirtual #6                  // Method getdefaultPattern:(Lch/qos/logback/classic/LoggerContext;)Lch/qos/logback/classic/encoder/PatternLayoutEncoder;
      36: astore        5
      38: aconst_null
      39: astore        6
      41: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
      44: aload_1
      45: invokevirtual #25                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.getAppenderName:()Ljava/lang/String;
      48: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      53: ifne          148
      56: new           #27                 // class ch/qos/logback/core/FileAppender
      59: dup
      60: invokespecial #28                 // Method ch/qos/logback/core/FileAppender."<init>":()V
      63: astore        6
      65: aload         6
      67: aload         4
      69: invokevirtual #29                 // Method ch/qos/logback/core/FileAppender.setContext:(Lch/qos/logback/core/Context;)V
      72: aload         6
      74: aload         5
      76: invokevirtual #30                 // Method ch/qos/logback/core/FileAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      79: aload         6
      81: aload_1
      82: invokevirtual #25                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.getAppenderName:()Ljava/lang/String;
      85: invokevirtual #31                 // Method ch/qos/logback/core/FileAppender.setName:(Ljava/lang/String;)V
      88: aload         6
      90: aload_1
      91: invokevirtual #32                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.isImmediateFlush:()Z
      94: invokevirtual #33                 // Method ch/qos/logback/core/FileAppender.setImmediateFlush:(Z)V
      97: aload         6
      99: aload_1
     100: invokevirtual #34                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.isAppend:()Z
     103: invokevirtual #35                 // Method ch/qos/logback/core/FileAppender.setAppend:(Z)V
     106: aload         6
     108: aload_1
     109: invokevirtual #36                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.getFileName:()Ljava/lang/String;
     112: invokevirtual #37                 // Method ch/qos/logback/core/FileAppender.setFile:(Ljava/lang/String;)V
     115: aload         6
     117: aload_1
     118: invokevirtual #38                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.isPrudent:()Z
     121: invokevirtual #39                 // Method ch/qos/logback/core/FileAppender.setPrudent:(Z)V
     124: aload         6
     126: invokevirtual #40                 // Method ch/qos/logback/core/FileAppender.start:()V
     129: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
     132: aload         6
     134: invokevirtual #41                 // Method ch/qos/logback/core/FileAppender.getName:()Ljava/lang/String;
     137: aload         6
     139: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: goto          165
     148: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
     151: aload_1
     152: invokevirtual #25                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.getAppenderName:()Ljava/lang/String;
     155: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     160: checkcast     #27                 // class ch/qos/logback/core/FileAppender
     163: astore        6
     165: aload_3
     166: ifnull        186
     169: aload_0
     170: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     173: aload_3
     174: invokevirtual #18                 // Method io/mosip/kernel/logger/logback/constant/LogLevel.getLevel:()Ljava/lang/String;
     177: invokestatic  #19                 // Method ch/qos/logback/classic/Level.valueOf:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
     180: invokevirtual #20                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
     183: goto          202
     186: aload_0
     187: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     190: getstatic     #21                 // Field io/mosip/kernel/logger/logback/constant/LogLevel.DEBUG:Lio/mosip/kernel/logger/logback/constant/LogLevel;
     193: invokevirtual #18                 // Method io/mosip/kernel/logger/logback/constant/LogLevel.getLevel:()Ljava/lang/String;
     196: invokestatic  #19                 // Method ch/qos/logback/classic/Level.valueOf:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
     199: invokevirtual #20                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
     202: aload_0
     203: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     206: aload         6
     208: invokevirtual #23                 // Method ch/qos/logback/classic/Logger.addAppender:(Lch/qos/logback/core/Appender;)V
     211: return

  private io.mosip.kernel.logger.logback.impl.LoggerImpl(io.mosip.kernel.logger.logback.appender.RollingFileAppender, java.lang.String, io.mosip.kernel.logger.logback.constant.LogLevel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method org/slf4j/LoggerFactory.getILoggerFactory:()Lorg/slf4j/ILoggerFactory;
       7: checkcast     #3                  // class ch/qos/logback/classic/LoggerContext
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_2
      16: invokevirtual #4                  // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      19: putfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
      22: aload_0
      23: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
      26: iconst_0
      27: invokevirtual #22                 // Method ch/qos/logback/classic/Logger.setAdditive:(Z)V
      30: aload_0
      31: aload         4
      33: invokevirtual #6                  // Method getdefaultPattern:(Lch/qos/logback/classic/LoggerContext;)Lch/qos/logback/classic/encoder/PatternLayoutEncoder;
      36: astore        5
      38: aconst_null
      39: astore        6
      41: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
      44: aload_1
      45: invokevirtual #45                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getAppenderName:()Ljava/lang/String;
      48: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      53: ifne          182
      56: new           #46                 // class ch/qos/logback/core/rolling/RollingFileAppender
      59: dup
      60: invokespecial #47                 // Method ch/qos/logback/core/rolling/RollingFileAppender."<init>":()V
      63: astore        6
      65: aload         6
      67: aload         4
      69: invokevirtual #48                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setContext:(Lch/qos/logback/core/Context;)V
      72: aload         6
      74: aload         5
      76: invokevirtual #49                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      79: aload         6
      81: aload_1
      82: invokevirtual #45                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getAppenderName:()Ljava/lang/String;
      85: invokevirtual #50                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setName:(Ljava/lang/String;)V
      88: aload         6
      90: aload_1
      91: invokevirtual #51                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.isImmediateFlush:()Z
      94: invokevirtual #52                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setImmediateFlush:(Z)V
      97: aload         6
      99: aload_1
     100: invokevirtual #53                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileName:()Ljava/lang/String;
     103: invokevirtual #54                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setFile:(Ljava/lang/String;)V
     106: aload         6
     108: aload_1
     109: invokevirtual #55                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.isAppend:()Z
     112: invokevirtual #56                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setAppend:(Z)V
     115: aload         6
     117: aload_1
     118: invokevirtual #57                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.isPrudent:()Z
     121: invokevirtual #58                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setPrudent:(Z)V
     124: aload_1
     125: invokevirtual #59                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxFileSize:()Ljava/lang/String;
     128: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
     131: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
     134: ifeq          149
     137: aload_0
     138: aload_1
     139: aload         4
     141: aload         6
     143: invokevirtual #62                 // Method configureTimeBasedRollingPolicy:(Lio/mosip/kernel/logger/logback/appender/RollingFileAppender;Lch/qos/logback/classic/LoggerContext;Lch/qos/logback/core/rolling/RollingFileAppender;)V
     146: goto          158
     149: aload_0
     150: aload_1
     151: aload         4
     153: aload         6
     155: invokevirtual #63                 // Method configureSizeAndTimeBasedPolicy:(Lio/mosip/kernel/logger/logback/appender/RollingFileAppender;Lch/qos/logback/classic/LoggerContext;Lch/qos/logback/core/rolling/RollingFileAppender;)V
     158: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
     161: aload         6
     163: invokevirtual #64                 // Method ch/qos/logback/core/rolling/RollingFileAppender.getName:()Ljava/lang/String;
     166: aload         6
     168: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     173: pop
     174: aload         6
     176: invokevirtual #65                 // Method ch/qos/logback/core/rolling/RollingFileAppender.start:()V
     179: goto          199
     182: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
     185: aload_1
     186: invokevirtual #45                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getAppenderName:()Ljava/lang/String;
     189: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     194: checkcast     #46                 // class ch/qos/logback/core/rolling/RollingFileAppender
     197: astore        6
     199: aload_3
     200: ifnull        220
     203: aload_0
     204: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     207: aload_3
     208: invokevirtual #18                 // Method io/mosip/kernel/logger/logback/constant/LogLevel.getLevel:()Ljava/lang/String;
     211: invokestatic  #19                 // Method ch/qos/logback/classic/Level.valueOf:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
     214: invokevirtual #20                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
     217: goto          236
     220: aload_0
     221: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     224: getstatic     #21                 // Field io/mosip/kernel/logger/logback/constant/LogLevel.DEBUG:Lio/mosip/kernel/logger/logback/constant/LogLevel;
     227: invokevirtual #18                 // Method io/mosip/kernel/logger/logback/constant/LogLevel.getLevel:()Ljava/lang/String;
     230: invokestatic  #19                 // Method ch/qos/logback/classic/Level.valueOf:(Ljava/lang/String;)Lch/qos/logback/classic/Level;
     233: invokevirtual #20                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
     236: aload_0
     237: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
     240: aload         6
     242: invokevirtual #23                 // Method ch/qos/logback/classic/Logger.addAppender:(Lch/qos/logback/core/Appender;)V
     245: return

  private void configureSizeAndTimeBasedPolicy(io.mosip.kernel.logger.logback.appender.RollingFileAppender, ch.qos.logback.classic.LoggerContext, ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>);
    Code:
       0: new           #66                 // class ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy
       3: dup
       4: invokespecial #67                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #68                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setContext:(Lch/qos/logback/core/Context;)V
      15: aload         4
      17: aload_1
      18: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
      21: invokevirtual #70                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setFileNamePattern:(Ljava/lang/String;)V
      24: aload         4
      26: aload_1
      27: invokevirtual #71                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxHistory:()I
      30: invokevirtual #72                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxHistory:(I)V
      33: aload_1
      34: invokevirtual #73                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getTotalCap:()Ljava/lang/String;
      37: ifnull        65
      40: aload_1
      41: invokevirtual #73                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getTotalCap:()Ljava/lang/String;
      44: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      47: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
      50: ifne          65
      53: aload         4
      55: aload_1
      56: invokevirtual #73                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getTotalCap:()Ljava/lang/String;
      59: invokestatic  #74                 // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      62: invokevirtual #75                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setTotalSizeCap:(Lch/qos/logback/core/util/FileSize;)V
      65: aload_1
      66: invokevirtual #59                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxFileSize:()Ljava/lang/String;
      69: ifnull        84
      72: aload         4
      74: aload_1
      75: invokevirtual #59                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxFileSize:()Ljava/lang/String;
      78: invokestatic  #74                 // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      81: invokevirtual #76                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxFileSize:(Lch/qos/logback/core/util/FileSize;)V
      84: aload         4
      86: aload_3
      87: invokevirtual #77                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setParent:(Lch/qos/logback/core/FileAppender;)V
      90: aload_3
      91: aload         4
      93: invokevirtual #78                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setRollingPolicy:(Lch/qos/logback/core/rolling/RollingPolicy;)V
      96: aload         4
      98: invokevirtual #79                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.start:()V
     101: return

  private void configureTimeBasedRollingPolicy(io.mosip.kernel.logger.logback.appender.RollingFileAppender, ch.qos.logback.classic.LoggerContext, ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>);
    Code:
       0: new           #80                 // class ch/qos/logback/core/rolling/TimeBasedRollingPolicy
       3: dup
       4: invokespecial #81                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #82                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.setContext:(Lch/qos/logback/core/Context;)V
      15: aload         4
      17: aload_1
      18: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
      21: invokevirtual #83                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.setFileNamePattern:(Ljava/lang/String;)V
      24: aload         4
      26: aload_1
      27: invokevirtual #71                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxHistory:()I
      30: invokevirtual #84                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.setMaxHistory:(I)V
      33: aload_1
      34: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
      37: ldc           #85                 // String %i
      39: invokevirtual #86                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      42: ifeq          65
      45: new           #87                 // class io/mosip/kernel/core/exception/PatternSyntaxException
      48: dup
      49: getstatic     #88                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.PATTERNSYNTAXEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      52: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      55: getstatic     #90                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.PATTERNSYNTAXEXCEPTIONMESSAGENOTI:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      58: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      61: invokespecial #91                 // Method io/mosip/kernel/core/exception/PatternSyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      64: athrow
      65: aload_1
      66: invokevirtual #73                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getTotalCap:()Ljava/lang/String;
      69: ifnull        97
      72: aload_1
      73: invokevirtual #73                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getTotalCap:()Ljava/lang/String;
      76: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      79: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
      82: ifne          97
      85: aload         4
      87: aload_1
      88: invokevirtual #73                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getTotalCap:()Ljava/lang/String;
      91: invokestatic  #74                 // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      94: invokevirtual #92                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.setTotalSizeCap:(Lch/qos/logback/core/util/FileSize;)V
      97: aload         4
      99: aload_3
     100: invokevirtual #93                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.setParent:(Lch/qos/logback/core/FileAppender;)V
     103: aload_3
     104: aload         4
     106: invokevirtual #78                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setRollingPolicy:(Lch/qos/logback/core/rolling/RollingPolicy;)V
     109: aload         4
     111: invokevirtual #94                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.start:()V
     114: return

  public static io.mosip.kernel.core.logger.spi.Logger getConsoleLogger(io.mosip.kernel.logger.logback.appender.ConsoleAppender, java.lang.String, io.mosip.kernel.logger.logback.constant.LogLevel);
    Code:
       0: aload_1
       1: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
       7: ifeq          30
      10: new           #95                 // class io/mosip/kernel/core/logger/exception/ClassNameNotFoundException
      13: dup
      14: getstatic     #96                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.CLASSNAMENOTFOUNDEXEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      17: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      20: getstatic     #97                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.CLASSNAMENOTFOUNDEXEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      23: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      26: invokespecial #98                 // Method io/mosip/kernel/core/logger/exception/ClassNameNotFoundException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      29: athrow
      30: new           #99                 // class io/mosip/kernel/logger/logback/impl/LoggerImpl
      33: dup
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokespecial #100                // Method "<init>":(Lio/mosip/kernel/logger/logback/appender/ConsoleAppender;Ljava/lang/String;Lio/mosip/kernel/logger/logback/constant/LogLevel;)V
      40: areturn

  public static io.mosip.kernel.core.logger.spi.Logger getFileLogger(io.mosip.kernel.logger.logback.appender.FileAppender, java.lang.String, io.mosip.kernel.logger.logback.constant.LogLevel);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.getFileName:()Ljava/lang/String;
       4: ifnonnull     27
       7: new           #101                // class io/mosip/kernel/core/logger/exception/FileNameNotProvided
      10: dup
      11: getstatic     #102                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      14: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      17: getstatic     #103                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDEDMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      20: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      23: invokespecial #104                // Method io/mosip/kernel/core/logger/exception/FileNameNotProvided."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: invokevirtual #36                 // Method io/mosip/kernel/logger/logback/appender/FileAppender.getFileName:()Ljava/lang/String;
      31: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      34: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
      37: ifeq          60
      40: new           #101                // class io/mosip/kernel/core/logger/exception/FileNameNotProvided
      43: dup
      44: getstatic     #102                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      47: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      50: getstatic     #105                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDEDMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      53: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      56: invokespecial #104                // Method io/mosip/kernel/core/logger/exception/FileNameNotProvided."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      59: athrow
      60: aload_1
      61: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      64: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
      67: ifeq          90
      70: new           #95                 // class io/mosip/kernel/core/logger/exception/ClassNameNotFoundException
      73: dup
      74: getstatic     #96                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.CLASSNAMENOTFOUNDEXEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      77: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      80: getstatic     #97                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.CLASSNAMENOTFOUNDEXEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      83: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      86: invokespecial #98                 // Method io/mosip/kernel/core/logger/exception/ClassNameNotFoundException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      89: athrow
      90: new           #99                 // class io/mosip/kernel/logger/logback/impl/LoggerImpl
      93: dup
      94: aload_0
      95: aload_1
      96: aload_2
      97: invokespecial #106                // Method "<init>":(Lio/mosip/kernel/logger/logback/appender/FileAppender;Ljava/lang/String;Lio/mosip/kernel/logger/logback/constant/LogLevel;)V
     100: areturn

  public static io.mosip.kernel.core.logger.spi.Logger getRollingFileLogger(io.mosip.kernel.logger.logback.appender.RollingFileAppender, java.lang.String, io.mosip.kernel.logger.logback.constant.LogLevel);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
       4: ifnonnull     27
       7: new           #107                // class io/mosip/kernel/core/logger/exception/EmptyPatternException
      10: dup
      11: getstatic     #108                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.EMPTYPATTERNEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      14: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      17: getstatic     #109                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.EMPTYPATTERNEXCEPTIONMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      20: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      23: invokespecial #110                // Method io/mosip/kernel/core/logger/exception/EmptyPatternException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
      31: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      34: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
      37: ifeq          60
      40: new           #107                // class io/mosip/kernel/core/logger/exception/EmptyPatternException
      43: dup
      44: getstatic     #108                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.EMPTYPATTERNEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      47: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      50: getstatic     #111                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.EMPTYPATTERNEXCEPTIONMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      53: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      56: invokespecial #110                // Method io/mosip/kernel/core/logger/exception/EmptyPatternException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
      64: ldc           #112                // String %d
      66: invokevirtual #86                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      69: ifne          92
      72: new           #87                 // class io/mosip/kernel/core/exception/PatternSyntaxException
      75: dup
      76: getstatic     #88                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.PATTERNSYNTAXEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      79: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      82: getstatic     #113                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.PATTERNSYNTAXEXCEPTIONMESSAGED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      85: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
      88: invokespecial #91                 // Method io/mosip/kernel/core/exception/PatternSyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      91: athrow
      92: aload_0
      93: invokevirtual #59                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxFileSize:()Ljava/lang/String;
      96: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      99: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
     102: ifne          144
     105: aload_0
     106: invokevirtual #59                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getMaxFileSize:()Ljava/lang/String;
     109: ifnull        144
     112: aload_0
     113: invokevirtual #69                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileNamePattern:()Ljava/lang/String;
     116: ldc           #85                 // String %i
     118: invokevirtual #86                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     121: ifne          144
     124: new           #87                 // class io/mosip/kernel/core/exception/PatternSyntaxException
     127: dup
     128: getstatic     #88                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.PATTERNSYNTAXEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     131: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     134: getstatic     #114                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.PATTERNSYNTAXEXCEPTIONMESSAGEI:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     137: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     140: invokespecial #91                 // Method io/mosip/kernel/core/exception/PatternSyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     143: athrow
     144: aload_0
     145: invokevirtual #53                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileName:()Ljava/lang/String;
     148: ifnonnull     171
     151: new           #101                // class io/mosip/kernel/core/logger/exception/FileNameNotProvided
     154: dup
     155: getstatic     #102                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     158: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     161: getstatic     #103                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDEDMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     164: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     167: invokespecial #104                // Method io/mosip/kernel/core/logger/exception/FileNameNotProvided."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     170: athrow
     171: aload_0
     172: invokevirtual #53                 // Method io/mosip/kernel/logger/logback/appender/RollingFileAppender.getFileName:()Ljava/lang/String;
     175: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
     178: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
     181: ifeq          204
     184: new           #101                // class io/mosip/kernel/core/logger/exception/FileNameNotProvided
     187: dup
     188: getstatic     #102                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     191: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     194: getstatic     #105                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.FILENAMENOTPROVIDEDMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     197: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     200: invokespecial #104                // Method io/mosip/kernel/core/logger/exception/FileNameNotProvided."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     203: athrow
     204: aload_1
     205: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
     208: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
     211: ifeq          234
     214: new           #95                 // class io/mosip/kernel/core/logger/exception/ClassNameNotFoundException
     217: dup
     218: getstatic     #96                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.CLASSNAMENOTFOUNDEXEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     221: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     224: getstatic     #97                 // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.CLASSNAMENOTFOUNDEXEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     227: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     230: invokespecial #98                 // Method io/mosip/kernel/core/logger/exception/ClassNameNotFoundException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     233: athrow
     234: new           #99                 // class io/mosip/kernel/logger/logback/impl/LoggerImpl
     237: dup
     238: aload_0
     239: aload_1
     240: aload_2
     241: invokespecial #115                // Method "<init>":(Lio/mosip/kernel/logger/logback/appender/RollingFileAppender;Ljava/lang/String;Lio/mosip/kernel/logger/logback/constant/LogLevel;)V
     244: areturn
     245: astore_3
     246: new           #117                // class io/mosip/kernel/core/exception/IllegalStateException
     249: dup
     250: getstatic     #118                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.MOSIPILLEGALSTATEEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     253: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     256: getstatic     #119                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.MOSIPILLEGALSTATEEXCEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     259: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     262: aload_3
     263: invokespecial #120                // Method io/mosip/kernel/core/exception/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     266: athrow
     267: astore_3
     268: new           #122                // class io/mosip/kernel/core/exception/IllegalArgumentException
     271: dup
     272: getstatic     #123                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.MOSIPILLEGALARGUMENTEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     275: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     278: getstatic     #124                // Field io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.MOSIPILLEGALARGUMENTEXCEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     281: invokevirtual #89                 // Method io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant.getValue:()Ljava/lang/String;
     284: aload_3
     285: invokespecial #125                // Method io/mosip/kernel/core/exception/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     288: athrow
    Exception table:
       from    to  target type
         234   244   245   Class java/lang/IllegalStateException
         234   244   267   Class java/lang/IllegalArgumentException

  public void debug(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: ldc           #126                // String {} - {} - {} - {}
       6: iconst_4
       7: anewarray     #127                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: dup
      15: iconst_1
      16: aload_2
      17: aastore
      18: dup
      19: iconst_2
      20: aload_3
      21: aastore
      22: dup
      23: iconst_3
      24: aload         4
      26: aastore
      27: invokevirtual #128                // Method ch/qos/logback/classic/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  public void warn(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: ldc           #126                // String {} - {} - {} - {}
       6: iconst_4
       7: anewarray     #127                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: dup
      15: iconst_1
      16: aload_2
      17: aastore
      18: dup
      19: iconst_2
      20: aload_3
      21: aastore
      22: dup
      23: iconst_3
      24: aload         4
      26: aastore
      27: invokevirtual #129                // Method ch/qos/logback/classic/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  public void error(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: ldc           #126                // String {} - {} - {} - {}
       6: iconst_4
       7: anewarray     #127                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: dup
      15: iconst_1
      16: aload_2
      17: aastore
      18: dup
      19: iconst_2
      20: aload_3
      21: aastore
      22: dup
      23: iconst_3
      24: aload         4
      26: aastore
      27: invokevirtual #130                // Method ch/qos/logback/classic/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  public void info(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: ldc           #126                // String {} - {} - {} - {}
       6: iconst_4
       7: anewarray     #127                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: dup
      15: iconst_1
      16: aload_2
      17: aastore
      18: dup
      19: iconst_2
      20: aload_3
      21: aastore
      22: dup
      23: iconst_3
      24: aload         4
      26: aastore
      27: invokevirtual #131                // Method ch/qos/logback/classic/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  public void trace(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: ldc           #126                // String {} - {} - {} - {}
       6: iconst_4
       7: anewarray     #127                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: dup
      15: iconst_1
      16: aload_2
      17: aastore
      18: dup
      19: iconst_2
      20: aload_3
      21: aastore
      22: dup
      23: iconst_3
      24: aload         4
      26: aastore
      27: invokevirtual #132                // Method ch/qos/logback/classic/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  private ch.qos.logback.classic.encoder.PatternLayoutEncoder getdefaultPattern(ch.qos.logback.classic.LoggerContext);
    Code:
       0: new           #133                // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
       3: dup
       4: invokespecial #134                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #136                // String %d{yyyy-MM-dd\'T\'HH:mm:ssXXX} - [%logger] - %-5level - %msg%n
      11: invokevirtual #137                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      14: aload_2
      15: aload_1
      16: invokevirtual #138                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setContext:(Lch/qos/logback/core/Context;)V
      19: aload_2
      20: invokevirtual #139                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.start:()V
      23: aload_2
      24: areturn

  public static void stop(java.lang.String);
    Code:
       0: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: ifeq          42
      12: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
      15: aload_0
      16: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #140                // class ch/qos/logback/core/Appender
      24: invokeinterface #141,  1          // InterfaceMethod ch/qos/logback/core/Appender.stop:()V
      29: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
      32: aload_0
      33: invokeinterface #142,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: goto          81
      42: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
      45: aload_0
      46: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      51: ifeq          81
      54: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
      57: aload_0
      58: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #140                // class ch/qos/logback/core/Appender
      66: invokeinterface #141,  1          // InterfaceMethod ch/qos/logback/core/Appender.stop:()V
      71: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
      74: aload_0
      75: invokeinterface #142,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: return

  public static void stopAll();
    Code:
       0: getstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
       3: invokeinterface #143,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       8: invokedynamic #144,  0            // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      13: invokeinterface #145,  2          // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      18: getstatic     #24                 // Field fileAppenders:Ljava/util/Map;
      21: invokeinterface #143,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      26: invokedynamic #144,  0            // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      31: invokeinterface #145,  2          // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      36: return

  public void debug(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: invokevirtual #146                // Method ch/qos/logback/classic/Logger.debug:(Ljava/lang/String;)V
       8: return

  public void debug(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #128                // Method ch/qos/logback/classic/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
       9: return

  public void info(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: invokevirtual #147                // Method ch/qos/logback/classic/Logger.info:(Ljava/lang/String;)V
       8: return

  public void info(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #131                // Method ch/qos/logback/classic/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
       9: return

  public void warn(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: invokevirtual #148                // Method ch/qos/logback/classic/Logger.warn:(Ljava/lang/String;)V
       8: return

  public void warn(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #129                // Method ch/qos/logback/classic/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
       9: return

  public void trace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: invokevirtual #149                // Method ch/qos/logback/classic/Logger.trace:(Ljava/lang/String;)V
       8: return

  public void trace(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #132                // Method ch/qos/logback/classic/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
       9: return

  public void error(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: invokevirtual #150                // Method ch/qos/logback/classic/Logger.error:(Ljava/lang/String;)V
       8: return

  public void error(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #130                // Method ch/qos/logback/classic/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
       9: return

  public void error(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lch/qos/logback/classic/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #151                // Method ch/qos/logback/classic/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
       9: return

  static {};
    Code:
       0: new           #152                // class java/util/HashMap
       3: dup
       4: invokespecial #153                // Method java/util/HashMap."<init>":()V
       7: putstatic     #44                 // Field rollingFileAppenders:Ljava/util/Map;
      10: new           #152                // class java/util/HashMap
      13: dup
      14: invokespecial #153                // Method java/util/HashMap."<init>":()V
      17: putstatic     #24                 // Field fileAppenders:Ljava/util/Map;
      20: return
}
