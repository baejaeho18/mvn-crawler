Compiled from "LogExeptionCodeConstant.java"
public final class io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant extends java.lang.Enum<io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant> {
  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant CLASSNAMENOTFOUNDEXEPTION;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant EMPTYPATTERNEXCEPTION;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant FILENAMENOTPROVIDED;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPILLEGALARGUMENTEXCEPTION;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPILLEGALFILEACCESS;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPCONFIGURATIONXMLPARSE;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPILLEGALSTATEEXCEPTION;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant IMPLEMENTATIONNOTFOUND;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant PATTERNSYNTAXEXCEPTION;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant CLASSNAMENOTFOUNDEXEPTIONMESSAGE;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant EMPTYPATTERNEXCEPTIONMESSAGEEMPTY;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant EMPTYPATTERNEXCEPTIONMESSAGENULL;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPILLEGALSTATEEXCEPTIONMESSAGE;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPILLEGALARGUMENTEXCEPTIONMESSAGE;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant FILENAMENOTPROVIDEDMESSAGEEMPTY;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant FILENAMENOTPROVIDEDMESSAGENULL;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant IMPLEMENTATIONNOTFOUNDMESSAGE;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPILLEGALFILEACCESSMESSAGE;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant PATTERNSYNTAXEXCEPTIONMESSAGED;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant PATTERNSYNTAXEXCEPTIONMESSAGEI;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant PATTERNSYNTAXEXCEPTIONMESSAGENOTI;

  public static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant MOSIPCONFIGURATIONXMLPARSEMESSAGE;

  private final java.lang.String value;

  private static final io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant[] $VALUES;

  public static io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
       3: invokevirtual #2                  // Method "[Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;"
       9: areturn

  public static io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
       9: areturn

  private io.mosip.kernel.logger.logback.constant.LogExeptionCodeConstant(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field value:Ljava/lang/String;
      11: return

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
       3: dup
       4: ldc           #8                  // String CLASSNAMENOTFOUNDEXEPTION
       6: iconst_0
       7: ldc           #9                  // String KER-LOG-001
       9: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #11                 // Field CLASSNAMENOTFOUNDEXEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      15: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
      18: dup
      19: ldc           #12                 // String EMPTYPATTERNEXCEPTION
      21: iconst_1
      22: ldc           #13                 // String KER-LOG-004
      24: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #14                 // Field EMPTYPATTERNEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      30: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
      33: dup
      34: ldc           #15                 // String FILENAMENOTPROVIDED
      36: iconst_2
      37: ldc           #16                 // String KER-LOG-006
      39: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #17                 // Field FILENAMENOTPROVIDED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      45: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
      48: dup
      49: ldc           #18                 // String MOSIPILLEGALARGUMENTEXCEPTION
      51: iconst_3
      52: ldc           #19                 // String KER-LOG-007
      54: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #20                 // Field MOSIPILLEGALARGUMENTEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      60: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
      63: dup
      64: ldc           #21                 // String MOSIPILLEGALFILEACCESS
      66: iconst_4
      67: ldc           #22                 // String KER-LOG-008
      69: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: putstatic     #23                 // Field MOSIPILLEGALFILEACCESS:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      75: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
      78: dup
      79: ldc           #24                 // String MOSIPCONFIGURATIONXMLPARSE
      81: iconst_5
      82: ldc           #25                 // String KER-LOG-009
      84: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      87: putstatic     #26                 // Field MOSIPCONFIGURATIONXMLPARSE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
      90: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
      93: dup
      94: ldc           #27                 // String MOSIPILLEGALSTATEEXCEPTION
      96: bipush        6
      98: ldc           #28                 // String KER-LOG-003
     100: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     103: putstatic     #29                 // Field MOSIPILLEGALSTATEEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     106: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     109: dup
     110: ldc           #30                 // String IMPLEMENTATIONNOTFOUND
     112: bipush        7
     114: ldc           #31                 // String KER-LOG-002
     116: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     119: putstatic     #32                 // Field IMPLEMENTATIONNOTFOUND:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     122: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     125: dup
     126: ldc           #33                 // String PATTERNSYNTAXEXCEPTION
     128: bipush        8
     130: ldc           #34                 // String KER-LOG-005
     132: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     135: putstatic     #35                 // Field PATTERNSYNTAXEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     138: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     141: dup
     142: ldc           #36                 // String CLASSNAMENOTFOUNDEXEPTIONMESSAGE
     144: bipush        9
     146: ldc           #37                 // String Class name is empty
     148: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     151: putstatic     #38                 // Field CLASSNAMENOTFOUNDEXEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     154: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     157: dup
     158: ldc           #39                 // String EMPTYPATTERNEXCEPTIONMESSAGEEMPTY
     160: bipush        10
     162: ldc           #40                 // String File name pattern is empty
     164: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     167: putstatic     #41                 // Field EMPTYPATTERNEXCEPTIONMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     170: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     173: dup
     174: ldc           #42                 // String EMPTYPATTERNEXCEPTIONMESSAGENULL
     176: bipush        11
     178: ldc           #43                 // String File name pattern is null
     180: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     183: putstatic     #44                 // Field EMPTYPATTERNEXCEPTIONMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     186: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     189: dup
     190: ldc           #45                 // String MOSIPILLEGALSTATEEXCEPTIONMESSAGE
     192: bipush        12
     194: ldc           #46                 // String FileNamePattern does not contain a valid DateToken
     196: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     199: putstatic     #47                 // Field MOSIPILLEGALSTATEEXCEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     202: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     205: dup
     206: ldc           #48                 // String MOSIPILLEGALARGUMENTEXCEPTIONMESSAGE
     208: bipush        13
     210: ldc           #49                 // String String value of size is not in expected format
     212: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     215: putstatic     #50                 // Field MOSIPILLEGALARGUMENTEXCEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     218: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     221: dup
     222: ldc           #51                 // String FILENAMENOTPROVIDEDMESSAGEEMPTY
     224: bipush        14
     226: ldc           #52                 // String File name is empty
     228: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     231: putstatic     #53                 // Field FILENAMENOTPROVIDEDMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     234: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     237: dup
     238: ldc           #54                 // String FILENAMENOTPROVIDEDMESSAGENULL
     240: bipush        15
     242: ldc           #55                 // String File name is null
     244: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     247: putstatic     #56                 // Field FILENAMENOTPROVIDEDMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     250: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     253: dup
     254: ldc           #57                 // String IMPLEMENTATIONNOTFOUNDMESSAGE
     256: bipush        16
     258: ldc           #58                 // String Log Implementation not found
     260: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     263: putstatic     #59                 // Field IMPLEMENTATIONNOTFOUNDMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     266: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     269: dup
     270: ldc           #60                 // String MOSIPILLEGALFILEACCESSMESSAGE
     272: bipush        17
     274: ldc           #61                 // String File location not accessible
     276: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     279: putstatic     #62                 // Field MOSIPILLEGALFILEACCESSMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     282: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     285: dup
     286: ldc           #63                 // String PATTERNSYNTAXEXCEPTIONMESSAGED
     288: bipush        18
     290: ldc           #64                 // String Pattern should contain %d{SimpleDateFormat}
     292: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     295: putstatic     #65                 // Field PATTERNSYNTAXEXCEPTIONMESSAGED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     298: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     301: dup
     302: ldc           #66                 // String PATTERNSYNTAXEXCEPTIONMESSAGEI
     304: bipush        19
     306: ldc           #67                 // String Pattern should contain %i
     308: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     311: putstatic     #68                 // Field PATTERNSYNTAXEXCEPTIONMESSAGEI:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     314: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     317: dup
     318: ldc           #69                 // String PATTERNSYNTAXEXCEPTIONMESSAGENOTI
     320: bipush        20
     322: ldc           #70                 // String Pattern should not contain %i
     324: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     327: putstatic     #71                 // Field PATTERNSYNTAXEXCEPTIONMESSAGENOTI:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     330: new           #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     333: dup
     334: ldc           #72                 // String MOSIPCONFIGURATIONXMLPARSEMESSAGE
     336: bipush        21
     338: ldc           #73                 // String invalid xml configuration
     340: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     343: putstatic     #74                 // Field MOSIPCONFIGURATIONXMLPARSEMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     346: bipush        22
     348: anewarray     #4                  // class io/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant
     351: dup
     352: iconst_0
     353: getstatic     #11                 // Field CLASSNAMENOTFOUNDEXEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     356: aastore
     357: dup
     358: iconst_1
     359: getstatic     #14                 // Field EMPTYPATTERNEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     362: aastore
     363: dup
     364: iconst_2
     365: getstatic     #17                 // Field FILENAMENOTPROVIDED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     368: aastore
     369: dup
     370: iconst_3
     371: getstatic     #20                 // Field MOSIPILLEGALARGUMENTEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     374: aastore
     375: dup
     376: iconst_4
     377: getstatic     #23                 // Field MOSIPILLEGALFILEACCESS:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     380: aastore
     381: dup
     382: iconst_5
     383: getstatic     #26                 // Field MOSIPCONFIGURATIONXMLPARSE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     386: aastore
     387: dup
     388: bipush        6
     390: getstatic     #29                 // Field MOSIPILLEGALSTATEEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     393: aastore
     394: dup
     395: bipush        7
     397: getstatic     #32                 // Field IMPLEMENTATIONNOTFOUND:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     400: aastore
     401: dup
     402: bipush        8
     404: getstatic     #35                 // Field PATTERNSYNTAXEXCEPTION:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     407: aastore
     408: dup
     409: bipush        9
     411: getstatic     #38                 // Field CLASSNAMENOTFOUNDEXEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     414: aastore
     415: dup
     416: bipush        10
     418: getstatic     #41                 // Field EMPTYPATTERNEXCEPTIONMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     421: aastore
     422: dup
     423: bipush        11
     425: getstatic     #44                 // Field EMPTYPATTERNEXCEPTIONMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     428: aastore
     429: dup
     430: bipush        12
     432: getstatic     #47                 // Field MOSIPILLEGALSTATEEXCEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     435: aastore
     436: dup
     437: bipush        13
     439: getstatic     #50                 // Field MOSIPILLEGALARGUMENTEXCEPTIONMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     442: aastore
     443: dup
     444: bipush        14
     446: getstatic     #53                 // Field FILENAMENOTPROVIDEDMESSAGEEMPTY:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     449: aastore
     450: dup
     451: bipush        15
     453: getstatic     #56                 // Field FILENAMENOTPROVIDEDMESSAGENULL:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     456: aastore
     457: dup
     458: bipush        16
     460: getstatic     #59                 // Field IMPLEMENTATIONNOTFOUNDMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     463: aastore
     464: dup
     465: bipush        17
     467: getstatic     #62                 // Field MOSIPILLEGALFILEACCESSMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     470: aastore
     471: dup
     472: bipush        18
     474: getstatic     #65                 // Field PATTERNSYNTAXEXCEPTIONMESSAGED:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     477: aastore
     478: dup
     479: bipush        19
     481: getstatic     #68                 // Field PATTERNSYNTAXEXCEPTIONMESSAGEI:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     484: aastore
     485: dup
     486: bipush        20
     488: getstatic     #71                 // Field PATTERNSYNTAXEXCEPTIONMESSAGENOTI:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     491: aastore
     492: dup
     493: bipush        21
     495: getstatic     #74                 // Field MOSIPCONFIGURATIONXMLPARSEMESSAGE:Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     498: aastore
     499: putstatic     #1                  // Field $VALUES:[Lio/mosip/kernel/logger/logback/constant/LogExeptionCodeConstant;
     502: return
}
