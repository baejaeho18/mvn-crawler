Compiled from "PrometheusTimer.java"
public class io.micrometer.prometheus.PrometheusTimer extends io.micrometer.core.instrument.AbstractTimer {
  private static final io.micrometer.core.instrument.distribution.CountAtBucket[] EMPTY_HISTOGRAM;

  private final java.util.concurrent.atomic.LongAdder count;

  private final java.util.concurrent.atomic.LongAdder totalTime;

  private final io.micrometer.core.instrument.distribution.TimeWindowMax max;

  private final io.micrometer.prometheus.HistogramFlavor histogramFlavor;

  private final io.micrometer.core.instrument.distribution.Histogram histogram;

  io.micrometer.prometheus.PrometheusTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector, io.micrometer.prometheus.HistogramFlavor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       6: iconst_0
       7: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      10: invokevirtual #13                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilesHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      13: iconst_0
      14: newarray       double
      16: invokevirtual #19                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.sla:([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      19: invokevirtual #23                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      22: aload_3
      23: invokevirtual #27                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      26: aload         4
      28: getstatic     #31                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      31: iconst_0
      32: invokespecial #37                 // Method io/micrometer/core/instrument/AbstractTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V
      35: aload_0
      36: new           #43                 // class java/util/concurrent/atomic/LongAdder
      39: dup
      40: invokespecial #45                 // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      43: putfield      #48                 // Field count:Ljava/util/concurrent/atomic/LongAdder;
      46: aload_0
      47: new           #43                 // class java/util/concurrent/atomic/LongAdder
      50: dup
      51: invokespecial #45                 // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      54: putfield      #54                 // Field totalTime:Ljava/util/concurrent/atomic/LongAdder;
      57: aload_0
      58: aload         5
      60: putfield      #57                 // Field histogramFlavor:Lio/micrometer/prometheus/HistogramFlavor;
      63: aload_0
      64: new           #61                 // class io/micrometer/core/instrument/distribution/TimeWindowMax
      67: dup
      68: aload_2
      69: aload_3
      70: invokespecial #63                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
      73: putfield      #66                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      76: aload_3
      77: invokevirtual #70                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.isPublishingHistogram:()Z
      80: ifeq          184
      83: getstatic     #74                 // Field io/micrometer/prometheus/PrometheusTimer$1.$SwitchMap$io$micrometer$prometheus$HistogramFlavor:[I
      86: aload         5
      88: invokevirtual #80                 // Method io/micrometer/prometheus/HistogramFlavor.ordinal:()I
      91: iaload
      92: lookupswitch  { // 2
                     1: 120
                     2: 162
               default: 176
          }
     120: aload_0
     121: new           #86                 // class io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram
     124: dup
     125: aload_2
     126: invokestatic  #1                  // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     129: ldc2_w        #88                 // long 1825l
     132: invokestatic  #90                 // Method java/time/Duration.ofDays:(J)Ljava/time/Duration;
     135: invokevirtual #96                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     138: iconst_1
     139: invokestatic  #100                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     142: invokevirtual #105                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.bufferLength:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     145: invokevirtual #23                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     148: aload_3
     149: invokevirtual #27                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     152: iconst_1
     153: invokespecial #109                // Method io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
     156: putfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     159: goto          189
     162: aload_0
     163: new           #116                // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram
     166: dup
     167: invokespecial #118                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram."<init>":()V
     170: putfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     173: goto          189
     176: aload_0
     177: aconst_null
     178: putfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     181: goto          189
     184: aload_0
     185: aconst_null
     186: putfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     189: return

  protected void recordNonNegative(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #48                 // Field count:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #119                // Method java/util/concurrent/atomic/LongAdder.increment:()V
       7: getstatic     #122                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      10: lload_1
      11: aload_3
      12: invokevirtual #125                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      15: lstore        4
      17: aload_0
      18: getfield      #54                 // Field totalTime:Ljava/util/concurrent/atomic/LongAdder;
      21: lload         4
      23: invokevirtual #129                // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      26: aload_0
      27: getfield      #66                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      30: lload         4
      32: l2d
      33: getstatic     #122                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokevirtual #133                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.record:(DLjava/util/concurrent/TimeUnit;)V
      39: aload_0
      40: getfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      43: ifnull        63
      46: aload_0
      47: getfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      50: getstatic     #122                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      53: lload_1
      54: aload_3
      55: invokevirtual #125                // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      58: invokeinterface #137,  3          // InterfaceMethod io/micrometer/core/instrument/distribution/Histogram.recordLong:(J)V
      63: return

  public long count();
    Code:
       0: aload_0
       1: getfield      #48                 // Field count:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #142                // Method java/util/concurrent/atomic/LongAdder.longValue:()J
       7: lreturn

  public double totalTime(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #54                 // Field totalTime:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #146                // Method java/util/concurrent/atomic/LongAdder.doubleValue:()D
       7: aload_1
       8: invokestatic  #150                // Method io/micrometer/core/instrument/util/TimeUtils.nanosToUnit:(DLjava/util/concurrent/TimeUnit;)D
      11: dreturn

  public double max(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #66                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
       4: aload_1
       5: invokevirtual #156                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.poll:(Ljava/util/concurrent/TimeUnit;)D
       8: dreturn

  public io.micrometer.prometheus.HistogramFlavor histogramFlavor();
    Code:
       0: aload_0
       1: getfield      #57                 // Field histogramFlavor:Lio/micrometer/prometheus/HistogramFlavor;
       4: areturn

  public io.micrometer.core.instrument.distribution.CountAtBucket[] histogramCounts();
    Code:
       0: aload_0
       1: getfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
       4: ifnonnull     13
       7: getstatic     #160                // Field EMPTY_HISTOGRAM:[Lio/micrometer/core/instrument/distribution/CountAtBucket;
      10: goto          28
      13: aload_0
      14: getfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      17: lconst_0
      18: dconst_0
      19: dconst_0
      20: invokeinterface #164,  7          // InterfaceMethod io/micrometer/core/instrument/distribution/Histogram.takeSnapshot:(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
      25: invokevirtual #168                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.histogramCounts:()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
      28: areturn

  public io.micrometer.core.instrument.distribution.HistogramSnapshot takeSnapshot();
    Code:
       0: aload_0
       1: invokespecial #174                // Method io/micrometer/core/instrument/AbstractTimer.takeSnapshot:()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
       4: astore_1
       5: aload_0
       6: getfield      #112                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
       9: ifnonnull     14
      12: aload_1
      13: areturn
      14: new           #169                // class io/micrometer/core/instrument/distribution/HistogramSnapshot
      17: dup
      18: aload_1
      19: invokevirtual #177                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.count:()J
      22: aload_1
      23: getstatic     #31                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokevirtual #179                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.total:(Ljava/util/concurrent/TimeUnit;)D
      29: aload_1
      30: getstatic     #31                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      33: invokevirtual #182                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.max:(Ljava/util/concurrent/TimeUnit;)D
      36: aload_1
      37: invokevirtual #184                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.percentileValues:()[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;
      40: aload_0
      41: invokevirtual #188                // Method histogramCounts:()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
      44: aload_1
      45: dup
      46: invokestatic  #189                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: invokedynamic #195,  0            // InvokeDynamic #0:accept:(Lio/micrometer/core/instrument/distribution/HistogramSnapshot;)Ljava/util/function/BiConsumer;
      55: invokespecial #199                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot."<init>":(JDD[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;[Lio/micrometer/core/instrument/distribution/CountAtBucket;Ljava/util/function/BiConsumer;)V
      58: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #202                // class io/micrometer/core/instrument/distribution/CountAtBucket
       4: putstatic     #160                // Field EMPTY_HISTOGRAM:[Lio/micrometer/core/instrument/distribution/CountAtBucket;
       7: return
}
