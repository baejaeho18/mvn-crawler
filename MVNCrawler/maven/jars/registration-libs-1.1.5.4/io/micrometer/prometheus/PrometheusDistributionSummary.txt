Compiled from "PrometheusDistributionSummary.java"
public class io.micrometer.prometheus.PrometheusDistributionSummary extends io.micrometer.core.instrument.AbstractDistributionSummary {
  private static final io.micrometer.core.instrument.distribution.CountAtBucket[] EMPTY_HISTOGRAM;

  private final io.micrometer.core.instrument.distribution.Histogram histogram;

  private final java.util.concurrent.atomic.LongAdder count;

  private final java.util.concurrent.atomic.DoubleAdder amount;

  private final io.micrometer.core.instrument.distribution.TimeWindowMax max;

  private final io.micrometer.prometheus.HistogramFlavor histogramFlavor;

  io.micrometer.prometheus.PrometheusDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double, io.micrometer.prometheus.HistogramFlavor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       6: iconst_0
       7: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      10: invokevirtual #13                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilesHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      13: iconst_0
      14: newarray       double
      16: invokevirtual #19                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.sla:([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      19: invokevirtual #23                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      22: aload_3
      23: invokevirtual #27                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      26: dload         4
      28: iconst_0
      29: invokespecial #31                 // Method io/micrometer/core/instrument/AbstractDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
      32: aload_0
      33: new           #37                 // class java/util/concurrent/atomic/LongAdder
      36: dup
      37: invokespecial #39                 // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      40: putfield      #42                 // Field count:Ljava/util/concurrent/atomic/LongAdder;
      43: aload_0
      44: new           #48                 // class java/util/concurrent/atomic/DoubleAdder
      47: dup
      48: invokespecial #50                 // Method java/util/concurrent/atomic/DoubleAdder."<init>":()V
      51: putfield      #51                 // Field amount:Ljava/util/concurrent/atomic/DoubleAdder;
      54: aload_0
      55: aload         6
      57: putfield      #55                 // Field histogramFlavor:Lio/micrometer/prometheus/HistogramFlavor;
      60: aload_0
      61: new           #59                 // class io/micrometer/core/instrument/distribution/TimeWindowMax
      64: dup
      65: aload_2
      66: aload_3
      67: invokespecial #61                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
      70: putfield      #64                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      73: aload_3
      74: invokevirtual #68                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.isPublishingHistogram:()Z
      77: ifeq          180
      80: getstatic     #72                 // Field io/micrometer/prometheus/PrometheusDistributionSummary$1.$SwitchMap$io$micrometer$prometheus$HistogramFlavor:[I
      83: aload         6
      85: invokevirtual #78                 // Method io/micrometer/prometheus/HistogramFlavor.ordinal:()I
      88: iaload
      89: lookupswitch  { // 2
                     1: 116
                     2: 158
               default: 172
          }
     116: aload_0
     117: new           #84                 // class io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram
     120: dup
     121: aload_2
     122: invokestatic  #1                  // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     125: ldc2_w        #86                 // long 1825l
     128: invokestatic  #88                 // Method java/time/Duration.ofDays:(J)Ljava/time/Duration;
     131: invokevirtual #94                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     134: iconst_1
     135: invokestatic  #98                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     138: invokevirtual #103                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.bufferLength:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     141: invokevirtual #23                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     144: aload_3
     145: invokevirtual #27                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     148: iconst_1
     149: invokespecial #107                // Method io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
     152: putfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     155: goto          185
     158: aload_0
     159: new           #114                // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram
     162: dup
     163: invokespecial #116                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram."<init>":()V
     166: putfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     169: goto          185
     172: aload_0
     173: aconst_null
     174: putfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     177: goto          185
     180: aload_0
     181: aconst_null
     182: putfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
     185: return

  protected void recordNonNegative(double);
    Code:
       0: aload_0
       1: getfield      #42                 // Field count:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #117                // Method java/util/concurrent/atomic/LongAdder.increment:()V
       7: aload_0
       8: getfield      #51                 // Field amount:Ljava/util/concurrent/atomic/DoubleAdder;
      11: dload_1
      12: invokevirtual #120                // Method java/util/concurrent/atomic/DoubleAdder.add:(D)V
      15: aload_0
      16: getfield      #64                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      19: dload_1
      20: invokevirtual #124                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.record:(D)V
      23: aload_0
      24: getfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      27: ifnull        40
      30: aload_0
      31: getfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      34: dload_1
      35: invokeinterface #127,  3          // InterfaceMethod io/micrometer/core/instrument/distribution/Histogram.recordDouble:(D)V
      40: return

  public long count();
    Code:
       0: aload_0
       1: getfield      #42                 // Field count:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #132                // Method java/util/concurrent/atomic/LongAdder.longValue:()J
       7: lreturn

  public double totalAmount();
    Code:
       0: aload_0
       1: getfield      #51                 // Field amount:Ljava/util/concurrent/atomic/DoubleAdder;
       4: invokevirtual #136                // Method java/util/concurrent/atomic/DoubleAdder.doubleValue:()D
       7: dreturn

  public double max();
    Code:
       0: aload_0
       1: getfield      #64                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
       4: invokevirtual #140                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.poll:()D
       7: dreturn

  public io.micrometer.prometheus.HistogramFlavor histogramFlavor();
    Code:
       0: aload_0
       1: getfield      #55                 // Field histogramFlavor:Lio/micrometer/prometheus/HistogramFlavor;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #143                // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #149                // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn

  public io.micrometer.core.instrument.distribution.CountAtBucket[] histogramCounts();
    Code:
       0: aload_0
       1: getfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
       4: ifnonnull     13
       7: getstatic     #153                // Field EMPTY_HISTOGRAM:[Lio/micrometer/core/instrument/distribution/CountAtBucket;
      10: goto          28
      13: aload_0
      14: getfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      17: lconst_0
      18: dconst_0
      19: dconst_0
      20: invokeinterface #157,  7          // InterfaceMethod io/micrometer/core/instrument/distribution/Histogram.takeSnapshot:(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
      25: invokevirtual #161                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.histogramCounts:()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
      28: areturn

  public io.micrometer.core.instrument.distribution.HistogramSnapshot takeSnapshot();
    Code:
       0: aload_0
       1: invokespecial #167                // Method io/micrometer/core/instrument/AbstractDistributionSummary.takeSnapshot:()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
       4: astore_1
       5: aload_0
       6: getfield      #110                // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
       9: ifnonnull     14
      12: aload_1
      13: areturn
      14: new           #162                // class io/micrometer/core/instrument/distribution/HistogramSnapshot
      17: dup
      18: aload_1
      19: invokevirtual #170                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.count:()J
      22: aload_1
      23: invokevirtual #172                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.total:()D
      26: aload_1
      27: invokevirtual #175                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.max:()D
      30: aload_1
      31: invokevirtual #177                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.percentileValues:()[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;
      34: aload_0
      35: invokevirtual #181                // Method histogramCounts:()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
      38: aload_1
      39: dup
      40: invokestatic  #182                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: invokedynamic #188,  0            // InvokeDynamic #0:accept:(Lio/micrometer/core/instrument/distribution/HistogramSnapshot;)Ljava/util/function/BiConsumer;
      49: invokespecial #192                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot."<init>":(JDD[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;[Lio/micrometer/core/instrument/distribution/CountAtBucket;Ljava/util/function/BiConsumer;)V
      52: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #195                // class io/micrometer/core/instrument/distribution/CountAtBucket
       4: putstatic     #153                // Field EMPTY_HISTOGRAM:[Lio/micrometer/core/instrument/distribution/CountAtBucket;
       7: return
}
