Compiled from "FixedBoundaryVictoriaMetricsHistogram.java"
public class io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram implements io.micrometer.core.instrument.distribution.Histogram {
  private static final io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram$IdxOffset UPPER;

  private static final io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram$IdxOffset LOWER;

  private static final io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram$IdxOffset ZERO;

  private static final int E10MIN;

  private static final int E10MAX;

  private static final int DECIMAL_MULTIPLIER;

  private static final int BUCKET_SIZE;

  private static final int BUCKETS_COUNT;

  private static final double DECIMAL_PRECISION;

  private static final java.lang.String[] VMRANGES;

  private static final double[] UPPER_BOUNDS;

  final java.util.concurrent.atomic.AtomicReferenceArray<java.util.concurrent.atomic.AtomicLongArray> values;

  final java.util.concurrent.atomic.AtomicLong zeros;

  final java.util.concurrent.atomic.AtomicLong lower;

  final java.util.concurrent.atomic.AtomicLong upper;

  final java.util.concurrent.atomic.DoubleAdder sum;

  public io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #14                 // Field zeros:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #9                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #18                 // Field lower:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: new           #9                  // class java/util/concurrent/atomic/AtomicLong
      32: dup
      33: lconst_0
      34: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      37: putfield      #21                 // Field upper:Ljava/util/concurrent/atomic/AtomicLong;
      40: aload_0
      41: new           #24                 // class java/util/concurrent/atomic/DoubleAdder
      44: dup
      45: invokespecial #26                 // Method java/util/concurrent/atomic/DoubleAdder."<init>":()V
      48: putfield      #27                 // Field sum:Ljava/util/concurrent/atomic/DoubleAdder;
      51: aload_0
      52: new           #31                 // class java/util/concurrent/atomic/AtomicReferenceArray
      55: dup
      56: bipush        27
      58: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      61: putfield      #36                 // Field values:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      64: return

  public void recordLong(long);
    Code:
       0: aload_0
       1: lload_1
       2: l2d
       3: invokevirtual #40                 // Method recordDouble:(D)V
       6: return

  public void recordDouble(double);
    Code:
       0: dload_1
       1: invokestatic  #44                 // Method java/lang/Double.isNaN:(D)Z
       4: ifne          13
       7: dload_1
       8: dconst_0
       9: dcmpg
      10: ifge          14
      13: return
      14: dload_1
      15: invokestatic  #50                 // Method getBucketIdxAndOffset:(D)Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      18: astore_3
      19: aload_0
      20: getfield      #27                 // Field sum:Ljava/util/concurrent/atomic/DoubleAdder;
      23: dload_1
      24: invokevirtual #54                 // Method java/util/concurrent/atomic/DoubleAdder.add:(D)V
      27: aload_3
      28: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
      31: ifge          80
      34: aload_3
      35: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
      38: ifne          52
      41: aload_0
      42: getfield      #14                 // Field zeros:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      48: pop2
      49: goto          79
      52: aload_3
      53: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
      56: iconst_1
      57: if_icmpne     71
      60: aload_0
      61: getfield      #18                 // Field lower:Ljava/util/concurrent/atomic/AtomicLong;
      64: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      67: pop2
      68: goto          79
      71: aload_0
      72: getfield      #21                 // Field upper:Ljava/util/concurrent/atomic/AtomicLong;
      75: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      78: pop2
      79: return
      80: aload_0
      81: getfield      #36                 // Field values:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      84: aload_3
      85: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
      88: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
      91: checkcast     #74                 // class java/util/concurrent/atomic/AtomicLongArray
      94: astore        4
      96: aload         4
      98: ifnonnull     145
     101: new           #74                 // class java/util/concurrent/atomic/AtomicLongArray
     104: dup
     105: bipush        18
     107: invokespecial #76                 // Method java/util/concurrent/atomic/AtomicLongArray."<init>":(I)V
     110: astore        4
     112: aload_0
     113: getfield      #36                 // Field values:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     116: aload_3
     117: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
     120: aconst_null
     121: aload         4
     123: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicReferenceArray.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z
     126: ifne          145
     129: aload_0
     130: getfield      #36                 // Field values:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     133: aload_3
     134: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
     137: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
     140: checkcast     #74                 // class java/util/concurrent/atomic/AtomicLongArray
     143: astore        4
     145: aload         4
     147: aload_3
     148: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
     151: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicLongArray.incrementAndGet:(I)J
     154: pop2
     155: return

  private static io.micrometer.core.instrument.distribution.FixedBoundaryVictoriaMetricsHistogram$IdxOffset getBucketIdxAndOffset(double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpg
       3: ifge          30
       6: new           #84                 // class java/lang/RuntimeException
       9: dup
      10: ldc           #86                 // String BUG: v must be positive; got %f
      12: iconst_1
      13: anewarray     #4                  // class java/lang/Object
      16: dup
      17: iconst_0
      18: dload_0
      19: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      22: aastore
      23: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokespecial #98                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: dload_0
      31: dconst_0
      32: dcmpl
      33: ifne          40
      36: getstatic     #101                // Field ZERO:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      39: areturn
      40: ldc2_w        #105                // double Infinityd
      43: dload_0
      44: dcmpl
      45: ifne          52
      48: getstatic     #107                // Field UPPER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      51: areturn
      52: dload_0
      53: invokestatic  #110                // Method java/lang/Math.log10:(D)D
      56: invokestatic  #116                // Method java/lang/Math.floor:(D)D
      59: d2i
      60: istore_2
      61: iload_2
      62: bipush        -9
      64: isub
      65: istore_3
      66: iload_3
      67: ifge          74
      70: getstatic     #119                // Field LOWER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      73: areturn
      74: ldc2_w        #122                // double 10.0d
      77: iload_2
      78: i2d
      79: invokestatic  #124                // Method java/lang/Math.pow:(DD)D
      82: dstore        4
      84: iload_3
      85: bipush        27
      87: if_icmplt     126
      90: iload_3
      91: bipush        27
      93: if_icmpne     122
      96: dload         4
      98: dload_0
      99: dsub
     100: invokestatic  #128                // Method java/lang/Math.abs:(D)D
     103: ldc2_w        #131                // double 0.005d
     106: dcmpg
     107: ifge          122
     110: new           #58                 // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset
     113: dup
     114: bipush        26
     116: bipush        17
     118: invokespecial #133                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset."<init>":(II)V
     121: areturn
     122: getstatic     #107                // Field UPPER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
     125: areturn
     126: dload_0
     127: dload         4
     129: ddiv
     130: dconst_1
     131: dsub
     132: ldc2_w        #136                // double 2.0d
     135: dmul
     136: dstore        6
     138: dload         6
     140: d2i
     141: istore        8
     143: iload         8
     145: ifge          154
     148: iconst_0
     149: istore        8
     151: goto          165
     154: iload         8
     156: bipush        18
     158: if_icmplt     165
     161: bipush        17
     163: istore        8
     165: iload         8
     167: i2d
     168: dload         6
     170: dsub
     171: invokestatic  #128                // Method java/lang/Math.abs:(D)D
     174: ldc2_w        #131                // double 0.005d
     177: dcmpg
     178: ifge          204
     181: iinc          8, -1
     184: iload         8
     186: ifge          204
     189: iinc          3, -1
     192: iload_3
     193: ifge          200
     196: getstatic     #119                // Field LOWER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
     199: areturn
     200: bipush        17
     202: istore        8
     204: new           #58                 // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset
     207: dup
     208: iload_3
     209: iload         8
     211: invokespecial #133                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset."<init>":(II)V
     214: areturn

  private static int getRangeIndex(int, int);
    Code:
       0: iload_0
       1: ifge          35
       4: iload_1
       5: iconst_2
       6: if_icmple     33
       9: new           #84                 // class java/lang/RuntimeException
      12: dup
      13: ldc           #138                // String BUG: offset must be in range [0...2] for negative bucketIdx; got %d
      15: iconst_1
      16: anewarray     #4                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: iload_1
      22: invokestatic  #140                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokespecial #98                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iload_1
      34: ireturn
      35: iconst_3
      36: iload_0
      37: bipush        18
      39: imul
      40: iadd
      41: iload_1
      42: iadd
      43: ireturn

  public static java.lang.String getRangeTagValue(double);
    Code:
       0: dload_0
       1: invokestatic  #50                 // Method getBucketIdxAndOffset:(D)Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
       4: astore_2
       5: getstatic     #145                // Field VMRANGES:[Ljava/lang/String;
       8: aload_2
       9: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
      12: aload_2
      13: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
      16: invokestatic  #149                // Method getRangeIndex:(II)I
      19: aaload
      20: areturn

  private java.util.List<io.micrometer.core.instrument.distribution.CountAtBucket> nonZeroBuckets();
    Code:
       0: new           #153                // class java/util/ArrayList
       3: dup
       4: invokespecial #155                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #14                 // Field zeros:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #156                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      15: lstore_2
      16: lload_2
      17: lconst_0
      18: lcmp
      19: ifle          57
      22: aload_1
      23: new           #158                // class io/micrometer/core/instrument/distribution/CountAtBucket
      26: dup
      27: getstatic     #160                // Field UPPER_BOUNDS:[D
      30: getstatic     #101                // Field ZERO:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      33: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
      36: getstatic     #101                // Field ZERO:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      39: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
      42: invokestatic  #149                // Method getRangeIndex:(II)I
      45: daload
      46: lload_2
      47: l2d
      48: invokespecial #164                // Method io/micrometer/core/instrument/distribution/CountAtBucket."<init>":(DD)V
      51: invokeinterface #167,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload_0
      58: getfield      #18                 // Field lower:Ljava/util/concurrent/atomic/AtomicLong;
      61: invokevirtual #156                // Method java/util/concurrent/atomic/AtomicLong.get:()J
      64: lstore        4
      66: lload         4
      68: lconst_0
      69: lcmp
      70: ifle          109
      73: aload_1
      74: new           #158                // class io/micrometer/core/instrument/distribution/CountAtBucket
      77: dup
      78: getstatic     #160                // Field UPPER_BOUNDS:[D
      81: getstatic     #119                // Field LOWER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      84: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
      87: getstatic     #119                // Field LOWER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      90: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
      93: invokestatic  #149                // Method getRangeIndex:(II)I
      96: daload
      97: lload         4
      99: l2d
     100: invokespecial #164                // Method io/micrometer/core/instrument/distribution/CountAtBucket."<init>":(DD)V
     103: invokeinterface #167,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     108: pop
     109: aload_0
     110: getfield      #21                 // Field upper:Ljava/util/concurrent/atomic/AtomicLong;
     113: invokevirtual #156                // Method java/util/concurrent/atomic/AtomicLong.get:()J
     116: lstore        6
     118: lload         6
     120: lconst_0
     121: lcmp
     122: ifle          161
     125: aload_1
     126: new           #158                // class io/micrometer/core/instrument/distribution/CountAtBucket
     129: dup
     130: getstatic     #160                // Field UPPER_BOUNDS:[D
     133: getstatic     #107                // Field UPPER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
     136: getfield      #57                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.bucketIdx:I
     139: getstatic     #107                // Field UPPER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
     142: getfield      #63                 // Field io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset.offset:I
     145: invokestatic  #149                // Method getRangeIndex:(II)I
     148: daload
     149: lload         6
     151: l2d
     152: invokespecial #164                // Method io/micrometer/core/instrument/distribution/CountAtBucket."<init>":(DD)V
     155: invokeinterface #167,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     160: pop
     161: iconst_0
     162: istore        8
     164: iload         8
     166: aload_0
     167: getfield      #36                 // Field values:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     170: invokevirtual #172                // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
     173: if_icmpge     264
     176: aload_0
     177: getfield      #36                 // Field values:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     180: iload         8
     182: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
     185: checkcast     #74                 // class java/util/concurrent/atomic/AtomicLongArray
     188: astore        9
     190: aload         9
     192: ifnull        258
     195: iconst_0
     196: istore        10
     198: iload         10
     200: aload         9
     202: invokevirtual #176                // Method java/util/concurrent/atomic/AtomicLongArray.length:()I
     205: if_icmpge     258
     208: aload         9
     210: iload         10
     212: invokevirtual #177                // Method java/util/concurrent/atomic/AtomicLongArray.get:(I)J
     215: lstore        11
     217: lload         11
     219: lconst_0
     220: lcmp
     221: ifle          252
     224: aload_1
     225: new           #158                // class io/micrometer/core/instrument/distribution/CountAtBucket
     228: dup
     229: getstatic     #160                // Field UPPER_BOUNDS:[D
     232: iload         8
     234: iload         10
     236: invokestatic  #149                // Method getRangeIndex:(II)I
     239: daload
     240: lload         11
     242: l2d
     243: invokespecial #164                // Method io/micrometer/core/instrument/distribution/CountAtBucket."<init>":(DD)V
     246: invokeinterface #167,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     251: pop
     252: iinc          10, 1
     255: goto          198
     258: iinc          8, 1
     261: goto          164
     264: aload_1
     265: areturn

  public io.micrometer.core.instrument.distribution.HistogramSnapshot takeSnapshot(long, double, double);
    Code:
       0: new           #179                // class io/micrometer/core/instrument/distribution/HistogramSnapshot
       3: dup
       4: lload_1
       5: dload_3
       6: dload         5
       8: aconst_null
       9: aload_0
      10: invokespecial #181                // Method nonZeroBuckets:()Ljava/util/List;
      13: iconst_0
      14: anewarray     #158                // class io/micrometer/core/instrument/distribution/CountAtBucket
      17: invokeinterface #185,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      22: checkcast     #189                // class "[Lio/micrometer/core/instrument/distribution/CountAtBucket;"
      25: aload_0
      26: invokedynamic #191,  0            // InvokeDynamic #0:accept:(Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram;)Ljava/util/function/BiConsumer;
      31: invokespecial #195                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot."<init>":(JDD[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;[Lio/micrometer/core/instrument/distribution/CountAtBucket;Ljava/util/function/BiConsumer;)V
      34: areturn

  private void outputSummary(java.io.PrintStream, double);
    Code:
       0: aload_1
       1: ldc           #198                // String %14s %10s\n\n
       3: iconst_2
       4: anewarray     #4                  // class java/lang/Object
       7: dup
       8: iconst_0
       9: ldc           #200                // String Bucket
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #202                // String TotalCount
      16: aastore
      17: invokevirtual #204                // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      20: pop
      21: aload_0
      22: invokespecial #181                // Method nonZeroBuckets:()Ljava/util/List;
      25: invokeinterface #209,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #213,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          95
      42: aload         4
      44: invokeinterface #219,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #158                // class io/micrometer/core/instrument/distribution/CountAtBucket
      52: astore        5
      54: aload_1
      55: getstatic     #223                // Field java/util/Locale.US:Ljava/util/Locale;
      58: ldc           #229                // String %14.1f %10d\n
      60: iconst_2
      61: anewarray     #4                  // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload         5
      68: invokevirtual #231                // Method io/micrometer/core/instrument/distribution/CountAtBucket.bucket:()D
      71: dload_2
      72: ddiv
      73: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      76: aastore
      77: dup
      78: iconst_1
      79: aload         5
      81: invokevirtual #235                // Method io/micrometer/core/instrument/distribution/CountAtBucket.count:()D
      84: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      87: aastore
      88: invokevirtual #238                // Method java/io/PrintStream.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      91: pop
      92: goto          32
      95: aload_1
      96: bipush        10
      98: invokevirtual #241                // Method java/io/PrintStream.write:(I)V
     101: return

  static {};
    Code:
       0: new           #58                 // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset
       3: dup
       4: iconst_m1
       5: iconst_2
       6: invokespecial #133                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset."<init>":(II)V
       9: putstatic     #107                // Field UPPER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      12: new           #58                 // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset
      15: dup
      16: iconst_m1
      17: iconst_1
      18: invokespecial #133                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset."<init>":(II)V
      21: putstatic     #119                // Field LOWER:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      24: new           #58                 // class io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset
      27: dup
      28: iconst_m1
      29: iconst_0
      30: invokespecial #133                // Method io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset."<init>":(II)V
      33: putstatic     #101                // Field ZERO:Lio/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram$IdxOffset;
      36: sipush        489
      39: anewarray     #93                 // class java/lang/String
      42: putstatic     #145                // Field VMRANGES:[Ljava/lang/String;
      45: getstatic     #145                // Field VMRANGES:[Ljava/lang/String;
      48: iconst_0
      49: ldc           #244                // String 0...0
      51: aastore
      52: getstatic     #145                // Field VMRANGES:[Ljava/lang/String;
      55: iconst_1
      56: ldc           #246                // String 0...%.1fe%d
      58: iconst_2
      59: anewarray     #4                  // class java/lang/Object
      62: dup
      63: iconst_0
      64: dconst_1
      65: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      68: aastore
      69: dup
      70: iconst_1
      71: bipush        -9
      73: invokestatic  #140                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: aastore
      77: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      80: aastore
      81: getstatic     #145                // Field VMRANGES:[Ljava/lang/String;
      84: iconst_2
      85: ldc           #248                // String %.1fe%d...+Inf
      87: iconst_2
      88: anewarray     #4                  // class java/lang/Object
      91: dup
      92: iconst_0
      93: dconst_1
      94: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      97: aastore
      98: dup
      99: iconst_1
     100: bipush        18
     102: invokestatic  #140                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     105: aastore
     106: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     109: aastore
     110: sipush        489
     113: newarray       double
     115: putstatic     #160                // Field UPPER_BOUNDS:[D
     118: getstatic     #160                // Field UPPER_BOUNDS:[D
     121: iconst_0
     122: dconst_0
     123: dastore
     124: getstatic     #160                // Field UPPER_BOUNDS:[D
     127: iconst_1
     128: getstatic     #250                // Field java/math/BigDecimal.TEN:Ljava/math/BigDecimal;
     131: bipush        -9
     133: getstatic     #256                // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
     136: invokevirtual #262                // Method java/math/BigDecimal.pow:(ILjava/math/MathContext;)Ljava/math/BigDecimal;
     139: invokevirtual #265                // Method java/math/BigDecimal.doubleValue:()D
     142: dastore
     143: getstatic     #160                // Field UPPER_BOUNDS:[D
     146: iconst_2
     147: ldc2_w        #105                // double Infinityd
     150: dastore
     151: iconst_3
     152: istore_0
     153: ldc_w         #268                // String %.1fe%d
     156: iconst_2
     157: anewarray     #4                  // class java/lang/Object
     160: dup
     161: iconst_0
     162: dconst_1
     163: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     166: aastore
     167: dup
     168: iconst_1
     169: bipush        -9
     171: invokestatic  #140                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     174: aastore
     175: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     178: astore_1
     179: iconst_0
     180: istore_2
     181: iload_2
     182: bipush        27
     184: if_icmpge     345
     187: iconst_0
     188: istore_3
     189: iload_3
     190: bipush        18
     192: if_icmpge     339
     195: bipush        -9
     197: iload_2
     198: iadd
     199: istore        4
     201: dconst_1
     202: iload_3
     203: iconst_1
     204: iadd
     205: i2d
     206: ldc2_w        #136                // double 2.0d
     209: ddiv
     210: dadd
     211: dstore        5
     213: dload         5
     215: ldc2_w        #122                // double 10.0d
     218: dsub
     219: invokestatic  #128                // Method java/lang/Math.abs:(D)D
     222: ldc2_w        #131                // double 0.005d
     225: dcmpg
     226: ifge          235
     229: dconst_1
     230: dstore        5
     232: iinc          4, 1
     235: ldc_w         #268                // String %.1fe%d
     238: iconst_2
     239: anewarray     #4                  // class java/lang/Object
     242: dup
     243: iconst_0
     244: dload         5
     246: invokestatic  #88                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     249: aastore
     250: dup
     251: iconst_1
     252: iload         4
     254: invokestatic  #140                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     257: aastore
     258: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     261: astore        7
     263: getstatic     #145                // Field VMRANGES:[Ljava/lang/String;
     266: iload_0
     267: new           #270                // class java/lang/StringBuilder
     270: dup
     271: invokespecial #272                // Method java/lang/StringBuilder."<init>":()V
     274: aload_1
     275: invokevirtual #273                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: ldc_w         #277                // String ...
     281: invokevirtual #273                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: aload         7
     286: invokevirtual #273                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     292: aastore
     293: getstatic     #160                // Field UPPER_BOUNDS:[D
     296: iload_0
     297: dload         5
     299: invokestatic  #283                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
     302: iconst_1
     303: getstatic     #286                // Field java/math/RoundingMode.HALF_UP:Ljava/math/RoundingMode;
     306: invokevirtual #292                // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
     309: getstatic     #250                // Field java/math/BigDecimal.TEN:Ljava/math/BigDecimal;
     312: iload         4
     314: getstatic     #256                // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
     317: invokevirtual #262                // Method java/math/BigDecimal.pow:(ILjava/math/MathContext;)Ljava/math/BigDecimal;
     320: invokevirtual #296                // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
     323: invokevirtual #265                // Method java/math/BigDecimal.doubleValue:()D
     326: dastore
     327: iinc          0, 1
     330: aload         7
     332: astore_1
     333: iinc          3, 1
     336: goto          189
     339: iinc          2, 1
     342: goto          181
     345: return
}
