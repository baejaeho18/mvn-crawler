Compiled from "MeterRegistry.java"
public class io.micrometer.core.instrument.MeterRegistry$Config {
  final io.micrometer.core.instrument.MeterRegistry this$0;

  public io.micrometer.core.instrument.MeterRegistry$Config(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       5: aload_0
       6: invokespecial #7                  // Method java/lang/Object."<init>":()V
       9: return

  public io.micrometer.core.instrument.MeterRegistry$Config commonTags(java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.commonTags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/config/MeterFilter;
       5: invokevirtual #19                 // Method meterFilter:(Lio/micrometer/core/instrument/config/MeterFilter;)Lio/micrometer/core/instrument/MeterRegistry$Config;
       8: areturn

  public io.micrometer.core.instrument.MeterRegistry$Config commonTags(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       5: invokevirtual #29                 // Method commonTags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry$Config;
       8: areturn

  public synchronized io.micrometer.core.instrument.MeterRegistry$Config meterFilter(io.micrometer.core.instrument.config.MeterFilter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #32                 // Method io/micrometer/core/instrument/MeterRegistry.access$000:(Lio/micrometer/core/instrument/MeterRegistry;)[Lio/micrometer/core/instrument/config/MeterFilter;
       7: arraylength
       8: iconst_1
       9: iadd
      10: anewarray     #14                 // class io/micrometer/core/instrument/config/MeterFilter
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
      18: invokestatic  #32                 // Method io/micrometer/core/instrument/MeterRegistry.access$000:(Lio/micrometer/core/instrument/MeterRegistry;)[Lio/micrometer/core/instrument/config/MeterFilter;
      21: iconst_0
      22: aload_2
      23: iconst_0
      24: aload_0
      25: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
      28: invokestatic  #32                 // Method io/micrometer/core/instrument/MeterRegistry.access$000:(Lio/micrometer/core/instrument/MeterRegistry;)[Lio/micrometer/core/instrument/config/MeterFilter;
      31: arraylength
      32: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: aload_2
      36: aload_0
      37: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
      40: invokestatic  #32                 // Method io/micrometer/core/instrument/MeterRegistry.access$000:(Lio/micrometer/core/instrument/MeterRegistry;)[Lio/micrometer/core/instrument/config/MeterFilter;
      43: arraylength
      44: aload_1
      45: aastore
      46: aload_0
      47: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
      50: aload_2
      51: invokestatic  #44                 // Method io/micrometer/core/instrument/MeterRegistry.access$002:(Lio/micrometer/core/instrument/MeterRegistry;[Lio/micrometer/core/instrument/config/MeterFilter;)[Lio/micrometer/core/instrument/config/MeterFilter;
      54: pop
      55: aload_0
      56: areturn

  public io.micrometer.core.instrument.MeterRegistry$Config onMeterAdded(java.util.function.Consumer<io.micrometer.core.instrument.Meter>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #48                 // Method io/micrometer/core/instrument/MeterRegistry.access$100:(Lio/micrometer/core/instrument/MeterRegistry;)Ljava/util/List;
       7: aload_1
       8: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: areturn

  public io.micrometer.core.instrument.MeterRegistry$Config onMeterRemoved(java.util.function.Consumer<io.micrometer.core.instrument.Meter>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #58                 // Method io/micrometer/core/instrument/MeterRegistry.access$200:(Lio/micrometer/core/instrument/MeterRegistry;)Ljava/util/List;
       7: aload_1
       8: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: areturn

  public io.micrometer.core.instrument.MeterRegistry$Config namingConvention(io.micrometer.core.instrument.config.NamingConvention);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: aload_1
       5: invokestatic  #61                 // Method io/micrometer/core/instrument/MeterRegistry.access$302:(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/config/NamingConvention;)Lio/micrometer/core/instrument/config/NamingConvention;
       8: pop
       9: aload_0
      10: areturn

  public io.micrometer.core.instrument.config.NamingConvention namingConvention();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #65                 // Method io/micrometer/core/instrument/MeterRegistry.access$300:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/config/NamingConvention;
       7: areturn

  public io.micrometer.core.instrument.Clock clock();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: getfield      #69                 // Field io/micrometer/core/instrument/MeterRegistry.clock:Lio/micrometer/core/instrument/Clock;
       7: areturn

  public io.micrometer.core.instrument.MeterRegistry$Config pauseDetector(io.micrometer.core.instrument.distribution.pause.PauseDetector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: aload_1
       5: invokestatic  #73                 // Method io/micrometer/core/instrument/MeterRegistry.access$402:(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Lio/micrometer/core/instrument/distribution/pause/PauseDetector;
       8: pop
       9: aload_0
      10: areturn

  public io.micrometer.core.instrument.distribution.pause.PauseDetector pauseDetector();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #77                 // Method io/micrometer/core/instrument/MeterRegistry.access$400:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/pause/PauseDetector;
       7: areturn
}
