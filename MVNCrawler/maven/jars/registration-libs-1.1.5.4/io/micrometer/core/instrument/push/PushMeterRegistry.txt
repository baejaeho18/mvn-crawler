Compiled from "PushMeterRegistry.java"
public abstract class io.micrometer.core.instrument.push.PushMeterRegistry extends io.micrometer.core.instrument.MeterRegistry {
  private static final io.micrometer.core.util.internal.logging.InternalLogger logger;

  private final io.micrometer.core.instrument.push.PushRegistryConfig config;

  private java.util.concurrent.ScheduledExecutorService scheduledExecutorService;

  protected io.micrometer.core.instrument.push.PushMeterRegistry(io.micrometer.core.instrument.push.PushRegistryConfig, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method io/micrometer/core/instrument/MeterRegistry."<init>":(Lio/micrometer/core/instrument/Clock;)V
       5: aload_0
       6: aload_1
       7: putfield      #7                  // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      10: return

  protected abstract void publish();

  private void publishSafely();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method publish:()V
       4: goto          42
       7: astore_1
       8: getstatic     #19                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
      11: new           #23                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #27                 // String Unexpected exception thrown while publishing metrics for
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #39                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: aload_1
      37: invokeinterface #48,  3           // InterfaceMethod io/micrometer/core/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  public final void start();
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: invokevirtual #60                 // Method start:(Ljava/util/concurrent/ThreadFactory;)V
       7: return

  public void start(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #64                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        11
       7: aload_0
       8: invokevirtual #68                 // Method stop:()V
      11: aload_0
      12: getfield      #7                  // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      15: invokeinterface #71,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.enabled:()Z
      20: ifeq          127
      23: getstatic     #19                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
      26: new           #23                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #77                 // String publishing metrics for
      35: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #39                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #79                 // String  every
      50: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #7                  // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      57: invokeinterface #81,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.step:()Ljava/time/Duration;
      62: invokestatic  #85                 // Method io/micrometer/core/instrument/util/TimeUtils.format:(Ljava/time/Duration;)Ljava/lang/String;
      65: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #91,  2           // InterfaceMethod io/micrometer/core/util/internal/logging/InternalLogger.info:(Ljava/lang/String;)V
      76: aload_0
      77: aload_1
      78: invokestatic  #95                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      81: putfield      #64                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      84: aload_0
      85: getfield      #64                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      88: aload_0
      89: invokedynamic #99,  0             // InvokeDynamic #0:run:(Lio/micrometer/core/instrument/push/PushMeterRegistry;)Ljava/lang/Runnable;
      94: aload_0
      95: getfield      #7                  // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      98: invokeinterface #81,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.step:()Ljava/time/Duration;
     103: invokevirtual #103                // Method java/time/Duration.toMillis:()J
     106: aload_0
     107: getfield      #7                  // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
     110: invokeinterface #81,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.step:()Ljava/time/Duration;
     115: invokevirtual #103                // Method java/time/Duration.toMillis:()J
     118: getstatic     #109                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     121: invokeinterface #115,  7          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     126: pop
     127: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #64                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        21
       7: aload_0
       8: getfield      #64                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      11: invokeinterface #121,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      16: aload_0
      17: aconst_null
      18: putfield      #64                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      21: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
       4: invokeinterface #71,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.enabled:()Z
       9: ifeq          16
      12: aload_0
      13: invokespecial #124                // Method publishSafely:()V
      16: aload_0
      17: invokevirtual #68                 // Method stop:()V
      20: aload_0
      21: invokespecial #127                // Method io/micrometer/core/instrument/MeterRegistry.close:()V
      24: return

  static {};
    Code:
       0: ldc           #8                  // class io/micrometer/core/instrument/push/PushMeterRegistry
       2: invokestatic  #130                // Method io/micrometer/core/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/micrometer/core/util/internal/logging/InternalLogger;
       5: putstatic     #19                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
       8: return
}
