Compiled from "CompositeDistributionSummary.java"
class io.micrometer.core.instrument.composite.CompositeDistributionSummary extends io.micrometer.core.instrument.composite.AbstractCompositeMeter<io.micrometer.core.instrument.DistributionSummary> implements io.micrometer.core.instrument.DistributionSummary {
  private final io.micrometer.core.instrument.distribution.DistributionStatisticConfig distributionStatisticConfig;

  private final double scale;

  io.micrometer.core.instrument.composite.CompositeDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/micrometer/core/instrument/composite/AbstractCompositeMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      10: aload_0
      11: dload_3
      12: putfield      #13                 // Field scale:D
      15: return

  public void record(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokedynamic #17,  0             // InvokeDynamic #0:accept:(D)Ljava/util/function/Consumer;
       7: invokevirtual #21                 // Method forEachChild:(Ljava/util/function/Consumer;)V
      10: return

  public long count();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #29                 // class io/micrometer/core/instrument/DistributionSummary
       7: invokeinterface #31,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.count:()J
      12: lreturn

  public double totalAmount();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #29                 // class io/micrometer/core/instrument/DistributionSummary
       7: invokeinterface #35,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.totalAmount:()D
      12: dreturn

  public double max();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #29                 // class io/micrometer/core/instrument/DistributionSummary
       7: invokeinterface #39,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.max:()D
      12: dreturn

  public io.micrometer.core.instrument.distribution.HistogramSnapshot takeSnapshot();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #29                 // class io/micrometer/core/instrument/DistributionSummary
       7: invokeinterface #42,  1           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.takeSnapshot:()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
      12: areturn

  io.micrometer.core.instrument.DistributionSummary newNoopMeter();
    Code:
       0: new           #46                 // class io/micrometer/core/instrument/noop/NoopDistributionSummary
       3: dup
       4: aload_0
       5: invokevirtual #48                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       8: invokespecial #52                 // Method io/micrometer/core/instrument/noop/NoopDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
      11: areturn

  io.micrometer.core.instrument.DistributionSummary registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       4: invokevirtual #53                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
       7: invokestatic  #59                 // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      10: aload_0
      11: invokevirtual #48                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      14: invokevirtual #63                 // Method io/micrometer/core/instrument/Meter$Id.getTagsAsIterable:()Ljava/lang/Iterable;
      17: invokevirtual #67                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      20: aload_0
      21: invokevirtual #48                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      24: invokevirtual #73                 // Method io/micrometer/core/instrument/Meter$Id.getDescription:()Ljava/lang/String;
      27: invokevirtual #76                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      30: aload_0
      31: invokevirtual #48                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      34: invokevirtual #79                 // Method io/micrometer/core/instrument/Meter$Id.getBaseUnit:()Ljava/lang/String;
      37: invokevirtual #82                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      40: aload_0
      41: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      44: invokevirtual #85                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getPercentiles:()[D
      47: invokevirtual #91                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.publishPercentiles:([D)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      50: aload_0
      51: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      54: invokevirtual #95                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.isPercentileHistogram:()Ljava/lang/Boolean;
      57: invokevirtual #99                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.publishPercentileHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      60: aload_0
      61: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      64: invokevirtual #103                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getMaximumExpectedValueAsDouble:()Ljava/lang/Double;
      67: invokevirtual #107                // Method io/micrometer/core/instrument/DistributionSummary$Builder.maximumExpectedValue:(Ljava/lang/Double;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      70: aload_0
      71: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      74: invokevirtual #111                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getMinimumExpectedValueAsDouble:()Ljava/lang/Double;
      77: invokevirtual #114                // Method io/micrometer/core/instrument/DistributionSummary$Builder.minimumExpectedValue:(Ljava/lang/Double;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      80: aload_0
      81: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      84: invokevirtual #117                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getBufferLength:()Ljava/lang/Integer;
      87: invokevirtual #121                // Method io/micrometer/core/instrument/DistributionSummary$Builder.distributionStatisticBufferLength:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      90: aload_0
      91: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      94: invokevirtual #125                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getExpiry:()Ljava/time/Duration;
      97: invokevirtual #129                // Method io/micrometer/core/instrument/DistributionSummary$Builder.distributionStatisticExpiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     100: aload_0
     101: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     104: invokevirtual #133                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getPercentilePrecision:()Ljava/lang/Integer;
     107: invokevirtual #136                // Method io/micrometer/core/instrument/DistributionSummary$Builder.percentilePrecision:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     110: aload_0
     111: getfield      #7                  // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     114: invokevirtual #139                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getServiceLevelObjectiveBoundaries:()[D
     117: invokevirtual #142                // Method io/micrometer/core/instrument/DistributionSummary$Builder.sla:([D)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     120: aload_0
     121: getfield      #13                 // Field scale:D
     124: invokevirtual #145                // Method io/micrometer/core/instrument/DistributionSummary$Builder.scale:(D)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     127: aload_1
     128: invokevirtual #148                // Method io/micrometer/core/instrument/DistributionSummary$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
     131: areturn

  io.micrometer.core.instrument.Meter registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #152                // Method registerNewMeter:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
       5: areturn

  io.micrometer.core.instrument.Meter newNoopMeter();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method newNoopMeter:()Lio/micrometer/core/instrument/DistributionSummary;
       4: areturn

  private static void lambda$record$0(double, io.micrometer.core.instrument.DistributionSummary);
    Code:
       0: aload_2
       1: dload_0
       2: invokeinterface #159,  3          // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.record:(D)V
       7: return
}
