Compiled from "TimeWindowPercentileHistogram.java"
public class io.micrometer.core.instrument.distribution.TimeWindowPercentileHistogram extends io.micrometer.core.instrument.distribution.AbstractTimeWindowHistogram<org.HdrHistogram.DoubleRecorder, org.HdrHistogram.DoubleHistogram> {
  private final org.HdrHistogram.DoubleHistogram intervalHistogram;

  public io.micrometer.core.instrument.distribution.TimeWindowPercentileHistogram(io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // class org/HdrHistogram/DoubleRecorder
       5: iload_3
       6: invokespecial #3                  // Method io/micrometer/core/instrument/distribution/AbstractTimeWindowHistogram."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Ljava/lang/Class;Z)V
       9: aload_0
      10: new           #9                  // class org/HdrHistogram/DoubleHistogram
      13: dup
      14: aload_0
      15: aload_2
      16: invokespecial #11                 // Method percentilePrecision:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)I
      19: invokespecial #17                 // Method org/HdrHistogram/DoubleHistogram."<init>":(I)V
      22: putfield      #20                 // Field intervalHistogram:Lorg/HdrHistogram/DoubleHistogram;
      25: aload_0
      26: invokevirtual #24                 // Method initRingBuffer:()V
      29: return

  org.HdrHistogram.DoubleRecorder newBucket();
    Code:
       0: new           #1                  // class org/HdrHistogram/DoubleRecorder
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #28                 // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
       9: invokespecial #11                 // Method percentilePrecision:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)I
      12: invokespecial #32                 // Method org/HdrHistogram/DoubleRecorder."<init>":(I)V
      15: areturn

  void recordDouble(org.HdrHistogram.DoubleRecorder, double);
    Code:
       0: aload_1
       1: dload_2
       2: invokevirtual #33                 // Method org/HdrHistogram/DoubleRecorder.recordValue:(D)V
       5: return

  void recordLong(org.HdrHistogram.DoubleRecorder, long);
    Code:
       0: aload_1
       1: lload_2
       2: l2d
       3: invokevirtual #33                 // Method org/HdrHistogram/DoubleRecorder.recordValue:(D)V
       6: return

  void resetBucket(org.HdrHistogram.DoubleRecorder);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method org/HdrHistogram/DoubleRecorder.reset:()V
       4: return

  org.HdrHistogram.DoubleHistogram newAccumulatedHistogram(org.HdrHistogram.DoubleRecorder[]);
    Code:
       0: new           #9                  // class org/HdrHistogram/DoubleHistogram
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #28                 // Field distributionStatisticConfig:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
       9: invokespecial #11                 // Method percentilePrecision:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)I
      12: invokespecial #17                 // Method org/HdrHistogram/DoubleHistogram."<init>":(I)V
      15: areturn

  void accumulate();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method currentHistogram:()Ljava/lang/Object;
       4: checkcast     #1                  // class org/HdrHistogram/DoubleRecorder
       7: aload_0
       8: getfield      #20                 // Field intervalHistogram:Lorg/HdrHistogram/DoubleHistogram;
      11: invokevirtual #44                 // Method org/HdrHistogram/DoubleRecorder.getIntervalHistogramInto:(Lorg/HdrHistogram/DoubleHistogram;)V
      14: aload_0
      15: invokevirtual #48                 // Method accumulatedHistogram:()Ljava/lang/Object;
      18: checkcast     #9                  // class org/HdrHistogram/DoubleHistogram
      21: aload_0
      22: getfield      #20                 // Field intervalHistogram:Lorg/HdrHistogram/DoubleHistogram;
      25: invokevirtual #51                 // Method org/HdrHistogram/DoubleHistogram.add:(Lorg/HdrHistogram/DoubleHistogram;)V
      28: return

  void resetAccumulatedHistogram();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method accumulatedHistogram:()Ljava/lang/Object;
       4: checkcast     #9                  // class org/HdrHistogram/DoubleHistogram
       7: invokevirtual #54                 // Method org/HdrHistogram/DoubleHistogram.reset:()V
      10: return

  double valueAtPercentile(double);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method accumulatedHistogram:()Ljava/lang/Object;
       4: checkcast     #9                  // class org/HdrHistogram/DoubleHistogram
       7: dload_1
       8: invokevirtual #55                 // Method org/HdrHistogram/DoubleHistogram.getValueAtPercentile:(D)D
      11: dreturn

  double countAtValue(double);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method accumulatedHistogram:()Ljava/lang/Object;
       4: checkcast     #9                  // class org/HdrHistogram/DoubleHistogram
       7: dconst_0
       8: dload_1
       9: invokevirtual #59                 // Method org/HdrHistogram/DoubleHistogram.getCountBetweenValues:(DD)D
      12: dreturn

  private int percentilePrecision(io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getPercentilePrecision:()Ljava/lang/Integer;
       4: ifnonnull     11
       7: iconst_1
       8: goto          18
      11: aload_1
      12: invokevirtual #63                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getPercentilePrecision:()Ljava/lang/Integer;
      15: invokevirtual #69                 // Method java/lang/Integer.intValue:()I
      18: ireturn

  void outputSummary(java.io.PrintStream, double);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method accumulatedHistogram:()Ljava/lang/Object;
       4: checkcast     #9                  // class org/HdrHistogram/DoubleHistogram
       7: aload_1
       8: dload_2
       9: invokestatic  #75                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      12: invokevirtual #81                 // Method org/HdrHistogram/DoubleHistogram.outputPercentileDistribution:(Ljava/io/PrintStream;Ljava/lang/Double;)V
      15: return

  public void recordDouble(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #85                 // Method io/micrometer/core/instrument/distribution/AbstractTimeWindowHistogram.recordDouble:(D)V
       5: return

  public void recordLong(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #88                 // Method io/micrometer/core/instrument/distribution/AbstractTimeWindowHistogram.recordLong:(J)V
       5: return

  java.lang.Object newAccumulatedHistogram(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #92                 // class "[Lorg/HdrHistogram/DoubleRecorder;"
       5: invokevirtual #94                 // Method newAccumulatedHistogram:([Lorg/HdrHistogram/DoubleRecorder;)Lorg/HdrHistogram/DoubleHistogram;
       8: areturn

  void resetBucket(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class org/HdrHistogram/DoubleRecorder
       5: invokevirtual #98                 // Method resetBucket:(Lorg/HdrHistogram/DoubleRecorder;)V
       8: return

  void recordDouble(java.lang.Object, double);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class org/HdrHistogram/DoubleRecorder
       5: dload_2
       6: invokevirtual #102                // Method recordDouble:(Lorg/HdrHistogram/DoubleRecorder;D)V
       9: return

  void recordLong(java.lang.Object, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class org/HdrHistogram/DoubleRecorder
       5: lload_2
       6: invokevirtual #105                // Method recordLong:(Lorg/HdrHistogram/DoubleRecorder;J)V
       9: return

  java.lang.Object newBucket();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method newBucket:()Lorg/HdrHistogram/DoubleRecorder;
       4: areturn
}
