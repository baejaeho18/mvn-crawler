Compiled from "TimedScheduledExecutorService.java"
public class io.micrometer.core.instrument.internal.TimedScheduledExecutorService implements java.util.concurrent.ScheduledExecutorService {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final java.util.concurrent.ScheduledExecutorService delegate;

  private final io.micrometer.core.instrument.Timer executionTimer;

  private final io.micrometer.core.instrument.Timer idleTimer;

  private final io.micrometer.core.instrument.Counter scheduledOnce;

  private final io.micrometer.core.instrument.Counter scheduledRepetitively;

  public io.micrometer.core.instrument.internal.TimedScheduledExecutorService(io.micrometer.core.instrument.MeterRegistry, java.util.concurrent.ScheduledExecutorService, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
      14: aload         4
      16: iconst_2
      17: anewarray     #17                 // class java/lang/String
      20: dup
      21: iconst_0
      22: ldc           #19                 // String name
      24: aastore
      25: dup
      26: iconst_1
      27: aload_3
      28: aastore
      29: invokestatic  #21                 // Method io/micrometer/core/instrument/Tags.concat:(Ljava/lang/Iterable;[Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
      32: astore        5
      34: aload_0
      35: aload_1
      36: ldc           #27                 // String executor
      38: aload         5
      40: invokevirtual #29                 // Method io/micrometer/core/instrument/MeterRegistry.timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
      43: putfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      46: aload_0
      47: aload_1
      48: ldc           #39                 // String executor.idle
      50: aload         5
      52: invokevirtual #29                 // Method io/micrometer/core/instrument/MeterRegistry.timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
      55: putfield      #41                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      58: aload_0
      59: aload_1
      60: ldc           #44                 // String executor.scheduled.once
      62: aload         5
      64: invokevirtual #46                 // Method io/micrometer/core/instrument/MeterRegistry.counter:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
      67: putfield      #50                 // Field scheduledOnce:Lio/micrometer/core/instrument/Counter;
      70: aload_0
      71: aload_1
      72: ldc           #54                 // String executor.scheduled.repetitively
      74: aload         5
      76: invokevirtual #46                 // Method io/micrometer/core/instrument/MeterRegistry.counter:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
      79: putfield      #56                 // Field scheduledRepetitively:Lio/micrometer/core/instrument/Counter;
      82: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #59,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
       9: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
       9: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isShutdown:()Z
       9: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isTerminated:()Z
       9: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: lload_1
       5: aload_3
       6: invokeinterface #75,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #79                 // Method wrap:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
       9: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      14: areturn

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #87                 // Method wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       9: aload_2
      10: invokeinterface #90,  3           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      15: areturn

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #87                 // Method wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       9: invokeinterface #93,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      14: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #96                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: invokeinterface #100,  2          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      14: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #96                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: lload_2
      10: aload         4
      12: invokeinterface #104,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      17: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #96                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: invokeinterface #107,  2          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      14: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #96                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: lload_2
      10: aload         4
      12: invokeinterface #111,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      17: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #87                 // Method wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       9: invokeinterface #114,  2          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      14: return

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #50                 // Field scheduledOnce:Lio/micrometer/core/instrument/Counter;
       4: invokeinterface #118,  1          // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
       9: aload_0
      10: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
      13: aload_0
      14: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      17: aload_1
      18: invokeinterface #123,  2          // InterfaceMethod io/micrometer/core/instrument/Timer.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
      23: lload_2
      24: aload         4
      26: invokeinterface #126,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      31: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #50                 // Field scheduledOnce:Lio/micrometer/core/instrument/Counter;
       4: invokeinterface #118,  1          // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
       9: aload_0
      10: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
      13: aload_0
      14: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      17: aload_1
      18: invokeinterface #130,  2          // InterfaceMethod io/micrometer/core/instrument/Timer.wrap:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
      23: lload_2
      24: aload         4
      26: invokeinterface #131,  5          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      31: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #56                 // Field scheduledRepetitively:Lio/micrometer/core/instrument/Counter;
       4: invokeinterface #118,  1          // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
       9: aload_0
      10: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
      13: aload_0
      14: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      17: aload_1
      18: invokeinterface #123,  2          // InterfaceMethod io/micrometer/core/instrument/Timer.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
      23: lload_2
      24: lload         4
      26: aload         6
      28: invokeinterface #134,  7          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      33: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #56                 // Field scheduledRepetitively:Lio/micrometer/core/instrument/Counter;
       4: invokeinterface #118,  1          // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
       9: aload_0
      10: getfield      #13                 // Field delegate:Ljava/util/concurrent/ScheduledExecutorService;
      13: aload_0
      14: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      17: aload_1
      18: invokeinterface #123,  2          // InterfaceMethod io/micrometer/core/instrument/Timer.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
      23: lload_2
      24: lload         4
      26: aload         6
      28: invokeinterface #138,  7          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      33: areturn

  private java.lang.Runnable wrap(java.lang.Runnable);
    Code:
       0: new           #141                // class io/micrometer/core/instrument/internal/TimedRunnable
       3: dup
       4: aload_0
       5: getfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       8: aload_0
       9: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      12: aload_0
      13: getfield      #41                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      16: aload_1
      17: invokespecial #143                // Method io/micrometer/core/instrument/internal/TimedRunnable."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Timer;Ljava/lang/Runnable;)V
      20: areturn

  private <T> java.util.concurrent.Callable<T> wrap(java.util.concurrent.Callable<T>);
    Code:
       0: new           #146                // class io/micrometer/core/instrument/internal/TimedCallable
       3: dup
       4: aload_0
       5: getfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       8: aload_0
       9: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      12: aload_0
      13: getfield      #41                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      16: aload_1
      17: invokespecial #148                // Method io/micrometer/core/instrument/internal/TimedCallable."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Timer;Ljava/util/concurrent/Callable;)V
      20: areturn

  private <T> java.util.Collection<? extends java.util.concurrent.Callable<T>> wrapAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>);
    Code:
       0: aload_1
       1: invokeinterface #151,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: aload_0
       7: invokedynamic #157,  0            // InvokeDynamic #0:apply:(Lio/micrometer/core/instrument/internal/TimedScheduledExecutorService;)Ljava/util/function/Function;
      12: invokeinterface #161,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: invokestatic  #167                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      20: invokeinterface #173,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #152                // class java/util/Collection
      28: areturn
}
