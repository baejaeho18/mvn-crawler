Compiled from "MongoMetricsCommandListener.java"
public class io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener implements com.mongodb.event.CommandListener {
  private final io.micrometer.core.instrument.Timer$Builder timerBuilder;

  private final io.micrometer.core.instrument.MeterRegistry registry;

  public io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #7                  // String mongodb.driver.commands
       7: invokestatic  #9                  // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      10: ldc           #15                 // String Timer of mongodb commands
      12: invokevirtual #17                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      15: putfield      #22                 // Field timerBuilder:Lio/micrometer/core/instrument/Timer$Builder;
      18: aload_0
      19: aload_1
      20: putfield      #28                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      23: return

  public void commandStarted(com.mongodb.event.CommandStartedEvent);
    Code:
       0: return

  public void commandSucceeded(com.mongodb.event.CommandSucceededEvent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #32                 // String SUCCESS
       4: aload_1
       5: getstatic     #34                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #40                 // Method com/mongodb/event/CommandSucceededEvent.getElapsedTime:(Ljava/util/concurrent/TimeUnit;)J
      11: invokespecial #46                 // Method timeCommand:(Lcom/mongodb/event/CommandEvent;Ljava/lang/String;J)V
      14: return

  public void commandFailed(com.mongodb.event.CommandFailedEvent);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #50                 // String FAILED
       4: aload_1
       5: getstatic     #34                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #52                 // Method com/mongodb/event/CommandFailedEvent.getElapsedTime:(Ljava/util/concurrent/TimeUnit;)J
      11: invokespecial #46                 // Method timeCommand:(Lcom/mongodb/event/CommandEvent;Ljava/lang/String;J)V
      14: return

  private void timeCommand(com.mongodb.event.CommandEvent, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #22                 // Field timerBuilder:Lio/micrometer/core/instrument/Timer$Builder;
       4: ldc           #55                 // String command
       6: aload_1
       7: invokevirtual #57                 // Method com/mongodb/event/CommandEvent.getCommandName:()Ljava/lang/String;
      10: invokevirtual #63                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      13: ldc           #67                 // String cluster.id
      15: aload_1
      16: invokevirtual #69                 // Method com/mongodb/event/CommandEvent.getConnectionDescription:()Lcom/mongodb/connection/ConnectionDescription;
      19: invokevirtual #73                 // Method com/mongodb/connection/ConnectionDescription.getConnectionId:()Lcom/mongodb/connection/ConnectionId;
      22: invokevirtual #79                 // Method com/mongodb/connection/ConnectionId.getServerId:()Lcom/mongodb/connection/ServerId;
      25: invokevirtual #85                 // Method com/mongodb/connection/ServerId.getClusterId:()Lcom/mongodb/connection/ClusterId;
      28: invokevirtual #91                 // Method com/mongodb/connection/ClusterId.getValue:()Ljava/lang/String;
      31: invokevirtual #63                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      34: ldc           #96                 // String server.address
      36: aload_1
      37: invokevirtual #69                 // Method com/mongodb/event/CommandEvent.getConnectionDescription:()Lcom/mongodb/connection/ConnectionDescription;
      40: invokevirtual #98                 // Method com/mongodb/connection/ConnectionDescription.getServerAddress:()Lcom/mongodb/ServerAddress;
      43: invokevirtual #102                // Method com/mongodb/ServerAddress.toString:()Ljava/lang/String;
      46: invokevirtual #63                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      49: ldc           #107                // String status
      51: aload_2
      52: invokevirtual #63                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      55: aload_0
      56: getfield      #28                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      59: invokevirtual #109                // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      62: lload_3
      63: getstatic     #34                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      66: invokeinterface #113,  4          // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      71: return
}
