Compiled from "TimeWindowSum.java"
public class io.micrometer.core.instrument.distribution.TimeWindowSum {
  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.micrometer.core.instrument.distribution.TimeWindowSum> rotatingUpdater;

  private final long durationBetweenRotatesMillis;

  private java.util.concurrent.atomic.AtomicLong[] ringBuffer;

  private int currentBucket;

  private volatile long lastRotateTimestampMillis;

  private volatile int rotating;

  public io.micrometer.core.instrument.distribution.TimeWindowSum(int, java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field rotating:I
       9: aload_0
      10: aload_2
      11: invokevirtual #13                 // Method java/time/Duration.toMillis:()J
      14: putfield      #19                 // Field durationBetweenRotatesMillis:J
      17: aload_0
      18: invokestatic  #23                 // Method java/lang/System.currentTimeMillis:()J
      21: putfield      #28                 // Field lastRotateTimestampMillis:J
      24: aload_0
      25: iconst_0
      26: putfield      #31                 // Field currentBucket:I
      29: aload_0
      30: iload_1
      31: anewarray     #34                 // class java/util/concurrent/atomic/AtomicLong
      34: putfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
      37: iconst_0
      38: istore_3
      39: iload_3
      40: iload_1
      41: if_icmpge     63
      44: aload_0
      45: getfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
      48: iload_3
      49: new           #34                 // class java/util/concurrent/atomic/AtomicLong
      52: dup
      53: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      56: aastore
      57: iinc          3, 1
      60: goto          39
      63: return

  public void record(long);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method rotate:()V
       4: aload_0
       5: getfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     42
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: aload         6
      31: lload_1
      32: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      35: pop2
      36: iinc          5, 1
      39: goto          16
      42: return

  public double poll();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method rotate:()V
       4: aload_0
       5: dup
       6: astore_1
       7: monitorenter
       8: aload_0
       9: getfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
      12: aload_0
      13: getfield      #31                 // Field currentBucket:I
      16: aaload
      17: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      20: l2d
      21: aload_1
      22: monitorexit
      23: dreturn
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           8    23    24   any
          24    27    24   any

  private void rotate();
    Code:
       0: invokestatic  #23                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #28                 // Field lastRotateTimestampMillis:J
       7: lsub
       8: lstore_1
       9: lload_1
      10: aload_0
      11: getfield      #19                 // Field durationBetweenRotatesMillis:J
      14: lcmp
      15: ifge          19
      18: return
      19: getstatic     #51                 // Field rotatingUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: aload_0
      23: iconst_0
      24: iconst_1
      25: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      28: ifne          32
      31: return
      32: iconst_0
      33: istore_3
      34: aload_0
      35: dup
      36: astore        4
      38: monitorenter
      39: aload_0
      40: getfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
      43: aload_0
      44: getfield      #31                 // Field currentBucket:I
      47: aaload
      48: lconst_0
      49: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      52: aload_0
      53: dup
      54: getfield      #31                 // Field currentBucket:I
      57: iconst_1
      58: iadd
      59: dup_x1
      60: putfield      #31                 // Field currentBucket:I
      63: aload_0
      64: getfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
      67: arraylength
      68: if_icmplt     76
      71: aload_0
      72: iconst_0
      73: putfield      #31                 // Field currentBucket:I
      76: lload_1
      77: aload_0
      78: getfield      #19                 // Field durationBetweenRotatesMillis:J
      81: lsub
      82: lstore_1
      83: aload_0
      84: dup
      85: getfield      #28                 // Field lastRotateTimestampMillis:J
      88: aload_0
      89: getfield      #19                 // Field durationBetweenRotatesMillis:J
      92: ladd
      93: putfield      #28                 // Field lastRotateTimestampMillis:J
      96: lload_1
      97: aload_0
      98: getfield      #19                 // Field durationBetweenRotatesMillis:J
     101: lcmp
     102: iflt          117
     105: iinc          3, 1
     108: iload_3
     109: aload_0
     110: getfield      #36                 // Field ringBuffer:[Ljava/util/concurrent/atomic/AtomicLong;
     113: arraylength
     114: if_icmplt     39
     117: aload         4
     119: monitorexit
     120: goto          131
     123: astore        5
     125: aload         4
     127: monitorexit
     128: aload         5
     130: athrow
     131: aload_0
     132: iconst_0
     133: putfield      #7                  // Field rotating:I
     136: goto          149
     139: astore        6
     141: aload_0
     142: iconst_0
     143: putfield      #7                  // Field rotating:I
     146: aload         6
     148: athrow
     149: return
    Exception table:
       from    to  target type
          39   120   123   any
         123   128   123   any
          32   131   139   any
         139   141   139   any

  static {};
    Code:
       0: ldc           #8                  // class io/micrometer/core/instrument/distribution/TimeWindowSum
       2: ldc           #65                 // String rotating
       4: invokestatic  #66                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #51                 // Field rotatingUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
