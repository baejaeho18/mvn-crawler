Compiled from "DefaultMeter.java"
public class io.micrometer.core.instrument.internal.DefaultMeter extends io.micrometer.core.instrument.AbstractMeter {
  private final io.micrometer.core.instrument.Meter$Type type;

  private final java.lang.Iterable<io.micrometer.core.instrument.Measurement> measurements;

  public io.micrometer.core.instrument.internal.DefaultMeter(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Type, java.lang.Iterable<io.micrometer.core.instrument.Measurement>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field type:Lio/micrometer/core/instrument/Meter$Type;
      10: aload_0
      11: aload_3
      12: putfield      #13                 // Field measurements:Ljava/lang/Iterable;
      15: return

  public java.lang.Iterable<io.micrometer.core.instrument.Measurement> measure();
    Code:
       0: aload_0
       1: getfield      #13                 // Field measurements:Ljava/lang/Iterable;
       4: areturn

  public io.micrometer.core.instrument.Meter$Type getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Lio/micrometer/core/instrument/Meter$Type;
       4: areturn
}
