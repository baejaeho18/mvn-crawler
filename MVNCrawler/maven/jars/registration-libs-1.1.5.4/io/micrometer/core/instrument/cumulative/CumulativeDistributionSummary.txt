Compiled from "CumulativeDistributionSummary.java"
public class io.micrometer.core.instrument.cumulative.CumulativeDistributionSummary extends io.micrometer.core.instrument.AbstractDistributionSummary {
  private final java.util.concurrent.atomic.AtomicLong count;

  private final java.util.concurrent.atomic.DoubleAdder total;

  private final io.micrometer.core.instrument.distribution.TimeWindowMax max;

  public io.micrometer.core.instrument.cumulative.CumulativeDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: dload         4
       6: iconst_0
       7: invokespecial #1                  // Method "<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
      10: return

  public io.micrometer.core.instrument.cumulative.CumulativeDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: dload         4
       6: iload         6
       8: invokespecial #7                  // Method io/micrometer/core/instrument/AbstractDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
      11: aload_0
      12: new           #10                 // class java/util/concurrent/atomic/AtomicLong
      15: dup
      16: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      19: putfield      #15                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      22: aload_0
      23: new           #19                 // class java/util/concurrent/atomic/DoubleAdder
      26: dup
      27: invokespecial #21                 // Method java/util/concurrent/atomic/DoubleAdder."<init>":()V
      30: putfield      #22                 // Field total:Ljava/util/concurrent/atomic/DoubleAdder;
      33: aload_0
      34: new           #26                 // class io/micrometer/core/instrument/distribution/TimeWindowMax
      37: dup
      38: aload_2
      39: aload_3
      40: invokespecial #28                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
      43: putfield      #31                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      46: return

  protected void recordNonNegative(double);
    Code:
       0: aload_0
       1: getfield      #15                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #22                 // Field total:Ljava/util/concurrent/atomic/DoubleAdder;
      12: dload_1
      13: invokevirtual #39                 // Method java/util/concurrent/atomic/DoubleAdder.add:(D)V
      16: aload_0
      17: getfield      #31                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      20: dload_1
      21: invokevirtual #43                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax.record:(D)V
      24: return

  public long count();
    Code:
       0: aload_0
       1: getfield      #15                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public double totalAmount();
    Code:
       0: aload_0
       1: getfield      #22                 // Field total:Ljava/util/concurrent/atomic/DoubleAdder;
       4: invokevirtual #49                 // Method java/util/concurrent/atomic/DoubleAdder.sum:()D
       7: dreturn

  public double max();
    Code:
       0: aload_0
       1: getfield      #31                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
       4: invokevirtual #53                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax.poll:()D
       7: dreturn

  public java.lang.Iterable<io.micrometer.core.instrument.Measurement> measure();
    Code:
       0: iconst_3
       1: anewarray     #56                 // class io/micrometer/core/instrument/Measurement
       4: dup
       5: iconst_0
       6: new           #56                 // class io/micrometer/core/instrument/Measurement
       9: dup
      10: aload_0
      11: invokedynamic #58,  0             // InvokeDynamic #0:get:(Lio/micrometer/core/instrument/cumulative/CumulativeDistributionSummary;)Ljava/util/function/Supplier;
      16: getstatic     #61                 // Field io/micrometer/core/instrument/Statistic.COUNT:Lio/micrometer/core/instrument/Statistic;
      19: invokespecial #67                 // Method io/micrometer/core/instrument/Measurement."<init>":(Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Statistic;)V
      22: aastore
      23: dup
      24: iconst_1
      25: new           #56                 // class io/micrometer/core/instrument/Measurement
      28: dup
      29: aload_0
      30: invokedynamic #70,  0             // InvokeDynamic #1:get:(Lio/micrometer/core/instrument/cumulative/CumulativeDistributionSummary;)Ljava/util/function/Supplier;
      35: getstatic     #71                 // Field io/micrometer/core/instrument/Statistic.TOTAL:Lio/micrometer/core/instrument/Statistic;
      38: invokespecial #67                 // Method io/micrometer/core/instrument/Measurement."<init>":(Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Statistic;)V
      41: aastore
      42: dup
      43: iconst_2
      44: new           #56                 // class io/micrometer/core/instrument/Measurement
      47: dup
      48: aload_0
      49: invokedynamic #74,  0             // InvokeDynamic #2:get:(Lio/micrometer/core/instrument/cumulative/CumulativeDistributionSummary;)Ljava/util/function/Supplier;
      54: getstatic     #75                 // Field io/micrometer/core/instrument/Statistic.MAX:Lio/micrometer/core/instrument/Statistic;
      57: invokespecial #67                 // Method io/micrometer/core/instrument/Measurement."<init>":(Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Statistic;)V
      60: aastore
      61: invokestatic  #78                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      64: areturn

  private java.lang.Double lambda$measure$0();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method count:()J
       4: l2d
       5: invokestatic  #86                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       8: areturn
}
