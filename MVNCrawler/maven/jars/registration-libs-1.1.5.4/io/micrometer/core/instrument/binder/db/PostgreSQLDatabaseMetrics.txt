Compiled from "PostgreSQLDatabaseMetrics.java"
public class io.micrometer.core.instrument.binder.db.PostgreSQLDatabaseMetrics implements io.micrometer.core.instrument.binder.MeterBinder {
  private static final java.lang.String SELECT;

  private static final java.lang.String QUERY_DEAD_TUPLE_COUNT;

  private static final java.lang.String QUERY_TIMED_CHECKPOINTS_COUNT;

  private static final java.lang.String QUERY_REQUESTED_CHECKPOINTS_COUNT;

  private static final java.lang.String QUERY_BUFFERS_CLEAN;

  private static final java.lang.String QUERY_BUFFERS_BACKEND;

  private static final java.lang.String QUERY_BUFFERS_CHECKPOINT;

  private final java.lang.String database;

  private final javax.sql.DataSource postgresDataSource;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> tags;

  private final java.util.Map<java.lang.String, java.lang.Double> beforeResetValuesCacheMap;

  private final java.util.Map<java.lang.String, java.lang.Double> previousValueCacheMap;

  private final java.lang.String queryConnectionCount;

  private final java.lang.String queryReadCount;

  private final java.lang.String queryInsertCount;

  private final java.lang.String queryTempBytes;

  private final java.lang.String queryUpdateCount;

  private final java.lang.String queryDeleteCount;

  private final java.lang.String queryBlockHits;

  private final java.lang.String queryBlockReads;

  private final java.lang.String queryTransactionCount;

  public io.micrometer.core.instrument.binder.db.PostgreSQLDatabaseMetrics(javax.sql.DataSource, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
       6: invokespecial #7                  // Method "<init>":(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/Iterable;)V
       9: return

  public io.micrometer.core.instrument.binder.db.PostgreSQLDatabaseMetrics(javax.sql.DataSource, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
       9: aload_0
      10: aload_2
      11: putfield      #22                 // Field database:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: invokestatic  #26                 // Method io/micrometer/core/instrument/Tags.of:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
      19: iconst_1
      20: anewarray     #30                 // class io/micrometer/core/instrument/Tag
      23: dup
      24: iconst_0
      25: aload_2
      26: invokestatic  #32                 // Method createDbTag:(Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      29: aastore
      30: invokevirtual #36                 // Method io/micrometer/core/instrument/Tags.and:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
      33: putfield      #40                 // Field tags:Ljava/lang/Iterable;
      36: aload_0
      37: new           #44                 // class java/util/concurrent/ConcurrentHashMap
      40: dup
      41: invokespecial #46                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      44: putfield      #47                 // Field beforeResetValuesCacheMap:Ljava/util/Map;
      47: aload_0
      48: new           #44                 // class java/util/concurrent/ConcurrentHashMap
      51: dup
      52: invokespecial #46                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      55: putfield      #51                 // Field previousValueCacheMap:Ljava/util/Map;
      58: aload_0
      59: aload_2
      60: ldc           #54                 // String SUM(numbackends)
      62: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      65: putfield      #60                 // Field queryConnectionCount:Ljava/lang/String;
      68: aload_0
      69: aload_2
      70: ldc           #63                 // String tup_fetched
      72: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      75: putfield      #65                 // Field queryReadCount:Ljava/lang/String;
      78: aload_0
      79: aload_2
      80: ldc           #68                 // String tup_inserted
      82: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      85: putfield      #70                 // Field queryInsertCount:Ljava/lang/String;
      88: aload_0
      89: aload_2
      90: ldc           #73                 // String temp_bytes
      92: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      95: putfield      #75                 // Field queryTempBytes:Ljava/lang/String;
      98: aload_0
      99: aload_2
     100: ldc           #78                 // String tup_updated
     102: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     105: putfield      #80                 // Field queryUpdateCount:Ljava/lang/String;
     108: aload_0
     109: aload_2
     110: ldc           #83                 // String tup_deleted
     112: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     115: putfield      #85                 // Field queryDeleteCount:Ljava/lang/String;
     118: aload_0
     119: aload_2
     120: ldc           #88                 // String blks_hit
     122: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     125: putfield      #90                 // Field queryBlockHits:Ljava/lang/String;
     128: aload_0
     129: aload_2
     130: ldc           #93                 // String blks_read
     132: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     135: putfield      #95                 // Field queryBlockReads:Ljava/lang/String;
     138: aload_0
     139: aload_2
     140: ldc           #98                 // String xact_commit + xact_rollback
     142: invokestatic  #56                 // Method getDBStatQuery:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     145: putfield      #100                // Field queryTransactionCount:Ljava/lang/String;
     148: return

  private static io.micrometer.core.instrument.Tag createDbTag(java.lang.String);
    Code:
       0: ldc           #103                // String database
       2: aload_0
       3: invokestatic  #104                // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
       6: areturn

  public void bindTo(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: ldc           #107                // String postgres.size
       2: aload_0
       3: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
       6: aload_0
       7: invokedynamic #109,  0            // InvokeDynamic #0:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      12: invokestatic  #113                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      15: aload_0
      16: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      19: invokevirtual #119                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      22: ldc           #124                // String The database size
      24: invokevirtual #126                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      27: aload_1
      28: invokevirtual #130                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      31: pop
      32: ldc           #134                // String postgres.connections
      34: aload_0
      35: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
      38: aload_0
      39: invokedynamic #136,  0            // InvokeDynamic #1:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      44: invokestatic  #113                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      47: aload_0
      48: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      51: invokevirtual #119                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      54: ldc           #137                // String Number of active connections to the given db
      56: invokevirtual #126                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      59: aload_1
      60: invokevirtual #130                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      63: pop
      64: ldc           #139                // String postgres.blocks.hits
      66: aload_0
      67: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
      70: aload_0
      71: invokedynamic #141,  0            // InvokeDynamic #2:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      76: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      79: aload_0
      80: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      83: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      86: ldc           #152                // String Number of times disk blocks were found already in the buffer cache, so that a read was not necessary
      88: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      91: aload_1
      92: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      95: pop
      96: ldc           #160                // String postgres.blocks.reads
      98: aload_0
      99: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     102: aload_0
     103: invokedynamic #162,  0            // InvokeDynamic #3:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     108: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     111: aload_0
     112: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     115: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     118: ldc           #163                // String Number of disk blocks read in this database
     120: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     123: aload_1
     124: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     127: pop
     128: ldc           #165                // String postgres.transactions
     130: aload_0
     131: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     134: aload_0
     135: invokedynamic #167,  0            // InvokeDynamic #4:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     140: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     143: aload_0
     144: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     147: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     150: ldc           #168                // String Total number of transactions executed (commits + rollbacks)
     152: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     155: aload_1
     156: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     159: pop
     160: ldc           #170                // String postgres.locks
     162: aload_0
     163: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     166: aload_0
     167: invokedynamic #172,  0            // InvokeDynamic #5:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     172: invokestatic  #113                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     175: aload_0
     176: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     179: invokevirtual #119                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
     182: ldc           #173                // String Number of locks on the given db
     184: invokevirtual #126                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     187: aload_1
     188: invokevirtual #130                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     191: pop
     192: ldc           #175                // String postgres.temp.writes
     194: aload_0
     195: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     198: aload_0
     199: invokedynamic #177,  0            // InvokeDynamic #6:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     204: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     207: aload_0
     208: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     211: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     214: ldc           #178                // String The total amount of temporary writes to disk to execute queries
     216: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     219: ldc           #182                // String bytes
     221: invokevirtual #184                // Method io/micrometer/core/instrument/FunctionCounter$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     224: aload_1
     225: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     228: pop
     229: aload_0
     230: aload_1
     231: invokespecial #187                // Method registerRowCountMetrics:(Lio/micrometer/core/instrument/MeterRegistry;)V
     234: aload_0
     235: aload_1
     236: invokespecial #191                // Method registerCheckpointMetrics:(Lio/micrometer/core/instrument/MeterRegistry;)V
     239: return

  private void registerRowCountMetrics(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: ldc           #194                // String postgres.rows.fetched
       2: aload_0
       3: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
       6: aload_0
       7: invokedynamic #196,  0            // InvokeDynamic #7:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      12: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      15: aload_0
      16: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      19: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      22: ldc           #197                // String Number of rows fetched from the db
      24: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      27: aload_1
      28: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      31: pop
      32: ldc           #199                // String postgres.rows.inserted
      34: aload_0
      35: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
      38: aload_0
      39: invokedynamic #201,  0            // InvokeDynamic #8:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      44: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      47: aload_0
      48: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      51: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      54: ldc           #202                // String Number of rows inserted from the db
      56: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      59: aload_1
      60: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      63: pop
      64: ldc           #204                // String postgres.rows.updated
      66: aload_0
      67: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
      70: aload_0
      71: invokedynamic #206,  0            // InvokeDynamic #9:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      76: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      79: aload_0
      80: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      83: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      86: ldc           #207                // String Number of rows updated from the db
      88: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      91: aload_1
      92: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      95: pop
      96: ldc           #209                // String postgres.rows.deleted
      98: aload_0
      99: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     102: aload_0
     103: invokedynamic #211,  0            // InvokeDynamic #10:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     108: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     111: aload_0
     112: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     115: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     118: ldc           #212                // String Number of rows deleted from the db
     120: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     123: aload_1
     124: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     127: pop
     128: ldc           #214                // String postgres.rows.dead
     130: aload_0
     131: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     134: aload_0
     135: invokedynamic #216,  0            // InvokeDynamic #11:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     140: invokestatic  #113                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     143: aload_0
     144: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     147: invokevirtual #119                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
     150: ldc           #217                // String Total number of dead rows in the current database
     152: invokevirtual #126                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     155: aload_1
     156: invokevirtual #130                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     159: pop
     160: return

  private void registerCheckpointMetrics(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: ldc           #219                // String postgres.checkpoints.timed
       2: aload_0
       3: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
       6: aload_0
       7: invokedynamic #221,  0            // InvokeDynamic #12:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      12: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      15: aload_0
      16: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      19: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      22: ldc           #222                // String Number of checkpoints timed
      24: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      27: aload_1
      28: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      31: pop
      32: ldc           #224                // String postgres.checkpoints.requested
      34: aload_0
      35: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
      38: aload_0
      39: invokedynamic #226,  0            // InvokeDynamic #13:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      44: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      47: aload_0
      48: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      51: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      54: ldc           #227                // String Number of checkpoints requested
      56: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      59: aload_1
      60: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      63: pop
      64: ldc           #229                // String postgres.buffers.checkpoint
      66: aload_0
      67: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
      70: aload_0
      71: invokedynamic #231,  0            // InvokeDynamic #14:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
      76: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      79: aload_0
      80: getfield      #40                 // Field tags:Ljava/lang/Iterable;
      83: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      86: ldc           #232                // String Number of buffers written during checkpoints
      88: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      91: aload_1
      92: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      95: pop
      96: ldc           #234                // String postgres.buffers.clean
      98: aload_0
      99: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     102: aload_0
     103: invokedynamic #236,  0            // InvokeDynamic #15:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     108: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     111: aload_0
     112: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     115: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     118: ldc           #237                // String Number of buffers written by the background writer
     120: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     123: aload_1
     124: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     127: pop
     128: ldc           #239                // String postgres.buffers.backend
     130: aload_0
     131: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
     134: aload_0
     135: invokedynamic #241,  0            // InvokeDynamic #16:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/ToDoubleFunction;
     140: invokestatic  #142                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     143: aload_0
     144: getfield      #40                 // Field tags:Ljava/lang/Iterable;
     147: invokevirtual #147                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     150: ldc           #242                // String Number of buffers written directly by a backend
     152: invokevirtual #154                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     155: aload_1
     156: invokevirtual #157                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     159: pop
     160: return

  private java.lang.Long getDatabaseSize();
    Code:
       0: aload_0
       1: new           #244                // class java/lang/StringBuilder
       4: dup
       5: invokespecial #246                // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #247                // String SELECT pg_database_size(\'
      10: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #22                 // Field database:Ljava/lang/String;
      17: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #253                // String \')
      22: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #255                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
      31: areturn

  private java.lang.Long getLockCount();
    Code:
       0: aload_0
       1: new           #244                // class java/lang/StringBuilder
       4: dup
       5: invokespecial #246                // Method java/lang/StringBuilder."<init>":()V
       8: ldc_w         #263                // String SELECT count(*) FROM pg_locks l JOIN pg_database d ON l.DATABASE=d.oid WHERE d.datname=\'
      11: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #22                 // Field database:Ljava/lang/String;
      18: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc_w         #265                // String \'
      24: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #255                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
      33: areturn

  private java.lang.Long getConnectionCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field queryConnectionCount:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getReadCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #65                 // Field queryReadCount:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getInsertCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #70                 // Field queryInsertCount:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getTempBytes();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #75                 // Field queryTempBytes:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getUpdateCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #80                 // Field queryUpdateCount:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getDeleteCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #85                 // Field queryDeleteCount:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getBlockHits();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #90                 // Field queryBlockHits:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getBlockReads();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #95                 // Field queryBlockReads:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getTransactionCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #100                // Field queryTransactionCount:Ljava/lang/String;
       5: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       8: areturn

  private java.lang.Long getDeadTupleCount();
    Code:
       0: aload_0
       1: getstatic     #267                // Field QUERY_DEAD_TUPLE_COUNT:Ljava/lang/String;
       4: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       7: areturn

  private java.lang.Long getTimedCheckpointsCount();
    Code:
       0: aload_0
       1: getstatic     #270                // Field QUERY_TIMED_CHECKPOINTS_COUNT:Ljava/lang/String;
       4: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       7: areturn

  private java.lang.Long getRequestedCheckpointsCount();
    Code:
       0: aload_0
       1: getstatic     #273                // Field QUERY_REQUESTED_CHECKPOINTS_COUNT:Ljava/lang/String;
       4: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       7: areturn

  private java.lang.Long getBuffersClean();
    Code:
       0: aload_0
       1: getstatic     #276                // Field QUERY_BUFFERS_CLEAN:Ljava/lang/String;
       4: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       7: areturn

  private java.lang.Long getBuffersBackend();
    Code:
       0: aload_0
       1: getstatic     #279                // Field QUERY_BUFFERS_BACKEND:Ljava/lang/String;
       4: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       7: areturn

  private java.lang.Long getBuffersCheckpoint();
    Code:
       0: aload_0
       1: getstatic     #282                // Field QUERY_BUFFERS_CHECKPOINT:Ljava/lang/String;
       4: invokespecial #259                // Method runQuery:(Ljava/lang/String;)Ljava/lang/Long;
       7: areturn

  java.lang.Double resettableFunctionalCounter(java.lang.String, java.util.function.DoubleSupplier);
    Code:
       0: aload_2
       1: invokeinterface #285,  1          // InterfaceMethod java/util/function/DoubleSupplier.getAsDouble:()D
       6: invokestatic  #291                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       9: astore_3
      10: aload_0
      11: getfield      #51                 // Field previousValueCacheMap:Ljava/util/Map;
      14: aload_1
      15: dconst_0
      16: invokestatic  #291                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      19: invokeinterface #297,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #292                // class java/lang/Double
      27: astore        4
      29: aload_0
      30: getfield      #47                 // Field beforeResetValuesCacheMap:Ljava/util/Map;
      33: aload_1
      34: dconst_0
      35: invokestatic  #291                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      38: invokeinterface #297,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #292                // class java/lang/Double
      46: astore        5
      48: aload_3
      49: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      52: aload         5
      54: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      57: dadd
      58: invokestatic  #291                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      61: astore        6
      63: aload         6
      65: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      68: aload         4
      70: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      73: dcmpg
      74: ifge          105
      77: aload_0
      78: getfield      #47                 // Field beforeResetValuesCacheMap:Ljava/util/Map;
      81: aload_1
      82: aload         4
      84: invokeinterface #306,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload         4
      92: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      95: aload_3
      96: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      99: dadd
     100: invokestatic  #291                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     103: astore        6
     105: aload_0
     106: getfield      #51                 // Field previousValueCacheMap:Ljava/util/Map;
     109: aload_1
     110: aload         6
     112: invokeinterface #306,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: aload         6
     120: areturn

  private java.lang.Long runQuery(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field postgresDataSource:Ljavax/sql/DataSource;
       4: invokeinterface #309,  1          // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       9: astore_2
      10: aload_2
      11: invokeinterface #315,  1          // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
      16: astore_3
      17: aload_3
      18: aload_1
      19: invokeinterface #321,  2          // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      24: astore        4
      26: aload         4
      28: invokeinterface #327,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      33: ifeq          87
      36: aload         4
      38: iconst_1
      39: ldc_w         #333                // class java/lang/Long
      42: invokeinterface #335,  3          // InterfaceMethod java/sql/ResultSet.getObject:(ILjava/lang/Class;)Ljava/lang/Object;
      47: checkcast     #333                // class java/lang/Long
      50: astore        5
      52: aload         4
      54: ifnull        64
      57: aload         4
      59: invokeinterface #339,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      64: aload_3
      65: ifnull        74
      68: aload_3
      69: invokeinterface #342,  1          // InterfaceMethod java/sql/Statement.close:()V
      74: aload_2
      75: ifnull        84
      78: aload_2
      79: invokeinterface #343,  1          // InterfaceMethod java/sql/Connection.close:()V
      84: aload         5
      86: areturn
      87: aload         4
      89: ifnull        131
      92: aload         4
      94: invokeinterface #339,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      99: goto          131
     102: astore        5
     104: aload         4
     106: ifnull        128
     109: aload         4
     111: invokeinterface #339,  1          // InterfaceMethod java/sql/ResultSet.close:()V
     116: goto          128
     119: astore        6
     121: aload         5
     123: aload         6
     125: invokevirtual #346                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     128: aload         5
     130: athrow
     131: aload_3
     132: ifnull        171
     135: aload_3
     136: invokeinterface #342,  1          // InterfaceMethod java/sql/Statement.close:()V
     141: goto          171
     144: astore        4
     146: aload_3
     147: ifnull        168
     150: aload_3
     151: invokeinterface #342,  1          // InterfaceMethod java/sql/Statement.close:()V
     156: goto          168
     159: astore        5
     161: aload         4
     163: aload         5
     165: invokevirtual #346                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     168: aload         4
     170: athrow
     171: aload_2
     172: ifnull        208
     175: aload_2
     176: invokeinterface #343,  1          // InterfaceMethod java/sql/Connection.close:()V
     181: goto          208
     184: astore_3
     185: aload_2
     186: ifnull        206
     189: aload_2
     190: invokeinterface #343,  1          // InterfaceMethod java/sql/Connection.close:()V
     195: goto          206
     198: astore        4
     200: aload_3
     201: aload         4
     203: invokevirtual #346                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     206: aload_3
     207: athrow
     208: goto          212
     211: astore_2
     212: lconst_0
     213: invokestatic  #352                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     216: areturn
    Exception table:
       from    to  target type
          26    52   102   Class java/lang/Throwable
         109   116   119   Class java/lang/Throwable
          17    64   144   Class java/lang/Throwable
          87   131   144   Class java/lang/Throwable
         150   156   159   Class java/lang/Throwable
          10    74   184   Class java/lang/Throwable
          87   171   184   Class java/lang/Throwable
         189   195   198   Class java/lang/Throwable
           0    84   211   Class java/sql/SQLException
          87   208   211   Class java/sql/SQLException

  private static java.lang.String getDBStatQuery(java.lang.String, java.lang.String);
    Code:
       0: new           #244                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #246                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #355                // String SELECT
      10: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc_w         #357                // String  FROM pg_stat_database WHERE datname = \'
      20: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc_w         #265                // String \'
      30: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #255                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  private static java.lang.String getUserTableQuery(java.lang.String);
    Code:
       0: new           #244                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #246                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #355                // String SELECT
      10: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc_w         #359                // String  FROM pg_stat_user_tables
      20: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #255                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  private static java.lang.String getBgWriterQuery(java.lang.String);
    Code:
       0: new           #244                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #246                // Method java/lang/StringBuilder."<init>":()V
       7: ldc_w         #355                // String SELECT
      10: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc_w         #361                // String  FROM pg_stat_bgwriter
      20: invokevirtual #249                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #255                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  private double lambda$registerCheckpointMetrics$16(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #239                // String postgres.buffers.backend
       3: aload_0
       4: invokedynamic #363,  0            // InvokeDynamic #17:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerCheckpointMetrics$15(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #234                // String postgres.buffers.clean
       3: aload_0
       4: invokedynamic #370,  0            // InvokeDynamic #18:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerCheckpointMetrics$14(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #229                // String postgres.buffers.checkpoint
       3: aload_0
       4: invokedynamic #371,  0            // InvokeDynamic #19:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerCheckpointMetrics$13(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #224                // String postgres.checkpoints.requested
       3: aload_0
       4: invokedynamic #372,  0            // InvokeDynamic #20:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerCheckpointMetrics$12(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #219                // String postgres.checkpoints.timed
       3: aload_0
       4: invokedynamic #373,  0            // InvokeDynamic #21:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerRowCountMetrics$11(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #374                // Method getDeadTupleCount:()Ljava/lang/Long;
       4: invokevirtual #378                // Method java/lang/Long.longValue:()J
       7: l2d
       8: dreturn

  private double lambda$registerRowCountMetrics$10(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #209                // String postgres.rows.deleted
       3: aload_0
       4: invokedynamic #382,  0            // InvokeDynamic #22:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerRowCountMetrics$9(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #204                // String postgres.rows.updated
       3: aload_0
       4: invokedynamic #383,  0            // InvokeDynamic #23:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerRowCountMetrics$8(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #199                // String postgres.rows.inserted
       3: aload_0
       4: invokedynamic #384,  0            // InvokeDynamic #24:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$registerRowCountMetrics$7(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #194                // String postgres.rows.fetched
       3: aload_0
       4: invokedynamic #385,  0            // InvokeDynamic #25:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$bindTo$6(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #175                // String postgres.temp.writes
       3: aload_0
       4: invokedynamic #386,  0            // InvokeDynamic #26:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$bindTo$5(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #387                // Method getLockCount:()Ljava/lang/Long;
       4: invokevirtual #378                // Method java/lang/Long.longValue:()J
       7: l2d
       8: dreturn

  private double lambda$bindTo$4(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #165                // String postgres.transactions
       3: aload_0
       4: invokedynamic #390,  0            // InvokeDynamic #27:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$bindTo$3(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #160                // String postgres.blocks.reads
       3: aload_0
       4: invokedynamic #391,  0            // InvokeDynamic #28:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$bindTo$2(javax.sql.DataSource);
    Code:
       0: aload_0
       1: ldc           #139                // String postgres.blocks.hits
       3: aload_0
       4: invokedynamic #392,  0            // InvokeDynamic #29:getAsDouble:(Lio/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics;)Ljava/util/function/DoubleSupplier;
       9: invokevirtual #366                // Method resettableFunctionalCounter:(Ljava/lang/String;Ljava/util/function/DoubleSupplier;)Ljava/lang/Double;
      12: invokevirtual #303                // Method java/lang/Double.doubleValue:()D
      15: dreturn

  private double lambda$bindTo$1(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #393                // Method getConnectionCount:()Ljava/lang/Long;
       4: invokevirtual #378                // Method java/lang/Long.longValue:()J
       7: l2d
       8: dreturn

  private double lambda$bindTo$0(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #396                // Method getDatabaseSize:()Ljava/lang/Long;
       4: invokevirtual #378                // Method java/lang/Long.longValue:()J
       7: l2d
       8: dreturn

  static {};
    Code:
       0: ldc_w         #399                // String n_dead_tup
       3: invokestatic  #401                // Method getUserTableQuery:(Ljava/lang/String;)Ljava/lang/String;
       6: putstatic     #267                // Field QUERY_DEAD_TUPLE_COUNT:Ljava/lang/String;
       9: ldc_w         #405                // String checkpoints_timed
      12: invokestatic  #407                // Method getBgWriterQuery:(Ljava/lang/String;)Ljava/lang/String;
      15: putstatic     #270                // Field QUERY_TIMED_CHECKPOINTS_COUNT:Ljava/lang/String;
      18: ldc_w         #410                // String checkpoints_req
      21: invokestatic  #407                // Method getBgWriterQuery:(Ljava/lang/String;)Ljava/lang/String;
      24: putstatic     #273                // Field QUERY_REQUESTED_CHECKPOINTS_COUNT:Ljava/lang/String;
      27: ldc_w         #412                // String buffers_clean
      30: invokestatic  #407                // Method getBgWriterQuery:(Ljava/lang/String;)Ljava/lang/String;
      33: putstatic     #276                // Field QUERY_BUFFERS_CLEAN:Ljava/lang/String;
      36: ldc_w         #414                // String buffers_backend
      39: invokestatic  #407                // Method getBgWriterQuery:(Ljava/lang/String;)Ljava/lang/String;
      42: putstatic     #279                // Field QUERY_BUFFERS_BACKEND:Ljava/lang/String;
      45: ldc_w         #416                // String buffers_checkpoint
      48: invokestatic  #407                // Method getBgWriterQuery:(Ljava/lang/String;)Ljava/lang/String;
      51: putstatic     #282                // Field QUERY_BUFFERS_CHECKPOINT:Ljava/lang/String;
      54: return
}
