Compiled from "DatabaseTableMetrics.java"
public class io.micrometer.core.instrument.binder.db.DatabaseTableMetrics implements io.micrometer.core.instrument.binder.MeterBinder {
  private final javax.sql.DataSource dataSource;

  private final java.lang.String query;

  private final java.lang.String dataSourceName;

  private final java.lang.String tableName;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> tags;

  public io.micrometer.core.instrument.binder.db.DatabaseTableMetrics(javax.sql.DataSource, java.lang.String, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/lang/StringBuilder
       5: dup
       6: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #7                  // String SELECT COUNT(1) FROM
      11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_3
      15: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: aload_2
      22: aload_3
      23: aload         4
      25: invokespecial #17                 // Method "<init>":(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
      28: return

  public io.micrometer.core.instrument.binder.db.DatabaseTableMetrics(javax.sql.DataSource, java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
       9: aload_0
      10: aload_2
      11: putfield      #29                 // Field query:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #33                 // Field dataSourceName:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #36                 // Field tableName:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #39                 // Field tags:Ljava/lang/Iterable;
      31: return

  public static void monitor(io.micrometer.core.instrument.MeterRegistry, java.lang.String, java.lang.String, javax.sql.DataSource, java.lang.String...);
    Code:
       0: aload_0
       1: aload_3
       2: aload_2
       3: aload_1
       4: aload         4
       6: invokestatic  #43                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       9: invokestatic  #49                 // Method monitor:(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
      12: return

  public static void monitor(io.micrometer.core.instrument.MeterRegistry, javax.sql.DataSource, java.lang.String, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: new           #18                 // class io/micrometer/core/instrument/binder/db/DatabaseTableMetrics
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #53                 // Method "<init>":(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
      12: aload_0
      13: invokevirtual #56                 // Method bindTo:(Lio/micrometer/core/instrument/MeterRegistry;)V
      16: return

  public void bindTo(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokedynamic #60,  0             // InvokeDynamic #0:applyAsDouble:(Lio/micrometer/core/instrument/binder/db/DatabaseTableMetrics;)Ljava/util/function/ToDoubleFunction;
       6: astore_2
       7: ldc           #64                 // String db.table.size
       9: aload_0
      10: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
      13: aload_2
      14: invokestatic  #66                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      17: aload_0
      18: getfield      #39                 // Field tags:Ljava/lang/Iterable;
      21: invokevirtual #72                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      24: ldc           #77                 // String db
      26: aload_0
      27: getfield      #33                 // Field dataSourceName:Ljava/lang/String;
      30: invokevirtual #79                 // Method io/micrometer/core/instrument/Gauge$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      33: ldc           #83                 // String table
      35: aload_0
      36: getfield      #36                 // Field tableName:Ljava/lang/String;
      39: invokevirtual #79                 // Method io/micrometer/core/instrument/Gauge$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      42: ldc           #85                 // String Number of rows in a database table
      44: invokevirtual #87                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      47: ldc           #93                 // String rows
      49: invokevirtual #95                 // Method io/micrometer/core/instrument/Gauge$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      52: aload_1
      53: invokevirtual #98                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      56: pop
      57: return

  private double lambda$bindTo$0(javax.sql.DataSource);
    Code:
       0: aload_1
       1: invokeinterface #102,  1          // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       6: astore_2
       7: aload_2
       8: aload_0
       9: getfield      #29                 // Field query:Ljava/lang/String;
      12: invokeinterface #108,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      17: astore_3
      18: aload_3
      19: invokeinterface #114,  1          // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      24: astore        4
      26: aload         4
      28: invokeinterface #120,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      33: pop
      34: aload         4
      36: iconst_1
      37: invokeinterface #126,  2          // InterfaceMethod java/sql/ResultSet.getInt:(I)I
      42: i2d
      43: dstore        5
      45: aload         4
      47: ifnull        57
      50: aload         4
      52: invokeinterface #130,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      57: aload_3
      58: ifnull        67
      61: aload_3
      62: invokeinterface #133,  1          // InterfaceMethod java/sql/PreparedStatement.close:()V
      67: aload_2
      68: ifnull        77
      71: aload_2
      72: invokeinterface #134,  1          // InterfaceMethod java/sql/Connection.close:()V
      77: dload         5
      79: dreturn
      80: astore        5
      82: aload         4
      84: ifnull        106
      87: aload         4
      89: invokeinterface #130,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      94: goto          106
      97: astore        6
      99: aload         5
     101: aload         6
     103: invokevirtual #137                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     106: aload         5
     108: athrow
     109: astore        4
     111: aload_3
     112: ifnull        133
     115: aload_3
     116: invokeinterface #133,  1          // InterfaceMethod java/sql/PreparedStatement.close:()V
     121: goto          133
     124: astore        5
     126: aload         4
     128: aload         5
     130: invokevirtual #137                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     133: aload         4
     135: athrow
     136: astore_3
     137: aload_2
     138: ifnull        158
     141: aload_2
     142: invokeinterface #134,  1          // InterfaceMethod java/sql/Connection.close:()V
     147: goto          158
     150: astore        4
     152: aload_3
     153: aload         4
     155: invokevirtual #137                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     158: aload_3
     159: athrow
     160: astore_2
     161: dconst_0
     162: dreturn
    Exception table:
       from    to  target type
          26    45    80   Class java/lang/Throwable
          87    94    97   Class java/lang/Throwable
          18    57   109   Class java/lang/Throwable
          80   109   109   Class java/lang/Throwable
         115   121   124   Class java/lang/Throwable
           7    67   136   Class java/lang/Throwable
          80   136   136   Class java/lang/Throwable
         141   147   150   Class java/lang/Throwable
           0    77   160   Class java/sql/SQLException
          80   160   160   Class java/sql/SQLException
}
