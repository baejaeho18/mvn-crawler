Compiled from "TimedRunnable.java"
class io.micrometer.core.instrument.internal.TimedRunnable implements java.lang.Runnable {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final io.micrometer.core.instrument.Timer executionTimer;

  private final io.micrometer.core.instrument.Timer idleTimer;

  private final java.lang.Runnable command;

  private final io.micrometer.core.instrument.Timer$Sample idleSample;

  io.micrometer.core.instrument.internal.TimedRunnable(io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.Timer, io.micrometer.core.instrument.Timer, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      14: aload_0
      15: aload_3
      16: putfield      #17                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      19: aload_0
      20: aload         4
      22: putfield      #20                 // Field command:Ljava/lang/Runnable;
      25: aload_0
      26: aload_1
      27: invokestatic  #24                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
      30: putfield      #30                 // Field idleSample:Lio/micrometer/core/instrument/Timer$Sample;
      33: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #30                 // Field idleSample:Lio/micrometer/core/instrument/Timer$Sample;
       4: aload_0
       5: getfield      #17                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
       8: invokevirtual #34                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      11: pop2
      12: aload_0
      13: getfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      16: invokestatic  #24                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
      19: astore_1
      20: aload_0
      21: getfield      #20                 // Field command:Ljava/lang/Runnable;
      24: invokeinterface #40,  1           // InterfaceMethod java/lang/Runnable.run:()V
      29: aload_1
      30: aload_0
      31: getfield      #13                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      34: invokevirtual #34                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      37: pop2
      38: goto          53
      41: astore_2
      42: aload_1
      43: aload_0
      44: getfield      #13                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      47: invokevirtual #34                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      50: pop2
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
          20    29    41   any
}
