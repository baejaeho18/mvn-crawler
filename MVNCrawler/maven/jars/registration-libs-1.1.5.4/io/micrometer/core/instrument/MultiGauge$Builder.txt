Compiled from "MultiGauge.java"
public class io.micrometer.core.instrument.MultiGauge$Builder {
  private final java.lang.String name;

  private io.micrometer.core.instrument.Tags tags;

  private java.lang.String description;

  private java.lang.String baseUnit;

  private io.micrometer.core.instrument.MultiGauge$Builder(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #12                 // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
       8: putfield      #18                 // Field tags:Lio/micrometer/core/instrument/Tags;
      11: aload_0
      12: aload_1
      13: putfield      #22                 // Field name:Ljava/lang/String;
      16: return

  public io.micrometer.core.instrument.MultiGauge$Builder tags(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       5: invokevirtual #30                 // Method tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MultiGauge$Builder;
       8: areturn

  public io.micrometer.core.instrument.MultiGauge$Builder tags(java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field tags:Lio/micrometer/core/instrument/Tags;
       5: aload_1
       6: invokevirtual #33                 // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
       9: putfield      #18                 // Field tags:Lio/micrometer/core/instrument/Tags;
      12: aload_0
      13: areturn

  public io.micrometer.core.instrument.MultiGauge$Builder tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field tags:Lio/micrometer/core/instrument/Tags;
       5: aload_1
       6: aload_2
       7: invokevirtual #37                 // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
      10: putfield      #18                 // Field tags:Lio/micrometer/core/instrument/Tags;
      13: aload_0
      14: areturn

  public io.micrometer.core.instrument.MultiGauge$Builder description(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.micrometer.core.instrument.MultiGauge$Builder baseUnit(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field baseUnit:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.micrometer.core.instrument.MultiGauge register(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: new           #46                 // class io/micrometer/core/instrument/MultiGauge
       3: dup
       4: aload_1
       5: new           #48                 // class io/micrometer/core/instrument/Meter$Id
       8: dup
       9: aload_0
      10: getfield      #22                 // Field name:Ljava/lang/String;
      13: aload_0
      14: getfield      #18                 // Field tags:Lio/micrometer/core/instrument/Tags;
      17: aload_0
      18: getfield      #43                 // Field baseUnit:Ljava/lang/String;
      21: aload_0
      22: getfield      #40                 // Field description:Ljava/lang/String;
      25: getstatic     #50                 // Field io/micrometer/core/instrument/Meter$Type.GAUGE:Lio/micrometer/core/instrument/Meter$Type;
      28: aconst_null
      29: invokespecial #56                 // Method io/micrometer/core/instrument/Meter$Id."<init>":(Ljava/lang/String;Lio/micrometer/core/instrument/Tags;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Lio/micrometer/core/instrument/Meter$Id;)V
      32: aconst_null
      33: invokespecial #59                 // Method io/micrometer/core/instrument/MultiGauge."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/MultiGauge$1;)V
      36: areturn

  io.micrometer.core.instrument.MultiGauge$Builder(java.lang.String, io.micrometer.core.instrument.MultiGauge$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/String;)V
       5: return
}
