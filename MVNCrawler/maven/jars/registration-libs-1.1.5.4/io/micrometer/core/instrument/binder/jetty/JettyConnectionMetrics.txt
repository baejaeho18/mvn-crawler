Compiled from "JettyConnectionMetrics.java"
public class io.micrometer.core.instrument.binder.jetty.JettyConnectionMetrics extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.io.Connection$Listener {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> tags;

  private final java.lang.Object connectionSamplesLock;

  private final java.util.Map<org.eclipse.jetty.io.Connection, io.micrometer.core.instrument.Timer$Sample> connectionSamples;

  private final io.micrometer.core.instrument.Counter messagesIn;

  private final io.micrometer.core.instrument.Counter messagesOut;

  private final io.micrometer.core.instrument.DistributionSummary bytesIn;

  private final io.micrometer.core.instrument.DistributionSummary bytesOut;

  private final io.micrometer.core.instrument.distribution.TimeWindowMax maxConnections;

  public io.micrometer.core.instrument.binder.jetty.JettyConnectionMetrics(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
       5: invokespecial #7                  // Method "<init>":(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
       8: return

  public io.micrometer.core.instrument.binder.jetty.JettyConnectionMetrics(io.micrometer.core.instrument.MeterRegistry, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #18                 // class java/lang/Object
       8: dup
       9: invokespecial #20                 // Method java/lang/Object."<init>":()V
      12: putfield      #21                 // Field connectionSamplesLock:Ljava/lang/Object;
      15: aload_0
      16: new           #25                 // class java/util/HashMap
      19: dup
      20: invokespecial #27                 // Method java/util/HashMap."<init>":()V
      23: putfield      #28                 // Field connectionSamples:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #32                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      31: aload_0
      32: aload_2
      33: putfield      #36                 // Field tags:Ljava/lang/Iterable;
      36: aload_0
      37: ldc           #40                 // String jetty.connections.messages.in
      39: invokestatic  #42                 // InterfaceMethod io/micrometer/core/instrument/Counter.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
      42: ldc           #50                 // String messages
      44: invokevirtual #52                 // Method io/micrometer/core/instrument/Counter$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
      47: ldc           #57                 // String Messages received by tracked connections
      49: invokevirtual #59                 // Method io/micrometer/core/instrument/Counter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
      52: aload_2
      53: invokevirtual #62                 // Method io/micrometer/core/instrument/Counter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter$Builder;
      56: aload_1
      57: invokevirtual #65                 // Method io/micrometer/core/instrument/Counter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Counter;
      60: putfield      #69                 // Field messagesIn:Lio/micrometer/core/instrument/Counter;
      63: aload_0
      64: ldc           #73                 // String jetty.connections.messages.out
      66: invokestatic  #42                 // InterfaceMethod io/micrometer/core/instrument/Counter.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
      69: ldc           #50                 // String messages
      71: invokevirtual #52                 // Method io/micrometer/core/instrument/Counter$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
      74: ldc           #75                 // String Messages sent by tracked connections
      76: invokevirtual #59                 // Method io/micrometer/core/instrument/Counter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
      79: aload_2
      80: invokevirtual #62                 // Method io/micrometer/core/instrument/Counter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter$Builder;
      83: aload_1
      84: invokevirtual #65                 // Method io/micrometer/core/instrument/Counter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Counter;
      87: putfield      #77                 // Field messagesOut:Lio/micrometer/core/instrument/Counter;
      90: aload_0
      91: ldc           #80                 // String jetty.connections.bytes.in
      93: invokestatic  #82                 // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
      96: ldc           #87                 // String bytes
      98: invokevirtual #89                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     101: ldc           #93                 // String Bytes received by tracked connections
     103: invokevirtual #95                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     106: aload_2
     107: invokevirtual #97                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     110: aload_1
     111: invokevirtual #100                // Method io/micrometer/core/instrument/DistributionSummary$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
     114: putfield      #103                // Field bytesIn:Lio/micrometer/core/instrument/DistributionSummary;
     117: aload_0
     118: ldc           #107                // String jetty.connections.bytes.out
     120: invokestatic  #82                 // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     123: ldc           #87                 // String bytes
     125: invokevirtual #89                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     128: ldc           #109                // String Bytes sent by tracked connections
     130: invokevirtual #95                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     133: aload_2
     134: invokevirtual #97                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     137: aload_1
     138: invokevirtual #100                // Method io/micrometer/core/instrument/DistributionSummary$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
     141: putfield      #111                // Field bytesOut:Lio/micrometer/core/instrument/DistributionSummary;
     144: aload_0
     145: new           #114                // class io/micrometer/core/instrument/distribution/TimeWindowMax
     148: dup
     149: aload_1
     150: invokevirtual #116                // Method io/micrometer/core/instrument/MeterRegistry.config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
     153: invokevirtual #122                // Method io/micrometer/core/instrument/MeterRegistry$Config.clock:()Lio/micrometer/core/instrument/Clock;
     156: getstatic     #128                // Field io/micrometer/core/instrument/distribution/DistributionStatisticConfig.DEFAULT:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     159: invokespecial #134                // Method io/micrometer/core/instrument/distribution/TimeWindowMax."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
     162: putfield      #137                // Field maxConnections:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
     165: ldc           #141                // String jetty.connections.max
     167: aload_0
     168: invokedynamic #143,  0            // InvokeDynamic #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     173: invokestatic  #147                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     176: iconst_1
     177: invokevirtual #152                // Method io/micrometer/core/instrument/Gauge$Builder.strongReference:(Z)Lio/micrometer/core/instrument/Gauge$Builder;
     180: ldc           #158                // String connections
     182: invokevirtual #160                // Method io/micrometer/core/instrument/Gauge$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     185: ldc           #163                // String The maximum number of observed connections over a rolling 2-minute interval
     187: invokevirtual #165                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     190: aload_2
     191: invokevirtual #167                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
     194: aload_1
     195: invokevirtual #170                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     198: pop
     199: ldc           #173                // String jetty.connections.current
     201: aload_0
     202: invokedynamic #175,  0            // InvokeDynamic #1:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     207: invokestatic  #147                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     210: iconst_1
     211: invokevirtual #152                // Method io/micrometer/core/instrument/Gauge$Builder.strongReference:(Z)Lio/micrometer/core/instrument/Gauge$Builder;
     214: ldc           #158                // String connections
     216: invokevirtual #160                // Method io/micrometer/core/instrument/Gauge$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     219: ldc           #176                // String The current number of open Jetty connections
     221: invokevirtual #165                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     224: aload_2
     225: invokevirtual #167                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
     228: aload_1
     229: invokevirtual #170                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     232: pop
     233: return

  public void onOpened(org.eclipse.jetty.io.Connection);
    Code:
       0: aload_0
       1: getfield      #32                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #178                // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
       7: astore_2
       8: aload_0
       9: getfield      #21                 // Field connectionSamplesLock:Ljava/lang/Object;
      12: dup
      13: astore_3
      14: monitorenter
      15: aload_0
      16: getfield      #28                 // Field connectionSamples:Ljava/util/Map;
      19: aload_1
      20: aload_2
      21: invokeinterface #184,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: getfield      #137                // Field maxConnections:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      31: aload_0
      32: getfield      #28                 // Field connectionSamples:Ljava/util/Map;
      35: invokeinterface #190,  1          // InterfaceMethod java/util/Map.size:()I
      40: i2d
      41: invokevirtual #194                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.record:(D)V
      44: aload_3
      45: monitorexit
      46: goto          56
      49: astore        4
      51: aload_3
      52: monitorexit
      53: aload         4
      55: athrow
      56: return
    Exception table:
       from    to  target type
          15    46    49   any
          49    53    49   any

  public void onClosed(org.eclipse.jetty.io.Connection);
    Code:
       0: aload_0
       1: getfield      #21                 // Field connectionSamplesLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field connectionSamples:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #198,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #202                // class io/micrometer/core/instrument/Timer$Sample
      20: astore_2
      21: aload_3
      22: monitorexit
      23: goto          33
      26: astore        4
      28: aload_3
      29: monitorexit
      30: aload         4
      32: athrow
      33: aload_2
      34: ifnull        87
      37: aload_1
      38: instanceof    #204                // class org/eclipse/jetty/server/HttpConnection
      41: ifeq          49
      44: ldc           #206                // String server
      46: goto          51
      49: ldc           #208                // String client
      51: astore_3
      52: aload_2
      53: ldc           #210                // String jetty.connections.request
      55: invokestatic  #212                // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      58: ldc           #215                // String Jetty client or server requests
      60: invokevirtual #217                // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      63: ldc           #221                // String type
      65: aload_3
      66: invokevirtual #223                // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      69: aload_0
      70: getfield      #36                 // Field tags:Ljava/lang/Iterable;
      73: invokevirtual #227                // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      76: aload_0
      77: getfield      #32                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      80: invokevirtual #230                // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      83: invokevirtual #233                // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      86: pop2
      87: aload_0
      88: getfield      #69                 // Field messagesIn:Lio/micrometer/core/instrument/Counter;
      91: aload_1
      92: invokeinterface #237,  1          // InterfaceMethod org/eclipse/jetty/io/Connection.getMessagesIn:()J
      97: l2d
      98: invokeinterface #243,  3          // InterfaceMethod io/micrometer/core/instrument/Counter.increment:(D)V
     103: aload_0
     104: getfield      #77                 // Field messagesOut:Lio/micrometer/core/instrument/Counter;
     107: aload_1
     108: invokeinterface #246,  1          // InterfaceMethod org/eclipse/jetty/io/Connection.getMessagesOut:()J
     113: l2d
     114: invokeinterface #243,  3          // InterfaceMethod io/micrometer/core/instrument/Counter.increment:(D)V
     119: aload_0
     120: getfield      #103                // Field bytesIn:Lio/micrometer/core/instrument/DistributionSummary;
     123: aload_1
     124: invokeinterface #249,  1          // InterfaceMethod org/eclipse/jetty/io/Connection.getBytesIn:()J
     129: l2d
     130: invokeinterface #252,  3          // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.record:(D)V
     135: aload_0
     136: getfield      #111                // Field bytesOut:Lio/micrometer/core/instrument/DistributionSummary;
     139: aload_1
     140: invokeinterface #253,  1          // InterfaceMethod org/eclipse/jetty/io/Connection.getBytesOut:()J
     145: l2d
     146: invokeinterface #252,  3          // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.record:(D)V
     151: return
    Exception table:
       from    to  target type
           7    23    26   any
          26    30    26   any

  public static void addToAllConnectors(org.eclipse.jetty.server.Server, io.micrometer.core.instrument.MeterRegistry, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokevirtual #256                // Method org/eclipse/jetty/server/Server.getConnectors:()[Lorg/eclipse/jetty/server/Connector;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     53
      19: aload_3
      20: iload         5
      22: aaload
      23: astore        6
      25: aload         6
      27: ifnull        47
      30: aload         6
      32: new           #8                  // class io/micrometer/core/instrument/binder/jetty/JettyConnectionMetrics
      35: dup
      36: aload_1
      37: aload_2
      38: invokespecial #7                  // Method "<init>":(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
      41: invokeinterface #262,  2          // InterfaceMethod org/eclipse/jetty/server/Connector.addBean:(Ljava/lang/Object;)Z
      46: pop
      47: iinc          5, 1
      50: goto          12
      53: return

  public static void addToAllConnectors(org.eclipse.jetty.server.Server, io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
       5: invokestatic  #268                // Method addToAllConnectors:(Lorg/eclipse/jetty/server/Server;Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
       8: return

  private static double lambda$new$1(io.micrometer.core.instrument.binder.jetty.JettyConnectionMetrics);
    Code:
       0: aload_0
       1: getfield      #28                 // Field connectionSamples:Ljava/util/Map;
       4: invokeinterface #190,  1          // InterfaceMethod java/util/Map.size:()I
       9: i2d
      10: dreturn

  private static double lambda$new$0(io.micrometer.core.instrument.binder.jetty.JettyConnectionMetrics);
    Code:
       0: aload_0
       1: getfield      #137                // Field maxConnections:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
       4: invokevirtual #272                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.poll:()D
       7: dreturn
}
