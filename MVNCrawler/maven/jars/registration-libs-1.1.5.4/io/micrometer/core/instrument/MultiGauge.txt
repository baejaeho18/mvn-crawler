Compiled from "MultiGauge.java"
public class io.micrometer.core.instrument.MultiGauge {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final io.micrometer.core.instrument.Meter$Id commonId;

  private final java.util.concurrent.atomic.AtomicReference<java.util.Set<io.micrometer.core.instrument.Meter$Id>> registeredRows;

  private io.micrometer.core.instrument.MultiGauge(io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #12                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokestatic  #14                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      12: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #23                 // Field registeredRows:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: aload_1
      20: putfield      #27                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      23: aload_0
      24: aload_2
      25: putfield      #31                 // Field commonId:Lio/micrometer/core/instrument/Meter$Id;
      28: return

  public static io.micrometer.core.instrument.MultiGauge$Builder builder(java.lang.String);
    Code:
       0: new           #35                 // class io/micrometer/core/instrument/MultiGauge$Builder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #37                 // Method io/micrometer/core/instrument/MultiGauge$Builder."<init>":(Ljava/lang/String;Lio/micrometer/core/instrument/MultiGauge$1;)V
       9: areturn

  public void register(java.lang.Iterable<io.micrometer.core.instrument.MultiGauge$Row<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #40                 // Method register:(Ljava/lang/Iterable;Z)V
       6: return

  public void register(java.lang.Iterable<io.micrometer.core.instrument.MultiGauge$Row<?>>, boolean);
    Code:
       0: aload_0
       1: getfield      #23                 // Field registeredRows:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokedynamic #44,  0             // InvokeDynamic #0:apply:(Lio/micrometer/core/instrument/MultiGauge;Ljava/lang/Iterable;Z)Ljava/util/function/UnaryOperator;
      12: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReference.getAndUpdate:(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      15: pop
      16: return

  private java.util.Set lambda$register$1(java.lang.Iterable, boolean, java.util.Set);
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod java/lang/Iterable.spliterator:()Ljava/util/Spliterator;
       6: iconst_0
       7: invokestatic  #58                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      10: aload_0
      11: aload_3
      12: iload_2
      13: invokedynamic #64,  0             // InvokeDynamic #1:apply:(Lio/micrometer/core/instrument/MultiGauge;Ljava/util/Set;Z)Ljava/util/function/Function;
      18: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: astore        4
      25: aload         4
      27: invokestatic  #73                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      30: invokeinterface #79,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      35: checkcast     #83                 // class java/util/Set
      38: astore        5
      40: aload_3
      41: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        6
      48: aload         6
      50: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          95
      58: aload         6
      60: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #99                 // class io/micrometer/core/instrument/Meter$Id
      68: astore        7
      70: aload         5
      72: aload         7
      74: invokeinterface #101,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      79: ifne          92
      82: aload_0
      83: getfield      #27                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      86: aload         7
      88: invokevirtual #105                // Method io/micrometer/core/instrument/MeterRegistry.remove:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
      91: pop
      92: goto          48
      95: aload         5
      97: areturn

  private io.micrometer.core.instrument.Meter$Id lambda$register$0(java.util.Set, boolean, io.micrometer.core.instrument.MultiGauge$Row);
    Code:
       0: aload_3
       1: astore        4
       3: aload_0
       4: getfield      #31                 // Field commonId:Lio/micrometer/core/instrument/Meter$Id;
       7: aload_3
       8: invokestatic  #111                // Method io/micrometer/core/instrument/MultiGauge$Row.access$200:(Lio/micrometer/core/instrument/MultiGauge$Row;)Lio/micrometer/core/instrument/Tags;
      11: invokevirtual #117                // Method io/micrometer/core/instrument/Meter$Id.withTags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Id;
      14: astore        5
      16: aload_1
      17: aload         5
      19: invokeinterface #101,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: istore        6
      26: iload_2
      27: ifeq          45
      30: iload         6
      32: ifeq          45
      35: aload_0
      36: getfield      #27                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      39: aload         5
      41: invokevirtual #105                // Method io/micrometer/core/instrument/MeterRegistry.remove:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
      44: pop
      45: iload_2
      46: ifne          54
      49: iload         6
      51: ifne          85
      54: aload_0
      55: getfield      #27                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      58: aload         5
      60: aload_3
      61: invokestatic  #121                // Method io/micrometer/core/instrument/MultiGauge$Row.access$300:(Lio/micrometer/core/instrument/MultiGauge$Row;)Ljava/lang/Object;
      64: new           #125                // class io/micrometer/core/instrument/StrongReferenceGaugeFunction
      67: dup
      68: aload         4
      70: invokestatic  #121                // Method io/micrometer/core/instrument/MultiGauge$Row.access$300:(Lio/micrometer/core/instrument/MultiGauge$Row;)Ljava/lang/Object;
      73: aload         4
      75: invokestatic  #127                // Method io/micrometer/core/instrument/MultiGauge$Row.access$400:(Lio/micrometer/core/instrument/MultiGauge$Row;)Ljava/util/function/ToDoubleFunction;
      78: invokespecial #131                // Method io/micrometer/core/instrument/StrongReferenceGaugeFunction."<init>":(Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      81: invokevirtual #134                // Method io/micrometer/core/instrument/MeterRegistry.gauge:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
      84: pop
      85: aload         5
      87: areturn

  io.micrometer.core.instrument.MultiGauge(io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.MultiGauge$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Meter$Id;)V
       6: return
}
