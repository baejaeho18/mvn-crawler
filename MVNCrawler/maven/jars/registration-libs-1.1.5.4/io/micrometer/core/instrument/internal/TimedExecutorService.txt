Compiled from "TimedExecutorService.java"
public class io.micrometer.core.instrument.internal.TimedExecutorService implements java.util.concurrent.ExecutorService {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final java.util.concurrent.ExecutorService delegate;

  private final io.micrometer.core.instrument.Timer executionTimer;

  private final io.micrometer.core.instrument.Timer idleTimer;

  public io.micrometer.core.instrument.internal.TimedExecutorService(io.micrometer.core.instrument.MeterRegistry, java.util.concurrent.ExecutorService, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
      14: aload         4
      16: iconst_2
      17: anewarray     #17                 // class java/lang/String
      20: dup
      21: iconst_0
      22: ldc           #19                 // String name
      24: aastore
      25: dup
      26: iconst_1
      27: aload_3
      28: aastore
      29: invokestatic  #21                 // Method io/micrometer/core/instrument/Tags.concat:(Ljava/lang/Iterable;[Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
      32: astore        5
      34: aload_0
      35: aload_1
      36: ldc           #27                 // String executor
      38: aload         5
      40: invokevirtual #29                 // Method io/micrometer/core/instrument/MeterRegistry.timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
      43: putfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      46: aload_0
      47: aload_1
      48: ldc           #39                 // String executor.idle
      50: aload         5
      52: invokevirtual #29                 // Method io/micrometer/core/instrument/MeterRegistry.timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
      55: putfield      #41                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      58: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       9: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
       9: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
       9: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: lload_1
       5: aload_3
       6: invokeinterface #60,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #64                 // Method wrap:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
       9: invokeinterface #68,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      14: areturn

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #72                 // Method wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       9: aload_2
      10: invokeinterface #75,  3           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      15: areturn

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #72                 // Method wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       9: invokeinterface #78,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      14: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #81                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: invokeinterface #85,  2           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      14: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #81                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: lload_2
      10: aload         4
      12: invokeinterface #89,  5           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      17: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #81                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: invokeinterface #92,  2           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      14: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #81                 // Method wrapAll:(Ljava/util/Collection;)Ljava/util/Collection;
       9: lload_2
      10: aload         4
      12: invokeinterface #96,  5           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      17: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Ljava/util/concurrent/ExecutorService;
       4: aload_0
       5: aload_1
       6: invokespecial #72                 // Method wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       9: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      14: return

  private java.lang.Runnable wrap(java.lang.Runnable);
    Code:
       0: new           #103                // class io/micrometer/core/instrument/internal/TimedRunnable
       3: dup
       4: aload_0
       5: getfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       8: aload_0
       9: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      12: aload_0
      13: getfield      #41                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      16: aload_1
      17: invokespecial #105                // Method io/micrometer/core/instrument/internal/TimedRunnable."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Timer;Ljava/lang/Runnable;)V
      20: areturn

  private <T> java.util.concurrent.Callable<T> wrap(java.util.concurrent.Callable<T>);
    Code:
       0: new           #108                // class io/micrometer/core/instrument/internal/TimedCallable
       3: dup
       4: aload_0
       5: getfield      #7                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       8: aload_0
       9: getfield      #35                 // Field executionTimer:Lio/micrometer/core/instrument/Timer;
      12: aload_0
      13: getfield      #41                 // Field idleTimer:Lio/micrometer/core/instrument/Timer;
      16: aload_1
      17: invokespecial #110                // Method io/micrometer/core/instrument/internal/TimedCallable."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Timer;Ljava/util/concurrent/Callable;)V
      20: areturn

  private <T> java.util.Collection<? extends java.util.concurrent.Callable<T>> wrapAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>);
    Code:
       0: aload_1
       1: invokeinterface #113,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: aload_0
       7: invokedynamic #119,  0            // InvokeDynamic #0:apply:(Lio/micrometer/core/instrument/internal/TimedExecutorService;)Ljava/util/function/Function;
      12: invokeinterface #123,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: invokestatic  #129                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      20: invokeinterface #135,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #114                // class java/util/Collection
      28: areturn
}
