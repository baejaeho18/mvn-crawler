Compiled from "MicrometerHttpRequestExecutor.java"
public class io.micrometer.core.instrument.binder.httpcomponents.MicrometerHttpRequestExecutor extends org.apache.http.protocol.HttpRequestExecutor {
  public static final java.lang.String DEFAULT_URI_PATTERN_HEADER;

  private static final java.lang.String METER_NAME;

  private static final io.micrometer.core.instrument.Tag STATUS_UNKNOWN;

  private static final io.micrometer.core.instrument.Tag STATUS_CLIENT_ERROR;

  private static final io.micrometer.core.instrument.Tag STATUS_IO_ERROR;

  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final java.util.function.Function<org.apache.http.HttpRequest, java.lang.String> uriMapper;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> extraTags;

  private final boolean exportTagsForRoute;

  private io.micrometer.core.instrument.binder.httpcomponents.MicrometerHttpRequestExecutor(int, io.micrometer.core.instrument.MeterRegistry, java.util.function.Function<org.apache.http.HttpRequest, java.lang.String>, java.lang.Iterable<io.micrometer.core.instrument.Tag>, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method org/apache/http/protocol/HttpRequestExecutor."<init>":(I)V
       5: aload_0
       6: aload_2
       7: invokestatic  #14                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      10: invokedynamic #20,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      15: invokevirtual #24                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #28                 // class io/micrometer/core/instrument/MeterRegistry
      21: putfield      #30                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      24: aload_0
      25: aload_3
      26: invokestatic  #14                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      29: invokedynamic #34,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      34: invokevirtual #24                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      37: checkcast     #35                 // class java/util/function/Function
      40: putfield      #37                 // Field uriMapper:Ljava/util/function/Function;
      43: aload_0
      44: aload         4
      46: invokestatic  #14                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      49: invokestatic  #41                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      52: invokevirtual #47                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #51                 // class java/lang/Iterable
      58: putfield      #53                 // Field extraTags:Ljava/lang/Iterable;
      61: aload_0
      62: iload         5
      64: putfield      #57                 // Field exportTagsForRoute:Z
      67: return

  public static io.micrometer.core.instrument.binder.httpcomponents.MicrometerHttpRequestExecutor$Builder builder(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: new           #61                 // class io/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder
       3: dup
       4: aload_0
       5: invokespecial #63                 // Method io/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder."<init>":(Lio/micrometer/core/instrument/MeterRegistry;)V
       8: areturn

  public org.apache.http.HttpResponse execute(org.apache.http.HttpRequest, org.apache.http.HttpClientConnection, org.apache.http.protocol.HttpContext) throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #66                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
       7: astore        4
       9: ldc           #72                 // String method
      11: aload_1
      12: invokeinterface #74,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      17: invokeinterface #80,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      22: invokestatic  #86                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      25: astore        5
      27: ldc           #92                 // String uri
      29: aload_0
      30: getfield      #37                 // Field uriMapper:Ljava/util/function/Function;
      33: aload_1
      34: invokeinterface #94,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #97                 // class java/lang/String
      42: invokestatic  #86                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      45: astore        6
      47: getstatic     #99                 // Field STATUS_UNKNOWN:Lio/micrometer/core/instrument/Tag;
      50: astore        7
      52: aload_0
      53: getfield      #57                 // Field exportTagsForRoute:Z
      56: ifeq          66
      59: aload_3
      60: invokestatic  #103                // Method io/micrometer/core/instrument/binder/httpcomponents/HttpContextUtils.generateTagsForRoute:(Lorg/apache/http/protocol/HttpContext;)Lio/micrometer/core/instrument/Tags;
      63: goto          69
      66: invokestatic  #109                // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
      69: astore        8
      71: aload_0
      72: aload_1
      73: aload_2
      74: aload_3
      75: invokespecial #115                // Method org/apache/http/protocol/HttpRequestExecutor.execute:(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;
      78: astore        9
      80: aload         9
      82: ifnull        108
      85: ldc           #119                // String status
      87: aload         9
      89: invokeinterface #121,  1          // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      94: invokeinterface #127,  1          // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      99: invokestatic  #133                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     102: invokestatic  #86                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
     105: goto          111
     108: getstatic     #139                // Field STATUS_CLIENT_ERROR:Lio/micrometer/core/instrument/Tag;
     111: astore        7
     113: aload         9
     115: astore        10
     117: aload_0
     118: getfield      #53                 // Field extraTags:Ljava/lang/Iterable;
     121: invokestatic  #142                // Method io/micrometer/core/instrument/Tags.of:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
     124: aload         8
     126: invokevirtual #145                // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
     129: iconst_3
     130: anewarray     #87                 // class io/micrometer/core/instrument/Tag
     133: dup
     134: iconst_0
     135: aload         6
     137: aastore
     138: dup
     139: iconst_1
     140: aload         5
     142: aastore
     143: dup
     144: iconst_2
     145: aload         7
     147: aastore
     148: invokevirtual #148                // Method io/micrometer/core/instrument/Tags.and:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
     151: astore        11
     153: aload         4
     155: ldc           #151                // String httpcomponents.httpclient.request
     157: invokestatic  #153                // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     160: ldc           #157                // String Duration of Apache HttpClient request execution
     162: invokevirtual #159                // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     165: aload         11
     167: invokevirtual #164                // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
     170: aload_0
     171: getfield      #30                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
     174: invokevirtual #168                // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     177: invokevirtual #172                // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
     180: pop2
     181: aload         10
     183: areturn
     184: astore        9
     186: getstatic     #184                // Field STATUS_IO_ERROR:Lio/micrometer/core/instrument/Tag;
     189: astore        7
     191: aload         9
     193: athrow
     194: astore        12
     196: aload_0
     197: getfield      #53                 // Field extraTags:Ljava/lang/Iterable;
     200: invokestatic  #142                // Method io/micrometer/core/instrument/Tags.of:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
     203: aload         8
     205: invokevirtual #145                // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
     208: iconst_3
     209: anewarray     #87                 // class io/micrometer/core/instrument/Tag
     212: dup
     213: iconst_0
     214: aload         6
     216: aastore
     217: dup
     218: iconst_1
     219: aload         5
     221: aastore
     222: dup
     223: iconst_2
     224: aload         7
     226: aastore
     227: invokevirtual #148                // Method io/micrometer/core/instrument/Tags.and:([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
     230: astore        13
     232: aload         4
     234: ldc           #151                // String httpcomponents.httpclient.request
     236: invokestatic  #153                // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     239: ldc           #157                // String Duration of Apache HttpClient request execution
     241: invokevirtual #159                // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     244: aload         13
     246: invokevirtual #164                // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
     249: aload_0
     250: getfield      #30                 // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
     253: invokevirtual #168                // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     256: invokevirtual #172                // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
     259: pop2
     260: aload         12
     262: athrow
    Exception table:
       from    to  target type
          71   117   184   Class java/io/IOException
          71   117   184   Class org/apache/http/HttpException
          71   117   184   Class java/lang/RuntimeException
          71   117   194   any
         184   196   194   any

  private static java.lang.IllegalArgumentException lambda$new$1();
    Code:
       0: new           #187                // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #189                // String uriMapper is required but has been initialized with null
       6: invokespecial #191                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  private static java.lang.IllegalArgumentException lambda$new$0();
    Code:
       0: new           #187                // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #194                // String registry is required but has been initialized with null
       6: invokespecial #191                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  io.micrometer.core.instrument.binder.httpcomponents.MicrometerHttpRequestExecutor(int, io.micrometer.core.instrument.MeterRegistry, java.util.function.Function, java.lang.Iterable, boolean, io.micrometer.core.instrument.binder.httpcomponents.MicrometerHttpRequestExecutor$1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #3                  // Method "<init>":(ILio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;Ljava/lang/Iterable;Z)V
      11: return

  static {};
    Code:
       0: ldc           #119                // String status
       2: ldc           #196                // String UNKNOWN
       4: invokestatic  #86                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
       7: putstatic     #99                 // Field STATUS_UNKNOWN:Lio/micrometer/core/instrument/Tag;
      10: ldc           #119                // String status
      12: ldc           #198                // String CLIENT_ERROR
      14: invokestatic  #86                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      17: putstatic     #139                // Field STATUS_CLIENT_ERROR:Lio/micrometer/core/instrument/Tag;
      20: ldc           #119                // String status
      22: ldc           #200                // String IO_ERROR
      24: invokestatic  #86                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      27: putstatic     #184                // Field STATUS_IO_ERROR:Lio/micrometer/core/instrument/Tag;
      30: return
}
