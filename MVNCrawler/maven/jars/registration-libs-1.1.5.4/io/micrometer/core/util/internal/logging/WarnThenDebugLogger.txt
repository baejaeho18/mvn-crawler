Compiled from "WarnThenDebugLogger.java"
public class io.micrometer.core.util.internal.logging.WarnThenDebugLogger {
  private final io.micrometer.core.util.internal.logging.InternalLogger logger;

  private final java.util.concurrent.atomic.AtomicBoolean warnLogged;

  public io.micrometer.core.util.internal.logging.WarnThenDebugLogger(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #10                 // Field warnLogged:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: aload_1
      17: invokestatic  #16                 // Method io/micrometer/core/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/micrometer/core/util/internal/logging/InternalLogger;
      20: putfield      #22                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
      23: return

  public void log(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field warnLogged:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          40
      12: getstatic     #30                 // Field io/micrometer/core/util/internal/logging/InternalLogLevel.WARN:Lio/micrometer/core/util/internal/logging/InternalLogLevel;
      15: astore_3
      16: new           #36                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #43                 // String  Note that subsequent logs will be logged at debug level.
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore        4
      37: goto          47
      40: getstatic     #49                 // Field io/micrometer/core/util/internal/logging/InternalLogLevel.DEBUG:Lio/micrometer/core/util/internal/logging/InternalLogLevel;
      43: astore_3
      44: aload_1
      45: astore        4
      47: aload_2
      48: ifnull        67
      51: aload_0
      52: getfield      #22                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
      55: aload_3
      56: aload         4
      58: aload_2
      59: invokeinterface #52,  4           // InterfaceMethod io/micrometer/core/util/internal/logging/InternalLogger.log:(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      64: goto          79
      67: aload_0
      68: getfield      #22                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
      71: aload_3
      72: aload         4
      74: invokeinterface #58,  3           // InterfaceMethod io/micrometer/core/util/internal/logging/InternalLogger.log:(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;)V
      79: return

  public void log(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #61                 // Method log:(Ljava/lang/String;Ljava/lang/Throwable;)V
       6: return
}
