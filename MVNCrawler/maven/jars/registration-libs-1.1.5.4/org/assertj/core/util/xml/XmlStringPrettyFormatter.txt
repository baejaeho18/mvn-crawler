Compiled from "XmlStringPrettyFormatter.java"
public class org.assertj.core.util.xml.XmlStringPrettyFormatter {
  private static final java.lang.String FORMAT_ERROR;

  public static java.lang.String xmlPrettyFormat(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #13                 // String Expecting XML String not to be null
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokestatic  #19                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_0
      19: invokestatic  #23                 // Method toXmlDocument:(Ljava/lang/String;)Lorg/w3c/dom/Document;
      22: aload_0
      23: ldc           #25                 // String <?xml
      25: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: invokestatic  #35                 // Method prettyFormat:(Lorg/w3c/dom/Document;Z)Ljava/lang/String;
      31: areturn

  private static java.lang.String prettyFormat(org.w3c.dom.Document, boolean);
    Code:
       0: invokestatic  #44                 // Method org/w3c/dom/bootstrap/DOMImplementationRegistry.newInstance:()Lorg/w3c/dom/bootstrap/DOMImplementationRegistry;
       3: astore_2
       4: aload_2
       5: ldc           #46                 // String LS
       7: invokevirtual #50                 // Method org/w3c/dom/bootstrap/DOMImplementationRegistry.getDOMImplementation:(Ljava/lang/String;)Lorg/w3c/dom/DOMImplementation;
      10: checkcast     #52                 // class org/w3c/dom/ls/DOMImplementationLS
      13: astore_3
      14: new           #54                 // class java/io/StringWriter
      17: dup
      18: invokespecial #58                 // Method java/io/StringWriter."<init>":()V
      21: astore        4
      23: aload_3
      24: invokeinterface #62,  1           // InterfaceMethod org/w3c/dom/ls/DOMImplementationLS.createLSOutput:()Lorg/w3c/dom/ls/LSOutput;
      29: astore        5
      31: aload         5
      33: aload         4
      35: invokeinterface #68,  2           // InterfaceMethod org/w3c/dom/ls/LSOutput.setCharacterStream:(Ljava/io/Writer;)V
      40: aload_3
      41: invokeinterface #72,  1           // InterfaceMethod org/w3c/dom/ls/DOMImplementationLS.createLSSerializer:()Lorg/w3c/dom/ls/LSSerializer;
      46: astore        6
      48: aload         6
      50: invokeinterface #78,  1           // InterfaceMethod org/w3c/dom/ls/LSSerializer.getDomConfig:()Lorg/w3c/dom/DOMConfiguration;
      55: ldc           #80                 // String format-pretty-print
      57: iconst_1
      58: invokestatic  #86                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      61: invokeinterface #92,  3           // InterfaceMethod org/w3c/dom/DOMConfiguration.setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
      66: aload         6
      68: invokeinterface #78,  1           // InterfaceMethod org/w3c/dom/ls/LSSerializer.getDomConfig:()Lorg/w3c/dom/DOMConfiguration;
      73: ldc           #94                 // String xml-declaration
      75: iload_1
      76: invokestatic  #86                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: invokeinterface #92,  3           // InterfaceMethod org/w3c/dom/DOMConfiguration.setParameter:(Ljava/lang/String;Ljava/lang/Object;)V
      84: aload         6
      86: aload_0
      87: aload         5
      89: invokeinterface #98,  3           // InterfaceMethod org/w3c/dom/ls/LSSerializer.write:(Lorg/w3c/dom/Node;Lorg/w3c/dom/ls/LSOutput;)Z
      94: pop
      95: aload         4
      97: invokevirtual #102                // Method java/lang/Object.toString:()Ljava/lang/String;
     100: areturn
     101: astore_2
     102: new           #104                // class java/lang/RuntimeException
     105: dup
     106: ldc           #9                  // String Unable to format XML string
     108: aload_2
     109: invokespecial #107                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     112: athrow
    Exception table:
       from    to  target type
           0   100   101   Class java/lang/Exception

  private static org.w3c.dom.Document toXmlDocument(java.lang.String);
    Code:
       0: new           #125                // class org/xml/sax/InputSource
       3: dup
       4: new           #127                // class java/io/StringReader
       7: dup
       8: aload_0
       9: invokespecial #130                // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      12: invokespecial #133                // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
      15: astore_1
      16: invokestatic  #138                // Method javax/xml/parsers/DocumentBuilderFactory.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;
      19: invokevirtual #142                // Method javax/xml/parsers/DocumentBuilderFactory.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokevirtual #148                // Method javax/xml/parsers/DocumentBuilder.parse:(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;
      28: areturn
      29: astore_1
      30: new           #104                // class java/lang/RuntimeException
      33: dup
      34: ldc           #9                  // String Unable to format XML string
      36: aload_1
      37: invokespecial #107                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      40: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/lang/Exception

  private org.assertj.core.util.xml.XmlStringPrettyFormatter();
    Code:
       0: aload_0
       1: invokespecial #154                // Method java/lang/Object."<init>":()V
       4: return
}
