Compiled from "Delta.java"
public abstract class org.assertj.core.util.diff.Delta<T> {
  public static final java.lang.String DEFAULT_END;

  public static final java.lang.String DEFAULT_START;

  private org.assertj.core.util.diff.Chunk<T> original;

  private org.assertj.core.util.diff.Chunk<T> revised;

  public org.assertj.core.util.diff.Delta(org.assertj.core.util.diff.Chunk<T>, org.assertj.core.util.diff.Chunk<T>);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #29                 // String original must not be null
      15: iconst_0
      16: anewarray     #5                  // class java/lang/Object
      19: invokestatic  #35                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      22: aload_2
      23: ifnull        30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ldc           #37                 // String revised must not be null
      33: iconst_0
      34: anewarray     #5                  // class java/lang/Object
      37: invokestatic  #35                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: aload_1
      42: putfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      45: aload_0
      46: aload_2
      47: putfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      50: return

  public abstract void verify(java.util.List<T>) throws java.lang.IllegalStateException;

  public abstract void applyTo(java.util.List<T>) throws java.lang.IllegalStateException;

  public abstract org.assertj.core.util.diff.Delta$TYPE getType();

  public org.assertj.core.util.diff.Chunk<T> getOriginal();
    Code:
       0: aload_0
       1: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
       4: areturn

  public org.assertj.core.util.diff.Chunk<T> getRevised();
    Code:
       0: aload_0
       1: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
       4: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      24: invokevirtual #58                 // Method org/assertj/core/util/diff/Chunk.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      48: invokevirtual #58                 // Method org/assertj/core/util/diff/Chunk.hashCode:()I
      51: iadd
      52: istore_2
      53: iload_2
      54: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #67                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #67                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #2                  // class org/assertj/core/util/diff/Delta
      30: astore_2
      31: aload_0
      32: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      51: aload_2
      52: getfield      #39                 // Field original:Lorg/assertj/core/util/diff/Chunk;
      55: invokevirtual #69                 // Method org/assertj/core/util/diff/Chunk.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      67: ifnonnull     79
      70: aload_2
      71: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      74: ifnull        95
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      83: aload_2
      84: getfield      #41                 // Field revised:Lorg/assertj/core/util/diff/Chunk;
      87: invokevirtual #69                 // Method org/assertj/core/util/diff/Chunk.equals:(Ljava/lang/Object;)Z
      90: ifne          95
      93: iconst_0
      94: ireturn
      95: iconst_1
      96: ireturn

  public int lineNumber();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getOriginal:()Lorg/assertj/core/util/diff/Chunk;
       4: invokevirtual #78                 // Method org/assertj/core/util/diff/Chunk.getPosition:()I
       7: iconst_1
       8: iadd
       9: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #86                 // Field org/assertj/core/configuration/ConfigurationProvider.CONFIGURATION_PROVIDER:Lorg/assertj/core/configuration/ConfigurationProvider;
       3: invokevirtual #90                 // Method org/assertj/core/configuration/ConfigurationProvider.representation:()Lorg/assertj/core/presentation/Representation;
       6: aload_0
       7: invokeinterface #96,  2           // InterfaceMethod org/assertj/core/presentation/Representation.toStringOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: areturn
}
