Compiled from "PropertySupport.java"
public class org.assertj.core.util.introspection.PropertySupport {
  private static final java.lang.String SEPARATOR;

  private static final org.assertj.core.util.introspection.PropertySupport INSTANCE;

  public static org.assertj.core.util.introspection.PropertySupport instance();
    Code:
       0: getstatic     #15                 // Field INSTANCE:Lorg/assertj/core/util/introspection/PropertySupport;
       3: areturn

  org.assertj.core.util.introspection.PropertySupport();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: return

  public <T> java.util.List<T> propertyValues(java.lang.String, java.lang.Class<T>, java.lang.Iterable<?>);
    Code:
       0: aload_3
       1: invokestatic  #29                 // Method org/assertj/core/util/IterableUtil.isNullOrEmpty:(Ljava/lang/Iterable;)Z
       4: ifeq          11
       7: invokestatic  #35                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: aload_1
      13: invokespecial #39                 // Method isNestedProperty:(Ljava/lang/String;)Z
      16: ifeq          50
      19: aload_0
      20: aload_1
      21: invokespecial #43                 // Method popPropertyNameFrom:(Ljava/lang/String;)Ljava/lang/String;
      24: astore        4
      26: aload_0
      27: aload         4
      29: ldc           #4                  // class java/lang/Object
      31: aload_3
      32: invokevirtual #45                 // Method propertyValues:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Iterable;)Ljava/util/List;
      35: astore        5
      37: aload_0
      38: aload_0
      39: aload_1
      40: invokespecial #48                 // Method nextPropertyNameFrom:(Ljava/lang/String;)Ljava/lang/String;
      43: aload_2
      44: aload         5
      46: invokevirtual #45                 // Method propertyValues:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Iterable;)Ljava/util/List;
      49: areturn
      50: aload_0
      51: aload_1
      52: aload_2
      53: aload_3
      54: invokespecial #51                 // Method simplePropertyValues:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Iterable;)Ljava/util/List;
      57: areturn

  public static <T> T propertyValueOf(java.lang.String, java.lang.Object, java.lang.Class<T>);
    Code:
       0: invokestatic  #64                 // Method instance:()Lorg/assertj/core/util/introspection/PropertySupport;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokevirtual #67                 // Method propertyValueOf:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  private <T> java.util.List<T> simplePropertyValues(java.lang.String, java.lang.Class<T>, java.lang.Iterable<?>);
    Code:
       0: new           #70                 // class java/util/ArrayList
       3: dup
       4: invokespecial #71                 // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_3
      10: invokeinterface #77,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      15: astore        5
      17: aload         5
      19: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          64
      27: aload         5
      29: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: astore        6
      36: aload         4
      38: aload         6
      40: ifnonnull     47
      43: aconst_null
      44: goto          55
      47: aload_0
      48: aload_1
      49: aload_2
      50: aload         6
      52: invokevirtual #96                 // Method propertyValue:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      55: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: goto          17
      64: aload         4
      66: invokestatic  #104                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      69: areturn

  private java.lang.String popPropertyNameFrom(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // Method isNestedProperty:(Ljava/lang/String;)Z
       5: ifne          10
       8: aload_1
       9: areturn
      10: aload_1
      11: iconst_0
      12: aload_1
      13: ldc           #9                  // String .
      15: invokevirtual #111                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      18: invokevirtual #115                // Method java/lang/String.substring:(II)Ljava/lang/String;
      21: areturn

  private java.lang.String nextPropertyNameFrom(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // Method isNestedProperty:(Ljava/lang/String;)Z
       5: ifne          11
       8: ldc           #118                // String
      10: areturn
      11: aload_1
      12: aload_1
      13: ldc           #9                  // String .
      15: invokevirtual #111                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      18: iconst_1
      19: iadd
      20: invokevirtual #121                // Method java/lang/String.substring:(I)Ljava/lang/String;
      23: areturn

  private boolean isNestedProperty(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #9                  // String .
       3: invokevirtual #125                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          31
       9: aload_1
      10: ldc           #9                  // String .
      12: invokevirtual #128                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifne          31
      18: aload_1
      19: ldc           #9                  // String .
      21: invokevirtual #131                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public <T> T propertyValue(java.lang.String, java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokestatic  #141                // Method org/assertj/core/util/introspection/Introspection.getPropertyGetter:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/reflect/Method;
       5: astore        4
       7: aload         4
       9: aload_3
      10: iconst_0
      11: anewarray     #4                  // class java/lang/Object
      14: invokevirtual #147                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn
      18: astore        5
      20: ldc           #149                // String Unable to obtain the value of the property <\'%s\'> from <%s> - wrong property type specified <%s>
      22: iconst_3
      23: anewarray     #4                  // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_1
      29: aastore
      30: dup
      31: iconst_1
      32: aload_3
      33: aastore
      34: dup
      35: iconst_2
      36: aload_2
      37: aastore
      38: invokestatic  #153                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: astore        6
      43: new           #155                // class org/assertj/core/util/introspection/IntrospectionError
      46: dup
      47: aload         6
      49: aload         5
      51: invokespecial #158                // Method org/assertj/core/util/introspection/IntrospectionError."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
      55: astore        5
      57: ldc           #160                // String Unable to obtain the value of the property <\'%s\'> from <%s>
      59: iconst_2
      60: anewarray     #4                  // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_1
      66: aastore
      67: dup
      68: iconst_1
      69: aload_3
      70: aastore
      71: invokestatic  #153                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: astore        6
      76: new           #155                // class org/assertj/core/util/introspection/IntrospectionError
      79: dup
      80: aload         6
      82: aload         5
      84: invokespecial #158                // Method org/assertj/core/util/introspection/IntrospectionError."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: athrow
    Exception table:
       from    to  target type
           7    17    18   Class java/lang/ClassCastException
           7    17    55   Class java/lang/Exception

  public <T> T propertyValueOf(java.lang.String, java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #168                // String the property name should not be null.
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokestatic  #174                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_3
      19: ifnonnull     24
      22: aconst_null
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #39                 // Method isNestedProperty:(Ljava/lang/String;)Z
      29: ifeq          63
      32: aload_0
      33: aload_1
      34: invokespecial #43                 // Method popPropertyNameFrom:(Ljava/lang/String;)Ljava/lang/String;
      37: astore        4
      39: aload_0
      40: aload         4
      42: ldc           #4                  // class java/lang/Object
      44: aload_3
      45: invokevirtual #96                 // Method propertyValue:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        5
      50: aload_0
      51: aload_0
      52: aload_1
      53: invokespecial #48                 // Method nextPropertyNameFrom:(Ljava/lang/String;)Ljava/lang/String;
      56: aload_2
      57: aload         5
      59: invokevirtual #67                 // Method propertyValueOf:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      62: areturn
      63: aload_0
      64: aload_1
      65: aload_2
      66: aload_3
      67: invokevirtual #96                 // Method propertyValue:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      70: areturn

  public java.util.List<java.lang.Object> propertyValues(java.lang.String, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #4                  // class java/lang/Object
       4: aload_2
       5: invokevirtual #45                 // Method propertyValues:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Iterable;)Ljava/util/List;
       8: areturn

  public boolean publicGetterExistsFor(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #141                // Method org/assertj/core/util/introspection/Introspection.getPropertyGetter:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/reflect/Method;
       5: pop
       6: goto          12
       9: astore_3
      10: iconst_0
      11: ireturn
      12: iconst_1
      13: ireturn
    Exception table:
       from    to  target type
           0     6     9   Class org/assertj/core/util/introspection/IntrospectionError

  static {};
    Code:
       0: new           #2                  // class org/assertj/core/util/introspection/PropertySupport
       3: dup
       4: invokespecial #183                // Method "<init>":()V
       7: putstatic     #15                 // Field INSTANCE:Lorg/assertj/core/util/introspection/PropertySupport;
      10: return
}
