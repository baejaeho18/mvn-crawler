Compiled from "PropertyOrFieldSupport.java"
public class org.assertj.core.util.introspection.PropertyOrFieldSupport {
  private static final java.lang.String SEPARATOR;

  private org.assertj.core.util.introspection.PropertySupport propertySupport;

  private org.assertj.core.util.introspection.FieldSupport fieldSupport;

  public static final org.assertj.core.util.introspection.PropertyOrFieldSupport EXTRACTION;

  public static final org.assertj.core.util.introspection.PropertyOrFieldSupport COMPARISON;

  org.assertj.core.util.introspection.PropertyOrFieldSupport();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #26                 // Method org/assertj/core/util/introspection/PropertySupport.instance:()Lorg/assertj/core/util/introspection/PropertySupport;
       8: putfield      #28                 // Field propertySupport:Lorg/assertj/core/util/introspection/PropertySupport;
      11: aload_0
      12: invokestatic  #34                 // Method org/assertj/core/util/introspection/FieldSupport.extraction:()Lorg/assertj/core/util/introspection/FieldSupport;
      15: putfield      #36                 // Field fieldSupport:Lorg/assertj/core/util/introspection/FieldSupport;
      18: return

  org.assertj.core.util.introspection.PropertyOrFieldSupport(org.assertj.core.util.introspection.PropertySupport, org.assertj.core.util.introspection.FieldSupport);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #28                 // Field propertySupport:Lorg/assertj/core/util/introspection/PropertySupport;
       9: aload_0
      10: aload_2
      11: putfield      #36                 // Field fieldSupport:Lorg/assertj/core/util/introspection/FieldSupport;
      14: return

  public void setAllowUsingPrivateFields(boolean);
    Code:
       0: aload_0
       1: getfield      #36                 // Field fieldSupport:Lorg/assertj/core/util/introspection/FieldSupport;
       4: iload_1
       5: invokevirtual #43                 // Method org/assertj/core/util/introspection/FieldSupport.setAllowUsingPrivateFields:(Z)V
       8: return

  public java.lang.Object getValueOf(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #49                 // String The name of the property/field to read should not be null
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokestatic  #55                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_1
      19: invokevirtual #61                 // Method java/lang/String.isEmpty:()Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ldc           #63                 // String The name of the property/field to read should not be empty
      32: iconst_0
      33: anewarray     #4                  // class java/lang/Object
      36: invokestatic  #55                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      39: aload_2
      40: ifnull        47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ldc           #65                 // String The object to extract property/field from should not be null
      50: iconst_0
      51: anewarray     #4                  // class java/lang/Object
      54: invokestatic  #55                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      57: aload_0
      58: aload_1
      59: invokespecial #69                 // Method isNested:(Ljava/lang/String;)Z
      62: ifeq          98
      65: aload_0
      66: aload_1
      67: invokespecial #73                 // Method popNameFrom:(Ljava/lang/String;)Ljava/lang/String;
      70: astore_3
      71: aload_0
      72: aload_3
      73: aload_2
      74: invokevirtual #76                 // Method getSimpleValue:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      77: astore        4
      79: aload         4
      81: ifnonnull     86
      84: aconst_null
      85: areturn
      86: aload_0
      87: aload_0
      88: aload_1
      89: invokespecial #79                 // Method nextNameFrom:(Ljava/lang/String;)Ljava/lang/String;
      92: aload         4
      94: invokevirtual #81                 // Method getValueOf:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      97: areturn
      98: aload_0
      99: aload_1
     100: aload_2
     101: invokevirtual #76                 // Method getSimpleValue:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     104: areturn

  public java.lang.Object getSimpleValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #28                 // Field propertySupport:Lorg/assertj/core/util/introspection/PropertySupport;
       4: aload_1
       5: ldc           #4                  // class java/lang/Object
       7: aload_2
       8: invokevirtual #92                 // Method org/assertj/core/util/introspection/PropertySupport.propertyValueOf:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn
      12: astore_3
      13: aload_0
      14: getfield      #36                 // Field fieldSupport:Lorg/assertj/core/util/introspection/FieldSupport;
      17: aload_1
      18: ldc           #4                  // class java/lang/Object
      20: aload_2
      21: invokevirtual #95                 // Method org/assertj/core/util/introspection/FieldSupport.fieldValue:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      24: areturn
      25: astore        4
      27: ldc           #97                 // String %nCan\'t find any field or property with name \'%s\'.%nError when introspecting properties was :%n- %s %nError when introspecting fields was :%n- %s
      29: iconst_3
      30: anewarray     #4                  // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_1
      36: aastore
      37: dup
      38: iconst_1
      39: aload_3
      40: invokevirtual #101                // Method org/assertj/core/util/introspection/IntrospectionError.getMessage:()Ljava/lang/String;
      43: aastore
      44: dup
      45: iconst_2
      46: aload         4
      48: invokevirtual #101                // Method org/assertj/core/util/introspection/IntrospectionError.getMessage:()Ljava/lang/String;
      51: aastore
      52: invokestatic  #105                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      55: astore        5
      57: new           #88                 // class org/assertj/core/util/introspection/IntrospectionError
      60: dup
      61: aload         5
      63: aload         4
      65: invokespecial #108                // Method org/assertj/core/util/introspection/IntrospectionError."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: athrow
    Exception table:
       from    to  target type
           0    11    12   Class org/assertj/core/util/introspection/IntrospectionError
          13    24    25   Class org/assertj/core/util/introspection/IntrospectionError

  private java.lang.String popNameFrom(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #69                 // Method isNested:(Ljava/lang/String;)Z
       5: ifne          10
       8: aload_1
       9: areturn
      10: aload_1
      11: iconst_0
      12: aload_1
      13: ldc           #9                  // String .
      15: invokevirtual #116                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      18: invokevirtual #120                // Method java/lang/String.substring:(II)Ljava/lang/String;
      21: areturn

  private java.lang.String nextNameFrom(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #69                 // Method isNested:(Ljava/lang/String;)Z
       5: ifne          11
       8: ldc           #123                // String
      10: areturn
      11: aload_1
      12: aload_1
      13: ldc           #9                  // String .
      15: invokevirtual #116                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      18: iconst_1
      19: iadd
      20: invokevirtual #126                // Method java/lang/String.substring:(I)Ljava/lang/String;
      23: areturn

  private boolean isNested(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #9                  // String .
       3: invokevirtual #130                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          31
       9: aload_1
      10: ldc           #9                  // String .
      12: invokevirtual #133                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifne          31
      18: aload_1
      19: ldc           #9                  // String .
      21: invokevirtual #136                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  static {};
    Code:
       0: new           #2                  // class org/assertj/core/util/introspection/PropertyOrFieldSupport
       3: dup
       4: invokespecial #138                // Method "<init>":()V
       7: putstatic     #140                // Field EXTRACTION:Lorg/assertj/core/util/introspection/PropertyOrFieldSupport;
      10: new           #2                  // class org/assertj/core/util/introspection/PropertyOrFieldSupport
      13: dup
      14: invokestatic  #26                 // Method org/assertj/core/util/introspection/PropertySupport.instance:()Lorg/assertj/core/util/introspection/PropertySupport;
      17: getstatic     #142                // Field org/assertj/core/util/introspection/FieldSupport.COMPARISON:Lorg/assertj/core/util/introspection/FieldSupport;
      20: invokespecial #144                // Method "<init>":(Lorg/assertj/core/util/introspection/PropertySupport;Lorg/assertj/core/util/introspection/FieldSupport;)V
      23: putstatic     #146                // Field COMPARISON:Lorg/assertj/core/util/introspection/PropertyOrFieldSupport;
      26: return
}
