Compiled from "ArrayWrapperList.java"
public class org.assertj.core.util.ArrayWrapperList extends java.util.AbstractList<java.lang.Object> {
  final java.lang.Object array;

  public static org.assertj.core.util.ArrayWrapperList wrap(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #23                 // Method java/lang/Class.isArray:()Z
      13: ldc           #25                 // String The object to wrap should be an array
      15: iconst_0
      16: anewarray     #13                 // class java/lang/Object
      19: invokestatic  #31                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      22: new           #2                  // class org/assertj/core/util/ArrayWrapperList
      25: dup
      26: aload_0
      27: invokespecial #35                 // Method "<init>":(Ljava/lang/Object;)V
      30: areturn

  org.assertj.core.util.ArrayWrapperList(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #40                 // Field array:Ljava/lang/Object;
       9: return

  public java.lang.Object get(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #48                 // Method checkIsInRange:(I)V
       5: aload_0
       6: getfield      #40                 // Field array:Ljava/lang/Object;
       9: iload_1
      10: invokestatic  #53                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      13: areturn

  private void checkIsInRange(int);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method size:()I
       4: istore_2
       5: iload_1
       6: iflt          18
       9: iload_1
      10: aload_0
      11: invokevirtual #59                 // Method size:()I
      14: if_icmpge     18
      17: return
      18: ldc           #61                 // String Index should be between 0 and %d (inclusive,) but was %d
      20: iconst_2
      21: anewarray     #13                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload_2
      27: iconst_1
      28: isub
      29: invokestatic  #67                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: dup
      34: iconst_1
      35: iload_1
      36: invokestatic  #67                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: invokestatic  #73                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: astore_3
      44: new           #75                 // class java/lang/IndexOutOfBoundsException
      47: dup
      48: aload_3
      49: invokespecial #78                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      52: athrow

  public int size();
    Code:
       0: aload_0
       1: getfield      #40                 // Field array:Ljava/lang/Object;
       4: invokestatic  #84                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
       7: ireturn

  public java.lang.Class<?> getComponentType();
    Code:
       0: aload_0
       1: getfield      #40                 // Field array:Ljava/lang/Object;
       4: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #87                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      10: areturn
}
