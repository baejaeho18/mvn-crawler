Compiled from "ShouldNotBeEqualWithinOffset.java"
public class org.assertj.core.error.ShouldNotBeEqualWithinOffset extends org.assertj.core.error.BasicErrorMessageFactory {
  public static <T extends java.lang.Number> org.assertj.core.error.ErrorMessageFactory shouldNotBeEqual(T, T, org.assertj.core.data.Offset<T>, T);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldNotBeEqualWithinOffset
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #11                 // Method "<init>":(Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;Ljava/lang/Number;)V
      11: areturn

  private <T extends java.lang.Number> org.assertj.core.error.ShouldNotBeEqualWithinOffset(java.lang.Number, java.lang.Number, org.assertj.core.data.Offset<T>, java.lang.Number);
    Code:
       0: aload_0
       1: new           #21                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #26                 // String %nExpecting:%n  <%s>%nnot to be close to:%n  <%s>%nby less than <%s> but difference was <%s>.%n(a difference of exactly <%s> being considered
      10: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_3
      14: invokestatic  #34                 // Method validOrNot:(Lorg/assertj/core/data/Offset;)Ljava/lang/String;
      17: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #36                 // String )
      22: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: iconst_5
      29: anewarray     #42                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: dup
      37: iconst_1
      38: aload_2
      39: aastore
      40: dup
      41: iconst_2
      42: aload_3
      43: getfield      #47                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      46: aastore
      47: dup
      48: iconst_3
      49: aload         4
      51: aastore
      52: dup
      53: iconst_4
      54: aload_3
      55: getfield      #47                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      58: aastore
      59: invokespecial #50                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      62: return

  private static <T extends java.lang.Number> java.lang.String validOrNot(org.assertj.core.data.Offset<T>);
    Code:
       0: aload_0
       1: getfield      #56                 // Field org/assertj/core/data/Offset.strict:Z
       4: ifeq          12
       7: ldc           #58                 // String valid
       9: goto          14
      12: ldc           #60                 // String invalid
      14: areturn
}
