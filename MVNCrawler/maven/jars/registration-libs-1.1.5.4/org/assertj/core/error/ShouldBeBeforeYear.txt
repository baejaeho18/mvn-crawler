Compiled from "ShouldBeBeforeYear.java"
public class org.assertj.core.error.ShouldBeBeforeYear extends org.assertj.core.error.BasicErrorMessageFactory {
  public static org.assertj.core.error.ErrorMessageFactory shouldBeBeforeYear(java.util.Date, int, org.assertj.core.internal.ComparisonStrategy);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeBeforeYear
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #11                 // Method "<init>":(Ljava/util/Date;ILorg/assertj/core/internal/ComparisonStrategy;)V
      10: areturn

  public static org.assertj.core.error.ErrorMessageFactory shouldBeBeforeYear(java.util.Date, int);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeBeforeYear
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #24                 // Method org/assertj/core/internal/StandardComparisonStrategy.instance:()Lorg/assertj/core/internal/StandardComparisonStrategy;
       9: invokespecial #11                 // Method "<init>":(Ljava/util/Date;ILorg/assertj/core/internal/ComparisonStrategy;)V
      12: areturn

  private org.assertj.core.error.ShouldBeBeforeYear(java.util.Date, int, org.assertj.core.internal.ComparisonStrategy);
    Code:
       0: aload_0
       1: ldc           #26                 // String %nExpecting year of:%n <%s>%nto be strictly before year:%n <%s>%s
       3: iconst_3
       4: anewarray     #28                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: iload_2
      14: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_3
      21: aastore
      22: invokespecial #37                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      25: return
}
