Compiled from "ShouldBeEqualIgnoringNanos.java"
public class org.assertj.core.error.ShouldBeEqualIgnoringNanos extends org.assertj.core.error.BasicErrorMessageFactory {
  public static org.assertj.core.error.ErrorMessageFactory shouldBeEqualIgnoringNanos(java.lang.Object, java.lang.Object);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeEqualIgnoringNanos
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static org.assertj.core.error.ErrorMessageFactory shouldBeEqualIgnoringNanos(java.time.LocalTime, java.time.LocalTime);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeEqualIgnoringNanos
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #18                 // Method "<init>":(Ljava/time/LocalTime;Ljava/time/LocalTime;)V
       9: areturn

  public static org.assertj.core.error.ErrorMessageFactory shouldBeEqualIgnoringNanos(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeEqualIgnoringNanos
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #23                 // Method "<init>":(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)V
       9: areturn

  private org.assertj.core.error.ShouldBeEqualIgnoringNanos(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #26                 // String %nExpecting:%n  <%s>%nto have same year, month, day, hour, minute and second as:%n  <%s>%nbut had not.
       3: iconst_2
       4: anewarray     #28                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokespecial #31                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      18: return

  private org.assertj.core.error.ShouldBeEqualIgnoringNanos(java.time.LocalTime, java.time.LocalTime);
    Code:
       0: aload_0
       1: ldc           #35                 // String %nExpecting:%n  <%s>%nto have same hour, minute and second as:%n  <%s>%nbut had not.
       3: iconst_2
       4: anewarray     #28                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokespecial #31                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      18: return

  private org.assertj.core.error.ShouldBeEqualIgnoringNanos(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: ldc           #35                 // String %nExpecting:%n  <%s>%nto have same hour, minute and second as:%n  <%s>%nbut had not.
       3: iconst_2
       4: anewarray     #28                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokespecial #31                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      18: return
}
