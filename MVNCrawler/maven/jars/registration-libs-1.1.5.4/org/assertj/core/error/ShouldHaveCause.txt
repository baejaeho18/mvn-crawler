Compiled from "ShouldHaveCause.java"
public class org.assertj.core.error.ShouldHaveCause extends org.assertj.core.error.BasicErrorMessageFactory {
  public static org.assertj.core.error.ErrorMessageFactory shouldHaveCause(java.lang.Throwable, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #9                  // String expected cause should not be null
      11: iconst_0
      12: anewarray     #11                 // class java/lang/Object
      15: invokestatic  #17                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_0
      19: ifnonnull     31
      22: new           #2                  // class org/assertj/core/error/ShouldHaveCause
      25: dup
      26: aload_1
      27: invokespecial #21                 // Method "<init>":(Ljava/lang/Throwable;)V
      30: areturn
      31: aload_0
      32: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      35: aload_1
      36: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      39: invokestatic  #33                 // Method org/assertj/core/util/Objects.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      42: ifeq          58
      45: new           #2                  // class org/assertj/core/error/ShouldHaveCause
      48: dup
      49: aload_0
      50: aload_1
      51: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokespecial #40                 // Method "<init>":(Ljava/lang/Throwable;Ljava/lang/Class;)V
      57: areturn
      58: aload_0
      59: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: aload_1
      63: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokestatic  #33                 // Method org/assertj/core/util/Objects.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          85
      72: new           #2                  // class org/assertj/core/error/ShouldHaveCause
      75: dup
      76: aload_0
      77: aload_1
      78: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      81: invokespecial #43                 // Method "<init>":(Ljava/lang/Throwable;Ljava/lang/String;)V
      84: areturn
      85: new           #2                  // class org/assertj/core/error/ShouldHaveCause
      88: dup
      89: aload_0
      90: aload_1
      91: invokespecial #46                 // Method "<init>":(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
      94: areturn

  private org.assertj.core.error.ShouldHaveCause(java.lang.Throwable, java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #51                 // String %nExpecting a cause with type:%n  <%s>%nand message:%n  <%s>%nbut type was:%n  <%s>%nand message was:%n  <%s>.
       3: iconst_4
       4: anewarray     #11                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_2
      10: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #56                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_2
      20: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      23: aastore
      24: dup
      25: iconst_2
      26: aload_1
      27: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #56                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: aastore
      34: dup
      35: iconst_3
      36: aload_1
      37: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      40: aastore
      41: invokespecial #59                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      44: return

  private org.assertj.core.error.ShouldHaveCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #63                 // String %nExpecting a cause with type:%n  <%s>%nand message:%n  <%s>%nbut actualCause had no cause.
       3: iconst_2
       4: anewarray     #11                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #56                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_1
      20: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      23: aastore
      24: invokespecial #59                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      27: return

  private org.assertj.core.error.ShouldHaveCause(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: ldc           #65                 // String %nExpecting a cause with type:%n  <%s>%nbut type was:%n  <%s>.
       3: iconst_2
       4: anewarray     #11                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_2
      10: invokevirtual #56                 // Method java/lang/Class.getName:()Ljava/lang/String;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_1
      17: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #56                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: aastore
      24: invokespecial #59                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      27: return

  private org.assertj.core.error.ShouldHaveCause(java.lang.Throwable, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #70                 // String %nExpecting a cause with message:%n  <%s>%nbut message was:%n  <%s>.
       3: iconst_2
       4: anewarray     #11                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_2
      10: aastore
      11: dup
      12: iconst_1
      13: aload_1
      14: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      17: aastore
      18: invokespecial #59                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      21: return
}
