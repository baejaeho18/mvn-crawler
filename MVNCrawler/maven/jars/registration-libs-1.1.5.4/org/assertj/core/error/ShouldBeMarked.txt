Compiled from "ShouldBeMarked.java"
public class org.assertj.core.error.ShouldBeMarked extends org.assertj.core.error.BasicErrorMessageFactory {
  private static final java.lang.String EXPECTING_TO_BE_MARKED;

  private static final java.lang.String EXPECTING_NOT_TO_BE_MARKED;

  public static org.assertj.core.error.ErrorMessageFactory shouldBeMarked(java.util.concurrent.atomic.AtomicMarkableReference<?>);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeMarked
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #18                 // Method "<init>":(Ljava/util/concurrent/atomic/AtomicMarkableReference;Z)V
       9: areturn

  public static org.assertj.core.error.ErrorMessageFactory shouldNotBeMarked(java.util.concurrent.atomic.AtomicMarkableReference<?>);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeMarked
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #18                 // Method "<init>":(Ljava/util/concurrent/atomic/AtomicMarkableReference;Z)V
       9: areturn

  private org.assertj.core.error.ShouldBeMarked(java.util.concurrent.atomic.AtomicMarkableReference<?>, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: ifeq          10
       5: ldc           #9                  // String %nExpecting <%s> to be a marked but was not
       7: goto          12
      10: ldc           #12                 // String %nExpecting <%s> not to be a marked but was
      12: iconst_1
      13: anewarray     #28                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: invokespecial #31                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      23: return
}
