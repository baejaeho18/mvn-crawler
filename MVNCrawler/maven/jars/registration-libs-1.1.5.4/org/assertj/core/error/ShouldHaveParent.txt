Compiled from "ShouldHaveParent.java"
public class org.assertj.core.error.ShouldHaveParent extends org.assertj.core.error.BasicErrorMessageFactory {
  public static final java.lang.String PATH_NO_PARENT;

  public static final java.lang.String PATH_NOT_EXPECTED_PARENT;

  public static final java.lang.String FILE_NO_PARENT;

  public static final java.lang.String FILE_NOT_EXPECTED_PARENT;

  public static org.assertj.core.error.ShouldHaveParent shouldHaveParent(java.io.File, java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/io/File.getParentFile:()Ljava/io/File;
       4: ifnonnull     19
       7: new           #2                  // class org/assertj/core/error/ShouldHaveParent
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #31                 // Method "<init>":(Ljava/io/File;Ljava/io/File;)V
      16: goto          32
      19: new           #2                  // class org/assertj/core/error/ShouldHaveParent
      22: dup
      23: aload_0
      24: aload_0
      25: invokevirtual #27                 // Method java/io/File.getParentFile:()Ljava/io/File;
      28: aload_1
      29: invokespecial #34                 // Method "<init>":(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V
      32: areturn

  public static org.assertj.core.error.ShouldHaveParent shouldHaveParent(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
       6: astore_2
       7: aload_2
       8: ifnonnull     23
      11: new           #2                  // class org/assertj/core/error/ShouldHaveParent
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #47                 // Method "<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      20: goto          33
      23: new           #2                  // class org/assertj/core/error/ShouldHaveParent
      26: dup
      27: aload_0
      28: aload_2
      29: aload_1
      30: invokespecial #50                 // Method "<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      33: areturn

  public static org.assertj.core.error.ShouldHaveParent shouldHaveParent(java.nio.file.Path, java.nio.file.Path, java.nio.file.Path);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldHaveParent
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #50                 // Method "<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      10: areturn

  private org.assertj.core.error.ShouldHaveParent(java.io.File, java.io.File);
    Code:
       0: aload_0
       1: ldc           #16                 // String %nExpecting file%n  <%s>%nto have parent:%n  <%s>%nbut did not have one.
       3: iconst_2
       4: anewarray     #55                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokespecial #58                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      18: return

  private org.assertj.core.error.ShouldHaveParent(java.io.File, java.io.File, java.io.File);
    Code:
       0: aload_0
       1: ldc           #19                 // String %nExpecting file%n  <%s>%nto have parent:%n  <%s>%nbut had:%n  <%s>.
       3: iconst_3
       4: anewarray     #55                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_3
      14: aastore
      15: dup
      16: iconst_2
      17: aload_2
      18: aastore
      19: invokespecial #58                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  private org.assertj.core.error.ShouldHaveParent(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: ldc           #9                  // String %nExpecting path%n  <%s>%nto have parent:%n  <%s>%nbut did not have one.
       3: iconst_2
       4: anewarray     #55                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokespecial #58                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      18: return

  private org.assertj.core.error.ShouldHaveParent(java.nio.file.Path, java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: ldc           #13                 // String %nExpecting path%n  <%s>%nto have parent:%n  <%s>%nbut had:%n  <%s>.
       3: iconst_3
       4: anewarray     #55                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_3
      14: aastore
      15: dup
      16: iconst_2
      17: aload_2
      18: aastore
      19: invokespecial #58                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      22: return
}
