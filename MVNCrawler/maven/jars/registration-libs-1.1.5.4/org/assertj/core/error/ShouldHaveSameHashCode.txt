Compiled from "ShouldHaveSameHashCode.java"
public class org.assertj.core.error.ShouldHaveSameHashCode extends org.assertj.core.error.BasicErrorMessageFactory {
  public static org.assertj.core.error.ErrorMessageFactory shouldHaveSameHashCode(java.lang.Object, java.lang.Object);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldHaveSameHashCode
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  private org.assertj.core.error.ShouldHaveSameHashCode(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #16                 // String %nExpecting%n  <%s>%nto have the same hash code as:%n  <%s>%nbut actual hash code is%n  <%s>%nwhile expected hash code was:%n  <%s>
       3: iconst_4
       4: anewarray     #18                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: dup
      16: iconst_2
      17: aload_1
      18: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      21: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: dup
      26: iconst_3
      27: aload_2
      28: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      31: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokespecial #31                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      38: return
}
