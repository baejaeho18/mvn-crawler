Compiled from "OptionalDoubleShouldHaveValueCloseTo.java"
public class org.assertj.core.error.OptionalDoubleShouldHaveValueCloseTo extends org.assertj.core.error.BasicErrorMessageFactory {
  private org.assertj.core.error.OptionalDoubleShouldHaveValueCloseTo(java.util.OptionalDouble, double, org.assertj.core.data.Offset<java.lang.Double>, double);
    Code:
       0: aload_0
       1: ldc           #9                  // String %nExpecting:%n  <%s>%nto be close to:%n  <%s>%nby less than <%s> but difference was <%s>.%n(a difference of exactly <%s> being considered valid)
       3: iconst_5
       4: anewarray     #11                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: dload_2
      14: invokestatic  #17                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      17: aastore
      18: dup
      19: iconst_2
      20: aload         4
      22: getfield      #23                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      25: aastore
      26: dup
      27: iconst_3
      28: dload         5
      30: invokestatic  #17                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      33: aastore
      34: dup
      35: iconst_4
      36: aload         4
      38: getfield      #23                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      41: aastore
      42: invokespecial #26                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      45: return

  private org.assertj.core.error.OptionalDoubleShouldHaveValueCloseTo(double);
    Code:
       0: aload_0
       1: ldc           #39                 // String %nExpecting an OptionalDouble with value:%n  <%s>%nbut was empty.
       3: iconst_1
       4: anewarray     #11                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: dload_1
      10: invokestatic  #17                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      13: aastore
      14: invokespecial #26                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      17: return

  public static org.assertj.core.error.OptionalDoubleShouldHaveValueCloseTo shouldHaveValueCloseTo(java.util.OptionalDouble, double, org.assertj.core.data.Offset<java.lang.Double>, double);
    Code:
       0: new           #2                  // class org/assertj/core/error/OptionalDoubleShouldHaveValueCloseTo
       3: dup
       4: aload_0
       5: dload_1
       6: aload_3
       7: dload         4
       9: invokespecial #43                 // Method "<init>":(Ljava/util/OptionalDouble;DLorg/assertj/core/data/Offset;D)V
      12: areturn

  public static org.assertj.core.error.OptionalDoubleShouldHaveValueCloseTo shouldHaveValueCloseTo(double);
    Code:
       0: new           #2                  // class org/assertj/core/error/OptionalDoubleShouldHaveValueCloseTo
       3: dup
       4: dload_0
       5: invokespecial #48                 // Method "<init>":(D)V
       8: areturn
}
