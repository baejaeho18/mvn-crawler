Compiled from "ShouldBeEqualIgnoringTimezone.java"
public class org.assertj.core.error.ShouldBeEqualIgnoringTimezone extends org.assertj.core.error.BasicErrorMessageFactory {
  public static org.assertj.core.error.ErrorMessageFactory shouldBeEqualIgnoringTimezone(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeEqualIgnoringTimezone
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static org.assertj.core.error.ErrorMessageFactory shouldBeEqualIgnoringTimezone(java.time.OffsetDateTime, java.time.OffsetDateTime);
    Code:
       0: new           #2                  // class org/assertj/core/error/ShouldBeEqualIgnoringTimezone
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  private org.assertj.core.error.ShouldBeEqualIgnoringTimezone(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #18                 // String %nExpecting:%n  <%s>%nto have same time fields except timezone as:%n  <%s>%nbut had not.
       3: iconst_2
       4: anewarray     #20                 // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: dup
      12: iconst_1
      13: aload_2
      14: aastore
      15: invokespecial #23                 // Method org/assertj/core/error/BasicErrorMessageFactory."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      18: return
}
