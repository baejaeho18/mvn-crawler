Compiled from "NumberGrouping.java"
final class org.assertj.core.presentation.NumberGrouping {
  private static final java.lang.String UNDERSCORE_SEPARATOR;

  private static java.util.regex.Pattern hexGroupPattern;

  private static java.util.regex.Pattern binaryGroupPattern;

  static java.lang.String toHexLiteral(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method java/lang/String.length:()I
       4: iconst_4
       5: if_icmple     18
       8: getstatic     #22                 // Field hexGroupPattern:Ljava/util/regex/Pattern;
      11: aload_0
      12: invokestatic  #25                 // Method toHexLiteral:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;
      15: goto          19
      18: aload_0
      19: areturn

  static java.lang.String toBinaryLiteral(java.lang.String);
    Code:
       0: getstatic     #29                 // Field binaryGroupPattern:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokestatic  #25                 // Method toHexLiteral:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  private static java.lang.String toHexLiteral(java.util.regex.Pattern, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       5: astore_2
       6: new           #37                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      13: astore_3
      14: aload_2
      15: invokevirtual #47                 // Method java/util/regex/Matcher.find:()Z
      18: ifeq          52
      21: aload_2
      22: iconst_1
      23: invokevirtual #51                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      26: astore        4
      28: aload_3
      29: invokestatic  #55                 // Method notEmpty:(Ljava/lang/StringBuilder;)Z
      32: ifeq          42
      35: aload_3
      36: ldc           #9                  // String _
      38: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: aload         4
      45: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: goto          14
      52: aload_3
      53: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  private static boolean notEmpty(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method java/lang/StringBuilder.length:()I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private org.assertj.core.presentation.NumberGrouping();
    Code:
       0: aload_0
       1: invokespecial #71                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #76                 // String ([0-9|A-Z]{4})
       2: invokestatic  #80                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #22                 // Field hexGroupPattern:Ljava/util/regex/Pattern;
       8: ldc           #82                 // String ([0-1]{8})
      10: invokestatic  #80                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #29                 // Field binaryGroupPattern:Ljava/util/regex/Pattern;
      16: return
}
