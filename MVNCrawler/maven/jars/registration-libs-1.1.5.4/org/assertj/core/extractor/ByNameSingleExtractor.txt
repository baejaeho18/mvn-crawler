Compiled from "ByNameSingleExtractor.java"
class org.assertj.core.extractor.ByNameSingleExtractor<T> implements org.assertj.core.api.iterable.Extractor<T, java.lang.Object> {
  private final java.lang.String propertyOrFieldName;

  org.assertj.core.extractor.ByNameSingleExtractor(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #18                 // Field propertyOrFieldName:Ljava/lang/String;
       9: return

  public java.lang.Object extract(T);
    Code:
       0: aload_0
       1: getfield      #18                 // Field propertyOrFieldName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #25                 // String The name of the field/property to read should not be null
      14: iconst_0
      15: anewarray     #5                  // class java/lang/Object
      18: invokestatic  #31                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #18                 // Field propertyOrFieldName:Ljava/lang/String;
      25: invokevirtual #37                 // Method java/lang/String.length:()I
      28: ifle          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #39                 // String The name of the field/property to read should not be empty
      38: iconst_0
      39: anewarray     #5                  // class java/lang/Object
      42: invokestatic  #31                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      45: aload_1
      46: ifnull        53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #41                 // String The object to extract field/property from should not be null
      56: iconst_0
      57: anewarray     #5                  // class java/lang/Object
      60: invokestatic  #31                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      63: aload_1
      64: instanceof    #43                 // class java/util/Map
      67: ifeq          86
      70: aload_1
      71: checkcast     #43                 // class java/util/Map
      74: astore_2
      75: aload_2
      76: aload_0
      77: getfield      #18                 // Field propertyOrFieldName:Ljava/lang/String;
      80: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      85: areturn
      86: getstatic     #52                 // Field org/assertj/core/util/introspection/PropertyOrFieldSupport.EXTRACTION:Lorg/assertj/core/util/introspection/PropertyOrFieldSupport;
      89: aload_0
      90: getfield      #18                 // Field propertyOrFieldName:Ljava/lang/String;
      93: aload_1
      94: invokevirtual #56                 // Method org/assertj/core/util/introspection/PropertyOrFieldSupport.getValueOf:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      97: areturn
}
