Compiled from "MapAssert.java"
public class org.assertj.core.api.MapAssert<KEY, VALUE> extends org.assertj.core.api.AbstractMapAssert<org.assertj.core.api.MapAssert<KEY, VALUE>, java.util.Map<KEY, VALUE>, KEY, VALUE> {
  public org.assertj.core.api.MapAssert(java.util.Map<KEY, VALUE>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/MapAssert
       4: invokespecial #16                 // Method org/assertj/core/api/AbstractMapAssert."<init>":(Ljava/util/Map;Ljava/lang/Class;)V
       7: return

  public final org.assertj.core.api.MapAssert<KEY, VALUE> contains(java.util.Map$Entry<? extends KEY, ? extends VALUE>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method org/assertj/core/api/AbstractMapAssert.contains:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> containsAnyOf(java.util.Map$Entry<? extends KEY, ? extends VALUE>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method org/assertj/core/api/AbstractMapAssert.containsAnyOf:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> containsOnly(java.util.Map$Entry<? extends KEY, ? extends VALUE>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method org/assertj/core/api/AbstractMapAssert.containsOnly:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> containsExactly(java.util.Map$Entry<? extends KEY, ? extends VALUE>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method org/assertj/core/api/AbstractMapAssert.containsExactly:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> containsKeys(KEY...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #45                 // Method org/assertj/core/api/AbstractMapAssert.containsKeys:([Ljava/lang/Object;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> containsOnlyKeys(KEY...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method org/assertj/core/api/AbstractMapAssert.containsOnlyKeys:([Ljava/lang/Object;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> containsValues(VALUE...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method org/assertj/core/api/AbstractMapAssert.containsValues:([Ljava/lang/Object;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> doesNotContainKeys(KEY...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #59                 // Method org/assertj/core/api/AbstractMapAssert.doesNotContainKeys:([Ljava/lang/Object;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public final org.assertj.core.api.MapAssert<KEY, VALUE> doesNotContain(java.util.Map$Entry<? extends KEY, ? extends VALUE>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #62                 // Method org/assertj/core/api/AbstractMapAssert.doesNotContain:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/AbstractMapAssert;
       5: checkcast     #2                  // class org/assertj/core/api/MapAssert
       8: areturn

  public org.assertj.core.api.AbstractMapAssert containsExactly(java.util.Map$Entry[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method containsExactly:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert containsOnly(java.util.Map$Entry[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method containsOnly:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert containsValues(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method containsValues:([Ljava/lang/Object;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert containsOnlyKeys(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method containsOnlyKeys:([Ljava/lang/Object;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert doesNotContainKeys(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method doesNotContainKeys:([Ljava/lang/Object;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert containsKeys(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method containsKeys:([Ljava/lang/Object;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert doesNotContain(java.util.Map$Entry[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method doesNotContain:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert containsAnyOf(java.util.Map$Entry[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method containsAnyOf:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/MapAssert;
       5: areturn

  public org.assertj.core.api.AbstractMapAssert contains(java.util.Map$Entry[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method contains:([Ljava/util/Map$Entry;)Lorg/assertj/core/api/MapAssert;
       5: areturn
}
