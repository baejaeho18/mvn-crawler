Compiled from "AbstractAtomicReferenceAssert.java"
public abstract class org.assertj.core.api.AbstractAtomicReferenceAssert<SELF extends org.assertj.core.api.AbstractAtomicReferenceAssert<SELF, VALUE, ATOMIC>, VALUE, ATOMIC> extends org.assertj.core.api.AbstractObjectAssert<SELF, ATOMIC> {
  public org.assertj.core.api.AbstractAtomicReferenceAssert(ATOMIC, java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method org/assertj/core/api/AbstractObjectAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       6: return

  public SELF hasReference(VALUE);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #32                 // Field objects:Lorg/assertj/core/internal/Objects;
       9: invokevirtual #38                 // Method org/assertj/core/internal/Objects.getComparisonStrategy:()Lorg/assertj/core/internal/ComparisonStrategy;
      12: aload_0
      13: invokevirtual #42                 // Method getReference:()Ljava/lang/Object;
      16: aload_1
      17: invokeinterface #48,  3           // InterfaceMethod org/assertj/core/internal/ComparisonStrategy.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      22: ifne          41
      25: aload_0
      26: aload_0
      27: getfield      #50                 // Field actual:Ljava/lang/Object;
      30: aload_0
      31: invokevirtual #42                 // Method getReference:()Ljava/lang/Object;
      34: aload_1
      35: invokestatic  #56                 // Method org/assertj/core/error/ShouldHaveReference.shouldHaveReference:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      38: invokevirtual #60                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      41: aload_0
      42: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      45: checkcast     #2                  // class org/assertj/core/api/AbstractAtomicReferenceAssert
      48: areturn

  protected abstract VALUE getReference();
}
