Compiled from "Java6Assertions.java"
public class org.assertj.core.api.Java6Assertions {
  public static org.assertj.core.api.AtomicBooleanAssert assertThat(java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: new           #15                 // class org/assertj/core/api/AtomicBooleanAssert
       3: dup
       4: aload_0
       5: invokespecial #19                 // Method org/assertj/core/api/AtomicBooleanAssert."<init>":(Ljava/util/concurrent/atomic/AtomicBoolean;)V
       8: areturn

  public static org.assertj.core.api.AtomicIntegerAssert assertThat(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: new           #24                 // class org/assertj/core/api/AtomicIntegerAssert
       3: dup
       4: aload_0
       5: invokespecial #27                 // Method org/assertj/core/api/AtomicIntegerAssert."<init>":(Ljava/util/concurrent/atomic/AtomicInteger;)V
       8: areturn

  public static org.assertj.core.api.AtomicIntegerArrayAssert assertThat(java.util.concurrent.atomic.AtomicIntegerArray);
    Code:
       0: new           #31                 // class org/assertj/core/api/AtomicIntegerArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #34                 // Method org/assertj/core/api/AtomicIntegerArrayAssert."<init>":(Ljava/util/concurrent/atomic/AtomicIntegerArray;)V
       8: areturn

  public static <OBJECT> org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT> assertThat(java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>);
    Code:
       0: new           #38                 // class org/assertj/core/api/AtomicIntegerFieldUpdaterAssert
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method org/assertj/core/api/AtomicIntegerFieldUpdaterAssert."<init>":(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)V
       8: areturn

  public static org.assertj.core.api.AtomicLongAssert assertThat(java.util.concurrent.atomic.AtomicLong);
    Code:
       0: new           #46                 // class org/assertj/core/api/AtomicLongAssert
       3: dup
       4: aload_0
       5: invokespecial #49                 // Method org/assertj/core/api/AtomicLongAssert."<init>":(Ljava/util/concurrent/atomic/AtomicLong;)V
       8: areturn

  public static org.assertj.core.api.AtomicLongArrayAssert assertThat(java.util.concurrent.atomic.AtomicLongArray);
    Code:
       0: new           #53                 // class org/assertj/core/api/AtomicLongArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method org/assertj/core/api/AtomicLongArrayAssert."<init>":(Ljava/util/concurrent/atomic/AtomicLongArray;)V
       8: areturn

  public static <OBJECT> org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT> assertThat(java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>);
    Code:
       0: new           #60                 // class org/assertj/core/api/AtomicLongFieldUpdaterAssert
       3: dup
       4: aload_0
       5: invokespecial #63                 // Method org/assertj/core/api/AtomicLongFieldUpdaterAssert."<init>":(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;)V
       8: areturn

  public static <VALUE> org.assertj.core.api.AtomicReferenceAssert<VALUE> assertThat(java.util.concurrent.atomic.AtomicReference<VALUE>);
    Code:
       0: new           #68                 // class org/assertj/core/api/AtomicReferenceAssert
       3: dup
       4: aload_0
       5: invokespecial #71                 // Method org/assertj/core/api/AtomicReferenceAssert."<init>":(Ljava/util/concurrent/atomic/AtomicReference;)V
       8: areturn

  public static <ELEMENT> org.assertj.core.api.AtomicReferenceArrayAssert<ELEMENT> assertThat(java.util.concurrent.atomic.AtomicReferenceArray<ELEMENT>);
    Code:
       0: new           #76                 // class org/assertj/core/api/AtomicReferenceArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #79                 // Method org/assertj/core/api/AtomicReferenceArrayAssert."<init>":(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
       8: areturn

  public static <FIELD, OBJECT> org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT> assertThat(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>);
    Code:
       0: new           #84                 // class org/assertj/core/api/AtomicReferenceFieldUpdaterAssert
       3: dup
       4: aload_0
       5: invokespecial #87                 // Method org/assertj/core/api/AtomicReferenceFieldUpdaterAssert."<init>":(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)V
       8: areturn

  public static <VALUE> org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE> assertThat(java.util.concurrent.atomic.AtomicMarkableReference<VALUE>);
    Code:
       0: new           #92                 // class org/assertj/core/api/AtomicMarkableReferenceAssert
       3: dup
       4: aload_0
       5: invokespecial #95                 // Method org/assertj/core/api/AtomicMarkableReferenceAssert."<init>":(Ljava/util/concurrent/atomic/AtomicMarkableReference;)V
       8: areturn

  public static <VALUE> org.assertj.core.api.AtomicStampedReferenceAssert<VALUE> assertThat(java.util.concurrent.atomic.AtomicStampedReference<VALUE>);
    Code:
       0: new           #100                // class org/assertj/core/api/AtomicStampedReferenceAssert
       3: dup
       4: aload_0
       5: invokespecial #103                // Method org/assertj/core/api/AtomicStampedReferenceAssert."<init>":(Ljava/util/concurrent/atomic/AtomicStampedReference;)V
       8: areturn

  public static org.assertj.core.api.AbstractBigDecimalAssert<?> assertThat(java.math.BigDecimal);
    Code:
       0: new           #108                // class org/assertj/core/api/BigDecimalAssert
       3: dup
       4: aload_0
       5: invokespecial #111                // Method org/assertj/core/api/BigDecimalAssert."<init>":(Ljava/math/BigDecimal;)V
       8: areturn

  public static org.assertj.core.api.AbstractBigIntegerAssert<?> assertThat(java.math.BigInteger);
    Code:
       0: new           #115                // class org/assertj/core/api/BigIntegerAssert
       3: dup
       4: aload_0
       5: invokespecial #118                // Method org/assertj/core/api/BigIntegerAssert."<init>":(Ljava/math/BigInteger;)V
       8: areturn

  public static org.assertj.core.api.AbstractUriAssert<?> assertThat(java.net.URI);
    Code:
       0: new           #122                // class org/assertj/core/api/UriAssert
       3: dup
       4: aload_0
       5: invokespecial #125                // Method org/assertj/core/api/UriAssert."<init>":(Ljava/net/URI;)V
       8: areturn

  public static org.assertj.core.api.AbstractUrlAssert<?> assertThat(java.net.URL);
    Code:
       0: new           #129                // class org/assertj/core/api/UrlAssert
       3: dup
       4: aload_0
       5: invokespecial #132                // Method org/assertj/core/api/UrlAssert."<init>":(Ljava/net/URL;)V
       8: areturn

  public static org.assertj.core.api.AbstractBooleanAssert<?> assertThat(boolean);
    Code:
       0: new           #136                // class org/assertj/core/api/BooleanAssert
       3: dup
       4: iload_0
       5: invokestatic  #142                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokespecial #145                // Method org/assertj/core/api/BooleanAssert."<init>":(Ljava/lang/Boolean;)V
      11: areturn

  public static org.assertj.core.api.AbstractBooleanAssert<?> assertThat(java.lang.Boolean);
    Code:
       0: new           #136                // class org/assertj/core/api/BooleanAssert
       3: dup
       4: aload_0
       5: invokespecial #145                // Method org/assertj/core/api/BooleanAssert."<init>":(Ljava/lang/Boolean;)V
       8: areturn

  public static org.assertj.core.api.AbstractBooleanArrayAssert<?> assertThat(boolean[]);
    Code:
       0: new           #151                // class org/assertj/core/api/BooleanArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #154                // Method org/assertj/core/api/BooleanArrayAssert."<init>":([Z)V
       8: areturn

  public static org.assertj.core.api.AbstractByteAssert<?> assertThat(byte);
    Code:
       0: new           #158                // class org/assertj/core/api/ByteAssert
       3: dup
       4: iload_0
       5: invokestatic  #163                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       8: invokespecial #166                // Method org/assertj/core/api/ByteAssert."<init>":(Ljava/lang/Byte;)V
      11: areturn

  public static org.assertj.core.api.AbstractByteAssert<?> assertThat(java.lang.Byte);
    Code:
       0: new           #158                // class org/assertj/core/api/ByteAssert
       3: dup
       4: aload_0
       5: invokespecial #166                // Method org/assertj/core/api/ByteAssert."<init>":(Ljava/lang/Byte;)V
       8: areturn

  public static org.assertj.core.api.AbstractByteArrayAssert<?> assertThat(byte[]);
    Code:
       0: new           #172                // class org/assertj/core/api/ByteArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #175                // Method org/assertj/core/api/ByteArrayAssert."<init>":([B)V
       8: areturn

  public static org.assertj.core.api.AbstractCharacterAssert<?> assertThat(char);
    Code:
       0: new           #179                // class org/assertj/core/api/CharacterAssert
       3: dup
       4: iload_0
       5: invokestatic  #184                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
       8: invokespecial #187                // Method org/assertj/core/api/CharacterAssert."<init>":(Ljava/lang/Character;)V
      11: areturn

  public static org.assertj.core.api.AbstractCharArrayAssert<?> assertThat(char[]);
    Code:
       0: new           #191                // class org/assertj/core/api/CharArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #194                // Method org/assertj/core/api/CharArrayAssert."<init>":([C)V
       8: areturn

  public static org.assertj.core.api.AbstractCharacterAssert<?> assertThat(java.lang.Character);
    Code:
       0: new           #179                // class org/assertj/core/api/CharacterAssert
       3: dup
       4: aload_0
       5: invokespecial #187                // Method org/assertj/core/api/CharacterAssert."<init>":(Ljava/lang/Character;)V
       8: areturn

  public static org.assertj.core.api.AbstractClassAssert<?> assertThat(java.lang.Class<?>);
    Code:
       0: new           #200                // class org/assertj/core/api/ClassAssert
       3: dup
       4: aload_0
       5: invokespecial #203                // Method org/assertj/core/api/ClassAssert."<init>":(Ljava/lang/Class;)V
       8: areturn

  public static <T extends java.lang.Comparable<? super T>> org.assertj.core.api.AbstractComparableAssert<?, T> assertThat(T);
    Code:
       0: new           #208                // class org/assertj/core/api/GenericComparableAssert
       3: dup
       4: aload_0
       5: invokespecial #211                // Method org/assertj/core/api/GenericComparableAssert."<init>":(Ljava/lang/Comparable;)V
       8: areturn

  public static <T> org.assertj.core.api.AbstractIterableAssert<?, java.lang.Iterable<? extends T>, T, org.assertj.core.api.ObjectAssert<T>> assertThat(java.lang.Iterable<? extends T>);
    Code:
       0: new           #216                // class org/assertj/core/api/IterableAssert
       3: dup
       4: aload_0
       5: invokespecial #219                // Method org/assertj/core/api/IterableAssert."<init>":(Ljava/lang/Iterable;)V
       8: areturn

  public static <T> org.assertj.core.api.AbstractIterableAssert<?, java.lang.Iterable<? extends T>, T, org.assertj.core.api.ObjectAssert<T>> assertThat(java.util.Iterator<? extends T>);
    Code:
       0: new           #216                // class org/assertj/core/api/IterableAssert
       3: dup
       4: aload_0
       5: invokespecial #225                // Method org/assertj/core/api/IterableAssert."<init>":(Ljava/util/Iterator;)V
       8: areturn

  public static org.assertj.core.api.AbstractDoubleAssert<?> assertThat(double);
    Code:
       0: new           #230                // class org/assertj/core/api/DoubleAssert
       3: dup
       4: dload_0
       5: invokespecial #233                // Method org/assertj/core/api/DoubleAssert."<init>":(D)V
       8: areturn

  public static org.assertj.core.api.AbstractDoubleAssert<?> assertThat(java.lang.Double);
    Code:
       0: new           #230                // class org/assertj/core/api/DoubleAssert
       3: dup
       4: aload_0
       5: invokespecial #238                // Method org/assertj/core/api/DoubleAssert."<init>":(Ljava/lang/Double;)V
       8: areturn

  public static org.assertj.core.api.AbstractDoubleArrayAssert<?> assertThat(double[]);
    Code:
       0: new           #242                // class org/assertj/core/api/DoubleArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #245                // Method org/assertj/core/api/DoubleArrayAssert."<init>":([D)V
       8: areturn

  public static org.assertj.core.api.AbstractFileAssert<?> assertThat(java.io.File);
    Code:
       0: new           #249                // class org/assertj/core/api/FileAssert
       3: dup
       4: aload_0
       5: invokespecial #252                // Method org/assertj/core/api/FileAssert."<init>":(Ljava/io/File;)V
       8: areturn

  public static <RESULT> org.assertj.core.api.AbstractFutureAssert<?, ? extends java.util.concurrent.Future<? extends RESULT>, RESULT> assertThat(java.util.concurrent.Future<RESULT>);
    Code:
       0: new           #256                // class org/assertj/core/api/FutureAssert
       3: dup
       4: aload_0
       5: invokespecial #259                // Method org/assertj/core/api/FutureAssert."<init>":(Ljava/util/concurrent/Future;)V
       8: areturn

  public static org.assertj.core.api.AbstractInputStreamAssert<?, ? extends java.io.InputStream> assertThat(java.io.InputStream);
    Code:
       0: new           #264                // class org/assertj/core/api/InputStreamAssert
       3: dup
       4: aload_0
       5: invokespecial #267                // Method org/assertj/core/api/InputStreamAssert."<init>":(Ljava/io/InputStream;)V
       8: areturn

  public static org.assertj.core.api.AbstractFloatAssert<?> assertThat(float);
    Code:
       0: new           #271                // class org/assertj/core/api/FloatAssert
       3: dup
       4: fload_0
       5: invokespecial #274                // Method org/assertj/core/api/FloatAssert."<init>":(F)V
       8: areturn

  public static org.assertj.core.api.AbstractFloatAssert<?> assertThat(java.lang.Float);
    Code:
       0: new           #271                // class org/assertj/core/api/FloatAssert
       3: dup
       4: aload_0
       5: invokespecial #279                // Method org/assertj/core/api/FloatAssert."<init>":(Ljava/lang/Float;)V
       8: areturn

  public static org.assertj.core.api.AbstractFloatArrayAssert<?> assertThat(float[]);
    Code:
       0: new           #283                // class org/assertj/core/api/FloatArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #286                // Method org/assertj/core/api/FloatArrayAssert."<init>":([F)V
       8: areturn

  public static org.assertj.core.api.AbstractIntegerAssert<?> assertThat(int);
    Code:
       0: new           #290                // class org/assertj/core/api/IntegerAssert
       3: dup
       4: iload_0
       5: invokestatic  #295                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokespecial #298                // Method org/assertj/core/api/IntegerAssert."<init>":(Ljava/lang/Integer;)V
      11: areturn

  public static org.assertj.core.api.AbstractIntArrayAssert<?> assertThat(int[]);
    Code:
       0: new           #302                // class org/assertj/core/api/IntArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #305                // Method org/assertj/core/api/IntArrayAssert."<init>":([I)V
       8: areturn

  public static org.assertj.core.api.AbstractIntegerAssert<?> assertThat(java.lang.Integer);
    Code:
       0: new           #290                // class org/assertj/core/api/IntegerAssert
       3: dup
       4: aload_0
       5: invokespecial #298                // Method org/assertj/core/api/IntegerAssert."<init>":(Ljava/lang/Integer;)V
       8: areturn

  public static <T> org.assertj.core.api.AbstractListAssert<?, java.util.List<? extends T>, T, org.assertj.core.api.ObjectAssert<T>> assertThat(java.util.List<? extends T>);
    Code:
       0: new           #311                // class org/assertj/core/api/ListAssert
       3: dup
       4: aload_0
       5: invokespecial #314                // Method org/assertj/core/api/ListAssert."<init>":(Ljava/util/List;)V
       8: areturn

  public static <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.lang.Iterable<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: new           #319                // class org/assertj/core/api/FactoryBasedNavigableIterableAssert
       3: dup
       4: aload_0
       5: ldc_w         #319                // class org/assertj/core/api/FactoryBasedNavigableIterableAssert
       8: aload_1
       9: invokespecial #322                // Method org/assertj/core/api/FactoryBasedNavigableIterableAssert."<init>":(Ljava/lang/Iterable;Ljava/lang/Class;Lorg/assertj/core/api/AssertFactory;)V
      12: areturn

  public static <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(ACTUAL, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: new           #329                // class org/assertj/core/api/ClassBasedNavigableIterableAssert
       3: dup
       4: aload_0
       5: ldc_w         #329                // class org/assertj/core/api/ClassBasedNavigableIterableAssert
       8: aload_1
       9: invokespecial #332                // Method org/assertj/core/api/ClassBasedNavigableIterableAssert."<init>":(Ljava/lang/Iterable;Ljava/lang/Class;Ljava/lang/Class;)V
      12: areturn

  public static <ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.util.List<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: new           #338                // class org/assertj/core/api/FactoryBasedNavigableListAssert
       3: dup
       4: aload_0
       5: ldc_w         #338                // class org/assertj/core/api/FactoryBasedNavigableListAssert
       8: aload_1
       9: invokespecial #341                // Method org/assertj/core/api/FactoryBasedNavigableListAssert."<init>":(Ljava/util/List;Ljava/lang/Class;Lorg/assertj/core/api/AssertFactory;)V
      12: areturn

  public static <ELEMENT, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.util.List<? extends ELEMENT>, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: new           #345                // class org/assertj/core/api/ClassBasedNavigableListAssert
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #348                // Method org/assertj/core/api/ClassBasedNavigableListAssert."<init>":(Ljava/util/List;Ljava/lang/Class;)V
       9: areturn

  public static org.assertj.core.api.AbstractLongAssert<?> assertThat(long);
    Code:
       0: new           #351                // class org/assertj/core/api/LongAssert
       3: dup
       4: lload_0
       5: invokestatic  #356                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokespecial #359                // Method org/assertj/core/api/LongAssert."<init>":(Ljava/lang/Long;)V
      11: areturn

  public static org.assertj.core.api.AbstractLongAssert<?> assertThat(java.lang.Long);
    Code:
       0: new           #351                // class org/assertj/core/api/LongAssert
       3: dup
       4: aload_0
       5: invokespecial #359                // Method org/assertj/core/api/LongAssert."<init>":(Ljava/lang/Long;)V
       8: areturn

  public static org.assertj.core.api.AbstractLongArrayAssert<?> assertThat(long[]);
    Code:
       0: new           #365                // class org/assertj/core/api/LongArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #368                // Method org/assertj/core/api/LongArrayAssert."<init>":([J)V
       8: areturn

  public static <T> org.assertj.core.api.AbstractObjectAssert<?, T> assertThat(T);
    Code:
       0: new           #372                // class org/assertj/core/api/ObjectAssert
       3: dup
       4: aload_0
       5: invokespecial #375                // Method org/assertj/core/api/ObjectAssert."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <T extends org.assertj.core.api.AssertDelegateTarget> T assertThat(T);
    Code:
       0: aload_0
       1: areturn

  public static <T> T assertThat(org.assertj.core.api.AssertProvider<T>);
    Code:
       0: aload_0
       1: invokeinterface #385,  1          // InterfaceMethod org/assertj/core/api/AssertProvider.assertThat:()Ljava/lang/Object;
       6: areturn

  public static <T> org.assertj.core.api.AbstractObjectArrayAssert<?, T> assertThat(T[]);
    Code:
       0: new           #391                // class org/assertj/core/api/ObjectArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #394                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
       8: areturn

  public static <K, V> org.assertj.core.api.MapAssert<K, V> assertThat(java.util.Map<K, V>);
    Code:
       0: new           #399                // class org/assertj/core/api/MapAssert
       3: dup
       4: aload_0
       5: invokespecial #402                // Method org/assertj/core/api/MapAssert."<init>":(Ljava/util/Map;)V
       8: areturn

  public static org.assertj.core.api.AbstractShortAssert<?> assertThat(short);
    Code:
       0: new           #407                // class org/assertj/core/api/ShortAssert
       3: dup
       4: iload_0
       5: invokestatic  #412                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       8: invokespecial #415                // Method org/assertj/core/api/ShortAssert."<init>":(Ljava/lang/Short;)V
      11: areturn

  public static org.assertj.core.api.AbstractShortAssert<?> assertThat(java.lang.Short);
    Code:
       0: new           #407                // class org/assertj/core/api/ShortAssert
       3: dup
       4: aload_0
       5: invokespecial #415                // Method org/assertj/core/api/ShortAssert."<init>":(Ljava/lang/Short;)V
       8: areturn

  public static org.assertj.core.api.AbstractShortArrayAssert<?> assertThat(short[]);
    Code:
       0: new           #421                // class org/assertj/core/api/ShortArrayAssert
       3: dup
       4: aload_0
       5: invokespecial #424                // Method org/assertj/core/api/ShortArrayAssert."<init>":([S)V
       8: areturn

  public static org.assertj.core.api.AbstractCharSequenceAssert<?, ? extends java.lang.CharSequence> assertThat(java.lang.CharSequence);
    Code:
       0: new           #428                // class org/assertj/core/api/CharSequenceAssert
       3: dup
       4: aload_0
       5: invokespecial #431                // Method org/assertj/core/api/CharSequenceAssert."<init>":(Ljava/lang/CharSequence;)V
       8: areturn

  public static org.assertj.core.api.AbstractCharSequenceAssert<?, java.lang.String> assertThat(java.lang.String);
    Code:
       0: new           #435                // class org/assertj/core/api/StringAssert
       3: dup
       4: aload_0
       5: invokespecial #438                // Method org/assertj/core/api/StringAssert."<init>":(Ljava/lang/String;)V
       8: areturn

  public static org.assertj.core.api.AbstractDateAssert<?> assertThat(java.util.Date);
    Code:
       0: new           #442                // class org/assertj/core/api/DateAssert
       3: dup
       4: aload_0
       5: invokespecial #445                // Method org/assertj/core/api/DateAssert."<init>":(Ljava/util/Date;)V
       8: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThat(java.lang.Throwable);
    Code:
       0: new           #9                  // class org/assertj/core/api/ThrowableAssert
       3: dup
       4: aload_0
       5: invokespecial #450                // Method org/assertj/core/api/ThrowableAssert."<init>":(Ljava/lang/Throwable;)V
       8: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThatThrownBy(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: new           #9                  // class org/assertj/core/api/ThrowableAssert
       3: dup
       4: aload_0
       5: invokestatic  #457                // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       8: invokespecial #450                // Method org/assertj/core/api/ThrowableAssert."<init>":(Ljava/lang/Throwable;)V
      11: invokevirtual #461                // Method org/assertj/core/api/ThrowableAssert.hasBeenThrown:()Lorg/assertj/core/api/AbstractThrowableAssert;
      14: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThatThrownBy(org.assertj.core.api.ThrowableAssert$ThrowingCallable, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #457                // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: invokestatic  #466                // Method assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       7: aload_1
       8: aload_2
       9: invokevirtual #472                // Method org/assertj/core/api/AbstractThrowableAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectAssert;
      12: checkcast     #468                // class org/assertj/core/api/AbstractThrowableAssert
      15: invokevirtual #473                // Method org/assertj/core/api/AbstractThrowableAssert.hasBeenThrown:()Lorg/assertj/core/api/AbstractThrowableAssert;
      18: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThatCode(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_0
       1: invokestatic  #457                // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: invokestatic  #466                // Method assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       7: areturn

  public static java.lang.Throwable catchThrowable(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_0
       1: invokestatic  #478                // Method org/assertj/core/api/ThrowableAssert.catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: areturn

  public static <THROWABLE extends java.lang.Throwable> THROWABLE catchThrowableOfType(org.assertj.core.api.ThrowableAssert$ThrowingCallable, java.lang.Class<THROWABLE>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #482                // Method org/assertj/core/api/ThrowableAssert.catchThrowableOfType:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;Ljava/lang/Class;)Ljava/lang/Throwable;
       5: areturn

  public static void fail(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #489                // Method org/assertj/core/api/Fail.fail:(Ljava/lang/String;)V
       4: return

  public static void fail(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #493                // Method org/assertj/core/api/Fail.fail:(Ljava/lang/String;[Ljava/lang/Object;)V
       5: return

  public static void fail(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #496                // Method org/assertj/core/api/Fail.fail:(Ljava/lang/String;Ljava/lang/Throwable;)V
       5: return

  public static void failBecauseExceptionWasNotThrown(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokestatic  #501                // Method org/assertj/core/api/Fail.shouldHaveThrown:(Ljava/lang/Class;)V
       4: return

  public static void shouldHaveThrown(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokestatic  #501                // Method org/assertj/core/api/Fail.shouldHaveThrown:(Ljava/lang/Class;)V
       4: return

  public static void setMaxLengthForSingleLineDescription(int);
    Code:
       0: iload_0
       1: invokestatic  #509                // Method org/assertj/core/presentation/StandardRepresentation.setMaxLengthForSingleLineDescription:(I)V
       4: return

  public static void setMaxElementsForPrinting(int);
    Code:
       0: iload_0
       1: invokestatic  #513                // Method org/assertj/core/presentation/StandardRepresentation.setMaxElementsForPrinting:(I)V
       4: return

  public static <T> org.assertj.core.groups.Properties<T> extractProperty(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #520                // Method org/assertj/core/groups/Properties.extractProperty:(Ljava/lang/String;Ljava/lang/Class;)Lorg/assertj/core/groups/Properties;
       5: areturn

  public static org.assertj.core.groups.Properties<java.lang.Object> extractProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #526                // Method org/assertj/core/groups/Properties.extractProperty:(Ljava/lang/String;)Lorg/assertj/core/groups/Properties;
       4: areturn

  public static org.assertj.core.groups.Tuple tuple(java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #532                // Method org/assertj/core/groups/Tuple.tuple:([Ljava/lang/Object;)Lorg/assertj/core/groups/Tuple;
       4: areturn

  public static void setAllowExtractingPrivateFields(boolean);
    Code:
       0: invokestatic  #541                // Method org/assertj/core/util/introspection/FieldSupport.extraction:()Lorg/assertj/core/util/introspection/FieldSupport;
       3: iload_0
       4: invokevirtual #544                // Method org/assertj/core/util/introspection/FieldSupport.setAllowUsingPrivateFields:(Z)V
       7: return

  public static void setAllowComparingPrivateFields(boolean);
    Code:
       0: invokestatic  #549                // Method org/assertj/core/util/introspection/FieldSupport.comparison:()Lorg/assertj/core/util/introspection/FieldSupport;
       3: iload_0
       4: invokevirtual #544                // Method org/assertj/core/util/introspection/FieldSupport.setAllowUsingPrivateFields:(Z)V
       7: return

  public static <K, V> org.assertj.core.data.MapEntry<K, V> entry(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #556                // Method org/assertj/core/data/MapEntry.entry:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/data/MapEntry;
       5: areturn

  public static org.assertj.core.data.Index atIndex(int);
    Code:
       0: iload_0
       1: invokestatic  #566                // Method org/assertj/core/data/Index.atIndex:(I)Lorg/assertj/core/data/Index;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Double> offset(java.lang.Double);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Float> offset(java.lang.Float);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Double> within(java.lang.Double);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Float> within(java.lang.Float);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.math.BigDecimal> within(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.math.BigInteger> within(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Byte> within(java.lang.Byte);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Integer> within(java.lang.Integer);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Short> within(java.lang.Short);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Long> within(java.lang.Long);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Double> byLessThan(java.lang.Double);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Float> byLessThan(java.lang.Float);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.math.BigDecimal> byLessThan(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.math.BigInteger> byLessThan(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Byte> byLessThan(java.lang.Byte);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Integer> byLessThan(java.lang.Integer);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Short> byLessThan(java.lang.Short);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Offset<java.lang.Long> byLessThan(java.lang.Long);
    Code:
       0: aload_0
       1: invokestatic  #574                // Method org/assertj/core/data/Offset.offset:(Ljava/lang/Number;)Lorg/assertj/core/data/Offset;
       4: areturn

  public static org.assertj.core.data.Percentage withinPercentage(java.lang.Double);
    Code:
       0: aload_0
       1: invokevirtual #591                // Method java/lang/Double.doubleValue:()D
       4: invokestatic  #597                // Method org/assertj/core/data/Percentage.withPercentage:(D)Lorg/assertj/core/data/Percentage;
       7: areturn

  public static org.assertj.core.data.Percentage withinPercentage(java.lang.Integer);
    Code:
       0: aload_0
       1: invokevirtual #602                // Method java/lang/Integer.intValue:()I
       4: i2d
       5: invokestatic  #597                // Method org/assertj/core/data/Percentage.withPercentage:(D)Lorg/assertj/core/data/Percentage;
       8: areturn

  public static org.assertj.core.data.Percentage withinPercentage(java.lang.Long);
    Code:
       0: aload_0
       1: invokevirtual #607                // Method java/lang/Long.longValue:()J
       4: l2d
       5: invokestatic  #597                // Method org/assertj/core/data/Percentage.withPercentage:(D)Lorg/assertj/core/data/Percentage;
       8: areturn

  public static <T> org.assertj.core.api.Condition<T> allOf(org.assertj.core.api.Condition<? super T>...);
    Code:
       0: aload_0
       1: invokestatic  #614                // Method org/assertj/core/condition/AllOf.allOf:([Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/Condition;
       4: areturn

  public static <T> org.assertj.core.api.Condition<T> allOf(java.lang.Iterable<? extends org.assertj.core.api.Condition<? super T>>);
    Code:
       0: aload_0
       1: invokestatic  #620                // Method org/assertj/core/condition/AllOf.allOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/Condition;
       4: areturn

  public static <T> org.assertj.core.api.Condition<T> anyOf(org.assertj.core.api.Condition<? super T>...);
    Code:
       0: aload_0
       1: invokestatic  #626                // Method org/assertj/core/condition/AnyOf.anyOf:([Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/Condition;
       4: areturn

  public static <T> org.assertj.core.api.Condition<T> anyOf(java.lang.Iterable<? extends org.assertj.core.api.Condition<? super T>>);
    Code:
       0: aload_0
       1: invokestatic  #628                // Method org/assertj/core/condition/AnyOf.anyOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/Condition;
       4: areturn

  public static <T> org.assertj.core.condition.DoesNotHave<T> doesNotHave(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #634                // Method org/assertj/core/condition/DoesNotHave.doesNotHave:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/condition/DoesNotHave;
       4: areturn

  public static <T> org.assertj.core.condition.Not<T> not(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #643                // Method org/assertj/core/condition/Not.not:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/condition/Not;
       4: areturn

  public static <E> org.assertj.core.api.filter.Filters<E> filter(E[]);
    Code:
       0: aload_0
       1: invokestatic  #649                // Method org/assertj/core/api/filter/Filters.filter:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/Filters;
       4: areturn

  public static <E> org.assertj.core.api.filter.Filters<E> filter(java.lang.Iterable<E>);
    Code:
       0: aload_0
       1: invokestatic  #654                // Method org/assertj/core/api/filter/Filters.filter:(Ljava/lang/Iterable;)Lorg/assertj/core/api/filter/Filters;
       4: areturn

  public static org.assertj.core.api.filter.InFilter in(java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #662                // Method org/assertj/core/api/filter/InFilter.in:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/InFilter;
       4: areturn

  public static org.assertj.core.api.filter.NotInFilter notIn(java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #668                // Method org/assertj/core/api/filter/NotInFilter.notIn:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/NotInFilter;
       4: areturn

  public static org.assertj.core.api.filter.NotFilter not(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #674                // Method org/assertj/core/api/filter/NotFilter.not:(Ljava/lang/Object;)Lorg/assertj/core/api/filter/NotFilter;
       4: areturn

  public static java.lang.String contentOf(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #681                // Method org/assertj/core/util/Files.contentOf:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
       5: areturn

  public static java.lang.String contentOf(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #687                // Method org/assertj/core/util/Files.contentOf:(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public static java.lang.String contentOf(java.io.File);
    Code:
       0: aload_0
       1: invokestatic  #695                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #681                // Method org/assertj/core/util/Files.contentOf:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  public static java.util.List<java.lang.String> linesOf(java.io.File);
    Code:
       0: aload_0
       1: invokestatic  #695                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #700                // Method org/assertj/core/util/Files.linesOf:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
       7: areturn

  public static java.util.List<java.lang.String> linesOf(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #700                // Method org/assertj/core/util/Files.linesOf:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
       5: areturn

  public static java.util.List<java.lang.String> linesOf(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #703                // Method org/assertj/core/util/Files.linesOf:(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;
       5: areturn

  public static java.lang.String contentOf(java.net.URL, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #708                // Method org/assertj/core/util/URLs.contentOf:(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/lang/String;
       5: areturn

  public static java.lang.String contentOf(java.net.URL, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #712                // Method org/assertj/core/util/URLs.contentOf:(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public static java.lang.String contentOf(java.net.URL);
    Code:
       0: aload_0
       1: invokestatic  #695                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #708                // Method org/assertj/core/util/URLs.contentOf:(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  public static java.util.List<java.lang.String> linesOf(java.net.URL);
    Code:
       0: aload_0
       1: invokestatic  #695                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #717                // Method org/assertj/core/util/URLs.linesOf:(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/util/List;
       7: areturn

  public static java.util.List<java.lang.String> linesOf(java.net.URL, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #717                // Method org/assertj/core/util/URLs.linesOf:(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/util/List;
       5: areturn

  public static java.util.List<java.lang.String> linesOf(java.net.URL, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #720                // Method org/assertj/core/util/URLs.linesOf:(Ljava/net/URL;Ljava/lang/String;)Ljava/util/List;
       5: areturn

  public static void setLenientDateParsing(boolean);
    Code:
       0: iload_0
       1: invokestatic  #725                // Method org/assertj/core/api/AbstractDateAssert.setLenientDateParsing:(Z)V
       4: return

  public static void registerCustomDateFormat(java.text.DateFormat);
    Code:
       0: aload_0
       1: invokestatic  #729                // Method org/assertj/core/api/AbstractDateAssert.registerCustomDateFormat:(Ljava/text/DateFormat;)V
       4: return

  public static void registerCustomDateFormat(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #733                // Method org/assertj/core/api/AbstractDateAssert.registerCustomDateFormat:(Ljava/lang/String;)V
       4: return

  public static void useDefaultDateFormatsOnly();
    Code:
       0: invokestatic  #738                // Method org/assertj/core/api/AbstractDateAssert.useDefaultDateFormatsOnly:()V
       3: return

  protected org.assertj.core.api.Java6Assertions();
    Code:
       0: aload_0
       1: invokespecial #740                // Method java/lang/Object."<init>":()V
       4: return
}
