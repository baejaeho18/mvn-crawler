Compiled from "ThrowableAssert.java"
public class org.assertj.core.api.ThrowableAssert extends org.assertj.core.api.AbstractThrowableAssert<org.assertj.core.api.ThrowableAssert, java.lang.Throwable> {
  private static final java.lang.String WRONG_EXCEPTION_TYPE;

  public org.assertj.core.api.ThrowableAssert(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/ThrowableAssert
       4: invokespecial #18                 // Method org/assertj/core/api/AbstractThrowableAssert."<init>":(Ljava/lang/Throwable;Ljava/lang/Class;)V
       7: return

  public <V> org.assertj.core.api.ThrowableAssert(java.util.concurrent.Callable<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method buildThrowableAssertFromCallable:(Ljava/util/concurrent/Callable;)Ljava/lang/Throwable;
       5: ldc           #2                  // class org/assertj/core/api/ThrowableAssert
       7: invokespecial #18                 // Method org/assertj/core/api/AbstractThrowableAssert."<init>":(Ljava/lang/Throwable;Ljava/lang/Class;)V
      10: return

  private static <V> java.lang.Throwable buildThrowableAssertFromCallable(java.util.concurrent.Callable<V>) throws java.lang.AssertionError;
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       6: pop
       7: ldc           #42                 // String Expecting code to throw an exception.
       9: invokestatic  #48                 // Method org/assertj/core/api/Fail.fail:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn
      14: astore_1
      15: aload_1
      16: athrow
      17: astore_1
      18: aload_1
      19: areturn
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/AssertionError
           0    13    17   Class java/lang/Throwable

  public static java.lang.Throwable catchThrowable(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_0
       1: invokeinterface #57,  1           // InterfaceMethod org/assertj/core/api/ThrowableAssert$ThrowingCallable.call:()V
       6: goto          12
       9: astore_1
      10: aload_1
      11: areturn
      12: aconst_null
      13: areturn
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  public static <THROWABLE extends java.lang.Throwable> THROWABLE catchThrowableOfType(org.assertj.core.api.ThrowableAssert$ThrowingCallable, java.lang.Class<THROWABLE>);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: new           #2                  // class org/assertj/core/api/ThrowableAssert
      14: dup
      15: aload_2
      16: invokespecial #65                 // Method "<init>":(Ljava/lang/Throwable;)V
      19: ldc           #13                 // String Expecting code to throw <%s> but threw <%s> instead
      21: iconst_2
      22: anewarray     #67                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: dup
      30: iconst_1
      31: aload_2
      32: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: aastore
      36: invokevirtual #75                 // Method overridingErrorMessage:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      39: checkcast     #2                  // class org/assertj/core/api/ThrowableAssert
      42: aload_1
      43: invokevirtual #79                 // Method isInstanceOf:(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractAssert;
      46: pop
      47: aload_2
      48: areturn
}
