Compiled from "ThrowableAssertAlternative.java"
public class org.assertj.core.api.ThrowableAssertAlternative<T extends java.lang.Throwable> extends org.assertj.core.api.AbstractAssert<org.assertj.core.api.ThrowableAssertAlternative<T>, T> {
  private org.assertj.core.api.ThrowableAssert delegate;

  org.assertj.core.api.ThrowableAssertAlternative(T);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/ThrowableAssertAlternative
       4: invokespecial #13                 // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       7: aload_0
       8: new           #15                 // class org/assertj/core/api/ThrowableAssert
      11: dup
      12: aload_1
      13: invokespecial #17                 // Method org/assertj/core/api/ThrowableAssert."<init>":(Ljava/lang/Throwable;)V
      16: putfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
      19: return

  public org.assertj.core.api.ThrowableAssertAlternative<T> withMessage(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #31                 // Method org/assertj/core/api/ThrowableAssert.hasMessage:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withMessage(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: aload_2
       6: invokevirtual #37                 // Method org/assertj/core/api/ThrowableAssert.hasMessage:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractThrowableAssert;
       9: pop
      10: aload_0
      11: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #45                 // Method org/assertj/core/api/ThrowableAssert.hasCause:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withNoCause();
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: invokevirtual #52                 // Method org/assertj/core/api/ThrowableAssert.hasNoCause:()Lorg/assertj/core/api/AbstractThrowableAssert;
       7: pop
       8: aload_0
       9: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withMessageStartingWith(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #56                 // Method org/assertj/core/api/ThrowableAssert.hasMessageStartingWith:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withMessageContaining(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #61                 // Method org/assertj/core/api/ThrowableAssert.hasMessageContaining:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withStackTraceContaining(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #65                 // Method org/assertj/core/api/ThrowableAssert.hasStackTraceContaining:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withMessageMatching(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #69                 // Method org/assertj/core/api/ThrowableAssert.hasMessageMatching:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withMessageEndingWith(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #74                 // Method org/assertj/core/api/ThrowableAssert.hasMessageEndingWith:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withCauseInstanceOf(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #80                 // Method org/assertj/core/api/ThrowableAssert.hasCauseInstanceOf:(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withCauseExactlyInstanceOf(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #87                 // Method org/assertj/core/api/ThrowableAssert.hasCauseExactlyInstanceOf:(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withRootCauseInstanceOf(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #91                 // Method org/assertj/core/api/ThrowableAssert.hasRootCauseInstanceOf:(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> withRootCauseExactlyInstanceOf(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #95                 // Method org/assertj/core/api/ThrowableAssert.hasRootCauseExactlyInstanceOf:(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractThrowableAssert;
       8: pop
       9: aload_0
      10: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> describedAs(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: aload_2
       6: invokevirtual #100                // Method org/assertj/core/api/ThrowableAssert.describedAs:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
       9: pop
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #101                // Method org/assertj/core/api/AbstractAssert.describedAs:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      16: checkcast     #2                  // class org/assertj/core/api/ThrowableAssertAlternative
      19: areturn

  public org.assertj.core.api.ThrowableAssertAlternative<T> describedAs(org.assertj.core.description.Description);
    Code:
       0: aload_0
       1: getfield      #19                 // Field delegate:Lorg/assertj/core/api/ThrowableAssert;
       4: aload_1
       5: invokevirtual #106                // Method org/assertj/core/api/ThrowableAssert.describedAs:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/AbstractAssert;
       8: pop
       9: aload_0
      10: aload_1
      11: invokespecial #107                // Method org/assertj/core/api/AbstractAssert.describedAs:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/AbstractAssert;
      14: checkcast     #2                  // class org/assertj/core/api/ThrowableAssertAlternative
      17: areturn

  public org.assertj.core.api.AbstractAssert describedAs(org.assertj.core.description.Description);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method describedAs:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/ThrowableAssertAlternative;
       5: areturn

  public org.assertj.core.api.AbstractAssert describedAs(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #112                // Method describedAs:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/ThrowableAssertAlternative;
       6: areturn

  public java.lang.Object describedAs(org.assertj.core.description.Description);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method describedAs:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/ThrowableAssertAlternative;
       5: areturn

  public java.lang.Object describedAs(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #112                // Method describedAs:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/ThrowableAssertAlternative;
       6: areturn
}
