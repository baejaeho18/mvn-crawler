Compiled from "ProxyableObjectAssert.java"
public class org.assertj.core.api.ProxyableObjectAssert<ACTUAL> extends org.assertj.core.api.AbstractObjectAssert<org.assertj.core.api.ProxyableObjectAssert<ACTUAL>, ACTUAL> {
  public org.assertj.core.api.ProxyableObjectAssert(ACTUAL);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/ProxyableObjectAssert
       4: invokespecial #11                 // Method org/assertj/core/api/AbstractObjectAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       7: return

  public org.assertj.core.api.ProxyableObjectAssert(java.util.concurrent.atomic.AtomicReference<ACTUAL>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          13
       9: aload_1
      10: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      13: invokespecial #28                 // Method "<init>":(Ljava/lang/Object;)V
      16: return

  protected <ELEMENT> org.assertj.core.api.AbstractListAssert<?, java.util.List<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> newListAssertInstance(java.util.List<? extends ELEMENT>);
    Code:
       0: new           #34                 // class org/assertj/core/api/ProxyableListAssert
       3: dup
       4: aload_1
       5: invokespecial #37                 // Method org/assertj/core/api/ProxyableListAssert."<init>":(Ljava/util/List;)V
       8: areturn
}
