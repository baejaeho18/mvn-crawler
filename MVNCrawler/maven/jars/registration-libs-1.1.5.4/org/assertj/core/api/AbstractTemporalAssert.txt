Compiled from "AbstractTemporalAssert.java"
public abstract class org.assertj.core.api.AbstractTemporalAssert<SELF extends org.assertj.core.api.AbstractTemporalAssert<SELF, TEMPORAL>, TEMPORAL extends java.time.temporal.Temporal> extends org.assertj.core.api.AbstractAssert<SELF, TEMPORAL> {
  org.assertj.core.internal.Comparables comparables;

  protected org.assertj.core.api.AbstractTemporalAssert(TEMPORAL, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #14                 // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       6: aload_0
       7: new           #16                 // class org/assertj/core/internal/Comparables
      10: dup
      11: invokespecial #19                 // Method org/assertj/core/internal/Comparables."<init>":()V
      14: putfield      #21                 // Field comparables:Lorg/assertj/core/internal/Comparables;
      17: return

  protected TEMPORAL getActual();
    Code:
       0: aload_0
       1: getfield      #35                 // Field actual:Ljava/lang/Object;
       4: checkcast     #37                 // class java/time/temporal/Temporal
       7: areturn

  public SELF isCloseTo(TEMPORAL, org.assertj.core.data.TemporalOffset<? super TEMPORAL>);
    Code:
       0: invokestatic  #45                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #49                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #35                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #53                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: ldc           #55                 // String The temporal object to compare actual with should not be null
      17: invokestatic  #61                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_2
      22: ldc           #63                 // String The offset should not be null
      24: invokestatic  #61                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: aload_2
      29: aload_0
      30: getfield      #35                 // Field actual:Ljava/lang/Object;
      33: checkcast     #37                 // class java/time/temporal/Temporal
      36: aload_1
      37: invokeinterface #69,  3           // InterfaceMethod org/assertj/core/data/TemporalOffset.isBeyondOffset:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Z
      42: ifeq          81
      45: invokestatic  #74                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      48: aload_0
      49: getfield      #49                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      52: aload_0
      53: getfield      #35                 // Field actual:Ljava/lang/Object;
      56: checkcast     #37                 // class java/time/temporal/Temporal
      59: aload_1
      60: aload_2
      61: aload_0
      62: getfield      #35                 // Field actual:Ljava/lang/Object;
      65: checkcast     #37                 // class java/time/temporal/Temporal
      68: aload_1
      69: invokeinterface #78,  3           // InterfaceMethod org/assertj/core/data/TemporalOffset.getBeyondOffsetDifferenceDescription:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/lang/String;
      74: invokestatic  #84                 // Method org/assertj/core/error/ShouldBeCloseTo.shouldBeCloseTo:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;Ljava/lang/String;)Lorg/assertj/core/error/ErrorMessageFactory;
      77: invokevirtual #88                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      80: athrow
      81: aload_0
      82: getfield      #92                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      85: checkcast     #2                  // class org/assertj/core/api/AbstractTemporalAssert
      88: areturn

  public SELF isCloseTo(java.lang.String, org.assertj.core.data.TemporalOffset<? super TEMPORAL>);
    Code:
       0: aload_1
       1: ldc           #99                 // String The String representing of the temporal object to compare actual with should not be null
       3: invokestatic  #61                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_0
       9: aload_1
      10: invokevirtual #103                // Method parse:(Ljava/lang/String;)Ljava/time/temporal/Temporal;
      13: aload_2
      14: invokevirtual #105                // Method isCloseTo:(Ljava/time/temporal/Temporal;Lorg/assertj/core/data/TemporalOffset;)Lorg/assertj/core/api/AbstractTemporalAssert;
      17: areturn

  protected abstract TEMPORAL parse(java.lang.String);
}
