Compiled from "AtomicIntegerArrayAssert.java"
public class org.assertj.core.api.AtomicIntegerArrayAssert extends org.assertj.core.api.AbstractEnumerableAssert<org.assertj.core.api.AtomicIntegerArrayAssert, java.util.concurrent.atomic.AtomicIntegerArray, java.lang.Integer> {
  protected org.assertj.core.internal.IntArrays arrays;

  private int[] array;

  public org.assertj.core.api.AtomicIntegerArrayAssert(java.util.concurrent.atomic.AtomicIntegerArray);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
       4: invokespecial #16                 // Method org/assertj/core/api/AbstractEnumerableAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       7: aload_0
       8: invokestatic  #22                 // Method org/assertj/core/internal/IntArrays.instance:()Lorg/assertj/core/internal/IntArrays;
      11: putfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
      14: aload_0
      15: aload_1
      16: invokestatic  #29                 // Method org/assertj/core/util/Arrays.array:(Ljava/util/concurrent/atomic/AtomicIntegerArray;)[I
      19: putfield      #31                 // Field array:[I
      22: return

  public void isNullOrEmpty();
    Code:
       0: aload_0
       1: getfield      #40                 // Field actual:Ljava/lang/Object;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: invokevirtual #43                 // Method isEmpty:()V
      12: return

  public void isEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: invokevirtual #51                 // Method org/assertj/core/internal/IntArrays.assertEmpty:(Lorg/assertj/core/api/AssertionInfo;[I)V
      15: return

  public org.assertj.core.api.AtomicIntegerArrayAssert isNotEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: invokevirtual #56                 // Method org/assertj/core/internal/IntArrays.assertNotEmpty:(Lorg/assertj/core/api/AssertionInfo;[I)V
      15: aload_0
      16: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert hasArray(int[]);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #66                 // Method org/assertj/core/internal/IntArrays.assertContainsExactly:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert hasSize(int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: iload_1
      13: invokevirtual #73                 // Method org/assertj/core/internal/IntArrays.assertHasSize:(Lorg/assertj/core/api/AssertionInfo;[II)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert hasSameSizeAs(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #80                 // Method org/assertj/core/internal/IntArrays.assertHasSameSizeAs:(Lorg/assertj/core/api/AssertionInfo;[ILjava/lang/Iterable;)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert contains(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #87                 // Method org/assertj/core/internal/IntArrays.assertContains:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsOnly(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #92                 // Method org/assertj/core/internal/IntArrays.assertContainsOnly:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsOnlyOnce(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #96                 // Method org/assertj/core/internal/IntArrays.assertContainsOnlyOnce:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsSequence(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #100                // Method org/assertj/core/internal/IntArrays.assertContainsSequence:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsSubsequence(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #105                // Method org/assertj/core/internal/IntArrays.assertContainsSubsequence:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert contains(int, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: iload_1
      13: aload_2
      14: invokevirtual #110                // Method org/assertj/core/internal/IntArrays.assertContains:(Lorg/assertj/core/api/AssertionInfo;[IILorg/assertj/core/data/Index;)V
      17: aload_0
      18: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert doesNotContain(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #117                // Method org/assertj/core/internal/IntArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert doesNotContain(int, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: iload_1
      13: aload_2
      14: invokevirtual #119                // Method org/assertj/core/internal/IntArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[IILorg/assertj/core/data/Index;)V
      17: aload_0
      18: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert doesNotHaveDuplicates();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: invokevirtual #123                // Method org/assertj/core/internal/IntArrays.assertDoesNotHaveDuplicates:(Lorg/assertj/core/api/AssertionInfo;[I)V
      15: aload_0
      16: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert startsWith(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #127                // Method org/assertj/core/internal/IntArrays.assertStartsWith:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert endsWith(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #131                // Method org/assertj/core/internal/IntArrays.assertEndsWith:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert isSorted();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: invokevirtual #135                // Method org/assertj/core/internal/IntArrays.assertIsSorted:(Lorg/assertj/core/api/AssertionInfo;[I)V
      15: aload_0
      16: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert isSortedAccordingTo(java.util.Comparator<? super java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #141                // Method org/assertj/core/internal/IntArrays.assertIsSortedAccordingToComparator:(Lorg/assertj/core/api/AssertionInfo;[ILjava/util/Comparator;)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert usingElementComparator(java.util.Comparator<? super java.lang.Integer>);
    Code:
       0: aload_0
       1: new           #18                 // class org/assertj/core/internal/IntArrays
       4: dup
       5: new           #148                // class org/assertj/core/internal/ComparatorBasedComparisonStrategy
       8: dup
       9: aload_1
      10: invokespecial #151                // Method org/assertj/core/internal/ComparatorBasedComparisonStrategy."<init>":(Ljava/util/Comparator;)V
      13: invokespecial #154                // Method org/assertj/core/internal/IntArrays."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
      16: putfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
      19: aload_0
      20: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      26: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert usingDefaultElementComparator();
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method org/assertj/core/internal/IntArrays.instance:()Lorg/assertj/core/internal/IntArrays;
       4: putfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       7: aload_0
       8: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      11: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      14: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsExactly(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #66                 // Method org/assertj/core/internal/IntArrays.assertContainsExactly:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsExactlyInAnyOrder(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #161                // Method org/assertj/core/internal/IntArrays.assertContainsExactlyInAnyOrder:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicIntegerArrayAssert containsAnyOf(int...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/IntArrays;
       4: aload_0
       5: getfield      #47                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #31                 // Field array:[I
      12: aload_1
      13: invokevirtual #165                // Method org/assertj/core/internal/IntArrays.assertContainsAnyOf:(Lorg/assertj/core/api/AssertionInfo;[I[I)V
      16: aload_0
      17: getfield      #60                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicIntegerArrayAssert
      23: areturn

  public org.assertj.core.api.EnumerableAssert usingDefaultElementComparator();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method usingDefaultElementComparator:()Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       4: areturn

  public org.assertj.core.api.EnumerableAssert usingElementComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #171                // Method usingElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSameSizeAs(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #174                // Method hasSameSizeAs:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #177                // Method hasSize:(I)Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method isNotEmpty:()Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       4: areturn
}
