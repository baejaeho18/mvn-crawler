Compiled from "Assert.java"
public interface org.assertj.core.api.Assert<SELF extends org.assertj.core.api.Assert<SELF, ACTUAL>, ACTUAL> extends org.assertj.core.api.Descriptable<SELF>, org.assertj.core.api.ExtensionPoints<SELF, ACTUAL> {
  public abstract SELF isEqualTo(java.lang.Object);

  public abstract SELF isNotEqualTo(java.lang.Object);

  public abstract void isNull();

  public abstract SELF isNotNull();

  public abstract SELF isSameAs(java.lang.Object);

  public abstract SELF isNotSameAs(java.lang.Object);

  public abstract SELF isIn(java.lang.Object...);

  public abstract SELF isNotIn(java.lang.Object...);

  public abstract SELF isIn(java.lang.Iterable<?>);

  public abstract SELF isNotIn(java.lang.Iterable<?>);

  public abstract SELF usingComparator(java.util.Comparator<? super ACTUAL>);

  public abstract SELF usingDefaultComparator();

  public abstract SELF isInstanceOf(java.lang.Class<?>);

  public abstract <T> SELF isInstanceOfSatisfying(java.lang.Class<T>, java.util.function.Consumer<T>);

  public abstract SELF isInstanceOfAny(java.lang.Class<?>...);

  public abstract SELF isNotInstanceOf(java.lang.Class<?>);

  public abstract SELF isNotInstanceOfAny(java.lang.Class<?>...);

  public abstract SELF hasSameClassAs(java.lang.Object);

  public abstract SELF hasToString(java.lang.String);

  public abstract SELF doesNotHaveSameClassAs(java.lang.Object);

  public abstract SELF isExactlyInstanceOf(java.lang.Class<?>);

  public abstract SELF isNotExactlyInstanceOf(java.lang.Class<?>);

  public abstract SELF isOfAnyClassIn(java.lang.Class<?>...);

  public abstract SELF isNotOfAnyClassIn(java.lang.Class<?>...);

  public abstract org.assertj.core.api.AbstractListAssert<?, java.util.List<? extends java.lang.Object>, java.lang.Object, org.assertj.core.api.ObjectAssert<java.lang.Object>> asList();

  public abstract org.assertj.core.api.AbstractCharSequenceAssert<?, java.lang.String> asString();

  public abstract boolean equals(java.lang.Object);

  public abstract SELF withThreadDumpOnError();

  public abstract SELF withRepresentation(org.assertj.core.presentation.Representation);

  public abstract SELF hasSameHashCodeAs(java.lang.Object);
}
