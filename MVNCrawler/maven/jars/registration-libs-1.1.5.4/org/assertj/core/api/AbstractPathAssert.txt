Compiled from "AbstractPathAssert.java"
public abstract class org.assertj.core.api.AbstractPathAssert<SELF extends org.assertj.core.api.AbstractPathAssert<SELF>> extends org.assertj.core.api.AbstractComparableAssert<SELF, java.nio.file.Path> {
  protected org.assertj.core.internal.Paths paths;

  java.nio.charset.Charset charset;

  public org.assertj.core.api.AbstractPathAssert(java.nio.file.Path, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #16                 // Method org/assertj/core/api/AbstractComparableAssert."<init>":(Ljava/lang/Comparable;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #22                 // Method org/assertj/core/internal/Paths.instance:()Lorg/assertj/core/internal/Paths;
      10: putfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
      13: aload_0
      14: invokestatic  #30                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      17: putfield      #32                 // Field charset:Ljava/nio/charset/Charset;
      20: return

  public SELF hasSameContentAs(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_0
      16: getfield      #32                 // Field charset:Ljava/nio/charset/Charset;
      19: aload_1
      20: invokestatic  #30                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      23: invokevirtual #55                 // Method org/assertj/core/internal/Paths.assertHasSameContentAs:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/charset/Charset;Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V
      26: aload_0
      27: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      30: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      33: areturn

  public SELF hasSameContentAs(java.nio.file.Path, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_0
      16: getfield      #32                 // Field charset:Ljava/nio/charset/Charset;
      19: aload_1
      20: aload_2
      21: invokevirtual #55                 // Method org/assertj/core/internal/Paths.assertHasSameContentAs:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/charset/Charset;Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V
      24: aload_0
      25: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      28: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      31: areturn

  public SELF hasBinaryContent(byte[]);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #68                 // Method org/assertj/core/internal/Paths.assertHasBinaryContent:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;[B)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF usingCharset(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method java/nio/charset/Charset.isSupported:(Ljava/lang/String;)Z
       4: ldc           #78                 // String Charset:<\'%s\'> is not supported on this system
       6: iconst_1
       7: anewarray     #80                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokestatic  #86                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: invokestatic  #90                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      22: invokevirtual #93                 // Method usingCharset:(Ljava/nio/charset/Charset;)Lorg/assertj/core/api/AbstractPathAssert;
      25: areturn

  public SELF usingCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #97                 // String The charset should not be null
       4: invokestatic  #101                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #26                 // class java/nio/charset/Charset
      10: putfield      #32                 // Field charset:Ljava/nio/charset/Charset;
      13: aload_0
      14: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      17: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      20: areturn

  public SELF hasContent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: aload_0
      17: getfield      #32                 // Field charset:Ljava/nio/charset/Charset;
      20: invokevirtual #106                // Method org/assertj/core/internal/Paths.assertHasContent:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      23: aload_0
      24: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      30: areturn

  public SELF isReadable();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #112                // Method org/assertj/core/internal/Paths.assertIsReadable:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isWritable();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #116                // Method org/assertj/core/internal/Paths.assertIsWritable:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isExecutable();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #120                // Method org/assertj/core/internal/Paths.assertIsExecutable:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF exists();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #124                // Method org/assertj/core/internal/Paths.assertExists:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF existsNoFollowLinks();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #128                // Method org/assertj/core/internal/Paths.assertExistsNoFollowLinks:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF doesNotExist();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #132                // Method org/assertj/core/internal/Paths.assertDoesNotExist:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isRegularFile();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #136                // Method org/assertj/core/internal/Paths.assertIsRegularFile:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isDirectory();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #140                // Method org/assertj/core/internal/Paths.assertIsDirectory:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isSymbolicLink();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #144                // Method org/assertj/core/internal/Paths.assertIsSymbolicLink:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isAbsolute();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #148                // Method org/assertj/core/internal/Paths.assertIsAbsolute:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isRelative();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #152                // Method org/assertj/core/internal/Paths.assertIsRelative:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isNormalized();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #156                // Method org/assertj/core/internal/Paths.assertIsNormalized:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF isCanonical();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #160                // Method org/assertj/core/internal/Paths.assertIsCanonical:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF hasFileName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #165                // Method org/assertj/core/internal/Paths.assertHasFileName:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/lang/String;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF hasParent(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #171                // Method org/assertj/core/internal/Paths.assertHasParent:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF hasParentRaw(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #175                // Method org/assertj/core/internal/Paths.assertHasParentRaw:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF hasNoParent();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #179                // Method org/assertj/core/internal/Paths.assertHasNoParent:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF hasNoParentRaw();
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: invokevirtual #183                // Method org/assertj/core/internal/Paths.assertHasNoParentRaw:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;)V
      18: aload_0
      19: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      25: areturn

  public SELF startsWith(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #187                // Method org/assertj/core/internal/Paths.assertStartsWith:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF startsWithRaw(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #192                // Method org/assertj/core/internal/Paths.assertStartsWithRaw:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF endsWith(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #196                // Method org/assertj/core/internal/Paths.assertEndsWith:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn

  public SELF endsWithRaw(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #24                 // Field paths:Lorg/assertj/core/internal/Paths;
       4: aload_0
       5: getfield      #46                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #49                 // Field actual:Ljava/lang/Object;
      12: checkcast     #51                 // class java/nio/file/Path
      15: aload_1
      16: invokevirtual #200                // Method org/assertj/core/internal/Paths.assertEndsWithRaw:(Lorg/assertj/core/api/AssertionInfo;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      19: aload_0
      20: getfield      #59                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractPathAssert
      26: areturn
}
