Compiled from "BDDAssertions.java"
public class org.assertj.core.api.BDDAssertions extends org.assertj.core.api.Assertions {
  public static <T> org.assertj.core.api.PredicateAssert<T> then(java.util.function.Predicate<T>);
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method assertThat:(Ljava/util/function/Predicate;)Lorg/assertj/core/api/PredicateAssert;
       4: areturn

  public static org.assertj.core.api.IntPredicateAssert then(java.util.function.IntPredicate);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method assertThat:(Ljava/util/function/IntPredicate;)Lorg/assertj/core/api/IntPredicateAssert;
       4: areturn

  public static org.assertj.core.api.LongPredicateAssert then(java.util.function.LongPredicate);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method assertThat:(Ljava/util/function/LongPredicate;)Lorg/assertj/core/api/LongPredicateAssert;
       4: areturn

  public static org.assertj.core.api.DoublePredicateAssert then(java.util.function.DoublePredicate);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method assertThat:(Ljava/util/function/DoublePredicate;)Lorg/assertj/core/api/DoublePredicateAssert;
       4: areturn

  public static <VALUE> org.assertj.core.api.OptionalAssert<VALUE> then(java.util.Optional<VALUE>);
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method assertThat:(Ljava/util/Optional;)Lorg/assertj/core/api/OptionalAssert;
       4: areturn

  public static org.assertj.core.api.OptionalIntAssert then(java.util.OptionalInt);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method assertThat:(Ljava/util/OptionalInt;)Lorg/assertj/core/api/OptionalIntAssert;
       4: areturn

  public static org.assertj.core.api.OptionalLongAssert then(java.util.OptionalLong);
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method assertThat:(Ljava/util/OptionalLong;)Lorg/assertj/core/api/OptionalLongAssert;
       4: areturn

  public static org.assertj.core.api.OptionalDoubleAssert then(java.util.OptionalDouble);
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method assertThat:(Ljava/util/OptionalDouble;)Lorg/assertj/core/api/OptionalDoubleAssert;
       4: areturn

  public static org.assertj.core.api.AbstractBigDecimalAssert<?> then(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method assertThat:(Ljava/math/BigDecimal;)Lorg/assertj/core/api/AbstractBigDecimalAssert;
       4: areturn

  public static org.assertj.core.api.AbstractBigIntegerAssert<?> then(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method assertThat:(Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public static org.assertj.core.api.AbstractBooleanAssert<?> then(boolean);
    Code:
       0: iload_0
       1: invokestatic  #60                 // Method assertThat:(Z)Lorg/assertj/core/api/AbstractBooleanAssert;
       4: areturn

  public static org.assertj.core.api.AbstractBooleanAssert<?> then(java.lang.Boolean);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method assertThat:(Ljava/lang/Boolean;)Lorg/assertj/core/api/AbstractBooleanAssert;
       4: areturn

  public static org.assertj.core.api.AbstractBooleanArrayAssert<?> then(boolean[]);
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method assertThat:([Z)Lorg/assertj/core/api/AbstractBooleanArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractByteAssert<?> then(byte);
    Code:
       0: iload_0
       1: invokestatic  #72                 // Method assertThat:(B)Lorg/assertj/core/api/AbstractByteAssert;
       4: areturn

  public static org.assertj.core.api.AbstractByteAssert<?> then(java.lang.Byte);
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method assertThat:(Ljava/lang/Byte;)Lorg/assertj/core/api/AbstractByteAssert;
       4: areturn

  public static org.assertj.core.api.AbstractByteArrayAssert<?> then(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method assertThat:([B)Lorg/assertj/core/api/AbstractByteArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractCharacterAssert<?> then(char);
    Code:
       0: iload_0
       1: invokestatic  #84                 // Method assertThat:(C)Lorg/assertj/core/api/AbstractCharacterAssert;
       4: areturn

  public static org.assertj.core.api.AbstractCharArrayAssert<?> then(char[]);
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method assertThat:([C)Lorg/assertj/core/api/AbstractCharArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractCharacterAssert<?> then(java.lang.Character);
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method assertThat:(Ljava/lang/Character;)Lorg/assertj/core/api/AbstractCharacterAssert;
       4: areturn

  public static org.assertj.core.api.ClassAssert then(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method assertThat:(Ljava/lang/Class;)Lorg/assertj/core/api/ClassAssert;
       4: areturn

  public static <T extends java.lang.Comparable<? super T>> org.assertj.core.api.AbstractComparableAssert<?, T> then(T);
    Code:
       0: aload_0
       1: invokestatic  #101                // Method assertThat:(Ljava/lang/Comparable;)Lorg/assertj/core/api/AbstractComparableAssert;
       4: areturn

  public static <T> org.assertj.core.api.IterableAssert<T> then(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #106                // Method assertThat:(Ljava/lang/Iterable;)Lorg/assertj/core/api/IterableAssert;
       4: areturn

  public static <T> org.assertj.core.api.IterableAssert<T> then(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #111                // Method assertThat:(Ljava/util/Iterator;)Lorg/assertj/core/api/IterableAssert;
       4: areturn

  public static <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> then(java.lang.Iterable<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // Method assertThat:(Ljava/lang/Iterable;Lorg/assertj/core/api/AssertFactory;)Lorg/assertj/core/api/FactoryBasedNavigableIterableAssert;
       5: areturn

  public static <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> then(ACTUAL, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method assertThat:(Ljava/lang/Iterable;Ljava/lang/Class;)Lorg/assertj/core/api/ClassBasedNavigableIterableAssert;
       5: areturn

  public static <ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> then(java.util.List<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // Method assertThat:(Ljava/util/List;Lorg/assertj/core/api/AssertFactory;)Lorg/assertj/core/api/FactoryBasedNavigableListAssert;
       5: areturn

  public static <ELEMENT, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> then(java.util.List<? extends ELEMENT>, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // Method assertThat:(Ljava/util/List;Ljava/lang/Class;)Lorg/assertj/core/api/ClassBasedNavigableListAssert;
       5: areturn

  public static org.assertj.core.api.AbstractDoubleAssert<?> then(double);
    Code:
       0: dload_0
       1: invokestatic  #137                // Method assertThat:(D)Lorg/assertj/core/api/AbstractDoubleAssert;
       4: areturn

  public static org.assertj.core.api.AbstractDoubleAssert<?> then(java.lang.Double);
    Code:
       0: aload_0
       1: invokestatic  #141                // Method assertThat:(Ljava/lang/Double;)Lorg/assertj/core/api/AbstractDoubleAssert;
       4: areturn

  public static org.assertj.core.api.AbstractDoubleArrayAssert<?> then(double[]);
    Code:
       0: aload_0
       1: invokestatic  #145                // Method assertThat:([D)Lorg/assertj/core/api/AbstractDoubleArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractFileAssert<?> then(java.io.File);
    Code:
       0: aload_0
       1: invokestatic  #149                // Method assertThat:(Ljava/io/File;)Lorg/assertj/core/api/AbstractFileAssert;
       4: areturn

  public static org.assertj.core.api.AbstractPathAssert<?> then(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #153                // Method assertThat:(Ljava/nio/file/Path;)Lorg/assertj/core/api/AbstractPathAssert;
       4: areturn

  public static <RESULT> org.assertj.core.api.FutureAssert<RESULT> then(java.util.concurrent.Future<RESULT>);
    Code:
       0: aload_0
       1: invokestatic  #157                // Method assertThat:(Ljava/util/concurrent/Future;)Lorg/assertj/core/api/FutureAssert;
       4: areturn

  public static org.assertj.core.api.AbstractInputStreamAssert<?, ? extends java.io.InputStream> then(java.io.InputStream);
    Code:
       0: aload_0
       1: invokestatic  #162                // Method assertThat:(Ljava/io/InputStream;)Lorg/assertj/core/api/AbstractInputStreamAssert;
       4: areturn

  public static org.assertj.core.api.AbstractFloatAssert<?> then(float);
    Code:
       0: fload_0
       1: invokestatic  #166                // Method assertThat:(F)Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public static org.assertj.core.api.AbstractFloatAssert<?> then(java.lang.Float);
    Code:
       0: aload_0
       1: invokestatic  #170                // Method assertThat:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public static org.assertj.core.api.AbstractFloatArrayAssert<?> then(float[]);
    Code:
       0: aload_0
       1: invokestatic  #174                // Method assertThat:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractIntegerAssert<?> then(int);
    Code:
       0: iload_0
       1: invokestatic  #178                // Method assertThat:(I)Lorg/assertj/core/api/AbstractIntegerAssert;
       4: areturn

  public static org.assertj.core.api.AbstractIntArrayAssert<?> then(int[]);
    Code:
       0: aload_0
       1: invokestatic  #182                // Method assertThat:([I)Lorg/assertj/core/api/AbstractIntArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractIntegerAssert<?> then(java.lang.Integer);
    Code:
       0: aload_0
       1: invokestatic  #186                // Method assertThat:(Ljava/lang/Integer;)Lorg/assertj/core/api/AbstractIntegerAssert;
       4: areturn

  public static <T> org.assertj.core.api.ListAssert<T> then(java.util.List<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #190                // Method assertThat:(Ljava/util/List;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public static org.assertj.core.api.AbstractLongAssert<?> then(long);
    Code:
       0: lload_0
       1: invokestatic  #194                // Method assertThat:(J)Lorg/assertj/core/api/AbstractLongAssert;
       4: areturn

  public static org.assertj.core.api.AbstractLongAssert<?> then(java.lang.Long);
    Code:
       0: aload_0
       1: invokestatic  #198                // Method assertThat:(Ljava/lang/Long;)Lorg/assertj/core/api/AbstractLongAssert;
       4: areturn

  public static org.assertj.core.api.AbstractLongArrayAssert<?> then(long[]);
    Code:
       0: aload_0
       1: invokestatic  #202                // Method assertThat:([J)Lorg/assertj/core/api/AbstractLongArrayAssert;
       4: areturn

  public static <T> org.assertj.core.api.ObjectAssert<T> then(T);
    Code:
       0: aload_0
       1: invokestatic  #206                // Method assertThat:(Ljava/lang/Object;)Lorg/assertj/core/api/ObjectAssert;
       4: areturn

  public static <T> org.assertj.core.api.ObjectArrayAssert<T> then(T[]);
    Code:
       0: aload_0
       1: invokestatic  #210                // Method assertThat:([Ljava/lang/Object;)Lorg/assertj/core/api/ObjectArrayAssert;
       4: areturn

  public static <K, V> org.assertj.core.api.MapAssert<K, V> then(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #215                // Method assertThat:(Ljava/util/Map;)Lorg/assertj/core/api/MapAssert;
       4: areturn

  public static org.assertj.core.api.AbstractShortAssert<?> then(short);
    Code:
       0: iload_0
       1: invokestatic  #220                // Method assertThat:(S)Lorg/assertj/core/api/AbstractShortAssert;
       4: areturn

  public static org.assertj.core.api.AbstractShortAssert<?> then(java.lang.Short);
    Code:
       0: aload_0
       1: invokestatic  #224                // Method assertThat:(Ljava/lang/Short;)Lorg/assertj/core/api/AbstractShortAssert;
       4: areturn

  public static org.assertj.core.api.AbstractShortArrayAssert<?> then(short[]);
    Code:
       0: aload_0
       1: invokestatic  #228                // Method assertThat:([S)Lorg/assertj/core/api/AbstractShortArrayAssert;
       4: areturn

  public static org.assertj.core.api.AbstractCharSequenceAssert<?, ? extends java.lang.CharSequence> then(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokestatic  #232                // Method assertThat:(Ljava/lang/CharSequence;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
       4: areturn

  public static org.assertj.core.api.AbstractCharSequenceAssert<?, java.lang.String> then(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #236                // Method assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
       4: areturn

  public static org.assertj.core.api.AbstractDateAssert<?> then(java.util.Date);
    Code:
       0: aload_0
       1: invokestatic  #240                // Method assertThat:(Ljava/util/Date;)Lorg/assertj/core/api/AbstractDateAssert;
       4: areturn

  public static org.assertj.core.api.AtomicBooleanAssert then(java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: invokestatic  #244                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicBoolean;)Lorg/assertj/core/api/AtomicBooleanAssert;
       4: areturn

  public static org.assertj.core.api.AtomicIntegerAssert then(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: invokestatic  #248                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicInteger;)Lorg/assertj/core/api/AtomicIntegerAssert;
       4: areturn

  public static org.assertj.core.api.AtomicIntegerArrayAssert then(java.util.concurrent.atomic.AtomicIntegerArray);
    Code:
       0: aload_0
       1: invokestatic  #252                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicIntegerArray;)Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       4: areturn

  public static <OBJECT> org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT> then(java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>);
    Code:
       0: aload_0
       1: invokestatic  #256                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)Lorg/assertj/core/api/AtomicIntegerFieldUpdaterAssert;
       4: areturn

  public static org.assertj.core.api.AtomicLongAssert then(java.util.concurrent.atomic.AtomicLong);
    Code:
       0: aload_0
       1: invokestatic  #261                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicLong;)Lorg/assertj/core/api/AtomicLongAssert;
       4: areturn

  public static org.assertj.core.api.AtomicLongArrayAssert then(java.util.concurrent.atomic.AtomicLongArray);
    Code:
       0: aload_0
       1: invokestatic  #265                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicLongArray;)Lorg/assertj/core/api/AtomicLongArrayAssert;
       4: areturn

  public static <OBJECT> org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT> then(java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>);
    Code:
       0: aload_0
       1: invokestatic  #269                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;)Lorg/assertj/core/api/AtomicLongFieldUpdaterAssert;
       4: areturn

  public static <VALUE> org.assertj.core.api.AtomicReferenceAssert<VALUE> then(java.util.concurrent.atomic.AtomicReference<VALUE>);
    Code:
       0: aload_0
       1: invokestatic  #274                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicReference;)Lorg/assertj/core/api/AtomicReferenceAssert;
       4: areturn

  public static <ELEMENT> org.assertj.core.api.AtomicReferenceArrayAssert<ELEMENT> then(java.util.concurrent.atomic.AtomicReferenceArray<ELEMENT>);
    Code:
       0: aload_0
       1: invokestatic  #279                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public static <FIELD, OBJECT> org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT> then(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>);
    Code:
       0: aload_0
       1: invokestatic  #284                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)Lorg/assertj/core/api/AtomicReferenceFieldUpdaterAssert;
       4: areturn

  public static <VALUE> org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE> then(java.util.concurrent.atomic.AtomicMarkableReference<VALUE>);
    Code:
       0: aload_0
       1: invokestatic  #289                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicMarkableReference;)Lorg/assertj/core/api/AtomicMarkableReferenceAssert;
       4: areturn

  public static <VALUE> org.assertj.core.api.AtomicStampedReferenceAssert<VALUE> then(java.util.concurrent.atomic.AtomicStampedReference<VALUE>);
    Code:
       0: aload_0
       1: invokestatic  #294                // Method assertThat:(Ljava/util/concurrent/atomic/AtomicStampedReference;)Lorg/assertj/core/api/AtomicStampedReferenceAssert;
       4: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> then(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #299                // Method assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       4: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> thenThrownBy(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_0
       1: invokestatic  #306                // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: invokestatic  #299                // Method assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       7: invokevirtual #312                // Method org/assertj/core/api/AbstractThrowableAssert.hasBeenThrown:()Lorg/assertj/core/api/AbstractThrowableAssert;
      10: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> thenThrownBy(org.assertj.core.api.ThrowableAssert$ThrowingCallable, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #306                // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: invokestatic  #299                // Method assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       7: aload_1
       8: aload_2
       9: invokevirtual #319                // Method org/assertj/core/api/AbstractThrowableAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectAssert;
      12: checkcast     #308                // class org/assertj/core/api/AbstractThrowableAssert
      15: invokevirtual #312                // Method org/assertj/core/api/AbstractThrowableAssert.hasBeenThrown:()Lorg/assertj/core/api/AbstractThrowableAssert;
      18: areturn

  public static org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> thenCode(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_0
       1: invokestatic  #306                // Method catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: invokestatic  #299                // Method assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       7: areturn

  public static org.assertj.core.api.AbstractLocalDateAssert<?> then(java.time.LocalDate);
    Code:
       0: aload_0
       1: invokestatic  #326                // Method assertThat:(Ljava/time/LocalDate;)Lorg/assertj/core/api/AbstractLocalDateAssert;
       4: areturn

  public static org.assertj.core.api.AbstractLocalDateTimeAssert<?> then(java.time.LocalDateTime);
    Code:
       0: aload_0
       1: invokestatic  #330                // Method assertThat:(Ljava/time/LocalDateTime;)Lorg/assertj/core/api/AbstractLocalDateTimeAssert;
       4: areturn

  public static org.assertj.core.api.AbstractZonedDateTimeAssert<?> then(java.time.ZonedDateTime);
    Code:
       0: aload_0
       1: invokestatic  #334                // Method assertThat:(Ljava/time/ZonedDateTime;)Lorg/assertj/core/api/AbstractZonedDateTimeAssert;
       4: areturn

  public static org.assertj.core.api.AbstractLocalTimeAssert<?> then(java.time.LocalTime);
    Code:
       0: aload_0
       1: invokestatic  #338                // Method assertThat:(Ljava/time/LocalTime;)Lorg/assertj/core/api/AbstractLocalTimeAssert;
       4: areturn

  public static org.assertj.core.api.AbstractOffsetTimeAssert<?> then(java.time.OffsetTime);
    Code:
       0: aload_0
       1: invokestatic  #342                // Method assertThat:(Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
       4: areturn

  public static org.assertj.core.api.AbstractInstantAssert<?> then(java.time.Instant);
    Code:
       0: aload_0
       1: invokestatic  #346                // Method assertThat:(Ljava/time/Instant;)Lorg/assertj/core/api/AbstractInstantAssert;
       4: areturn

  public static org.assertj.core.api.AbstractUriAssert<?> then(java.net.URI);
    Code:
       0: aload_0
       1: invokestatic  #350                // Method assertThat:(Ljava/net/URI;)Lorg/assertj/core/api/AbstractUriAssert;
       4: areturn

  public static org.assertj.core.api.AbstractUrlAssert<?> then(java.net.URL);
    Code:
       0: aload_0
       1: invokestatic  #354                // Method assertThat:(Ljava/net/URL;)Lorg/assertj/core/api/AbstractUrlAssert;
       4: areturn

  public static org.assertj.core.api.AbstractOffsetDateTimeAssert<?> then(java.time.OffsetDateTime);
    Code:
       0: aload_0
       1: invokestatic  #358                // Method assertThat:(Ljava/time/OffsetDateTime;)Lorg/assertj/core/api/AbstractOffsetDateTimeAssert;
       4: areturn

  public static <RESULT> org.assertj.core.api.CompletableFutureAssert<RESULT> then(java.util.concurrent.CompletableFuture<RESULT>);
    Code:
       0: aload_0
       1: invokestatic  #362                // Method assertThat:(Ljava/util/concurrent/CompletableFuture;)Lorg/assertj/core/api/CompletableFutureAssert;
       4: areturn

  public static <RESULT> org.assertj.core.api.CompletableFutureAssert<RESULT> then(java.util.concurrent.CompletionStage<RESULT>);
    Code:
       0: aload_0
       1: invokestatic  #368                // Method assertThat:(Ljava/util/concurrent/CompletionStage;)Lorg/assertj/core/api/CompletableFutureAssert;
       4: areturn

  public static <T extends org.assertj.core.api.AssertDelegateTarget> T then(T);
    Code:
       0: aload_0
       1: areturn

  public static <T> T then(org.assertj.core.api.AssertProvider<T>);
    Code:
       0: aload_0
       1: invokeinterface #379,  1          // InterfaceMethod org/assertj/core/api/AssertProvider.assertThat:()Ljava/lang/Object;
       6: areturn

  public static <ELEMENT> org.assertj.core.api.ListAssert<ELEMENT> then(java.util.stream.Stream<? extends ELEMENT>);
    Code:
       0: aload_0
       1: invokestatic  #385                // Method assertThat:(Ljava/util/stream/Stream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public static org.assertj.core.api.ListAssert<java.lang.Double> then(java.util.stream.DoubleStream);
    Code:
       0: aload_0
       1: invokestatic  #390                // Method assertThat:(Ljava/util/stream/DoubleStream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public static org.assertj.core.api.ListAssert<java.lang.Long> then(java.util.stream.LongStream);
    Code:
       0: aload_0
       1: invokestatic  #394                // Method assertThat:(Ljava/util/stream/LongStream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public static org.assertj.core.api.ListAssert<java.lang.Integer> then(java.util.stream.IntStream);
    Code:
       0: aload_0
       1: invokestatic  #398                // Method assertThat:(Ljava/util/stream/IntStream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  protected org.assertj.core.api.BDDAssertions();
    Code:
       0: aload_0
       1: invokespecial #403                // Method org/assertj/core/api/Assertions."<init>":()V
       4: return
}
