Compiled from "AbstractFloatAssert.java"
public abstract class org.assertj.core.api.AbstractFloatAssert<SELF extends org.assertj.core.api.AbstractFloatAssert<SELF>> extends org.assertj.core.api.AbstractComparableAssert<SELF, java.lang.Float> implements org.assertj.core.api.FloatingPointNumberAssert<SELF, java.lang.Float> {
  private static final java.lang.Float NEGATIVE_ZERO;

  org.assertj.core.internal.Floats floats;

  private boolean isPrimitive;

  public org.assertj.core.api.AbstractFloatAssert(java.lang.Float, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #20                 // Method org/assertj/core/api/AbstractComparableAssert."<init>":(Ljava/lang/Comparable;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #26                 // Method org/assertj/core/internal/Floats.instance:()Lorg/assertj/core/internal/Floats;
      10: putfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
      13: aload_0
      14: iconst_0
      15: putfield      #30                 // Field isPrimitive:Z
      18: return

  public org.assertj.core.api.AbstractFloatAssert(float, java.lang.Class<?>);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       5: aload_2
       6: invokespecial #20                 // Method org/assertj/core/api/AbstractComparableAssert."<init>":(Ljava/lang/Comparable;Ljava/lang/Class;)V
       9: aload_0
      10: invokestatic  #26                 // Method org/assertj/core/internal/Floats.instance:()Lorg/assertj/core/internal/Floats;
      13: putfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
      16: aload_0
      17: iconst_1
      18: putfield      #30                 // Field isPrimitive:Z
      21: return

  public SELF isNaN();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #60                 // Method org/assertj/core/internal/Floats.assertIsNaN:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isNotNaN();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #68                 // Method org/assertj/core/internal/Floats.assertIsNotNaN:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isZero();
    Code:
       0: aload_0
       1: getfield      #30                 // Field isPrimitive:Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #73                 // Method assertIsPrimitiveZero:()V
      11: goto          32
      14: aload_0
      15: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
      18: aload_0
      19: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      22: aload_0
      23: getfield      #54                 // Field actual:Ljava/lang/Object;
      26: checkcast     #56                 // class java/lang/Number
      29: invokevirtual #76                 // Method org/assertj/core/internal/Floats.assertIsZero:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      32: aload_0
      33: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      36: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      39: areturn

  private void assertIsPrimitiveZero();
    Code:
       0: aload_0
       1: getfield      #54                 // Field actual:Ljava/lang/Object;
       4: checkcast     #40                 // class java/lang/Float
       7: invokevirtual #80                 // Method java/lang/Float.floatValue:()F
      10: fconst_0
      11: fcmpl
      12: ifne          16
      15: return
      16: invokestatic  #85                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      19: aload_0
      20: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      23: aload_0
      24: getfield      #54                 // Field actual:Ljava/lang/Object;
      27: fconst_0
      28: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      31: aload_0
      32: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      35: invokevirtual #91                 // Method org/assertj/core/api/WritableAssertionInfo.representation:()Lorg/assertj/core/presentation/Representation;
      38: invokestatic  #97                 // Method org/assertj/core/error/ShouldBeEqual.shouldBeEqual:(Ljava/lang/Object;Ljava/lang/Object;Lorg/assertj/core/presentation/Representation;)Lorg/assertj/core/error/AssertionErrorFactory;
      41: invokevirtual #101                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/AssertionErrorFactory;)Ljava/lang/AssertionError;
      44: athrow

  private void assertIsPrimitiveNonZero();
    Code:
       0: aload_0
       1: getfield      #54                 // Field actual:Ljava/lang/Object;
       4: checkcast     #40                 // class java/lang/Float
       7: invokevirtual #80                 // Method java/lang/Float.floatValue:()F
      10: f2d
      11: dconst_0
      12: dcmpl
      13: ifeq          17
      16: return
      17: invokestatic  #85                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      20: aload_0
      21: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      24: aload_0
      25: getfield      #54                 // Field actual:Ljava/lang/Object;
      28: dconst_0
      29: invokestatic  #107                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      32: invokestatic  #113                // Method org/assertj/core/error/ShouldNotBeEqual.shouldNotBeEqual:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      35: invokevirtual #116                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      38: athrow

  public SELF isNotZero();
    Code:
       0: aload_0
       1: getfield      #30                 // Field isPrimitive:Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #119                // Method assertIsPrimitiveNonZero:()V
      11: goto          53
      14: getstatic     #121                // Field NEGATIVE_ZERO:Ljava/lang/Float;
      17: aload_0
      18: getfield      #54                 // Field actual:Ljava/lang/Object;
      21: invokevirtual #125                // Method java/lang/Float.equals:(Ljava/lang/Object;)Z
      24: ifeq          35
      27: aload_0
      28: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      31: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      34: areturn
      35: aload_0
      36: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
      39: aload_0
      40: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      43: aload_0
      44: getfield      #54                 // Field actual:Ljava/lang/Object;
      47: checkcast     #56                 // class java/lang/Number
      50: invokevirtual #128                // Method org/assertj/core/internal/Floats.assertIsNotZero:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      53: aload_0
      54: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      57: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      60: areturn

  public SELF isOne();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #132                // Method org/assertj/core/internal/Floats.assertIsOne:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isPositive();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #136                // Method org/assertj/core/internal/Floats.assertIsPositive:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isNegative();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #140                // Method org/assertj/core/internal/Floats.assertIsNegative:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isNotNegative();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #144                // Method org/assertj/core/internal/Floats.assertIsNotNegative:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isNotPositive();
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: invokevirtual #148                // Method org/assertj/core/internal/Floats.assertIsNotPositive:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      25: areturn

  public SELF isEqualTo(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: fload_1
      13: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      16: invokevirtual #154                // Method org/assertj/core/internal/Floats.assertEqual:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_0
      20: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      26: areturn

  public SELF isCloseTo(float, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: aload_2
      20: invokevirtual #161                // Method org/assertj/core/internal/Floats.assertIsCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      23: aload_0
      24: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      30: areturn

  public SELF isNotCloseTo(float, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: aload_2
      20: invokevirtual #168                // Method org/assertj/core/internal/Floats.assertIsNotCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      23: aload_0
      24: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      30: areturn

  public SELF isCloseTo(java.lang.Float, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #161                // Method org/assertj/core/internal/Floats.assertIsCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF isNotCloseTo(java.lang.Float, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #168                // Method org/assertj/core/internal/Floats.assertIsNotCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF isCloseTo(java.lang.Float, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #174                // Method org/assertj/core/internal/Floats.assertIsCloseToPercentage:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF isNotCloseTo(java.lang.Float, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #179                // Method org/assertj/core/internal/Floats.assertIsNotCloseToPercentage:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF isCloseTo(float, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: aload_2
      20: invokevirtual #174                // Method org/assertj/core/internal/Floats.assertIsCloseToPercentage:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;)V
      23: aload_0
      24: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      30: areturn

  public SELF isNotCloseTo(float, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: aload_2
      20: invokevirtual #179                // Method org/assertj/core/internal/Floats.assertIsNotCloseToPercentage:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;)V
      23: aload_0
      24: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      30: areturn

  public SELF isEqualTo(java.lang.Float, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #161                // Method org/assertj/core/internal/Floats.assertIsCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF isEqualTo(float, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: aload_2
      20: invokevirtual #161                // Method org/assertj/core/internal/Floats.assertIsCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      23: aload_0
      24: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      30: areturn

  public SELF isNotEqualTo(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: fload_1
      13: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      16: invokevirtual #184                // Method org/assertj/core/internal/Floats.assertNotEqual:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_0
      20: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      26: areturn

  public SELF isLessThan(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #188                // class java/lang/Comparable
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: invokevirtual #192                // Method org/assertj/core/internal/Floats.assertLessThan:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      22: aload_0
      23: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      29: areturn

  public SELF isLessThanOrEqualTo(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #188                // class java/lang/Comparable
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: invokevirtual #196                // Method org/assertj/core/internal/Floats.assertLessThanOrEqualTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      22: aload_0
      23: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      29: areturn

  public SELF isGreaterThan(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #188                // class java/lang/Comparable
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: invokevirtual #200                // Method org/assertj/core/internal/Floats.assertGreaterThan:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      22: aload_0
      23: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      29: areturn

  public SELF isGreaterThanOrEqualTo(float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #188                // class java/lang/Comparable
      15: fload_1
      16: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      19: invokevirtual #204                // Method org/assertj/core/internal/Floats.assertGreaterThanOrEqualTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      22: aload_0
      23: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      29: areturn

  public SELF isBetween(java.lang.Float, java.lang.Float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #210                // Method org/assertj/core/internal/Floats.assertIsBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF isStrictlyBetween(java.lang.Float, java.lang.Float);
    Code:
       0: aload_0
       1: getfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
       4: aload_0
       5: getfield      #51                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #54                 // Field actual:Ljava/lang/Object;
      12: checkcast     #56                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #216                // Method org/assertj/core/internal/Floats.assertIsStrictlyBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      20: aload_0
      21: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      27: areturn

  public SELF usingComparator(java.util.Comparator<? super java.lang.Float>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method org/assertj/core/api/AbstractComparableAssert.usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractComparableAssert;
       5: pop
       6: aload_0
       7: new           #22                 // class org/assertj/core/internal/Floats
      10: dup
      11: new           #224                // class org/assertj/core/internal/ComparatorBasedComparisonStrategy
      14: dup
      15: aload_1
      16: invokespecial #227                // Method org/assertj/core/internal/ComparatorBasedComparisonStrategy."<init>":(Ljava/util/Comparator;)V
      19: invokespecial #230                // Method org/assertj/core/internal/Floats."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
      22: putfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
      25: aload_0
      26: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      29: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      32: areturn

  public SELF usingDefaultComparator();
    Code:
       0: aload_0
       1: invokespecial #237                // Method org/assertj/core/api/AbstractComparableAssert.usingDefaultComparator:()Lorg/assertj/core/api/AbstractComparableAssert;
       4: pop
       5: aload_0
       6: invokestatic  #26                 // Method org/assertj/core/internal/Floats.instance:()Lorg/assertj/core/internal/Floats;
       9: putfield      #28                 // Field floats:Lorg/assertj/core/internal/Floats;
      12: aload_0
      13: getfield      #64                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      16: checkcast     #2                  // class org/assertj/core/api/AbstractFloatAssert
      19: areturn

  public org.assertj.core.api.AbstractComparableAssert usingDefaultComparator();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method usingDefaultComparator:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.AbstractComparableAssert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractFloatAssert;
       5: areturn

  public org.assertj.core.api.AbstractComparableAssert isStrictlyBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: checkcast     #40                 // class java/lang/Float
       9: invokevirtual #244                // Method isStrictlyBetween:(Ljava/lang/Float;Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
      12: areturn

  public org.assertj.core.api.AbstractComparableAssert isBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: checkcast     #40                 // class java/lang/Float
       9: invokevirtual #246                // Method isBetween:(Ljava/lang/Float;Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
      12: areturn

  public org.assertj.core.api.ComparableAssert isStrictlyBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: checkcast     #40                 // class java/lang/Float
       9: invokevirtual #244                // Method isStrictlyBetween:(Ljava/lang/Float;Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
      12: areturn

  public org.assertj.core.api.ComparableAssert isBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: checkcast     #40                 // class java/lang/Float
       9: invokevirtual #246                // Method isBetween:(Ljava/lang/Float;Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
      12: areturn

  public org.assertj.core.api.AbstractAssert usingDefaultComparator();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method usingDefaultComparator:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.AbstractAssert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractFloatAssert;
       5: areturn

  public org.assertj.core.api.Assert usingDefaultComparator();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method usingDefaultComparator:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.Assert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractFloatAssert;
       5: areturn

  public org.assertj.core.api.FloatingPointNumberAssert isNotNaN();
    Code:
       0: aload_0
       1: invokevirtual #254                // Method isNotNaN:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.FloatingPointNumberAssert isNaN();
    Code:
       0: aload_0
       1: invokevirtual #256                // Method isNaN:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.FloatingPointNumberAssert isNotCloseTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #259                // Method isNotCloseTo:(Ljava/lang/Float;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.FloatingPointNumberAssert isCloseTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #261                // Method isCloseTo:(Ljava/lang/Float;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.FloatingPointNumberAssert isEqualTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #263                // Method isEqualTo:(Ljava/lang/Float;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isNotCloseTo(java.lang.Number, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #266                // Method isNotCloseTo:(Ljava/lang/Float;Lorg/assertj/core/data/Percentage;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isCloseTo(java.lang.Number, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #268                // Method isCloseTo:(Ljava/lang/Float;Lorg/assertj/core/data/Percentage;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isNotCloseTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #259                // Method isNotCloseTo:(Ljava/lang/Float;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isCloseTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: invokevirtual #261                // Method isCloseTo:(Ljava/lang/Float;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractFloatAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isStrictlyBetween(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: checkcast     #40                 // class java/lang/Float
       9: invokevirtual #244                // Method isStrictlyBetween:(Ljava/lang/Float;Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
      12: areturn

  public org.assertj.core.api.NumberAssert isBetween(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class java/lang/Float
       5: aload_2
       6: checkcast     #40                 // class java/lang/Float
       9: invokevirtual #246                // Method isBetween:(Ljava/lang/Float;Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
      12: areturn

  public org.assertj.core.api.NumberAssert isNotPositive();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method isNotPositive:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isNotNegative();
    Code:
       0: aload_0
       1: invokevirtual #275                // Method isNotNegative:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isNegative();
    Code:
       0: aload_0
       1: invokevirtual #277                // Method isNegative:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isPositive();
    Code:
       0: aload_0
       1: invokevirtual #279                // Method isPositive:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isOne();
    Code:
       0: aload_0
       1: invokevirtual #281                // Method isOne:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isNotZero();
    Code:
       0: aload_0
       1: invokevirtual #283                // Method isNotZero:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isZero();
    Code:
       0: aload_0
       1: invokevirtual #285                // Method isZero:()Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  static {};
    Code:
       0: new           #40                 // class java/lang/Float
       3: dup
       4: ldc2_w        #287                // double -0.0d
       7: invokespecial #291                // Method java/lang/Float."<init>":(D)V
      10: putstatic     #121                // Field NEGATIVE_ZERO:Ljava/lang/Float;
      13: return
}
