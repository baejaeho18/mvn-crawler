Compiled from "AbstractFloatArrayAssert.java"
public abstract class org.assertj.core.api.AbstractFloatArrayAssert<SELF extends org.assertj.core.api.AbstractFloatArrayAssert<SELF>> extends org.assertj.core.api.AbstractArrayAssert<SELF, float[], java.lang.Float> {
  protected org.assertj.core.internal.FloatArrays arrays;

  private final org.assertj.core.api.ComparatorFactory floatComparator;

  public org.assertj.core.api.AbstractFloatArrayAssert(float[], java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #16                 // Method org/assertj/core/api/AbstractArrayAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #22                 // Method org/assertj/core/internal/FloatArrays.instance:()Lorg/assertj/core/internal/FloatArrays;
      10: putfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
      13: aload_0
      14: getstatic     #29                 // Field org/assertj/core/api/ComparatorFactory.INSTANCE:Lorg/assertj/core/api/ComparatorFactory;
      17: putfield      #31                 // Field floatComparator:Lorg/assertj/core/api/ComparatorFactory;
      20: return

  public void isNullOrEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: invokevirtual #53                 // Method org/assertj/core/internal/FloatArrays.assertNullOrEmpty:(Lorg/assertj/core/api/AssertionInfo;[F)V
      18: return

  public void isEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: invokevirtual #57                 // Method org/assertj/core/internal/FloatArrays.assertEmpty:(Lorg/assertj/core/api/AssertionInfo;[F)V
      18: return

  public SELF isNotEmpty();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: invokevirtual #62                 // Method org/assertj/core/internal/FloatArrays.assertNotEmpty:(Lorg/assertj/core/api/AssertionInfo;[F)V
      18: aload_0
      19: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      25: areturn

  public SELF hasSize(int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: iload_1
      16: invokevirtual #72                 // Method org/assertj/core/internal/FloatArrays.assertHasSize:(Lorg/assertj/core/api/AssertionInfo;[FI)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF hasSameSizeAs(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #80                 // Method org/assertj/core/internal/FloatArrays.assertHasSameSizeAs:(Lorg/assertj/core/api/AssertionInfo;[FLjava/lang/Iterable;)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF contains(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #89                 // Method org/assertj/core/internal/FloatArrays.assertContains:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF contains(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #105                // Method contains:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF containsOnly(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #112                // Method org/assertj/core/internal/FloatArrays.assertContainsOnly:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF containsOnly(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #114                // Method containsOnly:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF containsOnlyOnce(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #118                // Method org/assertj/core/internal/FloatArrays.assertContainsOnlyOnce:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF containsOnlyOnce(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #120                // Method containsOnlyOnce:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF containsSequence(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #124                // Method org/assertj/core/internal/FloatArrays.assertContainsSequence:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF containsSequence(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #127                // Method containsSequence:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF containsSubsequence(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #131                // Method org/assertj/core/internal/FloatArrays.assertContainsSubsequence:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF containsSubsequence(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #134                // Method containsSubsequence:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF contains(float, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: fload_1
      16: aload_2
      17: invokevirtual #138                // Method org/assertj/core/internal/FloatArrays.assertContains:(Lorg/assertj/core/api/AssertionInfo;[FFLorg/assertj/core/data/Index;)V
      20: aload_0
      21: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      27: areturn

  public SELF contains(float, org.assertj.core.data.Index, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_3
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: fload_1
      14: aload_2
      15: invokevirtual #144                // Method contains:(FLorg/assertj/core/data/Index;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      18: areturn

  public SELF doesNotContain(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #148                // Method org/assertj/core/internal/FloatArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF doesNotContain(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
      16: aload_0
      17: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      20: aload_0
      21: getfield      #48                 // Field actual:Ljava/lang/Object;
      24: checkcast     #49                 // class "[F"
      27: aload_1
      28: invokevirtual #148                // Method org/assertj/core/internal/FloatArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      31: aload_0
      32: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      35: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      38: areturn

  public SELF doesNotContain(float, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: fload_1
      16: aload_2
      17: invokevirtual #150                // Method org/assertj/core/internal/FloatArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[FFLorg/assertj/core/data/Index;)V
      20: aload_0
      21: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      27: areturn

  public SELF doesNotContain(float, org.assertj.core.data.Index, org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_3
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: fload_1
      14: aload_2
      15: invokevirtual #152                // Method doesNotContain:(FLorg/assertj/core/data/Index;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      18: areturn

  public SELF doesNotHaveDuplicates();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: invokevirtual #156                // Method org/assertj/core/internal/FloatArrays.assertDoesNotHaveDuplicates:(Lorg/assertj/core/api/AssertionInfo;[F)V
      18: aload_0
      19: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      25: areturn

  public SELF doesNotHaveDuplicates(org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: invokevirtual #159                // Method doesNotHaveDuplicates:()Lorg/assertj/core/api/AbstractFloatArrayAssert;
      16: areturn

  public SELF startsWith(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #163                // Method org/assertj/core/internal/FloatArrays.assertStartsWith:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF startsWith(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #165                // Method startsWith:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF endsWith(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #169                // Method org/assertj/core/internal/FloatArrays.assertEndsWith:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF endsWith(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #171                // Method endsWith:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF isSorted();
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: invokevirtual #175                // Method org/assertj/core/internal/FloatArrays.assertIsSorted:(Lorg/assertj/core/api/AssertionInfo;[F)V
      18: aload_0
      19: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      25: areturn

  public SELF isSortedAccordingTo(java.util.Comparator<? super java.lang.Float>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #181                // Method org/assertj/core/internal/FloatArrays.assertIsSortedAccordingToComparator:(Lorg/assertj/core/api/AssertionInfo;[FLjava/util/Comparator;)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF usingElementComparator(java.util.Comparator<? super java.lang.Float>);
    Code:
       0: aload_0
       1: new           #18                 // class org/assertj/core/internal/FloatArrays
       4: dup
       5: new           #188                // class org/assertj/core/internal/ComparatorBasedComparisonStrategy
       8: dup
       9: aload_1
      10: invokespecial #191                // Method org/assertj/core/internal/ComparatorBasedComparisonStrategy."<init>":(Ljava/util/Comparator;)V
      13: invokespecial #194                // Method org/assertj/core/internal/FloatArrays."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
      16: putfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF usingDefaultElementComparator();
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method org/assertj/core/internal/FloatArrays.instance:()Lorg/assertj/core/internal/FloatArrays;
       4: putfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       7: aload_0
       8: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      11: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      14: areturn

  public SELF containsExactly(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #200                // Method org/assertj/core/internal/FloatArrays.assertContainsExactly:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF containsExactly(float[], org.assertj.core.data.Offset<java.lang.Float>);
    Code:
       0: aload_0
       1: aload_2
       2: getfield      #97                 // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
       5: checkcast     #99                 // class java/lang/Float
       8: invokevirtual #103                // Method usingComparatorWithPrecision:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      11: pop
      12: aload_0
      13: aload_1
      14: invokevirtual #202                // Method containsExactly:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      17: areturn

  public SELF containsExactlyInAnyOrder(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #206                // Method org/assertj/core/internal/FloatArrays.assertContainsExactlyInAnyOrder:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public SELF usingComparatorWithPrecision(java.lang.Float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #31                 // Field floatComparator:Lorg/assertj/core/api/ComparatorFactory;
       5: aload_1
       6: invokevirtual #210                // Method java/lang/Float.floatValue:()F
       9: invokevirtual #214                // Method org/assertj/core/api/ComparatorFactory.floatComparatorWithPrecision:(F)Ljava/util/Comparator;
      12: invokevirtual #216                // Method usingElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
      15: areturn

  public SELF containsAnyOf(float...);
    Code:
       0: aload_0
       1: getfield      #24                 // Field arrays:Lorg/assertj/core/internal/FloatArrays;
       4: aload_0
       5: getfield      #45                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #48                 // Field actual:Ljava/lang/Object;
      12: checkcast     #49                 // class "[F"
      15: aload_1
      16: invokevirtual #221                // Method org/assertj/core/internal/FloatArrays.assertContainsAnyOf:(Lorg/assertj/core/api/AssertionInfo;[F[F)V
      19: aload_0
      20: getfield      #66                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractFloatArrayAssert
      26: areturn

  public org.assertj.core.api.ArraySortedAssert isSortedAccordingTo(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #224                // Method isSortedAccordingTo:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
       5: areturn

  public org.assertj.core.api.ArraySortedAssert isSorted();
    Code:
       0: aload_0
       1: invokevirtual #227                // Method isSorted:()Lorg/assertj/core/api/AbstractFloatArrayAssert;
       4: areturn

  public org.assertj.core.api.EnumerableAssert usingDefaultElementComparator();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method usingDefaultElementComparator:()Lorg/assertj/core/api/AbstractFloatArrayAssert;
       4: areturn

  public org.assertj.core.api.EnumerableAssert usingElementComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #216                // Method usingElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSameSizeAs(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #234                // Method hasSameSizeAs:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AbstractFloatArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #237                // Method hasSize:(I)Lorg/assertj/core/api/AbstractFloatArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method isNotEmpty:()Lorg/assertj/core/api/AbstractFloatArrayAssert;
       4: areturn
}
