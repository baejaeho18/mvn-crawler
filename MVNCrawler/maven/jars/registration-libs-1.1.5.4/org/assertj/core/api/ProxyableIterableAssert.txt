Compiled from "ProxyableIterableAssert.java"
public class org.assertj.core.api.ProxyableIterableAssert<ELEMENT> extends org.assertj.core.api.FactoryBasedNavigableIterableAssert<org.assertj.core.api.ProxyableIterableAssert<ELEMENT>, java.lang.Iterable<? extends ELEMENT>, ELEMENT, org.assertj.core.api.ObjectAssert<ELEMENT>> {
  public org.assertj.core.api.ProxyableIterableAssert(java.lang.Iterable<? extends ELEMENT>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/ProxyableIterableAssert
       4: new           #10                 // class org/assertj/core/api/ObjectAssertFactory
       7: dup
       8: invokespecial #13                 // Method org/assertj/core/api/ObjectAssertFactory."<init>":()V
      11: invokespecial #16                 // Method org/assertj/core/api/FactoryBasedNavigableIterableAssert."<init>":(Ljava/lang/Iterable;Ljava/lang/Class;Lorg/assertj/core/api/AssertFactory;)V
      14: return

  public org.assertj.core.api.ProxyableIterableAssert(java.util.Iterator<? extends ELEMENT>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method toLazyIterable:(Ljava/util/Iterator;)Ljava/lang/Iterable;
       5: invokespecial #29                 // Method "<init>":(Ljava/lang/Iterable;)V
       8: return

  protected <ELEMENT2> org.assertj.core.api.AbstractListAssert<?, java.util.List<? extends ELEMENT2>, ELEMENT2, org.assertj.core.api.ObjectAssert<ELEMENT2>> newListAssertInstance(java.util.List<? extends ELEMENT2>);
    Code:
       0: new           #35                 // class org/assertj/core/api/ProxyableListAssert
       3: dup
       4: aload_1
       5: invokespecial #38                 // Method org/assertj/core/api/ProxyableListAssert."<init>":(Ljava/util/List;)V
       8: areturn
}
