Compiled from "AbstractOptionalAssert.java"
public abstract class org.assertj.core.api.AbstractOptionalAssert<SELF extends org.assertj.core.api.AbstractOptionalAssert<SELF, VALUE>, VALUE> extends org.assertj.core.api.AbstractAssert<SELF, java.util.Optional<VALUE>> {
  private org.assertj.core.internal.ComparisonStrategy optionalValueComparisonStrategy;

  protected org.assertj.core.api.AbstractOptionalAssert(java.util.Optional<VALUE>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #19                 // Method org/assertj/core/internal/StandardComparisonStrategy.instance:()Lorg/assertj/core/internal/StandardComparisonStrategy;
      10: putfield      #21                 // Field optionalValueComparisonStrategy:Lorg/assertj/core/internal/ComparisonStrategy;
      13: return

  public SELF isPresent();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method assertValueIsPresent:()V
       4: aload_0
       5: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
       8: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      11: areturn

  public SELF isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method isPresent:()Lorg/assertj/core/api/AbstractOptionalAssert;
       4: areturn

  public SELF isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: invokevirtual #56                 // Method java/util/Optional.isPresent:()Z
      15: ifeq          32
      18: aload_0
      19: aload_0
      20: getfield      #51                 // Field actual:Ljava/lang/Object;
      23: checkcast     #53                 // class java/util/Optional
      26: invokestatic  #62                 // Method org/assertj/core/error/OptionalShouldBeEmpty.shouldBeEmpty:(Ljava/util/Optional;)Lorg/assertj/core/error/OptionalShouldBeEmpty;
      29: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      32: aload_0
      33: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      36: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      39: areturn

  public SELF isNotPresent();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method isEmpty:()Lorg/assertj/core/api/AbstractOptionalAssert;
       4: areturn

  public SELF contains(VALUE);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: aload_1
       7: invokespecial #75                 // Method checkNotNull:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #51                 // Field actual:Ljava/lang/Object;
      14: checkcast     #53                 // class java/util/Optional
      17: invokevirtual #56                 // Method java/util/Optional.isPresent:()Z
      20: ifne          31
      23: aload_0
      24: aload_1
      25: invokestatic  #81                 // Method org/assertj/core/error/OptionalShouldContain.shouldContain:(Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldContain;
      28: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      31: aload_0
      32: getfield      #21                 // Field optionalValueComparisonStrategy:Lorg/assertj/core/internal/ComparisonStrategy;
      35: aload_0
      36: getfield      #51                 // Field actual:Ljava/lang/Object;
      39: checkcast     #53                 // class java/util/Optional
      42: invokevirtual #85                 // Method java/util/Optional.get:()Ljava/lang/Object;
      45: aload_1
      46: invokeinterface #91,  3           // InterfaceMethod org/assertj/core/internal/ComparisonStrategy.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifne          69
      54: aload_0
      55: aload_0
      56: getfield      #51                 // Field actual:Ljava/lang/Object;
      59: checkcast     #53                 // class java/util/Optional
      62: aload_1
      63: invokestatic  #94                 // Method org/assertj/core/error/OptionalShouldContain.shouldContain:(Ljava/util/Optional;Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldContain;
      66: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      69: aload_0
      70: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      73: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      76: areturn

  public SELF hasValueSatisfying(java.util.function.Consumer<VALUE>);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method assertValueIsPresent:()V
       4: aload_1
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: invokevirtual #85                 // Method java/util/Optional.get:()Ljava/lang/Object;
      15: invokeinterface #103,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      27: areturn

  public SELF hasValueSatisfying(org.assertj.core.api.Condition<? super VALUE>);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method assertValueIsPresent:()V
       4: aload_0
       5: getfield      #111                // Field conditions:Lorg/assertj/core/internal/Conditions;
       8: aload_0
       9: getfield      #115                // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      12: aload_0
      13: getfield      #51                 // Field actual:Ljava/lang/Object;
      16: checkcast     #53                 // class java/util/Optional
      19: invokevirtual #85                 // Method java/util/Optional.get:()Ljava/lang/Object;
      22: aload_1
      23: invokevirtual #121                // Method org/assertj/core/internal/Conditions.assertIs:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;Lorg/assertj/core/api/Condition;)V
      26: aload_0
      27: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      30: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      33: areturn

  public SELF hasValue(VALUE);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method contains:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractOptionalAssert;
       5: areturn

  public SELF containsInstanceOf(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method assertValueIsPresent:()V
       4: aload_1
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: invokevirtual #85                 // Method java/util/Optional.get:()Ljava/lang/Object;
      15: invokevirtual #135                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      18: ifne          33
      21: aload_0
      22: aload_0
      23: getfield      #51                 // Field actual:Ljava/lang/Object;
      26: aload_1
      27: invokestatic  #141                // Method org/assertj/core/error/OptionalShouldContainInstanceOf.shouldContainInstanceOf:(Ljava/lang/Object;Ljava/lang/Class;)Lorg/assertj/core/error/OptionalShouldContainInstanceOf;
      30: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      33: aload_0
      34: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      37: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      40: areturn

  public SELF usingFieldByFieldValueComparator();
    Code:
       0: aload_0
       1: new           #146                // class org/assertj/core/internal/FieldByFieldComparator
       4: dup
       5: invokespecial #148                // Method org/assertj/core/internal/FieldByFieldComparator."<init>":()V
       8: invokevirtual #152                // Method usingValueComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractOptionalAssert;
      11: areturn

  public SELF usingValueComparator(java.util.Comparator<? super VALUE>);
    Code:
       0: aload_0
       1: new           #154                // class org/assertj/core/internal/ComparatorBasedComparisonStrategy
       4: dup
       5: aload_1
       6: invokespecial #157                // Method org/assertj/core/internal/ComparatorBasedComparisonStrategy."<init>":(Ljava/util/Comparator;)V
       9: putfield      #21                 // Field optionalValueComparisonStrategy:Lorg/assertj/core/internal/ComparisonStrategy;
      12: aload_0
      13: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      16: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      19: areturn

  public SELF usingDefaultValueComparator();
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/assertj/core/internal/StandardComparisonStrategy.instance:()Lorg/assertj/core/internal/StandardComparisonStrategy;
       4: putfield      #21                 // Field optionalValueComparisonStrategy:Lorg/assertj/core/internal/ComparisonStrategy;
       7: aload_0
       8: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      11: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      14: areturn

  public SELF containsSame(VALUE);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: aload_1
       7: invokespecial #75                 // Method checkNotNull:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #51                 // Field actual:Ljava/lang/Object;
      14: checkcast     #53                 // class java/util/Optional
      17: invokevirtual #56                 // Method java/util/Optional.isPresent:()Z
      20: ifne          31
      23: aload_0
      24: aload_1
      25: invokestatic  #81                 // Method org/assertj/core/error/OptionalShouldContain.shouldContain:(Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldContain;
      28: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      31: aload_0
      32: getfield      #51                 // Field actual:Ljava/lang/Object;
      35: checkcast     #53                 // class java/util/Optional
      38: invokevirtual #85                 // Method java/util/Optional.get:()Ljava/lang/Object;
      41: aload_1
      42: if_acmpeq     60
      45: aload_0
      46: aload_0
      47: getfield      #51                 // Field actual:Ljava/lang/Object;
      50: checkcast     #53                 // class java/util/Optional
      53: aload_1
      54: invokestatic  #165                // Method org/assertj/core/error/OptionalShouldContain.shouldContainSame:(Ljava/util/Optional;Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldContain;
      57: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      60: aload_0
      61: getfield      #40                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      64: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalAssert
      67: areturn

  public <U> org.assertj.core.api.AbstractOptionalAssert<?, U> flatMap(java.util.function.Function<? super VALUE, java.util.Optional<U>>);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: aload_1
      13: invokevirtual #170                // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      16: invokestatic  #176                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/Optional;)Lorg/assertj/core/api/OptionalAssert;
      19: areturn

  public <U> org.assertj.core.api.AbstractOptionalAssert<?, U> map(java.util.function.Function<? super VALUE, ? extends U>);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: aload_1
      13: invokevirtual #182                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      16: invokestatic  #176                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/Optional;)Lorg/assertj/core/api/OptionalAssert;
      19: areturn

  public org.assertj.core.api.AbstractObjectAssert<?, VALUE> get();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method isPresent:()Lorg/assertj/core/api/AbstractOptionalAssert;
       4: pop
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: invokevirtual #85                 // Method java/util/Optional.get:()Ljava/lang/Object;
      15: invokestatic  #187                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Object;)Lorg/assertj/core/api/ObjectAssert;
      18: areturn

  private void checkNotNull(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #189                // String The expected value should not be <null>.
      11: iconst_0
      12: anewarray     #191                // class java/lang/Object
      15: invokestatic  #197                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: return

  private void assertValueIsPresent();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #51                 // Field actual:Ljava/lang/Object;
       9: checkcast     #53                 // class java/util/Optional
      12: invokevirtual #56                 // Method java/util/Optional.isPresent:()Z
      15: ifne          29
      18: aload_0
      19: aload_0
      20: getfield      #51                 // Field actual:Ljava/lang/Object;
      23: invokestatic  #203                // Method org/assertj/core/error/OptionalShouldBePresent.shouldBePresent:(Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldBePresent;
      26: invokevirtual #66                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      29: return
}
