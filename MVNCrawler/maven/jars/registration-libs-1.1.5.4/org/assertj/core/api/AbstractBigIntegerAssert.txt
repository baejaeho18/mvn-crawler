Compiled from "AbstractBigIntegerAssert.java"
public class org.assertj.core.api.AbstractBigIntegerAssert<SELF extends org.assertj.core.api.AbstractBigIntegerAssert<SELF>> extends org.assertj.core.api.AbstractComparableAssert<SELF, java.math.BigInteger> implements org.assertj.core.api.NumberAssert<SELF, java.math.BigInteger> {
  org.assertj.core.internal.BigIntegers bigIntegers;

  public org.assertj.core.api.AbstractBigIntegerAssert(java.math.BigInteger, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #16                 // Method org/assertj/core/api/AbstractComparableAssert."<init>":(Ljava/lang/Comparable;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #22                 // Method org/assertj/core/internal/BigIntegers.instance:()Lorg/assertj/core/internal/BigIntegers;
      10: putfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
      13: return

  public SELF isZero();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #47                 // Method org/assertj/core/internal/BigIntegers.assertIsZero:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isNotZero();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #55                 // Method org/assertj/core/internal/BigIntegers.assertIsNotZero:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isOne();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #59                 // Method org/assertj/core/internal/BigIntegers.assertIsOne:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isPositive();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #63                 // Method org/assertj/core/internal/BigIntegers.assertIsPositive:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isNegative();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #67                 // Method org/assertj/core/internal/BigIntegers.assertIsNegative:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isNotNegative();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #71                 // Method org/assertj/core/internal/BigIntegers.assertIsNotNegative:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isNotPositive();
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: invokevirtual #75                 // Method org/assertj/core/internal/BigIntegers.assertIsNotPositive:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;)V
      18: aload_0
      19: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      22: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      25: areturn

  public SELF isCloseTo(java.math.BigInteger, org.assertj.core.data.Offset<java.math.BigInteger>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #81                 // Method org/assertj/core/internal/BigIntegers.assertIsCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      20: aload_0
      21: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      27: areturn

  public SELF isNotCloseTo(java.math.BigInteger, org.assertj.core.data.Offset<java.math.BigInteger>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #89                 // Method org/assertj/core/internal/BigIntegers.assertIsNotCloseTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;)V
      20: aload_0
      21: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      27: areturn

  public SELF isCloseTo(java.math.BigInteger, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #94                 // Method org/assertj/core/internal/BigIntegers.assertIsCloseToPercentage:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;)V
      20: aload_0
      21: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      27: areturn

  public SELF isNotCloseTo(java.math.BigInteger, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #99                 // Method org/assertj/core/internal/BigIntegers.assertIsNotCloseToPercentage:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;)V
      20: aload_0
      21: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      27: areturn

  public SELF isBetween(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #105                // Method org/assertj/core/internal/BigIntegers.assertIsBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      20: aload_0
      21: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      27: areturn

  public SELF isStrictlyBetween(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
       4: aload_0
       5: getfield      #38                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #41                 // Field actual:Ljava/lang/Object;
      12: checkcast     #43                 // class java/lang/Number
      15: aload_1
      16: aload_2
      17: invokevirtual #111                // Method org/assertj/core/internal/BigIntegers.assertIsStrictlyBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      20: aload_0
      21: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      24: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      27: areturn

  public SELF isEqualTo(java.lang.String);
    Code:
       0: aload_0
       1: new           #115                // class java/math/BigInteger
       4: dup
       5: aload_1
       6: invokespecial #118                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
       9: invokevirtual #121                // Method isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      12: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      15: areturn

  public SELF isEqualTo(int);
    Code:
       0: aload_0
       1: new           #115                // class java/math/BigInteger
       4: dup
       5: iload_1
       6: invokestatic  #129                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       9: invokespecial #118                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      12: invokevirtual #121                // Method isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      15: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      18: areturn

  public SELF isEqualTo(long);
    Code:
       0: aload_0
       1: new           #115                // class java/math/BigInteger
       4: dup
       5: lload_1
       6: invokestatic  #136                // Method java/lang/Long.toString:(J)Ljava/lang/String;
       9: invokespecial #118                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      12: invokevirtual #121                // Method isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      15: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      18: areturn

  public SELF usingComparator(java.util.Comparator<? super java.math.BigInteger>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #143                // Method org/assertj/core/api/AbstractComparableAssert.usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractComparableAssert;
       5: pop
       6: aload_0
       7: new           #18                 // class org/assertj/core/internal/BigIntegers
      10: dup
      11: new           #145                // class org/assertj/core/internal/ComparatorBasedComparisonStrategy
      14: dup
      15: aload_1
      16: invokespecial #148                // Method org/assertj/core/internal/ComparatorBasedComparisonStrategy."<init>":(Ljava/util/Comparator;)V
      19: invokespecial #151                // Method org/assertj/core/internal/BigIntegers."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
      22: putfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
      25: aload_0
      26: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      29: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      32: areturn

  public SELF usingDefaultComparator();
    Code:
       0: aload_0
       1: invokespecial #158                // Method org/assertj/core/api/AbstractComparableAssert.usingDefaultComparator:()Lorg/assertj/core/api/AbstractComparableAssert;
       4: pop
       5: aload_0
       6: invokestatic  #22                 // Method org/assertj/core/internal/BigIntegers.instance:()Lorg/assertj/core/internal/BigIntegers;
       9: putfield      #24                 // Field bigIntegers:Lorg/assertj/core/internal/BigIntegers;
      12: aload_0
      13: getfield      #51                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      16: checkcast     #2                  // class org/assertj/core/api/AbstractBigIntegerAssert
      19: areturn

  public org.assertj.core.api.AbstractComparableAssert usingDefaultComparator();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method usingDefaultComparator:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.AbstractComparableAssert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #162                // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       5: areturn

  public org.assertj.core.api.AbstractComparableAssert isStrictlyBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: checkcast     #115                // class java/math/BigInteger
       9: invokevirtual #165                // Method isStrictlyBetween:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
      12: areturn

  public org.assertj.core.api.AbstractComparableAssert isBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: checkcast     #115                // class java/math/BigInteger
       9: invokevirtual #167                // Method isBetween:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
      12: areturn

  public org.assertj.core.api.ComparableAssert isStrictlyBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: checkcast     #115                // class java/math/BigInteger
       9: invokevirtual #165                // Method isStrictlyBetween:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
      12: areturn

  public org.assertj.core.api.ComparableAssert isBetween(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: checkcast     #115                // class java/math/BigInteger
       9: invokevirtual #167                // Method isBetween:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
      12: areturn

  public org.assertj.core.api.AbstractAssert usingDefaultComparator();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method usingDefaultComparator:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.AbstractAssert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #162                // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       5: areturn

  public org.assertj.core.api.Assert usingDefaultComparator();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method usingDefaultComparator:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.Assert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #162                // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       5: areturn

  public org.assertj.core.api.NumberAssert isNotCloseTo(java.lang.Number, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: invokevirtual #175                // Method isNotCloseTo:(Ljava/math/BigInteger;Lorg/assertj/core/data/Percentage;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isCloseTo(java.lang.Number, org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: invokevirtual #177                // Method isCloseTo:(Ljava/math/BigInteger;Lorg/assertj/core/data/Percentage;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isNotCloseTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: invokevirtual #180                // Method isNotCloseTo:(Ljava/math/BigInteger;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isCloseTo(java.lang.Number, org.assertj.core.data.Offset);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: invokevirtual #182                // Method isCloseTo:(Ljava/math/BigInteger;Lorg/assertj/core/data/Offset;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       9: areturn

  public org.assertj.core.api.NumberAssert isStrictlyBetween(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: checkcast     #115                // class java/math/BigInteger
       9: invokevirtual #165                // Method isStrictlyBetween:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
      12: areturn

  public org.assertj.core.api.NumberAssert isBetween(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #115                // class java/math/BigInteger
       5: aload_2
       6: checkcast     #115                // class java/math/BigInteger
       9: invokevirtual #167                // Method isBetween:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
      12: areturn

  public org.assertj.core.api.NumberAssert isNotPositive();
    Code:
       0: aload_0
       1: invokevirtual #186                // Method isNotPositive:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isNotNegative();
    Code:
       0: aload_0
       1: invokevirtual #188                // Method isNotNegative:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isNegative();
    Code:
       0: aload_0
       1: invokevirtual #190                // Method isNegative:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isPositive();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method isPositive:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isOne();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method isOne:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isNotZero();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method isNotZero:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public org.assertj.core.api.NumberAssert isZero();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method isZero:()Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn
}
