Compiled from "AtomicReferenceArrayAssert.java"
public class org.assertj.core.api.AtomicReferenceArrayAssert<T> extends org.assertj.core.api.AbstractAssert<org.assertj.core.api.AtomicReferenceArrayAssert<T>, java.util.concurrent.atomic.AtomicReferenceArray<T>> implements org.assertj.core.api.IndexedObjectEnumerableAssert<org.assertj.core.api.AtomicReferenceArrayAssert<T>, T>, org.assertj.core.api.ArraySortedAssert<org.assertj.core.api.AtomicReferenceArrayAssert<T>, T> {
  private T[] array;

  org.assertj.core.internal.ObjectArrays arrays;

  org.assertj.core.internal.Iterables iterables;

  private org.assertj.core.internal.TypeComparators comparatorsByType;

  private java.util.Map<java.lang.String, java.util.Comparator<?>> comparatorsForElementPropertyOrFieldNames;

  private org.assertj.core.internal.TypeComparators comparatorsForElementPropertyOrFieldTypes;

  public org.assertj.core.api.AtomicReferenceArrayAssert(java.util.concurrent.atomic.AtomicReferenceArray<T>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
       4: invokespecial #29                 // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       7: aload_0
       8: invokestatic  #35                 // Method org/assertj/core/internal/ObjectArrays.instance:()Lorg/assertj/core/internal/ObjectArrays;
      11: putfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
      14: aload_0
      15: invokestatic  #42                 // Method org/assertj/core/internal/Iterables.instance:()Lorg/assertj/core/internal/Iterables;
      18: putfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
      21: aload_0
      22: invokestatic  #50                 // Method org/assertj/core/internal/TypeComparators.defaultTypeComparators:()Lorg/assertj/core/internal/TypeComparators;
      25: putfield      #52                 // Field comparatorsByType:Lorg/assertj/core/internal/TypeComparators;
      28: aload_0
      29: new           #54                 // class java/util/TreeMap
      32: dup
      33: invokespecial #57                 // Method java/util/TreeMap."<init>":()V
      36: putfield      #59                 // Field comparatorsForElementPropertyOrFieldNames:Ljava/util/Map;
      39: aload_0
      40: invokestatic  #50                 // Method org/assertj/core/internal/TypeComparators.defaultTypeComparators:()Lorg/assertj/core/internal/TypeComparators;
      43: putfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
      46: aload_0
      47: aload_1
      48: invokestatic  #66                 // Method org/assertj/core/util/Arrays.array:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)[Ljava/lang/Object;
      51: putfield      #68                 // Field array:[Ljava/lang/Object;
      54: return

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> as(org.assertj.core.description.Description);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method org/assertj/core/api/AbstractAssert.as:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/AbstractAssert;
       5: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
       8: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> as(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #86                 // Method org/assertj/core/api/AbstractAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
       6: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
       9: areturn

  public void isNullOrEmpty();
    Code:
       0: aload_0
       1: getfield      #92                 // Field actual:Ljava/lang/Object;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: invokevirtual #95                 // Method isEmpty:()V
      12: return

  public void isEmpty();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #103                // Method org/assertj/core/internal/ObjectArrays.assertEmpty:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: return

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> isNotEmpty();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #108                // Method org/assertj/core/internal/ObjectArrays.assertNotEmpty:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasArray(T[]);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #118                // Method org/assertj/core/internal/ObjectArrays.assertContainsExactly:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasSize(int);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: invokevirtual #125                // Method org/assertj/core/internal/ObjectArrays.assertHasSize:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;I)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasSameSizeAs(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #132                // Method org/assertj/core/internal/ObjectArrays.assertHasSameSizeAs:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasSameSizeAs(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #137                // Method org/assertj/core/internal/ObjectArrays.assertHasSameSizeAs:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Iterable;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> contains(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #143                // Method org/assertj/core/internal/ObjectArrays.assertContains:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsOnly(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #148                // Method org/assertj/core/internal/ObjectArrays.assertContainsOnly:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsOnlyElementsOf(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
       5: invokevirtual #157                // Method containsOnly:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       8: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsOnlyNulls();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #163                // Method org/assertj/core/internal/ObjectArrays.assertContainsOnlyNulls:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasSameElementsAs(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #166                // Method containsOnlyElementsOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsOnlyOnce(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #170                // Method org/assertj/core/internal/ObjectArrays.assertContainsOnlyOnce:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsExactly(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #118                // Method org/assertj/core/internal/ObjectArrays.assertContainsExactly:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsExactlyInAnyOrder(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #175                // Method org/assertj/core/internal/ObjectArrays.assertContainsExactlyInAnyOrder:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsExactlyInAnyOrderElementsOf(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
       5: invokevirtual #178                // Method containsExactlyInAnyOrder:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       8: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsExactlyElementsOf(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
       5: invokevirtual #181                // Method containsExactly:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       8: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsSequence(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #185                // Method org/assertj/core/internal/ObjectArrays.assertContainsSequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsSequence(java.lang.Iterable<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #192                // Method org/assertj/core/internal/CommonValidations.checkSequenceIsNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       8: aload_0
       9: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      12: aload_0
      13: getfield      #68                 // Field array:[Ljava/lang/Object;
      16: aload_1
      17: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      20: invokevirtual #185                // Method org/assertj/core/internal/ObjectArrays.assertContainsSequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      30: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContainSequence(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #196                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContainSequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContainSequence(java.lang.Iterable<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #192                // Method org/assertj/core/internal/CommonValidations.checkSequenceIsNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       8: aload_0
       9: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      12: aload_0
      13: getfield      #68                 // Field array:[Ljava/lang/Object;
      16: aload_1
      17: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      20: invokevirtual #196                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContainSequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      30: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsSubsequence(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #200                // Method org/assertj/core/internal/ObjectArrays.assertContainsSubsequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsSubsequence(java.lang.Iterable<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #204                // Method org/assertj/core/internal/CommonValidations.checkSubsequenceIsNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       8: aload_0
       9: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      12: aload_0
      13: getfield      #68                 // Field array:[Ljava/lang/Object;
      16: aload_1
      17: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      20: invokevirtual #200                // Method org/assertj/core/internal/ObjectArrays.assertContainsSubsequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      30: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContainSubsequence(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #208                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContainSubsequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContainSubsequence(java.lang.Iterable<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #204                // Method org/assertj/core/internal/CommonValidations.checkSubsequenceIsNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       8: aload_0
       9: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      12: aload_0
      13: getfield      #68                 // Field array:[Ljava/lang/Object;
      16: aload_1
      17: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      20: invokevirtual #208                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContainSubsequence:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      27: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      30: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> contains(T, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: aload_2
      14: invokevirtual #212                // Method org/assertj/core/internal/ObjectArrays.assertContains:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Object;Lorg/assertj/core/data/Index;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasOnlyElementsOfTypes(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #222                // Method org/assertj/core/internal/ObjectArrays.assertHasOnlyElementsOfTypes:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Class;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContain(T, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: aload_2
      14: invokevirtual #229                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Object;Lorg/assertj/core/data/Index;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContain(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #231                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContain:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContainAnyElementsOf(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #235                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContainAnyElementsOf:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Iterable;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotHaveDuplicates();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #239                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotHaveDuplicates:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> startsWith(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #243                // Method org/assertj/core/internal/ObjectArrays.assertStartsWith:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> endsWith(T, T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: aload_2
      14: invokevirtual #249                // Method org/assertj/core/internal/ObjectArrays.assertEndsWith:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> endsWith(T[]);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #252                // Method org/assertj/core/internal/ObjectArrays.assertEndsWith:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> isSubsetOf(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #257                // Method org/assertj/core/internal/ObjectArrays.assertIsSubsetOf:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;Ljava/lang/Iterable;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> isSubsetOf(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokestatic  #263                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      16: invokevirtual #257                // Method org/assertj/core/internal/ObjectArrays.assertIsSubsetOf:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;Ljava/lang/Iterable;)V
      19: aload_0
      20: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      26: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsNull();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #267                // Method org/assertj/core/internal/ObjectArrays.assertContainsNull:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotContainNull();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #271                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotContainNull:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> are(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #277                // Method org/assertj/core/internal/ObjectArrays.assertAre:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Lorg/assertj/core/api/Condition;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> areNot(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #284                // Method org/assertj/core/internal/ObjectArrays.assertAreNot:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Lorg/assertj/core/api/Condition;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> have(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #288                // Method org/assertj/core/internal/ObjectArrays.assertHave:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Lorg/assertj/core/api/Condition;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doNotHave(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #292                // Method org/assertj/core/internal/ObjectArrays.assertDoNotHave:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Lorg/assertj/core/api/Condition;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> areAtLeast(int, org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: aload_2
      14: invokevirtual #298                // Method org/assertj/core/internal/ObjectArrays.assertAreAtLeast:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;ILorg/assertj/core/api/Condition;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> areAtLeastOne(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokevirtual #302                // Method areAtLeast:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: pop
       7: aload_0
       8: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      11: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      14: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> areAtMost(int, org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: aload_2
      14: invokevirtual #306                // Method org/assertj/core/internal/ObjectArrays.assertAreAtMost:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;ILorg/assertj/core/api/Condition;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> areExactly(int, org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: aload_2
      14: invokevirtual #310                // Method org/assertj/core/internal/ObjectArrays.assertAreExactly:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;ILorg/assertj/core/api/Condition;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> haveAtLeastOne(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokevirtual #314                // Method haveAtLeast:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> haveAtLeast(int, org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: aload_2
      14: invokevirtual #317                // Method org/assertj/core/internal/ObjectArrays.assertHaveAtLeast:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;ILorg/assertj/core/api/Condition;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> haveAtMost(int, org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: aload_2
      14: invokevirtual #321                // Method org/assertj/core/internal/ObjectArrays.assertHaveAtMost:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;ILorg/assertj/core/api/Condition;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> haveExactly(int, org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: iload_1
      13: aload_2
      14: invokevirtual #325                // Method org/assertj/core/internal/ObjectArrays.assertHaveExactly:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;ILorg/assertj/core/api/Condition;)V
      17: aload_0
      18: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      21: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      24: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasAtLeastOneElementOfType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #331                // Method org/assertj/core/internal/ObjectArrays.assertHasAtLeastOneElementOfType:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Class;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> hasOnlyElementsOfType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #338                // Method org/assertj/core/internal/ObjectArrays.assertHasOnlyElementsOfType:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Class;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> doesNotHaveAnyElementsOfTypes(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #342                // Method org/assertj/core/internal/ObjectArrays.assertDoesNotHaveAnyElementsOfTypes:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Class;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> isSorted();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokevirtual #347                // Method org/assertj/core/internal/ObjectArrays.assertIsSorted:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      19: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      22: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> isSortedAccordingTo(java.util.Comparator<? super T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #353                // Method org/assertj/core/internal/ObjectArrays.assertIsSortedAccordingToComparator:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/util/Comparator;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsAll(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #360                // Method org/assertj/core/internal/ObjectArrays.assertContainsAll:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;Ljava/lang/Iterable;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> usingElementComparator(java.util.Comparator<? super T>);
    Code:
       0: aload_0
       1: new           #31                 // class org/assertj/core/internal/ObjectArrays
       4: dup
       5: new           #363                // class org/assertj/core/internal/ComparatorBasedComparisonStrategy
       8: dup
       9: aload_1
      10: invokespecial #366                // Method org/assertj/core/internal/ComparatorBasedComparisonStrategy."<init>":(Ljava/util/Comparator;)V
      13: invokespecial #369                // Method org/assertj/core/internal/ObjectArrays."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
      16: putfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
      19: aload_0
      20: new           #371                // class org/assertj/core/internal/Objects
      23: dup
      24: new           #373                // class org/assertj/core/internal/AtomicReferenceArrayElementComparisonStrategy
      27: dup
      28: aload_1
      29: invokespecial #374                // Method org/assertj/core/internal/AtomicReferenceArrayElementComparisonStrategy."<init>":(Ljava/util/Comparator;)V
      32: invokespecial #375                // Method org/assertj/core/internal/Objects."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
      35: putfield      #379                // Field objects:Lorg/assertj/core/internal/Objects;
      38: aload_0
      39: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      42: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      45: areturn

  private org.assertj.core.api.AtomicReferenceArrayAssert<T> usingExtendedByTypesElementComparator(java.util.Comparator<java.lang.Object>);
    Code:
       0: aload_0
       1: new           #383                // class org/assertj/core/internal/ExtendedByTypesComparator
       4: dup
       5: aload_1
       6: aload_0
       7: getfield      #52                 // Field comparatorsByType:Lorg/assertj/core/internal/TypeComparators;
      10: invokespecial #386                // Method org/assertj/core/internal/ExtendedByTypesComparator."<init>":(Ljava/util/Comparator;Lorg/assertj/core/internal/TypeComparators;)V
      13: invokevirtual #388                // Method usingElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
      16: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> usingDefaultElementComparator();
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method org/assertj/core/internal/ObjectArrays.instance:()Lorg/assertj/core/internal/ObjectArrays;
       4: putfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       7: aload_0
       8: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      11: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      14: areturn

  public <C> org.assertj.core.api.AtomicReferenceArrayAssert<T> usingComparatorForElementFieldsWithNames(java.util.Comparator<C>, java.lang.String...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     41
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: getfield      #59                 // Field comparatorsForElementPropertyOrFieldNames:Ljava/util/Map;
      26: aload         6
      28: aload_1
      29: invokeinterface #400,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: iinc          5, 1
      38: goto          9
      41: aload_0
      42: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      45: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      48: areturn

  public <C> org.assertj.core.api.AtomicReferenceArrayAssert<T> usingComparatorForElementFieldsWithType(java.util.Comparator<C>, java.lang.Class<C>);
    Code:
       0: aload_0
       1: getfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
       4: aload_2
       5: aload_1
       6: invokevirtual #408                // Method org/assertj/core/internal/TypeComparators.put:(Ljava/lang/Class;Ljava/util/Comparator;)V
       9: aload_0
      10: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      13: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      16: areturn

  public <C> org.assertj.core.api.AtomicReferenceArrayAssert<T> usingComparatorForType(java.util.Comparator<C>, java.lang.Class<C>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: invokevirtual #415                // Method org/assertj/core/internal/ObjectArrays.getComparator:()Ljava/util/Comparator;
       7: ifnonnull     26
      10: aload_0
      11: new           #383                // class org/assertj/core/internal/ExtendedByTypesComparator
      14: dup
      15: aload_0
      16: getfield      #52                 // Field comparatorsByType:Lorg/assertj/core/internal/TypeComparators;
      19: invokespecial #418                // Method org/assertj/core/internal/ExtendedByTypesComparator."<init>":(Lorg/assertj/core/internal/TypeComparators;)V
      22: invokevirtual #388                // Method usingElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
      25: pop
      26: aload_0
      27: getfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
      30: aload_2
      31: aload_1
      32: invokevirtual #408                // Method org/assertj/core/internal/TypeComparators.put:(Ljava/lang/Class;Ljava/util/Comparator;)V
      35: aload_0
      36: getfield      #52                 // Field comparatorsByType:Lorg/assertj/core/internal/TypeComparators;
      39: aload_2
      40: aload_1
      41: invokevirtual #408                // Method org/assertj/core/internal/TypeComparators.put:(Ljava/lang/Class;Ljava/util/Comparator;)V
      44: aload_0
      45: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      48: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      51: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> usingFieldByFieldElementComparator();
    Code:
       0: aload_0
       1: new           #421                // class org/assertj/core/internal/FieldByFieldComparator
       4: dup
       5: aload_0
       6: getfield      #59                 // Field comparatorsForElementPropertyOrFieldNames:Ljava/util/Map;
       9: aload_0
      10: getfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
      13: invokespecial #424                // Method org/assertj/core/internal/FieldByFieldComparator."<init>":(Ljava/util/Map;Lorg/assertj/core/internal/TypeComparators;)V
      16: invokespecial #426                // Method usingExtendedByTypesElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
      19: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> usingRecursiveFieldByFieldElementComparator();
    Code:
       0: aload_0
       1: new           #429                // class org/assertj/core/internal/RecursiveFieldByFieldComparator
       4: dup
       5: aload_0
       6: getfield      #59                 // Field comparatorsForElementPropertyOrFieldNames:Ljava/util/Map;
       9: aload_0
      10: getfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
      13: invokespecial #430                // Method org/assertj/core/internal/RecursiveFieldByFieldComparator."<init>":(Ljava/util/Map;Lorg/assertj/core/internal/TypeComparators;)V
      16: invokespecial #426                // Method usingExtendedByTypesElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
      19: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> usingElementComparatorOnFields(java.lang.String...);
    Code:
       0: aload_0
       1: new           #434                // class org/assertj/core/internal/OnFieldsComparator
       4: dup
       5: aload_0
       6: getfield      #59                 // Field comparatorsForElementPropertyOrFieldNames:Ljava/util/Map;
       9: aload_0
      10: getfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
      13: aload_1
      14: invokespecial #437                // Method org/assertj/core/internal/OnFieldsComparator."<init>":(Ljava/util/Map;Lorg/assertj/core/internal/TypeComparators;[Ljava/lang/String;)V
      17: invokespecial #426                // Method usingExtendedByTypesElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
      20: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> usingElementComparatorIgnoringFields(java.lang.String...);
    Code:
       0: aload_0
       1: new           #441                // class org/assertj/core/internal/IgnoringFieldsComparator
       4: dup
       5: aload_0
       6: getfield      #59                 // Field comparatorsForElementPropertyOrFieldNames:Ljava/util/Map;
       9: aload_0
      10: getfield      #61                 // Field comparatorsForElementPropertyOrFieldTypes:Lorg/assertj/core/internal/TypeComparators;
      13: aload_1
      14: invokespecial #442                // Method org/assertj/core/internal/IgnoringFieldsComparator."<init>":(Ljava/util/Map;Lorg/assertj/core/internal/TypeComparators;[Ljava/lang/String;)V
      17: invokespecial #426                // Method usingExtendedByTypesElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
      20: areturn

  public org.assertj.core.api.ObjectArrayAssert<java.lang.Object> extracting(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #450                // Method org/assertj/core/extractor/Extractors.byName:(Ljava/lang/String;)Lorg/assertj/core/api/iterable/Extractor;
       8: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
      11: astore_2
      12: iconst_1
      13: anewarray     #458                // class java/lang/String
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: invokestatic  #462                // Method org/assertj/core/extractor/Extractors.extractedDescriptionOf:([Ljava/lang/String;)Ljava/lang/String;
      23: astore_3
      24: aload_0
      25: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      28: invokevirtual #467                // Method org/assertj/core/api/WritableAssertionInfo.description:()Lorg/assertj/core/description/Description;
      31: aload_3
      32: invokestatic  #473                // Method org/assertj/core/description/Description.mostRelevantDescription:(Lorg/assertj/core/description/Description;Ljava/lang/String;)Ljava/lang/String;
      35: astore        4
      37: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      40: dup
      41: aload_2
      42: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      45: aload         4
      47: iconst_0
      48: anewarray     #480                // class java/lang/Object
      51: invokevirtual #483                // Method org/assertj/core/api/ObjectArrayAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectArrayAssert;
      54: checkcast     #475                // class org/assertj/core/api/ObjectArrayAssert
      57: areturn

  public <P> org.assertj.core.api.ObjectArrayAssert<P> extracting(java.lang.String, java.lang.Class<P>);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #450                // Method org/assertj/core/extractor/Extractors.byName:(Ljava/lang/String;)Lorg/assertj/core/api/iterable/Extractor;
       8: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
      11: checkcast     #487                // class "[Ljava/lang/Object;"
      14: astore_3
      15: iconst_1
      16: anewarray     #458                // class java/lang/String
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: invokestatic  #462                // Method org/assertj/core/extractor/Extractors.extractedDescriptionOf:([Ljava/lang/String;)Ljava/lang/String;
      26: astore        4
      28: aload_0
      29: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      32: invokevirtual #467                // Method org/assertj/core/api/WritableAssertionInfo.description:()Lorg/assertj/core/description/Description;
      35: aload         4
      37: invokestatic  #473                // Method org/assertj/core/description/Description.mostRelevantDescription:(Lorg/assertj/core/description/Description;Ljava/lang/String;)Ljava/lang/String;
      40: astore        5
      42: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      45: dup
      46: aload_3
      47: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      50: aload         5
      52: iconst_0
      53: anewarray     #480                // class java/lang/Object
      56: invokevirtual #483                // Method org/assertj/core/api/ObjectArrayAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectArrayAssert;
      59: checkcast     #475                // class org/assertj/core/api/ObjectArrayAssert
      62: areturn

  public org.assertj.core.api.ObjectArrayAssert<org.assertj.core.groups.Tuple> extracting(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #494                // Method org/assertj/core/extractor/Extractors.byName:([Ljava/lang/String;)Lorg/assertj/core/api/iterable/Extractor;
       8: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: aload_2
      14: arraylength
      15: ldc_w         #496                // class "[Lorg/assertj/core/groups/Tuple;"
      18: invokestatic  #500                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
      21: checkcast     #496                // class "[Lorg/assertj/core/groups/Tuple;"
      24: astore_3
      25: aload_1
      26: invokestatic  #462                // Method org/assertj/core/extractor/Extractors.extractedDescriptionOf:([Ljava/lang/String;)Ljava/lang/String;
      29: astore        4
      31: aload_0
      32: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      35: invokevirtual #467                // Method org/assertj/core/api/WritableAssertionInfo.description:()Lorg/assertj/core/description/Description;
      38: aload         4
      40: invokestatic  #473                // Method org/assertj/core/description/Description.mostRelevantDescription:(Lorg/assertj/core/description/Description;Ljava/lang/String;)Ljava/lang/String;
      43: astore        5
      45: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      48: dup
      49: aload_3
      50: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      53: aload         5
      55: iconst_0
      56: anewarray     #480                // class java/lang/Object
      59: invokevirtual #483                // Method org/assertj/core/api/ObjectArrayAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectArrayAssert;
      62: checkcast     #475                // class org/assertj/core/api/ObjectArrayAssert
      65: areturn

  public <U> org.assertj.core.api.ObjectArrayAssert<U> extracting(org.assertj.core.api.iterable.Extractor<? super T, U>);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
       8: astore_2
       9: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      12: dup
      13: aload_2
      14: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      17: areturn

  public <U, EXCEPTION extends java.lang.Exception> org.assertj.core.api.ObjectArrayAssert<U> extracting(org.assertj.core.api.iterable.ThrowingExtractor<? super T, U, EXCEPTION>);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
       8: astore_2
       9: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      12: dup
      13: aload_2
      14: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      17: areturn

  public <U, C extends java.util.Collection<U>> org.assertj.core.api.ObjectArrayAssert<U> flatExtracting(org.assertj.core.api.iterable.Extractor<? super T, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #515                // Method doFlatExtracting:(Lorg/assertj/core/api/iterable/Extractor;)Lorg/assertj/core/api/ObjectArrayAssert;
       5: areturn

  public <U, C extends java.util.Collection<U>, EXCEPTION extends java.lang.Exception> org.assertj.core.api.ObjectArrayAssert<U> flatExtracting(org.assertj.core.api.iterable.ThrowingExtractor<? super T, C, EXCEPTION>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #515                // Method doFlatExtracting:(Lorg/assertj/core/api/iterable/Extractor;)Lorg/assertj/core/api/ObjectArrayAssert;
       5: areturn

  private <U, C extends java.util.Collection<U>> org.assertj.core.api.ObjectArrayAssert<U> doFlatExtracting(org.assertj.core.api.iterable.Extractor<? super T, C>);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: invokestatic  #263                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: aload_1
       8: invokestatic  #520                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:(Ljava/lang/Iterable;Lorg/assertj/core/api/iterable/Extractor;)Ljava/util/List;
      11: astore_2
      12: invokestatic  #526                // Method org/assertj/core/util/Lists.newArrayList:()Ljava/util/ArrayList;
      15: astore_3
      16: aload_2
      17: invokeinterface #532,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #538,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          58
      34: aload         4
      36: invokeinterface #542,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #544                // class java/util/Collection
      44: astore        5
      46: aload_3
      47: aload         5
      49: invokeinterface #548,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: goto          24
      58: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      61: dup
      62: aload_3
      63: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      66: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      69: areturn

  public org.assertj.core.api.ObjectArrayAssert<java.lang.Object> flatExtracting(java.lang.String);
    Code:
       0: invokestatic  #526                // Method org/assertj/core/util/Lists.newArrayList:()Ljava/util/ArrayList;
       3: astore_2
       4: aload_0
       5: getfield      #68                 // Field array:[Ljava/lang/Object;
       8: invokestatic  #263                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: aload_1
      12: invokestatic  #450                // Method org/assertj/core/extractor/Extractors.byName:(Ljava/lang/String;)Lorg/assertj/core/api/iterable/Extractor;
      15: invokestatic  #520                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:(Ljava/lang/Iterable;Lorg/assertj/core/api/iterable/Extractor;)Ljava/util/List;
      18: astore_3
      19: aload_3
      20: invokeinterface #532,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #538,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          160
      37: aload         4
      39: invokeinterface #542,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: astore        5
      46: aload         5
      48: invokestatic  #559                // Method org/assertj/core/util/Arrays.isArray:(Ljava/lang/Object;)Z
      51: ifeq          94
      54: aload         5
      56: invokestatic  #565                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      59: istore        6
      61: iconst_0
      62: istore        7
      64: iload         7
      66: iload         6
      68: if_icmpge     91
      71: aload_2
      72: aload         5
      74: iload         7
      76: invokestatic  #569                // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      79: invokeinterface #572,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: iinc          7, 1
      88: goto          64
      91: goto          157
      94: aload         5
      96: instanceof    #574                // class java/lang/Iterable
      99: ifeq          152
     102: aload         5
     104: checkcast     #574                // class java/lang/Iterable
     107: astore        6
     109: aload         6
     111: invokeinterface #575,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     116: astore        7
     118: aload         7
     120: invokeinterface #538,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          149
     128: aload         7
     130: invokeinterface #542,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: astore        8
     137: aload_2
     138: aload         8
     140: invokeinterface #572,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     145: pop
     146: goto          118
     149: goto          157
     152: aload         5
     154: invokestatic  #580                // Method org/assertj/core/internal/CommonErrors.wrongElementTypeForFlatExtracting:(Ljava/lang/Object;)V
     157: goto          27
     160: new           #475                // class org/assertj/core/api/ObjectArrayAssert
     163: dup
     164: aload_2
     165: invokeinterface #583,  1          // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
     170: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
     173: areturn

  public org.assertj.core.api.ObjectArrayAssert<java.lang.Object> extractingResultOf(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #594                // Method org/assertj/core/extractor/Extractors.resultOf:(Ljava/lang/String;)Lorg/assertj/core/api/iterable/Extractor;
       8: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
      11: astore_2
      12: aload_1
      13: invokestatic  #598                // Method org/assertj/core/extractor/Extractors.extractedDescriptionOfMethod:(Ljava/lang/String;)Ljava/lang/String;
      16: astore_3
      17: aload_0
      18: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      21: invokevirtual #467                // Method org/assertj/core/api/WritableAssertionInfo.description:()Lorg/assertj/core/description/Description;
      24: aload_3
      25: invokestatic  #473                // Method org/assertj/core/description/Description.mostRelevantDescription:(Lorg/assertj/core/description/Description;Ljava/lang/String;)Ljava/lang/String;
      28: astore        4
      30: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      33: dup
      34: aload_2
      35: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      38: aload         4
      40: iconst_0
      41: anewarray     #480                // class java/lang/Object
      44: invokevirtual #483                // Method org/assertj/core/api/ObjectArrayAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectArrayAssert;
      47: checkcast     #475                // class org/assertj/core/api/ObjectArrayAssert
      50: areturn

  public <P> org.assertj.core.api.ObjectArrayAssert<P> extractingResultOf(java.lang.String, java.lang.Class<P>);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #594                // Method org/assertj/core/extractor/Extractors.resultOf:(Ljava/lang/String;)Lorg/assertj/core/api/iterable/Extractor;
       8: invokestatic  #456                // Method org/assertj/core/groups/FieldsOrPropertiesExtractor.extract:([Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor;)[Ljava/lang/Object;
      11: checkcast     #487                // class "[Ljava/lang/Object;"
      14: astore_3
      15: aload_1
      16: invokestatic  #598                // Method org/assertj/core/extractor/Extractors.extractedDescriptionOfMethod:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        4
      21: aload_0
      22: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      25: invokevirtual #467                // Method org/assertj/core/api/WritableAssertionInfo.description:()Lorg/assertj/core/description/Description;
      28: aload         4
      30: invokestatic  #473                // Method org/assertj/core/description/Description.mostRelevantDescription:(Lorg/assertj/core/description/Description;Ljava/lang/String;)Ljava/lang/String;
      33: astore        5
      35: new           #475                // class org/assertj/core/api/ObjectArrayAssert
      38: dup
      39: aload_3
      40: invokespecial #478                // Method org/assertj/core/api/ObjectArrayAssert."<init>":([Ljava/lang/Object;)V
      43: aload         5
      45: iconst_0
      46: anewarray     #480                // class java/lang/Object
      49: invokevirtual #483                // Method org/assertj/core/api/ObjectArrayAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectArrayAssert;
      52: checkcast     #475                // class org/assertj/core/api/ObjectArrayAssert
      55: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> inHexadecimal();
    Code:
       0: aload_0
       1: invokespecial #603                // Method org/assertj/core/api/AbstractAssert.inHexadecimal:()Lorg/assertj/core/api/AbstractAssert;
       4: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
       7: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> inBinary();
    Code:
       0: aload_0
       1: invokespecial #606                // Method org/assertj/core/api/AbstractAssert.inBinary:()Lorg/assertj/core/api/AbstractAssert;
       4: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
       7: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> filteredOn(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: invokestatic  #614                // Method org/assertj/core/api/filter/Filters.filter:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/Filters;
       7: aload_1
       8: aload_2
       9: invokevirtual #618                // Method org/assertj/core/api/filter/Filters.with:(Ljava/lang/String;Ljava/lang/Object;)Lorg/assertj/core/api/filter/Filters;
      12: invokevirtual #621                // Method org/assertj/core/api/filter/Filters.get:()Ljava/lang/Iterable;
      15: astore_3
      16: new           #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      19: dup
      20: new           #623                // class java/util/concurrent/atomic/AtomicReferenceArray
      23: dup
      24: aload_3
      25: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      28: invokespecial #624                // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":([Ljava/lang/Object;)V
      31: invokespecial #626                // Method "<init>":(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
      34: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> filteredOnNull(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #633                // Method filteredOn:(Ljava/lang/String;Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> filteredOn(java.lang.String, org.assertj.core.api.filter.FilterOperator<?>);
    Code:
       0: aload_2
       1: invokestatic  #640                // Method org/assertj/core/util/Preconditions.checkNotNull:(Lorg/assertj/core/api/filter/FilterOperator;)V
       4: aload_0
       5: getfield      #68                 // Field array:[Ljava/lang/Object;
       8: invokestatic  #614                // Method org/assertj/core/api/filter/Filters.filter:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/Filters;
      11: aload_1
      12: invokevirtual #643                // Method org/assertj/core/api/filter/Filters.with:(Ljava/lang/String;)Lorg/assertj/core/api/filter/Filters;
      15: astore_3
      16: aload_2
      17: aload_3
      18: invokevirtual #649                // Method org/assertj/core/api/filter/FilterOperator.applyOn:(Lorg/assertj/core/api/filter/Filters;)Lorg/assertj/core/api/filter/Filters;
      21: pop
      22: new           #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      25: dup
      26: new           #623                // class java/util/concurrent/atomic/AtomicReferenceArray
      29: dup
      30: aload_3
      31: invokevirtual #621                // Method org/assertj/core/api/filter/Filters.get:()Ljava/lang/Iterable;
      34: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      37: invokespecial #624                // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":([Ljava/lang/Object;)V
      40: invokespecial #626                // Method "<init>":(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
      43: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> filteredOn(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_0
       1: getfield      #68                 // Field array:[Ljava/lang/Object;
       4: invokestatic  #614                // Method org/assertj/core/api/filter/Filters.filter:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/Filters;
       7: aload_1
       8: invokevirtual #658                // Method org/assertj/core/api/filter/Filters.being:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/filter/Filters;
      11: invokevirtual #621                // Method org/assertj/core/api/filter/Filters.get:()Ljava/lang/Iterable;
      14: astore_2
      15: new           #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      18: dup
      19: new           #623                // class java/util/concurrent/atomic/AtomicReferenceArray
      22: dup
      23: aload_2
      24: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
      27: invokespecial #624                // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":([Ljava/lang/Object;)V
      30: invokespecial #626                // Method "<init>":(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
      33: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> allMatch(java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokestatic  #663                // Method org/assertj/core/util/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      15: aload_1
      16: getstatic     #669                // Field org/assertj/core/presentation/PredicateDescription.GIVEN:Lorg/assertj/core/presentation/PredicateDescription;
      19: invokevirtual #673                // Method org/assertj/core/internal/Iterables.assertAllMatch:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Iterable;Ljava/util/function/Predicate;Lorg/assertj/core/presentation/PredicateDescription;)V
      22: aload_0
      23: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      29: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> allMatch(java.util.function.Predicate<? super T>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokestatic  #663                // Method org/assertj/core/util/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      15: aload_1
      16: new           #665                // class org/assertj/core/presentation/PredicateDescription
      19: dup
      20: aload_2
      21: invokespecial #680                // Method org/assertj/core/presentation/PredicateDescription."<init>":(Ljava/lang/String;)V
      24: invokevirtual #673                // Method org/assertj/core/internal/Iterables.assertAllMatch:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Iterable;Ljava/util/function/Predicate;Lorg/assertj/core/presentation/PredicateDescription;)V
      27: aload_0
      28: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      31: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      34: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> allSatisfy(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokestatic  #663                // Method org/assertj/core/util/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      15: aload_1
      16: invokevirtual #687                // Method org/assertj/core/internal/Iterables.assertAllSatisfy:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Iterable;Ljava/util/function/Consumer;)V
      19: aload_0
      20: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      26: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> anyMatch(java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokestatic  #663                // Method org/assertj/core/util/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      15: aload_1
      16: getstatic     #669                // Field org/assertj/core/presentation/PredicateDescription.GIVEN:Lorg/assertj/core/presentation/PredicateDescription;
      19: invokevirtual #694                // Method org/assertj/core/internal/Iterables.assertAnyMatch:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Iterable;Ljava/util/function/Predicate;Lorg/assertj/core/presentation/PredicateDescription;)V
      22: aload_0
      23: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      29: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> anySatisfy(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokestatic  #663                // Method org/assertj/core/util/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      15: aload_1
      16: invokevirtual #698                // Method org/assertj/core/internal/Iterables.assertAnySatisfy:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Iterable;Ljava/util/function/Consumer;)V
      19: aload_0
      20: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      26: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsAnyOf(T...);
    Code:
       0: aload_0
       1: getfield      #37                 // Field arrays:Lorg/assertj/core/internal/ObjectArrays;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #702                // Method org/assertj/core/internal/ObjectArrays.assertContainsAnyOf:(Lorg/assertj/core/api/AssertionInfo;[Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      20: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      23: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> containsAnyElementsOf(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method org/assertj/core/util/IterableUtil.toArray:(Ljava/lang/Iterable;)[Ljava/lang/Object;
       5: invokevirtual #705                // Method containsAnyOf:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       8: areturn

  public org.assertj.core.api.AtomicReferenceArrayAssert<T> noneMatch(java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field iterables:Lorg/assertj/core/internal/Iterables;
       4: aload_0
       5: getfield      #99                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #68                 // Field array:[Ljava/lang/Object;
      12: invokestatic  #663                // Method org/assertj/core/util/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      15: aload_1
      16: getstatic     #669                // Field org/assertj/core/presentation/PredicateDescription.GIVEN:Lorg/assertj/core/presentation/PredicateDescription;
      19: invokevirtual #710                // Method org/assertj/core/internal/Iterables.assertNoneMatch:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Iterable;Ljava/util/function/Predicate;Lorg/assertj/core/presentation/PredicateDescription;)V
      22: aload_0
      23: getfield      #112                // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AtomicReferenceArrayAssert
      29: areturn

  public org.assertj.core.api.AbstractAssert inBinary();
    Code:
       0: aload_0
       1: invokevirtual #712                // Method inBinary:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.AbstractAssert inHexadecimal();
    Code:
       0: aload_0
       1: invokevirtual #714                // Method inHexadecimal:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.AbstractAssert as(org.assertj.core.description.Description);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #716                // Method as:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.AbstractAssert as(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #718                // Method as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public java.lang.Object as(org.assertj.core.description.Description);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #716                // Method as:(Lorg/assertj/core/description/Description;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public java.lang.Object as(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #718                // Method as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.IndexedObjectEnumerableAssert doesNotContain(java.lang.Object, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #723                // Method doesNotContain:(Ljava/lang/Object;Lorg/assertj/core/data/Index;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.IndexedObjectEnumerableAssert contains(java.lang.Object, org.assertj.core.data.Index);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #725                // Method contains:(Ljava/lang/Object;Lorg/assertj/core/data/Index;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert noneMatch(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #728                // Method noneMatch:(Ljava/util/function/Predicate;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsAnyElementsOf(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #731                // Method containsAnyElementsOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsAnyOf(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #705                // Method containsAnyOf:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert anySatisfy(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #735                // Method anySatisfy:(Ljava/util/function/Consumer;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert anyMatch(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #737                // Method anyMatch:(Ljava/util/function/Predicate;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert allSatisfy(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #739                // Method allSatisfy:(Ljava/util/function/Consumer;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert allMatch(java.util.function.Predicate, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #742                // Method allMatch:(Ljava/util/function/Predicate;Ljava/lang/String;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert allMatch(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #744                // Method allMatch:(Ljava/util/function/Predicate;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert isSubsetOf(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #746                // Method isSubsetOf:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert isSubsetOf(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #748                // Method isSubsetOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContainAnyElementsOf(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #750                // Method doesNotContainAnyElementsOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert hasSameElementsAs(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #752                // Method hasSameElementsAs:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsOnlyElementsOf(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #166                // Method containsOnlyElementsOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsExactlyElementsOf(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #754                // Method containsExactlyElementsOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotHaveAnyElementsOfTypes(java.lang.Class[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #757                // Method doesNotHaveAnyElementsOfTypes:([Ljava/lang/Class;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert hasOnlyElementsOfType(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #760                // Method hasOnlyElementsOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert hasAtLeastOneElementOfType(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #762                // Method hasAtLeastOneElementOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert hasOnlyElementsOfTypes(java.lang.Class[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #764                // Method hasOnlyElementsOfTypes:([Ljava/lang/Class;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsAll(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #766                // Method containsAll:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert haveExactly(int, org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #769                // Method haveExactly:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert haveAtMost(int, org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #771                // Method haveAtMost:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert haveAtLeast(int, org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #314                // Method haveAtLeast:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert haveAtLeastOne(org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #774                // Method haveAtLeastOne:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert areExactly(int, org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #776                // Method areExactly:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert areAtMost(int, org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #778                // Method areAtMost:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert areAtLeastOne(org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #780                // Method areAtLeastOne:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert areAtLeast(int, org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #302                // Method areAtLeast:(ILorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doNotHave(org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #782                // Method doNotHave:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert have(org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #784                // Method have:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert areNot(org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #786                // Method areNot:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert are(org.assertj.core.api.Condition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #788                // Method are:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContainNull();
    Code:
       0: aload_0
       1: invokevirtual #791                // Method doesNotContainNull:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsNull();
    Code:
       0: aload_0
       1: invokevirtual #793                // Method containsNull:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.ObjectEnumerableAssert endsWith(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #795                // Method endsWith:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert endsWith(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #798                // Method endsWith:(Ljava/lang/Object;[Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       6: areturn

  public org.assertj.core.api.ObjectEnumerableAssert startsWith(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #800                // Method startsWith:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotHaveDuplicates();
    Code:
       0: aload_0
       1: invokevirtual #802                // Method doesNotHaveDuplicates:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContain(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #804                // Method doesNotContain:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContainSubsequence(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #806                // Method doesNotContainSubsequence:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContainSubsequence(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #808                // Method doesNotContainSubsequence:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsSubsequence(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #810                // Method containsSubsequence:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsSubsequence(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #812                // Method containsSubsequence:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContainSequence(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #814                // Method doesNotContainSequence:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert doesNotContainSequence(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #816                // Method doesNotContainSequence:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsSequence(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #818                // Method containsSequence:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsSequence(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #820                // Method containsSequence:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsExactlyInAnyOrderElementsOf(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #822                // Method containsExactlyInAnyOrderElementsOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsExactlyInAnyOrder(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #178                // Method containsExactlyInAnyOrder:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsExactly(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #181                // Method containsExactly:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsOnlyOnce(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #824                // Method containsOnlyOnce:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsOnlyNulls();
    Code:
       0: aload_0
       1: invokevirtual #826                // Method containsOnlyNulls:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.ObjectEnumerableAssert containsOnly(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #157                // Method containsOnly:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ObjectEnumerableAssert contains(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #828                // Method contains:([Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert usingDefaultElementComparator();
    Code:
       0: aload_0
       1: invokevirtual #831                // Method usingDefaultElementComparator:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.EnumerableAssert usingElementComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #388                // Method usingElementComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSameSizeAs(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #835                // Method hasSameSizeAs:(Ljava/lang/Object;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSameSizeAs(java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #838                // Method hasSameSizeAs:(Ljava/lang/Iterable;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert hasSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #841                // Method hasSize:(I)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.EnumerableAssert isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #843                // Method isNotEmpty:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public org.assertj.core.api.ArraySortedAssert isSortedAccordingTo(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #846                // Method isSortedAccordingTo:(Ljava/util/Comparator;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       5: areturn

  public org.assertj.core.api.ArraySortedAssert isSorted();
    Code:
       0: aload_0
       1: invokevirtual #849                // Method isSorted:()Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn
}
