Compiled from "AssertionsForInterfaceTypes.java"
public class org.assertj.core.api.AssertionsForInterfaceTypes extends org.assertj.core.api.AssertionsForClassTypes {
  public static <T> T assertThat(org.assertj.core.api.AssertProvider<T>);
    Code:
       0: aload_0
       1: invokeinterface #12,  1           // InterfaceMethod org/assertj/core/api/AssertProvider.assertThat:()Ljava/lang/Object;
       6: areturn

  protected org.assertj.core.api.AssertionsForInterfaceTypes();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/assertj/core/api/AssertionsForClassTypes."<init>":()V
       4: return

  public static org.assertj.core.api.AbstractCharSequenceAssert<?, ? extends java.lang.CharSequence> assertThat(java.lang.CharSequence);
    Code:
       0: new           #25                 // class org/assertj/core/api/CharSequenceAssert
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method org/assertj/core/api/CharSequenceAssert."<init>":(Ljava/lang/CharSequence;)V
       8: areturn

  public static <ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT> assertThat(java.lang.Iterable<? extends ELEMENT>);
    Code:
       0: new           #33                 // class org/assertj/core/api/IterableAssert
       3: dup
       4: aload_0
       5: invokespecial #36                 // Method org/assertj/core/api/IterableAssert."<init>":(Ljava/lang/Iterable;)V
       8: areturn

  public static <ELEMENT> org.assertj.core.api.IterableAssert<ELEMENT> assertThat(java.util.Iterator<? extends ELEMENT>);
    Code:
       0: new           #33                 // class org/assertj/core/api/IterableAssert
       3: dup
       4: aload_0
       5: invokespecial #42                 // Method org/assertj/core/api/IterableAssert."<init>":(Ljava/util/Iterator;)V
       8: areturn

  public static <ELEMENT> org.assertj.core.api.ListAssert<ELEMENT> assertThat(java.util.List<? extends ELEMENT>);
    Code:
       0: new           #47                 // class org/assertj/core/api/ListAssert
       3: dup
       4: aload_0
       5: invokespecial #50                 // Method org/assertj/core/api/ListAssert."<init>":(Ljava/util/List;)V
       8: areturn

  public static <ELEMENT> org.assertj.core.api.ListAssert<ELEMENT> assertThat(java.util.stream.Stream<? extends ELEMENT>);
    Code:
       0: new           #47                 // class org/assertj/core/api/ListAssert
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method org/assertj/core/api/ListAssert."<init>":(Ljava/util/stream/Stream;)V
       8: areturn

  public static org.assertj.core.api.ListAssert<java.lang.Double> assertThat(java.util.stream.DoubleStream);
    Code:
       0: new           #47                 // class org/assertj/core/api/ListAssert
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method org/assertj/core/api/ListAssert."<init>":(Ljava/util/stream/DoubleStream;)V
       8: areturn

  public static org.assertj.core.api.ListAssert<java.lang.Long> assertThat(java.util.stream.LongStream);
    Code:
       0: new           #47                 // class org/assertj/core/api/ListAssert
       3: dup
       4: aload_0
       5: invokespecial #67                 // Method org/assertj/core/api/ListAssert."<init>":(Ljava/util/stream/LongStream;)V
       8: areturn

  public static org.assertj.core.api.ListAssert<java.lang.Integer> assertThat(java.util.stream.IntStream);
    Code:
       0: new           #47                 // class org/assertj/core/api/ListAssert
       3: dup
       4: aload_0
       5: invokespecial #72                 // Method org/assertj/core/api/ListAssert."<init>":(Ljava/util/stream/IntStream;)V
       8: areturn

  public static <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.lang.Iterable<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: new           #76                 // class org/assertj/core/api/FactoryBasedNavigableIterableAssert
       3: dup
       4: aload_0
       5: ldc           #76                 // class org/assertj/core/api/FactoryBasedNavigableIterableAssert
       7: aload_1
       8: invokespecial #79                 // Method org/assertj/core/api/FactoryBasedNavigableIterableAssert."<init>":(Ljava/lang/Iterable;Ljava/lang/Class;Lorg/assertj/core/api/AssertFactory;)V
      11: areturn

  public static <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(ACTUAL, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: new           #85                 // class org/assertj/core/api/ClassBasedNavigableIterableAssert
       3: dup
       4: aload_0
       5: ldc           #85                 // class org/assertj/core/api/ClassBasedNavigableIterableAssert
       7: aload_1
       8: invokespecial #88                 // Method org/assertj/core/api/ClassBasedNavigableIterableAssert."<init>":(Ljava/lang/Iterable;Ljava/lang/Class;Ljava/lang/Class;)V
      11: areturn

  public static <ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.util.List<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: new           #95                 // class org/assertj/core/api/FactoryBasedNavigableListAssert
       3: dup
       4: aload_0
       5: ldc           #95                 // class org/assertj/core/api/FactoryBasedNavigableListAssert
       7: aload_1
       8: invokespecial #98                 // Method org/assertj/core/api/FactoryBasedNavigableListAssert."<init>":(Ljava/util/List;Ljava/lang/Class;Lorg/assertj/core/api/AssertFactory;)V
      11: areturn

  public static <ELEMENT, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.util.List<? extends ELEMENT>, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: new           #101                // class org/assertj/core/api/ClassBasedNavigableListAssert
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #104                // Method org/assertj/core/api/ClassBasedNavigableListAssert."<init>":(Ljava/util/List;Ljava/lang/Class;)V
       9: areturn

  public static org.assertj.core.api.AbstractPathAssert<?> assertThat(java.nio.file.Path);
    Code:
       0: new           #107                // class org/assertj/core/api/PathAssert
       3: dup
       4: aload_0
       5: invokespecial #110                // Method org/assertj/core/api/PathAssert."<init>":(Ljava/nio/file/Path;)V
       8: areturn

  public static <K, V> org.assertj.core.api.MapAssert<K, V> assertThat(java.util.Map<K, V>);
    Code:
       0: new           #114                // class org/assertj/core/api/MapAssert
       3: dup
       4: aload_0
       5: invokespecial #117                // Method org/assertj/core/api/MapAssert."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <T extends java.lang.Comparable<? super T>> org.assertj.core.api.AbstractComparableAssert<?, T> assertThat(T);
    Code:
       0: new           #122                // class org/assertj/core/api/GenericComparableAssert
       3: dup
       4: aload_0
       5: invokespecial #125                // Method org/assertj/core/api/GenericComparableAssert."<init>":(Ljava/lang/Comparable;)V
       8: areturn

  public static <T extends org.assertj.core.api.AssertDelegateTarget> T assertThat(T);
    Code:
       0: aload_0
       1: areturn

  public static <T> org.assertj.core.api.PredicateAssert<T> assertThat(java.util.function.Predicate<T>);
    Code:
       0: new           #133                // class org/assertj/core/api/PredicateAssert
       3: dup
       4: aload_0
       5: invokespecial #136                // Method org/assertj/core/api/PredicateAssert."<init>":(Ljava/util/function/Predicate;)V
       8: areturn

  public static org.assertj.core.api.IntPredicateAssert assertThat(java.util.function.IntPredicate);
    Code:
       0: new           #141                // class org/assertj/core/api/IntPredicateAssert
       3: dup
       4: aload_0
       5: invokespecial #144                // Method org/assertj/core/api/IntPredicateAssert."<init>":(Ljava/util/function/IntPredicate;)V
       8: areturn

  public static org.assertj.core.api.LongPredicateAssert assertThat(java.util.function.LongPredicate);
    Code:
       0: new           #148                // class org/assertj/core/api/LongPredicateAssert
       3: dup
       4: aload_0
       5: invokespecial #151                // Method org/assertj/core/api/LongPredicateAssert."<init>":(Ljava/util/function/LongPredicate;)V
       8: areturn

  public static org.assertj.core.api.DoublePredicateAssert assertThat(java.util.function.DoublePredicate);
    Code:
       0: new           #155                // class org/assertj/core/api/DoublePredicateAssert
       3: dup
       4: aload_0
       5: invokespecial #158                // Method org/assertj/core/api/DoublePredicateAssert."<init>":(Ljava/util/function/DoublePredicate;)V
       8: areturn

  public static <RESULT> org.assertj.core.api.CompletableFutureAssert<RESULT> assertThat(java.util.concurrent.CompletionStage<RESULT>);
    Code:
       0: new           #162                // class org/assertj/core/api/CompletableFutureAssert
       3: dup
       4: aload_0
       5: invokespecial #165                // Method org/assertj/core/api/CompletableFutureAssert."<init>":(Ljava/util/concurrent/CompletionStage;)V
       8: areturn
}
