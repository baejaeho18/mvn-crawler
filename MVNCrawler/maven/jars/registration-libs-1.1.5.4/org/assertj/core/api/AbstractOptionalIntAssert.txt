Compiled from "AbstractOptionalIntAssert.java"
public abstract class org.assertj.core.api.AbstractOptionalIntAssert<SELF extends org.assertj.core.api.AbstractOptionalIntAssert<SELF>> extends org.assertj.core.api.AbstractAssert<SELF, java.util.OptionalInt> {
  org.assertj.core.internal.Integers integers;

  protected org.assertj.core.api.AbstractOptionalIntAssert(java.util.OptionalInt, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #14                 // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #20                 // Method org/assertj/core/internal/Integers.instance:()Lorg/assertj/core/internal/Integers;
      10: putfield      #22                 // Field integers:Lorg/assertj/core/internal/Integers;
      13: return

  public SELF isPresent();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #39                 // Field actual:Ljava/lang/Object;
       9: checkcast     #41                 // class java/util/OptionalInt
      12: invokevirtual #44                 // Method java/util/OptionalInt.isPresent:()Z
      15: ifne          29
      18: aload_0
      19: aload_0
      20: getfield      #39                 // Field actual:Ljava/lang/Object;
      23: invokestatic  #50                 // Method org/assertj/core/error/OptionalShouldBePresent.shouldBePresent:(Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldBePresent;
      26: invokevirtual #54                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      29: aload_0
      30: getfield      #58                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      33: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalIntAssert
      36: areturn

  public SELF isNotPresent();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method isEmpty:()Lorg/assertj/core/api/AbstractOptionalIntAssert;
       4: areturn

  public SELF isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #39                 // Field actual:Ljava/lang/Object;
       9: checkcast     #41                 // class java/util/OptionalInt
      12: invokevirtual #44                 // Method java/util/OptionalInt.isPresent:()Z
      15: ifeq          32
      18: aload_0
      19: aload_0
      20: getfield      #39                 // Field actual:Ljava/lang/Object;
      23: checkcast     #41                 // class java/util/OptionalInt
      26: invokestatic  #68                 // Method org/assertj/core/error/OptionalShouldBeEmpty.shouldBeEmpty:(Ljava/util/OptionalInt;)Lorg/assertj/core/error/OptionalShouldBeEmpty;
      29: invokevirtual #54                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      32: aload_0
      33: getfield      #58                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      36: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalIntAssert
      39: areturn

  public SELF isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method isPresent:()Lorg/assertj/core/api/AbstractOptionalIntAssert;
       4: areturn

  public SELF hasValue(int);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method isNotNull:()Lorg/assertj/core/api/AbstractAssert;
       4: pop
       5: aload_0
       6: getfield      #39                 // Field actual:Ljava/lang/Object;
       9: checkcast     #41                 // class java/util/OptionalInt
      12: invokevirtual #44                 // Method java/util/OptionalInt.isPresent:()Z
      15: ifne          29
      18: aload_0
      19: iload_1
      20: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokestatic  #85                 // Method org/assertj/core/error/OptionalShouldContain.shouldContain:(Ljava/lang/Object;)Lorg/assertj/core/error/OptionalShouldContain;
      26: invokevirtual #54                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      29: iload_1
      30: aload_0
      31: getfield      #39                 // Field actual:Ljava/lang/Object;
      34: checkcast     #41                 // class java/util/OptionalInt
      37: invokevirtual #89                 // Method java/util/OptionalInt.getAsInt:()I
      40: if_icmpeq     58
      43: aload_0
      44: aload_0
      45: getfield      #39                 // Field actual:Ljava/lang/Object;
      48: checkcast     #41                 // class java/util/OptionalInt
      51: iload_1
      52: invokestatic  #92                 // Method org/assertj/core/error/OptionalShouldContain.shouldContain:(Ljava/util/OptionalInt;I)Lorg/assertj/core/error/OptionalShouldContain;
      55: invokevirtual #54                 // Method throwAssertionError:(Lorg/assertj/core/error/ErrorMessageFactory;)V
      58: aload_0
      59: getfield      #58                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      62: checkcast     #2                  // class org/assertj/core/api/AbstractOptionalIntAssert
      65: areturn
}
