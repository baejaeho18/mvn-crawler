Compiled from "AbstractOffsetTimeAssert.java"
public abstract class org.assertj.core.api.AbstractOffsetTimeAssert<SELF extends org.assertj.core.api.AbstractOffsetTimeAssert<SELF>> extends org.assertj.core.api.AbstractTemporalAssert<SELF, java.time.OffsetTime> {
  public static final java.lang.String NULL_OFFSET_TIME_PARAMETER_MESSAGE;

  protected org.assertj.core.api.AbstractOffsetTimeAssert(java.time.OffsetTime, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method org/assertj/core/api/AbstractTemporalAssert."<init>":(Ljava/time/temporal/Temporal;Ljava/lang/Class;)V
       6: return

  public SELF isBefore(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokevirtual #51                 // Method java/time/OffsetTime.isBefore:(Ljava/time/OffsetTime;)Z
      29: ifne          51
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: aload_1
      44: invokestatic  #62                 // Method org/assertj/core/error/ShouldBeBefore.shouldBeBefore:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      47: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      50: athrow
      51: aload_0
      52: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      55: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      58: areturn

  public SELF isBefore(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method assertOffsetTimeAsStringParameterIsNotNull:(Ljava/lang/String;)V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      10: invokevirtual #82                 // Method isBefore:(Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
      13: areturn

  public SELF isBeforeOrEqualTo(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokevirtual #87                 // Method java/time/OffsetTime.isAfter:(Ljava/time/OffsetTime;)Z
      29: ifeq          51
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: aload_1
      44: invokestatic  #92                 // Method org/assertj/core/error/ShouldBeBeforeOrEqualsTo.shouldBeBeforeOrEqualsTo:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      47: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      50: athrow
      51: aload_0
      52: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      55: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      58: areturn

  public SELF isBeforeOrEqualTo(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method assertOffsetTimeAsStringParameterIsNotNull:(Ljava/lang/String;)V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      10: invokevirtual #94                 // Method isBeforeOrEqualTo:(Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
      13: areturn

  public SELF isAfterOrEqualTo(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokevirtual #51                 // Method java/time/OffsetTime.isBefore:(Ljava/time/OffsetTime;)Z
      29: ifeq          51
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: aload_1
      44: invokestatic  #100                // Method org/assertj/core/error/ShouldBeAfterOrEqualsTo.shouldBeAfterOrEqualsTo:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      47: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      50: athrow
      51: aload_0
      52: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      55: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      58: areturn

  public SELF isAfterOrEqualTo(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method assertOffsetTimeAsStringParameterIsNotNull:(Ljava/lang/String;)V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      10: invokevirtual #102                // Method isAfterOrEqualTo:(Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
      13: areturn

  public SELF isAfter(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokevirtual #87                 // Method java/time/OffsetTime.isAfter:(Ljava/time/OffsetTime;)Z
      29: ifne          51
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: aload_1
      44: invokestatic  #107                // Method org/assertj/core/error/ShouldBeAfter.shouldBeAfter:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      47: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      50: athrow
      51: aload_0
      52: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      55: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      58: areturn

  public SELF isAfter(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method assertOffsetTimeAsStringParameterIsNotNull:(Ljava/lang/String;)V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      10: invokevirtual #109                // Method isAfter:(Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
      13: areturn

  public SELF isEqualTo(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method assertOffsetTimeAsStringParameterIsNotNull:(Ljava/lang/String;)V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      10: invokevirtual #113                // Method isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      13: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      16: areturn

  public SELF isNotEqualTo(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #76                 // Method assertOffsetTimeAsStringParameterIsNotNull:(Ljava/lang/String;)V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      10: invokevirtual #116                // Method isNotEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      13: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      16: areturn

  public SELF isIn(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #122                // Method checkIsNotNullAndNotEmpty:([Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #126                // Method convertToOffsetTimeArray:([Ljava/lang/String;)[Ljava/lang/Object;
      10: invokevirtual #129                // Method isIn:([Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      13: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      16: areturn

  public SELF isNotIn(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #122                // Method checkIsNotNullAndNotEmpty:([Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #126                // Method convertToOffsetTimeArray:([Ljava/lang/String;)[Ljava/lang/Object;
      10: invokevirtual #134                // Method isNotIn:([Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      13: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      16: areturn

  private static java.lang.Object[] convertToOffsetTimeArray(java.lang.String...);
    Code:
       0: aload_0
       1: arraylength
       2: anewarray     #48                 // class java/time/OffsetTime
       5: astore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: arraylength
      11: if_icmpge     29
      14: aload_1
      15: iload_2
      16: aload_0
      17: iload_2
      18: aaload
      19: invokestatic  #139                // Method java/time/OffsetTime.parse:(Ljava/lang/CharSequence;)Ljava/time/OffsetTime;
      22: aastore
      23: iinc          2, 1
      26: goto          8
      29: aload_1
      30: areturn

  private void checkIsNotNullAndNotEmpty(java.lang.Object[]);
    Code:
       0: aload_1
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #144                // String The given OffsetTime array should not be null
      11: iconst_0
      12: anewarray     #146                // class java/lang/Object
      15: invokestatic  #152                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: aload_1
      19: arraylength
      20: ifle          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ldc           #154                // String The given OffsetTime array should not be empty
      30: iconst_0
      31: anewarray     #146                // class java/lang/Object
      34: invokestatic  #152                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      37: return

  private static void assertOffsetTimeAsStringParameterIsNotNull(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #158                // String The String representing the OffsetTime to compare actual with should not be null
      11: iconst_0
      12: anewarray     #146                // class java/lang/Object
      15: invokestatic  #152                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: return

  private static void assertOffsetTimeParameterIsNotNull(java.time.OffsetTime);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #10                 // String The OffsetTime to compare actual with should not be null
      11: iconst_0
      12: anewarray     #146                // class java/lang/Object
      15: invokestatic  #152                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: return

  public SELF isEqualToIgnoringNanos(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokestatic  #164                // Method areEqualIgnoringNanos:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      29: ifne          54
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: checkcast     #48                 // class java/time/OffsetTime
      46: aload_1
      47: invokestatic  #170                // Method org/assertj/core/error/ShouldBeEqualIgnoringNanos.shouldBeEqualIgnoringNanos:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Lorg/assertj/core/error/ErrorMessageFactory;
      50: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      53: athrow
      54: aload_0
      55: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      58: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      61: areturn

  public SELF isEqualToIgnoringSeconds(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokestatic  #174                // Method areEqualIgnoringSeconds:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      29: ifne          54
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: checkcast     #48                 // class java/time/OffsetTime
      46: aload_1
      47: invokestatic  #179                // Method org/assertj/core/error/ShouldBeEqualIgnoringSeconds.shouldBeEqualIgnoringSeconds:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Lorg/assertj/core/error/ErrorMessageFactory;
      50: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      53: athrow
      54: aload_0
      55: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      58: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      61: areturn

  public SELF isEqualToIgnoringTimezone(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokestatic  #183                // Method areEqualIgnoringTimezone:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      29: ifne          54
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: checkcast     #48                 // class java/time/OffsetTime
      46: aload_1
      47: invokestatic  #188                // Method org/assertj/core/error/ShouldBeEqualIgnoringTimezone.shouldBeEqualIgnoringTimezone:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Lorg/assertj/core/error/ErrorMessageFactory;
      50: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      53: athrow
      54: aload_0
      55: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      58: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      61: areturn

  public SELF hasSameHourAs(java.time.OffsetTime);
    Code:
       0: invokestatic  #31                 // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       7: aload_0
       8: getfield      #38                 // Field actual:Ljava/lang/Object;
      11: invokevirtual #42                 // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
      14: aload_1
      15: invokestatic  #46                 // Method assertOffsetTimeParameterIsNotNull:(Ljava/time/OffsetTime;)V
      18: aload_0
      19: getfield      #38                 // Field actual:Ljava/lang/Object;
      22: checkcast     #48                 // class java/time/OffsetTime
      25: aload_1
      26: invokestatic  #192                // Method haveSameHourField:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      29: ifne          54
      32: invokestatic  #56                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      35: aload_0
      36: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
      39: aload_0
      40: getfield      #38                 // Field actual:Ljava/lang/Object;
      43: checkcast     #194                // class java/time/temporal/Temporal
      46: aload_1
      47: invokestatic  #200                // Method org/assertj/core/error/ShouldHaveSameHourAs.shouldHaveSameHourAs:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Lorg/assertj/core/error/ErrorMessageFactory;
      50: invokevirtual #66                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      53: athrow
      54: aload_0
      55: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      58: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      61: areturn

  public SELF isBetween(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: getfield      #206                // Field comparables:Lorg/assertj/core/internal/Comparables;
       4: aload_0
       5: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #38                 // Field actual:Ljava/lang/Object;
      12: checkcast     #208                // class java/lang/Comparable
      15: aload_1
      16: aload_2
      17: iconst_1
      18: iconst_1
      19: invokevirtual #214                // Method org/assertj/core/internal/Comparables.assertIsBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;ZZ)V
      22: aload_0
      23: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      29: areturn

  public SELF isBetween(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
       6: aload_0
       7: aload_2
       8: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      11: invokevirtual #219                // Method isBetween:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
      14: areturn

  public SELF isStrictlyBetween(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: getfield      #206                // Field comparables:Lorg/assertj/core/internal/Comparables;
       4: aload_0
       5: getfield      #35                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #38                 // Field actual:Ljava/lang/Object;
      12: checkcast     #208                // class java/lang/Comparable
      15: aload_1
      16: aload_2
      17: iconst_0
      18: iconst_0
      19: invokevirtual #214                // Method org/assertj/core/internal/Comparables.assertIsBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;ZZ)V
      22: aload_0
      23: getfield      #70                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      26: checkcast     #2                  // class org/assertj/core/api/AbstractOffsetTimeAssert
      29: areturn

  public SELF isStrictlyBetween(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
       6: aload_0
       7: aload_2
       8: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
      11: invokevirtual #222                // Method isStrictlyBetween:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
      14: areturn

  protected java.time.OffsetTime parse(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #139                // Method java/time/OffsetTime.parse:(Ljava/lang/CharSequence;)Ljava/time/OffsetTime;
       4: areturn

  private static boolean areEqualIgnoringNanos(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // Method areEqualIgnoringSeconds:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokestatic  #225                // Method haveSameSecond:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean areEqualIgnoringSeconds(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // Method haveSameHourField:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokestatic  #228                // Method haveSameMinute:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean areEqualIgnoringTimezone(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #164                // Method areEqualIgnoringNanos:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokestatic  #231                // Method haveSameNano:(Ljava/time/OffsetTime;Ljava/time/OffsetTime;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean haveSameNano(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: invokevirtual #235                // Method java/time/OffsetTime.getNano:()I
       4: aload_1
       5: invokevirtual #235                // Method java/time/OffsetTime.getNano:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static boolean haveSameSecond(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: invokevirtual #238                // Method java/time/OffsetTime.getSecond:()I
       4: aload_1
       5: invokevirtual #238                // Method java/time/OffsetTime.getSecond:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static boolean haveSameMinute(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: invokevirtual #241                // Method java/time/OffsetTime.getMinute:()I
       4: aload_1
       5: invokevirtual #241                // Method java/time/OffsetTime.getMinute:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static boolean haveSameHourField(java.time.OffsetTime, java.time.OffsetTime);
    Code:
       0: aload_0
       1: invokevirtual #244                // Method java/time/OffsetTime.getHour:()I
       4: aload_1
       5: invokevirtual #244                // Method java/time/OffsetTime.getHour:()I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected java.time.temporal.Temporal parse(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method parse:(Ljava/lang/String;)Ljava/time/OffsetTime;
       5: areturn
}
