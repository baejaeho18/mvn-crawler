Compiled from "AbstractBooleanAssert.java"
public abstract class org.assertj.core.api.AbstractBooleanAssert<SELF extends org.assertj.core.api.AbstractBooleanAssert<SELF>> extends org.assertj.core.api.AbstractAssert<SELF, java.lang.Boolean> {
  org.assertj.core.internal.Booleans booleans;

  public org.assertj.core.api.AbstractBooleanAssert(java.lang.Boolean, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #14                 // Method org/assertj/core/api/AbstractAssert."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       6: aload_0
       7: invokestatic  #20                 // Method org/assertj/core/internal/Booleans.instance:()Lorg/assertj/core/internal/Booleans;
      10: putfield      #22                 // Field booleans:Lorg/assertj/core/internal/Booleans;
      13: return

  public SELF isTrue();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #36                 // Method isEqualTo:(Z)Lorg/assertj/core/api/AbstractBooleanAssert;
       5: areturn

  public SELF isFalse();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #36                 // Method isEqualTo:(Z)Lorg/assertj/core/api/AbstractBooleanAssert;
       5: areturn

  public SELF isEqualTo(boolean);
    Code:
       0: aload_0
       1: getfield      #22                 // Field booleans:Lorg/assertj/core/internal/Booleans;
       4: aload_0
       5: getfield      #41                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #44                 // Field actual:Ljava/lang/Object;
      12: checkcast     #46                 // class java/lang/Boolean
      15: iload_1
      16: invokevirtual #50                 // Method org/assertj/core/internal/Booleans.assertEqual:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Boolean;Z)V
      19: aload_0
      20: getfield      #54                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractBooleanAssert
      26: areturn

  public SELF isNotEqualTo(boolean);
    Code:
       0: aload_0
       1: getfield      #22                 // Field booleans:Lorg/assertj/core/internal/Booleans;
       4: aload_0
       5: getfield      #41                 // Field info:Lorg/assertj/core/api/WritableAssertionInfo;
       8: aload_0
       9: getfield      #44                 // Field actual:Ljava/lang/Object;
      12: checkcast     #46                 // class java/lang/Boolean
      15: iload_1
      16: invokevirtual #60                 // Method org/assertj/core/internal/Booleans.assertNotEqual:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Boolean;Z)V
      19: aload_0
      20: getfield      #54                 // Field myself:Lorg/assertj/core/api/AbstractAssert;
      23: checkcast     #2                  // class org/assertj/core/api/AbstractBooleanAssert
      26: areturn

  public final SELF usingComparator(java.util.Comparator<? super java.lang.Boolean>);
    Code:
       0: new           #66                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #68                 // String custom Comparator is not supported for Boolean comparison
       6: invokespecial #71                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.assertj.core.api.AbstractAssert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractBooleanAssert;
       5: areturn

  public org.assertj.core.api.Assert usingComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method usingComparator:(Ljava/util/Comparator;)Lorg/assertj/core/api/AbstractBooleanAssert;
       5: areturn
}
