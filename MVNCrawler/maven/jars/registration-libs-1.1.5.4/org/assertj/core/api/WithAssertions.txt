Compiled from "WithAssertions.java"
public interface org.assertj.core.api.WithAssertions {
  public default org.assertj.core.data.Offset<java.lang.Float> offset(java.lang.Float);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method org/assertj/core/api/Assertions.offset:(Ljava/lang/Float;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Double> offset(java.lang.Double);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method org/assertj/core/api/Assertions.offset:(Ljava/lang/Double;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default <K, V> org.assertj.core.data.MapEntry<K, V> entry(K, V);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #28                 // Method org/assertj/core/api/Assertions.entry:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/data/MapEntry;
       5: areturn

  public default void fail(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method org/assertj/core/api/Assertions.fail:(Ljava/lang/String;)V
       4: return

  public default void fail(java.lang.String, java.lang.Object...);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #41                 // Method org/assertj/core/api/Assertions.fail:(Ljava/lang/String;[Ljava/lang/Object;)V
       5: return

  public default void fail(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #46                 // Method org/assertj/core/api/Assertions.fail:(Ljava/lang/String;Ljava/lang/Throwable;)V
       5: return

  public default <T> org.assertj.core.condition.Not<T> not(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #52                 // Method org/assertj/core/api/Assertions.not:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/condition/Not;
       4: areturn

  public default <T> org.assertj.core.api.Condition<T> allOf(java.lang.Iterable<? extends org.assertj.core.api.Condition<? super T>>);
    Code:
       0: aload_1
       1: invokestatic  #59                 // Method org/assertj/core/api/Assertions.allOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/Condition;
       4: areturn

  public default <T> org.assertj.core.api.Condition<T> allOf(org.assertj.core.api.Condition<? super T>...);
    Code:
       0: aload_1
       1: invokestatic  #65                 // Method org/assertj/core/api/Assertions.allOf:([Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/Condition;
       4: areturn

  public default <T> org.assertj.core.api.ObjectArrayAssert<T> assertThat(T[]);
    Code:
       0: aload_1
       1: invokestatic  #72                 // Method org/assertj/core/api/Assertions.assertThat:([Ljava/lang/Object;)Lorg/assertj/core/api/ObjectArrayAssert;
       4: areturn

  public default <T extends org.assertj.core.api.AssertDelegateTarget> T assertThat(T);
    Code:
       0: aload_1
       1: invokestatic  #77                 // Method org/assertj/core/api/Assertions.assertThat:(Lorg/assertj/core/api/AssertDelegateTarget;)Lorg/assertj/core/api/AssertDelegateTarget;
       4: areturn

  public default <K, V> org.assertj.core.api.MapAssert<K, V> assertThat(java.util.Map<K, V>);
    Code:
       0: aload_1
       1: invokestatic  #83                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/Map;)Lorg/assertj/core/api/MapAssert;
       4: areturn

  public default org.assertj.core.api.AbstractShortAssert<?> assertThat(short);
    Code:
       0: iload_1
       1: invokestatic  #88                 // Method org/assertj/core/api/Assertions.assertThat:(S)Lorg/assertj/core/api/AbstractShortAssert;
       4: areturn

  public default org.assertj.core.api.AbstractLongAssert<?> assertThat(long);
    Code:
       0: lload_1
       1: invokestatic  #92                 // Method org/assertj/core/api/Assertions.assertThat:(J)Lorg/assertj/core/api/AbstractLongAssert;
       4: areturn

  public default org.assertj.core.api.AbstractLongAssert<?> assertThat(java.lang.Long);
    Code:
       0: aload_1
       1: invokestatic  #96                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Long;)Lorg/assertj/core/api/AbstractLongAssert;
       4: areturn

  public default org.assertj.core.api.AbstractLongArrayAssert<?> assertThat(long[]);
    Code:
       0: aload_1
       1: invokestatic  #100                // Method org/assertj/core/api/Assertions.assertThat:([J)Lorg/assertj/core/api/AbstractLongArrayAssert;
       4: areturn

  public default <T> org.assertj.core.api.ObjectAssert<T> assertThat(T);
    Code:
       0: aload_1
       1: invokestatic  #104                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Object;)Lorg/assertj/core/api/ObjectAssert;
       4: areturn

  public default org.assertj.core.api.AbstractCharSequenceAssert<?, java.lang.String> assertThat(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #107                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
       4: areturn

  public default org.assertj.core.api.AbstractDateAssert<?> assertThat(java.util.Date);
    Code:
       0: aload_1
       1: invokestatic  #110                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/Date;)Lorg/assertj/core/api/AbstractDateAssert;
       4: areturn

  public default org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThat(java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #114                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       4: areturn

  public default org.assertj.core.api.AbstractBigDecimalAssert<?> assertThat(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokestatic  #117                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/math/BigDecimal;)Lorg/assertj/core/api/AbstractBigDecimalAssert;
       4: areturn

  public default org.assertj.core.api.AbstractBigIntegerAssert<?> assertThat(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #121                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/math/BigInteger;)Lorg/assertj/core/api/AbstractBigIntegerAssert;
       4: areturn

  public default org.assertj.core.api.AtomicBooleanAssert assertThat(java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_1
       1: invokestatic  #125                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicBoolean;)Lorg/assertj/core/api/AtomicBooleanAssert;
       4: areturn

  public default org.assertj.core.api.AtomicIntegerAssert assertThat(java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_1
       1: invokestatic  #129                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicInteger;)Lorg/assertj/core/api/AtomicIntegerAssert;
       4: areturn

  public default org.assertj.core.api.AtomicIntegerArrayAssert assertThat(java.util.concurrent.atomic.AtomicIntegerArray);
    Code:
       0: aload_1
       1: invokestatic  #133                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicIntegerArray;)Lorg/assertj/core/api/AtomicIntegerArrayAssert;
       4: areturn

  public default <OBJECT> org.assertj.core.api.AtomicIntegerFieldUpdaterAssert<OBJECT> assertThat(java.util.concurrent.atomic.AtomicIntegerFieldUpdater<OBJECT>);
    Code:
       0: aload_1
       1: invokestatic  #137                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)Lorg/assertj/core/api/AtomicIntegerFieldUpdaterAssert;
       4: areturn

  public default org.assertj.core.api.AtomicLongAssert assertThat(java.util.concurrent.atomic.AtomicLong);
    Code:
       0: aload_1
       1: invokestatic  #142                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicLong;)Lorg/assertj/core/api/AtomicLongAssert;
       4: areturn

  public default org.assertj.core.api.AtomicLongArrayAssert assertThat(java.util.concurrent.atomic.AtomicLongArray);
    Code:
       0: aload_1
       1: invokestatic  #146                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicLongArray;)Lorg/assertj/core/api/AtomicLongArrayAssert;
       4: areturn

  public default <OBJECT> org.assertj.core.api.AtomicLongFieldUpdaterAssert<OBJECT> assertThat(java.util.concurrent.atomic.AtomicLongFieldUpdater<OBJECT>);
    Code:
       0: aload_1
       1: invokestatic  #150                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;)Lorg/assertj/core/api/AtomicLongFieldUpdaterAssert;
       4: areturn

  public default <VALUE> org.assertj.core.api.AtomicReferenceAssert<VALUE> assertThat(java.util.concurrent.atomic.AtomicReference<VALUE>);
    Code:
       0: aload_1
       1: invokestatic  #155                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicReference;)Lorg/assertj/core/api/AtomicReferenceAssert;
       4: areturn

  public default <ELEMENT> org.assertj.core.api.AtomicReferenceArrayAssert<ELEMENT> assertThat(java.util.concurrent.atomic.AtomicReferenceArray<ELEMENT>);
    Code:
       0: aload_1
       1: invokestatic  #160                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)Lorg/assertj/core/api/AtomicReferenceArrayAssert;
       4: areturn

  public default <FIELD, OBJECT> org.assertj.core.api.AtomicReferenceFieldUpdaterAssert<FIELD, OBJECT> assertThat(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<OBJECT, FIELD>);
    Code:
       0: aload_1
       1: invokestatic  #165                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)Lorg/assertj/core/api/AtomicReferenceFieldUpdaterAssert;
       4: areturn

  public default <VALUE> org.assertj.core.api.AtomicMarkableReferenceAssert<VALUE> assertThat(java.util.concurrent.atomic.AtomicMarkableReference<VALUE>);
    Code:
       0: aload_1
       1: invokestatic  #170                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicMarkableReference;)Lorg/assertj/core/api/AtomicMarkableReferenceAssert;
       4: areturn

  public default <VALUE> org.assertj.core.api.AtomicStampedReferenceAssert<VALUE> assertThat(java.util.concurrent.atomic.AtomicStampedReference<VALUE>);
    Code:
       0: aload_1
       1: invokestatic  #175                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/atomic/AtomicStampedReference;)Lorg/assertj/core/api/AtomicStampedReferenceAssert;
       4: areturn

  public default org.assertj.core.api.AbstractCharSequenceAssert<?, ? extends java.lang.CharSequence> assertThat(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokestatic  #180                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/CharSequence;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
       4: areturn

  public default org.assertj.core.api.AbstractShortArrayAssert<?> assertThat(short[]);
    Code:
       0: aload_1
       1: invokestatic  #184                // Method org/assertj/core/api/Assertions.assertThat:([S)Lorg/assertj/core/api/AbstractShortArrayAssert;
       4: areturn

  public default org.assertj.core.api.AbstractShortAssert<?> assertThat(java.lang.Short);
    Code:
       0: aload_1
       1: invokestatic  #188                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Short;)Lorg/assertj/core/api/AbstractShortAssert;
       4: areturn

  public default org.assertj.core.api.ClassAssert assertThat(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #192                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Class;)Lorg/assertj/core/api/ClassAssert;
       4: areturn

  public default org.assertj.core.api.AbstractCharacterAssert<?> assertThat(java.lang.Character);
    Code:
       0: aload_1
       1: invokestatic  #197                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Character;)Lorg/assertj/core/api/AbstractCharacterAssert;
       4: areturn

  public default org.assertj.core.api.AbstractCharArrayAssert<?> assertThat(char[]);
    Code:
       0: aload_1
       1: invokestatic  #201                // Method org/assertj/core/api/Assertions.assertThat:([C)Lorg/assertj/core/api/AbstractCharArrayAssert;
       4: areturn

  public default org.assertj.core.api.AbstractCharacterAssert<?> assertThat(char);
    Code:
       0: iload_1
       1: invokestatic  #205                // Method org/assertj/core/api/Assertions.assertThat:(C)Lorg/assertj/core/api/AbstractCharacterAssert;
       4: areturn

  public default <T extends java.lang.Comparable<? super T>> org.assertj.core.api.AbstractComparableAssert<?, T> assertThat(T);
    Code:
       0: aload_1
       1: invokestatic  #209                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Comparable;)Lorg/assertj/core/api/AbstractComparableAssert;
       4: areturn

  public default <T> org.assertj.core.api.IterableAssert<T> assertThat(java.lang.Iterable<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #213                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Iterable;)Lorg/assertj/core/api/IterableAssert;
       4: areturn

  public default <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.lang.Iterable<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #217                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Iterable;Lorg/assertj/core/api/AssertFactory;)Lorg/assertj/core/api/FactoryBasedNavigableIterableAssert;
       5: areturn

  public default <T> org.assertj.core.api.IterableAssert<T> assertThat(java.util.Iterator<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #224                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/Iterator;)Lorg/assertj/core/api/IterableAssert;
       4: areturn

  public default <ACTUAL extends java.lang.Iterable<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableIterableAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(ACTUAL, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #229                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Iterable;Ljava/lang/Class;)Lorg/assertj/core/api/ClassBasedNavigableIterableAssert;
       5: areturn

  public default org.assertj.core.api.AbstractBooleanAssert<?> assertThat(java.lang.Boolean);
    Code:
       0: aload_1
       1: invokestatic  #235                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Boolean;)Lorg/assertj/core/api/AbstractBooleanAssert;
       4: areturn

  public default org.assertj.core.api.AbstractBooleanArrayAssert<?> assertThat(boolean[]);
    Code:
       0: aload_1
       1: invokestatic  #239                // Method org/assertj/core/api/Assertions.assertThat:([Z)Lorg/assertj/core/api/AbstractBooleanArrayAssert;
       4: areturn

  public default org.assertj.core.api.AbstractByteAssert<?> assertThat(byte);
    Code:
       0: iload_1
       1: invokestatic  #243                // Method org/assertj/core/api/Assertions.assertThat:(B)Lorg/assertj/core/api/AbstractByteAssert;
       4: areturn

  public default org.assertj.core.api.AbstractByteAssert<?> assertThat(java.lang.Byte);
    Code:
       0: aload_1
       1: invokestatic  #247                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Byte;)Lorg/assertj/core/api/AbstractByteAssert;
       4: areturn

  public default org.assertj.core.api.AbstractByteArrayAssert<?> assertThat(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #251                // Method org/assertj/core/api/Assertions.assertThat:([B)Lorg/assertj/core/api/AbstractByteArrayAssert;
       4: areturn

  public default org.assertj.core.api.AbstractBooleanAssert<?> assertThat(boolean);
    Code:
       0: iload_1
       1: invokestatic  #255                // Method org/assertj/core/api/Assertions.assertThat:(Z)Lorg/assertj/core/api/AbstractBooleanAssert;
       4: areturn

  public default org.assertj.core.api.AbstractFloatAssert<?> assertThat(float);
    Code:
       0: fload_1
       1: invokestatic  #259                // Method org/assertj/core/api/Assertions.assertThat:(F)Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public default org.assertj.core.api.AbstractInputStreamAssert<?, ? extends java.io.InputStream> assertThat(java.io.InputStream);
    Code:
       0: aload_1
       1: invokestatic  #263                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/io/InputStream;)Lorg/assertj/core/api/AbstractInputStreamAssert;
       4: areturn

  public default org.assertj.core.api.AbstractFileAssert<?> assertThat(java.io.File);
    Code:
       0: aload_1
       1: invokestatic  #267                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/io/File;)Lorg/assertj/core/api/AbstractFileAssert;
       4: areturn

  public default <RESULT> org.assertj.core.api.FutureAssert<RESULT> assertThat(java.util.concurrent.Future<RESULT>);
    Code:
       0: aload_1
       1: invokestatic  #271                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/Future;)Lorg/assertj/core/api/FutureAssert;
       4: areturn

  public default org.assertj.core.api.AbstractPathAssert<?> assertThat(java.nio.file.Path);
    Code:
       0: aload_1
       1: invokestatic  #276                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/nio/file/Path;)Lorg/assertj/core/api/AbstractPathAssert;
       4: areturn

  public default org.assertj.core.api.AbstractIntArrayAssert<?> assertThat(int[]);
    Code:
       0: aload_1
       1: invokestatic  #280                // Method org/assertj/core/api/Assertions.assertThat:([I)Lorg/assertj/core/api/AbstractIntArrayAssert;
       4: areturn

  public default org.assertj.core.api.AbstractFloatAssert<?> assertThat(java.lang.Float);
    Code:
       0: aload_1
       1: invokestatic  #284                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Float;)Lorg/assertj/core/api/AbstractFloatAssert;
       4: areturn

  public default org.assertj.core.api.AbstractIntegerAssert<?> assertThat(int);
    Code:
       0: iload_1
       1: invokestatic  #287                // Method org/assertj/core/api/Assertions.assertThat:(I)Lorg/assertj/core/api/AbstractIntegerAssert;
       4: areturn

  public default org.assertj.core.api.AbstractFloatArrayAssert<?> assertThat(float[]);
    Code:
       0: aload_1
       1: invokestatic  #291                // Method org/assertj/core/api/Assertions.assertThat:([F)Lorg/assertj/core/api/AbstractFloatArrayAssert;
       4: areturn

  public default org.assertj.core.api.AbstractIntegerAssert<?> assertThat(java.lang.Integer);
    Code:
       0: aload_1
       1: invokestatic  #295                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Integer;)Lorg/assertj/core/api/AbstractIntegerAssert;
       4: areturn

  public default org.assertj.core.api.AbstractDoubleAssert<?> assertThat(double);
    Code:
       0: dload_1
       1: invokestatic  #299                // Method org/assertj/core/api/Assertions.assertThat:(D)Lorg/assertj/core/api/AbstractDoubleAssert;
       4: areturn

  public default org.assertj.core.api.AbstractDoubleAssert<?> assertThat(java.lang.Double);
    Code:
       0: aload_1
       1: invokestatic  #303                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Double;)Lorg/assertj/core/api/AbstractDoubleAssert;
       4: areturn

  public default <T> org.assertj.core.api.ListAssert<T> assertThat(java.util.List<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #306                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public default <ELEMENT, ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.ClassBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.util.List<? extends ELEMENT>, java.lang.Class<ELEMENT_ASSERT>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #311                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;Ljava/lang/Class;)Lorg/assertj/core/api/ClassBasedNavigableListAssert;
       5: areturn

  public default <ACTUAL extends java.util.List<? extends ELEMENT>, ELEMENT, ELEMENT_ASSERT extends org.assertj.core.api.AbstractAssert<ELEMENT_ASSERT, ELEMENT>> org.assertj.core.api.FactoryBasedNavigableListAssert<?, ACTUAL, ELEMENT, ELEMENT_ASSERT> assertThat(java.util.List<? extends ELEMENT>, org.assertj.core.api.AssertFactory<ELEMENT, ELEMENT_ASSERT>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #315                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;Lorg/assertj/core/api/AssertFactory;)Lorg/assertj/core/api/FactoryBasedNavigableListAssert;
       5: areturn

  public default <ELEMENT> org.assertj.core.api.ListAssert<ELEMENT> assertThat(java.util.stream.Stream<? extends ELEMENT>);
    Code:
       0: aload_1
       1: invokestatic  #318                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/stream/Stream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public default org.assertj.core.api.ListAssert<java.lang.Double> assertThat(java.util.stream.DoubleStream);
    Code:
       0: aload_1
       1: invokestatic  #323                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/stream/DoubleStream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public default org.assertj.core.api.ListAssert<java.lang.Long> assertThat(java.util.stream.LongStream);
    Code:
       0: aload_1
       1: invokestatic  #327                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/stream/LongStream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public default org.assertj.core.api.ListAssert<java.lang.Integer> assertThat(java.util.stream.IntStream);
    Code:
       0: aload_1
       1: invokestatic  #331                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/stream/IntStream;)Lorg/assertj/core/api/ListAssert;
       4: areturn

  public default org.assertj.core.api.AbstractDoubleArrayAssert<?> assertThat(double[]);
    Code:
       0: aload_1
       1: invokestatic  #335                // Method org/assertj/core/api/Assertions.assertThat:([D)Lorg/assertj/core/api/AbstractDoubleArrayAssert;
       4: areturn

  public default org.assertj.core.groups.Properties<java.lang.Object> extractProperty(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #340                // Method org/assertj/core/api/Assertions.extractProperty:(Ljava/lang/String;)Lorg/assertj/core/groups/Properties;
       4: areturn

  public default <T> org.assertj.core.groups.Properties<T> extractProperty(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #344                // Method org/assertj/core/api/Assertions.extractProperty:(Ljava/lang/String;Ljava/lang/Class;)Lorg/assertj/core/groups/Properties;
       5: areturn

  public default org.assertj.core.groups.Tuple tuple(java.lang.Object...);
    Code:
       0: aload_1
       1: invokestatic  #350                // Method org/assertj/core/api/Assertions.tuple:([Ljava/lang/Object;)Lorg/assertj/core/groups/Tuple;
       4: areturn

  public default org.assertj.core.data.Index atIndex(int);
    Code:
       0: iload_1
       1: invokestatic  #355                // Method org/assertj/core/api/Assertions.atIndex:(I)Lorg/assertj/core/data/Index;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Double> within(java.lang.Double);
    Code:
       0: aload_1
       1: invokestatic  #359                // Method org/assertj/core/api/Assertions.within:(Ljava/lang/Double;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.math.BigDecimal> within(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokestatic  #362                // Method org/assertj/core/api/Assertions.within:(Ljava/math/BigDecimal;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Float> within(java.lang.Float);
    Code:
       0: aload_1
       1: invokestatic  #364                // Method org/assertj/core/api/Assertions.within:(Ljava/lang/Float;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Double> withPrecision(java.lang.Double);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method org/assertj/core/api/Assertions.offset:(Ljava/lang/Double;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Float> withPrecision(java.lang.Float);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method org/assertj/core/api/Assertions.offset:(Ljava/lang/Float;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.math.BigInteger> within(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #368                // Method org/assertj/core/api/Assertions.within:(Ljava/math/BigInteger;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Byte> within(java.lang.Byte);
    Code:
       0: aload_1
       1: invokestatic  #371                // Method org/assertj/core/api/Assertions.within:(Ljava/lang/Byte;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Integer> within(java.lang.Integer);
    Code:
       0: aload_1
       1: invokestatic  #374                // Method org/assertj/core/api/Assertions.within:(Ljava/lang/Integer;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Short> within(java.lang.Short);
    Code:
       0: aload_1
       1: invokestatic  #377                // Method org/assertj/core/api/Assertions.within:(Ljava/lang/Short;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Long> within(java.lang.Long);
    Code:
       0: aload_1
       1: invokestatic  #380                // Method org/assertj/core/api/Assertions.within:(Ljava/lang/Long;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.TemporalUnitOffset within(long, java.time.temporal.TemporalUnit);
    Code:
       0: lload_1
       1: aload_3
       2: invokestatic  #383                // Method org/assertj/core/api/Assertions.within:(JLjava/time/temporal/TemporalUnit;)Lorg/assertj/core/data/TemporalUnitOffset;
       5: areturn

  public default org.assertj.core.data.Percentage withinPercentage(java.lang.Double);
    Code:
       0: aload_1
       1: invokestatic  #389                // Method org/assertj/core/api/Assertions.withinPercentage:(Ljava/lang/Double;)Lorg/assertj/core/data/Percentage;
       4: areturn

  public default org.assertj.core.data.Percentage withinPercentage(java.lang.Integer);
    Code:
       0: aload_1
       1: invokestatic  #392                // Method org/assertj/core/api/Assertions.withinPercentage:(Ljava/lang/Integer;)Lorg/assertj/core/data/Percentage;
       4: areturn

  public default org.assertj.core.data.Percentage withinPercentage(java.lang.Long);
    Code:
       0: aload_1
       1: invokestatic  #395                // Method org/assertj/core/api/Assertions.withinPercentage:(Ljava/lang/Long;)Lorg/assertj/core/data/Percentage;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Double> byLessThan(java.lang.Double);
    Code:
       0: aload_1
       1: invokestatic  #398                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/lang/Double;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Float> byLessThan(java.lang.Float);
    Code:
       0: aload_1
       1: invokestatic  #400                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/lang/Float;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.math.BigDecimal> byLessThan(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokestatic  #402                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/math/BigDecimal;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.math.BigInteger> byLessThan(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #404                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/math/BigInteger;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Byte> byLessThan(java.lang.Byte);
    Code:
       0: aload_1
       1: invokestatic  #406                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/lang/Byte;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Integer> byLessThan(java.lang.Integer);
    Code:
       0: aload_1
       1: invokestatic  #408                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/lang/Integer;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Short> byLessThan(java.lang.Short);
    Code:
       0: aload_1
       1: invokestatic  #410                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/lang/Short;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.Offset<java.lang.Long> byLessThan(java.lang.Long);
    Code:
       0: aload_1
       1: invokestatic  #412                // Method org/assertj/core/api/Assertions.byLessThan:(Ljava/lang/Long;)Lorg/assertj/core/data/Offset;
       4: areturn

  public default org.assertj.core.data.TemporalUnitOffset byLessThan(long, java.time.temporal.TemporalUnit);
    Code:
       0: lload_1
       1: aload_3
       2: invokestatic  #414                // Method org/assertj/core/api/Assertions.byLessThan:(JLjava/time/temporal/TemporalUnit;)Lorg/assertj/core/data/TemporalUnitOffset;
       5: areturn

  public default <F, T> java.util.function.Function<F, T> from(java.util.function.Function<F, T>);
    Code:
       0: aload_1
       1: invokestatic  #418                // Method org/assertj/core/api/Assertions.from:(Ljava/util/function/Function;)Ljava/util/function/Function;
       4: areturn

  public default <T> org.assertj.core.api.Condition<T> anyOf(java.lang.Iterable<? extends org.assertj.core.api.Condition<? super T>>);
    Code:
       0: aload_1
       1: invokestatic  #424                // Method org/assertj/core/api/Assertions.anyOf:(Ljava/lang/Iterable;)Lorg/assertj/core/api/Condition;
       4: areturn

  public default <T> org.assertj.core.api.Condition<T> anyOf(org.assertj.core.api.Condition<? super T>...);
    Code:
       0: aload_1
       1: invokestatic  #426                // Method org/assertj/core/api/Assertions.anyOf:([Lorg/assertj/core/api/Condition;)Lorg/assertj/core/api/Condition;
       4: areturn

  public default <T> org.assertj.core.condition.DoesNotHave<T> doesNotHave(org.assertj.core.api.Condition<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #430                // Method org/assertj/core/api/Assertions.doesNotHave:(Lorg/assertj/core/api/Condition;)Lorg/assertj/core/condition/DoesNotHave;
       4: areturn

  public default java.lang.String contentOf(java.io.File, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #434                // Method org/assertj/core/api/Assertions.contentOf:(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public default java.lang.String contentOf(java.io.File);
    Code:
       0: aload_1
       1: invokestatic  #439                // Method org/assertj/core/api/Assertions.contentOf:(Ljava/io/File;)Ljava/lang/String;
       4: areturn

  public default java.lang.String contentOf(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #442                // Method org/assertj/core/api/Assertions.contentOf:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
       5: areturn

  public default java.util.List<java.lang.String> linesOf(java.io.File);
    Code:
       0: aload_1
       1: invokestatic  #448                // Method org/assertj/core/api/Assertions.linesOf:(Ljava/io/File;)Ljava/util/List;
       4: areturn

  public default java.util.List<java.lang.String> linesOf(java.io.File, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #451                // Method org/assertj/core/api/Assertions.linesOf:(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;
       5: areturn

  public default java.util.List<java.lang.String> linesOf(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #454                // Method org/assertj/core/api/Assertions.linesOf:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
       5: areturn

  public default void setRemoveAssertJRelatedElementsFromStackTrace(boolean);
    Code:
       0: iload_1
       1: invokestatic  #458                // Method org/assertj/core/api/Assertions.setRemoveAssertJRelatedElementsFromStackTrace:(Z)V
       4: return

  public default void failBecauseExceptionWasNotThrown(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_1
       1: invokestatic  #463                // Method org/assertj/core/api/Assertions.failBecauseExceptionWasNotThrown:(Ljava/lang/Class;)V
       4: return

  public default void shouldHaveThrown(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_1
       1: invokestatic  #468                // Method org/assertj/core/api/Assertions.shouldHaveThrown:(Ljava/lang/Class;)V
       4: return

  public default void setMaxLengthForSingleLineDescription(int);
    Code:
       0: iload_1
       1: invokestatic  #472                // Method org/assertj/core/api/Assertions.setMaxLengthForSingleLineDescription:(I)V
       4: return

  public default void setMaxElementsForPrinting(int);
    Code:
       0: iload_1
       1: invokestatic  #476                // Method org/assertj/core/api/Assertions.setMaxElementsForPrinting:(I)V
       4: return

  public default void setAllowExtractingPrivateFields(boolean);
    Code:
       0: iload_1
       1: invokestatic  #480                // Method org/assertj/core/api/Assertions.setAllowExtractingPrivateFields:(Z)V
       4: return

  public default void setAllowComparingPrivateFields(boolean);
    Code:
       0: iload_1
       1: invokestatic  #484                // Method org/assertj/core/api/Assertions.setAllowComparingPrivateFields:(Z)V
       4: return

  public default void setLenientDateParsing(boolean);
    Code:
       0: iload_1
       1: invokestatic  #488                // Method org/assertj/core/api/Assertions.setLenientDateParsing:(Z)V
       4: return

  public default void registerCustomDateFormat(java.text.DateFormat);
    Code:
       0: aload_1
       1: invokestatic  #492                // Method org/assertj/core/api/Assertions.registerCustomDateFormat:(Ljava/text/DateFormat;)V
       4: return

  public default void registerCustomDateFormat(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #496                // Method org/assertj/core/api/Assertions.registerCustomDateFormat:(Ljava/lang/String;)V
       4: return

  public default void useDefaultDateFormatsOnly();
    Code:
       0: invokestatic  #501                // Method org/assertj/core/api/Assertions.useDefaultDateFormatsOnly:()V
       3: return

  public default org.assertj.core.api.AbstractZonedDateTimeAssert<?> assertThat(java.time.ZonedDateTime);
    Code:
       0: aload_1
       1: invokestatic  #504                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/ZonedDateTime;)Lorg/assertj/core/api/AbstractZonedDateTimeAssert;
       4: areturn

  public default <RESULT> org.assertj.core.api.CompletableFutureAssert<RESULT> assertThat(java.util.concurrent.CompletableFuture<RESULT>);
    Code:
       0: aload_1
       1: invokestatic  #508                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/CompletableFuture;)Lorg/assertj/core/api/CompletableFutureAssert;
       4: areturn

  public default <RESULT> org.assertj.core.api.CompletableFutureAssert<RESULT> assertThat(java.util.concurrent.CompletionStage<RESULT>);
    Code:
       0: aload_1
       1: invokestatic  #514                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/concurrent/CompletionStage;)Lorg/assertj/core/api/CompletableFutureAssert;
       4: areturn

  public default <VALUE> org.assertj.core.api.OptionalAssert<VALUE> assertThat(java.util.Optional<VALUE>);
    Code:
       0: aload_1
       1: invokestatic  #520                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/Optional;)Lorg/assertj/core/api/OptionalAssert;
       4: areturn

  public default org.assertj.core.api.OptionalDoubleAssert assertThat(java.util.OptionalDouble);
    Code:
       0: aload_1
       1: invokestatic  #526                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/OptionalDouble;)Lorg/assertj/core/api/OptionalDoubleAssert;
       4: areturn

  public default org.assertj.core.api.OptionalIntAssert assertThat(java.util.OptionalInt);
    Code:
       0: aload_1
       1: invokestatic  #530                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/OptionalInt;)Lorg/assertj/core/api/OptionalIntAssert;
       4: areturn

  public default org.assertj.core.api.OptionalLongAssert assertThat(java.util.OptionalLong);
    Code:
       0: aload_1
       1: invokestatic  #534                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/OptionalLong;)Lorg/assertj/core/api/OptionalLongAssert;
       4: areturn

  public default org.assertj.core.api.AbstractLocalDateTimeAssert<?> assertThat(java.time.LocalDateTime);
    Code:
       0: aload_1
       1: invokestatic  #538                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/LocalDateTime;)Lorg/assertj/core/api/AbstractLocalDateTimeAssert;
       4: areturn

  public default org.assertj.core.api.AbstractLocalDateAssert<?> assertThat(java.time.LocalDate);
    Code:
       0: aload_1
       1: invokestatic  #543                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/LocalDate;)Lorg/assertj/core/api/AbstractLocalDateAssert;
       4: areturn

  public default org.assertj.core.api.AbstractLocalTimeAssert<?> assertThat(java.time.LocalTime);
    Code:
       0: aload_1
       1: invokestatic  #548                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/LocalTime;)Lorg/assertj/core/api/AbstractLocalTimeAssert;
       4: areturn

  public default org.assertj.core.api.AbstractInstantAssert<?> assertThat(java.time.Instant);
    Code:
       0: aload_1
       1: invokestatic  #553                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/Instant;)Lorg/assertj/core/api/AbstractInstantAssert;
       4: areturn

  public default org.assertj.core.api.AbstractOffsetTimeAssert<?> assertThat(java.time.OffsetTime);
    Code:
       0: aload_1
       1: invokestatic  #557                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/OffsetTime;)Lorg/assertj/core/api/AbstractOffsetTimeAssert;
       4: areturn

  public default org.assertj.core.api.AbstractOffsetDateTimeAssert<?> assertThat(java.time.OffsetDateTime);
    Code:
       0: aload_1
       1: invokestatic  #562                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/time/OffsetDateTime;)Lorg/assertj/core/api/AbstractOffsetDateTimeAssert;
       4: areturn

  public default org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThatThrownBy(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_1
       1: invokestatic  #568                // Method org/assertj/core/api/Assertions.assertThatThrownBy:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Lorg/assertj/core/api/AbstractThrowableAssert;
       4: areturn

  public default org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThatThrownBy(org.assertj.core.api.ThrowableAssert$ThrowingCallable, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #575,  2          // InterfaceMethod catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       8: invokeinterface #576,  2          // InterfaceMethod assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
      13: aload_2
      14: aload_3
      15: invokevirtual #582                // Method org/assertj/core/api/AbstractThrowableAssert.as:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectAssert;
      18: checkcast     #578                // class org/assertj/core/api/AbstractThrowableAssert
      21: invokevirtual #586                // Method org/assertj/core/api/AbstractThrowableAssert.hasBeenThrown:()Lorg/assertj/core/api/AbstractThrowableAssert;
      24: areturn

  public default org.assertj.core.api.AbstractThrowableAssert<?, ? extends java.lang.Throwable> assertThatCode(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #575,  2          // InterfaceMethod catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       8: invokeinterface #576,  2          // InterfaceMethod assertThat:(Ljava/lang/Throwable;)Lorg/assertj/core/api/AbstractThrowableAssert;
      13: areturn

  public default java.lang.Throwable catchThrowable(org.assertj.core.api.ThrowableAssert$ThrowingCallable);
    Code:
       0: aload_1
       1: invokestatic  #590                // Method org/assertj/core/api/Assertions.catchThrowable:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Ljava/lang/Throwable;
       4: areturn

  public default <THROWABLE extends java.lang.Throwable> THROWABLE catchThrowableOfType(org.assertj.core.api.ThrowableAssert$ThrowingCallable, java.lang.Class<THROWABLE>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #594                // Method org/assertj/core/api/Assertions.catchThrowableOfType:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;Ljava/lang/Class;)Ljava/lang/Throwable;
       5: areturn

  public default <T extends java.lang.Throwable> org.assertj.core.api.ThrowableTypeAssert<T> assertThatExceptionOfType(java.lang.Class<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #600                // Method org/assertj/core/api/Assertions.assertThatExceptionOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/ThrowableTypeAssert;
       4: areturn

  public default org.assertj.core.api.ThrowableTypeAssert<java.lang.NullPointerException> assertThatNullPointerException();
    Code:
       0: aload_0
       1: ldc_w         #606                // class java/lang/NullPointerException
       4: invokeinterface #607,  2          // InterfaceMethod assertThatExceptionOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/ThrowableTypeAssert;
       9: areturn

  public default org.assertj.core.api.ThrowableTypeAssert<java.lang.IllegalArgumentException> assertThatIllegalArgumentException();
    Code:
       0: aload_0
       1: ldc_w         #610                // class java/lang/IllegalArgumentException
       4: invokeinterface #607,  2          // InterfaceMethod assertThatExceptionOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/ThrowableTypeAssert;
       9: areturn

  public default org.assertj.core.api.ThrowableTypeAssert<java.io.IOException> assertThatIOException();
    Code:
       0: aload_0
       1: ldc_w         #613                // class java/io/IOException
       4: invokeinterface #607,  2          // InterfaceMethod assertThatExceptionOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/ThrowableTypeAssert;
       9: areturn

  public default org.assertj.core.api.ThrowableTypeAssert<java.lang.IllegalStateException> assertThatIllegalStateException();
    Code:
       0: aload_0
       1: ldc_w         #616                // class java/lang/IllegalStateException
       4: invokeinterface #607,  2          // InterfaceMethod assertThatExceptionOfType:(Ljava/lang/Class;)Lorg/assertj/core/api/ThrowableTypeAssert;
       9: areturn

  public default <T> org.assertj.core.api.PredicateAssert<T> assertThat(java.util.function.Predicate<T>);
    Code:
       0: aload_1
       1: invokestatic  #619                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/function/Predicate;)Lorg/assertj/core/api/PredicateAssert;
       4: areturn

  public default org.assertj.core.api.IntPredicateAssert assertThat(java.util.function.IntPredicate);
    Code:
       0: aload_1
       1: invokestatic  #624                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/function/IntPredicate;)Lorg/assertj/core/api/IntPredicateAssert;
       4: areturn

  public default org.assertj.core.api.LongPredicateAssert assertThat(java.util.function.LongPredicate);
    Code:
       0: aload_1
       1: invokestatic  #628                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/function/LongPredicate;)Lorg/assertj/core/api/LongPredicateAssert;
       4: areturn

  public default org.assertj.core.api.DoublePredicateAssert assertThat(java.util.function.DoublePredicate);
    Code:
       0: aload_1
       1: invokestatic  #632                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/function/DoublePredicate;)Lorg/assertj/core/api/DoublePredicateAssert;
       4: areturn

  public default org.assertj.core.api.AbstractUrlAssert<?> assertThat(java.net.URL);
    Code:
       0: aload_1
       1: invokestatic  #636                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/net/URL;)Lorg/assertj/core/api/AbstractUrlAssert;
       4: areturn

  public default org.assertj.core.api.AbstractUriAssert<?> assertThat(java.net.URI);
    Code:
       0: aload_1
       1: invokestatic  #640                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/net/URI;)Lorg/assertj/core/api/AbstractUriAssert;
       4: areturn

  public default <T> T assertThat(org.assertj.core.api.AssertProvider<T>);
    Code:
       0: aload_1
       1: invokestatic  #644                // Method org/assertj/core/api/Assertions.assertThat:(Lorg/assertj/core/api/AssertProvider;)Ljava/lang/Object;
       4: areturn

  public default <E> org.assertj.core.api.filter.Filters<E> filter(E[]);
    Code:
       0: aload_1
       1: invokestatic  #651                // Method org/assertj/core/api/Assertions.filter:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/Filters;
       4: areturn

  public default <E> org.assertj.core.api.filter.Filters<E> filter(java.lang.Iterable<E>);
    Code:
       0: aload_1
       1: invokestatic  #656                // Method org/assertj/core/api/Assertions.filter:(Ljava/lang/Iterable;)Lorg/assertj/core/api/filter/Filters;
       4: areturn

  public default org.assertj.core.api.filter.InFilter in(java.lang.Object...);
    Code:
       0: aload_1
       1: invokestatic  #662                // Method org/assertj/core/api/Assertions.in:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/InFilter;
       4: areturn

  public default org.assertj.core.api.filter.NotInFilter notIn(java.lang.Object...);
    Code:
       0: aload_1
       1: invokestatic  #666                // Method org/assertj/core/api/Assertions.notIn:([Ljava/lang/Object;)Lorg/assertj/core/api/filter/NotInFilter;
       4: areturn

  public default org.assertj.core.api.filter.NotFilter not(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #670                // Method org/assertj/core/api/Assertions.not:(Ljava/lang/Object;)Lorg/assertj/core/api/filter/NotFilter;
       4: areturn

  public default java.lang.String contentOf(java.net.URL, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #674                // Method org/assertj/core/api/Assertions.contentOf:(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/lang/String;
       5: areturn

  public default java.lang.String contentOf(java.net.URL, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #678                // Method org/assertj/core/api/Assertions.contentOf:(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public default java.lang.String contentOf(java.net.URL);
    Code:
       0: aload_1
       1: invokestatic  #681                // Method org/assertj/core/api/Assertions.contentOf:(Ljava/net/URL;)Ljava/lang/String;
       4: areturn

  public default java.util.List<java.lang.String> linesOf(java.net.URL);
    Code:
       0: aload_1
       1: invokestatic  #684                // Method org/assertj/core/api/Assertions.linesOf:(Ljava/net/URL;)Ljava/util/List;
       4: areturn

  public default java.util.List<java.lang.String> linesOf(java.net.URL, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #687                // Method org/assertj/core/api/Assertions.linesOf:(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/util/List;
       5: areturn

  public default java.util.List<java.lang.String> linesOf(java.net.URL, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #690                // Method org/assertj/core/api/Assertions.linesOf:(Ljava/net/URL;Ljava/lang/String;)Ljava/util/List;
       5: areturn

  public default void useRepresentation(org.assertj.core.presentation.Representation);
    Code:
       0: aload_1
       1: invokestatic  #694                // Method org/assertj/core/api/Assertions.useRepresentation:(Lorg/assertj/core/presentation/Representation;)V
       4: return

  public default <T> void registerFormatterForType(java.lang.Class<T>, java.util.function.Function<T, java.lang.String>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #700                // Method org/assertj/core/api/Assertions.registerFormatterForType:(Ljava/lang/Class;Ljava/util/function/Function;)V
       5: return

  public default void useDefaultRepresentation();
    Code:
       0: invokestatic  #705                // Method org/assertj/core/api/Assertions.useDefaultRepresentation:()V
       3: return
}
