Compiled from "BigDecimals.java"
public class org.assertj.core.internal.BigDecimals extends org.assertj.core.internal.Numbers<java.math.BigDecimal> {
  private static final org.assertj.core.internal.BigDecimals INSTANCE;

  public static org.assertj.core.internal.BigDecimals instance();
    Code:
       0: getstatic     #12                 // Field INSTANCE:Lorg/assertj/core/internal/BigDecimals;
       3: areturn

  org.assertj.core.internal.BigDecimals();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/assertj/core/internal/Numbers."<init>":()V
       4: return

  public org.assertj.core.internal.BigDecimals(org.assertj.core.internal.ComparisonStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method org/assertj/core/internal/Numbers."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
       5: return

  protected java.math.BigDecimal zero();
    Code:
       0: getstatic     #31                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
       3: areturn

  protected java.math.BigDecimal one();
    Code:
       0: getstatic     #35                 // Field java/math/BigDecimal.ONE:Ljava/math/BigDecimal;
       3: areturn

  protected java.math.BigDecimal absDiff(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #41                 // Method java/math/BigDecimal.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       5: invokevirtual #44                 // Method java/math/BigDecimal.abs:()Ljava/math/BigDecimal;
       8: areturn

  protected boolean isGreaterThan(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #41                 // Method java/math/BigDecimal.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       5: getstatic     #31                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
       8: invokevirtual #52                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected boolean areEqual(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_2
       5: ifnonnull     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
      14: aload_2
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: aload_2
      22: invokevirtual #52                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  protected boolean areEqual(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class java/math/BigDecimal
       5: aload_2
       6: checkcast     #27                 // class java/math/BigDecimal
       9: invokevirtual #59                 // Method areEqual:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Z
      12: ireturn

  protected boolean isGreaterThan(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class java/math/BigDecimal
       5: aload_2
       6: checkcast     #27                 // class java/math/BigDecimal
       9: invokevirtual #61                 // Method isGreaterThan:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Z
      12: ireturn

  protected java.lang.Number absDiff(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class java/math/BigDecimal
       5: aload_2
       6: checkcast     #27                 // class java/math/BigDecimal
       9: invokevirtual #64                 // Method absDiff:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
      12: areturn

  protected java.lang.Number one();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method one:()Ljava/math/BigDecimal;
       4: areturn

  protected java.lang.Number zero();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method zero:()Ljava/math/BigDecimal;
       4: areturn

  static {};
    Code:
       0: new           #2                  // class org/assertj/core/internal/BigDecimals
       3: dup
       4: invokespecial #71                 // Method "<init>":()V
       7: putstatic     #12                 // Field INSTANCE:Lorg/assertj/core/internal/BigDecimals;
      10: return
}
