Compiled from "DeepDifference.java"
final class org.assertj.core.internal.DeepDifference$DualKey {
  private final java.util.List<java.lang.String> path;

  private final java.lang.Object key1;

  private final java.lang.Object key2;

  private org.assertj.core.internal.DeepDifference$DualKey(java.util.List<java.lang.String>, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #28                 // Field path:Ljava/util/List;
       9: aload_0
      10: aload_2
      11: putfield      #30                 // Field key1:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #32                 // Field key2:Ljava/lang/Object;
      19: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/assertj/core/internal/DeepDifference$DualKey
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #2                  // class org/assertj/core/internal/DeepDifference$DualKey
      13: astore_2
      14: aload_0
      15: getfield      #30                 // Field key1:Ljava/lang/Object;
      18: aload_2
      19: getfield      #30                 // Field key1:Ljava/lang/Object;
      22: if_acmpne     40
      25: aload_0
      26: getfield      #32                 // Field key2:Ljava/lang/Object;
      29: aload_2
      30: getfield      #32                 // Field key2:Ljava/lang/Object;
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #30                 // Field key1:Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: getfield      #30                 // Field key1:Ljava/lang/Object;
      11: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: aload_0
      20: getfield      #32                 // Field key2:Ljava/lang/Object;
      23: ifnull        36
      26: aload_0
      27: getfield      #32                 // Field key2:Ljava/lang/Object;
      30: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
      33: goto          37
      36: iconst_0
      37: istore_2
      38: iload_1
      39: iload_2
      40: iadd
      41: ireturn

  public java.lang.String toString();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #52                 // String DualKey [key1=
       9: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #30                 // Field key1:Ljava/lang/Object;
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #61                 // String , key2=
      21: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #32                 // Field key2:Ljava/lang/Object;
      28: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #63                 // String ]
      33: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public java.util.List<java.lang.String> getPath();
    Code:
       0: aload_0
       1: getfield      #28                 // Field path:Ljava/util/List;
       4: areturn

  public java.lang.String getConcatenatedPath();
    Code:
       0: aload_0
       1: getfield      #28                 // Field path:Ljava/util/List;
       4: invokestatic  #72                 // Method org/assertj/core/util/Strings.join:(Ljava/lang/Iterable;)Lorg/assertj/core/util/Strings$StringsToJoin;
       7: ldc           #74                 // String .
       9: invokevirtual #78                 // Method org/assertj/core/util/Strings$StringsToJoin.with:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  static java.lang.Object access$000(org.assertj.core.internal.DeepDifference$DualKey);
    Code:
       0: aload_0
       1: getfield      #30                 // Field key1:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$100(org.assertj.core.internal.DeepDifference$DualKey);
    Code:
       0: aload_0
       1: getfield      #32                 // Field key2:Ljava/lang/Object;
       4: areturn

  org.assertj.core.internal.DeepDifference$DualKey(java.util.List, java.lang.Object, java.lang.Object, org.assertj.core.internal.DeepDifference$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #85                 // Method "<init>":(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Object;)V
       7: return
}
