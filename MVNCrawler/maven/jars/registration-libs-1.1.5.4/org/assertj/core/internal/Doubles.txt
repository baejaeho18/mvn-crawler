Compiled from "Doubles.java"
public class org.assertj.core.internal.Doubles extends org.assertj.core.internal.RealNumbers<java.lang.Double> {
  private static final org.assertj.core.internal.Doubles INSTANCE;

  public static org.assertj.core.internal.Doubles instance();
    Code:
       0: getstatic     #12                 // Field INSTANCE:Lorg/assertj/core/internal/Doubles;
       3: areturn

  org.assertj.core.internal.Doubles();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/assertj/core/internal/RealNumbers."<init>":()V
       4: return

  public org.assertj.core.internal.Doubles(org.assertj.core.internal.ComparisonStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method org/assertj/core/internal/RealNumbers."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
       5: return

  protected java.lang.Double zero();
    Code:
       0: dconst_0
       1: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       4: areturn

  protected java.lang.Double one();
    Code:
       0: dconst_1
       1: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       4: areturn

  protected java.lang.Double NaN();
    Code:
       0: ldc2_w        #34                 // double NaNd
       3: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       6: areturn

  protected java.lang.Double absDiff(java.lang.Double, java.lang.Double);
    Code:
       0: aload_2
       1: invokevirtual #41                 // Method java/lang/Double.doubleValue:()D
       4: aload_1
       5: invokevirtual #41                 // Method java/lang/Double.doubleValue:()D
       8: dsub
       9: invokestatic  #47                 // Method java/lang/Math.abs:(D)D
      12: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      15: areturn

  protected java.lang.Number NaN();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method NaN:()Ljava/lang/Double;
       4: areturn

  protected java.lang.Number absDiff(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class java/lang/Double
       5: aload_2
       6: checkcast     #27                 // class java/lang/Double
       9: invokevirtual #56                 // Method absDiff:(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;
      12: areturn

  protected java.lang.Number one();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method one:()Ljava/lang/Double;
       4: areturn

  protected java.lang.Number zero();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method zero:()Ljava/lang/Double;
       4: areturn

  static {};
    Code:
       0: new           #2                  // class org/assertj/core/internal/Doubles
       3: dup
       4: invokespecial #62                 // Method "<init>":()V
       7: putstatic     #12                 // Field INSTANCE:Lorg/assertj/core/internal/Doubles;
      10: return
}
