Compiled from "MethodDescription.java"
public interface org.assertj.core.internal.bytebuddy.description.method.MethodDescription extends org.assertj.core.internal.bytebuddy.description.TypeVariableSource, org.assertj.core.internal.bytebuddy.description.ModifierReviewable$ForMethodDescription, org.assertj.core.internal.bytebuddy.description.NamedElement$WithGenericName, org.assertj.core.internal.bytebuddy.description.ByteCodeElement, org.assertj.core.internal.bytebuddy.description.ByteCodeElement$TypeDependant<org.assertj.core.internal.bytebuddy.description.method.MethodDescription$InDefinedShape, org.assertj.core.internal.bytebuddy.description.method.MethodDescription$Token> {
  public static final java.lang.String CONSTRUCTOR_INTERNAL_NAME;

  public static final java.lang.String TYPE_INITIALIZER_INTERNAL_NAME;

  public static final int TYPE_INITIALIZER_MODIFIER;

  public static final org.assertj.core.internal.bytebuddy.description.method.MethodDescription UNDEFINED;

  public abstract org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic getReturnType();

  public abstract org.assertj.core.internal.bytebuddy.description.method.ParameterList<?> getParameters();

  public abstract org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic getExceptionTypes();

  public abstract int getActualModifiers();

  public abstract int getActualModifiers(boolean);

  public abstract int getActualModifiers(boolean, org.assertj.core.internal.bytebuddy.description.modifier.Visibility);

  public abstract boolean isConstructor();

  public abstract boolean isMethod();

  public abstract boolean isTypeInitializer();

  public abstract boolean represents(java.lang.reflect.Method);

  public abstract boolean represents(java.lang.reflect.Constructor<?>);

  public abstract boolean isVirtual();

  public abstract int getStackSize();

  public abstract boolean isDefaultMethod();

  public abstract boolean isSpecializableFor(org.assertj.core.internal.bytebuddy.description.type.TypeDescription);

  public abstract org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue<?, ?> getDefaultValue();

  public abstract <T> T getDefaultValue(java.lang.Class<T>);

  public abstract boolean isInvokableOn(org.assertj.core.internal.bytebuddy.description.type.TypeDescription);

  public abstract boolean isBootstrap();

  public abstract boolean isBootstrap(java.util.List<?>);

  public abstract boolean isDefaultValue();

  public abstract boolean isDefaultValue(org.assertj.core.internal.bytebuddy.description.annotation.AnnotationValue<?, ?>);

  public abstract org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic getReceiverType();

  public abstract org.assertj.core.internal.bytebuddy.description.method.MethodDescription$SignatureToken asSignatureToken();

  public abstract org.assertj.core.internal.bytebuddy.description.method.MethodDescription$TypeToken asTypeToken();

  public abstract boolean isBridgeCompatible(org.assertj.core.internal.bytebuddy.description.method.MethodDescription$TypeToken);

  static {};
    Code:
       0: aconst_null
       1: putstatic     #114                // Field UNDEFINED:Lorg/assertj/core/internal/bytebuddy/description/method/MethodDescription;
       4: return
}
