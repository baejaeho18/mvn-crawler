Compiled from "TypePool.java"
public class org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable extends org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable {
  private final java.util.Map<java.lang.String, java.util.List<org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>> pathMap;

  protected org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable(java.lang.String, org.assertj.core.internal.bytebuddy.jar.asm.TypePath, java.util.Map<java.lang.String, java.util.List<org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #34                 // Method org/assertj/core/internal/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable."<init>":(Ljava/lang/String;Lorg/assertj/core/internal/bytebuddy/jar/asm/TypePath;)V
       6: aload_0
       7: aload_3
       8: putfield      #36                 // Field pathMap:Ljava/util/Map;
      11: return

  protected java.util.Map<java.lang.String, java.util.List<org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>> getPathMap();
    Code:
       0: aload_0
       1: getfield      #36                 // Field pathMap:Ljava/util/Map;
       4: areturn
}
