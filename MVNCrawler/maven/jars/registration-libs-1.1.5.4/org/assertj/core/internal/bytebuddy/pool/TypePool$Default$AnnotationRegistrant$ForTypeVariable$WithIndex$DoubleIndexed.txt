Compiled from "TypePool.java"
public class org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex$DoubleIndexed extends org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex$DoubleIndexed {
  private final java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, java.util.Map<java.lang.String, java.util.List<org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>>>> doubleIndexedPathMap;

  protected org.assertj.core.internal.bytebuddy.pool.TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex$DoubleIndexed(java.lang.String, org.assertj.core.internal.bytebuddy.jar.asm.TypePath, int, int, java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, java.util.Map<java.lang.String, java.util.List<org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #41                 // Method org/assertj/core/internal/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex$DoubleIndexed."<init>":(Ljava/lang/String;Lorg/assertj/core/internal/bytebuddy/jar/asm/TypePath;II)V
       9: aload_0
      10: aload         5
      12: putfield      #43                 // Field doubleIndexedPathMap:Ljava/util/Map;
      15: return

  protected java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, java.util.Map<java.lang.String, java.util.List<org.assertj.core.internal.bytebuddy.pool.TypePool$Default$LazyTypeDescription$AnnotationToken>>>> getDoubleIndexedPathMap();
    Code:
       0: aload_0
       1: getfield      #43                 // Field doubleIndexedPathMap:Ljava/util/Map;
       4: areturn
}
