Compiled from "Numbers.java"
public abstract class org.assertj.core.internal.Numbers<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>> extends org.assertj.core.internal.Comparables {
  public org.assertj.core.internal.Numbers();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/assertj/core/internal/Comparables."<init>":()V
       4: return

  public org.assertj.core.internal.Numbers(org.assertj.core.internal.ComparisonStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method org/assertj/core/internal/Comparables."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
       5: return

  protected abstract NUMBER zero();

  protected abstract NUMBER one();

  public void assertIsZero(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #27                 // Method zero:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #31                 // Method assertEqualByComparison:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsNotZero(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #27                 // Method zero:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #40                 // Method assertNotEqualByComparison:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsOne(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #43                 // Method one:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #31                 // Method assertEqualByComparison:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsNegative(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #27                 // Method zero:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #47                 // Method assertLessThan:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsPositive(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #27                 // Method zero:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #51                 // Method assertGreaterThan:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsNotNegative(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #27                 // Method zero:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #55                 // Method assertGreaterThanOrEqualTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsNotPositive(org.assertj.core.api.AssertionInfo, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_0
       7: invokevirtual #27                 // Method zero:()Ljava/lang/Number;
      10: checkcast     #25                 // class java/lang/Comparable
      13: invokevirtual #59                 // Method assertLessThanOrEqualTo:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;)V
      16: return

  public void assertIsBetween(org.assertj.core.api.AssertionInfo, NUMBER, NUMBER, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_3
       7: checkcast     #25                 // class java/lang/Comparable
      10: aload         4
      12: checkcast     #25                 // class java/lang/Comparable
      15: iconst_1
      16: iconst_1
      17: invokevirtual #64                 // Method assertIsBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;ZZ)V
      20: return

  public void assertIsStrictlyBetween(org.assertj.core.api.AssertionInfo, NUMBER, NUMBER, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/lang/Comparable
       6: aload_3
       7: checkcast     #25                 // class java/lang/Comparable
      10: aload         4
      12: checkcast     #25                 // class java/lang/Comparable
      15: iconst_0
      16: iconst_0
      17: invokevirtual #64                 // Method assertIsBetween:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;ZZ)V
      20: return

  public void assertIsCloseTo(org.assertj.core.api.AssertionInfo, NUMBER, NUMBER, org.assertj.core.data.Offset<NUMBER>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #73                 // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
       5: aload         4
       7: invokestatic  #79                 // Method org/assertj/core/internal/CommonValidations.checkOffsetIsNotNull:(Lorg/assertj/core/data/Offset;)V
      10: aload_3
      11: invokestatic  #83                 // Method org/assertj/core/internal/CommonValidations.checkNumberIsNotNull:(Ljava/lang/Number;)V
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokevirtual #87                 // Method areEqual:(Ljava/lang/Number;Ljava/lang/Number;)Z
      20: ifeq          24
      23: return
      24: aload         4
      26: getfield      #93                 // Field org/assertj/core/data/Offset.strict:Z
      29: ifne          72
      32: aload_0
      33: aload_0
      34: aload_2
      35: aload_3
      36: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      39: aload         4
      41: getfield      #100                // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      44: invokevirtual #103                // Method isGreaterThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      47: ifeq          72
      50: aload_0
      51: getfield      #107                // Field failures:Lorg/assertj/core/internal/Failures;
      54: aload_1
      55: aload_2
      56: aload_3
      57: aload         4
      59: aload_0
      60: aload_2
      61: aload_3
      62: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      65: invokestatic  #113                // Method org/assertj/core/error/ShouldBeEqualWithinOffset.shouldBeEqual:(Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;Ljava/lang/Number;)Lorg/assertj/core/error/ErrorMessageFactory;
      68: invokevirtual #119                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      71: athrow
      72: aload         4
      74: getfield      #93                 // Field org/assertj/core/data/Offset.strict:Z
      77: ifeq          120
      80: aload_0
      81: aload_0
      82: aload_2
      83: aload_3
      84: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      87: aload         4
      89: getfield      #100                // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      92: invokevirtual #122                // Method isGreaterThanOrEqualTo:(Ljava/lang/Number;Ljava/lang/Number;)Z
      95: ifeq          120
      98: aload_0
      99: getfield      #107                // Field failures:Lorg/assertj/core/internal/Failures;
     102: aload_1
     103: aload_2
     104: aload_3
     105: aload         4
     107: aload_0
     108: aload_2
     109: aload_3
     110: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
     113: invokestatic  #113                // Method org/assertj/core/error/ShouldBeEqualWithinOffset.shouldBeEqual:(Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;Ljava/lang/Number;)Lorg/assertj/core/error/ErrorMessageFactory;
     116: invokevirtual #119                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
     119: athrow
     120: return

  public void assertIsNotCloseTo(org.assertj.core.api.AssertionInfo, NUMBER, NUMBER, org.assertj.core.data.Offset<NUMBER>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #73                 // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
       5: aload         4
       7: invokestatic  #79                 // Method org/assertj/core/internal/CommonValidations.checkOffsetIsNotNull:(Lorg/assertj/core/data/Offset;)V
      10: aload_3
      11: invokestatic  #83                 // Method org/assertj/core/internal/CommonValidations.checkNumberIsNotNull:(Ljava/lang/Number;)V
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      20: astore        5
      22: aload         4
      24: getfield      #93                 // Field org/assertj/core/data/Offset.strict:Z
      27: ifeq          45
      30: aload_0
      31: aload         5
      33: aload         4
      35: getfield      #100                // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      38: invokevirtual #122                // Method isGreaterThanOrEqualTo:(Ljava/lang/Number;Ljava/lang/Number;)Z
      41: ifeq          45
      44: return
      45: aload         4
      47: getfield      #93                 // Field org/assertj/core/data/Offset.strict:Z
      50: ifne          77
      53: aload_0
      54: aload_2
      55: aload_3
      56: invokevirtual #87                 // Method areEqual:(Ljava/lang/Number;Ljava/lang/Number;)Z
      59: ifne          77
      62: aload_0
      63: aload         5
      65: aload         4
      67: getfield      #100                // Field org/assertj/core/data/Offset.value:Ljava/lang/Number;
      70: invokevirtual #103                // Method isGreaterThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      73: ifeq          77
      76: return
      77: aload_0
      78: getfield      #107                // Field failures:Lorg/assertj/core/internal/Failures;
      81: aload_1
      82: aload_2
      83: aload_3
      84: aload         4
      86: aload         5
      88: invokestatic  #134                // Method org/assertj/core/error/ShouldNotBeEqualWithinOffset.shouldNotBeEqual:(Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Offset;Ljava/lang/Number;)Lorg/assertj/core/error/ErrorMessageFactory;
      91: invokevirtual #119                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      94: athrow

  public void assertIsCloseToPercentage(org.assertj.core.api.AssertionInfo, NUMBER, NUMBER, org.assertj.core.data.Percentage);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #73                 // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
       5: aload         4
       7: invokestatic  #141                // Method org/assertj/core/internal/CommonValidations.checkPercentageIsNotNull:(Lorg/assertj/core/data/Percentage;)V
      10: aload_3
      11: invokestatic  #83                 // Method org/assertj/core/internal/CommonValidations.checkNumberIsNotNull:(Ljava/lang/Number;)V
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokevirtual #87                 // Method areEqual:(Ljava/lang/Number;Ljava/lang/Number;)Z
      20: ifeq          24
      23: return
      24: aload         4
      26: getfield      #146                // Field org/assertj/core/data/Percentage.value:D
      29: aload_3
      30: invokevirtual #150                // Method java/lang/Number.doubleValue:()D
      33: dmul
      34: ldc2_w        #151                // double 100.0d
      37: ddiv
      38: invokestatic  #158                // Method java/lang/Math.abs:(D)D
      41: dstore        5
      43: aload_0
      44: aload_2
      45: aload_3
      46: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      49: invokevirtual #150                // Method java/lang/Number.doubleValue:()D
      52: dstore        7
      54: dload         7
      56: dload         5
      58: dcmpl
      59: ifgt          78
      62: dload         7
      64: invokestatic  #164                // Method java/lang/Double.isNaN:(D)Z
      67: ifne          78
      70: dload         7
      72: invokestatic  #167                // Method java/lang/Double.isInfinite:(D)Z
      75: ifeq          100
      78: aload_0
      79: getfield      #107                // Field failures:Lorg/assertj/core/internal/Failures;
      82: aload_1
      83: aload_2
      84: aload_3
      85: aload         4
      87: aload_0
      88: aload_2
      89: aload_3
      90: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      93: invokestatic  #173                // Method org/assertj/core/error/ShouldBeEqualWithinPercentage.shouldBeEqualWithinPercentage:(Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;Ljava/lang/Number;)Lorg/assertj/core/error/ErrorMessageFactory;
      96: invokevirtual #119                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      99: athrow
     100: return

  public void assertIsNotCloseToPercentage(org.assertj.core.api.AssertionInfo, NUMBER, NUMBER, org.assertj.core.data.Percentage);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #73                 // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
       5: aload         4
       7: invokestatic  #141                // Method org/assertj/core/internal/CommonValidations.checkPercentageIsNotNull:(Lorg/assertj/core/data/Percentage;)V
      10: aload_3
      11: invokestatic  #83                 // Method org/assertj/core/internal/CommonValidations.checkNumberIsNotNull:(Ljava/lang/Number;)V
      14: aload         4
      16: getfield      #146                // Field org/assertj/core/data/Percentage.value:D
      19: aload_3
      20: invokevirtual #150                // Method java/lang/Number.doubleValue:()D
      23: dmul
      24: ldc2_w        #151                // double 100.0d
      27: ddiv
      28: invokestatic  #158                // Method java/lang/Math.abs:(D)D
      31: dstore        5
      33: aload_0
      34: aload_2
      35: aload_3
      36: invokevirtual #87                 // Method areEqual:(Ljava/lang/Number;Ljava/lang/Number;)Z
      39: istore        7
      41: iload         7
      43: ifne          55
      46: dload         5
      48: invokestatic  #167                // Method java/lang/Double.isInfinite:(D)Z
      51: ifeq          55
      54: return
      55: aload_0
      56: aload_2
      57: aload_3
      58: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      61: invokevirtual #150                // Method java/lang/Number.doubleValue:()D
      64: dload         5
      66: dcmpg
      67: ifle          75
      70: iload         7
      72: ifeq          97
      75: aload_0
      76: getfield      #107                // Field failures:Lorg/assertj/core/internal/Failures;
      79: aload_1
      80: aload_2
      81: aload_3
      82: aload         4
      84: aload_0
      85: aload_2
      86: aload_3
      87: invokevirtual #97                 // Method absDiff:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      90: invokestatic  #184                // Method org/assertj/core/error/ShouldNotBeEqualWithinPercentage.shouldNotBeEqualWithinPercentage:(Ljava/lang/Number;Ljava/lang/Number;Lorg/assertj/core/data/Percentage;Ljava/lang/Number;)Lorg/assertj/core/error/ErrorMessageFactory;
      93: invokevirtual #119                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      96: athrow
      97: return

  protected abstract NUMBER absDiff(NUMBER, NUMBER);

  protected abstract boolean isGreaterThan(NUMBER, NUMBER);

  protected boolean isGreaterThanOrEqualTo(NUMBER, NUMBER);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #87                 // Method areEqual:(Ljava/lang/Number;Ljava/lang/Number;)Z
       6: ifne          18
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #103                // Method isGreaterThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  protected boolean areEqual(NUMBER, NUMBER);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #189                // Method org/assertj/core/util/Objects.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn
}
