Compiled from "CommonValidations.java"
public final class org.assertj.core.internal.CommonValidations {
  private static org.assertj.core.internal.Failures failures;

  private org.assertj.core.internal.CommonValidations();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: return

  static void checkIndexValueIsValid(org.assertj.core.data.Index, int);
    Code:
       0: aload_0
       1: ldc           #17                 // String Index should not be null
       3: invokestatic  #23                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #29                 // Field org/assertj/core/data/Index.value:I
      11: iload_1
      12: if_icmpgt     16
      15: return
      16: ldc           #31                 // String Index should be between <%d> and <%d> (inclusive,) but was:%n <%d>
      18: astore_2
      19: new           #33                 // class java/lang/IndexOutOfBoundsException
      22: dup
      23: aload_2
      24: iconst_3
      25: anewarray     #4                  // class java/lang/Object
      28: dup
      29: iconst_0
      30: iconst_0
      31: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: dup
      36: iconst_1
      37: iload_1
      38: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: dup
      43: iconst_2
      44: aload_0
      45: getfield      #29                 // Field org/assertj/core/data/Index.value:I
      48: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      55: invokespecial #48                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      58: athrow

  static void checkOffsetIsNotNull(org.assertj.core.data.Offset<?>);
    Code:
       0: aload_0
       1: ldc           #57                 // String The given offset should not be null
       3: invokestatic  #23                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: return

  static void checkPercentageIsNotNull(org.assertj.core.data.Percentage);
    Code:
       0: aload_0
       1: ldc           #64                 // String The given percentage should not be null
       3: invokestatic  #23                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: return

  static void checkNumberIsNotNull(java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #70                 // String The given number should not be null
       3: invokestatic  #23                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: return

  static void checkIsNotEmpty(java.lang.Object[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          9
       5: invokestatic  #80                 // Method org/assertj/core/internal/CommonErrors.arrayOfValuesToLookForIsEmpty:()Ljava/lang/IllegalArgumentException;
       8: athrow
       9: return

  static void checkIsNotEmpty(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokeinterface #89,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          18
      14: invokestatic  #98                 // Method org/assertj/core/internal/CommonErrors.iterableOfValuesToLookForIsEmpty:()Ljava/lang/IllegalArgumentException;
      17: athrow
      18: return

  public static void checkIsNotNull(java.lang.Object[]);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #106                // Method org/assertj/core/internal/CommonErrors.arrayOfValuesToLookForIsNull:()Ljava/lang/NullPointerException;
       7: athrow
       8: return

  static void checkIsNotNull(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #109                // Method org/assertj/core/internal/CommonErrors.iterableOfValuesToLookForIsNull:()Ljava/lang/NullPointerException;
       7: athrow
       8: return

  static void checkIsNotNullAndNotEmpty(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokestatic  #112                // Method checkIsNotNull:([Ljava/lang/Object;)V
       4: aload_0
       5: invokestatic  #114                // Method checkIsNotEmpty:([Ljava/lang/Object;)V
       8: return

  static void checkIsNotNullAndNotEmpty(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokestatic  #116                // Method checkIsNotNull:(Ljava/lang/Iterable;)V
       4: aload_0
       5: invokestatic  #118                // Method checkIsNotEmpty:(Ljava/lang/Iterable;)V
       8: return

  public static void failIfEmptySinceActualIsNotEmpty(java.lang.Object[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          15
       5: new           #121                // class java/lang/AssertionError
       8: dup
       9: ldc           #123                // String actual is not empty
      11: invokespecial #126                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      14: athrow
      15: return

  public static void hasSameSizeAsCheck(org.assertj.core.api.AssertionInfo, java.lang.Object, java.lang.Object, int);
    Code:
       0: aload_2
       1: ldc           #130                // String Array
       3: invokestatic  #134                // Method checkOtherIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: invokestatic  #140                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      13: invokestatic  #144                // Method checkSameSizes:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;II)V
      16: return

  public static void hasSameSizeAsCheck(org.assertj.core.api.AssertionInfo, java.lang.Object, java.lang.Iterable<?>, int);
    Code:
       0: aload_2
       1: ldc           #153                // String Iterable
       3: invokestatic  #134                // Method checkOtherIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: invokestatic  #159                // Method org/assertj/core/util/IterableUtil.sizeOf:(Ljava/lang/Iterable;)I
      13: invokestatic  #144                // Method checkSameSizes:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;II)V
      16: return

  public static void hasSameSizeAsCheck(org.assertj.core.api.AssertionInfo, java.lang.Object, java.util.Map<?, ?>, int);
    Code:
       0: aload_2
       1: ldc           #162                // String Map
       3: invokestatic  #134                // Method checkOtherIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iload_3
       9: aload_2
      10: invokeinterface #168,  1          // InterfaceMethod java/util/Map.size:()I
      15: invokestatic  #144                // Method checkSameSizes:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;II)V
      18: return

  static void checkOtherIsNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: new           #172                // class java/lang/StringBuilder
       4: dup
       5: invokespecial #173                // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #175                // String The
      10: invokevirtual #179                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #179                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #181                // String  to compare actual size with should not be null
      19: invokevirtual #179                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #185                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokestatic  #23                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: return

  static void checkSameSizes(org.assertj.core.api.AssertionInfo, java.lang.Object, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpeq     25
       5: getstatic     #188                // Field failures:Lorg/assertj/core/internal/Failures;
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: iload_3
      15: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokestatic  #194                // Method org/assertj/core/error/ShouldHaveSameSizeAs.shouldHaveSameSizeAs:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/assertj/core/error/ErrorMessageFactory;
      21: invokevirtual #200                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      24: athrow
      25: return

  public static void checkSizes(java.lang.Object, int, int, org.assertj.core.api.AssertionInfo);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpeq     19
       5: getstatic     #188                // Field failures:Lorg/assertj/core/internal/Failures;
       8: aload_3
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokestatic  #209                // Method org/assertj/core/error/ShouldHaveSize.shouldHaveSize:(Ljava/lang/Object;II)Lorg/assertj/core/error/ErrorMessageFactory;
      15: invokevirtual #200                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      18: athrow
      19: return

  public static void checkLineCounts(java.lang.Object, int, int, org.assertj.core.api.AssertionInfo);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpeq     19
       5: getstatic     #188                // Field failures:Lorg/assertj/core/internal/Failures;
       8: aload_3
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokestatic  #215                // Method org/assertj/core/error/ShouldHaveLineCount.shouldHaveLinesCount:(Ljava/lang/Object;II)Lorg/assertj/core/error/ErrorMessageFactory;
      15: invokevirtual #200                // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      18: athrow
      19: return

  public static void checkTypeIsNotNull(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #221                // String The given type should not be null
       3: invokestatic  #23                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: return

  public static void checkIterableIsNotNull(org.assertj.core.api.AssertionInfo, java.lang.Iterable<?>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #229                // Method iterableToLookForIsNull:()Ljava/lang/NullPointerException;
       7: athrow
       8: return

  public static java.lang.NullPointerException iterableToLookForIsNull();
    Code:
       0: new           #232                // class java/lang/NullPointerException
       3: dup
       4: ldc           #234                // String The iterable to look for should not be null
       6: invokespecial #235                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
       9: areturn

  public static void checkSequenceIsNotNull(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     15
       4: new           #232                // class java/lang/NullPointerException
       7: dup
       8: invokestatic  #241                // Method org/assertj/core/internal/ErrorMessages.nullSequence:()Ljava/lang/String;
      11: invokespecial #235                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: return

  public static void checkSubsequenceIsNotNull(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     15
       4: new           #232                // class java/lang/NullPointerException
       7: dup
       8: invokestatic  #246                // Method org/assertj/core/internal/ErrorMessages.nullSubsequence:()Ljava/lang/String;
      11: invokespecial #235                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: return

  static {};
    Code:
       0: invokestatic  #252                // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
       3: putstatic     #188                // Field failures:Lorg/assertj/core/internal/Failures;
       6: return
}
