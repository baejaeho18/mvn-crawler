Compiled from "InstrumentedType.java"
public interface org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName extends org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType {
  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withField(org.assertj.core.internal.bytebuddy.description.field.FieldDescription$Token);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withMethod(org.assertj.core.internal.bytebuddy.description.method.MethodDescription$Token);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withModifiers(int);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withInterfaces(org.assertj.core.internal.bytebuddy.description.type.TypeList$Generic);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withTypeVariable(org.assertj.core.internal.bytebuddy.description.type.TypeVariableToken);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withAnnotations(java.util.List<? extends org.assertj.core.internal.bytebuddy.description.annotation.AnnotationDescription>);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withInitializer(org.assertj.core.internal.bytebuddy.implementation.LoadedTypeInitializer);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withInitializer(org.assertj.core.internal.bytebuddy.implementation.bytecode.ByteCodeAppender);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withName(java.lang.String);

  public abstract org.assertj.core.internal.bytebuddy.dynamic.scaffold.InstrumentedType$WithFlexibleName withTypeVariables(org.assertj.core.internal.bytebuddy.matcher.ElementMatcher<? super org.assertj.core.internal.bytebuddy.description.type.TypeDescription$Generic>, org.assertj.core.internal.bytebuddy.dynamic.Transformer<org.assertj.core.internal.bytebuddy.description.type.TypeVariableToken>);
}
