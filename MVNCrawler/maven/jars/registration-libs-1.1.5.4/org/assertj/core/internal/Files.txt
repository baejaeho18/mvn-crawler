Compiled from "Files.java"
public class org.assertj.core.internal.Files {
  private static final java.lang.String UNABLE_TO_COMPARE_FILE_CONTENTS;

  private static final org.assertj.core.internal.Files INSTANCE;

  org.assertj.core.internal.Diff diff;

  org.assertj.core.internal.BinaryDiff binaryDiff;

  org.assertj.core.internal.Failures failures;

  public static org.assertj.core.internal.Files instance();
    Code:
       0: getstatic     #22                 // Field INSTANCE:Lorg/assertj/core/internal/Files;
       3: areturn

  org.assertj.core.internal.Files();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #28                 // class org/assertj/core/internal/Diff
       8: dup
       9: invokespecial #29                 // Method org/assertj/core/internal/Diff."<init>":()V
      12: putfield      #31                 // Field diff:Lorg/assertj/core/internal/Diff;
      15: aload_0
      16: new           #33                 // class org/assertj/core/internal/BinaryDiff
      19: dup
      20: invokespecial #34                 // Method org/assertj/core/internal/BinaryDiff."<init>":()V
      23: putfield      #36                 // Field binaryDiff:Lorg/assertj/core/internal/BinaryDiff;
      26: aload_0
      27: invokestatic  #41                 // Method org/assertj/core/internal/Failures.instance:()Lorg/assertj/core/internal/Failures;
      30: putfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      33: return

  public void assertSameContentAs(org.assertj.core.api.AssertionInfo, java.io.File, java.nio.charset.Charset, java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #54                 // Method verifyIsFile:(Ljava/io/File;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #58                 // Method assertIsFile:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
      12: aload_0
      13: getfield      #31                 // Field diff:Lorg/assertj/core/internal/Diff;
      16: aload_2
      17: aload_3
      18: aload         4
      20: aload         5
      22: invokevirtual #61                 // Method org/assertj/core/internal/Diff.diff:(Ljava/io/File;Ljava/nio/charset/Charset;Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
      25: astore        6
      27: aload         6
      29: invokeinterface #67,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      34: ifeq          38
      37: return
      38: aload_0
      39: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      42: aload_1
      43: aload_2
      44: aload         4
      46: aload         6
      48: invokestatic  #73                 // Method org/assertj/core/error/ShouldHaveSameContent.shouldHaveSameContent:(Ljava/io/File;Ljava/io/File;Ljava/util/List;)Lorg/assertj/core/error/ErrorMessageFactory;
      51: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      54: athrow
      55: astore        6
      57: aload_0
      58: getfield      #36                 // Field binaryDiff:Lorg/assertj/core/internal/BinaryDiff;
      61: aload_2
      62: aload         4
      64: invokevirtual #87                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      67: invokestatic  #93                 // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
      70: invokevirtual #96                 // Method org/assertj/core/internal/BinaryDiff.diff:(Ljava/io/File;[B)Lorg/assertj/core/internal/BinaryDiffResult;
      73: astore        7
      75: aload         7
      77: invokevirtual #101                // Method org/assertj/core/internal/BinaryDiffResult.hasNoDiff:()Z
      80: ifeq          86
      83: aload         6
      85: athrow
      86: aload_0
      87: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      90: aload_1
      91: aload_2
      92: aload         7
      94: invokestatic  #107                // Method org/assertj/core/error/ShouldHaveBinaryContent.shouldHaveBinaryContent:(Ljava/io/File;Lorg/assertj/core/internal/BinaryDiffResult;)Lorg/assertj/core/error/ErrorMessageFactory;
      97: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
     100: athrow
     101: astore        7
     103: new           #109                // class java/io/UncheckedIOException
     106: dup
     107: ldc           #9                  // String Unable to compare contents of files:<%s> and:<%s>
     109: iconst_2
     110: anewarray     #4                  // class java/lang/Object
     113: dup
     114: iconst_0
     115: aload_2
     116: aastore
     117: dup
     118: iconst_1
     119: aload         4
     121: aastore
     122: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     125: aload         7
     127: invokespecial #118                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
     130: athrow
     131: astore        6
     133: new           #109                // class java/io/UncheckedIOException
     136: dup
     137: ldc           #9                  // String Unable to compare contents of files:<%s> and:<%s>
     139: iconst_2
     140: anewarray     #4                  // class java/lang/Object
     143: dup
     144: iconst_0
     145: aload_2
     146: aastore
     147: dup
     148: iconst_1
     149: aload         4
     151: aastore
     152: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     155: aload         6
     157: invokespecial #118                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
     160: athrow
    Exception table:
       from    to  target type
          12    37    55   Class java/nio/charset/MalformedInputException
          38    55    55   Class java/nio/charset/MalformedInputException
          57   101   101   Class java/io/IOException
          12    37   131   Class java/io/IOException
          38    55   131   Class java/io/IOException

  public void assertHasBinaryContent(org.assertj.core.api.AssertionInfo, java.io.File, byte[]);
    Code:
       0: aload_3
       1: ldc           #139                // String The binary content to compare to should not be null
       3: invokestatic  #145                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #58                 // Method assertIsFile:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
      13: aload_0
      14: getfield      #36                 // Field binaryDiff:Lorg/assertj/core/internal/BinaryDiff;
      17: aload_2
      18: aload_3
      19: invokevirtual #96                 // Method org/assertj/core/internal/BinaryDiff.diff:(Ljava/io/File;[B)Lorg/assertj/core/internal/BinaryDiffResult;
      22: astore        4
      24: aload         4
      26: invokevirtual #101                // Method org/assertj/core/internal/BinaryDiffResult.hasNoDiff:()Z
      29: ifeq          33
      32: return
      33: aload_0
      34: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      37: aload_1
      38: aload_2
      39: aload         4
      41: invokestatic  #107                // Method org/assertj/core/error/ShouldHaveBinaryContent.shouldHaveBinaryContent:(Ljava/io/File;Lorg/assertj/core/internal/BinaryDiffResult;)Lorg/assertj/core/error/ErrorMessageFactory;
      44: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      47: athrow
      48: astore        4
      50: ldc           #149                // String Unable to verify binary contents of file:<%s>
      52: iconst_1
      53: anewarray     #4                  // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_2
      59: aastore
      60: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: astore        5
      65: new           #109                // class java/io/UncheckedIOException
      68: dup
      69: aload         5
      71: aload         4
      73: invokespecial #118                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      76: athrow
    Exception table:
       from    to  target type
          13    32    48   Class java/io/IOException
          33    48    48   Class java/io/IOException

  public void assertHasContent(org.assertj.core.api.AssertionInfo, java.io.File, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_3
       1: ldc           #155                // String The text to compare to should not be null
       3: invokestatic  #145                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #58                 // Method assertIsFile:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
      13: aload_0
      14: getfield      #31                 // Field diff:Lorg/assertj/core/internal/Diff;
      17: aload_2
      18: aload_3
      19: aload         4
      21: invokevirtual #158                // Method org/assertj/core/internal/Diff.diff:(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/util/List;
      24: astore        5
      26: aload         5
      28: invokeinterface #67,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifeq          37
      36: return
      37: aload_0
      38: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      41: aload_1
      42: aload_2
      43: aload         4
      45: aload         5
      47: invokestatic  #164                // Method org/assertj/core/error/ShouldHaveContent.shouldHaveContent:(Ljava/io/File;Ljava/nio/charset/Charset;Ljava/util/List;)Lorg/assertj/core/error/ErrorMessageFactory;
      50: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      53: athrow
      54: astore        5
      56: ldc           #166                // String Unable to verify text contents of file:<%s>
      58: iconst_1
      59: anewarray     #4                  // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_2
      65: aastore
      66: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: astore        6
      71: new           #109                // class java/io/UncheckedIOException
      74: dup
      75: aload         6
      77: aload         5
      79: invokespecial #118                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      82: athrow
    Exception table:
       from    to  target type
          13    36    54   Class java/io/IOException
          37    54    54   Class java/io/IOException

  private void verifyIsFile(java.io.File);
    Code:
       0: aload_1
       1: ldc           #169                // String The file to compare to should not be null
       3: invokestatic  #145                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokevirtual #172                // Method java/io/File.isFile:()Z
      11: ldc           #174                // String Expected file:<\'%s\'> should be an existing file
      13: iconst_1
      14: anewarray     #4                  // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: aastore
      21: invokestatic  #178                // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      24: return

  public void assertIsFile(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #172                // Method java/io/File.isFile:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #187                // Method org/assertj/core/error/ShouldBeFile.shouldBeFile:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  public void assertIsDirectory(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #191                // Method java/io/File.isDirectory:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #196                // Method org/assertj/core/error/ShouldBeDirectory.shouldBeDirectory:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  public void assertIsAbsolute(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #201                // Method isAbsolutePath:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)Z
       6: ifeq          10
       9: return
      10: aload_0
      11: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      14: aload_1
      15: aload_2
      16: invokestatic  #206                // Method org/assertj/core/error/ShouldBeAbsolutePath.shouldBeAbsolutePath:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      19: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      22: athrow

  public void assertIsRelative(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #201                // Method isAbsolutePath:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      14: aload_1
      15: aload_2
      16: invokestatic  #212                // Method org/assertj/core/error/ShouldBeRelativePath.shouldBeRelativePath:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      19: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      22: athrow

  private boolean isAbsolutePath(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #215                // Method java/io/File.isAbsolute:()Z
       9: ireturn

  public void assertExists(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #219                // Method java/io/File.exists:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #224                // Method org/assertj/core/error/ShouldExist.shouldExist:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  public void assertDoesNotExist(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #219                // Method java/io/File.exists:()Z
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #230                // Method org/assertj/core/error/ShouldNotExist.shouldNotExist:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  public void assertCanWrite(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #234                // Method java/io/File.canWrite:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #239                // Method org/assertj/core/error/ShouldBeWritable.shouldBeWritable:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  public void assertCanRead(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #243                // Method java/io/File.canRead:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #248                // Method org/assertj/core/error/ShouldBeReadable.shouldBeReadable:(Ljava/io/File;)Lorg/assertj/core/error/ErrorMessageFactory;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  public void assertHasParent(org.assertj.core.api.AssertionInfo, java.io.File, java.io.File);
    Code:
       0: aload_3
       1: ldc           #252                // String The expected parent file should not be null.
       3: invokestatic  #145                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_2
       9: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
      12: aload_2
      13: invokevirtual #256                // Method java/io/File.getParentFile:()Ljava/io/File;
      16: ifnull        37
      19: aload_3
      20: invokevirtual #259                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      23: aload_2
      24: invokevirtual #256                // Method java/io/File.getParentFile:()Ljava/io/File;
      27: invokevirtual #259                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      30: invokestatic  #265                // Method org/assertj/core/util/Objects.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ifeq          37
      36: return
      37: goto          70
      40: astore        4
      42: new           #109                // class java/io/UncheckedIOException
      45: dup
      46: ldc_w         #267                // String Unable to get canonical form of [%s] or [%s].
      49: iconst_2
      50: anewarray     #4                  // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_2
      56: aastore
      57: dup
      58: iconst_1
      59: aload_3
      60: aastore
      61: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      64: aload         4
      66: invokespecial #118                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      69: athrow
      70: aload_0
      71: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      74: aload_1
      75: aload_2
      76: aload_3
      77: invokestatic  #273                // Method org/assertj/core/error/ShouldHaveParent.shouldHaveParent:(Ljava/io/File;Ljava/io/File;)Lorg/assertj/core/error/ShouldHaveParent;
      80: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      83: athrow
    Exception table:
       from    to  target type
          12    36    40   Class java/io/IOException

  public void assertHasExtension(org.assertj.core.api.AssertionInfo, java.io.File, java.lang.String);
    Code:
       0: aload_3
       1: ldc_w         #277                // String The expected extension should not be null.
       4: invokestatic  #145                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #58                 // Method assertIsFile:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
      14: aload_0
      15: aload_2
      16: invokespecial #281                // Method getFileExtension:(Ljava/io/File;)Ljava/lang/String;
      19: astore        4
      21: aload_3
      22: aload         4
      24: invokevirtual #285                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          31
      30: return
      31: aload_0
      32: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      35: aload_1
      36: aload_2
      37: aload         4
      39: aload_3
      40: invokestatic  #291                // Method org/assertj/core/error/ShouldHaveExtension.shouldHaveExtension:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Lorg/assertj/core/error/ShouldHaveExtension;
      43: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      46: athrow

  private java.lang.String getFileExtension(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #296                // Method java/io/File.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: bipush        46
       8: invokevirtual #300                // Method java/lang/String.lastIndexOf:(I)I
      11: istore_3
      12: iload_3
      13: iconst_m1
      14: if_icmpne     21
      17: aconst_null
      18: goto          28
      21: aload_2
      22: iload_3
      23: iconst_1
      24: iadd
      25: invokevirtual #304                // Method java/lang/String.substring:(I)Ljava/lang/String;
      28: areturn

  public void assertHasName(org.assertj.core.api.AssertionInfo, java.io.File, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_3
       6: ldc_w         #311                // String The expected name should not be null.
       9: invokestatic  #145                // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: aload_3
      14: aload_2
      15: invokevirtual #296                // Method java/io/File.getName:()Ljava/lang/String;
      18: invokevirtual #285                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #317                // Method org/assertj/core/error/ShouldHaveName.shouldHaveName:(Ljava/io/File;Ljava/lang/String;)Lorg/assertj/core/error/ShouldHaveName;
      35: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      38: athrow

  private static void assertNotNull(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: invokestatic  #322                // Method org/assertj/core/internal/Objects.instance:()Lorg/assertj/core/internal/Objects;
       3: aload_0
       4: aload_1
       5: invokevirtual #325                // Method org/assertj/core/internal/Objects.assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Object;)V
       8: return

  public void assertHasNoParent(org.assertj.core.api.AssertionInfo, java.io.File);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #181                // Method assertNotNull:(Lorg/assertj/core/api/AssertionInfo;Ljava/io/File;)V
       5: aload_2
       6: invokevirtual #256                // Method java/io/File.getParentFile:()Ljava/io/File;
       9: ifnonnull     13
      12: return
      13: aload_0
      14: getfield      #43                 // Field failures:Lorg/assertj/core/internal/Failures;
      17: aload_1
      18: aload_2
      19: invokestatic  #332                // Method org/assertj/core/error/ShouldHaveNoParent.shouldHaveNoParent:(Ljava/io/File;)Lorg/assertj/core/error/ShouldHaveNoParent;
      22: invokevirtual #77                 // Method org/assertj/core/internal/Failures.failure:(Lorg/assertj/core/api/AssertionInfo;Lorg/assertj/core/error/ErrorMessageFactory;)Ljava/lang/AssertionError;
      25: athrow

  static {};
    Code:
       0: new           #2                  // class org/assertj/core/internal/Files
       3: dup
       4: invokespecial #334                // Method "<init>":()V
       7: putstatic     #22                 // Field INSTANCE:Lorg/assertj/core/internal/Files;
      10: return
}
