Compiled from "Nexus.java"
public class org.assertj.core.internal.bytebuddy.dynamic.Nexus extends java.lang.ref.WeakReference<java.lang.ClassLoader> {
  public static final java.lang.String PROPERTY;

  protected static final java.lang.ref.ReferenceQueue<java.lang.ClassLoader> NO_QUEUE;

  private static final java.util.concurrent.ConcurrentMap<org.assertj.core.internal.bytebuddy.dynamic.Nexus, java.lang.Object> TYPE_INITIALIZERS;

  private final java.lang.String name;

  private final int classLoaderHashCode;

  private final int identification;

  private org.assertj.core.internal.bytebuddy.dynamic.Nexus(java.lang.Class<?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #32                 // Method nonAnonymous:(Ljava/lang/String;)Ljava/lang/String;
       8: aload_1
       9: invokevirtual #36                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      12: getstatic     #38                 // Field NO_QUEUE:Ljava/lang/ref/ReferenceQueue;
      15: iload_2
      16: invokespecial #41                 // Method "<init>":(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;I)V
      19: return

  private org.assertj.core.internal.bytebuddy.dynamic.Nexus(java.lang.String, java.lang.ClassLoader, java.lang.ref.ReferenceQueue<? super java.lang.ClassLoader>, int);
    Code:
       0: aload_0
       1: aload_2
       2: aload_2
       3: ifnonnull     10
       6: aconst_null
       7: goto          11
      10: aload_3
      11: invokespecial #55                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      14: aload_0
      15: aload_1
      16: putfield      #57                 // Field name:Ljava/lang/String;
      19: aload_0
      20: aload_2
      21: invokestatic  #63                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      24: putfield      #65                 // Field classLoaderHashCode:I
      27: aload_0
      28: iload         4
      30: putfield      #67                 // Field identification:I
      33: return

  private static java.lang.String nonAnonymous(java.lang.String);
    Code:
       0: aload_0
       1: bipush        47
       3: invokevirtual #75                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: iconst_m1
       9: if_icmpne     16
      12: aload_0
      13: goto          22
      16: aload_0
      17: iconst_0
      18: iload_1
      19: invokevirtual #79                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      22: areturn

  public static void initialize(java.lang.Class<?>, int) throws java.lang.Exception;
    Code:
       0: getstatic     #86                 // Field TYPE_INITIALIZERS:Ljava/util/concurrent/ConcurrentMap;
       3: new           #2                  // class org/assertj/core/internal/bytebuddy/dynamic/Nexus
       6: dup
       7: aload_0
       8: iload_1
       9: invokespecial #88                 // Method "<init>":(Ljava/lang/Class;I)V
      12: invokeinterface #94,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: aload_2
      19: ifnull        53
      22: aload_2
      23: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: ldc           #102                // String onLoad
      28: iconst_1
      29: anewarray     #24                 // class java/lang/Class
      32: dup
      33: iconst_0
      34: ldc           #24                 // class java/lang/Class
      36: aastore
      37: invokevirtual #106                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      40: aload_2
      41: iconst_1
      42: anewarray     #96                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_0
      48: aastore
      49: invokevirtual #112                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: return

  public static void register(java.lang.String, java.lang.ClassLoader, java.lang.ref.ReferenceQueue<? super java.lang.ClassLoader>, int, java.lang.Object);
    Code:
       0: getstatic     #86                 // Field TYPE_INITIALIZERS:Ljava/util/concurrent/ConcurrentMap;
       3: new           #2                  // class org/assertj/core/internal/bytebuddy/dynamic/Nexus
       6: dup
       7: aload_0
       8: aload_1
       9: aload_2
      10: iload_3
      11: invokespecial #41                 // Method "<init>":(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;I)V
      14: aload         4
      16: invokeinterface #120,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public static void clean(java.lang.ref.Reference<? super java.lang.ClassLoader>);
    Code:
       0: getstatic     #86                 // Field TYPE_INITIALIZERS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #94,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/assertj/core/internal/bytebuddy/dynamic/Nexus
      28: astore_2
      29: aload_0
      30: getfield      #65                 // Field classLoaderHashCode:I
      33: aload_2
      34: getfield      #65                 // Field classLoaderHashCode:I
      37: if_icmpne     80
      40: aload_0
      41: getfield      #67                 // Field identification:I
      44: aload_2
      45: getfield      #67                 // Field identification:I
      48: if_icmpne     80
      51: aload_0
      52: getfield      #57                 // Field name:Ljava/lang/String;
      55: aload_2
      56: getfield      #57                 // Field name:Ljava/lang/String;
      59: invokevirtual #129                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          80
      65: aload_0
      66: invokevirtual #133                // Method get:()Ljava/lang/Object;
      69: aload_2
      70: invokevirtual #133                // Method get:()Ljava/lang/Object;
      73: if_acmpne     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #57                 // Field name:Ljava/lang/String;
       4: invokevirtual #139                // Method java/lang/String.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #65                 // Field classLoaderHashCode:I
      16: iadd
      17: istore_1
      18: bipush        31
      20: iload_1
      21: imul
      22: aload_0
      23: getfield      #67                 // Field identification:I
      26: iadd
      27: istore_1
      28: iload_1
      29: ireturn

  public java.lang.String toString();
    Code:
       0: new           #143                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #148                // String Nexus{name=\'
       9: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #57                 // Field name:Ljava/lang/String;
      16: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        39
      21: invokevirtual #155                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: ldc           #157                // String , classLoaderHashCode=
      26: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #65                 // Field classLoaderHashCode:I
      33: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #162                // String , identification=
      38: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #67                 // Field identification:I
      45: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #164                // String , classLoader=
      50: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokevirtual #133                // Method get:()Ljava/lang/Object;
      57: invokevirtual #167                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: bipush        125
      62: invokevirtual #155                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: invokevirtual #169                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #38                 // Field NO_QUEUE:Ljava/lang/ref/ReferenceQueue;
       4: new           #172                // class java/util/concurrent/ConcurrentHashMap
       7: dup
       8: invokespecial #173                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      11: putstatic     #86                 // Field TYPE_INITIALIZERS:Ljava/util/concurrent/ConcurrentMap;
      14: return
}
