Compiled from "Floats.java"
public class org.assertj.core.internal.Floats extends org.assertj.core.internal.RealNumbers<java.lang.Float> {
  private static final org.assertj.core.internal.Floats INSTANCE;

  public static org.assertj.core.internal.Floats instance();
    Code:
       0: getstatic     #12                 // Field INSTANCE:Lorg/assertj/core/internal/Floats;
       3: areturn

  org.assertj.core.internal.Floats();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/assertj/core/internal/RealNumbers."<init>":()V
       4: return

  public org.assertj.core.internal.Floats(org.assertj.core.internal.ComparisonStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method org/assertj/core/internal/RealNumbers."<init>":(Lorg/assertj/core/internal/ComparisonStrategy;)V
       5: return

  protected java.lang.Float zero();
    Code:
       0: fconst_0
       1: invokestatic  #31                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       4: areturn

  protected java.lang.Float one();
    Code:
       0: fconst_1
       1: invokestatic  #31                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       4: areturn

  protected java.lang.Float NaN();
    Code:
       0: ldc           #34                 // float NaNf
       2: invokestatic  #31                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       5: areturn

  protected java.lang.Float absDiff(java.lang.Float, java.lang.Float);
    Code:
       0: aload_2
       1: invokevirtual #40                 // Method java/lang/Float.floatValue:()F
       4: aload_1
       5: invokevirtual #40                 // Method java/lang/Float.floatValue:()F
       8: fsub
       9: invokestatic  #46                 // Method java/lang/Math.abs:(F)F
      12: invokestatic  #31                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      15: areturn

  protected java.lang.Number NaN();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method NaN:()Ljava/lang/Float;
       4: areturn

  protected java.lang.Number absDiff(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class java/lang/Float
       5: aload_2
       6: checkcast     #27                 // class java/lang/Float
       9: invokevirtual #55                 // Method absDiff:(Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/Float;
      12: areturn

  protected java.lang.Number one();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method one:()Ljava/lang/Float;
       4: areturn

  protected java.lang.Number zero();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method zero:()Ljava/lang/Float;
       4: areturn

  static {};
    Code:
       0: new           #2                  // class org/assertj/core/internal/Floats
       3: dup
       4: invokespecial #61                 // Method "<init>":()V
       7: putstatic     #12                 // Field INSTANCE:Lorg/assertj/core/internal/Floats;
      10: return
}
