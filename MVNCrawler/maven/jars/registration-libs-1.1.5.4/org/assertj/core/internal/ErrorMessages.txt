Compiled from "ErrorMessages.java"
public final class org.assertj.core.internal.ErrorMessages {
  public static java.lang.String arrayIsNull();
    Code:
       0: ldc           #9                  // String The given array should not be null
       2: areturn

  public static java.lang.String arrayIsEmpty();
    Code:
       0: ldc           #12                 // String The given array should not be empty
       2: areturn

  public static java.lang.String iterableIsNull();
    Code:
       0: ldc           #15                 // String The given iterable should not be null
       2: areturn

  public static java.lang.String iterableIsEmpty();
    Code:
       0: ldc           #18                 // String The given iterable should not be empty
       2: areturn

  public static java.lang.String descriptionIsNull();
    Code:
       0: ldc           #21                 // String The description to set should not be null
       2: areturn

  public static java.lang.String keysToLookForIsEmpty();
    Code:
       0: ldc           #24                 // String The array of keys to look for should not be empty
       2: areturn

  public static java.lang.String keysToLookForIsNull();
    Code:
       0: ldc           #27                 // String The array of keys to look for should not be null
       2: areturn

  public static java.lang.String entriesToLookForIsEmpty();
    Code:
       0: ldc           #30                 // String The array of entries to look for should not be empty
       2: areturn

  public static java.lang.String entriesToLookForIsNull();
    Code:
       0: ldc           #33                 // String The array of entries to look for should not be null
       2: areturn

  public static java.lang.String entryToLookForIsNull();
    Code:
       0: ldc           #36                 // String Entries to look for should not be null
       2: areturn

  public static java.lang.String isNotArray(java.lang.Object);
    Code:
       0: ldc           #40                 // String The object <%s> should be an array
       2: iconst_1
       3: anewarray     #4                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: areturn

  public static java.lang.String iterableToLookForIsNull();
    Code:
       0: ldc           #51                 // String The iterable to look for should not be null
       2: areturn

  public static java.lang.String offsetIsNull();
    Code:
       0: ldc           #54                 // String The given offset should not be null
       2: areturn

  public static java.lang.String offsetValueIsNotPositive();
    Code:
       0: ldc           #57                 // String An offset value should be greater than or equal to zero
       2: areturn

  public static java.lang.String strictOffsetValueIsNotStrictlyPositive();
    Code:
       0: ldc           #60                 // String A strict offset value should be greater than zero
       2: areturn

  public static java.lang.String percentageValueIsInRange(java.lang.Number);
    Code:
       0: ldc           #64                 // String The percentage value <%s> should be greater than or equal to zero
       2: iconst_1
       3: anewarray     #4                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #70                 // Method java/lang/Number.doubleValue:()D
      12: invokestatic  #76                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      15: aastore
      16: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  public static java.lang.String regexPatternIsNull();
    Code:
       0: ldc           #81                 // String The regular expression pattern to match should not be null
       2: areturn

  public static java.lang.String charSequenceToLookForIsNull();
    Code:
       0: ldc           #84                 // String The char sequence to look for should not be null
       2: areturn

  public static java.lang.String valuesToLookForIsEmpty();
    Code:
       0: ldc           #87                 // String The array of values to look for should not be empty
       2: areturn

  public static java.lang.String valuesToLookForIsNull();
    Code:
       0: ldc           #90                 // String The array of values to look for should not be null
       2: areturn

  public static java.lang.String iterableValuesToLookForIsEmpty();
    Code:
       0: ldc           #93                 // String The iterable of values to look for should not be empty
       2: areturn

  public static java.lang.String iterableValuesToLookForIsNull();
    Code:
       0: ldc           #96                 // String The iterable of values to look for should not be null
       2: areturn

  public static java.lang.String dateToCompareActualWithIsNull();
    Code:
       0: ldc           #99                 // String The date to compare actual with should not be null
       2: areturn

  public static java.lang.String startDateToCompareActualWithIsNull();
    Code:
       0: ldc           #102                // String The start date of period to compare actual with should not be null
       2: areturn

  public static java.lang.String endDateToCompareActualWithIsNull();
    Code:
       0: ldc           #105                // String The end date of period to compare actual with should not be null
       2: areturn

  public static java.lang.String arrayOfValuesToLookForIsNull();
    Code:
       0: ldc           #90                 // String The array of values to look for should not be null
       2: areturn

  public static java.lang.String arrayOfValuesToLookForIsEmpty();
    Code:
       0: ldc           #87                 // String The array of values to look for should not be empty
       2: areturn

  public static java.lang.String predicateIsNull();
    Code:
       0: ldc           #110                // String The predicate must not be null
       2: areturn

  public static java.lang.String emptySequence();
    Code:
       0: ldc           #113                // String The sequence of values should not be empty
       2: areturn

  public static java.lang.String emptySubsequence();
    Code:
       0: ldc           #116                // String The subsequence of values should not be empty
       2: areturn

  public static java.lang.String nullSequence();
    Code:
       0: ldc           #119                // String The sequence of values should not be null
       2: areturn

  public static java.lang.String nullSubsequence();
    Code:
       0: ldc           #122                // String The subsequence of values should not be null
       2: areturn

  private org.assertj.core.internal.ErrorMessages();
    Code:
       0: aload_0
       1: invokespecial #126                // Method java/lang/Object."<init>":()V
       4: return
}
