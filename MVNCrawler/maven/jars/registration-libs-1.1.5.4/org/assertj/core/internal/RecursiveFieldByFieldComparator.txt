Compiled from "RecursiveFieldByFieldComparator.java"
public class org.assertj.core.internal.RecursiveFieldByFieldComparator extends org.assertj.core.internal.FieldByFieldComparator {
  public org.assertj.core.internal.RecursiveFieldByFieldComparator(java.util.Map<java.lang.String, java.util.Comparator<?>>, org.assertj.core.internal.TypeComparators);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method org/assertj/core/internal/FieldByFieldComparator."<init>":(Ljava/util/Map;Lorg/assertj/core/internal/TypeComparators;)V
       6: return

  protected boolean areEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #22                 // Field comparatorByPropertyOrField:Ljava/util/Map;
       6: aload_0
       7: getfield      #24                 // Field comparatorByType:Lorg/assertj/core/internal/TypeComparators;
      10: invokestatic  #30                 // Method org/assertj/core/internal/DeepDifference.determineDifferences:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/assertj/core/internal/TypeComparators;)Ljava/util/List;
      13: invokeinterface #36,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      18: ireturn
      19: astore_3
      20: iconst_0
      21: ireturn
    Exception table:
       from    to  target type
           0    18    19   Class org/assertj/core/util/introspection/IntrospectionError

  protected java.lang.String description();
    Code:
       0: ldc           #45                 // String recursive field/property by field/property comparator on all fields/properties
       2: areturn
}
