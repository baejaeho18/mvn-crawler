Compiled from "AgentBuilder.java"
public class org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$PrependableIterator implements java.util.Iterator<java.util.List<java.lang.Class<?>>> {
  private java.util.Iterator<? extends java.util.List<java.lang.Class<?>>> current;

  private final java.util.Deque<java.util.Iterator<? extends java.util.List<java.lang.Class<?>>>> backlog;

  protected org.assertj.core.internal.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector$PrependableIterator(java.lang.Iterable<? extends java.util.List<java.lang.Class<?>>>);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #34,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      11: putfield      #36                 // Field current:Ljava/util/Iterator;
      14: aload_0
      15: new           #38                 // class java/util/ArrayDeque
      18: dup
      19: invokespecial #39                 // Method java/util/ArrayDeque."<init>":()V
      22: putfield      #41                 // Field backlog:Ljava/util/Deque;
      25: return

  public void prepend(java.lang.Iterable<? extends java.util.List<java.lang.Class<?>>>);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          46
      16: aload_0
      17: getfield      #36                 // Field current:Ljava/util/Iterator;
      20: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          41
      28: aload_0
      29: getfield      #41                 // Field backlog:Ljava/util/Deque;
      32: aload_0
      33: getfield      #36                 // Field current:Ljava/util/Iterator;
      36: invokeinterface #57,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_2
      43: putfield      #36                 // Field current:Ljava/util/Iterator;
      46: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #36                 // Field current:Ljava/util/Iterator;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public java.util.List<java.lang.Class<?>> next();
    Code:
       0: aload_0
       1: getfield      #36                 // Field current:Ljava/util/Iterator;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #65                 // class java/util/List
      12: astore_1
      13: aload_0
      14: getfield      #36                 // Field current:Ljava/util/Iterator;
      17: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifne          56
      25: aload_0
      26: getfield      #41                 // Field backlog:Ljava/util/Deque;
      29: invokeinterface #68,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      34: ifne          56
      37: aload_0
      38: aload_0
      39: getfield      #41                 // Field backlog:Ljava/util/Deque;
      42: invokeinterface #71,  1           // InterfaceMethod java/util/Deque.removeLast:()Ljava/lang/Object;
      47: checkcast     #7                  // class java/util/Iterator
      50: putfield      #36                 // Field current:Ljava/util/Iterator;
      53: goto          13
      56: aload_1
      57: areturn
      58: astore_2
      59: aload_0
      60: getfield      #36                 // Field current:Ljava/util/Iterator;
      63: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifne          102
      71: aload_0
      72: getfield      #41                 // Field backlog:Ljava/util/Deque;
      75: invokeinterface #68,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      80: ifne          102
      83: aload_0
      84: aload_0
      85: getfield      #41                 // Field backlog:Ljava/util/Deque;
      88: invokeinterface #71,  1           // InterfaceMethod java/util/Deque.removeLast:()Ljava/lang/Object;
      93: checkcast     #7                  // class java/util/Iterator
      96: putfield      #36                 // Field current:Ljava/util/Iterator;
      99: goto          59
     102: aload_2
     103: athrow
    Exception table:
       from    to  target type
           0    13    58   any

  public void remove();
    Code:
       0: new           #76                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #77                 // String remove
       6: invokespecial #80                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method next:()Ljava/util/List;
       4: areturn
}
