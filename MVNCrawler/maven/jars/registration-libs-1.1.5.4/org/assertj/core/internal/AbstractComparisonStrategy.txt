Compiled from "AbstractComparisonStrategy.java"
public abstract class org.assertj.core.internal.AbstractComparisonStrategy implements org.assertj.core.internal.ComparisonStrategy {
  public org.assertj.core.internal.AbstractComparisonStrategy();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Iterable<?> duplicatesFrom(java.lang.Iterable<?>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method org/assertj/core/util/IterableUtil.isNullOrEmpty:(Ljava/lang/Iterable;)Z
       4: ifeq          11
       7: getstatic     #27                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      10: areturn
      11: aload_0
      12: invokevirtual #31                 // Method newSetUsingComparisonStrategy:()Ljava/util/Set;
      15: astore_2
      16: aload_0
      17: invokevirtual #31                 // Method newSetUsingComparisonStrategy:()Ljava/util/Set;
      20: astore_3
      21: aload_1
      22: invokeinterface #37,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          83
      39: aload         4
      41: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: astore        5
      48: aload_3
      49: aload         5
      51: invokeinterface #53,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      56: ifeq          71
      59: aload_2
      60: aload         5
      62: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      67: pop
      68: goto          80
      71: aload_3
      72: aload         5
      74: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          29
      83: aload_2
      84: areturn

  protected abstract java.util.Set<java.lang.Object> newSetUsingComparisonStrategy();

  public boolean arrayContains(java.lang.Object, java.lang.Object);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_1
       4: invokestatic  #72                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
       7: if_icmpge     35
      10: aload_1
      11: iload_3
      12: invokestatic  #76                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      15: astore        4
      17: aload_0
      18: aload         4
      20: aload_2
      21: invokevirtual #79                 // Method areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iinc          3, 1
      32: goto          2
      35: iconst_0
      36: ireturn

  public boolean isLessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #79                 // Method areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ifne          22
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #87                 // Method isGreaterThan:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isLessThanOrEqualTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #79                 // Method areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ifne          18
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #92                 // Method isLessThan:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isGreaterThanOrEqualTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #79                 // Method areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ifne          18
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #87                 // Method isGreaterThan:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public abstract java.lang.String asText();

  public boolean isStandard();
    Code:
       0: iconst_0
       1: ireturn
}
