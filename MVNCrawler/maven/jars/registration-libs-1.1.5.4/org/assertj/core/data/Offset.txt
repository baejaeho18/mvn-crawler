Compiled from "Offset.java"
public class org.assertj.core.data.Offset<T extends java.lang.Number> {
  public final T value;

  public final boolean strict;

  public static <T extends java.lang.Number> org.assertj.core.data.Offset<T> offset(T);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #25                 // Method java/lang/Number.doubleValue:()D
       9: dconst_0
      10: dcmpl
      11: iflt          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #27                 // String An offset value should be greater than or equal to zero
      21: iconst_0
      22: anewarray     #5                  // class java/lang/Object
      25: invokestatic  #31                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: new           #2                  // class org/assertj/core/data/Offset
      31: dup
      32: aload_0
      33: iconst_0
      34: invokespecial #35                 // Method "<init>":(Ljava/lang/Number;Z)V
      37: areturn

  public static <T extends java.lang.Number> org.assertj.core.data.Offset<T> strictOffset(T);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/assertj/core/util/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #25                 // Method java/lang/Number.doubleValue:()D
       9: dconst_0
      10: dcmpl
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #38                 // String A strict offset value should be greater than zero
      21: iconst_0
      22: anewarray     #5                  // class java/lang/Object
      25: invokestatic  #31                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: new           #2                  // class org/assertj/core/data/Offset
      31: dup
      32: aload_0
      33: iconst_1
      34: invokespecial #35                 // Method "<init>":(Ljava/lang/Number;Z)V
      37: areturn

  private org.assertj.core.data.Offset(T, boolean);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #43                 // Field value:Ljava/lang/Number;
       9: aload_0
      10: iload_2
      11: putfield      #45                 // Field strict:Z
      14: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #2                  // class org/assertj/core/data/Offset
      30: astore_2
      31: aload_0
      32: getfield      #45                 // Field strict:Z
      35: aload_2
      36: getfield      #45                 // Field strict:Z
      39: if_icmpne     60
      42: aload_0
      43: getfield      #43                 // Field value:Ljava/lang/Number;
      46: aload_2
      47: getfield      #43                 // Field value:Ljava/lang/Number;
      50: invokestatic  #60                 // Method org/assertj/core/util/Objects.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #5                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #43                 // Field value:Ljava/lang/Number;
      10: aastore
      11: invokestatic  #72                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #76                 // String %s[value=%s]
       2: iconst_2
       3: anewarray     #5                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #81                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #43                 // Field value:Ljava/lang/Number;
      22: aastore
      23: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: areturn
}
