Compiled from "Index.java"
public class org.assertj.core.data.Index {
  public final int value;

  public static org.assertj.core.data.Index atIndex(int);
    Code:
       0: iload_0
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #11                 // String The value of the index should not be negative
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokestatic  #17                 // Method org/assertj/core/util/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      18: new           #2                  // class org/assertj/core/data/Index
      21: dup
      22: iload_0
      23: invokespecial #21                 // Method "<init>":(I)V
      26: areturn

  private org.assertj.core.data.Index(int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #26                 // Field value:I
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #26                 // Field value:I
      30: aload_1
      31: checkcast     #2                  // class org/assertj/core/data/Index
      34: getfield      #26                 // Field value:I
      37: if_icmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: bipush        31
       4: iload_1
       5: imul
       6: aload_0
       7: getfield      #26                 // Field value:I
      10: iadd
      11: istore_1
      12: iload_1
      13: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #43                 // String %s[value=%d]
       2: iconst_2
       3: anewarray     #4                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #48                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #26                 // Field value:I
      22: invokestatic  #54                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: invokestatic  #60                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: areturn
}
