public class org.bouncycastle.pqc.math.linearalgebra.GF2Matrix extends org.bouncycastle.pqc.math.linearalgebra.Matrix {
  private int[][] matrix;

  private int length;

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(byte[]);
    Code:
       0: aload_0
       1: invokespecial #211                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: aload_1
       5: arraylength
       6: bipush        9
       8: if_icmpge     21
      11: new           #104                // class java/lang/ArithmeticException
      14: dup
      15: ldc           #7                  // String given array is not an encoded matrix over GF(2)
      17: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: iconst_0
      24: invokestatic  #210                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.OS2IP:([BI)I
      27: putfield      #173                // Field numRows:I
      30: aload_0
      31: aload_1
      32: iconst_4
      33: invokestatic  #210                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.OS2IP:([BI)I
      36: putfield      #172                // Field numColumns:I
      39: aload_0
      40: getfield      #172                // Field numColumns:I
      43: bipush        7
      45: iadd
      46: iconst_3
      47: iushr
      48: aload_0
      49: getfield      #173                // Field numRows:I
      52: imul
      53: istore_2
      54: aload_0
      55: getfield      #173                // Field numRows:I
      58: ifle          70
      61: iload_2
      62: aload_1
      63: arraylength
      64: bipush        8
      66: isub
      67: if_icmpeq     80
      70: new           #104                // class java/lang/ArithmeticException
      73: dup
      74: ldc           #7                  // String given array is not an encoded matrix over GF(2)
      76: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: aload_0
      82: getfield      #172                // Field numColumns:I
      85: bipush        31
      87: iadd
      88: iconst_5
      89: iushr
      90: putfield      #171                // Field length:I
      93: aload_0
      94: aload_0
      95: getfield      #173                // Field numRows:I
      98: aload_0
      99: getfield      #171                // Field length:I
     102: multianewarray #103,  2           // class "[[I"
     106: putfield      #174                // Field matrix:[[I
     109: aload_0
     110: getfield      #172                // Field numColumns:I
     113: iconst_5
     114: ishr
     115: istore_3
     116: aload_0
     117: getfield      #172                // Field numColumns:I
     120: bipush        31
     122: iand
     123: istore        4
     125: bipush        8
     127: istore        5
     129: iconst_0
     130: istore        6
     132: iload         6
     134: aload_0
     135: getfield      #173                // Field numRows:I
     138: if_icmpge     223
     141: iconst_0
     142: istore        7
     144: iload         7
     146: iload_3
     147: if_icmpge     175
     150: aload_0
     151: getfield      #174                // Field matrix:[[I
     154: iload         6
     156: aaload
     157: iload         7
     159: aload_1
     160: iload         5
     162: invokestatic  #210                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.OS2IP:([BI)I
     165: iastore
     166: iinc          7, 1
     169: iinc          5, 4
     172: goto          144
     175: iconst_0
     176: istore        7
     178: iload         7
     180: iload         4
     182: if_icmpge     217
     185: aload_0
     186: getfield      #174                // Field matrix:[[I
     189: iload         6
     191: aaload
     192: iload_3
     193: dup2
     194: iaload
     195: aload_1
     196: iload         5
     198: iinc          5, 1
     201: baload
     202: sipush        255
     205: iand
     206: iload         7
     208: ishl
     209: ixor
     210: iastore
     211: iinc          7, 8
     214: goto          178
     217: iinc          6, 1
     220: goto          132
     223: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, int[][]);
    Code:
       0: aload_0
       1: invokespecial #211                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: aload_2
       5: iconst_0
       6: aaload
       7: arraylength
       8: iload_1
       9: bipush        31
      11: iadd
      12: iconst_5
      13: ishr
      14: if_icmpeq     27
      17: new           #104                // class java/lang/ArithmeticException
      20: dup
      21: ldc           #2                  // String Int array does not match given number of columns.
      23: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: putfield      #172                // Field numColumns:I
      32: aload_0
      33: aload_2
      34: arraylength
      35: putfield      #173                // Field numRows:I
      38: aload_0
      39: aload_2
      40: iconst_0
      41: aaload
      42: arraylength
      43: putfield      #171                // Field length:I
      46: iload_1
      47: bipush        31
      49: iand
      50: istore_3
      51: iload_3
      52: ifne          61
      55: iconst_m1
      56: istore        4
      58: goto          68
      61: iconst_1
      62: iload_3
      63: ishl
      64: iconst_1
      65: isub
      66: istore        4
      68: iconst_0
      69: istore        5
      71: iload         5
      73: aload_0
      74: getfield      #173                // Field numRows:I
      77: if_icmpge     102
      80: aload_2
      81: iload         5
      83: aaload
      84: aload_0
      85: getfield      #171                // Field length:I
      88: iconst_1
      89: isub
      90: dup2
      91: iaload
      92: iload         4
      94: iand
      95: iastore
      96: iinc          5, 1
      99: goto          71
     102: aload_0
     103: aload_2
     104: putfield      #174                // Field matrix:[[I
     107: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, char);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: new           #108                // class java/security/SecureRandom
       6: dup
       7: invokespecial #189                // Method java/security/SecureRandom."<init>":()V
      10: invokespecial #199                // Method "<init>":(ICLjava/security/SecureRandom;)V
      13: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, char, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #211                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: iload_1
       5: ifgt          18
       8: new           #104                // class java/lang/ArithmeticException
      11: dup
      12: ldc           #4                  // String Size of matrix is non-positive.
      14: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_2
      19: lookupswitch  { // 5
                    73: 77
                    76: 85
                    82: 103
                    85: 94
                    90: 68
               default: 112
          }
      68: aload_0
      69: iload_1
      70: iload_1
      71: invokespecial #195                // Method assignZeroMatrix:(II)V
      74: goto          122
      77: aload_0
      78: iload_1
      79: invokespecial #192                // Method assignUnitMatrix:(I)V
      82: goto          122
      85: aload_0
      86: iload_1
      87: aload_3
      88: invokespecial #200                // Method assignRandomLowerTriangularMatrix:(ILjava/security/SecureRandom;)V
      91: goto          122
      94: aload_0
      95: iload_1
      96: aload_3
      97: invokespecial #202                // Method assignRandomUpperTriangularMatrix:(ILjava/security/SecureRandom;)V
     100: goto          122
     103: aload_0
     104: iload_1
     105: aload_3
     106: invokespecial #201                // Method assignRandomRegularMatrix:(ILjava/security/SecureRandom;)V
     109: goto          122
     112: new           #104                // class java/lang/ArithmeticException
     115: dup
     116: ldc           #5                  // String Unknown matrix type.
     118: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix);
    Code:
       0: aload_0
       1: invokespecial #211                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #190                // Method getNumColumns:()I
       9: putfield      #172                // Field numColumns:I
      12: aload_0
      13: aload_1
      14: invokevirtual #191                // Method getNumRows:()I
      17: putfield      #173                // Field numRows:I
      20: aload_0
      21: aload_1
      22: getfield      #171                // Field length:I
      25: putfield      #171                // Field length:I
      28: aload_0
      29: aload_1
      30: getfield      #174                // Field matrix:[[I
      33: arraylength
      34: anewarray     #102                // class "[I"
      37: putfield      #174                // Field matrix:[[I
      40: iconst_0
      41: istore_2
      42: iload_2
      43: aload_0
      44: getfield      #174                // Field matrix:[[I
      47: arraylength
      48: if_icmpge     72
      51: aload_0
      52: getfield      #174                // Field matrix:[[I
      55: iload_2
      56: aload_1
      57: getfield      #174                // Field matrix:[[I
      60: iload_2
      61: aaload
      62: invokestatic  #207                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      65: aastore
      66: iinc          2, 1
      69: goto          42
      72: return

  private org.bouncycastle.pqc.math.linearalgebra.GF2Matrix(int, int);
    Code:
       0: aload_0
       1: invokespecial #211                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: iload_2
       5: ifle          12
       8: iload_1
       9: ifgt          22
      12: new           #104                // class java/lang/ArithmeticException
      15: dup
      16: ldc           #10                 // String size of matrix is non-positive
      18: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: iload_1
      24: iload_2
      25: invokespecial #195                // Method assignZeroMatrix:(II)V
      28: return

  private void assignZeroMatrix(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #173                // Field numRows:I
       5: aload_0
       6: iload_2
       7: putfield      #172                // Field numColumns:I
      10: aload_0
      11: iload_2
      12: bipush        31
      14: iadd
      15: iconst_5
      16: iushr
      17: putfield      #171                // Field length:I
      20: aload_0
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: aload_0
      26: getfield      #171                // Field length:I
      29: multianewarray #103,  2           // class "[[I"
      33: putfield      #174                // Field matrix:[[I
      36: iconst_0
      37: istore_3
      38: iload_3
      39: aload_0
      40: getfield      #173                // Field numRows:I
      43: if_icmpge     80
      46: iconst_0
      47: istore        4
      49: iload         4
      51: aload_0
      52: getfield      #171                // Field length:I
      55: if_icmpge     74
      58: aload_0
      59: getfield      #174                // Field matrix:[[I
      62: iload_3
      63: aaload
      64: iload         4
      66: iconst_0
      67: iastore
      68: iinc          4, 1
      71: goto          49
      74: iinc          3, 1
      77: goto          38
      80: return

  private void assignUnitMatrix(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #173                // Field numRows:I
       5: aload_0
       6: iload_1
       7: putfield      #172                // Field numColumns:I
      10: aload_0
      11: iload_1
      12: bipush        31
      14: iadd
      15: iconst_5
      16: iushr
      17: putfield      #171                // Field length:I
      20: aload_0
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: aload_0
      26: getfield      #171                // Field length:I
      29: multianewarray #103,  2           // class "[[I"
      33: putfield      #174                // Field matrix:[[I
      36: iconst_0
      37: istore_2
      38: iload_2
      39: aload_0
      40: getfield      #173                // Field numRows:I
      43: if_icmpge     77
      46: iconst_0
      47: istore_3
      48: iload_3
      49: aload_0
      50: getfield      #171                // Field length:I
      53: if_icmpge     71
      56: aload_0
      57: getfield      #174                // Field matrix:[[I
      60: iload_2
      61: aaload
      62: iload_3
      63: iconst_0
      64: iastore
      65: iinc          3, 1
      68: goto          48
      71: iinc          2, 1
      74: goto          38
      77: iconst_0
      78: istore_2
      79: iload_2
      80: aload_0
      81: getfield      #173                // Field numRows:I
      84: if_icmpge     111
      87: iload_2
      88: bipush        31
      90: iand
      91: istore_3
      92: aload_0
      93: getfield      #174                // Field matrix:[[I
      96: iload_2
      97: aaload
      98: iload_2
      99: iconst_5
     100: iushr
     101: iconst_1
     102: iload_3
     103: ishl
     104: iastore
     105: iinc          2, 1
     108: goto          79
     111: return

  private void assignRandomLowerTriangularMatrix(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #173                // Field numRows:I
       5: aload_0
       6: iload_1
       7: putfield      #172                // Field numColumns:I
      10: aload_0
      11: iload_1
      12: bipush        31
      14: iadd
      15: iconst_5
      16: iushr
      17: putfield      #171                // Field length:I
      20: aload_0
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: aload_0
      26: getfield      #171                // Field length:I
      29: multianewarray #103,  2           // class "[[I"
      33: putfield      #174                // Field matrix:[[I
      36: iconst_0
      37: istore_3
      38: iload_3
      39: aload_0
      40: getfield      #173                // Field numRows:I
      43: if_icmpge     155
      46: iload_3
      47: iconst_5
      48: iushr
      49: istore        4
      51: iload_3
      52: bipush        31
      54: iand
      55: istore        5
      57: bipush        31
      59: iload         5
      61: isub
      62: istore        6
      64: iconst_1
      65: iload         5
      67: ishl
      68: istore        5
      70: iconst_0
      71: istore        7
      73: iload         7
      75: iload         4
      77: if_icmpge     99
      80: aload_0
      81: getfield      #174                // Field matrix:[[I
      84: iload_3
      85: aaload
      86: iload         7
      88: aload_2
      89: invokevirtual #188                // Method java/security/SecureRandom.nextInt:()I
      92: iastore
      93: iinc          7, 1
      96: goto          73
      99: aload_0
     100: getfield      #174                // Field matrix:[[I
     103: iload_3
     104: aaload
     105: iload         4
     107: aload_2
     108: invokevirtual #188                // Method java/security/SecureRandom.nextInt:()I
     111: iload         6
     113: iushr
     114: iload         5
     116: ior
     117: iastore
     118: iload         4
     120: iconst_1
     121: iadd
     122: istore        7
     124: iload         7
     126: aload_0
     127: getfield      #171                // Field length:I
     130: if_icmpge     149
     133: aload_0
     134: getfield      #174                // Field matrix:[[I
     137: iload_3
     138: aaload
     139: iload         7
     141: iconst_0
     142: iastore
     143: iinc          7, 1
     146: goto          124
     149: iinc          3, 1
     152: goto          38
     155: return

  private void assignRandomUpperTriangularMatrix(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #173                // Field numRows:I
       5: aload_0
       6: iload_1
       7: putfield      #172                // Field numColumns:I
      10: aload_0
      11: iload_1
      12: bipush        31
      14: iadd
      15: iconst_5
      16: iushr
      17: putfield      #171                // Field length:I
      20: aload_0
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: aload_0
      26: getfield      #171                // Field length:I
      29: multianewarray #103,  2           // class "[[I"
      33: putfield      #174                // Field matrix:[[I
      36: iload_1
      37: bipush        31
      39: iand
      40: istore_3
      41: iload_3
      42: ifne          51
      45: iconst_m1
      46: istore        4
      48: goto          58
      51: iconst_1
      52: iload_3
      53: ishl
      54: iconst_1
      55: isub
      56: istore        4
      58: iconst_0
      59: istore        5
      61: iload         5
      63: aload_0
      64: getfield      #173                // Field numRows:I
      67: if_icmpge     200
      70: iload         5
      72: iconst_5
      73: iushr
      74: istore        6
      76: iload         5
      78: bipush        31
      80: iand
      81: istore        7
      83: iload         7
      85: istore        8
      87: iconst_1
      88: iload         7
      90: ishl
      91: istore        7
      93: iconst_0
      94: istore        9
      96: iload         9
      98: iload         6
     100: if_icmpge     120
     103: aload_0
     104: getfield      #174                // Field matrix:[[I
     107: iload         5
     109: aaload
     110: iload         9
     112: iconst_0
     113: iastore
     114: iinc          9, 1
     117: goto          96
     120: aload_0
     121: getfield      #174                // Field matrix:[[I
     124: iload         5
     126: aaload
     127: iload         6
     129: aload_2
     130: invokevirtual #188                // Method java/security/SecureRandom.nextInt:()I
     133: iload         8
     135: ishl
     136: iload         7
     138: ior
     139: iastore
     140: iload         6
     142: iconst_1
     143: iadd
     144: istore        9
     146: iload         9
     148: aload_0
     149: getfield      #171                // Field length:I
     152: if_icmpge     175
     155: aload_0
     156: getfield      #174                // Field matrix:[[I
     159: iload         5
     161: aaload
     162: iload         9
     164: aload_2
     165: invokevirtual #188                // Method java/security/SecureRandom.nextInt:()I
     168: iastore
     169: iinc          9, 1
     172: goto          146
     175: aload_0
     176: getfield      #174                // Field matrix:[[I
     179: iload         5
     181: aaload
     182: aload_0
     183: getfield      #171                // Field length:I
     186: iconst_1
     187: isub
     188: dup2
     189: iaload
     190: iload         4
     192: iand
     193: iastore
     194: iinc          5, 1
     197: goto          61
     200: return

  private void assignRandomRegularMatrix(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #173                // Field numRows:I
       5: aload_0
       6: iload_1
       7: putfield      #172                // Field numColumns:I
      10: aload_0
      11: iload_1
      12: bipush        31
      14: iadd
      15: iconst_5
      16: iushr
      17: putfield      #171                // Field length:I
      20: aload_0
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: aload_0
      26: getfield      #171                // Field length:I
      29: multianewarray #103,  2           // class "[[I"
      33: putfield      #174                // Field matrix:[[I
      36: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      39: dup
      40: iload_1
      41: bipush        76
      43: aload_2
      44: invokespecial #199                // Method "<init>":(ICLjava/security/SecureRandom;)V
      47: astore_3
      48: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      51: dup
      52: iload_1
      53: bipush        85
      55: aload_2
      56: invokespecial #199                // Method "<init>":(ICLjava/security/SecureRandom;)V
      59: astore        4
      61: aload_3
      62: aload         4
      64: invokevirtual #203                // Method rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      67: checkcast     #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      70: astore        5
      72: new           #114                // class org/bouncycastle/pqc/math/linearalgebra/Permutation
      75: dup
      76: iload_1
      77: aload_2
      78: invokespecial #213                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation."<init>":(ILjava/security/SecureRandom;)V
      81: astore        6
      83: aload         6
      85: invokevirtual #212                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.getVector:()[I
      88: astore        7
      90: iconst_0
      91: istore        8
      93: iload         8
      95: iload_1
      96: if_icmpge     132
      99: aload         5
     101: getfield      #174                // Field matrix:[[I
     104: iload         8
     106: aaload
     107: iconst_0
     108: aload_0
     109: getfield      #174                // Field matrix:[[I
     112: aload         7
     114: iload         8
     116: iaload
     117: aaload
     118: iconst_0
     119: aload_0
     120: getfield      #171                // Field length:I
     123: invokestatic  #187                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     126: iinc          8, 1
     129: goto          93
     132: return

  public static org.bouncycastle.pqc.math.linearalgebra.GF2Matrix[] createRandomRegularMatrixAndItsInverse(int, java.security.SecureRandom);
    Code:
       0: iconst_2
       1: anewarray     #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
       4: astore_2
       5: iload_0
       6: bipush        31
       8: iadd
       9: iconst_5
      10: ishr
      11: istore_3
      12: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      15: dup
      16: iload_0
      17: bipush        76
      19: aload_1
      20: invokespecial #199                // Method "<init>":(ICLjava/security/SecureRandom;)V
      23: astore        4
      25: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      28: dup
      29: iload_0
      30: bipush        85
      32: aload_1
      33: invokespecial #199                // Method "<init>":(ICLjava/security/SecureRandom;)V
      36: astore        5
      38: aload         4
      40: aload         5
      42: invokevirtual #203                // Method rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      45: checkcast     #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      48: astore        6
      50: new           #114                // class org/bouncycastle/pqc/math/linearalgebra/Permutation
      53: dup
      54: iload_0
      55: aload_1
      56: invokespecial #213                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation."<init>":(ILjava/security/SecureRandom;)V
      59: astore        7
      61: aload         7
      63: invokevirtual #212                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.getVector:()[I
      66: astore        8
      68: iload_0
      69: iload_3
      70: multianewarray #103,  2           // class "[[I"
      74: astore        9
      76: iconst_0
      77: istore        10
      79: iload         10
      81: iload_0
      82: if_icmpge     113
      85: aload         6
      87: getfield      #174                // Field matrix:[[I
      90: aload         8
      92: iload         10
      94: iaload
      95: aaload
      96: iconst_0
      97: aload         9
      99: iload         10
     101: aaload
     102: iconst_0
     103: iload_3
     104: invokestatic  #187                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: iinc          10, 1
     110: goto          79
     113: aload_2
     114: iconst_0
     115: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     118: dup
     119: iload_0
     120: aload         9
     122: invokespecial #196                // Method "<init>":(I[[I)V
     125: aastore
     126: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     129: dup
     130: iload_0
     131: bipush        73
     133: invokespecial #193                // Method "<init>":(IC)V
     136: astore        10
     138: iconst_0
     139: istore        11
     141: iload         11
     143: iload_0
     144: if_icmpge     252
     147: iload         11
     149: bipush        31
     151: iand
     152: istore        12
     154: iload         11
     156: iconst_5
     157: iushr
     158: istore        13
     160: iconst_1
     161: iload         12
     163: ishl
     164: istore        14
     166: iload         11
     168: iconst_1
     169: iadd
     170: istore        15
     172: iload         15
     174: iload_0
     175: if_icmpge     246
     178: aload         4
     180: getfield      #174                // Field matrix:[[I
     183: iload         15
     185: aaload
     186: iload         13
     188: iaload
     189: iload         14
     191: iand
     192: istore        16
     194: iload         16
     196: ifeq          240
     199: iconst_0
     200: istore        17
     202: iload         17
     204: iload         13
     206: if_icmpgt     240
     209: aload         10
     211: getfield      #174                // Field matrix:[[I
     214: iload         15
     216: aaload
     217: iload         17
     219: dup2
     220: iaload
     221: aload         10
     223: getfield      #174                // Field matrix:[[I
     226: iload         11
     228: aaload
     229: iload         17
     231: iaload
     232: ixor
     233: iastore
     234: iinc          17, 1
     237: goto          202
     240: iinc          15, 1
     243: goto          172
     246: iinc          11, 1
     249: goto          141
     252: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     255: dup
     256: iload_0
     257: bipush        73
     259: invokespecial #193                // Method "<init>":(IC)V
     262: astore        11
     264: iload_0
     265: iconst_1
     266: isub
     267: istore        12
     269: iload         12
     271: iflt          378
     274: iload         12
     276: bipush        31
     278: iand
     279: istore        13
     281: iload         12
     283: iconst_5
     284: iushr
     285: istore        14
     287: iconst_1
     288: iload         13
     290: ishl
     291: istore        15
     293: iload         12
     295: iconst_1
     296: isub
     297: istore        16
     299: iload         16
     301: iflt          372
     304: aload         5
     306: getfield      #174                // Field matrix:[[I
     309: iload         16
     311: aaload
     312: iload         14
     314: iaload
     315: iload         15
     317: iand
     318: istore        17
     320: iload         17
     322: ifeq          366
     325: iload         14
     327: istore        18
     329: iload         18
     331: iload_3
     332: if_icmpge     366
     335: aload         11
     337: getfield      #174                // Field matrix:[[I
     340: iload         16
     342: aaload
     343: iload         18
     345: dup2
     346: iaload
     347: aload         11
     349: getfield      #174                // Field matrix:[[I
     352: iload         12
     354: aaload
     355: iload         18
     357: iaload
     358: ixor
     359: iastore
     360: iinc          18, 1
     363: goto          329
     366: iinc          16, -1
     369: goto          299
     372: iinc          12, -1
     375: goto          269
     378: aload_2
     379: iconst_1
     380: aload         11
     382: aload         10
     384: aload         7
     386: invokevirtual #204                // Method rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
     389: invokevirtual #203                // Method rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
     392: checkcast     #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     395: aastore
     396: aload_2
     397: areturn

  public int[][] getIntArray();
    Code:
       0: aload_0
       1: getfield      #174                // Field matrix:[[I
       4: areturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #171                // Field length:I
       4: ireturn

  public int[] getRow(int);
    Code:
       0: aload_0
       1: getfield      #174                // Field matrix:[[I
       4: iload_1
       5: aaload
       6: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #172                // Field numColumns:I
       4: bipush        7
       6: iadd
       7: iconst_3
       8: iushr
       9: istore_1
      10: iload_1
      11: aload_0
      12: getfield      #173                // Field numRows:I
      15: imul
      16: istore_1
      17: iinc          1, 8
      20: iload_1
      21: newarray       byte
      23: astore_2
      24: aload_0
      25: getfield      #173                // Field numRows:I
      28: aload_2
      29: iconst_0
      30: invokestatic  #209                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.I2OSP:(I[BI)V
      33: aload_0
      34: getfield      #172                // Field numColumns:I
      37: aload_2
      38: iconst_4
      39: invokestatic  #209                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.I2OSP:(I[BI)V
      42: aload_0
      43: getfield      #172                // Field numColumns:I
      46: iconst_5
      47: iushr
      48: istore_3
      49: aload_0
      50: getfield      #172                // Field numColumns:I
      53: bipush        31
      55: iand
      56: istore        4
      58: bipush        8
      60: istore        5
      62: iconst_0
      63: istore        6
      65: iload         6
      67: aload_0
      68: getfield      #173                // Field numRows:I
      71: if_icmpge     154
      74: iconst_0
      75: istore        7
      77: iload         7
      79: iload_3
      80: if_icmpge     108
      83: aload_0
      84: getfield      #174                // Field matrix:[[I
      87: iload         6
      89: aaload
      90: iload         7
      92: iaload
      93: aload_2
      94: iload         5
      96: invokestatic  #209                // Method org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.I2OSP:(I[BI)V
      99: iinc          7, 1
     102: iinc          5, 4
     105: goto          77
     108: iconst_0
     109: istore        7
     111: iload         7
     113: iload         4
     115: if_icmpge     148
     118: aload_2
     119: iload         5
     121: iinc          5, 1
     124: aload_0
     125: getfield      #174                // Field matrix:[[I
     128: iload         6
     130: aaload
     131: iload_3
     132: iaload
     133: iload         7
     135: iushr
     136: sipush        255
     139: iand
     140: i2b
     141: bastore
     142: iinc          7, 8
     145: goto          111
     148: iinc          6, 1
     151: goto          65
     154: aload_2
     155: areturn

  public double getHammingWeight();
    Code:
       0: dconst_0
       1: dstore_1
       2: dconst_0
       3: dstore_3
       4: aload_0
       5: getfield      #172                // Field numColumns:I
       8: bipush        31
      10: iand
      11: istore        5
      13: iload         5
      15: ifne          27
      18: aload_0
      19: getfield      #171                // Field length:I
      22: istore        6
      24: goto          35
      27: aload_0
      28: getfield      #171                // Field length:I
      31: iconst_1
      32: isub
      33: istore        6
      35: iconst_0
      36: istore        7
      38: iload         7
      40: aload_0
      41: getfield      #173                // Field numRows:I
      44: if_icmpge     167
      47: iconst_0
      48: istore        8
      50: iload         8
      52: iload         6
      54: if_icmpge     110
      57: aload_0
      58: getfield      #174                // Field matrix:[[I
      61: iload         7
      63: aaload
      64: iload         8
      66: iaload
      67: istore        9
      69: iconst_0
      70: istore        10
      72: iload         10
      74: bipush        32
      76: if_icmpge     104
      79: iload         9
      81: iload         10
      83: iushr
      84: iconst_1
      85: iand
      86: istore        11
      88: dload_1
      89: iload         11
      91: i2d
      92: dadd
      93: dstore_1
      94: dload_3
      95: dconst_1
      96: dadd
      97: dstore_3
      98: iinc          10, 1
     101: goto          72
     104: iinc          8, 1
     107: goto          50
     110: aload_0
     111: getfield      #174                // Field matrix:[[I
     114: iload         7
     116: aaload
     117: aload_0
     118: getfield      #171                // Field length:I
     121: iconst_1
     122: isub
     123: iaload
     124: istore        8
     126: iconst_0
     127: istore        9
     129: iload         9
     131: iload         5
     133: if_icmpge     161
     136: iload         8
     138: iload         9
     140: iushr
     141: iconst_1
     142: iand
     143: istore        10
     145: dload_1
     146: iload         10
     148: i2d
     149: dadd
     150: dstore_1
     151: dload_3
     152: dconst_1
     153: dadd
     154: dstore_3
     155: iinc          9, 1
     158: goto          129
     161: iinc          7, 1
     164: goto          38
     167: dload_1
     168: dload_3
     169: ddiv
     170: dreturn

  public boolean isZero();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #173                // Field numRows:I
       7: if_icmpge     45
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: getfield      #171                // Field length:I
      17: if_icmpge     39
      20: aload_0
      21: getfield      #174                // Field matrix:[[I
      24: iload_1
      25: aaload
      26: iload_2
      27: iaload
      28: ifeq          33
      31: iconst_0
      32: ireturn
      33: iinc          2, 1
      36: goto          12
      39: iinc          1, 1
      42: goto          2
      45: iconst_1
      46: ireturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getLeftSubMatrix();
    Code:
       0: aload_0
       1: getfield      #172                // Field numColumns:I
       4: aload_0
       5: getfield      #173                // Field numRows:I
       8: if_icmpgt     21
      11: new           #104                // class java/lang/ArithmeticException
      14: dup
      15: ldc           #6                  // String empty submatrix
      17: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: bipush        31
      27: iadd
      28: iconst_5
      29: ishr
      30: istore_1
      31: aload_0
      32: getfield      #173                // Field numRows:I
      35: iload_1
      36: multianewarray #103,  2           // class "[[I"
      40: astore_2
      41: iconst_1
      42: aload_0
      43: getfield      #173                // Field numRows:I
      46: bipush        31
      48: iand
      49: ishl
      50: iconst_1
      51: isub
      52: istore_3
      53: iload_3
      54: ifne          59
      57: iconst_m1
      58: istore_3
      59: aload_0
      60: getfield      #173                // Field numRows:I
      63: iconst_1
      64: isub
      65: istore        4
      67: iload         4
      69: iflt          107
      72: aload_0
      73: getfield      #174                // Field matrix:[[I
      76: iload         4
      78: aaload
      79: iconst_0
      80: aload_2
      81: iload         4
      83: aaload
      84: iconst_0
      85: iload_1
      86: invokestatic  #187                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload_2
      90: iload         4
      92: aaload
      93: iload_1
      94: iconst_1
      95: isub
      96: dup2
      97: iaload
      98: iload_3
      99: iand
     100: iastore
     101: iinc          4, -1
     104: goto          67
     107: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     110: dup
     111: aload_0
     112: getfield      #173                // Field numRows:I
     115: aload_2
     116: invokespecial #196                // Method "<init>":(I[[I)V
     119: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix extendLeftCompactForm();
    Code:
       0: aload_0
       1: getfield      #172                // Field numColumns:I
       4: aload_0
       5: getfield      #173                // Field numRows:I
       8: iadd
       9: istore_1
      10: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      13: dup
      14: aload_0
      15: getfield      #173                // Field numRows:I
      18: iload_1
      19: invokespecial #194                // Method "<init>":(II)V
      22: astore_2
      23: aload_0
      24: getfield      #173                // Field numRows:I
      27: iconst_1
      28: isub
      29: aload_0
      30: getfield      #172                // Field numColumns:I
      33: iadd
      34: istore_3
      35: aload_0
      36: getfield      #173                // Field numRows:I
      39: iconst_1
      40: isub
      41: istore        4
      43: iload         4
      45: iflt          100
      48: aload_0
      49: getfield      #174                // Field matrix:[[I
      52: iload         4
      54: aaload
      55: iconst_0
      56: aload_2
      57: getfield      #174                // Field matrix:[[I
      60: iload         4
      62: aaload
      63: iconst_0
      64: aload_0
      65: getfield      #171                // Field length:I
      68: invokestatic  #187                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_2
      72: getfield      #174                // Field matrix:[[I
      75: iload         4
      77: aaload
      78: iload_3
      79: iconst_5
      80: ishr
      81: dup2
      82: iaload
      83: iconst_1
      84: iload_3
      85: bipush        31
      87: iand
      88: ishl
      89: ior
      90: iastore
      91: iinc          4, -1
      94: iinc          3, -1
      97: goto          43
     100: aload_2
     101: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix getRightSubMatrix();
    Code:
       0: aload_0
       1: getfield      #172                // Field numColumns:I
       4: aload_0
       5: getfield      #173                // Field numRows:I
       8: if_icmpgt     21
      11: new           #104                // class java/lang/ArithmeticException
      14: dup
      15: ldc           #6                  // String empty submatrix
      17: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: iconst_5
      26: ishr
      27: istore_1
      28: aload_0
      29: getfield      #173                // Field numRows:I
      32: bipush        31
      34: iand
      35: istore_2
      36: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      39: dup
      40: aload_0
      41: getfield      #173                // Field numRows:I
      44: aload_0
      45: getfield      #172                // Field numColumns:I
      48: aload_0
      49: getfield      #173                // Field numRows:I
      52: isub
      53: invokespecial #194                // Method "<init>":(II)V
      56: astore_3
      57: aload_0
      58: getfield      #173                // Field numRows:I
      61: iconst_1
      62: isub
      63: istore        4
      65: iload         4
      67: iflt          240
      70: iload_2
      71: ifeq          211
      74: iload_1
      75: istore        5
      77: iconst_0
      78: istore        6
      80: iload         6
      82: aload_3
      83: getfield      #171                // Field length:I
      86: iconst_1
      87: isub
      88: if_icmpge     138
      91: aload_3
      92: getfield      #174                // Field matrix:[[I
      95: iload         4
      97: aaload
      98: iload         6
     100: aload_0
     101: getfield      #174                // Field matrix:[[I
     104: iload         4
     106: aaload
     107: iload         5
     109: iinc          5, 1
     112: iaload
     113: iload_2
     114: iushr
     115: aload_0
     116: getfield      #174                // Field matrix:[[I
     119: iload         4
     121: aaload
     122: iload         5
     124: iaload
     125: bipush        32
     127: iload_2
     128: isub
     129: ishl
     130: ior
     131: iastore
     132: iinc          6, 1
     135: goto          80
     138: aload_3
     139: getfield      #174                // Field matrix:[[I
     142: iload         4
     144: aaload
     145: aload_3
     146: getfield      #171                // Field length:I
     149: iconst_1
     150: isub
     151: aload_0
     152: getfield      #174                // Field matrix:[[I
     155: iload         4
     157: aaload
     158: iload         5
     160: iinc          5, 1
     163: iaload
     164: iload_2
     165: iushr
     166: iastore
     167: iload         5
     169: aload_0
     170: getfield      #171                // Field length:I
     173: if_icmpge     208
     176: aload_3
     177: getfield      #174                // Field matrix:[[I
     180: iload         4
     182: aaload
     183: aload_3
     184: getfield      #171                // Field length:I
     187: iconst_1
     188: isub
     189: dup2
     190: iaload
     191: aload_0
     192: getfield      #174                // Field matrix:[[I
     195: iload         4
     197: aaload
     198: iload         5
     200: iaload
     201: bipush        32
     203: iload_2
     204: isub
     205: ishl
     206: ior
     207: iastore
     208: goto          234
     211: aload_0
     212: getfield      #174                // Field matrix:[[I
     215: iload         4
     217: aaload
     218: iload_1
     219: aload_3
     220: getfield      #174                // Field matrix:[[I
     223: iload         4
     225: aaload
     226: iconst_0
     227: aload_3
     228: getfield      #171                // Field length:I
     231: invokestatic  #187                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     234: iinc          4, -1
     237: goto          65
     240: aload_3
     241: areturn

  public org.bouncycastle.pqc.math.linearalgebra.GF2Matrix extendRightCompactForm();
    Code:
       0: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
       3: dup
       4: aload_0
       5: getfield      #173                // Field numRows:I
       8: aload_0
       9: getfield      #173                // Field numRows:I
      12: aload_0
      13: getfield      #172                // Field numColumns:I
      16: iadd
      17: invokespecial #194                // Method "<init>":(II)V
      20: astore_1
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: iconst_5
      26: ishr
      27: istore_2
      28: aload_0
      29: getfield      #173                // Field numRows:I
      32: bipush        31
      34: iand
      35: istore_3
      36: aload_0
      37: getfield      #173                // Field numRows:I
      40: iconst_1
      41: isub
      42: istore        4
      44: iload         4
      46: iflt          247
      49: aload_1
      50: getfield      #174                // Field matrix:[[I
      53: iload         4
      55: aaload
      56: iload         4
      58: iconst_5
      59: ishr
      60: dup2
      61: iaload
      62: iconst_1
      63: iload         4
      65: bipush        31
      67: iand
      68: ishl
      69: ior
      70: iastore
      71: iload_3
      72: ifeq          218
      75: iload_2
      76: istore        5
      78: iconst_0
      79: istore        6
      81: iload         6
      83: aload_0
      84: getfield      #171                // Field length:I
      87: iconst_1
      88: isub
      89: if_icmpge     150
      92: aload_0
      93: getfield      #174                // Field matrix:[[I
      96: iload         4
      98: aaload
      99: iload         6
     101: iaload
     102: istore        7
     104: aload_1
     105: getfield      #174                // Field matrix:[[I
     108: iload         4
     110: aaload
     111: iload         5
     113: iinc          5, 1
     116: dup2
     117: iaload
     118: iload         7
     120: iload_3
     121: ishl
     122: ior
     123: iastore
     124: aload_1
     125: getfield      #174                // Field matrix:[[I
     128: iload         4
     130: aaload
     131: iload         5
     133: dup2
     134: iaload
     135: iload         7
     137: bipush        32
     139: iload_3
     140: isub
     141: iushr
     142: ior
     143: iastore
     144: iinc          6, 1
     147: goto          81
     150: aload_0
     151: getfield      #174                // Field matrix:[[I
     154: iload         4
     156: aaload
     157: aload_0
     158: getfield      #171                // Field length:I
     161: iconst_1
     162: isub
     163: iaload
     164: istore        6
     166: aload_1
     167: getfield      #174                // Field matrix:[[I
     170: iload         4
     172: aaload
     173: iload         5
     175: iinc          5, 1
     178: dup2
     179: iaload
     180: iload         6
     182: iload_3
     183: ishl
     184: ior
     185: iastore
     186: iload         5
     188: aload_1
     189: getfield      #171                // Field length:I
     192: if_icmpge     215
     195: aload_1
     196: getfield      #174                // Field matrix:[[I
     199: iload         4
     201: aaload
     202: iload         5
     204: dup2
     205: iaload
     206: iload         6
     208: bipush        32
     210: iload_3
     211: isub
     212: iushr
     213: ior
     214: iastore
     215: goto          241
     218: aload_0
     219: getfield      #174                // Field matrix:[[I
     222: iload         4
     224: aaload
     225: iconst_0
     226: aload_1
     227: getfield      #174                // Field matrix:[[I
     230: iload         4
     232: aaload
     233: iload_2
     234: aload_0
     235: getfield      #171                // Field length:I
     238: invokestatic  #187                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     241: iinc          4, -1
     244: goto          44
     247: aload_1
     248: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Matrix computeTranspose();
    Code:
       0: aload_0
       1: getfield      #172                // Field numColumns:I
       4: aload_0
       5: getfield      #173                // Field numRows:I
       8: bipush        31
      10: iadd
      11: iconst_5
      12: iushr
      13: multianewarray #103,  2           // class "[[I"
      17: astore_1
      18: iconst_0
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: if_icmpge     107
      28: iconst_0
      29: istore_3
      30: iload_3
      31: aload_0
      32: getfield      #172                // Field numColumns:I
      35: if_icmpge     101
      38: iload_3
      39: iconst_5
      40: iushr
      41: istore        4
      43: iload_3
      44: bipush        31
      46: iand
      47: istore        5
      49: aload_0
      50: getfield      #174                // Field matrix:[[I
      53: iload_2
      54: aaload
      55: iload         4
      57: iaload
      58: iload         5
      60: iushr
      61: iconst_1
      62: iand
      63: istore        6
      65: iload_2
      66: iconst_5
      67: iushr
      68: istore        7
      70: iload_2
      71: bipush        31
      73: iand
      74: istore        8
      76: iload         6
      78: iconst_1
      79: if_icmpne     95
      82: aload_1
      83: iload_3
      84: aaload
      85: iload         7
      87: dup2
      88: iaload
      89: iconst_1
      90: iload         8
      92: ishl
      93: ior
      94: iastore
      95: iinc          3, 1
      98: goto          30
     101: iinc          2, 1
     104: goto          20
     107: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     110: dup
     111: aload_0
     112: getfield      #173                // Field numRows:I
     115: aload_1
     116: invokespecial #196                // Method "<init>":(I[[I)V
     119: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Matrix computeInverse();
    Code:
       0: aload_0
       1: getfield      #173                // Field numRows:I
       4: aload_0
       5: getfield      #172                // Field numColumns:I
       8: if_icmpeq     21
      11: new           #104                // class java/lang/ArithmeticException
      14: dup
      15: ldc           #3                  // String Matrix is not invertible.
      17: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: aload_0
      26: getfield      #171                // Field length:I
      29: multianewarray #103,  2           // class "[[I"
      33: astore_1
      34: aload_0
      35: getfield      #173                // Field numRows:I
      38: iconst_1
      39: isub
      40: istore_2
      41: iload_2
      42: iflt          63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #174                // Field matrix:[[I
      51: iload_2
      52: aaload
      53: invokestatic  #207                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      56: aastore
      57: iinc          2, -1
      60: goto          41
      63: aload_0
      64: getfield      #173                // Field numRows:I
      67: aload_0
      68: getfield      #171                // Field length:I
      71: multianewarray #103,  2           // class "[[I"
      75: astore_2
      76: aload_0
      77: getfield      #173                // Field numRows:I
      80: iconst_1
      81: isub
      82: istore_3
      83: iload_3
      84: iflt          114
      87: iload_3
      88: iconst_5
      89: ishr
      90: istore        4
      92: iload_3
      93: bipush        31
      95: iand
      96: istore        5
      98: aload_2
      99: iload_3
     100: aaload
     101: iload         4
     103: iconst_1
     104: iload         5
     106: ishl
     107: iastore
     108: iinc          3, -1
     111: goto          83
     114: iconst_0
     115: istore_3
     116: iload_3
     117: aload_0
     118: getfield      #173                // Field numRows:I
     121: if_icmpge     290
     124: iload_3
     125: iconst_5
     126: ishr
     127: istore        4
     129: iconst_1
     130: iload_3
     131: bipush        31
     133: iand
     134: ishl
     135: istore        5
     137: aload_1
     138: iload_3
     139: aaload
     140: iload         4
     142: iaload
     143: iload         5
     145: iand
     146: ifne          223
     149: iconst_0
     150: istore        6
     152: iload_3
     153: iconst_1
     154: iadd
     155: istore        7
     157: iload         7
     159: aload_0
     160: getfield      #173                // Field numRows:I
     163: if_icmpge     208
     166: aload_1
     167: iload         7
     169: aaload
     170: iload         4
     172: iaload
     173: iload         5
     175: iand
     176: ifeq          202
     179: iconst_1
     180: istore        6
     182: aload_1
     183: iload_3
     184: iload         7
     186: invokestatic  #198                // Method swapRows:([[III)V
     189: aload_2
     190: iload_3
     191: iload         7
     193: invokestatic  #198                // Method swapRows:([[III)V
     196: aload_0
     197: getfield      #173                // Field numRows:I
     200: istore        7
     202: iinc          7, 1
     205: goto          157
     208: iload         6
     210: ifne          223
     213: new           #104                // class java/lang/ArithmeticException
     216: dup
     217: ldc           #3                  // String Matrix is not invertible.
     219: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     222: athrow
     223: aload_0
     224: getfield      #173                // Field numRows:I
     227: iconst_1
     228: isub
     229: istore        6
     231: iload         6
     233: iflt          284
     236: iload         6
     238: iload_3
     239: if_icmpeq     278
     242: aload_1
     243: iload         6
     245: aaload
     246: iload         4
     248: iaload
     249: iload         5
     251: iand
     252: ifeq          278
     255: aload_1
     256: iload_3
     257: aaload
     258: aload_1
     259: iload         6
     261: aaload
     262: iload         4
     264: invokestatic  #197                // Method addToRow:([I[II)V
     267: aload_2
     268: iload_3
     269: aaload
     270: aload_2
     271: iload         6
     273: aaload
     274: iconst_0
     275: invokestatic  #197                // Method addToRow:([I[II)V
     278: iinc          6, -1
     281: goto          231
     284: iinc          3, 1
     287: goto          116
     290: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     293: dup
     294: aload_0
     295: getfield      #172                // Field numColumns:I
     298: aload_2
     299: invokespecial #196                // Method "<init>":(I[[I)V
     302: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Matrix leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation);
    Code:
       0: aload_1
       1: invokevirtual #212                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.getVector:()[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #173                // Field numRows:I
      11: if_icmpeq     24
      14: new           #104                // class java/lang/ArithmeticException
      17: dup
      18: ldc           #8                  // String length mismatch
      20: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #173                // Field numRows:I
      28: anewarray     #102                // class "[I"
      31: astore_3
      32: aload_0
      33: getfield      #173                // Field numRows:I
      36: iconst_1
      37: isub
      38: istore        4
      40: iload         4
      42: iflt          67
      45: aload_3
      46: iload         4
      48: aload_0
      49: getfield      #174                // Field matrix:[[I
      52: aload_2
      53: iload         4
      55: iaload
      56: aaload
      57: invokestatic  #207                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      60: aastore
      61: iinc          4, -1
      64: goto          40
      67: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      70: dup
      71: aload_0
      72: getfield      #173                // Field numRows:I
      75: aload_3
      76: invokespecial #196                // Method "<init>":(I[[I)V
      79: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: aload_1
       1: instanceof    #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       4: ifne          17
       7: new           #104                // class java/lang/ArithmeticException
      10: dup
      11: ldc           #11                 // String vector is not defined over GF(2)
      13: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: getfield      #177                // Field org/bouncycastle/pqc/math/linearalgebra/Vector.length:I
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: if_icmpeq     38
      28: new           #104                // class java/lang/ArithmeticException
      31: dup
      32: ldc           #8                  // String length mismatch
      34: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: checkcast     #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      42: invokevirtual #205                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getVecArray:()[I
      45: astore_2
      46: aload_0
      47: getfield      #171                // Field length:I
      50: newarray       int
      52: astore_3
      53: aload_0
      54: getfield      #173                // Field numRows:I
      57: iconst_5
      58: ishr
      59: istore        4
      61: iconst_1
      62: aload_0
      63: getfield      #173                // Field numRows:I
      66: bipush        31
      68: iand
      69: ishl
      70: istore        5
      72: iconst_0
      73: istore        6
      75: iconst_0
      76: istore        7
      78: iload         7
      80: iload         4
      82: if_icmpge     157
      85: iconst_1
      86: istore        8
      88: aload_2
      89: iload         7
      91: iaload
      92: iload         8
      94: iand
      95: istore        9
      97: iload         9
      99: ifeq          137
     102: iconst_0
     103: istore        10
     105: iload         10
     107: aload_0
     108: getfield      #171                // Field length:I
     111: if_icmpge     137
     114: aload_3
     115: iload         10
     117: dup2
     118: iaload
     119: aload_0
     120: getfield      #174                // Field matrix:[[I
     123: iload         6
     125: aaload
     126: iload         10
     128: iaload
     129: ixor
     130: iastore
     131: iinc          10, 1
     134: goto          105
     137: iinc          6, 1
     140: iload         8
     142: iconst_1
     143: ishl
     144: istore        8
     146: iload         8
     148: ifne          88
     151: iinc          7, 1
     154: goto          78
     157: iconst_1
     158: istore        7
     160: iload         7
     162: iload         5
     164: if_icmpeq     228
     167: aload_2
     168: iload         4
     170: iaload
     171: iload         7
     173: iand
     174: istore        8
     176: iload         8
     178: ifeq          216
     181: iconst_0
     182: istore        9
     184: iload         9
     186: aload_0
     187: getfield      #171                // Field length:I
     190: if_icmpge     216
     193: aload_3
     194: iload         9
     196: dup2
     197: iaload
     198: aload_0
     199: getfield      #174                // Field matrix:[[I
     202: iload         6
     204: aaload
     205: iload         9
     207: iaload
     208: ixor
     209: iastore
     210: iinc          9, 1
     213: goto          184
     216: iinc          6, 1
     219: iload         7
     221: iconst_1
     222: ishl
     223: istore        7
     225: goto          160
     228: new           #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     231: dup
     232: aload_3
     233: aload_0
     234: getfield      #172                // Field numColumns:I
     237: invokespecial #206                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":([II)V
     240: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiplyLeftCompactForm(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: aload_1
       1: instanceof    #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       4: ifne          17
       7: new           #104                // class java/lang/ArithmeticException
      10: dup
      11: ldc           #11                 // String vector is not defined over GF(2)
      13: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: getfield      #177                // Field org/bouncycastle/pqc/math/linearalgebra/Vector.length:I
      21: aload_0
      22: getfield      #173                // Field numRows:I
      25: if_icmpeq     38
      28: new           #104                // class java/lang/ArithmeticException
      31: dup
      32: ldc           #8                  // String length mismatch
      34: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: checkcast     #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      42: invokevirtual #205                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getVecArray:()[I
      45: astore_2
      46: aload_0
      47: getfield      #173                // Field numRows:I
      50: aload_0
      51: getfield      #172                // Field numColumns:I
      54: iadd
      55: bipush        31
      57: iadd
      58: iconst_5
      59: iushr
      60: newarray       int
      62: astore_3
      63: aload_0
      64: getfield      #173                // Field numRows:I
      67: iconst_5
      68: iushr
      69: istore        4
      71: iconst_0
      72: istore        5
      74: iconst_0
      75: istore        6
      77: iload         6
      79: iload         4
      81: if_icmpge     190
      84: iconst_1
      85: istore        7
      87: aload_2
      88: iload         6
      90: iaload
      91: iload         7
      93: iand
      94: istore        8
      96: iload         8
      98: ifeq          170
     101: iconst_0
     102: istore        9
     104: iload         9
     106: aload_0
     107: getfield      #171                // Field length:I
     110: if_icmpge     136
     113: aload_3
     114: iload         9
     116: dup2
     117: iaload
     118: aload_0
     119: getfield      #174                // Field matrix:[[I
     122: iload         5
     124: aaload
     125: iload         9
     127: iaload
     128: ixor
     129: iastore
     130: iinc          9, 1
     133: goto          104
     136: aload_0
     137: getfield      #172                // Field numColumns:I
     140: iload         5
     142: iadd
     143: iconst_5
     144: iushr
     145: istore        9
     147: aload_0
     148: getfield      #172                // Field numColumns:I
     151: iload         5
     153: iadd
     154: bipush        31
     156: iand
     157: istore        10
     159: aload_3
     160: iload         9
     162: dup2
     163: iaload
     164: iconst_1
     165: iload         10
     167: ishl
     168: ior
     169: iastore
     170: iinc          5, 1
     173: iload         7
     175: iconst_1
     176: ishl
     177: istore        7
     179: iload         7
     181: ifne          87
     184: iinc          6, 1
     187: goto          77
     190: iconst_1
     191: aload_0
     192: getfield      #173                // Field numRows:I
     195: bipush        31
     197: iand
     198: ishl
     199: istore        6
     201: iconst_1
     202: istore        7
     204: iload         7
     206: iload         6
     208: if_icmpeq     306
     211: aload_2
     212: iload         4
     214: iaload
     215: iload         7
     217: iand
     218: istore        8
     220: iload         8
     222: ifeq          294
     225: iconst_0
     226: istore        9
     228: iload         9
     230: aload_0
     231: getfield      #171                // Field length:I
     234: if_icmpge     260
     237: aload_3
     238: iload         9
     240: dup2
     241: iaload
     242: aload_0
     243: getfield      #174                // Field matrix:[[I
     246: iload         5
     248: aaload
     249: iload         9
     251: iaload
     252: ixor
     253: iastore
     254: iinc          9, 1
     257: goto          228
     260: aload_0
     261: getfield      #172                // Field numColumns:I
     264: iload         5
     266: iadd
     267: iconst_5
     268: iushr
     269: istore        9
     271: aload_0
     272: getfield      #172                // Field numColumns:I
     275: iload         5
     277: iadd
     278: bipush        31
     280: iand
     281: istore        10
     283: aload_3
     284: iload         9
     286: dup2
     287: iaload
     288: iconst_1
     289: iload         10
     291: ishl
     292: ior
     293: iastore
     294: iinc          5, 1
     297: iload         7
     299: iconst_1
     300: ishl
     301: istore        7
     303: goto          204
     306: new           #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     309: dup
     310: aload_3
     311: aload_0
     312: getfield      #173                // Field numRows:I
     315: aload_0
     316: getfield      #172                // Field numColumns:I
     319: iadd
     320: invokespecial #206                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":([II)V
     323: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix);
    Code:
       0: aload_1
       1: instanceof    #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
       4: ifne          17
       7: new           #104                // class java/lang/ArithmeticException
      10: dup
      11: ldc           #9                  // String matrix is not defined over GF(2)
      13: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: getfield      #176                // Field org/bouncycastle/pqc/math/linearalgebra/Matrix.numRows:I
      21: aload_0
      22: getfield      #172                // Field numColumns:I
      25: if_icmpeq     38
      28: new           #104                // class java/lang/ArithmeticException
      31: dup
      32: ldc           #8                  // String length mismatch
      34: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: checkcast     #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      42: astore_2
      43: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      46: dup
      47: aload_0
      48: getfield      #173                // Field numRows:I
      51: aload_1
      52: getfield      #175                // Field org/bouncycastle/pqc/math/linearalgebra/Matrix.numColumns:I
      55: invokespecial #194                // Method "<init>":(II)V
      58: astore_3
      59: aload_0
      60: getfield      #172                // Field numColumns:I
      63: bipush        31
      65: iand
      66: istore        5
      68: iload         5
      70: ifne          82
      73: aload_0
      74: getfield      #171                // Field length:I
      77: istore        4
      79: goto          90
      82: aload_0
      83: getfield      #171                // Field length:I
      86: iconst_1
      87: isub
      88: istore        4
      90: iconst_0
      91: istore        6
      93: iload         6
      95: aload_0
      96: getfield      #173                // Field numRows:I
      99: if_icmpge     303
     102: iconst_0
     103: istore        7
     105: iconst_0
     106: istore        8
     108: iload         8
     110: iload         4
     112: if_icmpge     207
     115: aload_0
     116: getfield      #174                // Field matrix:[[I
     119: iload         6
     121: aaload
     122: iload         8
     124: iaload
     125: istore        9
     127: iconst_0
     128: istore        10
     130: iload         10
     132: bipush        32
     134: if_icmpge     201
     137: iload         9
     139: iconst_1
     140: iload         10
     142: ishl
     143: iand
     144: istore        11
     146: iload         11
     148: ifeq          192
     151: iconst_0
     152: istore        12
     154: iload         12
     156: aload_2
     157: getfield      #171                // Field length:I
     160: if_icmpge     192
     163: aload_3
     164: getfield      #174                // Field matrix:[[I
     167: iload         6
     169: aaload
     170: iload         12
     172: dup2
     173: iaload
     174: aload_2
     175: getfield      #174                // Field matrix:[[I
     178: iload         7
     180: aaload
     181: iload         12
     183: iaload
     184: ixor
     185: iastore
     186: iinc          12, 1
     189: goto          154
     192: iinc          7, 1
     195: iinc          10, 1
     198: goto          130
     201: iinc          8, 1
     204: goto          108
     207: aload_0
     208: getfield      #174                // Field matrix:[[I
     211: iload         6
     213: aaload
     214: aload_0
     215: getfield      #171                // Field length:I
     218: iconst_1
     219: isub
     220: iaload
     221: istore        8
     223: iconst_0
     224: istore        9
     226: iload         9
     228: iload         5
     230: if_icmpge     297
     233: iload         8
     235: iconst_1
     236: iload         9
     238: ishl
     239: iand
     240: istore        10
     242: iload         10
     244: ifeq          288
     247: iconst_0
     248: istore        11
     250: iload         11
     252: aload_2
     253: getfield      #171                // Field length:I
     256: if_icmpge     288
     259: aload_3
     260: getfield      #174                // Field matrix:[[I
     263: iload         6
     265: aaload
     266: iload         11
     268: dup2
     269: iaload
     270: aload_2
     271: getfield      #174                // Field matrix:[[I
     274: iload         7
     276: aaload
     277: iload         11
     279: iaload
     280: ixor
     281: iastore
     282: iinc          11, 1
     285: goto          250
     288: iinc          7, 1
     291: iinc          9, 1
     294: goto          226
     297: iinc          6, 1
     300: goto          93
     303: aload_3
     304: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation);
    Code:
       0: aload_1
       1: invokevirtual #212                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation.getVector:()[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #172                // Field numColumns:I
      11: if_icmpeq     24
      14: new           #104                // class java/lang/ArithmeticException
      17: dup
      18: ldc           #8                  // String length mismatch
      20: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      27: dup
      28: aload_0
      29: getfield      #173                // Field numRows:I
      32: aload_0
      33: getfield      #172                // Field numColumns:I
      36: invokespecial #194                // Method "<init>":(II)V
      39: astore_3
      40: aload_0
      41: getfield      #172                // Field numColumns:I
      44: iconst_1
      45: isub
      46: istore        4
      48: iload         4
      50: iflt          139
      53: iload         4
      55: iconst_5
      56: iushr
      57: istore        5
      59: iload         4
      61: bipush        31
      63: iand
      64: istore        6
      66: aload_2
      67: iload         4
      69: iaload
      70: iconst_5
      71: iushr
      72: istore        7
      74: aload_2
      75: iload         4
      77: iaload
      78: bipush        31
      80: iand
      81: istore        8
      83: aload_0
      84: getfield      #173                // Field numRows:I
      87: iconst_1
      88: isub
      89: istore        9
      91: iload         9
      93: iflt          133
      96: aload_3
      97: getfield      #174                // Field matrix:[[I
     100: iload         9
     102: aaload
     103: iload         5
     105: dup2
     106: iaload
     107: aload_0
     108: getfield      #174                // Field matrix:[[I
     111: iload         9
     113: aaload
     114: iload         7
     116: iaload
     117: iload         8
     119: iushr
     120: iconst_1
     121: iand
     122: iload         6
     124: ishl
     125: ior
     126: iastore
     127: iinc          9, -1
     130: goto          91
     133: iinc          4, -1
     136: goto          48
     139: aload_3
     140: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: aload_1
       1: instanceof    #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       4: ifne          17
       7: new           #104                // class java/lang/ArithmeticException
      10: dup
      11: ldc           #11                 // String vector is not defined over GF(2)
      13: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: getfield      #177                // Field org/bouncycastle/pqc/math/linearalgebra/Vector.length:I
      21: aload_0
      22: getfield      #172                // Field numColumns:I
      25: if_icmpeq     38
      28: new           #104                // class java/lang/ArithmeticException
      31: dup
      32: ldc           #8                  // String length mismatch
      34: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: checkcast     #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      42: invokevirtual #205                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getVecArray:()[I
      45: astore_2
      46: aload_0
      47: getfield      #173                // Field numRows:I
      50: bipush        31
      52: iadd
      53: iconst_5
      54: iushr
      55: newarray       int
      57: astore_3
      58: iconst_0
      59: istore        4
      61: iload         4
      63: aload_0
      64: getfield      #173                // Field numRows:I
      67: if_icmpge     170
      70: iconst_0
      71: istore        5
      73: iconst_0
      74: istore        6
      76: iload         6
      78: aload_0
      79: getfield      #171                // Field length:I
      82: if_icmpge     111
      85: iload         5
      87: aload_0
      88: getfield      #174                // Field matrix:[[I
      91: iload         4
      93: aaload
      94: iload         6
      96: iaload
      97: aload_2
      98: iload         6
     100: iaload
     101: iand
     102: ixor
     103: istore        5
     105: iinc          6, 1
     108: goto          76
     111: iconst_0
     112: istore        6
     114: iconst_0
     115: istore        7
     117: iload         7
     119: bipush        32
     121: if_icmpge     142
     124: iload         6
     126: iload         5
     128: iload         7
     130: iushr
     131: iconst_1
     132: iand
     133: ixor
     134: istore        6
     136: iinc          7, 1
     139: goto          117
     142: iload         6
     144: iconst_1
     145: if_icmpne     164
     148: aload_3
     149: iload         4
     151: iconst_5
     152: iushr
     153: dup2
     154: iaload
     155: iconst_1
     156: iload         4
     158: bipush        31
     160: iand
     161: ishl
     162: ior
     163: iastore
     164: iinc          4, 1
     167: goto          61
     170: new           #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     173: dup
     174: aload_3
     175: aload_0
     176: getfield      #173                // Field numRows:I
     179: invokespecial #206                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":([II)V
     182: areturn

  public org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiplyRightCompactForm(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: aload_1
       1: instanceof    #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
       4: ifne          17
       7: new           #104                // class java/lang/ArithmeticException
      10: dup
      11: ldc           #11                 // String vector is not defined over GF(2)
      13: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: getfield      #177                // Field org/bouncycastle/pqc/math/linearalgebra/Vector.length:I
      21: aload_0
      22: getfield      #172                // Field numColumns:I
      25: aload_0
      26: getfield      #173                // Field numRows:I
      29: iadd
      30: if_icmpeq     43
      33: new           #104                // class java/lang/ArithmeticException
      36: dup
      37: ldc           #8                  // String length mismatch
      39: invokespecial #178                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: checkcast     #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      47: invokevirtual #205                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getVecArray:()[I
      50: astore_2
      51: aload_0
      52: getfield      #173                // Field numRows:I
      55: bipush        31
      57: iadd
      58: iconst_5
      59: iushr
      60: newarray       int
      62: astore_3
      63: aload_0
      64: getfield      #173                // Field numRows:I
      67: iconst_5
      68: ishr
      69: istore        4
      71: aload_0
      72: getfield      #173                // Field numRows:I
      75: bipush        31
      77: iand
      78: istore        5
      80: iconst_0
      81: istore        6
      83: iload         6
      85: aload_0
      86: getfield      #173                // Field numRows:I
      89: if_icmpge     343
      92: aload_2
      93: iload         6
      95: iconst_5
      96: ishr
      97: iaload
      98: iload         6
     100: bipush        31
     102: iand
     103: iushr
     104: iconst_1
     105: iand
     106: istore        7
     108: iload         4
     110: istore        8
     112: iload         5
     114: ifeq          240
     117: iconst_0
     118: istore        9
     120: iconst_0
     121: istore        10
     123: iload         10
     125: aload_0
     126: getfield      #171                // Field length:I
     129: iconst_1
     130: isub
     131: if_icmpge     181
     134: aload_2
     135: iload         8
     137: iinc          8, 1
     140: iaload
     141: iload         5
     143: iushr
     144: aload_2
     145: iload         8
     147: iaload
     148: bipush        32
     150: iload         5
     152: isub
     153: ishl
     154: ior
     155: istore        9
     157: iload         7
     159: aload_0
     160: getfield      #174                // Field matrix:[[I
     163: iload         6
     165: aaload
     166: iload         10
     168: iaload
     169: iload         9
     171: iand
     172: ixor
     173: istore        7
     175: iinc          10, 1
     178: goto          123
     181: aload_2
     182: iload         8
     184: iinc          8, 1
     187: iaload
     188: iload         5
     190: iushr
     191: istore        9
     193: iload         8
     195: aload_2
     196: arraylength
     197: if_icmpge     215
     200: iload         9
     202: aload_2
     203: iload         8
     205: iaload
     206: bipush        32
     208: iload         5
     210: isub
     211: ishl
     212: ior
     213: istore        9
     215: iload         7
     217: aload_0
     218: getfield      #174                // Field matrix:[[I
     221: iload         6
     223: aaload
     224: aload_0
     225: getfield      #171                // Field length:I
     228: iconst_1
     229: isub
     230: iaload
     231: iload         9
     233: iand
     234: ixor
     235: istore        7
     237: goto          281
     240: iconst_0
     241: istore        9
     243: iload         9
     245: aload_0
     246: getfield      #171                // Field length:I
     249: if_icmpge     281
     252: iload         7
     254: aload_0
     255: getfield      #174                // Field matrix:[[I
     258: iload         6
     260: aaload
     261: iload         9
     263: iaload
     264: aload_2
     265: iload         8
     267: iinc          8, 1
     270: iaload
     271: iand
     272: ixor
     273: istore        7
     275: iinc          9, 1
     278: goto          243
     281: iconst_0
     282: istore        9
     284: iconst_0
     285: istore        10
     287: iload         10
     289: bipush        32
     291: if_icmpge     315
     294: iload         9
     296: iload         7
     298: iconst_1
     299: iand
     300: ixor
     301: istore        9
     303: iload         7
     305: iconst_1
     306: iushr
     307: istore        7
     309: iinc          10, 1
     312: goto          287
     315: iload         9
     317: iconst_1
     318: if_icmpne     337
     321: aload_3
     322: iload         6
     324: iconst_5
     325: ishr
     326: dup2
     327: iaload
     328: iconst_1
     329: iload         6
     331: bipush        31
     333: iand
     334: ishl
     335: ior
     336: iastore
     337: iinc          6, 1
     340: goto          83
     343: new           #110                // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
     346: dup
     347: aload_3
     348: aload_0
     349: getfield      #173                // Field numRows:I
     352: invokespecial #206                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":([II)V
     355: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #109                // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      13: astore_2
      14: aload_0
      15: getfield      #173                // Field numRows:I
      18: aload_2
      19: getfield      #173                // Field numRows:I
      22: if_icmpne     47
      25: aload_0
      26: getfield      #172                // Field numColumns:I
      29: aload_2
      30: getfield      #172                // Field numColumns:I
      33: if_icmpne     47
      36: aload_0
      37: getfield      #171                // Field length:I
      40: aload_2
      41: getfield      #171                // Field length:I
      44: if_icmpeq     49
      47: iconst_0
      48: ireturn
      49: iconst_0
      50: istore_3
      51: iload_3
      52: aload_0
      53: getfield      #173                // Field numRows:I
      56: if_icmpge     85
      59: aload_0
      60: getfield      #174                // Field matrix:[[I
      63: iload_3
      64: aaload
      65: aload_2
      66: getfield      #174                // Field matrix:[[I
      69: iload_3
      70: aaload
      71: invokestatic  #208                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.equals:([I[I)Z
      74: ifne          79
      77: iconst_0
      78: ireturn
      79: iinc          3, 1
      82: goto          51
      85: iconst_1
      86: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #173                // Field numRows:I
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #172                // Field numColumns:I
      11: iadd
      12: bipush        31
      14: imul
      15: aload_0
      16: getfield      #171                // Field length:I
      19: iadd
      20: istore_1
      21: iconst_0
      22: istore_2
      23: iload_2
      24: aload_0
      25: getfield      #173                // Field numRows:I
      28: if_icmpge     52
      31: iload_1
      32: bipush        31
      34: imul
      35: aload_0
      36: getfield      #174                // Field matrix:[[I
      39: iload_2
      40: aaload
      41: invokestatic  #214                // Method org/bouncycastle/util/Arrays.hashCode:([I)I
      44: iadd
      45: istore_1
      46: iinc          2, 1
      49: goto          23
      52: iload_1
      53: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #172                // Field numColumns:I
       4: bipush        31
       6: iand
       7: istore_1
       8: iload_1
       9: ifne          20
      12: aload_0
      13: getfield      #171                // Field length:I
      16: istore_2
      17: goto          27
      20: aload_0
      21: getfield      #171                // Field length:I
      24: iconst_1
      25: isub
      26: istore_2
      27: new           #105                // class java/lang/StringBuffer
      30: dup
      31: invokespecial #179                // Method java/lang/StringBuffer."<init>":()V
      34: astore_3
      35: iconst_0
      36: istore        4
      38: iload         4
      40: aload_0
      41: getfield      #173                // Field numRows:I
      44: if_icmpge     228
      47: aload_3
      48: new           #106                // class java/lang/StringBuilder
      51: dup
      52: invokespecial #183                // Method java/lang/StringBuilder."<init>":()V
      55: iload         4
      57: invokevirtual #185                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #1                  // String :
      62: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #184                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokevirtual #182                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      71: pop
      72: iconst_0
      73: istore        5
      75: iload         5
      77: iload_2
      78: if_icmpge     153
      81: aload_0
      82: getfield      #174                // Field matrix:[[I
      85: iload         4
      87: aaload
      88: iload         5
      90: iaload
      91: istore        6
      93: iconst_0
      94: istore        7
      96: iload         7
      98: bipush        32
     100: if_icmpge     140
     103: iload         6
     105: iload         7
     107: iushr
     108: iconst_1
     109: iand
     110: istore        8
     112: iload         8
     114: ifne          127
     117: aload_3
     118: bipush        48
     120: invokevirtual #181                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     123: pop
     124: goto          134
     127: aload_3
     128: bipush        49
     130: invokevirtual #181                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     133: pop
     134: iinc          7, 1
     137: goto          96
     140: aload_3
     141: bipush        32
     143: invokevirtual #181                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     146: pop
     147: iinc          5, 1
     150: goto          75
     153: aload_0
     154: getfield      #174                // Field matrix:[[I
     157: iload         4
     159: aaload
     160: aload_0
     161: getfield      #171                // Field length:I
     164: iconst_1
     165: isub
     166: iaload
     167: istore        5
     169: iconst_0
     170: istore        6
     172: iload         6
     174: iload_1
     175: if_icmpge     215
     178: iload         5
     180: iload         6
     182: iushr
     183: iconst_1
     184: iand
     185: istore        7
     187: iload         7
     189: ifne          202
     192: aload_3
     193: bipush        48
     195: invokevirtual #181                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     198: pop
     199: goto          209
     202: aload_3
     203: bipush        49
     205: invokevirtual #181                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     208: pop
     209: iinc          6, 1
     212: goto          172
     215: aload_3
     216: bipush        10
     218: invokevirtual #181                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     221: pop
     222: iinc          4, 1
     225: goto          38
     228: aload_3
     229: invokevirtual #180                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     232: areturn

  private static void swapRows(int[][], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aaload
       3: astore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: iload_2
       8: aaload
       9: aastore
      10: aload_0
      11: iload_2
      12: aload_3
      13: aastore
      14: return

  private static void addToRow(int[], int[], int);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_3
       5: iload_3
       6: iload_2
       7: if_icmplt     26
      10: aload_1
      11: iload_3
      12: aload_0
      13: iload_3
      14: iaload
      15: aload_1
      16: iload_3
      17: iaload
      18: ixor
      19: iastore
      20: iinc          3, -1
      23: goto          5
      26: return
}
