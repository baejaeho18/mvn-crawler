public class org.bouncycastle.pqc.jcajce.provider.sphincs.BCSphincs256PrivateKey implements java.security.PrivateKey,org.bouncycastle.pqc.jcajce.interfaces.SPHINCSKey {
  private static final long serialVersionUID;

  private transient org.bouncycastle.asn1.ASN1ObjectIdentifier treeDigest;

  private transient org.bouncycastle.pqc.crypto.sphincs.SPHINCSPrivateKeyParameters params;

  private transient org.bouncycastle.asn1.ASN1Set attributes;

  public org.bouncycastle.pqc.jcajce.provider.sphincs.BCSphincs256PrivateKey(org.bouncycastle.asn1.ASN1ObjectIdentifier, org.bouncycastle.pqc.crypto.sphincs.SPHINCSPrivateKeyParameters);
    Code:
       0: aload_0
       1: invokespecial #142                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       9: aload_0
      10: aload_2
      11: putfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      14: return

  public org.bouncycastle.pqc.jcajce.provider.sphincs.BCSphincs256PrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #142                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #163                // Method init:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)V
       9: return

  private void init(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #147                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getAttributes:()Lorg/bouncycastle/asn1/ASN1Set;
       5: putfield      #136                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
       8: aload_0
       9: aload_1
      10: invokevirtual #148                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getPrivateKeyAlgorithm:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      13: invokevirtual #151                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getParameters:()Lorg/bouncycastle/asn1/ASN1Encodable;
      16: invokestatic  #157                // Method org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/pqc/asn1/SPHINCS256KeyParams;
      19: invokevirtual #155                // Method org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.getTreeDigest:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
      22: invokevirtual #152                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getAlgorithm:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      25: putfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      28: aload_0
      29: aload_1
      30: invokestatic  #160                // Method org/bouncycastle/pqc/crypto/util/PrivateKeyFactory.createKey:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      33: checkcast     #72                 // class org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters
      36: putfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      39: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #76                 // class org/bouncycastle/pqc/jcajce/provider/sphincs/BCSphincs256PrivateKey
      11: ifeq          59
      14: aload_1
      15: checkcast     #76                 // class org/bouncycastle/pqc/jcajce/provider/sphincs/BCSphincs256PrivateKey
      18: astore_2
      19: aload_0
      20: getfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      23: aload_2
      24: getfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      27: invokevirtual #144                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.equals:(Lorg/bouncycastle/asn1/ASN1Primitive;)Z
      30: ifeq          57
      33: aload_0
      34: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      37: invokevirtual #158                // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.getKeyData:()[B
      40: aload_2
      41: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      44: invokevirtual #158                // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.getKeyData:()[B
      47: invokestatic  #165                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn
      59: iconst_0
      60: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       4: invokevirtual #143                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.hashCode:()I
       7: bipush        37
       9: aload_0
      10: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      13: invokevirtual #158                // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.getKeyData:()[B
      16: invokestatic  #164                // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      19: imul
      20: iadd
      21: ireturn

  public final java.lang.String getAlgorithm();
    Code:
       0: ldc           #2                  // String SPHINCS-256
       2: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
       4: invokevirtual #159                // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.getTreeDigest:()Ljava/lang/String;
       7: ifnull        25
      10: aload_0
      11: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      14: aload_0
      15: getfield      #136                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      18: invokestatic  #161                // Method org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.createPrivateKeyInfo:(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;Lorg/bouncycastle/asn1/ASN1Set;)Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;
      21: astore_1
      22: goto          81
      25: new           #69                 // class org/bouncycastle/asn1/x509/AlgorithmIdentifier
      28: dup
      29: getstatic     #134                // Field org/bouncycastle/pqc/asn1/PQCObjectIdentifiers.sphincs256:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      32: new           #71                 // class org/bouncycastle/pqc/asn1/SPHINCS256KeyParams
      35: dup
      36: new           #69                 // class org/bouncycastle/asn1/x509/AlgorithmIdentifier
      39: dup
      40: aload_0
      41: getfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      44: invokespecial #153                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier."<init>":(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)V
      47: invokespecial #156                // Method org/bouncycastle/pqc/asn1/SPHINCS256KeyParams."<init>":(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)V
      50: invokespecial #154                // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier."<init>":(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;Lorg/bouncycastle/asn1/ASN1Encodable;)V
      53: astore_2
      54: new           #68                 // class org/bouncycastle/asn1/pkcs/PrivateKeyInfo
      57: dup
      58: aload_2
      59: new           #67                 // class org/bouncycastle/asn1/DEROctetString
      62: dup
      63: aload_0
      64: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
      67: invokevirtual #158                // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.getKeyData:()[B
      70: invokespecial #145                // Method org/bouncycastle/asn1/DEROctetString."<init>":([B)V
      73: aload_0
      74: getfield      #136                // Field attributes:Lorg/bouncycastle/asn1/ASN1Set;
      77: invokespecial #150                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo."<init>":(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;Lorg/bouncycastle/asn1/ASN1Encodable;Lorg/bouncycastle/asn1/ASN1Set;)V
      80: astore_1
      81: aload_1
      82: invokevirtual #146                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getEncoded:()[B
      85: areturn
      86: astore_1
      87: aconst_null
      88: areturn
    Exception table:
       from    to  target type
           0    85    86   Class java/io/IOException

  public java.lang.String getFormat();
    Code:
       0: ldc           #1                  // String PKCS#8
       2: areturn

  org.bouncycastle.asn1.ASN1ObjectIdentifier getTreeDigest();
    Code:
       0: aload_0
       1: getfield      #135                // Field treeDigest:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       4: areturn

  public byte[] getKeyData();
    Code:
       0: aload_0
       1: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
       4: invokevirtual #158                // Method org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.getKeyData:()[B
       7: areturn

  org.bouncycastle.crypto.CipherParameters getKeyParams();
    Code:
       0: aload_0
       1: getfield      #137                // Field params:Lorg/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters;
       4: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #138                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #139                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: checkcast     #59                 // class "[B"
      11: checkcast     #59                 // class "[B"
      14: astore_2
      15: aload_0
      16: aload_2
      17: invokestatic  #149                // Method org/bouncycastle/asn1/pkcs/PrivateKeyInfo.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;
      20: invokespecial #163                // Method init:(Lorg/bouncycastle/asn1/pkcs/PrivateKeyInfo;)V
      23: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #140                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #162                // Method getEncoded:()[B
       9: invokevirtual #141                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return
}
