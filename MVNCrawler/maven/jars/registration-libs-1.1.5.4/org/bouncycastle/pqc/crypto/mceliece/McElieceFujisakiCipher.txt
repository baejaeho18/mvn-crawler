public class org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher implements org.bouncycastle.pqc.crypto.MessageEncryptor {
  public static final java.lang.String OID;

  private static final java.lang.String DEFAULT_PRNG_NAME;

  private org.bouncycastle.crypto.Digest messDigest;

  private java.security.SecureRandom sr;

  private int n;

  private int k;

  private int t;

  org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters key;

  private boolean forEncryption;

  public org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher();
    Code:
       0: aload_0
       1: invokespecial #157                // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #151                // Field forEncryption:Z
       5: iload_1
       6: ifeq          83
       9: aload_2
      10: instanceof    #83                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      13: ifeq          54
      16: aload_2
      17: checkcast     #83                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokevirtual #161                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      26: putfield      #152                // Field sr:Ljava/security/SecureRandom;
      29: aload_0
      30: aload_3
      31: invokevirtual #162                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      34: checkcast     #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
      37: putfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      40: aload_0
      41: aload_0
      42: getfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      45: checkcast     #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
      48: invokespecial #177                // Method initCipherEncrypt:(Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters;)V
      51: goto          102
      54: aload_0
      55: invokestatic  #158                // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      58: putfield      #152                // Field sr:Ljava/security/SecureRandom;
      61: aload_0
      62: aload_2
      63: checkcast     #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
      66: putfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      69: aload_0
      70: aload_0
      71: getfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      74: checkcast     #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
      77: invokespecial #177                // Method initCipherEncrypt:(Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters;)V
      80: goto          102
      83: aload_0
      84: aload_2
      85: checkcast     #88                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters
      88: putfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      91: aload_0
      92: aload_0
      93: getfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      96: checkcast     #88                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters
      99: invokespecial #176                // Method initCipherDecrypt:(Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters;)V
     102: return

  public int getKeySize(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: instanceof    #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
       4: ifeq          15
       7: aload_1
       8: checkcast     #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
      11: invokevirtual #173                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.getN:()I
      14: ireturn
      15: aload_1
      16: instanceof    #88                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters
      19: ifeq          30
      22: aload_1
      23: checkcast     #88                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters
      26: invokevirtual #169                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters.getN:()I
      29: ireturn
      30: new           #76                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #3                  // String unsupported type
      36: invokespecial #155                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow

  private void initCipherEncrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #175                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.getDigest:()Ljava/lang/String;
       5: invokestatic  #178                // Method org/bouncycastle/pqc/crypto/mceliece/Utils.getDigest:(Ljava/lang/String;)Lorg/bouncycastle/crypto/Digest;
       8: putfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
      11: aload_0
      12: aload_1
      13: invokevirtual #173                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.getN:()I
      16: putfield      #149                // Field n:I
      19: aload_0
      20: aload_1
      21: invokevirtual #172                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.getK:()I
      24: putfield      #148                // Field k:I
      27: aload_0
      28: aload_1
      29: invokevirtual #174                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.getT:()I
      32: putfield      #150                // Field t:I
      35: return

  private void initCipherDecrypt(org.bouncycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #171                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters.getDigest:()Ljava/lang/String;
       5: invokestatic  #178                // Method org/bouncycastle/pqc/crypto/mceliece/Utils.getDigest:(Ljava/lang/String;)Lorg/bouncycastle/crypto/Digest;
       8: putfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
      11: aload_0
      12: aload_1
      13: invokevirtual #169                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters.getN:()I
      16: putfield      #149                // Field n:I
      19: aload_0
      20: aload_1
      21: invokevirtual #170                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters.getT:()I
      24: putfield      #150                // Field t:I
      27: return

  public byte[] messageEncrypt(byte[]);
    Code:
       0: aload_0
       1: getfield      #151                // Field forEncryption:Z
       4: ifne          17
       7: new           #77                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String cipher initialised for decryption
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #93                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      20: dup
      21: aload_0
      22: getfield      #148                // Field k:I
      25: aload_0
      26: getfield      #152                // Field sr:Ljava/security/SecureRandom;
      29: invokespecial #183                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":(ILjava/security/SecureRandom;)V
      32: astore_2
      33: aload_2
      34: invokevirtual #181                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getEncoded:()[B
      37: astore_3
      38: aload_3
      39: aload_1
      40: invokestatic  #180                // Method org/bouncycastle/pqc/math/linearalgebra/ByteUtils.concatenate:([B[B)[B
      43: astore        4
      45: aload_0
      46: getfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
      49: aload         4
      51: iconst_0
      52: aload         4
      54: arraylength
      55: invokeinterface #187,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      60: aload_0
      61: getfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
      64: invokeinterface #185,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      69: newarray       byte
      71: astore        5
      73: aload_0
      74: getfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
      77: aload         5
      79: iconst_0
      80: invokeinterface #186,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      85: pop
      86: aload_0
      87: getfield      #149                // Field n:I
      90: aload_0
      91: getfield      #150                // Field t:I
      94: aload         5
      96: invokestatic  #166                // Method org/bouncycastle/pqc/crypto/mceliece/Conversions.encode:(II[B)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
      99: astore        6
     101: aload_0
     102: getfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
     105: checkcast     #89                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters
     108: aload_2
     109: aload         6
     111: invokestatic  #168                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2Primitives.encryptionPrimitive:(Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters;Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
     114: invokevirtual #181                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getEncoded:()[B
     117: astore        7
     119: new           #84                 // class org/bouncycastle/crypto/prng/DigestRandomGenerator
     122: dup
     123: new           #82                 // class org/bouncycastle/crypto/digests/SHA1Digest
     126: dup
     127: invokespecial #160                // Method org/bouncycastle/crypto/digests/SHA1Digest."<init>":()V
     130: invokespecial #165                // Method org/bouncycastle/crypto/prng/DigestRandomGenerator."<init>":(Lorg/bouncycastle/crypto/Digest;)V
     133: astore        8
     135: aload         8
     137: aload_3
     138: invokevirtual #163                // Method org/bouncycastle/crypto/prng/DigestRandomGenerator.addSeedMaterial:([B)V
     141: aload_1
     142: arraylength
     143: newarray       byte
     145: astore        9
     147: aload         8
     149: aload         9
     151: invokevirtual #164                // Method org/bouncycastle/crypto/prng/DigestRandomGenerator.nextBytes:([B)V
     154: iconst_0
     155: istore        10
     157: iload         10
     159: aload_1
     160: arraylength
     161: if_icmpge     183
     164: aload         9
     166: iload         10
     168: dup2
     169: baload
     170: aload_1
     171: iload         10
     173: baload
     174: ixor
     175: i2b
     176: bastore
     177: iinc          10, 1
     180: goto          157
     183: aload         7
     185: aload         9
     187: invokestatic  #180                // Method org/bouncycastle/pqc/math/linearalgebra/ByteUtils.concatenate:([B[B)[B
     190: areturn

  public byte[] messageDecrypt(byte[]) throws org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: getfield      #151                // Field forEncryption:Z
       4: ifeq          17
       7: new           #77                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String cipher initialised for decryption
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #149                // Field n:I
      21: bipush        7
      23: iadd
      24: iconst_3
      25: ishr
      26: istore_2
      27: aload_1
      28: arraylength
      29: iload_2
      30: isub
      31: istore_3
      32: aload_1
      33: iload_2
      34: invokestatic  #179                // Method org/bouncycastle/pqc/math/linearalgebra/ByteUtils.split:([BI)[[B
      37: astore        4
      39: aload         4
      41: iconst_0
      42: aaload
      43: astore        5
      45: aload         4
      47: iconst_1
      48: aaload
      49: astore        6
      51: aload_0
      52: getfield      #149                // Field n:I
      55: aload         5
      57: invokestatic  #184                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.OS2VP:(I[B)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
      60: astore        7
      62: aload_0
      63: getfield      #154                // Field key:Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyParameters;
      66: checkcast     #88                 // class org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters
      69: aload         7
      71: invokestatic  #167                // Method org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2Primitives.decryptionPrimitive:(Lorg/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters;Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;)[Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
      74: astore        8
      76: aload         8
      78: iconst_0
      79: aaload
      80: invokevirtual #181                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.getEncoded:()[B
      83: astore        9
      85: aload         8
      87: iconst_1
      88: aaload
      89: astore        10
      91: new           #84                 // class org/bouncycastle/crypto/prng/DigestRandomGenerator
      94: dup
      95: new           #82                 // class org/bouncycastle/crypto/digests/SHA1Digest
      98: dup
      99: invokespecial #160                // Method org/bouncycastle/crypto/digests/SHA1Digest."<init>":()V
     102: invokespecial #165                // Method org/bouncycastle/crypto/prng/DigestRandomGenerator."<init>":(Lorg/bouncycastle/crypto/Digest;)V
     105: astore        11
     107: aload         11
     109: aload         9
     111: invokevirtual #163                // Method org/bouncycastle/crypto/prng/DigestRandomGenerator.addSeedMaterial:([B)V
     114: iload_3
     115: newarray       byte
     117: astore        12
     119: aload         11
     121: aload         12
     123: invokevirtual #164                // Method org/bouncycastle/crypto/prng/DigestRandomGenerator.nextBytes:([B)V
     126: iconst_0
     127: istore        13
     129: iload         13
     131: iload_3
     132: if_icmpge     155
     135: aload         12
     137: iload         13
     139: dup2
     140: baload
     141: aload         6
     143: iload         13
     145: baload
     146: ixor
     147: i2b
     148: bastore
     149: iinc          13, 1
     152: goto          129
     155: aload         9
     157: aload         12
     159: invokestatic  #180                // Method org/bouncycastle/pqc/math/linearalgebra/ByteUtils.concatenate:([B[B)[B
     162: astore        13
     164: aload_0
     165: getfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
     168: invokeinterface #185,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
     173: newarray       byte
     175: astore        14
     177: aload_0
     178: getfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
     181: aload         13
     183: iconst_0
     184: aload         13
     186: arraylength
     187: invokeinterface #187,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
     192: aload_0
     193: getfield      #153                // Field messDigest:Lorg/bouncycastle/crypto/Digest;
     196: aload         14
     198: iconst_0
     199: invokeinterface #186,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
     204: pop
     205: aload_0
     206: getfield      #149                // Field n:I
     209: aload_0
     210: getfield      #150                // Field t:I
     213: aload         14
     215: invokestatic  #166                // Method org/bouncycastle/pqc/crypto/mceliece/Conversions.encode:(II[B)Lorg/bouncycastle/pqc/math/linearalgebra/GF2Vector;
     218: astore        7
     220: aload         7
     222: aload         10
     224: invokevirtual #182                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.equals:(Ljava/lang/Object;)Z
     227: ifne          240
     230: new           #81                 // class org/bouncycastle/crypto/InvalidCipherTextException
     233: dup
     234: ldc           #1                  // String Bad Padding: invalid ciphertext
     236: invokespecial #159                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: aload         12
     242: areturn
}
