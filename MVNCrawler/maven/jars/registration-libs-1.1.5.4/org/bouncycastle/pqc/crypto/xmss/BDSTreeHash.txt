class org.bouncycastle.pqc.crypto.xmss.BDSTreeHash implements java.io.Serializable,java.lang.Cloneable {
  private static final long serialVersionUID;

  private org.bouncycastle.pqc.crypto.xmss.XMSSNode tailNode;

  private final int initialHeight;

  private int height;

  private int nextIndex;

  private boolean initialized;

  private boolean finished;

  org.bouncycastle.pqc.crypto.xmss.BDSTreeHash(int);
    Code:
       0: aload_0
       1: invokespecial #167                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #160                // Field initialHeight:I
       9: aload_0
      10: iconst_0
      11: putfield      #163                // Field initialized:Z
      14: aload_0
      15: iconst_0
      16: putfield      #162                // Field finished:Z
      19: return

  void initialize(int);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
       5: aload_0
       6: aload_0
       7: getfield      #160                // Field initialHeight:I
      10: putfield      #159                // Field height:I
      13: aload_0
      14: iload_1
      15: putfield      #161                // Field nextIndex:I
      18: aload_0
      19: iconst_1
      20: putfield      #163                // Field initialized:Z
      23: aload_0
      24: iconst_0
      25: putfield      #162                // Field finished:Z
      28: return

  void update(java.util.Stack<org.bouncycastle.pqc.crypto.xmss.XMSSNode>, org.bouncycastle.pqc.crypto.xmss.WOTSPlus, byte[], byte[], org.bouncycastle.pqc.crypto.xmss.OTSHashAddress);
    Code:
       0: aload         5
       2: ifnonnull     15
       5: new           #86                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #3                  // String otsHashAddress == null
      11: invokespecial #166                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #162                // Field finished:Z
      19: ifne          29
      22: aload_0
      23: getfield      #163                // Field initialized:Z
      26: ifne          39
      29: new           #85                 // class java/lang/IllegalStateException
      32: dup
      33: ldc           #2                  // String finished or not initialized
      35: invokespecial #165                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: new           #95                 // class org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder
      42: dup
      43: invokespecial #196                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder."<init>":()V
      46: aload         5
      48: invokevirtual #194                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getLayerAddress:()I
      51: invokevirtual #202                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
      54: checkcast     #95                 // class org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder
      57: aload         5
      59: invokevirtual #195                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getTreeAddress:()J
      62: invokevirtual #203                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
      65: checkcast     #95                 // class org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder
      68: aload_0
      69: getfield      #161                // Field nextIndex:I
      72: invokevirtual #199                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.withOTSAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder;
      75: aload         5
      77: invokevirtual #191                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getChainAddress:()I
      80: invokevirtual #197                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.withChainAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder;
      83: aload         5
      85: invokevirtual #192                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getHashAddress:()I
      88: invokevirtual #198                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.withHashAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder;
      91: aload         5
      93: invokevirtual #193                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getKeyAndMask:()I
      96: invokevirtual #201                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.withKeyAndMask:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
      99: checkcast     #95                 // class org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder
     102: invokevirtual #200                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     105: checkcast     #94                 // class org/bouncycastle/pqc/crypto/xmss/OTSHashAddress
     108: astore        5
     110: new           #93                 // class org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder
     113: dup
     114: invokespecial #186                // Method org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder."<init>":()V
     117: aload         5
     119: invokevirtual #194                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getLayerAddress:()I
     122: invokevirtual #189                // Method org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     125: checkcast     #93                 // class org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder
     128: aload         5
     130: invokevirtual #195                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getTreeAddress:()J
     133: invokevirtual #190                // Method org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     136: checkcast     #93                 // class org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder
     139: aload_0
     140: getfield      #161                // Field nextIndex:I
     143: invokevirtual #187                // Method org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder.withLTreeAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder;
     146: invokevirtual #188                // Method org/bouncycastle/pqc/crypto/xmss/LTreeAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     149: checkcast     #92                 // class org/bouncycastle/pqc/crypto/xmss/LTreeAddress
     152: astore        6
     154: new           #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     157: dup
     158: invokespecial #179                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder."<init>":()V
     161: aload         5
     163: invokevirtual #194                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getLayerAddress:()I
     166: invokevirtual #184                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     169: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     172: aload         5
     174: invokevirtual #195                // Method org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.getTreeAddress:()J
     177: invokevirtual #185                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     180: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     183: aload_0
     184: getfield      #161                // Field nextIndex:I
     187: invokevirtual #181                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeIndex:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     190: invokevirtual #182                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     193: checkcast     #90                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress
     196: astore        7
     198: aload_2
     199: aload_2
     200: aload         4
     202: aload         5
     204: invokevirtual #205                // Method org/bouncycastle/pqc/crypto/xmss/WOTSPlus.getWOTSPlusSecretKey:([BLorg/bouncycastle/pqc/crypto/xmss/OTSHashAddress;)[B
     207: aload_3
     208: invokevirtual #204                // Method org/bouncycastle/pqc/crypto/xmss/WOTSPlus.importKeys:([B[B)V
     211: aload_2
     212: aload         5
     214: invokevirtual #206                // Method org/bouncycastle/pqc/crypto/xmss/WOTSPlus.getPublicKey:(Lorg/bouncycastle/pqc/crypto/xmss/OTSHashAddress;)Lorg/bouncycastle/pqc/crypto/xmss/WOTSPlusPublicKeyParameters;
     217: astore        8
     219: aload_2
     220: aload         8
     222: aload         6
     224: invokestatic  #210                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNodeUtil.lTree:(Lorg/bouncycastle/pqc/crypto/xmss/WOTSPlus;Lorg/bouncycastle/pqc/crypto/xmss/WOTSPlusPublicKeyParameters;Lorg/bouncycastle/pqc/crypto/xmss/LTreeAddress;)Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     227: astore        9
     229: aload_1
     230: invokevirtual #168                // Method java/util/Stack.isEmpty:()Z
     233: ifne          446
     236: aload_1
     237: invokevirtual #169                // Method java/util/Stack.peek:()Ljava/lang/Object;
     240: checkcast     #99                 // class org/bouncycastle/pqc/crypto/xmss/XMSSNode
     243: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     246: aload         9
     248: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     251: if_icmpne     446
     254: aload_1
     255: invokevirtual #169                // Method java/util/Stack.peek:()Ljava/lang/Object;
     258: checkcast     #99                 // class org/bouncycastle/pqc/crypto/xmss/XMSSNode
     261: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     264: aload_0
     265: getfield      #160                // Field initialHeight:I
     268: if_icmpeq     446
     271: new           #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     274: dup
     275: invokespecial #179                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder."<init>":()V
     278: aload         7
     280: invokevirtual #175                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getLayerAddress:()I
     283: invokevirtual #184                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     286: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     289: aload         7
     291: invokevirtual #178                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeAddress:()J
     294: invokevirtual #185                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     297: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     300: aload         7
     302: invokevirtual #176                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeHeight:()I
     305: invokevirtual #180                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeHeight:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     308: aload         7
     310: invokevirtual #177                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeIndex:()I
     313: iconst_1
     314: isub
     315: iconst_2
     316: idiv
     317: invokevirtual #181                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeIndex:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     320: aload         7
     322: invokevirtual #174                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getKeyAndMask:()I
     325: invokevirtual #183                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withKeyAndMask:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     328: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     331: invokevirtual #182                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     334: checkcast     #90                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress
     337: astore        7
     339: aload_2
     340: aload_1
     341: invokevirtual #170                // Method java/util/Stack.pop:()Ljava/lang/Object;
     344: checkcast     #99                 // class org/bouncycastle/pqc/crypto/xmss/XMSSNode
     347: aload         9
     349: aload         7
     351: invokestatic  #211                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNodeUtil.randomizeHash:(Lorg/bouncycastle/pqc/crypto/xmss/WOTSPlus;Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;)Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     354: astore        9
     356: new           #99                 // class org/bouncycastle/pqc/crypto/xmss/XMSSNode
     359: dup
     360: aload         9
     362: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     365: iconst_1
     366: iadd
     367: aload         9
     369: invokevirtual #208                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getValue:()[B
     372: invokespecial #209                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode."<init>":(I[B)V
     375: astore        9
     377: new           #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     380: dup
     381: invokespecial #179                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder."<init>":()V
     384: aload         7
     386: invokevirtual #175                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getLayerAddress:()I
     389: invokevirtual #184                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     392: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     395: aload         7
     397: invokevirtual #178                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeAddress:()J
     400: invokevirtual #185                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     403: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     406: aload         7
     408: invokevirtual #176                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeHeight:()I
     411: iconst_1
     412: iadd
     413: invokevirtual #180                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeHeight:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     416: aload         7
     418: invokevirtual #177                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeIndex:()I
     421: invokevirtual #181                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeIndex:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     424: aload         7
     426: invokevirtual #174                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getKeyAndMask:()I
     429: invokevirtual #183                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withKeyAndMask:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     432: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     435: invokevirtual #182                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     438: checkcast     #90                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress
     441: astore        7
     443: goto          229
     446: aload_0
     447: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     450: ifnonnull     462
     453: aload_0
     454: aload         9
     456: putfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     459: goto          664
     462: aload_0
     463: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     466: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     469: aload         9
     471: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     474: if_icmpne     657
     477: new           #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     480: dup
     481: invokespecial #179                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder."<init>":()V
     484: aload         7
     486: invokevirtual #175                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getLayerAddress:()I
     489: invokevirtual #184                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     492: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     495: aload         7
     497: invokevirtual #178                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeAddress:()J
     500: invokevirtual #185                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     503: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     506: aload         7
     508: invokevirtual #176                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeHeight:()I
     511: invokevirtual #180                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeHeight:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     514: aload         7
     516: invokevirtual #177                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeIndex:()I
     519: iconst_1
     520: isub
     521: iconst_2
     522: idiv
     523: invokevirtual #181                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeIndex:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     526: aload         7
     528: invokevirtual #174                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getKeyAndMask:()I
     531: invokevirtual #183                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withKeyAndMask:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     534: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     537: invokevirtual #182                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     540: checkcast     #90                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress
     543: astore        7
     545: aload_2
     546: aload_0
     547: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     550: aload         9
     552: aload         7
     554: invokestatic  #211                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNodeUtil.randomizeHash:(Lorg/bouncycastle/pqc/crypto/xmss/WOTSPlus;Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;)Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     557: astore        9
     559: new           #99                 // class org/bouncycastle/pqc/crypto/xmss/XMSSNode
     562: dup
     563: aload_0
     564: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     567: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     570: iconst_1
     571: iadd
     572: aload         9
     574: invokevirtual #208                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getValue:()[B
     577: invokespecial #209                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode."<init>":(I[B)V
     580: astore        9
     582: aload_0
     583: aload         9
     585: putfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     588: new           #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     591: dup
     592: invokespecial #179                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder."<init>":()V
     595: aload         7
     597: invokevirtual #175                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getLayerAddress:()I
     600: invokevirtual #184                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withLayerAddress:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     603: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     606: aload         7
     608: invokevirtual #178                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeAddress:()J
     611: invokevirtual #185                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeAddress:(J)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     614: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     617: aload         7
     619: invokevirtual #176                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeHeight:()I
     622: iconst_1
     623: iadd
     624: invokevirtual #180                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeHeight:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     627: aload         7
     629: invokevirtual #177                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getTreeIndex:()I
     632: invokevirtual #181                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withTreeIndex:(I)Lorg/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder;
     635: aload         7
     637: invokevirtual #174                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.getKeyAndMask:()I
     640: invokevirtual #183                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.withKeyAndMask:(I)Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder;
     643: checkcast     #91                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder
     646: invokevirtual #182                // Method org/bouncycastle/pqc/crypto/xmss/HashTreeAddress$Builder.build:()Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress;
     649: checkcast     #90                 // class org/bouncycastle/pqc/crypto/xmss/HashTreeAddress
     652: astore        7
     654: goto          664
     657: aload_1
     658: aload         9
     660: invokevirtual #171                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     663: pop
     664: aload_0
     665: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
     668: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     671: aload_0
     672: getfield      #160                // Field initialHeight:I
     675: if_icmpne     686
     678: aload_0
     679: iconst_1
     680: putfield      #162                // Field finished:Z
     683: goto          705
     686: aload_0
     687: aload         9
     689: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
     692: putfield      #159                // Field height:I
     695: aload_0
     696: dup
     697: getfield      #161                // Field nextIndex:I
     700: iconst_1
     701: iadd
     702: putfield      #161                // Field nextIndex:I
     705: return

  int getHeight();
    Code:
       0: aload_0
       1: getfield      #163                // Field initialized:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #162                // Field finished:Z
      11: ifeq          17
      14: ldc           #1                  // int 2147483647
      16: ireturn
      17: aload_0
      18: getfield      #159                // Field height:I
      21: ireturn

  int getIndexLeaf();
    Code:
       0: aload_0
       1: getfield      #161                // Field nextIndex:I
       4: ireturn

  void setNode(org.bouncycastle.pqc.crypto.xmss.XMSSNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
       5: aload_0
       6: aload_1
       7: invokevirtual #207                // Method org/bouncycastle/pqc/crypto/xmss/XMSSNode.getHeight:()I
      10: putfield      #159                // Field height:I
      13: aload_0
      14: getfield      #159                // Field height:I
      17: aload_0
      18: getfield      #160                // Field initialHeight:I
      21: if_icmpne     29
      24: aload_0
      25: iconst_1
      26: putfield      #162                // Field finished:Z
      29: return

  boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #162                // Field finished:Z
       4: ireturn

  boolean isInitialized();
    Code:
       0: aload_0
       1: getfield      #163                // Field initialized:Z
       4: ireturn

  public org.bouncycastle.pqc.crypto.xmss.XMSSNode getTailNode();
    Code:
       0: aload_0
       1: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
       4: areturn

  protected org.bouncycastle.pqc.crypto.xmss.BDSTreeHash clone();
    Code:
       0: new           #89                 // class org/bouncycastle/pqc/crypto/xmss/BDSTreeHash
       3: dup
       4: aload_0
       5: getfield      #160                // Field initialHeight:I
       8: invokespecial #172                // Method "<init>":(I)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
      17: putfield      #164                // Field tailNode:Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;
      20: aload_1
      21: aload_0
      22: getfield      #159                // Field height:I
      25: putfield      #159                // Field height:I
      28: aload_1
      29: aload_0
      30: getfield      #161                // Field nextIndex:I
      33: putfield      #161                // Field nextIndex:I
      36: aload_1
      37: aload_0
      38: getfield      #163                // Field initialized:Z
      41: putfield      #163                // Field initialized:Z
      44: aload_1
      45: aload_0
      46: getfield      #162                // Field finished:Z
      49: putfield      #162                // Field finished:Z
      52: aload_1
      53: areturn

  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #173                // Method clone:()Lorg/bouncycastle/pqc/crypto/xmss/BDSTreeHash;
       4: areturn
}
