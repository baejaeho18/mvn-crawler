public class org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey implements javax.crypto.interfaces.PBEKey,javax.security.auth.Destroyable {
  private final java.util.concurrent.atomic.AtomicBoolean hasBeenDestroyed;

  java.lang.String algorithm;

  org.bouncycastle.asn1.ASN1ObjectIdentifier oid;

  int type;

  int digest;

  int keySize;

  int ivSize;

  private final char[] password;

  private final byte[] salt;

  private final int iterationCount;

  private final org.bouncycastle.crypto.CipherParameters param;

  boolean tryWrong;

  public org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, int, int, javax.crypto.spec.PBEKeySpec, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: invokespecial #139                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #75                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #141                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #135                // Field hasBeenDestroyed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: iconst_0
      18: putfield      #131                // Field tryWrong:Z
      21: aload_0
      22: aload_1
      23: putfield      #134                // Field algorithm:Ljava/lang/String;
      26: aload_0
      27: aload_2
      28: putfield      #136                // Field oid:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      31: aload_0
      32: iload_3
      33: putfield      #130                // Field type:I
      36: aload_0
      37: iload         4
      39: putfield      #126                // Field digest:I
      42: aload_0
      43: iload         5
      45: putfield      #129                // Field keySize:I
      48: aload_0
      49: iload         6
      51: putfield      #128                // Field ivSize:I
      54: aload_0
      55: aload         7
      57: invokevirtual #145                // Method javax/crypto/spec/PBEKeySpec.getPassword:()[C
      60: putfield      #133                // Field password:[C
      63: aload_0
      64: aload         7
      66: invokevirtual #143                // Method javax/crypto/spec/PBEKeySpec.getIterationCount:()I
      69: putfield      #127                // Field iterationCount:I
      72: aload_0
      73: aload         7
      75: invokevirtual #144                // Method javax/crypto/spec/PBEKeySpec.getSalt:()[B
      78: putfield      #132                // Field salt:[B
      81: aload_0
      82: aload         8
      84: putfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      87: return

  public org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey(java.lang.String, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: invokespecial #139                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #75                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #141                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #135                // Field hasBeenDestroyed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: iconst_0
      18: putfield      #131                // Field tryWrong:Z
      21: aload_0
      22: aload_1
      23: putfield      #134                // Field algorithm:Ljava/lang/String;
      26: aload_0
      27: aload_2
      28: putfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      31: aload_0
      32: aconst_null
      33: putfield      #133                // Field password:[C
      36: aload_0
      37: iconst_m1
      38: putfield      #127                // Field iterationCount:I
      41: aload_0
      42: aconst_null
      43: putfield      #132                // Field salt:[B
      46: return

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #134                // Field algorithm:Ljava/lang/String;
       8: areturn

  public java.lang.String getFormat();
    Code:
       0: ldc           #1                  // String RAW
       2: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
       8: ifnull        51
      11: aload_0
      12: getfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      15: instanceof    #81                 // class org/bouncycastle/crypto/params/ParametersWithIV
      18: ifeq          38
      21: aload_0
      22: getfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      25: checkcast     #81                 // class org/bouncycastle/crypto/params/ParametersWithIV
      28: invokevirtual #150                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      31: checkcast     #80                 // class org/bouncycastle/crypto/params/KeyParameter
      34: astore_1
      35: goto          46
      38: aload_0
      39: getfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      42: checkcast     #80                 // class org/bouncycastle/crypto/params/KeyParameter
      45: astore_1
      46: aload_1
      47: invokevirtual #149                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      50: areturn
      51: aload_0
      52: getfield      #130                // Field type:I
      55: iconst_2
      56: if_icmpne     67
      59: aload_0
      60: getfield      #133                // Field password:[C
      63: invokestatic  #146                // Method org/bouncycastle/crypto/PBEParametersGenerator.PKCS12PasswordToBytes:([C)[B
      66: areturn
      67: aload_0
      68: getfield      #130                // Field type:I
      71: iconst_5
      72: if_icmpne     83
      75: aload_0
      76: getfield      #133                // Field password:[C
      79: invokestatic  #148                // Method org/bouncycastle/crypto/PBEParametersGenerator.PKCS5PasswordToUTF8Bytes:([C)[B
      82: areturn
      83: aload_0
      84: getfield      #133                // Field password:[C
      87: invokestatic  #147                // Method org/bouncycastle/crypto/PBEParametersGenerator.PKCS5PasswordToBytes:([C)[B
      90: areturn

  int getType();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #130                // Field type:I
       8: ireturn

  int getDigest();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #126                // Field digest:I
       8: ireturn

  int getKeySize();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #129                // Field keySize:I
       8: ireturn

  public int getIvSize();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #128                // Field ivSize:I
       8: ireturn

  public org.bouncycastle.crypto.CipherParameters getParam();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #137                // Field param:Lorg/bouncycastle/crypto/CipherParameters;
       8: areturn

  public char[] getPassword();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #133                // Field password:[C
       8: ifnonnull     21
      11: new           #73                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #3                  // String no password available
      17: invokespecial #138                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #133                // Field password:[C
      25: invokestatic  #154                // Method org/bouncycastle/util/Arrays.clone:([C)[C
      28: areturn

  public byte[] getSalt();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #132                // Field salt:[B
       8: invokestatic  #152                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      11: areturn

  public int getIterationCount();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #127                // Field iterationCount:I
       8: ireturn

  public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID();
    Code:
       0: aload_0
       1: invokestatic  #151                // Method checkDestroyed:(Ljavax/security/auth/Destroyable;)V
       4: aload_0
       5: getfield      #136                // Field oid:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       8: areturn

  public void setTryWrongPKCS12Zero(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #131                // Field tryWrong:Z
       5: return

  boolean shouldTryWrongPKCS12();
    Code:
       0: aload_0
       1: getfield      #131                // Field tryWrong:Z
       4: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #135                // Field hasBeenDestroyed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #142                // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifne          41
      11: aload_0
      12: getfield      #133                // Field password:[C
      15: ifnull        26
      18: aload_0
      19: getfield      #133                // Field password:[C
      22: iconst_0
      23: invokestatic  #155                // Method org/bouncycastle/util/Arrays.fill:([CC)V
      26: aload_0
      27: getfield      #132                // Field salt:[B
      30: ifnull        41
      33: aload_0
      34: getfield      #132                // Field salt:[B
      37: iconst_0
      38: invokestatic  #153                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      41: return

  public boolean isDestroyed();
    Code:
       0: aload_0
       1: getfield      #135                // Field hasBeenDestroyed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #140                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  static void checkDestroyed(javax.security.auth.Destroyable);
    Code:
       0: aload_0
       1: invokeinterface #156,  1          // InterfaceMethod javax/security/auth/Destroyable.isDestroyed:()Z
       6: ifeq          19
       9: new           #73                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #2                  // String key has been destroyed
      15: invokespecial #138                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return
}
