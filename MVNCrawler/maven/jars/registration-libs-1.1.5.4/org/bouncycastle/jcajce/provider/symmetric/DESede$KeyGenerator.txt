public class org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator extends org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator {
  private boolean keySizeSet;

  public org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator();
    Code:
       0: aload_0
       1: ldc           #1                  // String DESede
       3: sipush        192
       6: new           #34                 // class org/bouncycastle/crypto/generators/DESedeKeyGenerator
       9: dup
      10: invokespecial #73                 // Method org/bouncycastle/crypto/generators/DESedeKeyGenerator."<init>":()V
      13: invokespecial #75                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseKeyGenerator."<init>":(Ljava/lang/String;ILorg/bouncycastle/crypto/CipherKeyGenerator;)V
      16: aload_0
      17: iconst_0
      18: putfield      #63                 // Field keySizeSet:Z
      21: return

  protected void engineInit(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #74                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseKeyGenerator.engineInit:(ILjava/security/SecureRandom;)V
       6: aload_0
       7: iconst_1
       8: putfield      #63                 // Field keySizeSet:Z
      11: return

  protected javax.crypto.SecretKey engineGenerateKey();
    Code:
       0: aload_0
       1: getfield      #64                 // Field uninitialised:Z
       4: ifeq          33
       7: aload_0
       8: getfield      #66                 // Field engine:Lorg/bouncycastle/crypto/CipherKeyGenerator;
      11: new           #33                 // class org/bouncycastle/crypto/KeyGenerationParameters
      14: dup
      15: invokestatic  #71                 // Method org/bouncycastle/crypto/CryptoServicesRegistrar.getSecureRandom:()Ljava/security/SecureRandom;
      18: aload_0
      19: getfield      #62                 // Field defaultKeySize:I
      22: invokespecial #72                 // Method org/bouncycastle/crypto/KeyGenerationParameters."<init>":(Ljava/security/SecureRandom;I)V
      25: invokevirtual #70                 // Method org/bouncycastle/crypto/CipherKeyGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      28: aload_0
      29: iconst_0
      30: putfield      #64                 // Field uninitialised:Z
      33: aload_0
      34: getfield      #63                 // Field keySizeSet:Z
      37: ifne          71
      40: aload_0
      41: getfield      #66                 // Field engine:Lorg/bouncycastle/crypto/CipherKeyGenerator;
      44: invokevirtual #69                 // Method org/bouncycastle/crypto/CipherKeyGenerator.generateKey:()[B
      47: astore_1
      48: aload_1
      49: iconst_0
      50: aload_1
      51: bipush        16
      53: bipush        8
      55: invokestatic  #67                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      58: new           #30                 // class javax/crypto/spec/SecretKeySpec
      61: dup
      62: aload_1
      63: aload_0
      64: getfield      #65                 // Field algName:Ljava/lang/String;
      67: invokespecial #68                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      70: areturn
      71: new           #30                 // class javax/crypto/spec/SecretKeySpec
      74: dup
      75: aload_0
      76: getfield      #66                 // Field engine:Lorg/bouncycastle/crypto/CipherKeyGenerator;
      79: invokevirtual #69                 // Method org/bouncycastle/crypto/CipherKeyGenerator.generateKey:()[B
      82: aload_0
      83: getfield      #65                 // Field algName:Ljava/lang/String;
      86: invokespecial #68                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      89: areturn
}
