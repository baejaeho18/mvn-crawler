public class org.bouncycastle.crypto.engines.RSAEngine implements org.bouncycastle.crypto.AsymmetricBlockCipher {
  private org.bouncycastle.crypto.engines.RSACoreEngine core;

  public org.bouncycastle.crypto.engines.RSAEngine();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: ifnonnull     18
       7: aload_0
       8: new           #22                 // class org/bouncycastle/crypto/engines/RSACoreEngine
      11: dup
      12: invokespecial #44                 // Method org/bouncycastle/crypto/engines/RSACoreEngine."<init>":()V
      15: putfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      18: aload_0
      19: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      22: iload_1
      23: aload_2
      24: invokevirtual #47                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      27: return

  public int getInputBlockSize();
    Code:
       0: aload_0
       1: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: invokevirtual #42                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.getInputBlockSize:()I
       7: ireturn

  public int getOutputBlockSize();
    Code:
       0: aload_0
       1: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: invokevirtual #43                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.getOutputBlockSize:()I
       7: ireturn

  public byte[] processBlock(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
       4: ifnonnull     17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String RSA engine not initialised
      13: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      21: aload_0
      22: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      25: aload_0
      26: getfield      #39                 // Field core:Lorg/bouncycastle/crypto/engines/RSACoreEngine;
      29: aload_1
      30: iload_2
      31: iload_3
      32: invokevirtual #46                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.convertInput:([BII)Ljava/math/BigInteger;
      35: invokevirtual #48                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.processBlock:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      38: invokevirtual #45                 // Method org/bouncycastle/crypto/engines/RSACoreEngine.convertOutput:(Ljava/math/BigInteger;)[B
      41: areturn
}
