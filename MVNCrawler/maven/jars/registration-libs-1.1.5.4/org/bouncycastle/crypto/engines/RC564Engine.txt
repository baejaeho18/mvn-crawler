public class org.bouncycastle.crypto.engines.RC564Engine implements org.bouncycastle.crypto.BlockCipher {
  private static final int wordSize;

  private static final int bytesPerWord;

  private int _noRounds;

  private long[] _S;

  private static final long P64;

  private static final long Q64;

  private boolean forEncryption;

  public org.bouncycastle.crypto.engines.RC564Engine();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        12
       7: putfield      #92                 // Field _noRounds:I
      10: aload_0
      11: aconst_null
      12: putfield      #94                 // Field _S:[J
      15: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #1                  // String RC5-64
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #68                 // class org/bouncycastle/crypto/params/RC5Parameters
       4: ifne          40
       7: new           #63                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #65                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #2                  // String invalid parameter passed to RC564 init -
      20: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #98                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #95                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #96                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: checkcast     #68                 // class org/bouncycastle/crypto/params/RC5Parameters
      44: astore_3
      45: aload_0
      46: iload_1
      47: putfield      #93                 // Field forEncryption:Z
      50: aload_0
      51: aload_3
      52: invokevirtual #109                // Method org/bouncycastle/crypto/params/RC5Parameters.getRounds:()I
      55: putfield      #92                 // Field _noRounds:I
      58: aload_0
      59: aload_3
      60: invokevirtual #110                // Method org/bouncycastle/crypto/params/RC5Parameters.getKey:()[B
      63: invokespecial #105                // Method setKey:([B)V
      66: return

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #93                 // Field forEncryption:Z
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: iload_2
      10: aload_3
      11: iload         4
      13: invokespecial #108                // Method encryptBlock:([BI[BI)I
      16: goto          28
      19: aload_0
      20: aload_1
      21: iload_2
      22: aload_3
      23: iload         4
      25: invokespecial #107                // Method decryptBlock:([BI[BI)I
      28: ireturn

  public void reset();
    Code:
       0: return

  private void setKey(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        7
       4: iadd
       5: bipush        8
       7: idiv
       8: newarray       long
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_1
      15: arraylength
      16: if_icmpeq     50
      19: aload_2
      20: iload_3
      21: bipush        8
      23: idiv
      24: dup2
      25: laload
      26: aload_1
      27: iload_3
      28: baload
      29: sipush        255
      32: iand
      33: i2l
      34: bipush        8
      36: iload_3
      37: bipush        8
      39: irem
      40: imul
      41: lshl
      42: ladd
      43: lastore
      44: iinc          3, 1
      47: goto          13
      50: aload_0
      51: iconst_2
      52: aload_0
      53: getfield      #92                 // Field _noRounds:I
      56: iconst_1
      57: iadd
      58: imul
      59: newarray       long
      61: putfield      #94                 // Field _S:[J
      64: aload_0
      65: getfield      #94                 // Field _S:[J
      68: iconst_0
      69: ldc2_w        #54                 // long -5196783011329398165l
      72: lastore
      73: iconst_1
      74: istore_3
      75: iload_3
      76: aload_0
      77: getfield      #94                 // Field _S:[J
      80: arraylength
      81: if_icmpge     108
      84: aload_0
      85: getfield      #94                 // Field _S:[J
      88: iload_3
      89: aload_0
      90: getfield      #94                 // Field _S:[J
      93: iload_3
      94: iconst_1
      95: isub
      96: laload
      97: ldc2_w        #52                 // long -7046029254386353131l
     100: ladd
     101: lastore
     102: iinc          3, 1
     105: goto          75
     108: aload_2
     109: arraylength
     110: aload_0
     111: getfield      #94                 // Field _S:[J
     114: arraylength
     115: if_icmple     126
     118: iconst_3
     119: aload_2
     120: arraylength
     121: imul
     122: istore_3
     123: goto          134
     126: iconst_3
     127: aload_0
     128: getfield      #94                 // Field _S:[J
     131: arraylength
     132: imul
     133: istore_3
     134: lconst_0
     135: lstore        4
     137: lconst_0
     138: lstore        6
     140: iconst_0
     141: istore        8
     143: iconst_0
     144: istore        9
     146: iconst_0
     147: istore        10
     149: iload         10
     151: iload_3
     152: if_icmpge     238
     155: aload_0
     156: getfield      #94                 // Field _S:[J
     159: iload         8
     161: aload_0
     162: aload_0
     163: getfield      #94                 // Field _S:[J
     166: iload         8
     168: laload
     169: lload         4
     171: ladd
     172: lload         6
     174: ladd
     175: ldc2_w        #56                 // long 3l
     178: invokespecial #102                // Method rotateLeft:(JJ)J
     181: dup2_x2
     182: lastore
     183: lstore        4
     185: aload_2
     186: iload         9
     188: aload_0
     189: aload_2
     190: iload         9
     192: laload
     193: lload         4
     195: ladd
     196: lload         6
     198: ladd
     199: lload         4
     201: lload         6
     203: ladd
     204: invokespecial #102                // Method rotateLeft:(JJ)J
     207: dup2_x2
     208: lastore
     209: lstore        6
     211: iload         8
     213: iconst_1
     214: iadd
     215: aload_0
     216: getfield      #94                 // Field _S:[J
     219: arraylength
     220: irem
     221: istore        8
     223: iload         9
     225: iconst_1
     226: iadd
     227: aload_2
     228: arraylength
     229: irem
     230: istore        9
     232: iinc          10, 1
     235: goto          149
     238: return

  private int encryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #106                // Method bytesToWord:([BI)J
       6: aload_0
       7: getfield      #94                 // Field _S:[J
      10: iconst_0
      11: laload
      12: ladd
      13: lstore        5
      15: aload_0
      16: aload_1
      17: iload_2
      18: bipush        8
      20: iadd
      21: invokespecial #106                // Method bytesToWord:([BI)J
      24: aload_0
      25: getfield      #94                 // Field _S:[J
      28: iconst_1
      29: laload
      30: ladd
      31: lstore        7
      33: iconst_1
      34: istore        9
      36: iload         9
      38: aload_0
      39: getfield      #92                 // Field _noRounds:I
      42: if_icmpgt     99
      45: aload_0
      46: lload         5
      48: lload         7
      50: lxor
      51: lload         7
      53: invokespecial #102                // Method rotateLeft:(JJ)J
      56: aload_0
      57: getfield      #94                 // Field _S:[J
      60: iconst_2
      61: iload         9
      63: imul
      64: laload
      65: ladd
      66: lstore        5
      68: aload_0
      69: lload         7
      71: lload         5
      73: lxor
      74: lload         5
      76: invokespecial #102                // Method rotateLeft:(JJ)J
      79: aload_0
      80: getfield      #94                 // Field _S:[J
      83: iconst_2
      84: iload         9
      86: imul
      87: iconst_1
      88: iadd
      89: laload
      90: ladd
      91: lstore        7
      93: iinc          9, 1
      96: goto          36
      99: aload_0
     100: lload         5
     102: aload_3
     103: iload         4
     105: invokespecial #104                // Method wordToBytes:(J[BI)V
     108: aload_0
     109: lload         7
     111: aload_3
     112: iload         4
     114: bipush        8
     116: iadd
     117: invokespecial #104                // Method wordToBytes:(J[BI)V
     120: bipush        16
     122: ireturn

  private int decryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #106                // Method bytesToWord:([BI)J
       6: lstore        5
       8: aload_0
       9: aload_1
      10: iload_2
      11: bipush        8
      13: iadd
      14: invokespecial #106                // Method bytesToWord:([BI)J
      17: lstore        7
      19: aload_0
      20: getfield      #92                 // Field _noRounds:I
      23: istore        9
      25: iload         9
      27: iconst_1
      28: if_icmplt     85
      31: aload_0
      32: lload         7
      34: aload_0
      35: getfield      #94                 // Field _S:[J
      38: iconst_2
      39: iload         9
      41: imul
      42: iconst_1
      43: iadd
      44: laload
      45: lsub
      46: lload         5
      48: invokespecial #103                // Method rotateRight:(JJ)J
      51: lload         5
      53: lxor
      54: lstore        7
      56: aload_0
      57: lload         5
      59: aload_0
      60: getfield      #94                 // Field _S:[J
      63: iconst_2
      64: iload         9
      66: imul
      67: laload
      68: lsub
      69: lload         7
      71: invokespecial #103                // Method rotateRight:(JJ)J
      74: lload         7
      76: lxor
      77: lstore        5
      79: iinc          9, -1
      82: goto          25
      85: aload_0
      86: lload         5
      88: aload_0
      89: getfield      #94                 // Field _S:[J
      92: iconst_0
      93: laload
      94: lsub
      95: aload_3
      96: iload         4
      98: invokespecial #104                // Method wordToBytes:(J[BI)V
     101: aload_0
     102: lload         7
     104: aload_0
     105: getfield      #94                 // Field _S:[J
     108: iconst_1
     109: laload
     110: lsub
     111: aload_3
     112: iload         4
     114: bipush        8
     116: iadd
     117: invokespecial #104                // Method wordToBytes:(J[BI)V
     120: bipush        16
     122: ireturn

  private long rotateLeft(long, long);
    Code:
       0: lload_1
       1: lload_3
       2: ldc2_w        #58                 // long 63l
       5: land
       6: l2i
       7: lshl
       8: lload_1
       9: ldc2_w        #60                 // long 64l
      12: lload_3
      13: ldc2_w        #58                 // long 63l
      16: land
      17: lsub
      18: l2i
      19: lushr
      20: lor
      21: lreturn

  private long rotateRight(long, long);
    Code:
       0: lload_1
       1: lload_3
       2: ldc2_w        #58                 // long 63l
       5: land
       6: l2i
       7: lushr
       8: lload_1
       9: ldc2_w        #60                 // long 64l
      12: lload_3
      13: ldc2_w        #58                 // long 63l
      16: land
      17: lsub
      18: l2i
      19: lshl
      20: lor
      21: lreturn

  private long bytesToWord(byte[], int);
    Code:
       0: lconst_0
       1: lstore_3
       2: bipush        7
       4: istore        5
       6: iload         5
       8: iflt          34
      11: lload_3
      12: bipush        8
      14: lshl
      15: aload_1
      16: iload         5
      18: iload_2
      19: iadd
      20: baload
      21: sipush        255
      24: iand
      25: i2l
      26: ladd
      27: lstore_3
      28: iinc          5, -1
      31: goto          6
      34: lload_3
      35: lreturn

  private void wordToBytes(long, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: bipush        8
       7: if_icmpge     31
      10: aload_3
      11: iload         5
      13: iload         4
      15: iadd
      16: lload_1
      17: l2i
      18: i2b
      19: bastore
      20: lload_1
      21: bipush        8
      23: lushr
      24: lstore_1
      25: iinc          5, 1
      28: goto          3
      31: return
}
