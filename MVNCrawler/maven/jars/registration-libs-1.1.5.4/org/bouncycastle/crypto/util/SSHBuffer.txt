class org.bouncycastle.crypto.util.SSHBuffer {
  private final byte[] buffer;

  private int pos;

  public org.bouncycastle.crypto.util.SSHBuffer(byte[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #69                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #66                 // Field pos:I
       9: aload_0
      10: aload_2
      11: putfield      #67                 // Field buffer:[B
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_1
      18: arraylength
      19: if_icmpeq     47
      22: aload_1
      23: iload_3
      24: baload
      25: aload_2
      26: iload_3
      27: baload
      28: if_icmpeq     41
      31: new           #45                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #3                  // String magic-number incorrect
      37: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iinc          3, 1
      44: goto          16
      47: aload_0
      48: dup
      49: getfield      #66                 // Field pos:I
      52: aload_1
      53: arraylength
      54: iadd
      55: putfield      #66                 // Field pos:I
      58: return

  public org.bouncycastle.crypto.util.SSHBuffer(byte[]);
    Code:
       0: aload_0
       1: invokespecial #69                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #66                 // Field pos:I
       9: aload_0
      10: aload_1
      11: putfield      #67                 // Field buffer:[B
      14: return

  public int readU32();
    Code:
       0: aload_0
       1: getfield      #66                 // Field pos:I
       4: aload_0
       5: getfield      #67                 // Field buffer:[B
       8: arraylength
       9: iconst_4
      10: isub
      11: if_icmple     24
      14: new           #45                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #1                  // String 4 bytes for U32 exceeds buffer.
      20: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #67                 // Field buffer:[B
      28: aload_0
      29: dup
      30: getfield      #66                 // Field pos:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #66                 // Field pos:I
      39: baload
      40: sipush        255
      43: iand
      44: bipush        24
      46: ishl
      47: istore_1
      48: iload_1
      49: aload_0
      50: getfield      #67                 // Field buffer:[B
      53: aload_0
      54: dup
      55: getfield      #66                 // Field pos:I
      58: dup_x1
      59: iconst_1
      60: iadd
      61: putfield      #66                 // Field pos:I
      64: baload
      65: sipush        255
      68: iand
      69: bipush        16
      71: ishl
      72: ior
      73: istore_1
      74: iload_1
      75: aload_0
      76: getfield      #67                 // Field buffer:[B
      79: aload_0
      80: dup
      81: getfield      #66                 // Field pos:I
      84: dup_x1
      85: iconst_1
      86: iadd
      87: putfield      #66                 // Field pos:I
      90: baload
      91: sipush        255
      94: iand
      95: bipush        8
      97: ishl
      98: ior
      99: istore_1
     100: iload_1
     101: aload_0
     102: getfield      #67                 // Field buffer:[B
     105: aload_0
     106: dup
     107: getfield      #66                 // Field pos:I
     110: dup_x1
     111: iconst_1
     112: iadd
     113: putfield      #66                 // Field pos:I
     116: baload
     117: sipush        255
     120: iand
     121: ior
     122: istore_1
     123: iload_1
     124: ireturn

  public java.lang.String readString();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method readBlock:()[B
       4: invokestatic  #76                 // Method org/bouncycastle/util/Strings.fromByteArray:([B)Ljava/lang/String;
       7: areturn

  public byte[] readBlock();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method readU32:()I
       4: istore_1
       5: iload_1
       6: ifne          13
       9: iconst_0
      10: newarray       byte
      12: areturn
      13: aload_0
      14: getfield      #66                 // Field pos:I
      17: aload_0
      18: getfield      #67                 // Field buffer:[B
      21: arraylength
      22: iload_1
      23: isub
      24: if_icmple     37
      27: new           #45                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #6                  // String not enough data for block
      33: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #66                 // Field pos:I
      41: istore_2
      42: aload_0
      43: dup
      44: getfield      #66                 // Field pos:I
      47: iload_1
      48: iadd
      49: putfield      #66                 // Field pos:I
      52: aload_0
      53: getfield      #67                 // Field buffer:[B
      56: iload_2
      57: aload_0
      58: getfield      #66                 // Field pos:I
      61: invokestatic  #75                 // Method org/bouncycastle/util/Arrays.copyOfRange:([BII)[B
      64: areturn

  public void skipBlock();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method readU32:()I
       4: istore_1
       5: aload_0
       6: getfield      #66                 // Field pos:I
       9: aload_0
      10: getfield      #67                 // Field buffer:[B
      13: arraylength
      14: iload_1
      15: isub
      16: if_icmple     29
      19: new           #45                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #6                  // String not enough data for block
      25: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: dup
      31: getfield      #66                 // Field pos:I
      34: iload_1
      35: iadd
      36: putfield      #66                 // Field pos:I
      39: return

  public byte[] readPaddedBlock();
    Code:
       0: aload_0
       1: bipush        8
       3: invokevirtual #73                 // Method readPaddedBlock:(I)[B
       6: areturn

  public byte[] readPaddedBlock(int);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method readU32:()I
       4: istore_2
       5: iload_2
       6: ifne          13
       9: iconst_0
      10: newarray       byte
      12: areturn
      13: aload_0
      14: getfield      #66                 // Field pos:I
      17: aload_0
      18: getfield      #67                 // Field buffer:[B
      21: arraylength
      22: iload_2
      23: isub
      24: if_icmple     37
      27: new           #45                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #6                  // String not enough data for block
      33: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: iload_1
      39: irem
      40: istore_3
      41: iconst_0
      42: iload_3
      43: if_icmpeq     56
      46: new           #45                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #4                  // String missing padding
      52: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #66                 // Field pos:I
      60: istore        4
      62: aload_0
      63: dup
      64: getfield      #66                 // Field pos:I
      67: iload_2
      68: iadd
      69: putfield      #66                 // Field pos:I
      72: aload_0
      73: getfield      #66                 // Field pos:I
      76: istore        5
      78: iload_2
      79: ifle          171
      82: aload_0
      83: getfield      #67                 // Field buffer:[B
      86: aload_0
      87: getfield      #66                 // Field pos:I
      90: iconst_1
      91: isub
      92: baload
      93: sipush        255
      96: iand
      97: istore        6
      99: iconst_0
     100: iload         6
     102: if_icmpge     171
     105: iload         6
     107: iload_1
     108: if_icmpge     171
     111: iload         6
     113: istore        7
     115: iload         5
     117: iload         7
     119: isub
     120: istore        5
     122: iconst_1
     123: istore        8
     125: iload         5
     127: istore        9
     129: iload         8
     131: iload         7
     133: if_icmpgt     171
     136: iload         8
     138: aload_0
     139: getfield      #67                 // Field buffer:[B
     142: iload         9
     144: baload
     145: sipush        255
     148: iand
     149: if_icmpeq     162
     152: new           #45                 // class java/lang/IllegalArgumentException
     155: dup
     156: ldc           #2                  // String incorrect padding
     158: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: iinc          8, 1
     165: iinc          9, 1
     168: goto          129
     171: aload_0
     172: getfield      #67                 // Field buffer:[B
     175: iload         4
     177: iload         5
     179: invokestatic  #75                 // Method org/bouncycastle/util/Arrays.copyOfRange:([BII)[B
     182: areturn

  public java.math.BigInteger readBigNumPositive();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method readU32:()I
       4: istore_1
       5: aload_0
       6: getfield      #66                 // Field pos:I
       9: iload_1
      10: iadd
      11: aload_0
      12: getfield      #67                 // Field buffer:[B
      15: arraylength
      16: if_icmple     29
      19: new           #45                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #5                  // String not enough data for big num
      25: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: getfield      #66                 // Field pos:I
      33: istore_2
      34: aload_0
      35: dup
      36: getfield      #66                 // Field pos:I
      39: iload_1
      40: iadd
      41: putfield      #66                 // Field pos:I
      44: aload_0
      45: getfield      #67                 // Field buffer:[B
      48: iload_2
      49: aload_0
      50: getfield      #66                 // Field pos:I
      53: invokestatic  #75                 // Method org/bouncycastle/util/Arrays.copyOfRange:([BII)[B
      56: astore_3
      57: new           #47                 // class java/math/BigInteger
      60: dup
      61: iconst_1
      62: aload_3
      63: invokespecial #70                 // Method java/math/BigInteger."<init>":(I[B)V
      66: areturn

  public byte[] getBuffer();
    Code:
       0: aload_0
       1: getfield      #67                 // Field buffer:[B
       4: invokestatic  #74                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public boolean hasRemaining();
    Code:
       0: aload_0
       1: getfield      #66                 // Field pos:I
       4: aload_0
       5: getfield      #67                 // Field buffer:[B
       8: arraylength
       9: if_icmpge     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn
}
