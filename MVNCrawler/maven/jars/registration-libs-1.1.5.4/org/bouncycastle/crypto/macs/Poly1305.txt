public class org.bouncycastle.crypto.macs.Poly1305 implements org.bouncycastle.crypto.Mac {
  private static final int BLOCK_SIZE;

  private final org.bouncycastle.crypto.BlockCipher cipher;

  private final byte[] singleByte;

  private int r0;

  private int r1;

  private int r2;

  private int r3;

  private int r4;

  private int s1;

  private int s2;

  private int s3;

  private int s4;

  private int k0;

  private int k1;

  private int k2;

  private int k3;

  private final byte[] currentBlock;

  private int currentBlockOffset;

  private int h0;

  private int h1;

  private int h2;

  private int h3;

  private int h4;

  public org.bouncycastle.crypto.macs.Poly1305();
    Code:
       0: aload_0
       1: invokespecial #189                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #185                // Field singleByte:[B
      11: aload_0
      12: bipush        16
      14: newarray       byte
      16: putfield      #184                // Field currentBlock:[B
      19: aload_0
      20: iconst_0
      21: putfield      #165                // Field currentBlockOffset:I
      24: aload_0
      25: aconst_null
      26: putfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      29: return

  public org.bouncycastle.crypto.macs.Poly1305(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: invokespecial #189                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #185                // Field singleByte:[B
      11: aload_0
      12: bipush        16
      14: newarray       byte
      16: putfield      #184                // Field currentBlock:[B
      19: aload_0
      20: iconst_0
      21: putfield      #165                // Field currentBlockOffset:I
      24: aload_1
      25: invokeinterface #206,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      30: bipush        16
      32: if_icmpeq     45
      35: new           #99                 // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #12                 // String Poly1305 requires a 128 bit block cipher.
      41: invokespecial #187                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: putfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      50: return

  public void init(org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       6: ifnull        41
       9: aload_1
      10: instanceof    #111                // class org/bouncycastle/crypto/params/ParametersWithIV
      13: ifne          26
      16: new           #99                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #14                 // String Poly1305 requires an IV when used with a block cipher.
      22: invokespecial #187                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_1
      27: checkcast     #111                // class org/bouncycastle/crypto/params/ParametersWithIV
      30: astore_3
      31: aload_3
      32: invokevirtual #202                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      35: astore_2
      36: aload_3
      37: invokevirtual #203                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      40: astore_1
      41: aload_1
      42: instanceof    #110                // class org/bouncycastle/crypto/params/KeyParameter
      45: ifne          58
      48: new           #99                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #13                 // String Poly1305 requires a key.
      54: invokespecial #187                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_1
      59: checkcast     #110                // class org/bouncycastle/crypto/params/KeyParameter
      62: astore_3
      63: aload_0
      64: aload_3
      65: invokevirtual #200                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      68: aload_2
      69: invokespecial #199                // Method setKey:([B[B)V
      72: aload_0
      73: invokevirtual #196                // Method reset:()V
      76: return

  private void setKey(byte[], byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        32
       4: if_icmpeq     17
       7: new           #99                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #10                 // String Poly1305 key must be 256 bits.
      13: invokespecial #187                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      21: ifnull        45
      24: aload_2
      25: ifnull        35
      28: aload_2
      29: arraylength
      30: bipush        16
      32: if_icmpeq     45
      35: new           #99                 // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #11                 // String Poly1305 requires a 128 bit IV.
      41: invokespecial #187                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_1
      46: iconst_0
      47: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      50: istore_3
      51: aload_1
      52: iconst_4
      53: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      56: istore        4
      58: aload_1
      59: bipush        8
      61: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      64: istore        5
      66: aload_1
      67: bipush        12
      69: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      72: istore        6
      74: aload_0
      75: iload_3
      76: ldc           #6                  // int 67108863
      78: iand
      79: putfield      #175                // Field r0:I
      82: aload_0
      83: iload_3
      84: bipush        26
      86: iushr
      87: iload         4
      89: bipush        6
      91: ishl
      92: ior
      93: ldc           #5                  // int 67108611
      95: iand
      96: putfield      #176                // Field r1:I
      99: aload_0
     100: iload         4
     102: bipush        20
     104: iushr
     105: iload         5
     107: bipush        12
     109: ishl
     110: ior
     111: ldc           #4                  // int 67092735
     113: iand
     114: putfield      #177                // Field r2:I
     117: aload_0
     118: iload         5
     120: bipush        14
     122: iushr
     123: iload         6
     125: bipush        18
     127: ishl
     128: ior
     129: ldc           #3                  // int 66076671
     131: iand
     132: putfield      #178                // Field r3:I
     135: aload_0
     136: iload         6
     138: bipush        8
     140: iushr
     141: ldc           #1                  // int 1048575
     143: iand
     144: putfield      #179                // Field r4:I
     147: aload_0
     148: aload_0
     149: getfield      #176                // Field r1:I
     152: iconst_5
     153: imul
     154: putfield      #180                // Field s1:I
     157: aload_0
     158: aload_0
     159: getfield      #177                // Field r2:I
     162: iconst_5
     163: imul
     164: putfield      #181                // Field s2:I
     167: aload_0
     168: aload_0
     169: getfield      #178                // Field r3:I
     172: iconst_5
     173: imul
     174: putfield      #182                // Field s3:I
     177: aload_0
     178: aload_0
     179: getfield      #179                // Field r4:I
     182: iconst_5
     183: imul
     184: putfield      #183                // Field s4:I
     187: aload_0
     188: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     191: ifnonnull     204
     194: aload_1
     195: astore        7
     197: bipush        16
     199: istore        8
     201: goto          250
     204: bipush        16
     206: newarray       byte
     208: astore        7
     210: iconst_0
     211: istore        8
     213: aload_0
     214: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     217: iconst_1
     218: new           #110                // class org/bouncycastle/crypto/params/KeyParameter
     221: dup
     222: aload_1
     223: bipush        16
     225: bipush        16
     227: invokespecial #201                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([BII)V
     230: invokeinterface #209,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     235: aload_0
     236: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     239: aload_2
     240: iconst_0
     241: aload         7
     243: iconst_0
     244: invokeinterface #207,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     249: pop
     250: aload_0
     251: aload         7
     253: iload         8
     255: iconst_0
     256: iadd
     257: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     260: putfield      #171                // Field k0:I
     263: aload_0
     264: aload         7
     266: iload         8
     268: iconst_4
     269: iadd
     270: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     273: putfield      #172                // Field k1:I
     276: aload_0
     277: aload         7
     279: iload         8
     281: bipush        8
     283: iadd
     284: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     287: putfield      #173                // Field k2:I
     290: aload_0
     291: aload         7
     293: iload         8
     295: bipush        12
     297: iadd
     298: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     301: putfield      #174                // Field k3:I
     304: return

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: ifnonnull     12
       7: ldc           #9                  // String Poly1305
       9: goto          39
      12: new           #103                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #190                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #15                 // String Poly1305-
      21: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #186                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      28: invokeinterface #208,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      33: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #191                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public int getMacSize();
    Code:
       0: bipush        16
       2: ireturn

  public void update(byte) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #185                // Field singleByte:[B
       4: iconst_0
       5: iload_1
       6: bastore
       7: aload_0
       8: aload_0
       9: getfield      #185                // Field singleByte:[B
      12: iconst_0
      13: iconst_1
      14: invokevirtual #198                // Method update:([BII)V
      17: return

  public void update(byte[], int, int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload_3
       4: iload         4
       6: if_icmple     82
       9: aload_0
      10: getfield      #165                // Field currentBlockOffset:I
      13: bipush        16
      15: if_icmpne     27
      18: aload_0
      19: invokespecial #195                // Method processBlock:()V
      22: aload_0
      23: iconst_0
      24: putfield      #165                // Field currentBlockOffset:I
      27: iload_3
      28: iload         4
      30: isub
      31: bipush        16
      33: aload_0
      34: getfield      #165                // Field currentBlockOffset:I
      37: isub
      38: invokestatic  #188                // Method java/lang/Math.min:(II)I
      41: istore        5
      43: aload_1
      44: iload         4
      46: iload_2
      47: iadd
      48: aload_0
      49: getfield      #184                // Field currentBlock:[B
      52: aload_0
      53: getfield      #165                // Field currentBlockOffset:I
      56: iload         5
      58: invokestatic  #193                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: iload         4
      63: iload         5
      65: iadd
      66: istore        4
      68: aload_0
      69: dup
      70: getfield      #165                // Field currentBlockOffset:I
      73: iload         5
      75: iadd
      76: putfield      #165                // Field currentBlockOffset:I
      79: goto          3
      82: return

  private void processBlock();
    Code:
       0: aload_0
       1: getfield      #165                // Field currentBlockOffset:I
       4: bipush        16
       6: if_icmpge     45
       9: aload_0
      10: getfield      #184                // Field currentBlock:[B
      13: aload_0
      14: getfield      #165                // Field currentBlockOffset:I
      17: iconst_1
      18: bastore
      19: aload_0
      20: getfield      #165                // Field currentBlockOffset:I
      23: iconst_1
      24: iadd
      25: istore_1
      26: iload_1
      27: bipush        16
      29: if_icmpge     45
      32: aload_0
      33: getfield      #184                // Field currentBlock:[B
      36: iload_1
      37: iconst_0
      38: bastore
      39: iinc          1, 1
      42: goto          26
      45: ldc2_w        #97                 // long 4294967295l
      48: aload_0
      49: getfield      #184                // Field currentBlock:[B
      52: iconst_0
      53: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      56: i2l
      57: land
      58: lstore_1
      59: ldc2_w        #97                 // long 4294967295l
      62: aload_0
      63: getfield      #184                // Field currentBlock:[B
      66: iconst_4
      67: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      70: i2l
      71: land
      72: lstore_3
      73: ldc2_w        #97                 // long 4294967295l
      76: aload_0
      77: getfield      #184                // Field currentBlock:[B
      80: bipush        8
      82: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
      85: i2l
      86: land
      87: lstore        5
      89: ldc2_w        #97                 // long 4294967295l
      92: aload_0
      93: getfield      #184                // Field currentBlock:[B
      96: bipush        12
      98: invokestatic  #205                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI)I
     101: i2l
     102: land
     103: lstore        7
     105: aload_0
     106: dup
     107: getfield      #166                // Field h0:I
     110: i2l
     111: lload_1
     112: ldc2_w        #95                 // long 67108863l
     115: land
     116: ladd
     117: l2i
     118: putfield      #166                // Field h0:I
     121: aload_0
     122: dup
     123: getfield      #167                // Field h1:I
     126: i2l
     127: lload_3
     128: bipush        32
     130: lshl
     131: lload_1
     132: lor
     133: bipush        26
     135: lushr
     136: ldc2_w        #95                 // long 67108863l
     139: land
     140: ladd
     141: l2i
     142: putfield      #167                // Field h1:I
     145: aload_0
     146: dup
     147: getfield      #168                // Field h2:I
     150: i2l
     151: lload         5
     153: bipush        32
     155: lshl
     156: lload_3
     157: lor
     158: bipush        20
     160: lushr
     161: ldc2_w        #95                 // long 67108863l
     164: land
     165: ladd
     166: l2i
     167: putfield      #168                // Field h2:I
     170: aload_0
     171: dup
     172: getfield      #169                // Field h3:I
     175: i2l
     176: lload         7
     178: bipush        32
     180: lshl
     181: lload         5
     183: lor
     184: bipush        14
     186: lushr
     187: ldc2_w        #95                 // long 67108863l
     190: land
     191: ladd
     192: l2i
     193: putfield      #169                // Field h3:I
     196: aload_0
     197: dup
     198: getfield      #170                // Field h4:I
     201: i2l
     202: lload         7
     204: bipush        8
     206: lushr
     207: ladd
     208: l2i
     209: putfield      #170                // Field h4:I
     212: aload_0
     213: getfield      #165                // Field currentBlockOffset:I
     216: bipush        16
     218: if_icmpne     232
     221: aload_0
     222: dup
     223: getfield      #170                // Field h4:I
     226: ldc           #2                  // int 16777216
     228: iadd
     229: putfield      #170                // Field h4:I
     232: aload_0
     233: getfield      #166                // Field h0:I
     236: aload_0
     237: getfield      #175                // Field r0:I
     240: invokestatic  #197                // Method mul32x32_64:(II)J
     243: aload_0
     244: getfield      #167                // Field h1:I
     247: aload_0
     248: getfield      #183                // Field s4:I
     251: invokestatic  #197                // Method mul32x32_64:(II)J
     254: ladd
     255: aload_0
     256: getfield      #168                // Field h2:I
     259: aload_0
     260: getfield      #182                // Field s3:I
     263: invokestatic  #197                // Method mul32x32_64:(II)J
     266: ladd
     267: aload_0
     268: getfield      #169                // Field h3:I
     271: aload_0
     272: getfield      #181                // Field s2:I
     275: invokestatic  #197                // Method mul32x32_64:(II)J
     278: ladd
     279: aload_0
     280: getfield      #170                // Field h4:I
     283: aload_0
     284: getfield      #180                // Field s1:I
     287: invokestatic  #197                // Method mul32x32_64:(II)J
     290: ladd
     291: lstore        9
     293: aload_0
     294: getfield      #166                // Field h0:I
     297: aload_0
     298: getfield      #176                // Field r1:I
     301: invokestatic  #197                // Method mul32x32_64:(II)J
     304: aload_0
     305: getfield      #167                // Field h1:I
     308: aload_0
     309: getfield      #175                // Field r0:I
     312: invokestatic  #197                // Method mul32x32_64:(II)J
     315: ladd
     316: aload_0
     317: getfield      #168                // Field h2:I
     320: aload_0
     321: getfield      #183                // Field s4:I
     324: invokestatic  #197                // Method mul32x32_64:(II)J
     327: ladd
     328: aload_0
     329: getfield      #169                // Field h3:I
     332: aload_0
     333: getfield      #182                // Field s3:I
     336: invokestatic  #197                // Method mul32x32_64:(II)J
     339: ladd
     340: aload_0
     341: getfield      #170                // Field h4:I
     344: aload_0
     345: getfield      #181                // Field s2:I
     348: invokestatic  #197                // Method mul32x32_64:(II)J
     351: ladd
     352: lstore        11
     354: aload_0
     355: getfield      #166                // Field h0:I
     358: aload_0
     359: getfield      #177                // Field r2:I
     362: invokestatic  #197                // Method mul32x32_64:(II)J
     365: aload_0
     366: getfield      #167                // Field h1:I
     369: aload_0
     370: getfield      #176                // Field r1:I
     373: invokestatic  #197                // Method mul32x32_64:(II)J
     376: ladd
     377: aload_0
     378: getfield      #168                // Field h2:I
     381: aload_0
     382: getfield      #175                // Field r0:I
     385: invokestatic  #197                // Method mul32x32_64:(II)J
     388: ladd
     389: aload_0
     390: getfield      #169                // Field h3:I
     393: aload_0
     394: getfield      #183                // Field s4:I
     397: invokestatic  #197                // Method mul32x32_64:(II)J
     400: ladd
     401: aload_0
     402: getfield      #170                // Field h4:I
     405: aload_0
     406: getfield      #182                // Field s3:I
     409: invokestatic  #197                // Method mul32x32_64:(II)J
     412: ladd
     413: lstore        13
     415: aload_0
     416: getfield      #166                // Field h0:I
     419: aload_0
     420: getfield      #178                // Field r3:I
     423: invokestatic  #197                // Method mul32x32_64:(II)J
     426: aload_0
     427: getfield      #167                // Field h1:I
     430: aload_0
     431: getfield      #177                // Field r2:I
     434: invokestatic  #197                // Method mul32x32_64:(II)J
     437: ladd
     438: aload_0
     439: getfield      #168                // Field h2:I
     442: aload_0
     443: getfield      #176                // Field r1:I
     446: invokestatic  #197                // Method mul32x32_64:(II)J
     449: ladd
     450: aload_0
     451: getfield      #169                // Field h3:I
     454: aload_0
     455: getfield      #175                // Field r0:I
     458: invokestatic  #197                // Method mul32x32_64:(II)J
     461: ladd
     462: aload_0
     463: getfield      #170                // Field h4:I
     466: aload_0
     467: getfield      #183                // Field s4:I
     470: invokestatic  #197                // Method mul32x32_64:(II)J
     473: ladd
     474: lstore        15
     476: aload_0
     477: getfield      #166                // Field h0:I
     480: aload_0
     481: getfield      #179                // Field r4:I
     484: invokestatic  #197                // Method mul32x32_64:(II)J
     487: aload_0
     488: getfield      #167                // Field h1:I
     491: aload_0
     492: getfield      #178                // Field r3:I
     495: invokestatic  #197                // Method mul32x32_64:(II)J
     498: ladd
     499: aload_0
     500: getfield      #168                // Field h2:I
     503: aload_0
     504: getfield      #177                // Field r2:I
     507: invokestatic  #197                // Method mul32x32_64:(II)J
     510: ladd
     511: aload_0
     512: getfield      #169                // Field h3:I
     515: aload_0
     516: getfield      #176                // Field r1:I
     519: invokestatic  #197                // Method mul32x32_64:(II)J
     522: ladd
     523: aload_0
     524: getfield      #170                // Field h4:I
     527: aload_0
     528: getfield      #175                // Field r0:I
     531: invokestatic  #197                // Method mul32x32_64:(II)J
     534: ladd
     535: lstore        17
     537: aload_0
     538: lload         9
     540: l2i
     541: ldc           #6                  // int 67108863
     543: iand
     544: putfield      #166                // Field h0:I
     547: lload         11
     549: lload         9
     551: bipush        26
     553: lushr
     554: ladd
     555: lstore        11
     557: aload_0
     558: lload         11
     560: l2i
     561: ldc           #6                  // int 67108863
     563: iand
     564: putfield      #167                // Field h1:I
     567: lload         13
     569: lload         11
     571: bipush        26
     573: lushr
     574: ladd
     575: lstore        13
     577: aload_0
     578: lload         13
     580: l2i
     581: ldc           #6                  // int 67108863
     583: iand
     584: putfield      #168                // Field h2:I
     587: lload         15
     589: lload         13
     591: bipush        26
     593: lushr
     594: ladd
     595: lstore        15
     597: aload_0
     598: lload         15
     600: l2i
     601: ldc           #6                  // int 67108863
     603: iand
     604: putfield      #169                // Field h3:I
     607: lload         17
     609: lload         15
     611: bipush        26
     613: lushr
     614: ladd
     615: lstore        17
     617: aload_0
     618: lload         17
     620: l2i
     621: ldc           #6                  // int 67108863
     623: iand
     624: putfield      #170                // Field h4:I
     627: aload_0
     628: dup
     629: getfield      #166                // Field h0:I
     632: lload         17
     634: bipush        26
     636: lushr
     637: l2i
     638: iconst_5
     639: imul
     640: iadd
     641: putfield      #166                // Field h0:I
     644: aload_0
     645: dup
     646: getfield      #167                // Field h1:I
     649: aload_0
     650: getfield      #166                // Field h0:I
     653: bipush        26
     655: iushr
     656: iadd
     657: putfield      #167                // Field h1:I
     660: aload_0
     661: dup
     662: getfield      #166                // Field h0:I
     665: ldc           #6                  // int 67108863
     667: iand
     668: putfield      #166                // Field h0:I
     671: return

  public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: bipush        16
       3: iadd
       4: aload_1
       5: arraylength
       6: if_icmple     19
       9: new           #108                // class org/bouncycastle/crypto/OutputLengthException
      12: dup
      13: ldc           #8                  // String Output buffer is too short.
      15: invokespecial #194                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #165                // Field currentBlockOffset:I
      23: ifle          30
      26: aload_0
      27: invokespecial #195                // Method processBlock:()V
      30: aload_0
      31: dup
      32: getfield      #167                // Field h1:I
      35: aload_0
      36: getfield      #166                // Field h0:I
      39: bipush        26
      41: iushr
      42: iadd
      43: putfield      #167                // Field h1:I
      46: aload_0
      47: dup
      48: getfield      #166                // Field h0:I
      51: ldc           #6                  // int 67108863
      53: iand
      54: putfield      #166                // Field h0:I
      57: aload_0
      58: dup
      59: getfield      #168                // Field h2:I
      62: aload_0
      63: getfield      #167                // Field h1:I
      66: bipush        26
      68: iushr
      69: iadd
      70: putfield      #168                // Field h2:I
      73: aload_0
      74: dup
      75: getfield      #167                // Field h1:I
      78: ldc           #6                  // int 67108863
      80: iand
      81: putfield      #167                // Field h1:I
      84: aload_0
      85: dup
      86: getfield      #169                // Field h3:I
      89: aload_0
      90: getfield      #168                // Field h2:I
      93: bipush        26
      95: iushr
      96: iadd
      97: putfield      #169                // Field h3:I
     100: aload_0
     101: dup
     102: getfield      #168                // Field h2:I
     105: ldc           #6                  // int 67108863
     107: iand
     108: putfield      #168                // Field h2:I
     111: aload_0
     112: dup
     113: getfield      #170                // Field h4:I
     116: aload_0
     117: getfield      #169                // Field h3:I
     120: bipush        26
     122: iushr
     123: iadd
     124: putfield      #170                // Field h4:I
     127: aload_0
     128: dup
     129: getfield      #169                // Field h3:I
     132: ldc           #6                  // int 67108863
     134: iand
     135: putfield      #169                // Field h3:I
     138: aload_0
     139: dup
     140: getfield      #166                // Field h0:I
     143: aload_0
     144: getfield      #170                // Field h4:I
     147: bipush        26
     149: iushr
     150: iconst_5
     151: imul
     152: iadd
     153: putfield      #166                // Field h0:I
     156: aload_0
     157: dup
     158: getfield      #170                // Field h4:I
     161: ldc           #6                  // int 67108863
     163: iand
     164: putfield      #170                // Field h4:I
     167: aload_0
     168: dup
     169: getfield      #167                // Field h1:I
     172: aload_0
     173: getfield      #166                // Field h0:I
     176: bipush        26
     178: iushr
     179: iadd
     180: putfield      #167                // Field h1:I
     183: aload_0
     184: dup
     185: getfield      #166                // Field h0:I
     188: ldc           #6                  // int 67108863
     190: iand
     191: putfield      #166                // Field h0:I
     194: aload_0
     195: getfield      #166                // Field h0:I
     198: iconst_5
     199: iadd
     200: istore_3
     201: iload_3
     202: bipush        26
     204: iushr
     205: istore        8
     207: iload_3
     208: ldc           #6                  // int 67108863
     210: iand
     211: istore_3
     212: aload_0
     213: getfield      #167                // Field h1:I
     216: iload         8
     218: iadd
     219: istore        4
     221: iload         4
     223: bipush        26
     225: iushr
     226: istore        8
     228: iload         4
     230: ldc           #6                  // int 67108863
     232: iand
     233: istore        4
     235: aload_0
     236: getfield      #168                // Field h2:I
     239: iload         8
     241: iadd
     242: istore        5
     244: iload         5
     246: bipush        26
     248: iushr
     249: istore        8
     251: iload         5
     253: ldc           #6                  // int 67108863
     255: iand
     256: istore        5
     258: aload_0
     259: getfield      #169                // Field h3:I
     262: iload         8
     264: iadd
     265: istore        6
     267: iload         6
     269: bipush        26
     271: iushr
     272: istore        8
     274: iload         6
     276: ldc           #6                  // int 67108863
     278: iand
     279: istore        6
     281: aload_0
     282: getfield      #170                // Field h4:I
     285: iload         8
     287: iadd
     288: ldc           #7                  // int 67108864
     290: isub
     291: istore        7
     293: iload         7
     295: bipush        31
     297: iushr
     298: iconst_1
     299: isub
     300: istore        8
     302: iload         8
     304: iconst_m1
     305: ixor
     306: istore        9
     308: aload_0
     309: aload_0
     310: getfield      #166                // Field h0:I
     313: iload         9
     315: iand
     316: iload_3
     317: iload         8
     319: iand
     320: ior
     321: putfield      #166                // Field h0:I
     324: aload_0
     325: aload_0
     326: getfield      #167                // Field h1:I
     329: iload         9
     331: iand
     332: iload         4
     334: iload         8
     336: iand
     337: ior
     338: putfield      #167                // Field h1:I
     341: aload_0
     342: aload_0
     343: getfield      #168                // Field h2:I
     346: iload         9
     348: iand
     349: iload         5
     351: iload         8
     353: iand
     354: ior
     355: putfield      #168                // Field h2:I
     358: aload_0
     359: aload_0
     360: getfield      #169                // Field h3:I
     363: iload         9
     365: iand
     366: iload         6
     368: iload         8
     370: iand
     371: ior
     372: putfield      #169                // Field h3:I
     375: aload_0
     376: aload_0
     377: getfield      #170                // Field h4:I
     380: iload         9
     382: iand
     383: iload         7
     385: iload         8
     387: iand
     388: ior
     389: putfield      #170                // Field h4:I
     392: aload_0
     393: getfield      #166                // Field h0:I
     396: aload_0
     397: getfield      #167                // Field h1:I
     400: bipush        26
     402: ishl
     403: ior
     404: i2l
     405: ldc2_w        #97                 // long 4294967295l
     408: land
     409: ldc2_w        #97                 // long 4294967295l
     412: aload_0
     413: getfield      #171                // Field k0:I
     416: i2l
     417: land
     418: ladd
     419: lstore        10
     421: aload_0
     422: getfield      #167                // Field h1:I
     425: bipush        6
     427: iushr
     428: aload_0
     429: getfield      #168                // Field h2:I
     432: bipush        20
     434: ishl
     435: ior
     436: i2l
     437: ldc2_w        #97                 // long 4294967295l
     440: land
     441: ldc2_w        #97                 // long 4294967295l
     444: aload_0
     445: getfield      #172                // Field k1:I
     448: i2l
     449: land
     450: ladd
     451: lstore        12
     453: aload_0
     454: getfield      #168                // Field h2:I
     457: bipush        12
     459: iushr
     460: aload_0
     461: getfield      #169                // Field h3:I
     464: bipush        14
     466: ishl
     467: ior
     468: i2l
     469: ldc2_w        #97                 // long 4294967295l
     472: land
     473: ldc2_w        #97                 // long 4294967295l
     476: aload_0
     477: getfield      #173                // Field k2:I
     480: i2l
     481: land
     482: ladd
     483: lstore        14
     485: aload_0
     486: getfield      #169                // Field h3:I
     489: bipush        18
     491: iushr
     492: aload_0
     493: getfield      #170                // Field h4:I
     496: bipush        8
     498: ishl
     499: ior
     500: i2l
     501: ldc2_w        #97                 // long 4294967295l
     504: land
     505: ldc2_w        #97                 // long 4294967295l
     508: aload_0
     509: getfield      #174                // Field k3:I
     512: i2l
     513: land
     514: ladd
     515: lstore        16
     517: lload         10
     519: l2i
     520: aload_1
     521: iload_2
     522: invokestatic  #204                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     525: lload         12
     527: lload         10
     529: bipush        32
     531: lushr
     532: ladd
     533: lstore        12
     535: lload         12
     537: l2i
     538: aload_1
     539: iload_2
     540: iconst_4
     541: iadd
     542: invokestatic  #204                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     545: lload         14
     547: lload         12
     549: bipush        32
     551: lushr
     552: ladd
     553: lstore        14
     555: lload         14
     557: l2i
     558: aload_1
     559: iload_2
     560: bipush        8
     562: iadd
     563: invokestatic  #204                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     566: lload         16
     568: lload         14
     570: bipush        32
     572: lushr
     573: ladd
     574: lstore        16
     576: lload         16
     578: l2i
     579: aload_1
     580: iload_2
     581: bipush        12
     583: iadd
     584: invokestatic  #204                // Method org/bouncycastle/util/Pack.intToLittleEndian:(I[BI)V
     587: aload_0
     588: invokevirtual #196                // Method reset:()V
     591: bipush        16
     593: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #165                // Field currentBlockOffset:I
       5: aload_0
       6: aload_0
       7: aload_0
       8: aload_0
       9: aload_0
      10: iconst_0
      11: dup_x1
      12: putfield      #170                // Field h4:I
      15: dup_x1
      16: putfield      #169                // Field h3:I
      19: dup_x1
      20: putfield      #168                // Field h2:I
      23: dup_x1
      24: putfield      #167                // Field h1:I
      27: putfield      #166                // Field h0:I
      30: return

  private static final long mul32x32_64(int, int);
    Code:
       0: iload_0
       1: i2l
       2: ldc2_w        #97                 // long 4294967295l
       5: land
       6: iload_1
       7: i2l
       8: lmul
       9: lreturn
}
