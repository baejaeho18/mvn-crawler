public class org.bouncycastle.crypto.agreement.kdf.DHKDFParameters implements org.bouncycastle.crypto.DerivationParameters {
  private org.bouncycastle.asn1.ASN1ObjectIdentifier algorithm;

  private int keySize;

  private byte[] z;

  private byte[] extraInfo;

  public org.bouncycastle.crypto.agreement.kdf.DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #36                 // Method "<init>":(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;I[B[B)V
       8: return

  public org.bouncycastle.crypto.agreement.kdf.DHKDFParameters(org.bouncycastle.asn1.ASN1ObjectIdentifier, int, byte[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #34                 // Field algorithm:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       9: aload_0
      10: iload_2
      11: putfield      #31                 // Field keySize:I
      14: aload_0
      15: aload_3
      16: putfield      #33                 // Field z:[B
      19: aload_0
      20: aload         4
      22: putfield      #32                 // Field extraInfo:[B
      25: return

  public org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #34                 // Field algorithm:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       4: areturn

  public int getKeySize();
    Code:
       0: aload_0
       1: getfield      #31                 // Field keySize:I
       4: ireturn

  public byte[] getZ();
    Code:
       0: aload_0
       1: getfield      #33                 // Field z:[B
       4: areturn

  public byte[] getExtraInfo();
    Code:
       0: aload_0
       1: getfield      #32                 // Field extraInfo:[B
       4: areturn
}
