public class org.bouncycastle.crypto.agreement.ECDHCBasicAgreement implements org.bouncycastle.crypto.BasicAgreement {
  org.bouncycastle.crypto.params.ECPrivateKeyParameters key;

  public org.bouncycastle.crypto.agreement.ECDHCBasicAgreement();
    Code:
       0: aload_0
       1: invokespecial #87                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
       5: putfield      #85                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       8: return

  public int getFieldSize();
    Code:
       0: aload_0
       1: getfield      #85                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       4: invokevirtual #95                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       7: invokevirtual #93                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      10: invokevirtual #99                 // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      13: bipush        7
      15: iadd
      16: bipush        8
      18: idiv
      19: ireturn

  public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: checkcast     #48                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
       4: astore_2
       5: aload_0
       6: getfield      #85                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       9: invokevirtual #95                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      12: astore_3
      13: aload_3
      14: aload_2
      15: invokevirtual #96                 // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      18: invokevirtual #90                 // Method org/bouncycastle/crypto/params/ECDomainParameters.equals:(Ljava/lang/Object;)Z
      21: ifne          34
      24: new           #41                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #1                  // String ECDHC public key has wrong domain parameters
      30: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_3
      35: invokevirtual #91                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      38: aload_0
      39: getfield      #85                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      42: invokevirtual #94                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      45: invokevirtual #89                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      48: aload_3
      49: invokevirtual #92                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      52: invokevirtual #88                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: astore        4
      57: aload_3
      58: invokevirtual #93                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      61: aload_2
      62: invokevirtual #97                 // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      65: invokestatic  #98                 // Method org/bouncycastle/math/ec/ECAlgorithms.cleanPoint:(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      68: astore        5
      70: aload         5
      72: invokevirtual #101                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      75: ifeq          88
      78: new           #41                 // class java/lang/IllegalStateException
      81: dup
      82: ldc           #3                  // String Infinity is not a valid public key for ECDHC
      84: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload         5
      90: aload         4
      92: invokevirtual #104                // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      95: invokevirtual #103                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      98: astore        6
     100: aload         6
     102: invokevirtual #101                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     105: ifeq          118
     108: new           #41                 // class java/lang/IllegalStateException
     111: dup
     112: ldc           #2                  // String Infinity is not a valid agreement value for ECDHC
     114: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload         6
     120: invokevirtual #102                // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
     123: invokevirtual #100                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
     126: areturn
}
