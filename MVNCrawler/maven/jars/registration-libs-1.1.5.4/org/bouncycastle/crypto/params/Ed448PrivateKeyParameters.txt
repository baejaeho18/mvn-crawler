public final class org.bouncycastle.crypto.params.Ed448PrivateKeyParameters extends org.bouncycastle.crypto.params.AsymmetricKeyParameter {
  public static final int KEY_SIZE;

  public static final int SIGNATURE_SIZE;

  private final byte[] data;

  private org.bouncycastle.crypto.params.Ed448PublicKeyParameters cachedPublicKey;

  public org.bouncycastle.crypto.params.Ed448PrivateKeyParameters(java.security.SecureRandom);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #82                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        57
       8: newarray       byte
      10: putfield      #77                 // Field data:[B
      13: aload_1
      14: aload_0
      15: getfield      #77                 // Field data:[B
      18: invokestatic  #90                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.generatePrivateKey:(Ljava/security/SecureRandom;[B)V
      21: return

  public org.bouncycastle.crypto.params.Ed448PrivateKeyParameters(byte[], int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #82                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        57
       8: newarray       byte
      10: putfield      #77                 // Field data:[B
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #77                 // Field data:[B
      19: iconst_0
      20: bipush        57
      22: invokestatic  #81                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: return

  public org.bouncycastle.crypto.params.Ed448PrivateKeyParameters(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #82                 // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter."<init>":(Z)V
       5: aload_0
       6: bipush        57
       8: newarray       byte
      10: putfield      #77                 // Field data:[B
      13: bipush        57
      15: aload_1
      16: aload_0
      17: getfield      #77                 // Field data:[B
      20: invokestatic  #92                 // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      23: if_icmpeq     36
      26: new           #43                 // class java/io/EOFException
      29: dup
      30: ldc           #1                  // String EOF encountered in middle of Ed448 private key
      32: invokespecial #79                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public void encode(byte[], int);
    Code:
       0: aload_0
       1: getfield      #77                 // Field data:[B
       4: iconst_0
       5: aload_1
       6: iload_2
       7: bipush        57
       9: invokestatic  #81                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #77                 // Field data:[B
       4: invokestatic  #91                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public org.bouncycastle.crypto.params.Ed448PublicKeyParameters generatePublicKey();
    Code:
       0: aload_0
       1: getfield      #77                 // Field data:[B
       4: dup
       5: astore_1
       6: monitorenter
       7: aconst_null
       8: aload_0
       9: getfield      #78                 // Field cachedPublicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      12: if_acmpne     43
      15: bipush        57
      17: newarray       byte
      19: astore_2
      20: aload_0
      21: getfield      #77                 // Field data:[B
      24: iconst_0
      25: aload_2
      26: iconst_0
      27: invokestatic  #87                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.generatePublicKey:([BI[BI)V
      30: aload_0
      31: new           #49                 // class org/bouncycastle/crypto/params/Ed448PublicKeyParameters
      34: dup
      35: aload_2
      36: iconst_0
      37: invokespecial #85                 // Method org/bouncycastle/crypto/params/Ed448PublicKeyParameters."<init>":([BI)V
      40: putfield      #78                 // Field cachedPublicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      43: aload_0
      44: getfield      #78                 // Field cachedPublicKey:Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
      47: aload_1
      48: monitorexit
      49: areturn
      50: astore_3
      51: aload_1
      52: monitorexit
      53: aload_3
      54: athrow
    Exception table:
       from    to  target type
           7    49    50   any
          50    53    50   any

  public void sign(int, org.bouncycastle.crypto.params.Ed448PublicKeyParameters, byte[], byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: aload         4
       5: iload         5
       7: iload         6
       9: aload         7
      11: iload         8
      13: invokevirtual #83                 // Method sign:(I[B[BII[BI)V
      16: return

  public void sign(int, byte[], byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method generatePublicKey:()Lorg/bouncycastle/crypto/params/Ed448PublicKeyParameters;
       4: astore        8
       6: bipush        57
       8: newarray       byte
      10: astore        9
      12: aload         8
      14: aload         9
      16: iconst_0
      17: invokevirtual #86                 // Method org/bouncycastle/crypto/params/Ed448PublicKeyParameters.encode:([BI)V
      20: iload_1
      21: lookupswitch  { // 2
                     0: 48
                     1: 72
               default: 111
          }
      48: aload_0
      49: getfield      #77                 // Field data:[B
      52: iconst_0
      53: aload         9
      55: iconst_0
      56: aload_2
      57: aload_3
      58: iload         4
      60: iload         5
      62: aload         6
      64: iload         7
      66: invokestatic  #88                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.sign:([BI[BI[B[BII[BI)V
      69: goto          121
      72: bipush        64
      74: iload         5
      76: if_icmpeq     89
      79: new           #45                 // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #3                  // String msgLen
      85: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_0
      90: getfield      #77                 // Field data:[B
      93: iconst_0
      94: aload         9
      96: iconst_0
      97: aload_2
      98: aload_3
      99: iload         4
     101: aload         6
     103: iload         7
     105: invokestatic  #89                 // Method org/bouncycastle/math/ec/rfc8032/Ed448.signPrehash:([BI[BI[B[BI[BI)V
     108: goto          121
     111: new           #45                 // class java/lang/IllegalArgumentException
     114: dup
     115: ldc           #2                  // String algorithm
     117: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: return
}
