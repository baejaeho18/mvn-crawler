public class org.bouncycastle.crypto.params.IESParameters implements org.bouncycastle.crypto.CipherParameters {
  private byte[] derivation;

  private byte[] encoding;

  private int macKeySize;

  public org.bouncycastle.crypto.params.IESParameters(byte[], byte[], int);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #33                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       9: putfield      #30                 // Field derivation:[B
      12: aload_0
      13: aload_2
      14: invokestatic  #33                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      17: putfield      #31                 // Field encoding:[B
      20: aload_0
      21: iload_3
      22: putfield      #29                 // Field macKeySize:I
      25: return

  public byte[] getDerivationV();
    Code:
       0: aload_0
       1: getfield      #30                 // Field derivation:[B
       4: invokestatic  #33                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public byte[] getEncodingV();
    Code:
       0: aload_0
       1: getfield      #31                 // Field encoding:[B
       4: invokestatic  #33                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getMacKeySize();
    Code:
       0: aload_0
       1: getfield      #29                 // Field macKeySize:I
       4: ireturn
}
