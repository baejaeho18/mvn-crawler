public class org.bouncycastle.crypto.params.Argon2Parameters$Builder {
  private byte[] salt;

  private byte[] secret;

  private byte[] additional;

  private int iterations;

  private int memory;

  private int lanes;

  private int version;

  private final int type;

  private org.bouncycastle.crypto.CharToByteConverter converter;

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #76                 // Method "<init>":(I)V
       5: return

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder(int);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #64                 // Field org/bouncycastle/crypto/PasswordConverter.UTF8:Lorg/bouncycastle/crypto/PasswordConverter;
       8: putfield      #73                 // Field converter:Lorg/bouncycastle/crypto/CharToByteConverter;
      11: aload_0
      12: iload_1
      13: putfield      #68                 // Field type:I
      16: aload_0
      17: iconst_1
      18: putfield      #66                 // Field lanes:I
      21: aload_0
      22: sipush        4096
      25: putfield      #67                 // Field memory:I
      28: aload_0
      29: iconst_3
      30: putfield      #65                 // Field iterations:I
      33: aload_0
      34: bipush        19
      36: putfield      #69                 // Field version:I
      39: return

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withParallelism(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field lanes:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withSalt(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       5: putfield      #71                 // Field salt:[B
       8: aload_0
       9: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withSecret(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       5: putfield      #72                 // Field secret:[B
       8: aload_0
       9: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withAdditional(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       5: putfield      #70                 // Field additional:[B
       8: aload_0
       9: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #65                 // Field iterations:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withMemoryAsKB(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field memory:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withMemoryPowOfTwo(int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: ishl
       4: putfield      #67                 // Field memory:I
       7: aload_0
       8: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field version:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters$Builder withCharToByteConverter(org.bouncycastle.crypto.CharToByteConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field converter:Lorg/bouncycastle/crypto/CharToByteConverter;
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.params.Argon2Parameters build();
    Code:
       0: new           #38                 // class org/bouncycastle/crypto/params/Argon2Parameters
       3: dup
       4: aload_0
       5: getfield      #68                 // Field type:I
       8: aload_0
       9: getfield      #71                 // Field salt:[B
      12: aload_0
      13: getfield      #72                 // Field secret:[B
      16: aload_0
      17: getfield      #70                 // Field additional:[B
      20: aload_0
      21: getfield      #65                 // Field iterations:I
      24: aload_0
      25: getfield      #67                 // Field memory:I
      28: aload_0
      29: getfield      #66                 // Field lanes:I
      32: aload_0
      33: getfield      #69                 // Field version:I
      36: aload_0
      37: getfield      #73                 // Field converter:Lorg/bouncycastle/crypto/CharToByteConverter;
      40: aconst_null
      41: invokespecial #75                 // Method org/bouncycastle/crypto/params/Argon2Parameters."<init>":(I[B[B[BIIIILorg/bouncycastle/crypto/CharToByteConverter;Lorg/bouncycastle/crypto/params/Argon2Parameters$1;)V
      44: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #71                 // Field salt:[B
       4: invokestatic  #77                 // Method org/bouncycastle/util/Arrays.clear:([B)V
       7: aload_0
       8: getfield      #72                 // Field secret:[B
      11: invokestatic  #77                 // Method org/bouncycastle/util/Arrays.clear:([B)V
      14: aload_0
      15: getfield      #70                 // Field additional:[B
      18: invokestatic  #77                 // Method org/bouncycastle/util/Arrays.clear:([B)V
      21: return
}
