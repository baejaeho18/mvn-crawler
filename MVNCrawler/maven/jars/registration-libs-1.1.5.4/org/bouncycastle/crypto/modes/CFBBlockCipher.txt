public class org.bouncycastle.crypto.modes.CFBBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher {
  private byte[] IV;

  private byte[] cfbV;

  private byte[] cfbOutV;

  private byte[] inBuf;

  private int blockSize;

  private org.bouncycastle.crypto.BlockCipher cipher;

  private boolean encrypting;

  private int byteCount;

  public org.bouncycastle.crypto.modes.CFBBlockCipher(org.bouncycastle.crypto.BlockCipher, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #117                // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: aconst_null
       7: putfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      10: iload_2
      11: bipush        8
      13: if_icmplt     23
      16: iload_2
      17: bipush        8
      19: irem
      20: ifeq          55
      23: new           #56                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #58                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #3                  // String CFB
      36: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: iload_2
      40: invokevirtual #114                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #1                  // String  not supported
      45: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_1
      57: putfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      60: aload_0
      61: iload_2
      62: bipush        8
      64: idiv
      65: putfield      #103                // Field blockSize:I
      68: aload_0
      69: aload_1
      70: invokeinterface #126,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      75: newarray       byte
      77: putfield      #106                // Field IV:[B
      80: aload_0
      81: aload_1
      82: invokeinterface #126,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      87: newarray       byte
      89: putfield      #108                // Field cfbV:[B
      92: aload_0
      93: aload_1
      94: invokeinterface #126,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      99: newarray       byte
     101: putfield      #107                // Field cfbOutV:[B
     104: aload_0
     105: aload_0
     106: getfield      #103                // Field blockSize:I
     109: newarray       byte
     111: putfield      #109                // Field inBuf:[B
     114: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #105                // Field encrypting:Z
       5: aload_2
       6: instanceof    #64                 // class org/bouncycastle/crypto/params/ParametersWithIV
       9: ifeq          134
      12: aload_2
      13: checkcast     #64                 // class org/bouncycastle/crypto/params/ParametersWithIV
      16: astore_3
      17: aload_3
      18: invokevirtual #122                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      21: astore        4
      23: aload         4
      25: arraylength
      26: aload_0
      27: getfield      #106                // Field IV:[B
      30: arraylength
      31: if_icmpge     90
      34: aload         4
      36: iconst_0
      37: aload_0
      38: getfield      #106                // Field IV:[B
      41: aload_0
      42: getfield      #106                // Field IV:[B
      45: arraylength
      46: aload         4
      48: arraylength
      49: isub
      50: aload         4
      52: arraylength
      53: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: iconst_0
      57: istore        5
      59: iload         5
      61: aload_0
      62: getfield      #106                // Field IV:[B
      65: arraylength
      66: aload         4
      68: arraylength
      69: isub
      70: if_icmpge     87
      73: aload_0
      74: getfield      #106                // Field IV:[B
      77: iload         5
      79: iconst_0
      80: bastore
      81: iinc          5, 1
      84: goto          59
      87: goto          106
      90: aload         4
      92: iconst_0
      93: aload_0
      94: getfield      #106                // Field IV:[B
      97: iconst_0
      98: aload_0
      99: getfield      #106                // Field IV:[B
     102: arraylength
     103: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     106: aload_0
     107: invokevirtual #118                // Method reset:()V
     110: aload_3
     111: invokevirtual #123                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     114: ifnull        131
     117: aload_0
     118: getfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     121: iconst_1
     122: aload_3
     123: invokevirtual #123                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     126: invokeinterface #130,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     131: goto          153
     134: aload_0
     135: invokevirtual #118                // Method reset:()V
     138: aload_2
     139: ifnull        153
     142: aload_0
     143: getfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     146: iconst_1
     147: aload_2
     148: invokeinterface #130,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     153: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #129,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #2                  // String /CFB
      21: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #103                // Field blockSize:I
      28: bipush        8
      30: imul
      31: invokevirtual #114                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  protected byte calculateByte(byte) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #105                // Field encrypting:Z
       4: ifeq          15
       7: aload_0
       8: iload_1
       9: invokespecial #120                // Method encryptByte:(B)B
      12: goto          20
      15: aload_0
      16: iload_1
      17: invokespecial #119                // Method decryptByte:(B)B
      20: ireturn

  private byte encryptByte(byte);
    Code:
       0: aload_0
       1: getfield      #104                // Field byteCount:I
       4: ifne          27
       7: aload_0
       8: getfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: aload_0
      12: getfield      #108                // Field cfbV:[B
      15: iconst_0
      16: aload_0
      17: getfield      #107                // Field cfbOutV:[B
      20: iconst_0
      21: invokeinterface #128,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      26: pop
      27: aload_0
      28: getfield      #107                // Field cfbOutV:[B
      31: aload_0
      32: getfield      #104                // Field byteCount:I
      35: baload
      36: iload_1
      37: ixor
      38: i2b
      39: istore_2
      40: aload_0
      41: getfield      #109                // Field inBuf:[B
      44: aload_0
      45: dup
      46: getfield      #104                // Field byteCount:I
      49: dup_x1
      50: iconst_1
      51: iadd
      52: putfield      #104                // Field byteCount:I
      55: iload_2
      56: bastore
      57: aload_0
      58: getfield      #104                // Field byteCount:I
      61: aload_0
      62: getfield      #103                // Field blockSize:I
      65: if_icmpne     125
      68: aload_0
      69: iconst_0
      70: putfield      #104                // Field byteCount:I
      73: aload_0
      74: getfield      #108                // Field cfbV:[B
      77: aload_0
      78: getfield      #103                // Field blockSize:I
      81: aload_0
      82: getfield      #108                // Field cfbV:[B
      85: iconst_0
      86: aload_0
      87: getfield      #108                // Field cfbV:[B
      90: arraylength
      91: aload_0
      92: getfield      #103                // Field blockSize:I
      95: isub
      96: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: aload_0
     100: getfield      #109                // Field inBuf:[B
     103: iconst_0
     104: aload_0
     105: getfield      #108                // Field cfbV:[B
     108: aload_0
     109: getfield      #108                // Field cfbV:[B
     112: arraylength
     113: aload_0
     114: getfield      #103                // Field blockSize:I
     117: isub
     118: aload_0
     119: getfield      #103                // Field blockSize:I
     122: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: iload_2
     126: ireturn

  private byte decryptByte(byte);
    Code:
       0: aload_0
       1: getfield      #104                // Field byteCount:I
       4: ifne          27
       7: aload_0
       8: getfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: aload_0
      12: getfield      #108                // Field cfbV:[B
      15: iconst_0
      16: aload_0
      17: getfield      #107                // Field cfbOutV:[B
      20: iconst_0
      21: invokeinterface #128,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      26: pop
      27: aload_0
      28: getfield      #109                // Field inBuf:[B
      31: aload_0
      32: getfield      #104                // Field byteCount:I
      35: iload_1
      36: bastore
      37: aload_0
      38: getfield      #107                // Field cfbOutV:[B
      41: aload_0
      42: dup
      43: getfield      #104                // Field byteCount:I
      46: dup_x1
      47: iconst_1
      48: iadd
      49: putfield      #104                // Field byteCount:I
      52: baload
      53: iload_1
      54: ixor
      55: i2b
      56: istore_2
      57: aload_0
      58: getfield      #104                // Field byteCount:I
      61: aload_0
      62: getfield      #103                // Field blockSize:I
      65: if_icmpne     125
      68: aload_0
      69: iconst_0
      70: putfield      #104                // Field byteCount:I
      73: aload_0
      74: getfield      #108                // Field cfbV:[B
      77: aload_0
      78: getfield      #103                // Field blockSize:I
      81: aload_0
      82: getfield      #108                // Field cfbV:[B
      85: iconst_0
      86: aload_0
      87: getfield      #108                // Field cfbV:[B
      90: arraylength
      91: aload_0
      92: getfield      #103                // Field blockSize:I
      95: isub
      96: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: aload_0
     100: getfield      #109                // Field inBuf:[B
     103: iconst_0
     104: aload_0
     105: getfield      #108                // Field cfbV:[B
     108: aload_0
     109: getfield      #108                // Field cfbV:[B
     112: arraylength
     113: aload_0
     114: getfield      #103                // Field blockSize:I
     117: isub
     118: aload_0
     119: getfield      #103                // Field blockSize:I
     122: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: iload_2
     126: ireturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #103                // Field blockSize:I
       4: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #103                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #121                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #103                // Field blockSize:I
      18: ireturn

  public int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #103                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #121                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #103                // Field blockSize:I
      18: ireturn

  public int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #103                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #121                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #103                // Field blockSize:I
      18: ireturn

  public byte[] getCurrentIV();
    Code:
       0: aload_0
       1: getfield      #108                // Field cfbV:[B
       4: invokestatic  #124                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #106                // Field IV:[B
       4: iconst_0
       5: aload_0
       6: getfield      #108                // Field cfbV:[B
       9: iconst_0
      10: aload_0
      11: getfield      #106                // Field IV:[B
      14: arraylength
      15: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_0
      19: getfield      #109                // Field inBuf:[B
      22: iconst_0
      23: invokestatic  #125                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      26: aload_0
      27: iconst_0
      28: putfield      #104                // Field byteCount:I
      31: aload_0
      32: getfield      #110                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      35: invokeinterface #127,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      40: return
}
