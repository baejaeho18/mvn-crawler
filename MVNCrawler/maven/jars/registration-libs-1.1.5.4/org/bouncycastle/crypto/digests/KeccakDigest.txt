public class org.bouncycastle.crypto.digests.KeccakDigest implements org.bouncycastle.crypto.ExtendedDigest {
  private static long[] KeccakRoundConstants;

  protected long[] state;

  protected byte[] dataQueue;

  protected int rate;

  protected int bitsInQueue;

  protected int fixedOutputLength;

  protected boolean squeezing;

  public org.bouncycastle.crypto.digests.KeccakDigest();
    Code:
       0: aload_0
       1: sipush        288
       4: invokespecial #190                // Method "<init>":(I)V
       7: return

  public org.bouncycastle.crypto.digests.KeccakDigest(int);
    Code:
       0: aload_0
       1: invokespecial #178                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        25
       7: newarray       long
       9: putfield      #174                // Field state:[J
      12: aload_0
      13: sipush        192
      16: newarray       byte
      18: putfield      #172                // Field dataQueue:[B
      21: aload_0
      22: iload_1
      23: invokespecial #191                // Method init:(I)V
      26: return

  public org.bouncycastle.crypto.digests.KeccakDigest(org.bouncycastle.crypto.digests.KeccakDigest);
    Code:
       0: aload_0
       1: invokespecial #178                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        25
       7: newarray       long
       9: putfield      #174                // Field state:[J
      12: aload_0
      13: sipush        192
      16: newarray       byte
      18: putfield      #172                // Field dataQueue:[B
      21: aload_1
      22: getfield      #174                // Field state:[J
      25: iconst_0
      26: aload_0
      27: getfield      #174                // Field state:[J
      30: iconst_0
      31: aload_1
      32: getfield      #174                // Field state:[J
      35: arraylength
      36: invokestatic  #183                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_1
      40: getfield      #172                // Field dataQueue:[B
      43: iconst_0
      44: aload_0
      45: getfield      #172                // Field dataQueue:[B
      48: iconst_0
      49: aload_1
      50: getfield      #172                // Field dataQueue:[B
      53: arraylength
      54: invokestatic  #183                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: aload_0
      58: aload_1
      59: getfield      #170                // Field rate:I
      62: putfield      #170                // Field rate:I
      65: aload_0
      66: aload_1
      67: getfield      #168                // Field bitsInQueue:I
      70: putfield      #168                // Field bitsInQueue:I
      73: aload_0
      74: aload_1
      75: getfield      #169                // Field fixedOutputLength:I
      78: putfield      #169                // Field fixedOutputLength:I
      81: aload_0
      82: aload_1
      83: getfield      #171                // Field squeezing:Z
      86: putfield      #171                // Field squeezing:Z
      89: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #126                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #179                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #2                  // String Keccak-
       9: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #169                // Field fixedOutputLength:I
      16: invokevirtual #181                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #180                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public int getDigestSize();
    Code:
       0: aload_0
       1: getfield      #169                // Field fixedOutputLength:I
       4: bipush        8
       6: idiv
       7: ireturn

  public void update(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #189                // Method absorb:(B)V
       5: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #195                // Method absorb:([BII)V
       7: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #169                // Field fixedOutputLength:I
       7: i2l
       8: invokevirtual #196                // Method squeeze:([BIJ)V
      11: aload_0
      12: invokevirtual #188                // Method reset:()V
      15: aload_0
      16: invokevirtual #184                // Method getDigestSize:()I
      19: ireturn

  protected int doFinal(byte[], int, byte, int);
    Code:
       0: iload         4
       2: ifle          12
       5: aload_0
       6: iload_3
       7: iload         4
       9: invokevirtual #193                // Method absorbBits:(II)V
      12: aload_0
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #169                // Field fixedOutputLength:I
      19: i2l
      20: invokevirtual #196                // Method squeeze:([BIJ)V
      23: aload_0
      24: invokevirtual #188                // Method reset:()V
      27: aload_0
      28: invokevirtual #184                // Method getDigestSize:()I
      31: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #169                // Field fixedOutputLength:I
       5: invokespecial #191                // Method init:(I)V
       8: return

  public int getByteLength();
    Code:
       0: aload_0
       1: getfield      #170                // Field rate:I
       4: bipush        8
       6: idiv
       7: ireturn

  private void init(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 6
                   128: 60
                   224: 60
                   256: 60
                   288: 60
                   384: 60
                   512: 60
               default: 74
          }
      60: aload_0
      61: sipush        1600
      64: iload_1
      65: iconst_1
      66: ishl
      67: isub
      68: invokespecial #192                // Method initSponge:(I)V
      71: goto          84
      74: new           #122                // class java/lang/IllegalArgumentException
      77: dup
      78: ldc           #5                  // String bitLength must be one of 128, 224, 256, 288, 384, or 512.
      80: invokespecial #175                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: return

  private void initSponge(int);
    Code:
       0: iload_1
       1: ifle          18
       4: iload_1
       5: sipush        1600
       8: if_icmpge     18
      11: iload_1
      12: bipush        64
      14: irem
      15: ifeq          28
      18: new           #123                // class java/lang/IllegalStateException
      21: dup
      22: ldc           #6                  // String invalid rate value
      24: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: putfield      #170                // Field rate:I
      33: iconst_0
      34: istore_2
      35: iload_2
      36: aload_0
      37: getfield      #174                // Field state:[J
      40: arraylength
      41: if_icmpge     57
      44: aload_0
      45: getfield      #174                // Field state:[J
      48: iload_2
      49: lconst_0
      50: lastore
      51: iinc          2, 1
      54: goto          35
      57: aload_0
      58: getfield      #172                // Field dataQueue:[B
      61: iconst_0
      62: invokestatic  #197                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      65: aload_0
      66: iconst_0
      67: putfield      #168                // Field bitsInQueue:I
      70: aload_0
      71: iconst_0
      72: putfield      #171                // Field squeezing:Z
      75: aload_0
      76: sipush        1600
      79: iload_1
      80: isub
      81: iconst_2
      82: idiv
      83: putfield      #169                // Field fixedOutputLength:I
      86: return

  protected void absorb(byte);
    Code:
       0: aload_0
       1: getfield      #168                // Field bitsInQueue:I
       4: bipush        8
       6: irem
       7: ifeq          20
      10: new           #123                // class java/lang/IllegalStateException
      13: dup
      14: ldc           #4                  // String attempt to absorb with odd length queue
      16: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #171                // Field squeezing:Z
      24: ifeq          37
      27: new           #123                // class java/lang/IllegalStateException
      30: dup
      31: ldc           #3                  // String attempt to absorb while squeezing
      33: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #172                // Field dataQueue:[B
      41: aload_0
      42: getfield      #168                // Field bitsInQueue:I
      45: iconst_3
      46: iushr
      47: iload_1
      48: bastore
      49: aload_0
      50: dup
      51: getfield      #168                // Field bitsInQueue:I
      54: bipush        8
      56: iadd
      57: dup_x1
      58: putfield      #168                // Field bitsInQueue:I
      61: aload_0
      62: getfield      #170                // Field rate:I
      65: if_icmpne     82
      68: aload_0
      69: aload_0
      70: getfield      #172                // Field dataQueue:[B
      73: iconst_0
      74: invokespecial #194                // Method KeccakAbsorb:([BI)V
      77: aload_0
      78: iconst_0
      79: putfield      #168                // Field bitsInQueue:I
      82: return

  protected void absorb(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #168                // Field bitsInQueue:I
       4: bipush        8
       6: irem
       7: ifeq          20
      10: new           #123                // class java/lang/IllegalStateException
      13: dup
      14: ldc           #4                  // String attempt to absorb with odd length queue
      16: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #171                // Field squeezing:Z
      24: ifeq          37
      27: new           #123                // class java/lang/IllegalStateException
      30: dup
      31: ldc           #3                  // String attempt to absorb while squeezing
      33: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #168                // Field bitsInQueue:I
      41: iconst_3
      42: iushr
      43: istore        4
      45: aload_0
      46: getfield      #170                // Field rate:I
      49: iconst_3
      50: iushr
      51: istore        5
      53: iload_3
      54: iload         5
      56: iload         4
      58: isub
      59: if_icmpge     87
      62: aload_1
      63: iload_2
      64: aload_0
      65: getfield      #172                // Field dataQueue:[B
      68: iload         4
      70: iload_3
      71: invokestatic  #183                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: dup
      76: getfield      #168                // Field bitsInQueue:I
      79: iload_3
      80: iconst_3
      81: ishl
      82: iadd
      83: putfield      #168                // Field bitsInQueue:I
      86: return
      87: iconst_0
      88: istore        6
      90: iload         4
      92: ifle          131
      95: iload         5
      97: iload         4
      99: isub
     100: istore        7
     102: aload_1
     103: iload_2
     104: aload_0
     105: getfield      #172                // Field dataQueue:[B
     108: iload         4
     110: iload         7
     112: invokestatic  #183                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     115: iload         6
     117: iload         7
     119: iadd
     120: istore        6
     122: aload_0
     123: aload_0
     124: getfield      #172                // Field dataQueue:[B
     127: iconst_0
     128: invokespecial #194                // Method KeccakAbsorb:([BI)V
     131: iload_3
     132: iload         6
     134: isub
     135: dup
     136: istore        7
     138: iload         5
     140: if_icmplt     162
     143: aload_0
     144: aload_1
     145: iload_2
     146: iload         6
     148: iadd
     149: invokespecial #194                // Method KeccakAbsorb:([BI)V
     152: iload         6
     154: iload         5
     156: iadd
     157: istore        6
     159: goto          131
     162: aload_1
     163: iload_2
     164: iload         6
     166: iadd
     167: aload_0
     168: getfield      #172                // Field dataQueue:[B
     171: iconst_0
     172: iload         7
     174: invokestatic  #183                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     177: aload_0
     178: iload         7
     180: iconst_3
     181: ishl
     182: putfield      #168                // Field bitsInQueue:I
     185: return

  protected void absorbBits(int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmplt     11
       5: iload_2
       6: bipush        7
       8: if_icmple     21
      11: new           #122                // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #1                  // String \'bits\' must be in the range 1 to 7
      17: invokespecial #175                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #168                // Field bitsInQueue:I
      25: bipush        8
      27: irem
      28: ifeq          41
      31: new           #123                // class java/lang/IllegalStateException
      34: dup
      35: ldc           #4                  // String attempt to absorb with odd length queue
      37: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #171                // Field squeezing:Z
      45: ifeq          58
      48: new           #123                // class java/lang/IllegalStateException
      51: dup
      52: ldc           #3                  // String attempt to absorb while squeezing
      54: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: iconst_1
      59: iload_2
      60: ishl
      61: iconst_1
      62: isub
      63: istore_3
      64: aload_0
      65: getfield      #172                // Field dataQueue:[B
      68: aload_0
      69: getfield      #168                // Field bitsInQueue:I
      72: iconst_3
      73: iushr
      74: iload_1
      75: iload_3
      76: iand
      77: i2b
      78: bastore
      79: aload_0
      80: dup
      81: getfield      #168                // Field bitsInQueue:I
      84: iload_2
      85: iadd
      86: putfield      #168                // Field bitsInQueue:I
      89: return

  private void padAndSwitchToSqueezingPhase();
    Code:
       0: aload_0
       1: getfield      #172                // Field dataQueue:[B
       4: aload_0
       5: getfield      #168                // Field bitsInQueue:I
       8: iconst_3
       9: iushr
      10: dup2
      11: baload
      12: iconst_1
      13: aload_0
      14: getfield      #168                // Field bitsInQueue:I
      17: bipush        7
      19: iand
      20: ishl
      21: i2b
      22: ior
      23: i2b
      24: bastore
      25: aload_0
      26: dup
      27: getfield      #168                // Field bitsInQueue:I
      30: iconst_1
      31: iadd
      32: dup_x1
      33: putfield      #168                // Field bitsInQueue:I
      36: aload_0
      37: getfield      #170                // Field rate:I
      40: if_icmpne     55
      43: aload_0
      44: aload_0
      45: getfield      #172                // Field dataQueue:[B
      48: iconst_0
      49: invokespecial #194                // Method KeccakAbsorb:([BI)V
      52: goto          140
      55: aload_0
      56: getfield      #168                // Field bitsInQueue:I
      59: bipush        6
      61: iushr
      62: istore_1
      63: aload_0
      64: getfield      #168                // Field bitsInQueue:I
      67: bipush        63
      69: iand
      70: istore_2
      71: iconst_0
      72: istore_3
      73: iconst_0
      74: istore        4
      76: iload         4
      78: iload_1
      79: if_icmpge     109
      82: aload_0
      83: getfield      #174                // Field state:[J
      86: iload         4
      88: dup2
      89: laload
      90: aload_0
      91: getfield      #172                // Field dataQueue:[B
      94: iload_3
      95: invokestatic  #198                // Method org/bouncycastle/util/Pack.littleEndianToLong:([BI)J
      98: lxor
      99: lastore
     100: iinc          3, 8
     103: iinc          4, 1
     106: goto          76
     109: iload_2
     110: ifle          140
     113: lconst_1
     114: iload_2
     115: lshl
     116: lconst_1
     117: lsub
     118: lstore        4
     120: aload_0
     121: getfield      #174                // Field state:[J
     124: iload_1
     125: dup2
     126: laload
     127: aload_0
     128: getfield      #172                // Field dataQueue:[B
     131: iload_3
     132: invokestatic  #198                // Method org/bouncycastle/util/Pack.littleEndianToLong:([BI)J
     135: lload         4
     137: land
     138: lxor
     139: lastore
     140: aload_0
     141: getfield      #174                // Field state:[J
     144: aload_0
     145: getfield      #170                // Field rate:I
     148: iconst_1
     149: isub
     150: bipush        6
     152: iushr
     153: dup2
     154: laload
     155: ldc2_w        #74                 // long -9223372036854775808l
     158: lxor
     159: lastore
     160: aload_0
     161: iconst_0
     162: putfield      #168                // Field bitsInQueue:I
     165: aload_0
     166: iconst_1
     167: putfield      #171                // Field squeezing:Z
     170: return

  protected void squeeze(byte[], int, long);
    Code:
       0: aload_0
       1: getfield      #171                // Field squeezing:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #187                // Method padAndSwitchToSqueezingPhase:()V
      11: lload_3
      12: ldc2_w        #102                // long 8l
      15: lrem
      16: lconst_0
      17: lcmp
      18: ifeq          31
      21: new           #123                // class java/lang/IllegalStateException
      24: dup
      25: ldc           #7                  // String outputLength not a multiple of 8
      27: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: lconst_0
      32: lstore        5
      34: lload         5
      36: lload_3
      37: lcmp
      38: ifge          123
      41: aload_0
      42: getfield      #168                // Field bitsInQueue:I
      45: ifne          52
      48: aload_0
      49: invokespecial #185                // Method KeccakExtract:()V
      52: aload_0
      53: getfield      #168                // Field bitsInQueue:I
      56: i2l
      57: lload_3
      58: lload         5
      60: lsub
      61: invokestatic  #177                // Method java/lang/Math.min:(JJ)J
      64: l2i
      65: istore        7
      67: aload_0
      68: getfield      #172                // Field dataQueue:[B
      71: aload_0
      72: getfield      #170                // Field rate:I
      75: aload_0
      76: getfield      #168                // Field bitsInQueue:I
      79: isub
      80: bipush        8
      82: idiv
      83: aload_1
      84: iload_2
      85: lload         5
      87: ldc2_w        #102                // long 8l
      90: ldiv
      91: l2i
      92: iadd
      93: iload         7
      95: bipush        8
      97: idiv
      98: invokestatic  #183                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     101: aload_0
     102: dup
     103: getfield      #168                // Field bitsInQueue:I
     106: iload         7
     108: isub
     109: putfield      #168                // Field bitsInQueue:I
     112: lload         5
     114: iload         7
     116: i2l
     117: ladd
     118: lstore        5
     120: goto          34
     123: return

  private void KeccakAbsorb(byte[], int);
    Code:
       0: aload_0
       1: getfield      #170                // Field rate:I
       4: bipush        6
       6: iushr
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     41
      17: aload_0
      18: getfield      #174                // Field state:[J
      21: iload         4
      23: dup2
      24: laload
      25: aload_1
      26: iload_2
      27: invokestatic  #198                // Method org/bouncycastle/util/Pack.littleEndianToLong:([BI)J
      30: lxor
      31: lastore
      32: iinc          2, 8
      35: iinc          4, 1
      38: goto          11
      41: aload_0
      42: invokespecial #186                // Method KeccakPermutation:()V
      45: return

  private void KeccakExtract();
    Code:
       0: aload_0
       1: invokespecial #186                // Method KeccakPermutation:()V
       4: aload_0
       5: getfield      #174                // Field state:[J
       8: iconst_0
       9: aload_0
      10: getfield      #170                // Field rate:I
      13: bipush        6
      15: iushr
      16: aload_0
      17: getfield      #172                // Field dataQueue:[B
      20: iconst_0
      21: invokestatic  #199                // Method org/bouncycastle/util/Pack.longToLittleEndian:([JII[BI)V
      24: aload_0
      25: aload_0
      26: getfield      #170                // Field rate:I
      29: putfield      #168                // Field bitsInQueue:I
      32: return

  private void KeccakPermutation();
    Code:
       0: aload_0
       1: getfield      #174                // Field state:[J
       4: astore_1
       5: aload_1
       6: iconst_0
       7: laload
       8: lstore_2
       9: aload_1
      10: iconst_1
      11: laload
      12: lstore        4
      14: aload_1
      15: iconst_2
      16: laload
      17: lstore        6
      19: aload_1
      20: iconst_3
      21: laload
      22: lstore        8
      24: aload_1
      25: iconst_4
      26: laload
      27: lstore        10
      29: aload_1
      30: iconst_5
      31: laload
      32: lstore        12
      34: aload_1
      35: bipush        6
      37: laload
      38: lstore        14
      40: aload_1
      41: bipush        7
      43: laload
      44: lstore        16
      46: aload_1
      47: bipush        8
      49: laload
      50: lstore        18
      52: aload_1
      53: bipush        9
      55: laload
      56: lstore        20
      58: aload_1
      59: bipush        10
      61: laload
      62: lstore        22
      64: aload_1
      65: bipush        11
      67: laload
      68: lstore        24
      70: aload_1
      71: bipush        12
      73: laload
      74: lstore        26
      76: aload_1
      77: bipush        13
      79: laload
      80: lstore        28
      82: aload_1
      83: bipush        14
      85: laload
      86: lstore        30
      88: aload_1
      89: bipush        15
      91: laload
      92: lstore        32
      94: aload_1
      95: bipush        16
      97: laload
      98: lstore        34
     100: aload_1
     101: bipush        17
     103: laload
     104: lstore        36
     106: aload_1
     107: bipush        18
     109: laload
     110: lstore        38
     112: aload_1
     113: bipush        19
     115: laload
     116: lstore        40
     118: aload_1
     119: bipush        20
     121: laload
     122: lstore        42
     124: aload_1
     125: bipush        21
     127: laload
     128: lstore        44
     130: aload_1
     131: bipush        22
     133: laload
     134: lstore        46
     136: aload_1
     137: bipush        23
     139: laload
     140: lstore        48
     142: aload_1
     143: bipush        24
     145: laload
     146: lstore        50
     148: iconst_0
     149: istore        52
     151: iload         52
     153: bipush        24
     155: if_icmpge     1192
     158: lload_2
     159: lload         12
     161: lxor
     162: lload         22
     164: lxor
     165: lload         32
     167: lxor
     168: lload         42
     170: lxor
     171: lstore        53
     173: lload         4
     175: lload         14
     177: lxor
     178: lload         24
     180: lxor
     181: lload         34
     183: lxor
     184: lload         44
     186: lxor
     187: lstore        55
     189: lload         6
     191: lload         16
     193: lxor
     194: lload         26
     196: lxor
     197: lload         36
     199: lxor
     200: lload         46
     202: lxor
     203: lstore        57
     205: lload         8
     207: lload         18
     209: lxor
     210: lload         28
     212: lxor
     213: lload         38
     215: lxor
     216: lload         48
     218: lxor
     219: lstore        59
     221: lload         10
     223: lload         20
     225: lxor
     226: lload         30
     228: lxor
     229: lload         40
     231: lxor
     232: lload         50
     234: lxor
     235: lstore        61
     237: lload         55
     239: iconst_1
     240: lshl
     241: lload         55
     243: iconst_m1
     244: lushr
     245: lor
     246: lload         61
     248: lxor
     249: lstore        63
     251: lload         57
     253: iconst_1
     254: lshl
     255: lload         57
     257: iconst_m1
     258: lushr
     259: lor
     260: lload         53
     262: lxor
     263: lstore        65
     265: lload         59
     267: iconst_1
     268: lshl
     269: lload         59
     271: iconst_m1
     272: lushr
     273: lor
     274: lload         55
     276: lxor
     277: lstore        67
     279: lload         61
     281: iconst_1
     282: lshl
     283: lload         61
     285: iconst_m1
     286: lushr
     287: lor
     288: lload         57
     290: lxor
     291: lstore        69
     293: lload         53
     295: iconst_1
     296: lshl
     297: lload         53
     299: iconst_m1
     300: lushr
     301: lor
     302: lload         59
     304: lxor
     305: lstore        71
     307: lload_2
     308: lload         63
     310: lxor
     311: lstore_2
     312: lload         12
     314: lload         63
     316: lxor
     317: lstore        12
     319: lload         22
     321: lload         63
     323: lxor
     324: lstore        22
     326: lload         32
     328: lload         63
     330: lxor
     331: lstore        32
     333: lload         42
     335: lload         63
     337: lxor
     338: lstore        42
     340: lload         4
     342: lload         65
     344: lxor
     345: lstore        4
     347: lload         14
     349: lload         65
     351: lxor
     352: lstore        14
     354: lload         24
     356: lload         65
     358: lxor
     359: lstore        24
     361: lload         34
     363: lload         65
     365: lxor
     366: lstore        34
     368: lload         44
     370: lload         65
     372: lxor
     373: lstore        44
     375: lload         6
     377: lload         67
     379: lxor
     380: lstore        6
     382: lload         16
     384: lload         67
     386: lxor
     387: lstore        16
     389: lload         26
     391: lload         67
     393: lxor
     394: lstore        26
     396: lload         36
     398: lload         67
     400: lxor
     401: lstore        36
     403: lload         46
     405: lload         67
     407: lxor
     408: lstore        46
     410: lload         8
     412: lload         69
     414: lxor
     415: lstore        8
     417: lload         18
     419: lload         69
     421: lxor
     422: lstore        18
     424: lload         28
     426: lload         69
     428: lxor
     429: lstore        28
     431: lload         38
     433: lload         69
     435: lxor
     436: lstore        38
     438: lload         48
     440: lload         69
     442: lxor
     443: lstore        48
     445: lload         10
     447: lload         71
     449: lxor
     450: lstore        10
     452: lload         20
     454: lload         71
     456: lxor
     457: lstore        20
     459: lload         30
     461: lload         71
     463: lxor
     464: lstore        30
     466: lload         40
     468: lload         71
     470: lxor
     471: lstore        40
     473: lload         50
     475: lload         71
     477: lxor
     478: lstore        50
     480: lload         4
     482: iconst_1
     483: lshl
     484: lload         4
     486: bipush        63
     488: lushr
     489: lor
     490: lstore        55
     492: lload         14
     494: bipush        44
     496: lshl
     497: lload         14
     499: bipush        20
     501: lushr
     502: lor
     503: lstore        4
     505: lload         20
     507: bipush        20
     509: lshl
     510: lload         20
     512: bipush        44
     514: lushr
     515: lor
     516: lstore        14
     518: lload         46
     520: bipush        61
     522: lshl
     523: lload         46
     525: iconst_3
     526: lushr
     527: lor
     528: lstore        20
     530: lload         30
     532: bipush        39
     534: lshl
     535: lload         30
     537: bipush        25
     539: lushr
     540: lor
     541: lstore        46
     543: lload         42
     545: bipush        18
     547: lshl
     548: lload         42
     550: bipush        46
     552: lushr
     553: lor
     554: lstore        30
     556: lload         6
     558: bipush        62
     560: lshl
     561: lload         6
     563: iconst_2
     564: lushr
     565: lor
     566: lstore        42
     568: lload         26
     570: bipush        43
     572: lshl
     573: lload         26
     575: bipush        21
     577: lushr
     578: lor
     579: lstore        6
     581: lload         28
     583: bipush        25
     585: lshl
     586: lload         28
     588: bipush        39
     590: lushr
     591: lor
     592: lstore        26
     594: lload         40
     596: bipush        8
     598: lshl
     599: lload         40
     601: bipush        56
     603: lushr
     604: lor
     605: lstore        28
     607: lload         48
     609: bipush        56
     611: lshl
     612: lload         48
     614: bipush        8
     616: lushr
     617: lor
     618: lstore        40
     620: lload         32
     622: bipush        41
     624: lshl
     625: lload         32
     627: bipush        23
     629: lushr
     630: lor
     631: lstore        48
     633: lload         10
     635: bipush        27
     637: lshl
     638: lload         10
     640: bipush        37
     642: lushr
     643: lor
     644: lstore        32
     646: lload         50
     648: bipush        14
     650: lshl
     651: lload         50
     653: bipush        50
     655: lushr
     656: lor
     657: lstore        10
     659: lload         44
     661: iconst_2
     662: lshl
     663: lload         44
     665: bipush        62
     667: lushr
     668: lor
     669: lstore        50
     671: lload         18
     673: bipush        55
     675: lshl
     676: lload         18
     678: bipush        9
     680: lushr
     681: lor
     682: lstore        44
     684: lload         34
     686: bipush        45
     688: lshl
     689: lload         34
     691: bipush        19
     693: lushr
     694: lor
     695: lstore        18
     697: lload         12
     699: bipush        36
     701: lshl
     702: lload         12
     704: bipush        28
     706: lushr
     707: lor
     708: lstore        34
     710: lload         8
     712: bipush        28
     714: lshl
     715: lload         8
     717: bipush        36
     719: lushr
     720: lor
     721: lstore        12
     723: lload         38
     725: bipush        21
     727: lshl
     728: lload         38
     730: bipush        43
     732: lushr
     733: lor
     734: lstore        8
     736: lload         36
     738: bipush        15
     740: lshl
     741: lload         36
     743: bipush        49
     745: lushr
     746: lor
     747: lstore        38
     749: lload         24
     751: bipush        10
     753: lshl
     754: lload         24
     756: bipush        54
     758: lushr
     759: lor
     760: lstore        36
     762: lload         16
     764: bipush        6
     766: lshl
     767: lload         16
     769: bipush        58
     771: lushr
     772: lor
     773: lstore        24
     775: lload         22
     777: iconst_3
     778: lshl
     779: lload         22
     781: bipush        61
     783: lushr
     784: lor
     785: lstore        16
     787: lload         55
     789: lstore        22
     791: lload_2
     792: lload         4
     794: ldc2_w        #100                // long -1l
     797: lxor
     798: lload         6
     800: land
     801: lxor
     802: lstore        53
     804: lload         4
     806: lload         6
     808: ldc2_w        #100                // long -1l
     811: lxor
     812: lload         8
     814: land
     815: lxor
     816: lstore        55
     818: lload         6
     820: lload         8
     822: ldc2_w        #100                // long -1l
     825: lxor
     826: lload         10
     828: land
     829: lxor
     830: lstore        6
     832: lload         8
     834: lload         10
     836: ldc2_w        #100                // long -1l
     839: lxor
     840: lload_2
     841: land
     842: lxor
     843: lstore        8
     845: lload         10
     847: lload_2
     848: ldc2_w        #100                // long -1l
     851: lxor
     852: lload         4
     854: land
     855: lxor
     856: lstore        10
     858: lload         53
     860: lstore_2
     861: lload         55
     863: lstore        4
     865: lload         12
     867: lload         14
     869: ldc2_w        #100                // long -1l
     872: lxor
     873: lload         16
     875: land
     876: lxor
     877: lstore        53
     879: lload         14
     881: lload         16
     883: ldc2_w        #100                // long -1l
     886: lxor
     887: lload         18
     889: land
     890: lxor
     891: lstore        55
     893: lload         16
     895: lload         18
     897: ldc2_w        #100                // long -1l
     900: lxor
     901: lload         20
     903: land
     904: lxor
     905: lstore        16
     907: lload         18
     909: lload         20
     911: ldc2_w        #100                // long -1l
     914: lxor
     915: lload         12
     917: land
     918: lxor
     919: lstore        18
     921: lload         20
     923: lload         12
     925: ldc2_w        #100                // long -1l
     928: lxor
     929: lload         14
     931: land
     932: lxor
     933: lstore        20
     935: lload         53
     937: lstore        12
     939: lload         55
     941: lstore        14
     943: lload         22
     945: lload         24
     947: ldc2_w        #100                // long -1l
     950: lxor
     951: lload         26
     953: land
     954: lxor
     955: lstore        53
     957: lload         24
     959: lload         26
     961: ldc2_w        #100                // long -1l
     964: lxor
     965: lload         28
     967: land
     968: lxor
     969: lstore        55
     971: lload         26
     973: lload         28
     975: ldc2_w        #100                // long -1l
     978: lxor
     979: lload         30
     981: land
     982: lxor
     983: lstore        26
     985: lload         28
     987: lload         30
     989: ldc2_w        #100                // long -1l
     992: lxor
     993: lload         22
     995: land
     996: lxor
     997: lstore        28
     999: lload         30
    1001: lload         22
    1003: ldc2_w        #100                // long -1l
    1006: lxor
    1007: lload         24
    1009: land
    1010: lxor
    1011: lstore        30
    1013: lload         53
    1015: lstore        22
    1017: lload         55
    1019: lstore        24
    1021: lload         32
    1023: lload         34
    1025: ldc2_w        #100                // long -1l
    1028: lxor
    1029: lload         36
    1031: land
    1032: lxor
    1033: lstore        53
    1035: lload         34
    1037: lload         36
    1039: ldc2_w        #100                // long -1l
    1042: lxor
    1043: lload         38
    1045: land
    1046: lxor
    1047: lstore        55
    1049: lload         36
    1051: lload         38
    1053: ldc2_w        #100                // long -1l
    1056: lxor
    1057: lload         40
    1059: land
    1060: lxor
    1061: lstore        36
    1063: lload         38
    1065: lload         40
    1067: ldc2_w        #100                // long -1l
    1070: lxor
    1071: lload         32
    1073: land
    1074: lxor
    1075: lstore        38
    1077: lload         40
    1079: lload         32
    1081: ldc2_w        #100                // long -1l
    1084: lxor
    1085: lload         34
    1087: land
    1088: lxor
    1089: lstore        40
    1091: lload         53
    1093: lstore        32
    1095: lload         55
    1097: lstore        34
    1099: lload         42
    1101: lload         44
    1103: ldc2_w        #100                // long -1l
    1106: lxor
    1107: lload         46
    1109: land
    1110: lxor
    1111: lstore        53
    1113: lload         44
    1115: lload         46
    1117: ldc2_w        #100                // long -1l
    1120: lxor
    1121: lload         48
    1123: land
    1124: lxor
    1125: lstore        55
    1127: lload         46
    1129: lload         48
    1131: ldc2_w        #100                // long -1l
    1134: lxor
    1135: lload         50
    1137: land
    1138: lxor
    1139: lstore        46
    1141: lload         48
    1143: lload         50
    1145: ldc2_w        #100                // long -1l
    1148: lxor
    1149: lload         42
    1151: land
    1152: lxor
    1153: lstore        48
    1155: lload         50
    1157: lload         42
    1159: ldc2_w        #100                // long -1l
    1162: lxor
    1163: lload         44
    1165: land
    1166: lxor
    1167: lstore        50
    1169: lload         53
    1171: lstore        42
    1173: lload         55
    1175: lstore        44
    1177: lload_2
    1178: getstatic     #173                // Field KeccakRoundConstants:[J
    1181: iload         52
    1183: laload
    1184: lxor
    1185: lstore_2
    1186: iinc          52, 1
    1189: goto          151
    1192: aload_1
    1193: iconst_0
    1194: lload_2
    1195: lastore
    1196: aload_1
    1197: iconst_1
    1198: lload         4
    1200: lastore
    1201: aload_1
    1202: iconst_2
    1203: lload         6
    1205: lastore
    1206: aload_1
    1207: iconst_3
    1208: lload         8
    1210: lastore
    1211: aload_1
    1212: iconst_4
    1213: lload         10
    1215: lastore
    1216: aload_1
    1217: iconst_5
    1218: lload         12
    1220: lastore
    1221: aload_1
    1222: bipush        6
    1224: lload         14
    1226: lastore
    1227: aload_1
    1228: bipush        7
    1230: lload         16
    1232: lastore
    1233: aload_1
    1234: bipush        8
    1236: lload         18
    1238: lastore
    1239: aload_1
    1240: bipush        9
    1242: lload         20
    1244: lastore
    1245: aload_1
    1246: bipush        10
    1248: lload         22
    1250: lastore
    1251: aload_1
    1252: bipush        11
    1254: lload         24
    1256: lastore
    1257: aload_1
    1258: bipush        12
    1260: lload         26
    1262: lastore
    1263: aload_1
    1264: bipush        13
    1266: lload         28
    1268: lastore
    1269: aload_1
    1270: bipush        14
    1272: lload         30
    1274: lastore
    1275: aload_1
    1276: bipush        15
    1278: lload         32
    1280: lastore
    1281: aload_1
    1282: bipush        16
    1284: lload         34
    1286: lastore
    1287: aload_1
    1288: bipush        17
    1290: lload         36
    1292: lastore
    1293: aload_1
    1294: bipush        18
    1296: lload         38
    1298: lastore
    1299: aload_1
    1300: bipush        19
    1302: lload         40
    1304: lastore
    1305: aload_1
    1306: bipush        20
    1308: lload         42
    1310: lastore
    1311: aload_1
    1312: bipush        21
    1314: lload         44
    1316: lastore
    1317: aload_1
    1318: bipush        22
    1320: lload         46
    1322: lastore
    1323: aload_1
    1324: bipush        23
    1326: lload         48
    1328: lastore
    1329: aload_1
    1330: bipush        24
    1332: lload         50
    1334: lastore
    1335: return

  static {};
    Code:
       0: bipush        24
       2: newarray       long
       4: dup
       5: iconst_0
       6: lconst_1
       7: lastore
       8: dup
       9: iconst_1
      10: ldc2_w        #110                // long 32898l
      13: lastore
      14: dup
      15: iconst_2
      16: ldc2_w        #90                 // long -9223372036854742902l
      19: lastore
      20: dup
      21: iconst_3
      22: ldc2_w        #94                 // long -9223372034707259392l
      25: lastore
      26: dup
      27: iconst_4
      28: ldc2_w        #112                // long 32907l
      31: lastore
      32: dup
      33: iconst_5
      34: ldc2_w        #114                // long 2147483649l
      37: lastore
      38: dup
      39: bipush        6
      41: ldc2_w        #98                 // long -9223372034707259263l
      44: lastore
      45: dup
      46: bipush        7
      48: ldc2_w        #84                 // long -9223372036854743031l
      51: lastore
      52: dup
      53: bipush        8
      55: ldc2_w        #106                // long 138l
      58: lastore
      59: dup
      60: bipush        9
      62: ldc2_w        #104                // long 136l
      65: lastore
      66: dup
      67: bipush        10
      69: ldc2_w        #118                // long 2147516425l
      72: lastore
      73: dup
      74: bipush        11
      76: ldc2_w        #116                // long 2147483658l
      79: lastore
      80: dup
      81: bipush        12
      83: ldc2_w        #120                // long 2147516555l
      86: lastore
      87: dup
      88: bipush        13
      90: ldc2_w        #78                 // long -9223372036854775669l
      93: lastore
      94: dup
      95: bipush        14
      97: ldc2_w        #88                 // long -9223372036854742903l
     100: lastore
     101: dup
     102: bipush        15
     104: ldc2_w        #82                 // long -9223372036854743037l
     107: lastore
     108: dup
     109: bipush        16
     111: ldc2_w        #80                 // long -9223372036854743038l
     114: lastore
     115: dup
     116: bipush        17
     118: ldc2_w        #76                 // long -9223372036854775680l
     121: lastore
     122: dup
     123: bipush        18
     125: ldc2_w        #108                // long 32778l
     128: lastore
     129: dup
     130: bipush        19
     132: ldc2_w        #92                 // long -9223372034707292150l
     135: lastore
     136: dup
     137: bipush        20
     139: ldc2_w        #98                 // long -9223372034707259263l
     142: lastore
     143: dup
     144: bipush        21
     146: ldc2_w        #86                 // long -9223372036854742912l
     149: lastore
     150: dup
     151: bipush        22
     153: ldc2_w        #114                // long 2147483649l
     156: lastore
     157: dup
     158: bipush        23
     160: ldc2_w        #96                 // long -9223372034707259384l
     163: lastore
     164: putstatic     #173                // Field KeccakRoundConstants:[J
     167: return
}
