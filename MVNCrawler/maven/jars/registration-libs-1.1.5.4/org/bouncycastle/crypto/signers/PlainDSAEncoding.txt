public class org.bouncycastle.crypto.signers.PlainDSAEncoding implements org.bouncycastle.crypto.signers.DSAEncoding {
  public static final org.bouncycastle.crypto.signers.PlainDSAEncoding INSTANCE;

  public org.bouncycastle.crypto.signers.PlainDSAEncoding();
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: return

  public byte[] encode(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #85                 // Method org/bouncycastle/util/BigIntegers.getUnsignedByteLength:(Ljava/math/BigInteger;)I
       4: istore        4
       6: iload         4
       8: iconst_2
       9: imul
      10: newarray       byte
      12: astore        5
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload         5
      19: iconst_0
      20: iload         4
      22: invokespecial #80                 // Method encodeValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;[BII)V
      25: aload_0
      26: aload_1
      27: aload_3
      28: aload         5
      30: iload         4
      32: iload         4
      34: invokespecial #80                 // Method encodeValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;[BII)V
      37: aload         5
      39: areturn

  public java.math.BigInteger[] decode(java.math.BigInteger, byte[]);
    Code:
       0: aload_1
       1: invokestatic  #85                 // Method org/bouncycastle/util/BigIntegers.getUnsignedByteLength:(Ljava/math/BigInteger;)I
       4: istore_3
       5: aload_2
       6: arraylength
       7: iload_3
       8: iconst_2
       9: imul
      10: if_icmpeq     23
      13: new           #37                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #1                  // String Encoding has incorrect length
      19: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: iconst_2
      24: anewarray     #41                 // class java/math/BigInteger
      27: dup
      28: iconst_0
      29: aload_0
      30: aload_1
      31: aload_2
      32: iconst_0
      33: iload_3
      34: invokevirtual #81                 // Method decodeValue:(Ljava/math/BigInteger;[BII)Ljava/math/BigInteger;
      37: aastore
      38: dup
      39: iconst_1
      40: aload_0
      41: aload_1
      42: aload_2
      43: iload_3
      44: iload_3
      45: invokevirtual #81                 // Method decodeValue:(Ljava/math/BigInteger;[BII)Ljava/math/BigInteger;
      48: aastore
      49: areturn

  protected java.math.BigInteger checkValue(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_2
       1: invokevirtual #75                 // Method java/math/BigInteger.signum:()I
       4: iflt          15
       7: aload_2
       8: aload_1
       9: invokevirtual #78                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      12: iflt          25
      15: new           #37                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #2                  // String Value out of range
      21: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_2
      26: areturn

  protected java.math.BigInteger decodeValue(java.math.BigInteger, byte[], int, int);
    Code:
       0: aload_2
       1: iload_3
       2: iload_3
       3: iload         4
       5: iadd
       6: invokestatic  #83                 // Method org/bouncycastle/util/Arrays.copyOfRange:([BII)[B
       9: astore        5
      11: aload_0
      12: aload_1
      13: new           #41                 // class java/math/BigInteger
      16: dup
      17: iconst_1
      18: aload         5
      20: invokespecial #77                 // Method java/math/BigInteger."<init>":(I[B)V
      23: invokevirtual #82                 // Method checkValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      26: areturn

  private void encodeValue(java.math.BigInteger, java.math.BigInteger, byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #82                 // Method checkValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       6: invokevirtual #76                 // Method java/math/BigInteger.toByteArray:()[B
       9: astore        6
      11: iconst_0
      12: aload         6
      14: arraylength
      15: iload         5
      17: isub
      18: invokestatic  #72                 // Method java/lang/Math.max:(II)I
      21: istore        7
      23: aload         6
      25: arraylength
      26: iload         7
      28: isub
      29: istore        8
      31: iload         5
      33: iload         8
      35: isub
      36: istore        9
      38: aload_3
      39: iload         4
      41: iload         4
      43: iload         9
      45: iadd
      46: iconst_0
      47: invokestatic  #84                 // Method org/bouncycastle/util/Arrays.fill:([BIIB)V
      50: aload         6
      52: iload         7
      54: aload_3
      55: iload         4
      57: iload         9
      59: iadd
      60: iload         8
      62: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      65: return

  static {};
    Code:
       0: new           #43                 // class org/bouncycastle/crypto/signers/PlainDSAEncoding
       3: dup
       4: invokespecial #79                 // Method "<init>":()V
       7: putstatic     #70                 // Field INSTANCE:Lorg/bouncycastle/crypto/signers/PlainDSAEncoding;
      10: return
}
