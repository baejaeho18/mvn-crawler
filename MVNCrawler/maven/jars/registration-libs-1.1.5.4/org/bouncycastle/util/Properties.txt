public class org.bouncycastle.util.Properties {
  private static final java.lang.ThreadLocal threadProperties;

  private org.bouncycastle.util.Properties();
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isOverrideSet(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #118                // Method getPropertyValue:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: ldc           #3                  // String true
       7: aload_1
       8: invokevirtual #104                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ireturn
      12: astore_1
      13: iconst_0
      14: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/security/AccessControlException

  public static boolean setThreadOverride(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokestatic  #117                // Method isOverrideSet:(Ljava/lang/String;)Z
       4: istore_2
       5: getstatic     #101                // Field threadProperties:Ljava/lang/ThreadLocal;
       8: invokevirtual #107                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      11: checkcast     #56                 // class java/util/Map
      14: astore_3
      15: aload_3
      16: ifnonnull     34
      19: new           #54                 // class java/util/HashMap
      22: dup
      23: invokespecial #112                // Method java/util/HashMap."<init>":()V
      26: astore_3
      27: getstatic     #101                // Field threadProperties:Ljava/lang/ThreadLocal;
      30: aload_3
      31: invokevirtual #108                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      34: aload_3
      35: aload_0
      36: iload_1
      37: ifeq          45
      40: ldc           #3                  // String true
      42: goto          47
      45: ldc           #2                  // String false
      47: invokeinterface #125,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: iload_2
      54: ireturn

  public static boolean removeThreadOverride(java.lang.String);
    Code:
       0: getstatic     #101                // Field threadProperties:Ljava/lang/ThreadLocal;
       3: invokevirtual #107                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #56                 // class java/util/Map
       9: astore_1
      10: aload_1
      11: ifnull        51
      14: aload_1
      15: aload_0
      16: invokeinterface #124,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #48                 // class java/lang/String
      24: astore_2
      25: aload_2
      26: ifnull        51
      29: aload_1
      30: invokeinterface #122,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      35: ifeq          44
      38: getstatic     #101                // Field threadProperties:Ljava/lang/ThreadLocal;
      41: invokevirtual #106                // Method java/lang/ThreadLocal.remove:()V
      44: ldc           #3                  // String true
      46: aload_2
      47: invokevirtual #104                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      50: ireturn
      51: iconst_0
      52: ireturn

  public static java.math.BigInteger asBigInteger(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #118                // Method getPropertyValue:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: new           #50                 // class java/math/BigInteger
      12: dup
      13: aload_1
      14: invokespecial #109                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      17: areturn
      18: aconst_null
      19: areturn

  public static java.util.Set<java.lang.String> asKeySet(java.lang.String);
    Code:
       0: new           #55                 // class java/util/HashSet
       3: dup
       4: invokespecial #113                // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokestatic  #118                // Method getPropertyValue:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnull        55
      17: new           #58                 // class java/util/StringTokenizer
      20: dup
      21: aload_2
      22: ldc           #1                  // String ,
      24: invokespecial #116                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      27: astore_3
      28: aload_3
      29: invokevirtual #114                // Method java/util/StringTokenizer.hasMoreElements:()Z
      32: ifeq          55
      35: aload_1
      36: aload_3
      37: invokevirtual #115                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: invokestatic  #121                // Method org/bouncycastle/util/Strings.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      43: invokevirtual #103                // Method java/lang/String.trim:()Ljava/lang/String;
      46: invokeinterface #126,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          28
      55: aload_1
      56: invokestatic  #111                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      59: areturn

  public static java.lang.String getPropertyValue(java.lang.String);
    Code:
       0: new           #60                 // class org/bouncycastle/util/Properties$1
       3: dup
       4: aload_0
       5: invokespecial #119                // Method org/bouncycastle/util/Properties$1."<init>":(Ljava/lang/String;)V
       8: invokestatic  #110                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #48                 // class java/lang/String
      14: astore_1
      15: aload_1
      16: ifnull        21
      19: aload_1
      20: areturn
      21: getstatic     #101                // Field threadProperties:Ljava/lang/ThreadLocal;
      24: invokevirtual #107                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      27: checkcast     #56                 // class java/util/Map
      30: astore_2
      31: aload_2
      32: ifnull        52
      35: aload_2
      36: aload_0
      37: invokeinterface #123,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #48                 // class java/lang/String
      45: astore_3
      46: aload_3
      47: ifnull        52
      50: aload_3
      51: areturn
      52: new           #61                 // class org/bouncycastle/util/Properties$2
      55: dup
      56: aload_0
      57: invokespecial #120                // Method org/bouncycastle/util/Properties$2."<init>":(Ljava/lang/String;)V
      60: invokestatic  #110                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      63: checkcast     #48                 // class java/lang/String
      66: areturn

  static {};
    Code:
       0: new           #49                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #105                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #101                // Field threadProperties:Ljava/lang/ThreadLocal;
      10: return
}
