public abstract class org.bouncycastle.math.ec.ECCurve {
  public static final int COORD_AFFINE;

  public static final int COORD_HOMOGENEOUS;

  public static final int COORD_JACOBIAN;

  public static final int COORD_JACOBIAN_CHUDNOVSKY;

  public static final int COORD_JACOBIAN_MODIFIED;

  public static final int COORD_LAMBDA_AFFINE;

  public static final int COORD_LAMBDA_PROJECTIVE;

  public static final int COORD_SKEWED;

  protected org.bouncycastle.math.field.FiniteField field;

  protected org.bouncycastle.math.ec.ECFieldElement a;

  protected org.bouncycastle.math.ec.ECFieldElement b;

  protected java.math.BigInteger order;

  protected java.math.BigInteger cofactor;

  protected int coord;

  protected org.bouncycastle.math.ec.endo.ECEndomorphism endomorphism;

  protected org.bouncycastle.math.ec.ECMultiplier multiplier;

  public static int[] getAllCoordinateSystems();
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_0
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_1
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_2
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_3
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_4
      23: iastore
      24: dup
      25: iconst_5
      26: iconst_5
      27: iastore
      28: dup
      29: bipush        6
      31: bipush        6
      33: iastore
      34: dup
      35: bipush        7
      37: bipush        7
      39: iastore
      40: areturn

  protected org.bouncycastle.math.ec.ECCurve(org.bouncycastle.math.field.FiniteField);
    Code:
       0: aload_0
       1: invokespecial #288                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #276                // Field coord:I
       9: aload_0
      10: aconst_null
      11: putfield      #282                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
      14: aload_0
      15: aconst_null
      16: putfield      #281                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      19: aload_0
      20: aload_1
      21: putfield      #283                // Field field:Lorg/bouncycastle/math/field/FiniteField;
      24: return

  public abstract int getFieldSize();

  public abstract org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger);

  public abstract boolean isValidFieldElement(java.math.BigInteger);

  public abstract org.bouncycastle.math.ec.ECFieldElement randomFieldElement(java.security.SecureRandom);

  public abstract org.bouncycastle.math.ec.ECFieldElement randomFieldElementMult(java.security.SecureRandom);

  public synchronized org.bouncycastle.math.ec.ECCurve$Config configure();
    Code:
       0: new           #158                // class org/bouncycastle/math/ec/ECCurve$Config
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #276                // Field coord:I
       9: aload_0
      10: getfield      #282                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
      13: aload_0
      14: getfield      #281                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      17: invokespecial #319                // Method org/bouncycastle/math/ec/ECCurve$Config."<init>":(Lorg/bouncycastle/math/ec/ECCurve;ILorg/bouncycastle/math/ec/endo/ECEndomorphism;Lorg/bouncycastle/math/ec/ECMultiplier;)V
      20: areturn

  public org.bouncycastle.math.ec.ECPoint validatePoint(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #315                // Method createPoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
       6: astore_3
       7: aload_3
       8: invokevirtual #323                // Method org/bouncycastle/math/ec/ECPoint.isValid:()Z
      11: ifne          24
      14: new           #146                // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #12                 // String Invalid point coordinates
      20: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_3
      25: areturn

  public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #312                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       6: aload_0
       7: aload_2
       8: invokevirtual #312                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      11: invokevirtual #317                // Method createRawPoint:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
      14: areturn

  protected abstract org.bouncycastle.math.ec.ECCurve cloneCurve();

  protected abstract org.bouncycastle.math.ec.ECPoint createRawPoint(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement);

  protected abstract org.bouncycastle.math.ec.ECPoint createRawPoint(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement[]);

  protected org.bouncycastle.math.ec.ECMultiplier createDefaultMultiplier();
    Code:
       0: aload_0
       1: getfield      #282                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
       4: instanceof    #167                // class org/bouncycastle/math/ec/endo/GLVEndomorphism
       7: ifeq          26
      10: new           #163                // class org/bouncycastle/math/ec/GLVMultiplier
      13: dup
      14: aload_0
      15: aload_0
      16: getfield      #282                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
      19: checkcast     #167                // class org/bouncycastle/math/ec/endo/GLVEndomorphism
      22: invokespecial #333                // Method org/bouncycastle/math/ec/GLVMultiplier."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/endo/GLVEndomorphism;)V
      25: areturn
      26: new           #166                // class org/bouncycastle/math/ec/WNafL2RMultiplier
      29: dup
      30: invokespecial #334                // Method org/bouncycastle/math/ec/WNafL2RMultiplier."<init>":()V
      33: areturn

  public boolean supportsCoordinateSystem(int);
    Code:
       0: iload_1
       1: ifne          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  public org.bouncycastle.math.ec.PreCompInfo getPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #309                // Method checkPoint:(Lorg/bouncycastle/math/ec/ECPoint;)V
       5: aload_1
       6: dup
       7: astore        4
       9: monitorenter
      10: aload_1
      11: getfield      #284                // Field org/bouncycastle/math/ec/ECPoint.preCompTable:Ljava/util/Hashtable;
      14: astore_3
      15: aload         4
      17: monitorexit
      18: goto          29
      21: astore        5
      23: aload         4
      25: monitorexit
      26: aload         5
      28: athrow
      29: aconst_null
      30: aload_3
      31: if_acmpne     36
      34: aconst_null
      35: areturn
      36: aload_3
      37: dup
      38: astore        4
      40: monitorenter
      41: aload_3
      42: aload_2
      43: invokevirtual #299                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #165                // class org/bouncycastle/math/ec/PreCompInfo
      49: aload         4
      51: monitorexit
      52: areturn
      53: astore        6
      55: aload         4
      57: monitorexit
      58: aload         6
      60: athrow
    Exception table:
       from    to  target type
          10    18    21   any
          21    26    21   any
          41    52    53   any
          53    58    53   any

  public org.bouncycastle.math.ec.PreCompInfo precompute(org.bouncycastle.math.ec.ECPoint, java.lang.String, org.bouncycastle.math.ec.PreCompCallback);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #309                // Method checkPoint:(Lorg/bouncycastle/math/ec/ECPoint;)V
       5: aload_1
       6: dup
       7: astore        5
       9: monitorenter
      10: aload_1
      11: getfield      #284                // Field org/bouncycastle/math/ec/ECPoint.preCompTable:Ljava/util/Hashtable;
      14: astore        4
      16: aconst_null
      17: aload         4
      19: if_acmpne     37
      22: aload_1
      23: new           #152                // class java/util/Hashtable
      26: dup
      27: iconst_4
      28: invokespecial #298                // Method java/util/Hashtable."<init>":(I)V
      31: dup
      32: astore        4
      34: putfield      #284                // Field org/bouncycastle/math/ec/ECPoint.preCompTable:Ljava/util/Hashtable;
      37: aload         5
      39: monitorexit
      40: goto          51
      43: astore        6
      45: aload         5
      47: monitorexit
      48: aload         6
      50: athrow
      51: aload         4
      53: dup
      54: astore        5
      56: monitorenter
      57: aload         4
      59: aload_2
      60: invokevirtual #299                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #165                // class org/bouncycastle/math/ec/PreCompInfo
      66: astore        6
      68: aload_3
      69: aload         6
      71: invokeinterface #337,  2          // InterfaceMethod org/bouncycastle/math/ec/PreCompCallback.precompute:(Lorg/bouncycastle/math/ec/PreCompInfo;)Lorg/bouncycastle/math/ec/PreCompInfo;
      76: astore        7
      78: aload         7
      80: aload         6
      82: if_acmpeq     94
      85: aload         4
      87: aload_2
      88: aload         7
      90: invokevirtual #300                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: aload         7
      96: aload         5
      98: monitorexit
      99: areturn
     100: astore        8
     102: aload         5
     104: monitorexit
     105: aload         8
     107: athrow
    Exception table:
       from    to  target type
          10    40    43   any
          43    48    43   any
          57    99   100   any
         100   105   100   any

  public org.bouncycastle.math.ec.ECPoint importPoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #325                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       5: if_acmpne     10
       8: aload_1
       9: areturn
      10: aload_1
      11: invokevirtual #321                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #308                // Method getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
      21: areturn
      22: aload_1
      23: invokevirtual #331                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      26: astore_1
      27: aload_0
      28: aload_1
      29: invokevirtual #328                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      32: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      35: aload_1
      36: invokevirtual #329                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      39: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      42: invokevirtual #315                // Method createPoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      45: areturn

  public void normalizeAll(org.bouncycastle.math.ec.ECPoint[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aconst_null
       6: invokevirtual #313                // Method normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;IILorg/bouncycastle/math/ec/ECFieldElement;)V
       9: return

  public void normalizeAll(org.bouncycastle.math.ec.ECPoint[], int, int, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #310                // Method checkPoints:([Lorg/bouncycastle/math/ec/ECPoint;II)V
       7: aload_0
       8: invokevirtual #302                // Method getCoordinateSystem:()I
      11: lookupswitch  { // 2
                     0: 36
                     5: 36
               default: 52
          }
      36: aload         4
      38: ifnull        51
      41: new           #146                // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #1                  // String \'iso\' not valid for affine coordinates
      47: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: return
      52: iload_3
      53: anewarray     #161                // class org/bouncycastle/math/ec/ECFieldElement
      56: astore        5
      58: iload_3
      59: newarray       int
      61: astore        6
      63: iconst_0
      64: istore        7
      66: iconst_0
      67: istore        8
      69: iload         8
      71: iload_3
      72: if_icmpge     131
      75: aload_1
      76: iload_2
      77: iload         8
      79: iadd
      80: aaload
      81: astore        9
      83: aconst_null
      84: aload         9
      86: if_acmpeq     125
      89: aload         4
      91: ifnonnull     102
      94: aload         9
      96: invokevirtual #322                // Method org/bouncycastle/math/ec/ECPoint.isNormalized:()Z
      99: ifne          125
     102: aload         5
     104: iload         7
     106: aload         9
     108: iconst_0
     109: invokevirtual #330                // Method org/bouncycastle/math/ec/ECPoint.getZCoord:(I)Lorg/bouncycastle/math/ec/ECFieldElement;
     112: aastore
     113: aload         6
     115: iload         7
     117: iinc          7, 1
     120: iload_2
     121: iload         8
     123: iadd
     124: iastore
     125: iinc          8, 1
     128: goto          69
     131: iload         7
     133: ifne          137
     136: return
     137: aload         5
     139: iconst_0
     140: iload         7
     142: aload         4
     144: invokestatic  #301                // Method org/bouncycastle/math/ec/ECAlgorithms.montgomeryTrick:([Lorg/bouncycastle/math/ec/ECFieldElement;IILorg/bouncycastle/math/ec/ECFieldElement;)V
     147: iconst_0
     148: istore        8
     150: iload         8
     152: iload         7
     154: if_icmpge     186
     157: aload         6
     159: iload         8
     161: iaload
     162: istore        9
     164: aload_1
     165: iload         9
     167: aload_1
     168: iload         9
     170: aaload
     171: aload         5
     173: iload         8
     175: aaload
     176: invokevirtual #332                // Method org/bouncycastle/math/ec/ECPoint.normalize:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
     179: aastore
     180: iinc          8, 1
     183: goto          150
     186: return

  public abstract org.bouncycastle.math.ec.ECPoint getInfinity();

  public org.bouncycastle.math.field.FiniteField getField();
    Code:
       0: aload_0
       1: getfield      #283                // Field field:Lorg/bouncycastle/math/field/FiniteField;
       4: areturn

  public org.bouncycastle.math.ec.ECFieldElement getA();
    Code:
       0: aload_0
       1: getfield      #279                // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
       4: areturn

  public org.bouncycastle.math.ec.ECFieldElement getB();
    Code:
       0: aload_0
       1: getfield      #280                // Field b:Lorg/bouncycastle/math/ec/ECFieldElement;
       4: areturn

  public java.math.BigInteger getOrder();
    Code:
       0: aload_0
       1: getfield      #278                // Field order:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getCofactor();
    Code:
       0: aload_0
       1: getfield      #277                // Field cofactor:Ljava/math/BigInteger;
       4: areturn

  public int getCoordinateSystem();
    Code:
       0: aload_0
       1: getfield      #276                // Field coord:I
       4: ireturn

  protected abstract org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);

  public org.bouncycastle.math.ec.endo.ECEndomorphism getEndomorphism();
    Code:
       0: aload_0
       1: getfield      #282                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
       4: areturn

  public synchronized org.bouncycastle.math.ec.ECMultiplier getMultiplier();
    Code:
       0: aload_0
       1: getfield      #281                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #307                // Method createDefaultMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      12: putfield      #281                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      15: aload_0
      16: getfield      #281                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      19: areturn

  public org.bouncycastle.math.ec.ECPoint decodePoint(byte[]);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #303                // Method getFieldSize:()I
       6: bipush        7
       8: iadd
       9: bipush        8
      11: idiv
      12: istore_3
      13: aload_1
      14: iconst_0
      15: baload
      16: istore        4
      18: iload         4
      20: tableswitch   { // 0 to 7
                     0: 68
                     1: 283
                     2: 92
                     3: 92
                     4: 152
                     5: 283
                     6: 202
                     7: 202
               default: 283
          }
      68: aload_1
      69: arraylength
      70: iconst_1
      71: if_icmpeq     84
      74: new           #146                // class java/lang/IllegalArgumentException
      77: dup
      78: ldc           #8                  // String Incorrect length for infinity encoding
      80: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload_0
      85: invokevirtual #308                // Method getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
      88: astore_2
      89: goto          316
      92: aload_1
      93: arraylength
      94: iload_3
      95: iconst_1
      96: iadd
      97: if_icmpeq     110
     100: new           #146                // class java/lang/IllegalArgumentException
     103: dup
     104: ldc           #6                  // String Incorrect length for compressed encoding
     106: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: iload         4
     112: iconst_1
     113: iand
     114: istore        5
     116: aload_1
     117: iconst_1
     118: iload_3
     119: invokestatic  #335                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     122: astore        6
     124: aload_0
     125: iload         5
     127: aload         6
     129: invokevirtual #314                // Method decompressPoint:(ILjava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     132: astore_2
     133: aload_2
     134: iconst_1
     135: iconst_1
     136: invokevirtual #324                // Method org/bouncycastle/math/ec/ECPoint.implIsValid:(ZZ)Z
     139: ifne          316
     142: new           #146                // class java/lang/IllegalArgumentException
     145: dup
     146: ldc           #11                 // String Invalid point
     148: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload_1
     153: arraylength
     154: iconst_2
     155: iload_3
     156: imul
     157: iconst_1
     158: iadd
     159: if_icmpeq     172
     162: new           #146                // class java/lang/IllegalArgumentException
     165: dup
     166: ldc           #9                  // String Incorrect length for uncompressed encoding
     168: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     171: athrow
     172: aload_1
     173: iconst_1
     174: iload_3
     175: invokestatic  #335                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     178: astore        5
     180: aload_1
     181: iconst_1
     182: iload_3
     183: iadd
     184: iload_3
     185: invokestatic  #335                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     188: astore        6
     190: aload_0
     191: aload         5
     193: aload         6
     195: invokevirtual #316                // Method validatePoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     198: astore_2
     199: goto          316
     202: aload_1
     203: arraylength
     204: iconst_2
     205: iload_3
     206: imul
     207: iconst_1
     208: iadd
     209: if_icmpeq     222
     212: new           #146                // class java/lang/IllegalArgumentException
     215: dup
     216: ldc           #7                  // String Incorrect length for hybrid encoding
     218: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     221: athrow
     222: aload_1
     223: iconst_1
     224: iload_3
     225: invokestatic  #335                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     228: astore        5
     230: aload_1
     231: iconst_1
     232: iload_3
     233: iadd
     234: iload_3
     235: invokestatic  #335                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     238: astore        6
     240: aload         6
     242: iconst_0
     243: invokevirtual #296                // Method java/math/BigInteger.testBit:(I)Z
     246: iload         4
     248: bipush        7
     250: if_icmpne     257
     253: iconst_1
     254: goto          258
     257: iconst_0
     258: if_icmpeq     271
     261: new           #146                // class java/lang/IllegalArgumentException
     264: dup
     265: ldc           #5                  // String Inconsistent Y coordinate in hybrid encoding
     267: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     270: athrow
     271: aload_0
     272: aload         5
     274: aload         6
     276: invokevirtual #316                // Method validatePoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     279: astore_2
     280: goto          316
     283: new           #146                // class java/lang/IllegalArgumentException
     286: dup
     287: new           #149                // class java/lang/StringBuilder
     290: dup
     291: invokespecial #290                // Method java/lang/StringBuilder."<init>":()V
     294: ldc           #13                 // String Invalid point encoding 0x
     296: invokevirtual #292                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: iload         4
     301: bipush        16
     303: invokestatic  #286                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     306: invokevirtual #292                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: invokevirtual #291                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     312: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     315: athrow
     316: iload         4
     318: ifeq          338
     321: aload_2
     322: invokevirtual #321                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     325: ifeq          338
     328: new           #146                // class java/lang/IllegalArgumentException
     331: dup
     332: ldc           #10                 // String Invalid infinity encoding
     334: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     337: athrow
     338: aload_2
     339: areturn

  public org.bouncycastle.math.ec.ECLookupTable createCacheSafeLookupTable(org.bouncycastle.math.ec.ECPoint[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #303                // Method getFieldSize:()I
       4: bipush        7
       6: iadd
       7: iconst_3
       8: iushr
       9: istore        4
      11: iload_3
      12: iload         4
      14: imul
      15: iconst_2
      16: imul
      17: newarray       byte
      19: astore        5
      21: iconst_0
      22: istore        6
      24: iconst_0
      25: istore        7
      27: iload         7
      29: iload_3
      30: if_icmpge     171
      33: aload_1
      34: iload_2
      35: iload         7
      37: iadd
      38: aaload
      39: astore        8
      41: aload         8
      43: invokevirtual #326                // Method org/bouncycastle/math/ec/ECPoint.getRawXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      46: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      49: invokevirtual #295                // Method java/math/BigInteger.toByteArray:()[B
      52: astore        9
      54: aload         8
      56: invokevirtual #327                // Method org/bouncycastle/math/ec/ECPoint.getRawYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      59: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      62: invokevirtual #295                // Method java/math/BigInteger.toByteArray:()[B
      65: astore        10
      67: aload         9
      69: arraylength
      70: iload         4
      72: if_icmple     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: istore        11
      82: aload         9
      84: arraylength
      85: iload         11
      87: isub
      88: istore        12
      90: aload         10
      92: arraylength
      93: iload         4
      95: if_icmple     102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: istore        13
     105: aload         10
     107: arraylength
     108: iload         13
     110: isub
     111: istore        14
     113: aload         9
     115: iload         11
     117: aload         5
     119: iload         6
     121: iload         4
     123: iadd
     124: iload         12
     126: isub
     127: iload         12
     129: invokestatic  #293                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     132: iload         6
     134: iload         4
     136: iadd
     137: istore        6
     139: aload         10
     141: iload         13
     143: aload         5
     145: iload         6
     147: iload         4
     149: iadd
     150: iload         14
     152: isub
     153: iload         14
     155: invokestatic  #293                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     158: iload         6
     160: iload         4
     162: iadd
     163: istore        6
     165: iinc          7, 1
     168: goto          27
     171: new           #155                // class org/bouncycastle/math/ec/ECCurve$1
     174: dup
     175: aload_0
     176: iload_3
     177: iload         4
     179: aload         5
     181: invokespecial #318                // Method org/bouncycastle/math/ec/ECCurve$1."<init>":(Lorg/bouncycastle/math/ec/ECCurve;II[B)V
     184: areturn

  protected void checkPoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     13
       5: aload_0
       6: aload_1
       7: invokevirtual #325                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      10: if_acmpeq     23
      13: new           #146                // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #2                  // String \'point\' must be non-null and on this curve
      19: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  protected void checkPoints(org.bouncycastle.math.ec.ECPoint[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #310                // Method checkPoints:([Lorg/bouncycastle/math/ec/ECPoint;II)V
       8: return

  protected void checkPoints(org.bouncycastle.math.ec.ECPoint[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #146                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String \'points\' cannot be null
      10: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: iflt          30
      18: iload_3
      19: iflt          30
      22: iload_2
      23: aload_1
      24: arraylength
      25: iload_3
      26: isub
      27: if_icmple     40
      30: new           #146                // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #14                 // String invalid range specified for \'points\'
      36: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iconst_0
      41: istore        4
      43: iload         4
      45: iload_3
      46: if_icmpge     88
      49: aload_1
      50: iload_2
      51: iload         4
      53: iadd
      54: aaload
      55: astore        5
      57: aconst_null
      58: aload         5
      60: if_acmpeq     82
      63: aload_0
      64: aload         5
      66: invokevirtual #325                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      69: if_acmpeq     82
      72: new           #146                // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #4                  // String \'points\' entries must be null or on this curve
      78: invokespecial #285                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iinc          4, 1
      85: goto          43
      88: return

  public boolean equals(org.bouncycastle.math.ec.ECCurve);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     64
       5: aconst_null
       6: aload_1
       7: if_acmpeq     68
      10: aload_0
      11: invokevirtual #311                // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
      14: aload_1
      15: invokevirtual #311                // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
      18: invokevirtual #289                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          68
      24: aload_0
      25: invokevirtual #305                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      28: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      31: aload_1
      32: invokevirtual #305                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      35: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      38: invokevirtual #297                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      41: ifeq          68
      44: aload_0
      45: invokevirtual #306                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      48: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      51: aload_1
      52: invokevirtual #306                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      55: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      58: invokevirtual #297                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     23
       5: aload_1
       6: instanceof    #154                // class org/bouncycastle/math/ec/ECCurve
       9: ifeq          27
      12: aload_0
      13: aload_1
      14: checkcast     #154                // class org/bouncycastle/math/ec/ECCurve
      17: invokevirtual #304                // Method equals:(Lorg/bouncycastle/math/ec/ECCurve;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #311                // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
       4: invokevirtual #287                // Method java/lang/Object.hashCode:()I
       7: aload_0
       8: invokevirtual #305                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      11: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      14: invokevirtual #294                // Method java/math/BigInteger.hashCode:()I
      17: bipush        8
      19: invokestatic  #336                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
      22: ixor
      23: aload_0
      24: invokevirtual #306                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      27: invokevirtual #320                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      30: invokevirtual #294                // Method java/math/BigInteger.hashCode:()I
      33: bipush        16
      35: invokestatic  #336                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
      38: ixor
      39: ireturn
}
