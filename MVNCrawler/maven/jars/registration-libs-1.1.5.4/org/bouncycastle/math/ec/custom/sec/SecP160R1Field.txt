public class org.bouncycastle.math.ec.custom.sec.SecP160R1Field {
  private static final long M;

  static final int[] P;

  static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P4;

  private static final int PExt9;

  private static final int PInv;

  public org.bouncycastle.math.ec.custom.sec.SecP160R1Field();
    Code:
       0: aload_0
       1: invokespecial #113                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #136                // Method org/bouncycastle/math/raw/Nat160.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          28
      11: aload_2
      12: iconst_4
      13: iaload
      14: iconst_m1
      15: if_icmpne     36
      18: aload_2
      19: getstatic     #110                // Field P:[I
      22: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      25: ifeq          36
      28: iconst_5
      29: ldc           #1                  // int -2147483647
      31: aload_2
      32: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat.addWordTo:(II[I)I
      35: pop
      36: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        10
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #127                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        9
      16: iaload
      17: iconst_m1
      18: if_icmpne     58
      21: bipush        10
      23: aload_2
      24: getstatic     #111                // Field PExt:[I
      27: invokestatic  #126                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          58
      33: getstatic     #112                // Field PExtInv:[I
      36: arraylength
      37: getstatic     #112                // Field PExtInv:[I
      40: aload_2
      41: invokestatic  #123                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      44: ifeq          58
      47: bipush        10
      49: aload_2
      50: getstatic     #112                // Field PExtInv:[I
      53: arraylength
      54: invokestatic  #119                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      57: pop
      58: return

  public static void addOne(int[], int[]);
    Code:
       0: iconst_5
       1: aload_0
       2: aload_1
       3: invokestatic  #124                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       6: istore_2
       7: iload_2
       8: ifne          28
      11: aload_1
      12: iconst_4
      13: iaload
      14: iconst_m1
      15: if_icmpne     36
      18: aload_1
      19: getstatic     #110                // Field P:[I
      22: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      25: ifeq          36
      28: iconst_5
      29: ldc           #1                  // int -2147483647
      31: aload_1
      32: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat.addWordTo:(II[I)I
      35: pop
      36: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #140                // Method org/bouncycastle/math/raw/Nat160.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: iconst_4
       7: iaload
       8: iconst_m1
       9: if_icmpne     30
      12: aload_1
      13: getstatic     #110                // Field P:[I
      16: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      19: ifeq          30
      22: getstatic     #110                // Field P:[I
      25: aload_1
      26: invokestatic  #133                // Method org/bouncycastle/math/raw/Nat160.subFrom:([I[I)I
      29: pop
      30: aload_1
      31: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          19
       8: iconst_5
       9: aload_0
      10: iconst_0
      11: aload_1
      12: invokestatic  #121                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      15: pop
      16: goto          35
      19: aload_0
      20: getstatic     #110                // Field P:[I
      23: aload_1
      24: invokestatic  #136                // Method org/bouncycastle/math/raw/Nat160.add:([I[I[I)I
      27: istore_2
      28: iconst_5
      29: aload_1
      30: iload_2
      31: invokestatic  #120                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      34: pop
      35: return

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #129                // Method org/bouncycastle/math/raw/Nat160.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #139                // Method org/bouncycastle/math/raw/Nat160.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #115                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // Method org/bouncycastle/math/raw/Nat160.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        9
      14: iaload
      15: iconst_m1
      16: if_icmpne     56
      19: bipush        10
      21: aload_2
      22: getstatic     #111                // Field PExt:[I
      25: invokestatic  #126                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          56
      31: getstatic     #112                // Field PExtInv:[I
      34: arraylength
      35: getstatic     #112                // Field PExtInv:[I
      38: aload_2
      39: invokestatic  #123                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      42: ifeq          56
      45: bipush        10
      47: aload_2
      48: getstatic     #112                // Field PExtInv:[I
      51: arraylength
      52: invokestatic  #119                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      55: pop
      56: return

  public static void negate(int[], int[]);
    Code:
       0: aload_0
       1: invokestatic  #132                // Method org/bouncycastle/math/raw/Nat160.isZero:([I)Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #131                // Method org/bouncycastle/math/raw/Nat160.zero:([I)V
      11: goto          23
      14: getstatic     #110                // Field P:[I
      17: aload_0
      18: aload_1
      19: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat160.sub:([I[I[I)I
      22: pop
      23: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: iconst_5
       2: iaload
       3: i2l
       4: ldc2_w        #72                 // long 4294967295l
       7: land
       8: lstore_2
       9: aload_0
      10: bipush        6
      12: iaload
      13: i2l
      14: ldc2_w        #72                 // long 4294967295l
      17: land
      18: lstore        4
      20: aload_0
      21: bipush        7
      23: iaload
      24: i2l
      25: ldc2_w        #72                 // long 4294967295l
      28: land
      29: lstore        6
      31: aload_0
      32: bipush        8
      34: iaload
      35: i2l
      36: ldc2_w        #72                 // long 4294967295l
      39: land
      40: lstore        8
      42: aload_0
      43: bipush        9
      45: iaload
      46: i2l
      47: ldc2_w        #72                 // long 4294967295l
      50: land
      51: lstore        10
      53: lconst_0
      54: lstore        12
      56: lload         12
      58: aload_0
      59: iconst_0
      60: iaload
      61: i2l
      62: ldc2_w        #72                 // long 4294967295l
      65: land
      66: lload_2
      67: ladd
      68: lload_2
      69: bipush        31
      71: lshl
      72: ladd
      73: ladd
      74: lstore        12
      76: aload_1
      77: iconst_0
      78: lload         12
      80: l2i
      81: iastore
      82: lload         12
      84: bipush        32
      86: lushr
      87: lstore        12
      89: lload         12
      91: aload_0
      92: iconst_1
      93: iaload
      94: i2l
      95: ldc2_w        #72                 // long 4294967295l
      98: land
      99: lload         4
     101: ladd
     102: lload         4
     104: bipush        31
     106: lshl
     107: ladd
     108: ladd
     109: lstore        12
     111: aload_1
     112: iconst_1
     113: lload         12
     115: l2i
     116: iastore
     117: lload         12
     119: bipush        32
     121: lushr
     122: lstore        12
     124: lload         12
     126: aload_0
     127: iconst_2
     128: iaload
     129: i2l
     130: ldc2_w        #72                 // long 4294967295l
     133: land
     134: lload         6
     136: ladd
     137: lload         6
     139: bipush        31
     141: lshl
     142: ladd
     143: ladd
     144: lstore        12
     146: aload_1
     147: iconst_2
     148: lload         12
     150: l2i
     151: iastore
     152: lload         12
     154: bipush        32
     156: lushr
     157: lstore        12
     159: lload         12
     161: aload_0
     162: iconst_3
     163: iaload
     164: i2l
     165: ldc2_w        #72                 // long 4294967295l
     168: land
     169: lload         8
     171: ladd
     172: lload         8
     174: bipush        31
     176: lshl
     177: ladd
     178: ladd
     179: lstore        12
     181: aload_1
     182: iconst_3
     183: lload         12
     185: l2i
     186: iastore
     187: lload         12
     189: bipush        32
     191: lushr
     192: lstore        12
     194: lload         12
     196: aload_0
     197: iconst_4
     198: iaload
     199: i2l
     200: ldc2_w        #72                 // long 4294967295l
     203: land
     204: lload         10
     206: ladd
     207: lload         10
     209: bipush        31
     211: lshl
     212: ladd
     213: ladd
     214: lstore        12
     216: aload_1
     217: iconst_4
     218: lload         12
     220: l2i
     221: iastore
     222: lload         12
     224: bipush        32
     226: lushr
     227: lstore        12
     229: lload         12
     231: l2i
     232: aload_1
     233: invokestatic  #114                // Method reduce32:(I[I)V
     236: return

  public static void reduce32(int, int[]);
    Code:
       0: iload_0
       1: ifeq          15
       4: ldc           #1                  // int -2147483647
       6: iload_0
       7: aload_1
       8: iconst_0
       9: invokestatic  #130                // Method org/bouncycastle/math/raw/Nat160.mulWordsAdd:(II[II)I
      12: ifne          32
      15: aload_1
      16: iconst_4
      17: iaload
      18: iconst_m1
      19: if_icmpne     40
      22: aload_1
      23: getstatic     #110                // Field P:[I
      26: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      29: ifeq          40
      32: iconst_5
      33: ldc           #1                  // int -2147483647
      35: aload_1
      36: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat.addWordTo:(II[I)I
      39: pop
      40: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #129                // Method org/bouncycastle/math/raw/Nat160.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat160.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #115                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #129                // Method org/bouncycastle/math/raw/Nat160.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat160.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #115                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #134                // Method org/bouncycastle/math/raw/Nat160.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #115                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat160.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          19
      11: iconst_5
      12: ldc           #1                  // int -2147483647
      14: aload_2
      15: invokestatic  #117                // Method org/bouncycastle/math/raw/Nat.subWordFrom:(II[I)I
      18: pop
      19: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        10
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #128                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          38
      13: getstatic     #112                // Field PExtInv:[I
      16: arraylength
      17: getstatic     #112                // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: ifeq          38
      27: bipush        10
      29: aload_2
      30: getstatic     #112                // Field PExtInv:[I
      33: arraylength
      34: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      37: pop
      38: return

  public static void twice(int[], int[]);
    Code:
       0: iconst_5
       1: aload_0
       2: iconst_0
       3: aload_1
       4: invokestatic  #122                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       7: istore_2
       8: iload_2
       9: ifne          29
      12: aload_1
      13: iconst_4
      14: iaload
      15: iconst_m1
      16: if_icmpne     37
      19: aload_1
      20: getstatic     #110                // Field P:[I
      23: invokestatic  #135                // Method org/bouncycastle/math/raw/Nat160.gte:([I[I)Z
      26: ifeq          37
      29: iconst_5
      30: ldc           #1                  // int -2147483647
      32: aload_1
      33: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat.addWordTo:(II[I)I
      36: pop
      37: return

  static {};
    Code:
       0: iconst_5
       1: newarray       int
       3: dup
       4: iconst_0
       5: ldc           #4                  // int 2147483647
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_m1
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_m1
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_m1
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_m1
      23: iastore
      24: putstatic     #110                // Field P:[I
      27: bipush        10
      29: newarray       int
      31: dup
      32: iconst_0
      33: iconst_1
      34: iastore
      35: dup
      36: iconst_1
      37: ldc           #3                  // int 1073741825
      39: iastore
      40: dup
      41: iconst_2
      42: iconst_0
      43: iastore
      44: dup
      45: iconst_3
      46: iconst_0
      47: iastore
      48: dup
      49: iconst_4
      50: iconst_0
      51: iastore
      52: dup
      53: iconst_5
      54: bipush        -2
      56: iastore
      57: dup
      58: bipush        6
      60: bipush        -2
      62: iastore
      63: dup
      64: bipush        7
      66: iconst_m1
      67: iastore
      68: dup
      69: bipush        8
      71: iconst_m1
      72: iastore
      73: dup
      74: bipush        9
      76: iconst_m1
      77: iastore
      78: putstatic     #111                // Field PExt:[I
      81: bipush        7
      83: newarray       int
      85: dup
      86: iconst_0
      87: iconst_m1
      88: iastore
      89: dup
      90: iconst_1
      91: ldc           #2                  // int -1073741826
      93: iastore
      94: dup
      95: iconst_2
      96: iconst_m1
      97: iastore
      98: dup
      99: iconst_3
     100: iconst_m1
     101: iastore
     102: dup
     103: iconst_4
     104: iconst_m1
     105: iastore
     106: dup
     107: iconst_5
     108: iconst_1
     109: iastore
     110: dup
     111: bipush        6
     113: iconst_1
     114: iastore
     115: putstatic     #112                // Field PExtInv:[I
     118: return
}
