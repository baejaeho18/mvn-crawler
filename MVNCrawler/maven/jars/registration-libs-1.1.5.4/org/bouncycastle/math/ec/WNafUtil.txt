public abstract class org.bouncycastle.math.ec.WNafUtil {
  public static final java.lang.String PRECOMP_NAME;

  private static final int[] DEFAULT_WINDOW_SIZE_CUTOFFS;

  private static final int MAX_WIDTH;

  private static final byte[] EMPTY_BYTES;

  private static final int[] EMPTY_INTS;

  private static final org.bouncycastle.math.ec.ECPoint[] EMPTY_POINTS;

  public org.bouncycastle.math.ec.WNafUtil();
    Code:
       0: aload_0
       1: invokespecial #165                // Method java/lang/Object."<init>":()V
       4: return

  public static void configureBasepoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: astore_1
       5: aconst_null
       6: aload_1
       7: if_acmpne     11
      10: return
      11: aload_1
      12: invokevirtual #177                // Method org/bouncycastle/math/ec/ECCurve.getOrder:()Ljava/math/BigInteger;
      15: astore_2
      16: aconst_null
      17: aload_2
      18: if_acmpne     30
      21: aload_1
      22: invokevirtual #176                // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      25: iconst_1
      26: iadd
      27: goto          34
      30: aload_2
      31: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      34: istore_3
      35: bipush        16
      37: iload_3
      38: invokestatic  #181                // Method getWindowSize:(I)I
      41: iconst_3
      42: iadd
      43: invokestatic  #164                // Method java/lang/Math.min:(II)I
      46: istore        4
      48: aload_1
      49: aload_0
      50: ldc           #5                  // String bc_wnaf
      52: new           #89                 // class org/bouncycastle/math/ec/WNafUtil$1
      55: dup
      56: iload         4
      58: invokespecial #190                // Method org/bouncycastle/math/ec/WNafUtil$1."<init>":(I)V
      61: invokevirtual #179                // Method org/bouncycastle/math/ec/ECCurve.precompute:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompCallback;)Lorg/bouncycastle/math/ec/PreCompInfo;
      64: pop
      65: return

  public static int[] generateCompactNaf(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
       4: bipush        16
       6: iushr
       7: ifeq          20
      10: new           #79                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #2                  // String \'k\' must have bitlength < 2^16
      16: invokespecial #162                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #170                // Method java/math/BigInteger.signum:()I
      24: ifne          31
      27: getstatic     #160                // Field EMPTY_INTS:[I
      30: areturn
      31: aload_0
      32: iconst_1
      33: invokevirtual #172                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      36: aload_0
      37: invokevirtual #174                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      40: astore_1
      41: aload_1
      42: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      45: istore_2
      46: iload_2
      47: iconst_1
      48: ishr
      49: newarray       int
      51: astore_3
      52: aload_1
      53: aload_0
      54: invokevirtual #175                // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      57: astore        4
      59: iload_2
      60: iconst_1
      61: isub
      62: istore        5
      64: iconst_0
      65: istore        6
      67: iconst_0
      68: istore        7
      70: iconst_1
      71: istore        8
      73: iload         8
      75: iload         5
      77: if_icmpge     139
      80: aload         4
      82: iload         8
      84: invokevirtual #171                // Method java/math/BigInteger.testBit:(I)Z
      87: ifne          96
      90: iinc          7, 1
      93: goto          133
      96: aload_0
      97: iload         8
      99: invokevirtual #171                // Method java/math/BigInteger.testBit:(I)Z
     102: ifeq          109
     105: iconst_m1
     106: goto          110
     109: iconst_1
     110: istore        9
     112: aload_3
     113: iload         6
     115: iinc          6, 1
     118: iload         9
     120: bipush        16
     122: ishl
     123: iload         7
     125: ior
     126: iastore
     127: iconst_1
     128: istore        7
     130: iinc          8, 1
     133: iinc          8, 1
     136: goto          73
     139: aload_3
     140: iload         6
     142: iinc          6, 1
     145: ldc           #1                  // int 65536
     147: iload         7
     149: ior
     150: iastore
     151: aload_3
     152: arraylength
     153: iload         6
     155: if_icmple     165
     158: aload_3
     159: iload         6
     161: invokestatic  #184                // Method trim:([II)[I
     164: astore_3
     165: aload_3
     166: areturn

  public static int[] generateCompactWindowNaf(int, java.math.BigInteger);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpne     10
       5: aload_1
       6: invokestatic  #186                // Method generateCompactNaf:(Ljava/math/BigInteger;)[I
       9: areturn
      10: iload_0
      11: iconst_2
      12: if_icmplt     21
      15: iload_0
      16: bipush        16
      18: if_icmple     31
      21: new           #79                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #3                  // String \'width\' must be in the range [2, 16]
      27: invokespecial #162                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      35: bipush        16
      37: iushr
      38: ifeq          51
      41: new           #79                 // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #2                  // String \'k\' must have bitlength < 2^16
      47: invokespecial #162                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_1
      52: invokevirtual #170                // Method java/math/BigInteger.signum:()I
      55: ifne          62
      58: getstatic     #160                // Field EMPTY_INTS:[I
      61: areturn
      62: aload_1
      63: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      66: iload_0
      67: idiv
      68: iconst_1
      69: iadd
      70: newarray       int
      72: astore_2
      73: iconst_1
      74: iload_0
      75: ishl
      76: istore_3
      77: iload_3
      78: iconst_1
      79: isub
      80: istore        4
      82: iload_3
      83: iconst_1
      84: iushr
      85: istore        5
      87: iconst_0
      88: istore        6
      90: iconst_0
      91: istore        7
      93: iconst_0
      94: istore        8
      96: iload         8
      98: aload_1
      99: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
     102: if_icmpgt     209
     105: aload_1
     106: iload         8
     108: invokevirtual #171                // Method java/math/BigInteger.testBit:(I)Z
     111: iload         6
     113: if_icmpne     122
     116: iinc          8, 1
     119: goto          96
     122: aload_1
     123: iload         8
     125: invokevirtual #173                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     128: astore_1
     129: aload_1
     130: invokevirtual #169                // Method java/math/BigInteger.intValue:()I
     133: iload         4
     135: iand
     136: istore        9
     138: iload         6
     140: ifeq          146
     143: iinc          9, 1
     146: iload         9
     148: iload         5
     150: iand
     151: ifeq          158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: istore        6
     161: iload         6
     163: ifeq          172
     166: iload         9
     168: iload_3
     169: isub
     170: istore        9
     172: iload         7
     174: ifle          184
     177: iload         8
     179: iconst_1
     180: isub
     181: goto          186
     184: iload         8
     186: istore        10
     188: aload_2
     189: iload         7
     191: iinc          7, 1
     194: iload         9
     196: bipush        16
     198: ishl
     199: iload         10
     201: ior
     202: iastore
     203: iload_0
     204: istore        8
     206: goto          96
     209: aload_2
     210: arraylength
     211: iload         7
     213: if_icmple     223
     216: aload_2
     217: iload         7
     219: invokestatic  #184                // Method trim:([II)[I
     222: astore_2
     223: aload_2
     224: areturn

  public static byte[] generateJSF(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
       4: aload_1
       5: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
       8: invokestatic  #163                // Method java/lang/Math.max:(II)I
      11: iconst_1
      12: iadd
      13: istore_2
      14: iload_2
      15: newarray       byte
      17: astore_3
      18: aload_0
      19: astore        4
      21: aload_1
      22: astore        5
      24: iconst_0
      25: istore        6
      27: iconst_0
      28: istore        7
      30: iconst_0
      31: istore        8
      33: iconst_0
      34: istore        9
      36: iload         7
      38: iload         8
      40: ior
      41: ifne          64
      44: aload         4
      46: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      49: iload         9
      51: if_icmpgt     64
      54: aload         5
      56: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      59: iload         9
      61: if_icmple     266
      64: aload         4
      66: invokevirtual #169                // Method java/math/BigInteger.intValue:()I
      69: iload         9
      71: iushr
      72: iload         7
      74: iadd
      75: bipush        7
      77: iand
      78: istore        10
      80: aload         5
      82: invokevirtual #169                // Method java/math/BigInteger.intValue:()I
      85: iload         9
      87: iushr
      88: iload         8
      90: iadd
      91: bipush        7
      93: iand
      94: istore        11
      96: iload         10
      98: iconst_1
      99: iand
     100: istore        12
     102: iload         12
     104: ifeq          138
     107: iload         12
     109: iload         10
     111: iconst_2
     112: iand
     113: isub
     114: istore        12
     116: iload         10
     118: iload         12
     120: iadd
     121: iconst_4
     122: if_icmpne     138
     125: iload         11
     127: iconst_3
     128: iand
     129: iconst_2
     130: if_icmpne     138
     133: iload         12
     135: ineg
     136: istore        12
     138: iload         11
     140: iconst_1
     141: iand
     142: istore        13
     144: iload         13
     146: ifeq          180
     149: iload         13
     151: iload         11
     153: iconst_2
     154: iand
     155: isub
     156: istore        13
     158: iload         11
     160: iload         13
     162: iadd
     163: iconst_4
     164: if_icmpne     180
     167: iload         10
     169: iconst_3
     170: iand
     171: iconst_2
     172: if_icmpne     180
     175: iload         13
     177: ineg
     178: istore        13
     180: iload         7
     182: iconst_1
     183: ishl
     184: iconst_1
     185: iload         12
     187: iadd
     188: if_icmpne     197
     191: iload         7
     193: iconst_1
     194: ixor
     195: istore        7
     197: iload         8
     199: iconst_1
     200: ishl
     201: iconst_1
     202: iload         13
     204: iadd
     205: if_icmpne     214
     208: iload         8
     210: iconst_1
     211: ixor
     212: istore        8
     214: iinc          9, 1
     217: iload         9
     219: bipush        30
     221: if_icmpne     245
     224: iconst_0
     225: istore        9
     227: aload         4
     229: bipush        30
     231: invokevirtual #173                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     234: astore        4
     236: aload         5
     238: bipush        30
     240: invokevirtual #173                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     243: astore        5
     245: aload_3
     246: iload         6
     248: iinc          6, 1
     251: iload         12
     253: iconst_4
     254: ishl
     255: iload         13
     257: bipush        15
     259: iand
     260: ior
     261: i2b
     262: bastore
     263: goto          36
     266: aload_3
     267: arraylength
     268: iload         6
     270: if_icmple     280
     273: aload_3
     274: iload         6
     276: invokestatic  #183                // Method trim:([BI)[B
     279: astore_3
     280: aload_3
     281: areturn

  public static byte[] generateNaf(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #170                // Method java/math/BigInteger.signum:()I
       4: ifne          11
       7: getstatic     #158                // Field EMPTY_BYTES:[B
      10: areturn
      11: aload_0
      12: iconst_1
      13: invokevirtual #172                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      16: aload_0
      17: invokevirtual #174                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      20: astore_1
      21: aload_1
      22: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      25: iconst_1
      26: isub
      27: istore_2
      28: iload_2
      29: newarray       byte
      31: astore_3
      32: aload_1
      33: aload_0
      34: invokevirtual #175                // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      37: astore        4
      39: iconst_1
      40: istore        5
      42: iload         5
      44: iload_2
      45: if_icmpge     88
      48: aload         4
      50: iload         5
      52: invokevirtual #171                // Method java/math/BigInteger.testBit:(I)Z
      55: ifeq          82
      58: aload_3
      59: iload         5
      61: iconst_1
      62: isub
      63: aload_0
      64: iload         5
      66: invokevirtual #171                // Method java/math/BigInteger.testBit:(I)Z
      69: ifeq          76
      72: iconst_m1
      73: goto          77
      76: iconst_1
      77: i2b
      78: bastore
      79: iinc          5, 1
      82: iinc          5, 1
      85: goto          42
      88: aload_3
      89: iload_2
      90: iconst_1
      91: isub
      92: iconst_1
      93: bastore
      94: aload_3
      95: areturn

  public static byte[] generateWindowNaf(int, java.math.BigInteger);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpne     10
       5: aload_1
       6: invokestatic  #185                // Method generateNaf:(Ljava/math/BigInteger;)[B
       9: areturn
      10: iload_0
      11: iconst_2
      12: if_icmplt     21
      15: iload_0
      16: bipush        8
      18: if_icmple     31
      21: new           #79                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #4                  // String \'width\' must be in the range [2, 8]
      27: invokespecial #162                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: invokevirtual #170                // Method java/math/BigInteger.signum:()I
      35: ifne          42
      38: getstatic     #158                // Field EMPTY_BYTES:[B
      41: areturn
      42: aload_1
      43: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      46: iconst_1
      47: iadd
      48: newarray       byte
      50: astore_2
      51: iconst_1
      52: iload_0
      53: ishl
      54: istore_3
      55: iload_3
      56: iconst_1
      57: isub
      58: istore        4
      60: iload_3
      61: iconst_1
      62: iushr
      63: istore        5
      65: iconst_0
      66: istore        6
      68: iconst_0
      69: istore        7
      71: iconst_0
      72: istore        8
      74: iload         8
      76: aload_1
      77: invokevirtual #168                // Method java/math/BigInteger.bitLength:()I
      80: if_icmpgt     185
      83: aload_1
      84: iload         8
      86: invokevirtual #171                // Method java/math/BigInteger.testBit:(I)Z
      89: iload         6
      91: if_icmpne     100
      94: iinc          8, 1
      97: goto          74
     100: aload_1
     101: iload         8
     103: invokevirtual #173                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     106: astore_1
     107: aload_1
     108: invokevirtual #169                // Method java/math/BigInteger.intValue:()I
     111: iload         4
     113: iand
     114: istore        9
     116: iload         6
     118: ifeq          124
     121: iinc          9, 1
     124: iload         9
     126: iload         5
     128: iand
     129: ifeq          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: istore        6
     139: iload         6
     141: ifeq          150
     144: iload         9
     146: iload_3
     147: isub
     148: istore        9
     150: iload         7
     152: iload         7
     154: ifle          164
     157: iload         8
     159: iconst_1
     160: isub
     161: goto          166
     164: iload         8
     166: iadd
     167: istore        7
     169: aload_2
     170: iload         7
     172: iinc          7, 1
     175: iload         9
     177: i2b
     178: bastore
     179: iload_0
     180: istore        8
     182: goto          74
     185: aload_2
     186: arraylength
     187: iload         7
     189: if_icmple     199
     192: aload_2
     193: iload         7
     195: invokestatic  #183                // Method trim:([BI)[B
     198: astore_2
     199: aload_2
     200: areturn

  public static int getNafWeight(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #170                // Method java/math/BigInteger.signum:()I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: iconst_1
      11: invokevirtual #172                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      14: aload_0
      15: invokevirtual #174                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      18: astore_1
      19: aload_1
      20: aload_0
      21: invokevirtual #175                // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      24: astore_2
      25: aload_2
      26: invokevirtual #167                // Method java/math/BigInteger.bitCount:()I
      29: ireturn

  public static org.bouncycastle.math.ec.WNafPreCompInfo getWNafPreCompInfo(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: aload_0
       5: ldc           #5                  // String bc_wnaf
       7: invokevirtual #178                // Method org/bouncycastle/math/ec/ECCurve.getPreCompInfo:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;)Lorg/bouncycastle/math/ec/PreCompInfo;
      10: invokestatic  #189                // Method getWNafPreCompInfo:(Lorg/bouncycastle/math/ec/PreCompInfo;)Lorg/bouncycastle/math/ec/WNafPreCompInfo;
      13: areturn

  public static org.bouncycastle.math.ec.WNafPreCompInfo getWNafPreCompInfo(org.bouncycastle.math.ec.PreCompInfo);
    Code:
       0: aload_0
       1: instanceof    #87                 // class org/bouncycastle/math/ec/WNafPreCompInfo
       4: ifeq          14
       7: aload_0
       8: checkcast     #87                 // class org/bouncycastle/math/ec/WNafPreCompInfo
      11: goto          15
      14: aconst_null
      15: areturn

  public static int getWindowSize(int);
    Code:
       0: iload_0
       1: getstatic     #159                // Field DEFAULT_WINDOW_SIZE_CUTOFFS:[I
       4: bipush        16
       6: invokestatic  #182                // Method getWindowSize:(I[II)I
       9: ireturn

  public static int getWindowSize(int, int);
    Code:
       0: iload_0
       1: getstatic     #159                // Field DEFAULT_WINDOW_SIZE_CUTOFFS:[I
       4: iload_1
       5: invokestatic  #182                // Method getWindowSize:(I[II)I
       8: ireturn

  public static int getWindowSize(int, int[]);
    Code:
       0: iload_0
       1: aload_1
       2: bipush        16
       4: invokestatic  #182                // Method getWindowSize:(I[II)I
       7: ireturn

  public static int getWindowSize(int, int[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_1
       4: arraylength
       5: if_icmpge     24
       8: iload_0
       9: aload_1
      10: iload_3
      11: iaload
      12: if_icmpge     18
      15: goto          24
      18: iinc          3, 1
      21: goto          2
      24: iconst_2
      25: iload_2
      26: iload_3
      27: iconst_2
      28: iadd
      29: invokestatic  #164                // Method java/lang/Math.min:(II)I
      32: invokestatic  #163                // Method java/lang/Math.max:(II)I
      35: ireturn

  public static org.bouncycastle.math.ec.ECPoint mapPointWithPrecomp(org.bouncycastle.math.ec.ECPoint, int, boolean, org.bouncycastle.math.ec.ECPointMap);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: astore        4
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokestatic  #188                // Method precompute:(Lorg/bouncycastle/math/ec/ECPoint;IZ)Lorg/bouncycastle/math/ec/WNafPreCompInfo;
      12: astore        5
      14: aload_3
      15: aload_0
      16: invokeinterface #194,  2          // InterfaceMethod org/bouncycastle/math/ec/ECPointMap.map:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      21: astore        6
      23: aload         4
      25: aload         6
      27: ldc           #5                  // String bc_wnaf
      29: new           #90                 // class org/bouncycastle/math/ec/WNafUtil$2
      32: dup
      33: aload         5
      35: aload_3
      36: iload_2
      37: invokespecial #191                // Method org/bouncycastle/math/ec/WNafUtil$2."<init>":(Lorg/bouncycastle/math/ec/WNafPreCompInfo;Lorg/bouncycastle/math/ec/ECPointMap;Z)V
      40: invokevirtual #179                // Method org/bouncycastle/math/ec/ECCurve.precompute:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompCallback;)Lorg/bouncycastle/math/ec/PreCompInfo;
      43: pop
      44: aload         6
      46: areturn

  public static org.bouncycastle.math.ec.WNafPreCompInfo precompute(org.bouncycastle.math.ec.ECPoint, int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: astore_3
       5: aload_3
       6: aload_0
       7: ldc           #5                  // String bc_wnaf
       9: new           #91                 // class org/bouncycastle/math/ec/WNafUtil$3
      12: dup
      13: iload_1
      14: iload_2
      15: aload_0
      16: aload_3
      17: invokespecial #192                // Method org/bouncycastle/math/ec/WNafUtil$3."<init>":(IZLorg/bouncycastle/math/ec/ECPoint;Lorg/bouncycastle/math/ec/ECCurve;)V
      20: invokevirtual #179                // Method org/bouncycastle/math/ec/ECCurve.precompute:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompCallback;)Lorg/bouncycastle/math/ec/PreCompInfo;
      23: checkcast     #87                 // class org/bouncycastle/math/ec/WNafPreCompInfo
      26: areturn

  public static org.bouncycastle.math.ec.WNafPreCompInfo precomputeWithPointMap(org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECPointMap, org.bouncycastle.math.ec.WNafPreCompInfo, boolean);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: astore        4
       6: aload         4
       8: aload_0
       9: ldc           #5                  // String bc_wnaf
      11: new           #92                 // class org/bouncycastle/math/ec/WNafUtil$4
      14: dup
      15: aload_2
      16: iload_3
      17: aload_1
      18: invokespecial #193                // Method org/bouncycastle/math/ec/WNafUtil$4."<init>":(Lorg/bouncycastle/math/ec/WNafPreCompInfo;ZLorg/bouncycastle/math/ec/ECPointMap;)V
      21: invokevirtual #179                // Method org/bouncycastle/math/ec/ECCurve.precompute:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompCallback;)Lorg/bouncycastle/math/ec/PreCompInfo;
      24: checkcast     #87                 // class org/bouncycastle/math/ec/WNafPreCompInfo
      27: areturn

  private static byte[] trim(byte[], int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: iconst_0
       6: aload_2
       7: iconst_0
       8: aload_2
       9: arraylength
      10: invokestatic  #166                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      13: aload_2
      14: areturn

  private static int[] trim(int[], int);
    Code:
       0: iload_1
       1: newarray       int
       3: astore_2
       4: aload_0
       5: iconst_0
       6: aload_2
       7: iconst_0
       8: aload_2
       9: arraylength
      10: invokestatic  #166                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      13: aload_2
      14: areturn

  private static org.bouncycastle.math.ec.ECPoint[] resizeTable(org.bouncycastle.math.ec.ECPoint[], int);
    Code:
       0: iload_1
       1: anewarray     #85                 // class org/bouncycastle/math/ec/ECPoint
       4: astore_2
       5: aload_0
       6: iconst_0
       7: aload_2
       8: iconst_0
       9: aload_0
      10: arraylength
      11: invokestatic  #166                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_2
      15: areturn

  static org.bouncycastle.math.ec.ECPoint[] access$000();
    Code:
       0: getstatic     #161                // Field EMPTY_POINTS:[Lorg/bouncycastle/math/ec/ECPoint;
       3: areturn

  static org.bouncycastle.math.ec.ECPoint[] access$100(org.bouncycastle.math.ec.ECPoint[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #187                // Method resizeTable:([Lorg/bouncycastle/math/ec/ECPoint;I)[Lorg/bouncycastle/math/ec/ECPoint;
       5: areturn

  static {};
    Code:
       0: bipush        6
       2: newarray       int
       4: dup
       5: iconst_0
       6: bipush        13
       8: iastore
       9: dup
      10: iconst_1
      11: bipush        41
      13: iastore
      14: dup
      15: iconst_2
      16: bipush        121
      18: iastore
      19: dup
      20: iconst_3
      21: sipush        337
      24: iastore
      25: dup
      26: iconst_4
      27: sipush        897
      30: iastore
      31: dup
      32: iconst_5
      33: sipush        2305
      36: iastore
      37: putstatic     #159                // Field DEFAULT_WINDOW_SIZE_CUTOFFS:[I
      40: iconst_0
      41: newarray       byte
      43: putstatic     #158                // Field EMPTY_BYTES:[B
      46: iconst_0
      47: newarray       int
      49: putstatic     #160                // Field EMPTY_INTS:[I
      52: iconst_0
      53: anewarray     #85                 // class org/bouncycastle/math/ec/ECPoint
      56: putstatic     #161                // Field EMPTY_POINTS:[Lorg/bouncycastle/math/ec/ECPoint;
      59: return
}
