class org.bouncycastle.math.ec.SimpleBigDecimal {
  private static final long serialVersionUID;

  private final java.math.BigInteger bigInt;

  private final int scale;

  public static org.bouncycastle.math.ec.SimpleBigDecimal getInstance(java.math.BigInteger, int);
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
       9: iload_1
      10: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      13: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal(java.math.BigInteger, int);
    Code:
       0: aload_0
       1: invokespecial #113                // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifge          18
       8: new           #52                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String scale may not be negative
      14: invokespecial #112                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #111                // Field bigInt:Ljava/math/BigInteger;
      23: aload_0
      24: iload_2
      25: putfield      #110                // Field scale:I
      28: return

  private void checkScale(org.bouncycastle.math.ec.SimpleBigDecimal);
    Code:
       0: aload_0
       1: getfield      #110                // Field scale:I
       4: aload_1
       5: getfield      #110                // Field scale:I
       8: if_icmpeq     21
      11: new           #52                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #2                  // String Only SimpleBigDecimal of same scale allowed in arithmetic operations
      17: invokespecial #112                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: return

  public org.bouncycastle.math.ec.SimpleBigDecimal adjustScale(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #52                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String scale may not be negative
      10: invokespecial #112                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: aload_0
      16: getfield      #110                // Field scale:I
      19: if_icmpne     24
      22: aload_0
      23: areturn
      24: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
      27: dup
      28: aload_0
      29: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      32: iload_1
      33: aload_0
      34: getfield      #110                // Field scale:I
      37: isub
      38: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      41: iload_1
      42: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      45: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal add(org.bouncycastle.math.ec.SimpleBigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #139                // Method checkScale:(Lorg/bouncycastle/math/ec/SimpleBigDecimal;)V
       5: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       8: dup
       9: aload_0
      10: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      13: aload_1
      14: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      17: invokevirtual #131                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      20: aload_0
      21: getfield      #110                // Field scale:I
      24: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      27: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal add(java.math.BigInteger);
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       8: aload_1
       9: aload_0
      10: getfield      #110                // Field scale:I
      13: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      16: invokevirtual #131                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: aload_0
      20: getfield      #110                // Field scale:I
      23: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      26: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal negate();
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       8: invokevirtual #127                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      11: aload_0
      12: getfield      #110                // Field scale:I
      15: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      18: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal subtract(org.bouncycastle.math.ec.SimpleBigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method negate:()Lorg/bouncycastle/math/ec/SimpleBigDecimal;
       5: invokevirtual #140                // Method add:(Lorg/bouncycastle/math/ec/SimpleBigDecimal;)Lorg/bouncycastle/math/ec/SimpleBigDecimal;
       8: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal subtract(java.math.BigInteger);
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       8: aload_1
       9: aload_0
      10: getfield      #110                // Field scale:I
      13: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      16: invokevirtual #134                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: aload_0
      20: getfield      #110                // Field scale:I
      23: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      26: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal multiply(org.bouncycastle.math.ec.SimpleBigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #139                // Method checkScale:(Lorg/bouncycastle/math/ec/SimpleBigDecimal;)V
       5: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       8: dup
       9: aload_0
      10: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      13: aload_1
      14: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      17: invokevirtual #133                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      20: aload_0
      21: getfield      #110                // Field scale:I
      24: aload_0
      25: getfield      #110                // Field scale:I
      28: iadd
      29: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      32: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal multiply(java.math.BigInteger);
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       8: aload_1
       9: invokevirtual #133                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #110                // Field scale:I
      16: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      19: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal divide(org.bouncycastle.math.ec.SimpleBigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #139                // Method checkScale:(Lorg/bouncycastle/math/ec/SimpleBigDecimal;)V
       5: aload_0
       6: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       9: aload_0
      10: getfield      #110                // Field scale:I
      13: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      16: astore_2
      17: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
      20: dup
      21: aload_2
      22: aload_1
      23: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      26: invokevirtual #132                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      29: aload_0
      30: getfield      #110                // Field scale:I
      33: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      36: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal divide(java.math.BigInteger);
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       8: aload_1
       9: invokevirtual #132                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #110                // Field scale:I
      16: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      19: areturn

  public org.bouncycastle.math.ec.SimpleBigDecimal shiftLeft(int);
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: aload_0
       5: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       8: iload_1
       9: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      12: aload_0
      13: getfield      #110                // Field scale:I
      16: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      19: areturn

  public int compareTo(org.bouncycastle.math.ec.SimpleBigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #139                // Method checkScale:(Lorg/bouncycastle/math/ec/SimpleBigDecimal;)V
       5: aload_0
       6: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       9: aload_1
      10: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      13: invokevirtual #130                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      16: ireturn

  public int compareTo(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       4: aload_1
       5: aload_0
       6: getfield      #110                // Field scale:I
       9: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      12: invokevirtual #130                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      15: ireturn

  public java.math.BigInteger floor();
    Code:
       0: aload_0
       1: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       4: aload_0
       5: getfield      #110                // Field scale:I
       8: invokevirtual #129                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      11: areturn

  public java.math.BigInteger round();
    Code:
       0: new           #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
       3: dup
       4: getstatic     #108                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
       7: iconst_1
       8: invokespecial #136                // Method "<init>":(Ljava/math/BigInteger;I)V
      11: astore_1
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #110                // Field scale:I
      18: invokevirtual #138                // Method adjustScale:(I)Lorg/bouncycastle/math/ec/SimpleBigDecimal;
      21: invokevirtual #140                // Method add:(Lorg/bouncycastle/math/ec/SimpleBigDecimal;)Lorg/bouncycastle/math/ec/SimpleBigDecimal;
      24: invokevirtual #135                // Method floor:()Ljava/math/BigInteger;
      27: areturn

  public int intValue();
    Code:
       0: aload_0
       1: invokevirtual #135                // Method floor:()Ljava/math/BigInteger;
       4: invokevirtual #121                // Method java/math/BigInteger.intValue:()I
       7: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: invokevirtual #135                // Method floor:()Ljava/math/BigInteger;
       4: invokevirtual #123                // Method java/math/BigInteger.longValue:()J
       7: lreturn

  public int getScale();
    Code:
       0: aload_0
       1: getfield      #110                // Field scale:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #110                // Field scale:I
       4: ifne          15
       7: aload_0
       8: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      11: invokevirtual #125                // Method java/math/BigInteger.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #135                // Method floor:()Ljava/math/BigInteger;
      19: astore_1
      20: aload_0
      21: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      24: aload_1
      25: aload_0
      26: getfield      #110                // Field scale:I
      29: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      32: invokevirtual #134                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      35: astore_2
      36: aload_0
      37: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      40: invokevirtual #122                // Method java/math/BigInteger.signum:()I
      43: iconst_m1
      44: if_icmpne     62
      47: getstatic     #108                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      50: aload_0
      51: getfield      #110                // Field scale:I
      54: invokevirtual #128                // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      57: aload_2
      58: invokevirtual #134                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      61: astore_2
      62: aload_1
      63: invokevirtual #122                // Method java/math/BigInteger.signum:()I
      66: iconst_m1
      67: if_icmpne     88
      70: aload_2
      71: getstatic     #109                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      74: invokevirtual #124                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      77: ifne          88
      80: aload_1
      81: getstatic     #108                // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      84: invokevirtual #131                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      87: astore_1
      88: aload_1
      89: invokevirtual #125                // Method java/math/BigInteger.toString:()Ljava/lang/String;
      92: astore_3
      93: aload_0
      94: getfield      #110                // Field scale:I
      97: newarray       char
      99: astore        4
     101: aload_2
     102: iconst_2
     103: invokevirtual #126                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
     106: astore        5
     108: aload         5
     110: invokevirtual #114                // Method java/lang/String.length:()I
     113: istore        6
     115: aload_0
     116: getfield      #110                // Field scale:I
     119: iload         6
     121: isub
     122: istore        7
     124: iconst_0
     125: istore        8
     127: iload         8
     129: iload         7
     131: if_icmpge     147
     134: aload         4
     136: iload         8
     138: bipush        48
     140: castore
     141: iinc          8, 1
     144: goto          127
     147: iconst_0
     148: istore        8
     150: iload         8
     152: iload         6
     154: if_icmpge     178
     157: aload         4
     159: iload         7
     161: iload         8
     163: iadd
     164: aload         5
     166: iload         8
     168: invokevirtual #115                // Method java/lang/String.charAt:(I)C
     171: castore
     172: iinc          8, 1
     175: goto          150
     178: new           #54                 // class java/lang/String
     181: dup
     182: aload         4
     184: invokespecial #116                // Method java/lang/String."<init>":([C)V
     187: astore        8
     189: new           #55                 // class java/lang/StringBuffer
     192: dup
     193: aload_3
     194: invokespecial #118                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     197: astore        9
     199: aload         9
     201: ldc           #1                  // String .
     203: invokevirtual #119                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     206: pop
     207: aload         9
     209: aload         8
     211: invokevirtual #119                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     214: pop
     215: aload         9
     217: invokevirtual #117                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     220: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #58                 // class org/bouncycastle/math/ec/SimpleBigDecimal
      20: astore_2
      21: aload_0
      22: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      25: aload_2
      26: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
      29: invokevirtual #124                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      32: ifeq          50
      35: aload_0
      36: getfield      #110                // Field scale:I
      39: aload_2
      40: getfield      #110                // Field scale:I
      43: if_icmpne     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #111                // Field bigInt:Ljava/math/BigInteger;
       4: invokevirtual #120                // Method java/math/BigInteger.hashCode:()I
       7: aload_0
       8: getfield      #110                // Field scale:I
      11: ixor
      12: ireturn
}
