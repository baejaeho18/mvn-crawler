public class org.bouncycastle.math.ec.custom.sec.SecP256R1Field {
  private static final long M;

  static final int[] P;

  static final int[] PExt;

  private static final int P7;

  private static final int PExt15s1;

  public org.bouncycastle.math.ec.custom.sec.SecP256R1Field();
    Code:
       0: aload_0
       1: invokespecial #126                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #152                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          29
      11: aload_2
      12: bipush        7
      14: iaload
      15: iconst_m1
      16: if_icmpne     33
      19: aload_2
      20: getstatic     #123                // Field P:[I
      23: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      26: ifeq          33
      29: aload_2
      30: invokestatic  #130                // Method addPInvTo:([I)V
      33: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #145                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          36
      13: aload_2
      14: bipush        15
      16: iaload
      17: iconst_1
      18: iushr
      19: ldc           #1                  // int 2147483647
      21: if_icmplt     46
      24: bipush        16
      26: aload_2
      27: getstatic     #124                // Field PExt:[I
      30: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      33: ifeq          46
      36: bipush        16
      38: getstatic     #124                // Field PExt:[I
      41: aload_2
      42: invokestatic  #143                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      45: pop
      46: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: aload_1
       4: invokestatic  #141                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          30
      12: aload_1
      13: bipush        7
      15: iaload
      16: iconst_m1
      17: if_icmpne     34
      20: aload_1
      21: getstatic     #123                // Field P:[I
      24: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      27: ifeq          34
      30: aload_1
      31: invokestatic  #130                // Method addPInvTo:([I)V
      34: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #156                // Method org/bouncycastle/math/raw/Nat256.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: bipush        7
       8: iaload
       9: iconst_m1
      10: if_icmpne     31
      13: aload_1
      14: getstatic     #123                // Field P:[I
      17: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      20: ifeq          31
      23: getstatic     #123                // Field P:[I
      26: aload_1
      27: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat256.subFrom:([I[I)I
      30: pop
      31: aload_1
      32: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        8
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #138                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #123                // Field P:[I
      24: aload_1
      25: invokestatic  #152                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
      28: istore_2
      29: bipush        8
      31: aload_1
      32: iload_2
      33: invokestatic  #137                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void inv(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #129                // Method isZero:([I)I
       5: if_icmpeq     18
       8: new           #79                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #2                  // String \'x\' cannot be 0
      14: invokespecial #125                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: astore_2
      20: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      23: astore_3
      24: aload_2
      25: aload_3
      26: invokestatic  #134                // Method square:([I[I)V
      29: aload_3
      30: aload_2
      31: aload_3
      32: invokestatic  #135                // Method multiply:([I[I[I)V
      35: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      38: astore        4
      40: aload_3
      41: iconst_2
      42: aload         4
      44: invokestatic  #132                // Method squareN:([II[I)V
      47: aload         4
      49: aload_3
      50: aload         4
      52: invokestatic  #135                // Method multiply:([I[I[I)V
      55: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      58: astore        5
      60: aload         4
      62: iconst_4
      63: aload         5
      65: invokestatic  #132                // Method squareN:([II[I)V
      68: aload         5
      70: aload         4
      72: aload         5
      74: invokestatic  #135                // Method multiply:([I[I[I)V
      77: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      80: astore        6
      82: aload         5
      84: bipush        8
      86: aload         6
      88: invokestatic  #132                // Method squareN:([II[I)V
      91: aload         6
      93: aload         5
      95: aload         6
      97: invokestatic  #135                // Method multiply:([I[I[I)V
     100: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat256.create:()[I
     103: astore        7
     105: aload         6
     107: bipush        16
     109: aload         7
     111: invokestatic  #132                // Method squareN:([II[I)V
     114: aload         7
     116: aload         6
     118: aload         7
     120: invokestatic  #135                // Method multiply:([I[I[I)V
     123: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat256.create:()[I
     126: astore        8
     128: aload         7
     130: bipush        32
     132: aload         8
     134: invokestatic  #132                // Method squareN:([II[I)V
     137: aload         8
     139: aload         7
     141: aload         8
     143: invokestatic  #135                // Method multiply:([I[I[I)V
     146: aload         8
     148: astore        9
     150: aload         8
     152: bipush        16
     154: aload         9
     156: invokestatic  #132                // Method squareN:([II[I)V
     159: aload         9
     161: aload         6
     163: aload         9
     165: invokestatic  #135                // Method multiply:([I[I[I)V
     168: aload         6
     170: astore        10
     172: aload         9
     174: bipush        8
     176: aload         10
     178: invokestatic  #132                // Method squareN:([II[I)V
     181: aload         10
     183: aload         5
     185: aload         10
     187: invokestatic  #135                // Method multiply:([I[I[I)V
     190: aload         5
     192: astore        11
     194: aload         10
     196: iconst_4
     197: aload         11
     199: invokestatic  #132                // Method squareN:([II[I)V
     202: aload         11
     204: aload         4
     206: aload         11
     208: invokestatic  #135                // Method multiply:([I[I[I)V
     211: aload         4
     213: astore        12
     215: aload         11
     217: iconst_2
     218: aload         12
     220: invokestatic  #132                // Method squareN:([II[I)V
     223: aload         12
     225: aload_3
     226: aload         12
     228: invokestatic  #135                // Method multiply:([I[I[I)V
     231: aload         7
     233: astore        13
     235: aload         13
     237: bipush        32
     239: aload         13
     241: invokestatic  #132                // Method squareN:([II[I)V
     244: aload         13
     246: aload_2
     247: aload         13
     249: invokestatic  #135                // Method multiply:([I[I[I)V
     252: aload         13
     254: sipush        190
     257: aload         13
     259: invokestatic  #132                // Method squareN:([II[I)V
     262: aload         13
     264: aload         12
     266: aload         13
     268: invokestatic  #135                // Method multiply:([I[I[I)V
     271: aload         13
     273: iconst_2
     274: aload         13
     276: invokestatic  #132                // Method squareN:([II[I)V
     279: aload_2
     280: aload         13
     282: aload_1
     283: invokestatic  #135                // Method multiply:([I[I[I)V
     286: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        8
       7: if_icmpge     22
      10: iload_1
      11: aload_0
      12: iload_2
      13: iaload
      14: ior
      15: istore_1
      16: iinc          2, 1
      19: goto          4
      22: iload_1
      23: iconst_1
      24: iushr
      25: iload_1
      26: iconst_1
      27: iand
      28: ior
      29: istore_1
      30: iload_1
      31: iconst_1
      32: isub
      33: bipush        31
      35: ishr
      36: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat256.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #133                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat256.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          34
      11: aload_2
      12: bipush        15
      14: iaload
      15: iconst_1
      16: iushr
      17: ldc           #1                  // int 2147483647
      19: if_icmplt     44
      22: bipush        16
      24: aload_2
      25: getstatic     #124                // Field PExt:[I
      28: invokestatic  #144                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      31: ifeq          44
      34: bipush        16
      36: getstatic     #124                // Field PExt:[I
      39: aload_2
      40: invokestatic  #143                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      43: pop
      44: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #129                // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #123                // Field P:[I
      11: getstatic     #123                // Field P:[I
      14: aload_1
      15: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #123                // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #127                // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: bipush        8
      16: invokestatic  #157                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      19: iconst_0
      20: bipush        8
      22: aload_1
      23: getstatic     #123                // Field P:[I
      26: invokestatic  #142                // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      29: if_icmpeq     5
      32: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #129                // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: iaload
       4: i2l
       5: ldc2_w        #77                 // long 4294967295l
       8: land
       9: lstore_2
      10: aload_0
      11: bipush        9
      13: iaload
      14: i2l
      15: ldc2_w        #77                 // long 4294967295l
      18: land
      19: lstore        4
      21: aload_0
      22: bipush        10
      24: iaload
      25: i2l
      26: ldc2_w        #77                 // long 4294967295l
      29: land
      30: lstore        6
      32: aload_0
      33: bipush        11
      35: iaload
      36: i2l
      37: ldc2_w        #77                 // long 4294967295l
      40: land
      41: lstore        8
      43: aload_0
      44: bipush        12
      46: iaload
      47: i2l
      48: ldc2_w        #77                 // long 4294967295l
      51: land
      52: lstore        10
      54: aload_0
      55: bipush        13
      57: iaload
      58: i2l
      59: ldc2_w        #77                 // long 4294967295l
      62: land
      63: lstore        12
      65: aload_0
      66: bipush        14
      68: iaload
      69: i2l
      70: ldc2_w        #77                 // long 4294967295l
      73: land
      74: lstore        14
      76: aload_0
      77: bipush        15
      79: iaload
      80: i2l
      81: ldc2_w        #77                 // long 4294967295l
      84: land
      85: lstore        16
      87: lload_2
      88: ldc2_w        #75                 // long 6l
      91: lsub
      92: lstore_2
      93: lload_2
      94: lload         4
      96: ladd
      97: lstore        20
      99: lload         4
     101: lload         6
     103: ladd
     104: lstore        22
     106: lload         6
     108: lload         8
     110: ladd
     111: lload         16
     113: lsub
     114: lstore        24
     116: lload         8
     118: lload         10
     120: ladd
     121: lstore        26
     123: lload         10
     125: lload         12
     127: ladd
     128: lstore        28
     130: lload         12
     132: lload         14
     134: ladd
     135: lstore        30
     137: lload         14
     139: lload         16
     141: ladd
     142: lstore        32
     144: lload         30
     146: lload         20
     148: lsub
     149: lstore        34
     151: lconst_0
     152: lstore        36
     154: lload         36
     156: aload_0
     157: iconst_0
     158: iaload
     159: i2l
     160: ldc2_w        #77                 // long 4294967295l
     163: land
     164: lload         26
     166: lsub
     167: lload         34
     169: lsub
     170: ladd
     171: lstore        36
     173: aload_1
     174: iconst_0
     175: lload         36
     177: l2i
     178: iastore
     179: lload         36
     181: bipush        32
     183: lshr
     184: lstore        36
     186: lload         36
     188: aload_0
     189: iconst_1
     190: iaload
     191: i2l
     192: ldc2_w        #77                 // long 4294967295l
     195: land
     196: lload         22
     198: ladd
     199: lload         28
     201: lsub
     202: lload         32
     204: lsub
     205: ladd
     206: lstore        36
     208: aload_1
     209: iconst_1
     210: lload         36
     212: l2i
     213: iastore
     214: lload         36
     216: bipush        32
     218: lshr
     219: lstore        36
     221: lload         36
     223: aload_0
     224: iconst_2
     225: iaload
     226: i2l
     227: ldc2_w        #77                 // long 4294967295l
     230: land
     231: lload         24
     233: ladd
     234: lload         30
     236: lsub
     237: ladd
     238: lstore        36
     240: aload_1
     241: iconst_2
     242: lload         36
     244: l2i
     245: iastore
     246: lload         36
     248: bipush        32
     250: lshr
     251: lstore        36
     253: lload         36
     255: aload_0
     256: iconst_3
     257: iaload
     258: i2l
     259: ldc2_w        #77                 // long 4294967295l
     262: land
     263: lload         26
     265: iconst_1
     266: lshl
     267: ladd
     268: lload         34
     270: ladd
     271: lload         32
     273: lsub
     274: ladd
     275: lstore        36
     277: aload_1
     278: iconst_3
     279: lload         36
     281: l2i
     282: iastore
     283: lload         36
     285: bipush        32
     287: lshr
     288: lstore        36
     290: lload         36
     292: aload_0
     293: iconst_4
     294: iaload
     295: i2l
     296: ldc2_w        #77                 // long 4294967295l
     299: land
     300: lload         28
     302: iconst_1
     303: lshl
     304: ladd
     305: lload         14
     307: ladd
     308: lload         22
     310: lsub
     311: ladd
     312: lstore        36
     314: aload_1
     315: iconst_4
     316: lload         36
     318: l2i
     319: iastore
     320: lload         36
     322: bipush        32
     324: lshr
     325: lstore        36
     327: lload         36
     329: aload_0
     330: iconst_5
     331: iaload
     332: i2l
     333: ldc2_w        #77                 // long 4294967295l
     336: land
     337: lload         30
     339: iconst_1
     340: lshl
     341: ladd
     342: lload         24
     344: lsub
     345: ladd
     346: lstore        36
     348: aload_1
     349: iconst_5
     350: lload         36
     352: l2i
     353: iastore
     354: lload         36
     356: bipush        32
     358: lshr
     359: lstore        36
     361: lload         36
     363: aload_0
     364: bipush        6
     366: iaload
     367: i2l
     368: ldc2_w        #77                 // long 4294967295l
     371: land
     372: lload         32
     374: iconst_1
     375: lshl
     376: ladd
     377: lload         34
     379: ladd
     380: ladd
     381: lstore        36
     383: aload_1
     384: bipush        6
     386: lload         36
     388: l2i
     389: iastore
     390: lload         36
     392: bipush        32
     394: lshr
     395: lstore        36
     397: lload         36
     399: aload_0
     400: bipush        7
     402: iaload
     403: i2l
     404: ldc2_w        #77                 // long 4294967295l
     407: land
     408: lload         16
     410: iconst_1
     411: lshl
     412: ladd
     413: lload_2
     414: ladd
     415: lload         24
     417: lsub
     418: lload         28
     420: lsub
     421: ladd
     422: lstore        36
     424: aload_1
     425: bipush        7
     427: lload         36
     429: l2i
     430: iastore
     431: lload         36
     433: bipush        32
     435: lshr
     436: lstore        36
     438: lload         36
     440: ldc2_w        #75                 // long 6l
     443: ladd
     444: lstore        36
     446: lload         36
     448: l2i
     449: aload_1
     450: invokestatic  #128                // Method reduce32:(I[I)V
     453: return

  public static void reduce32(int, int[]);
    Code:
       0: lconst_0
       1: lstore_2
       2: iload_0
       3: ifeq          210
       6: iload_0
       7: i2l
       8: ldc2_w        #77                 // long 4294967295l
      11: land
      12: lstore        4
      14: lload_2
      15: aload_1
      16: iconst_0
      17: iaload
      18: i2l
      19: ldc2_w        #77                 // long 4294967295l
      22: land
      23: lload         4
      25: ladd
      26: ladd
      27: lstore_2
      28: aload_1
      29: iconst_0
      30: lload_2
      31: l2i
      32: iastore
      33: lload_2
      34: bipush        32
      36: lshr
      37: lstore_2
      38: lload_2
      39: lconst_0
      40: lcmp
      41: ifeq          86
      44: lload_2
      45: aload_1
      46: iconst_1
      47: iaload
      48: i2l
      49: ldc2_w        #77                 // long 4294967295l
      52: land
      53: ladd
      54: lstore_2
      55: aload_1
      56: iconst_1
      57: lload_2
      58: l2i
      59: iastore
      60: lload_2
      61: bipush        32
      63: lshr
      64: lstore_2
      65: lload_2
      66: aload_1
      67: iconst_2
      68: iaload
      69: i2l
      70: ldc2_w        #77                 // long 4294967295l
      73: land
      74: ladd
      75: lstore_2
      76: aload_1
      77: iconst_2
      78: lload_2
      79: l2i
      80: iastore
      81: lload_2
      82: bipush        32
      84: lshr
      85: lstore_2
      86: lload_2
      87: aload_1
      88: iconst_3
      89: iaload
      90: i2l
      91: ldc2_w        #77                 // long 4294967295l
      94: land
      95: lload         4
      97: lsub
      98: ladd
      99: lstore_2
     100: aload_1
     101: iconst_3
     102: lload_2
     103: l2i
     104: iastore
     105: lload_2
     106: bipush        32
     108: lshr
     109: lstore_2
     110: lload_2
     111: lconst_0
     112: lcmp
     113: ifeq          158
     116: lload_2
     117: aload_1
     118: iconst_4
     119: iaload
     120: i2l
     121: ldc2_w        #77                 // long 4294967295l
     124: land
     125: ladd
     126: lstore_2
     127: aload_1
     128: iconst_4
     129: lload_2
     130: l2i
     131: iastore
     132: lload_2
     133: bipush        32
     135: lshr
     136: lstore_2
     137: lload_2
     138: aload_1
     139: iconst_5
     140: iaload
     141: i2l
     142: ldc2_w        #77                 // long 4294967295l
     145: land
     146: ladd
     147: lstore_2
     148: aload_1
     149: iconst_5
     150: lload_2
     151: l2i
     152: iastore
     153: lload_2
     154: bipush        32
     156: lshr
     157: lstore_2
     158: lload_2
     159: aload_1
     160: bipush        6
     162: iaload
     163: i2l
     164: ldc2_w        #77                 // long 4294967295l
     167: land
     168: lload         4
     170: lsub
     171: ladd
     172: lstore_2
     173: aload_1
     174: bipush        6
     176: lload_2
     177: l2i
     178: iastore
     179: lload_2
     180: bipush        32
     182: lshr
     183: lstore_2
     184: lload_2
     185: aload_1
     186: bipush        7
     188: iaload
     189: i2l
     190: ldc2_w        #77                 // long 4294967295l
     193: land
     194: lload         4
     196: ladd
     197: ladd
     198: lstore_2
     199: aload_1
     200: bipush        7
     202: lload_2
     203: l2i
     204: iastore
     205: lload_2
     206: bipush        32
     208: lshr
     209: lstore_2
     210: lload_2
     211: lconst_0
     212: lcmp
     213: ifne          234
     216: aload_1
     217: bipush        7
     219: iaload
     220: iconst_m1
     221: if_icmpne     238
     224: aload_1
     225: getstatic     #123                // Field P:[I
     228: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
     231: ifeq          238
     234: aload_1
     235: invokestatic  #130                // Method addPInvTo:([I)V
     238: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #133                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #133                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #133                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          15
      11: aload_2
      12: invokestatic  #131                // Method subPInvFrom:([I)V
      15: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          23
      13: bipush        16
      15: getstatic     #124                // Field PExt:[I
      18: aload_2
      19: invokestatic  #140                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      22: pop
      23: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #139                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          31
      13: aload_1
      14: bipush        7
      16: iaload
      17: iconst_m1
      18: if_icmpne     35
      21: aload_1
      22: getstatic     #123                // Field P:[I
      25: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      28: ifeq          35
      31: aload_1
      32: invokestatic  #130                // Method addPInvTo:([I)V
      35: return

  private static void addPInvTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #77                 // long 4294967295l
       7: land
       8: lconst_1
       9: ladd
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #77                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #77                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #77                 // long 4294967295l
      77: land
      78: lconst_1
      79: lsub
      80: ladd
      81: lstore_1
      82: aload_0
      83: iconst_3
      84: lload_1
      85: l2i
      86: iastore
      87: lload_1
      88: bipush        32
      90: lshr
      91: lstore_1
      92: lload_1
      93: lconst_0
      94: lcmp
      95: ifeq          140
      98: lload_1
      99: aload_0
     100: iconst_4
     101: iaload
     102: i2l
     103: ldc2_w        #77                 // long 4294967295l
     106: land
     107: ladd
     108: lstore_1
     109: aload_0
     110: iconst_4
     111: lload_1
     112: l2i
     113: iastore
     114: lload_1
     115: bipush        32
     117: lshr
     118: lstore_1
     119: lload_1
     120: aload_0
     121: iconst_5
     122: iaload
     123: i2l
     124: ldc2_w        #77                 // long 4294967295l
     127: land
     128: ladd
     129: lstore_1
     130: aload_0
     131: iconst_5
     132: lload_1
     133: l2i
     134: iastore
     135: lload_1
     136: bipush        32
     138: lshr
     139: lstore_1
     140: lload_1
     141: aload_0
     142: bipush        6
     144: iaload
     145: i2l
     146: ldc2_w        #77                 // long 4294967295l
     149: land
     150: lconst_1
     151: lsub
     152: ladd
     153: lstore_1
     154: aload_0
     155: bipush        6
     157: lload_1
     158: l2i
     159: iastore
     160: lload_1
     161: bipush        32
     163: lshr
     164: lstore_1
     165: lload_1
     166: aload_0
     167: bipush        7
     169: iaload
     170: i2l
     171: ldc2_w        #77                 // long 4294967295l
     174: land
     175: lconst_1
     176: ladd
     177: ladd
     178: lstore_1
     179: aload_0
     180: bipush        7
     182: lload_1
     183: l2i
     184: iastore
     185: return

  private static void subPInvFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #77                 // long 4294967295l
       7: land
       8: lconst_1
       9: lsub
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #77                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #77                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #77                 // long 4294967295l
      77: land
      78: lconst_1
      79: ladd
      80: ladd
      81: lstore_1
      82: aload_0
      83: iconst_3
      84: lload_1
      85: l2i
      86: iastore
      87: lload_1
      88: bipush        32
      90: lshr
      91: lstore_1
      92: lload_1
      93: lconst_0
      94: lcmp
      95: ifeq          140
      98: lload_1
      99: aload_0
     100: iconst_4
     101: iaload
     102: i2l
     103: ldc2_w        #77                 // long 4294967295l
     106: land
     107: ladd
     108: lstore_1
     109: aload_0
     110: iconst_4
     111: lload_1
     112: l2i
     113: iastore
     114: lload_1
     115: bipush        32
     117: lshr
     118: lstore_1
     119: lload_1
     120: aload_0
     121: iconst_5
     122: iaload
     123: i2l
     124: ldc2_w        #77                 // long 4294967295l
     127: land
     128: ladd
     129: lstore_1
     130: aload_0
     131: iconst_5
     132: lload_1
     133: l2i
     134: iastore
     135: lload_1
     136: bipush        32
     138: lshr
     139: lstore_1
     140: lload_1
     141: aload_0
     142: bipush        6
     144: iaload
     145: i2l
     146: ldc2_w        #77                 // long 4294967295l
     149: land
     150: lconst_1
     151: ladd
     152: ladd
     153: lstore_1
     154: aload_0
     155: bipush        6
     157: lload_1
     158: l2i
     159: iastore
     160: lload_1
     161: bipush        32
     163: lshr
     164: lstore_1
     165: lload_1
     166: aload_0
     167: bipush        7
     169: iaload
     170: i2l
     171: ldc2_w        #77                 // long 4294967295l
     174: land
     175: lconst_1
     176: lsub
     177: ladd
     178: lstore_1
     179: aload_0
     180: bipush        7
     182: lload_1
     183: l2i
     184: iastore
     185: return

  static {};
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_m1
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_m1
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_m1
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_0
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_0
      23: iastore
      24: dup
      25: iconst_5
      26: iconst_0
      27: iastore
      28: dup
      29: bipush        6
      31: iconst_1
      32: iastore
      33: dup
      34: bipush        7
      36: iconst_m1
      37: iastore
      38: putstatic     #123                // Field P:[I
      41: bipush        16
      43: newarray       int
      45: dup
      46: iconst_0
      47: iconst_1
      48: iastore
      49: dup
      50: iconst_1
      51: iconst_0
      52: iastore
      53: dup
      54: iconst_2
      55: iconst_0
      56: iastore
      57: dup
      58: iconst_3
      59: bipush        -2
      61: iastore
      62: dup
      63: iconst_4
      64: iconst_m1
      65: iastore
      66: dup
      67: iconst_5
      68: iconst_m1
      69: iastore
      70: dup
      71: bipush        6
      73: bipush        -2
      75: iastore
      76: dup
      77: bipush        7
      79: iconst_1
      80: iastore
      81: dup
      82: bipush        8
      84: bipush        -2
      86: iastore
      87: dup
      88: bipush        9
      90: iconst_1
      91: iastore
      92: dup
      93: bipush        10
      95: bipush        -2
      97: iastore
      98: dup
      99: bipush        11
     101: iconst_1
     102: iastore
     103: dup
     104: bipush        12
     106: iconst_1
     107: iastore
     108: dup
     109: bipush        13
     111: bipush        -2
     113: iastore
     114: dup
     115: bipush        14
     117: iconst_2
     118: iastore
     119: dup
     120: bipush        15
     122: bipush        -2
     124: iastore
     125: putstatic     #124                // Field PExt:[I
     128: return
}
