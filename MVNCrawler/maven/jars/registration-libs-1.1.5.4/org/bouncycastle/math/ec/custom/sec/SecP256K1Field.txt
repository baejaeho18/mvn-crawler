public class org.bouncycastle.math.ec.custom.sec.SecP256K1Field {
  static final int[] P;

  static final int[] PExt;

  private static final int[] PExtInv;

  private static final int P7;

  private static final int PExt15;

  private static final int PInv33;

  public org.bouncycastle.math.ec.custom.sec.SecP256K1Field();
    Code:
       0: aload_0
       1: invokespecial #138                // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #168                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          29
      11: aload_2
      12: bipush        7
      14: iaload
      15: iconst_m1
      16: if_icmpne     39
      19: aload_2
      20: getstatic     #134                // Field P:[I
      23: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      26: ifeq          39
      29: bipush        8
      31: sipush        977
      34: aload_2
      35: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      38: pop
      39: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #158                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        15
      16: iaload
      17: iconst_m1
      18: if_icmpne     58
      21: bipush        16
      23: aload_2
      24: getstatic     #135                // Field PExt:[I
      27: invokestatic  #157                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          58
      33: getstatic     #136                // Field PExtInv:[I
      36: arraylength
      37: getstatic     #136                // Field PExtInv:[I
      40: aload_2
      41: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      44: ifeq          58
      47: bipush        16
      49: aload_2
      50: getstatic     #136                // Field PExtInv:[I
      53: arraylength
      54: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      57: pop
      58: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: aload_1
       4: invokestatic  #154                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          30
      12: aload_1
      13: bipush        7
      15: iaload
      16: iconst_m1
      17: if_icmpne     40
      20: aload_1
      21: getstatic     #134                // Field P:[I
      24: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      27: ifeq          40
      30: bipush        8
      32: sipush        977
      35: aload_1
      36: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      39: pop
      40: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #172                // Method org/bouncycastle/math/raw/Nat256.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: bipush        7
       8: iaload
       9: iconst_m1
      10: if_icmpne     31
      13: aload_1
      14: getstatic     #134                // Field P:[I
      17: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      20: ifeq          31
      23: getstatic     #134                // Field P:[I
      26: aload_1
      27: invokestatic  #165                // Method org/bouncycastle/math/raw/Nat256.subFrom:([I[I)I
      30: pop
      31: aload_1
      32: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        8
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #151                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #134                // Field P:[I
      24: aload_1
      25: invokestatic  #168                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
      28: istore_2
      29: bipush        8
      31: aload_1
      32: iload_2
      33: invokestatic  #150                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void inv(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #140                // Method isZero:([I)I
       5: if_icmpeq     18
       8: new           #85                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String \'x\' cannot be 0
      14: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: astore_2
      20: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      23: astore_3
      24: aload_2
      25: aload_3
      26: invokestatic  #143                // Method square:([I[I)V
      29: aload_3
      30: aload_2
      31: aload_3
      32: invokestatic  #144                // Method multiply:([I[I[I)V
      35: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      38: astore        4
      40: aload_3
      41: aload         4
      43: invokestatic  #143                // Method square:([I[I)V
      46: aload         4
      48: aload_2
      49: aload         4
      51: invokestatic  #144                // Method multiply:([I[I[I)V
      54: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat256.create:()[I
      57: astore        5
      59: aload         4
      61: iconst_3
      62: aload         5
      64: invokestatic  #141                // Method squareN:([II[I)V
      67: aload         5
      69: aload         4
      71: aload         5
      73: invokestatic  #144                // Method multiply:([I[I[I)V
      76: aload         5
      78: astore        6
      80: aload         5
      82: iconst_3
      83: aload         6
      85: invokestatic  #141                // Method squareN:([II[I)V
      88: aload         6
      90: aload         4
      92: aload         6
      94: invokestatic  #144                // Method multiply:([I[I[I)V
      97: aload         6
      99: astore        7
     101: aload         6
     103: iconst_2
     104: aload         7
     106: invokestatic  #141                // Method squareN:([II[I)V
     109: aload         7
     111: aload_3
     112: aload         7
     114: invokestatic  #144                // Method multiply:([I[I[I)V
     117: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat256.create:()[I
     120: astore        8
     122: aload         7
     124: bipush        11
     126: aload         8
     128: invokestatic  #141                // Method squareN:([II[I)V
     131: aload         8
     133: aload         7
     135: aload         8
     137: invokestatic  #144                // Method multiply:([I[I[I)V
     140: aload         7
     142: astore        9
     144: aload         8
     146: bipush        22
     148: aload         9
     150: invokestatic  #141                // Method squareN:([II[I)V
     153: aload         9
     155: aload         8
     157: aload         9
     159: invokestatic  #144                // Method multiply:([I[I[I)V
     162: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat256.create:()[I
     165: astore        10
     167: aload         9
     169: bipush        44
     171: aload         10
     173: invokestatic  #141                // Method squareN:([II[I)V
     176: aload         10
     178: aload         9
     180: aload         10
     182: invokestatic  #144                // Method multiply:([I[I[I)V
     185: invokestatic  #160                // Method org/bouncycastle/math/raw/Nat256.create:()[I
     188: astore        11
     190: aload         10
     192: bipush        88
     194: aload         11
     196: invokestatic  #141                // Method squareN:([II[I)V
     199: aload         11
     201: aload         10
     203: aload         11
     205: invokestatic  #144                // Method multiply:([I[I[I)V
     208: aload         10
     210: astore        12
     212: aload         11
     214: bipush        44
     216: aload         12
     218: invokestatic  #141                // Method squareN:([II[I)V
     221: aload         12
     223: aload         9
     225: aload         12
     227: invokestatic  #144                // Method multiply:([I[I[I)V
     230: aload         9
     232: astore        13
     234: aload         12
     236: iconst_3
     237: aload         13
     239: invokestatic  #141                // Method squareN:([II[I)V
     242: aload         13
     244: aload         4
     246: aload         13
     248: invokestatic  #144                // Method multiply:([I[I[I)V
     251: aload         13
     253: astore        14
     255: aload         14
     257: bipush        23
     259: aload         14
     261: invokestatic  #141                // Method squareN:([II[I)V
     264: aload         14
     266: aload         8
     268: aload         14
     270: invokestatic  #144                // Method multiply:([I[I[I)V
     273: aload         14
     275: iconst_5
     276: aload         14
     278: invokestatic  #141                // Method squareN:([II[I)V
     281: aload         14
     283: aload_2
     284: aload         14
     286: invokestatic  #144                // Method multiply:([I[I[I)V
     289: aload         14
     291: iconst_3
     292: aload         14
     294: invokestatic  #141                // Method squareN:([II[I)V
     297: aload         14
     299: aload_3
     300: aload         14
     302: invokestatic  #144                // Method multiply:([I[I[I)V
     305: aload         14
     307: iconst_2
     308: aload         14
     310: invokestatic  #141                // Method squareN:([II[I)V
     313: aload_2
     314: aload         14
     316: aload_1
     317: invokestatic  #144                // Method multiply:([I[I[I)V
     320: return

  public static int isZero(int[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: bipush        8
       7: if_icmpge     22
      10: iload_1
      11: aload_0
      12: iload_2
      13: iaload
      14: ior
      15: istore_1
      16: iinc          2, 1
      19: goto          4
      22: iload_1
      23: iconst_1
      24: iushr
      25: iload_1
      26: iconst_1
      27: iand
      28: ior
      29: istore_1
      30: iload_1
      31: iconst_1
      32: isub
      33: bipush        31
      35: ishr
      36: ireturn

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #171                // Method org/bouncycastle/math/raw/Nat256.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #142                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #169                // Method org/bouncycastle/math/raw/Nat256.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        15
      14: iaload
      15: iconst_m1
      16: if_icmpne     56
      19: bipush        16
      21: aload_2
      22: getstatic     #135                // Field PExt:[I
      25: invokestatic  #157                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          56
      31: getstatic     #136                // Field PExtInv:[I
      34: arraylength
      35: getstatic     #136                // Field PExtInv:[I
      38: aload_2
      39: invokestatic  #153                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      42: ifeq          56
      45: bipush        16
      47: aload_2
      48: getstatic     #136                // Field PExtInv:[I
      51: arraylength
      52: invokestatic  #149                // Method org/bouncycastle/math/raw/Nat.incAt:(I[II)I
      55: pop
      56: return

  public static void negate(int[], int[]);
    Code:
       0: iconst_0
       1: aload_0
       2: invokestatic  #140                // Method isZero:([I)I
       5: if_icmpeq     22
       8: getstatic     #134                // Field P:[I
      11: getstatic     #134                // Field P:[I
      14: aload_1
      15: invokestatic  #170                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      18: pop
      19: goto          31
      22: getstatic     #134                // Field P:[I
      25: aload_0
      26: aload_1
      27: invokestatic  #170                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      30: pop
      31: return

  public static void random(java.security.SecureRandom, int[]);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #139                // Method java/security/SecureRandom.nextBytes:([B)V
      10: aload_2
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: bipush        8
      16: invokestatic  #173                // Method org/bouncycastle/util/Pack.littleEndianToInt:([BI[III)V
      19: iconst_0
      20: bipush        8
      22: aload_1
      23: getstatic     #134                // Field P:[I
      26: invokestatic  #155                // Method org/bouncycastle/math/raw/Nat.lessThan:(I[I[I)I
      29: if_icmpeq     5
      32: return

  public static void randomMult(java.security.SecureRandom, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // Method random:(Ljava/security/SecureRandom;[I)V
       5: iconst_0
       6: aload_1
       7: invokestatic  #140                // Method isZero:([I)I
      10: if_icmpne     0
      13: return

  public static void reduce(int[], int[]);
    Code:
       0: sipush        977
       3: aload_0
       4: bipush        8
       6: aload_0
       7: iconst_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat256.mul33Add:(I[II[II[II)J
      13: lstore_2
      14: sipush        977
      17: lload_2
      18: aload_1
      19: iconst_0
      20: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat256.mul33DWordAdd:(IJ[II)I
      23: istore        4
      25: iload         4
      27: ifne          48
      30: aload_1
      31: bipush        7
      33: iaload
      34: iconst_m1
      35: if_icmpne     58
      38: aload_1
      39: getstatic     #134                // Field P:[I
      42: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      45: ifeq          58
      48: bipush        8
      50: sipush        977
      53: aload_1
      54: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      57: pop
      58: return

  public static void reduce32(int, int[]);
    Code:
       0: iload_0
       1: ifeq          16
       4: sipush        977
       7: iload_0
       8: aload_1
       9: iconst_0
      10: invokestatic  #162                // Method org/bouncycastle/math/raw/Nat256.mul33WordAdd:(II[II)I
      13: ifne          34
      16: aload_1
      17: bipush        7
      19: iaload
      20: iconst_m1
      21: if_icmpne     44
      24: aload_1
      25: getstatic     #134                // Field P:[I
      28: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      31: ifeq          44
      34: bipush        8
      36: sipush        977
      39: aload_1
      40: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      43: pop
      44: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #166                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #142                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #161                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #166                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #142                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #166                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #142                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #170                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          21
      11: bipush        8
      13: sipush        977
      16: aload_2
      17: invokestatic  #147                // Method org/bouncycastle/math/raw/Nat.sub33From:(II[I)I
      20: pop
      21: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #159                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          38
      13: getstatic     #136                // Field PExtInv:[I
      16: arraylength
      17: getstatic     #136                // Field PExtInv:[I
      20: aload_2
      21: invokestatic  #156                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      24: ifeq          38
      27: bipush        16
      29: aload_2
      30: getstatic     #136                // Field PExtInv:[I
      33: arraylength
      34: invokestatic  #148                // Method org/bouncycastle/math/raw/Nat.decAt:(I[II)I
      37: pop
      38: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #152                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          31
      13: aload_1
      14: bipush        7
      16: iaload
      17: iconst_m1
      18: if_icmpne     41
      21: aload_1
      22: getstatic     #134                // Field P:[I
      25: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      28: ifeq          41
      31: bipush        8
      33: sipush        977
      36: aload_1
      37: invokestatic  #146                // Method org/bouncycastle/math/raw/Nat.add33To:(II[I)I
      40: pop
      41: return

  static {};
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: sipush        -977
       9: iastore
      10: dup
      11: iconst_1
      12: bipush        -2
      14: iastore
      15: dup
      16: iconst_2
      17: iconst_m1
      18: iastore
      19: dup
      20: iconst_3
      21: iconst_m1
      22: iastore
      23: dup
      24: iconst_4
      25: iconst_m1
      26: iastore
      27: dup
      28: iconst_5
      29: iconst_m1
      30: iastore
      31: dup
      32: bipush        6
      34: iconst_m1
      35: iastore
      36: dup
      37: bipush        7
      39: iconst_m1
      40: iastore
      41: putstatic     #134                // Field P:[I
      44: bipush        16
      46: newarray       int
      48: dup
      49: iconst_0
      50: ldc           #2                  // int 954529
      52: iastore
      53: dup
      54: iconst_1
      55: sipush        1954
      58: iastore
      59: dup
      60: iconst_2
      61: iconst_1
      62: iastore
      63: dup
      64: iconst_3
      65: iconst_0
      66: iastore
      67: dup
      68: iconst_4
      69: iconst_0
      70: iastore
      71: dup
      72: iconst_5
      73: iconst_0
      74: iastore
      75: dup
      76: bipush        6
      78: iconst_0
      79: iastore
      80: dup
      81: bipush        7
      83: iconst_0
      84: iastore
      85: dup
      86: bipush        8
      88: sipush        -1954
      91: iastore
      92: dup
      93: bipush        9
      95: bipush        -3
      97: iastore
      98: dup
      99: bipush        10
     101: iconst_m1
     102: iastore
     103: dup
     104: bipush        11
     106: iconst_m1
     107: iastore
     108: dup
     109: bipush        12
     111: iconst_m1
     112: iastore
     113: dup
     114: bipush        13
     116: iconst_m1
     117: iastore
     118: dup
     119: bipush        14
     121: iconst_m1
     122: iastore
     123: dup
     124: bipush        15
     126: iconst_m1
     127: iastore
     128: putstatic     #135                // Field PExt:[I
     131: bipush        10
     133: newarray       int
     135: dup
     136: iconst_0
     137: ldc           #1                  // int -954529
     139: iastore
     140: dup
     141: iconst_1
     142: sipush        -1955
     145: iastore
     146: dup
     147: iconst_2
     148: bipush        -2
     150: iastore
     151: dup
     152: iconst_3
     153: iconst_m1
     154: iastore
     155: dup
     156: iconst_4
     157: iconst_m1
     158: iastore
     159: dup
     160: iconst_5
     161: iconst_m1
     162: iastore
     163: dup
     164: bipush        6
     166: iconst_m1
     167: iastore
     168: dup
     169: bipush        7
     171: iconst_m1
     172: iastore
     173: dup
     174: bipush        8
     176: sipush        1953
     179: iastore
     180: dup
     181: bipush        9
     183: iconst_2
     184: iastore
     185: putstatic     #136                // Field PExtInv:[I
     188: return
}
