public class org.bouncycastle.math.ec.custom.gm.SM2P256V1Field {
  private static final long M;

  static final int[] P;

  static final int[] PExt;

  private static final int P7s1;

  private static final int PExt15s1;

  public org.bouncycastle.math.ec.custom.gm.SM2P256V1Field();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #117                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          32
      11: aload_2
      12: bipush        7
      14: iaload
      15: iconst_1
      16: iushr
      17: ldc           #1                  // int 2147483647
      19: if_icmplt     36
      22: aload_2
      23: getstatic     #95                 // Field P:[I
      26: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      29: ifeq          36
      32: aload_2
      33: invokestatic  #99                 // Method addPInvTo:([I)V
      36: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #109                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          36
      13: aload_2
      14: bipush        15
      16: iaload
      17: iconst_1
      18: iushr
      19: ldc           #1                  // int 2147483647
      21: if_icmplt     46
      24: bipush        16
      26: aload_2
      27: getstatic     #96                 // Field PExt:[I
      30: invokestatic  #108                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      33: ifeq          46
      36: bipush        16
      38: getstatic     #96                 // Field PExt:[I
      41: aload_2
      42: invokestatic  #107                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      45: pop
      46: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: aload_1
       4: invokestatic  #106                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          33
      12: aload_1
      13: bipush        7
      15: iaload
      16: iconst_1
      17: iushr
      18: ldc           #1                  // int 2147483647
      20: if_icmplt     37
      23: aload_1
      24: getstatic     #95                 // Field P:[I
      27: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      30: ifeq          37
      33: aload_1
      34: invokestatic  #99                 // Method addPInvTo:([I)V
      37: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #121                // Method org/bouncycastle/math/raw/Nat256.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: bipush        7
       8: iaload
       9: iconst_1
      10: iushr
      11: ldc           #1                  // int 2147483647
      13: if_icmplt     34
      16: aload_1
      17: getstatic     #95                 // Field P:[I
      20: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      23: ifeq          34
      26: getstatic     #95                 // Field P:[I
      29: aload_1
      30: invokestatic  #114                // Method org/bouncycastle/math/raw/Nat256.subFrom:([I[I)I
      33: pop
      34: aload_1
      35: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        8
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #103                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #95                 // Field P:[I
      24: aload_1
      25: invokestatic  #117                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
      28: istore_2
      29: bipush        8
      31: aload_1
      32: iload_2
      33: invokestatic  #102                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #111                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #120                // Method org/bouncycastle/math/raw/Nat256.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #101                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat256.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          34
      11: aload_2
      12: bipush        15
      14: iaload
      15: iconst_1
      16: iushr
      17: ldc           #1                  // int 2147483647
      19: if_icmplt     44
      22: bipush        16
      24: aload_2
      25: getstatic     #96                 // Field PExt:[I
      28: invokestatic  #108                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      31: ifeq          44
      34: bipush        16
      36: getstatic     #96                 // Field PExt:[I
      39: aload_2
      40: invokestatic  #107                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      43: pop
      44: return

  public static void negate(int[], int[]);
    Code:
       0: aload_0
       1: invokestatic  #113                // Method org/bouncycastle/math/raw/Nat256.isZero:([I)Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #112                // Method org/bouncycastle/math/raw/Nat256.zero:([I)V
      11: goto          23
      14: getstatic     #95                 // Field P:[I
      17: aload_0
      18: aload_1
      19: invokestatic  #119                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      22: pop
      23: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: iaload
       4: i2l
       5: ldc2_w        #61                 // long 4294967295l
       8: land
       9: lstore_2
      10: aload_0
      11: bipush        9
      13: iaload
      14: i2l
      15: ldc2_w        #61                 // long 4294967295l
      18: land
      19: lstore        4
      21: aload_0
      22: bipush        10
      24: iaload
      25: i2l
      26: ldc2_w        #61                 // long 4294967295l
      29: land
      30: lstore        6
      32: aload_0
      33: bipush        11
      35: iaload
      36: i2l
      37: ldc2_w        #61                 // long 4294967295l
      40: land
      41: lstore        8
      43: aload_0
      44: bipush        12
      46: iaload
      47: i2l
      48: ldc2_w        #61                 // long 4294967295l
      51: land
      52: lstore        10
      54: aload_0
      55: bipush        13
      57: iaload
      58: i2l
      59: ldc2_w        #61                 // long 4294967295l
      62: land
      63: lstore        12
      65: aload_0
      66: bipush        14
      68: iaload
      69: i2l
      70: ldc2_w        #61                 // long 4294967295l
      73: land
      74: lstore        14
      76: aload_0
      77: bipush        15
      79: iaload
      80: i2l
      81: ldc2_w        #61                 // long 4294967295l
      84: land
      85: lstore        16
      87: lload_2
      88: lload         4
      90: ladd
      91: lstore        18
      93: lload         6
      95: lload         8
      97: ladd
      98: lstore        20
     100: lload         10
     102: lload         16
     104: ladd
     105: lstore        22
     107: lload         12
     109: lload         14
     111: ladd
     112: lstore        24
     114: lload         24
     116: lload         16
     118: iconst_1
     119: lshl
     120: ladd
     121: lstore        26
     123: lload         18
     125: lload         24
     127: ladd
     128: lstore        28
     130: lload         20
     132: lload         22
     134: ladd
     135: lload         28
     137: ladd
     138: lstore        30
     140: lconst_0
     141: lstore        32
     143: lload         32
     145: aload_0
     146: iconst_0
     147: iaload
     148: i2l
     149: ldc2_w        #61                 // long 4294967295l
     152: land
     153: lload         30
     155: ladd
     156: lload         12
     158: ladd
     159: lload         14
     161: ladd
     162: lload         16
     164: ladd
     165: ladd
     166: lstore        32
     168: aload_1
     169: iconst_0
     170: lload         32
     172: l2i
     173: iastore
     174: lload         32
     176: bipush        32
     178: lshr
     179: lstore        32
     181: lload         32
     183: aload_0
     184: iconst_1
     185: iaload
     186: i2l
     187: ldc2_w        #61                 // long 4294967295l
     190: land
     191: lload         30
     193: ladd
     194: lload_2
     195: lsub
     196: lload         14
     198: ladd
     199: lload         16
     201: ladd
     202: ladd
     203: lstore        32
     205: aload_1
     206: iconst_1
     207: lload         32
     209: l2i
     210: iastore
     211: lload         32
     213: bipush        32
     215: lshr
     216: lstore        32
     218: lload         32
     220: aload_0
     221: iconst_2
     222: iaload
     223: i2l
     224: ldc2_w        #61                 // long 4294967295l
     227: land
     228: lload         28
     230: lsub
     231: ladd
     232: lstore        32
     234: aload_1
     235: iconst_2
     236: lload         32
     238: l2i
     239: iastore
     240: lload         32
     242: bipush        32
     244: lshr
     245: lstore        32
     247: lload         32
     249: aload_0
     250: iconst_3
     251: iaload
     252: i2l
     253: ldc2_w        #61                 // long 4294967295l
     256: land
     257: lload         30
     259: ladd
     260: lload         4
     262: lsub
     263: lload         6
     265: lsub
     266: lload         12
     268: ladd
     269: ladd
     270: lstore        32
     272: aload_1
     273: iconst_3
     274: lload         32
     276: l2i
     277: iastore
     278: lload         32
     280: bipush        32
     282: lshr
     283: lstore        32
     285: lload         32
     287: aload_0
     288: iconst_4
     289: iaload
     290: i2l
     291: ldc2_w        #61                 // long 4294967295l
     294: land
     295: lload         30
     297: ladd
     298: lload         20
     300: lsub
     301: lload_2
     302: lsub
     303: lload         14
     305: ladd
     306: ladd
     307: lstore        32
     309: aload_1
     310: iconst_4
     311: lload         32
     313: l2i
     314: iastore
     315: lload         32
     317: bipush        32
     319: lshr
     320: lstore        32
     322: lload         32
     324: aload_0
     325: iconst_5
     326: iaload
     327: i2l
     328: ldc2_w        #61                 // long 4294967295l
     331: land
     332: lload         26
     334: ladd
     335: lload         6
     337: ladd
     338: ladd
     339: lstore        32
     341: aload_1
     342: iconst_5
     343: lload         32
     345: l2i
     346: iastore
     347: lload         32
     349: bipush        32
     351: lshr
     352: lstore        32
     354: lload         32
     356: aload_0
     357: bipush        6
     359: iaload
     360: i2l
     361: ldc2_w        #61                 // long 4294967295l
     364: land
     365: lload         8
     367: ladd
     368: lload         14
     370: ladd
     371: lload         16
     373: ladd
     374: ladd
     375: lstore        32
     377: aload_1
     378: bipush        6
     380: lload         32
     382: l2i
     383: iastore
     384: lload         32
     386: bipush        32
     388: lshr
     389: lstore        32
     391: lload         32
     393: aload_0
     394: bipush        7
     396: iaload
     397: i2l
     398: ldc2_w        #61                 // long 4294967295l
     401: land
     402: lload         30
     404: ladd
     405: lload         26
     407: ladd
     408: lload         10
     410: ladd
     411: ladd
     412: lstore        32
     414: aload_1
     415: bipush        7
     417: lload         32
     419: l2i
     420: iastore
     421: lload         32
     423: bipush        32
     425: lshr
     426: lstore        32
     428: lload         32
     430: l2i
     431: aload_1
     432: invokestatic  #98                 // Method reduce32:(I[I)V
     435: return

  public static void reduce32(int, int[]);
    Code:
       0: lconst_0
       1: lstore_2
       2: iload_0
       3: ifeq          210
       6: iload_0
       7: i2l
       8: ldc2_w        #61                 // long 4294967295l
      11: land
      12: lstore        4
      14: lload_2
      15: aload_1
      16: iconst_0
      17: iaload
      18: i2l
      19: ldc2_w        #61                 // long 4294967295l
      22: land
      23: lload         4
      25: ladd
      26: ladd
      27: lstore_2
      28: aload_1
      29: iconst_0
      30: lload_2
      31: l2i
      32: iastore
      33: lload_2
      34: bipush        32
      36: lshr
      37: lstore_2
      38: lload_2
      39: lconst_0
      40: lcmp
      41: ifeq          65
      44: lload_2
      45: aload_1
      46: iconst_1
      47: iaload
      48: i2l
      49: ldc2_w        #61                 // long 4294967295l
      52: land
      53: ladd
      54: lstore_2
      55: aload_1
      56: iconst_1
      57: lload_2
      58: l2i
      59: iastore
      60: lload_2
      61: bipush        32
      63: lshr
      64: lstore_2
      65: lload_2
      66: aload_1
      67: iconst_2
      68: iaload
      69: i2l
      70: ldc2_w        #61                 // long 4294967295l
      73: land
      74: lload         4
      76: lsub
      77: ladd
      78: lstore_2
      79: aload_1
      80: iconst_2
      81: lload_2
      82: l2i
      83: iastore
      84: lload_2
      85: bipush        32
      87: lshr
      88: lstore_2
      89: lload_2
      90: aload_1
      91: iconst_3
      92: iaload
      93: i2l
      94: ldc2_w        #61                 // long 4294967295l
      97: land
      98: lload         4
     100: ladd
     101: ladd
     102: lstore_2
     103: aload_1
     104: iconst_3
     105: lload_2
     106: l2i
     107: iastore
     108: lload_2
     109: bipush        32
     111: lshr
     112: lstore_2
     113: lload_2
     114: lconst_0
     115: lcmp
     116: ifeq          184
     119: lload_2
     120: aload_1
     121: iconst_4
     122: iaload
     123: i2l
     124: ldc2_w        #61                 // long 4294967295l
     127: land
     128: ladd
     129: lstore_2
     130: aload_1
     131: iconst_4
     132: lload_2
     133: l2i
     134: iastore
     135: lload_2
     136: bipush        32
     138: lshr
     139: lstore_2
     140: lload_2
     141: aload_1
     142: iconst_5
     143: iaload
     144: i2l
     145: ldc2_w        #61                 // long 4294967295l
     148: land
     149: ladd
     150: lstore_2
     151: aload_1
     152: iconst_5
     153: lload_2
     154: l2i
     155: iastore
     156: lload_2
     157: bipush        32
     159: lshr
     160: lstore_2
     161: lload_2
     162: aload_1
     163: bipush        6
     165: iaload
     166: i2l
     167: ldc2_w        #61                 // long 4294967295l
     170: land
     171: ladd
     172: lstore_2
     173: aload_1
     174: bipush        6
     176: lload_2
     177: l2i
     178: iastore
     179: lload_2
     180: bipush        32
     182: lshr
     183: lstore_2
     184: lload_2
     185: aload_1
     186: bipush        7
     188: iaload
     189: i2l
     190: ldc2_w        #61                 // long 4294967295l
     193: land
     194: lload         4
     196: ladd
     197: ladd
     198: lstore_2
     199: aload_1
     200: bipush        7
     202: lload_2
     203: l2i
     204: iastore
     205: lload_2
     206: bipush        32
     208: lshr
     209: lstore_2
     210: lload_2
     211: lconst_0
     212: lcmp
     213: ifne          237
     216: aload_1
     217: bipush        7
     219: iaload
     220: iconst_1
     221: iushr
     222: ldc           #1                  // int 2147483647
     224: if_icmplt     241
     227: aload_1
     228: getstatic     #95                 // Field P:[I
     231: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
     234: ifeq          241
     237: aload_1
     238: invokestatic  #99                 // Method addPInvTo:([I)V
     241: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #111                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #115                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #101                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #111                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #115                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #101                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #115                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #101                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          15
      11: aload_2
      12: invokestatic  #100                // Method subPInvFrom:([I)V
      15: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #110                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          23
      13: bipush        16
      15: getstatic     #96                 // Field PExt:[I
      18: aload_2
      19: invokestatic  #105                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      22: pop
      23: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #104                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          34
      13: aload_1
      14: bipush        7
      16: iaload
      17: iconst_1
      18: iushr
      19: ldc           #1                  // int 2147483647
      21: if_icmplt     38
      24: aload_1
      25: getstatic     #95                 // Field P:[I
      28: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      31: ifeq          38
      34: aload_1
      35: invokestatic  #99                 // Method addPInvTo:([I)V
      38: return

  private static void addPInvTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #61                 // long 4294967295l
       7: land
       8: lconst_1
       9: ladd
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          48
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #61                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #61                 // long 4294967295l
      56: land
      57: lconst_1
      58: lsub
      59: ladd
      60: lstore_1
      61: aload_0
      62: iconst_2
      63: lload_1
      64: l2i
      65: iastore
      66: lload_1
      67: bipush        32
      69: lshr
      70: lstore_1
      71: lload_1
      72: aload_0
      73: iconst_3
      74: iaload
      75: i2l
      76: ldc2_w        #61                 // long 4294967295l
      79: land
      80: lconst_1
      81: ladd
      82: ladd
      83: lstore_1
      84: aload_0
      85: iconst_3
      86: lload_1
      87: l2i
      88: iastore
      89: lload_1
      90: bipush        32
      92: lshr
      93: lstore_1
      94: lload_1
      95: lconst_0
      96: lcmp
      97: ifeq          165
     100: lload_1
     101: aload_0
     102: iconst_4
     103: iaload
     104: i2l
     105: ldc2_w        #61                 // long 4294967295l
     108: land
     109: ladd
     110: lstore_1
     111: aload_0
     112: iconst_4
     113: lload_1
     114: l2i
     115: iastore
     116: lload_1
     117: bipush        32
     119: lshr
     120: lstore_1
     121: lload_1
     122: aload_0
     123: iconst_5
     124: iaload
     125: i2l
     126: ldc2_w        #61                 // long 4294967295l
     129: land
     130: ladd
     131: lstore_1
     132: aload_0
     133: iconst_5
     134: lload_1
     135: l2i
     136: iastore
     137: lload_1
     138: bipush        32
     140: lshr
     141: lstore_1
     142: lload_1
     143: aload_0
     144: bipush        6
     146: iaload
     147: i2l
     148: ldc2_w        #61                 // long 4294967295l
     151: land
     152: ladd
     153: lstore_1
     154: aload_0
     155: bipush        6
     157: lload_1
     158: l2i
     159: iastore
     160: lload_1
     161: bipush        32
     163: lshr
     164: lstore_1
     165: lload_1
     166: aload_0
     167: bipush        7
     169: iaload
     170: i2l
     171: ldc2_w        #61                 // long 4294967295l
     174: land
     175: lconst_1
     176: ladd
     177: ladd
     178: lstore_1
     179: aload_0
     180: bipush        7
     182: lload_1
     183: l2i
     184: iastore
     185: return

  private static void subPInvFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #61                 // long 4294967295l
       7: land
       8: lconst_1
       9: lsub
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          48
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #61                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #61                 // long 4294967295l
      56: land
      57: lconst_1
      58: ladd
      59: ladd
      60: lstore_1
      61: aload_0
      62: iconst_2
      63: lload_1
      64: l2i
      65: iastore
      66: lload_1
      67: bipush        32
      69: lshr
      70: lstore_1
      71: lload_1
      72: aload_0
      73: iconst_3
      74: iaload
      75: i2l
      76: ldc2_w        #61                 // long 4294967295l
      79: land
      80: lconst_1
      81: lsub
      82: ladd
      83: lstore_1
      84: aload_0
      85: iconst_3
      86: lload_1
      87: l2i
      88: iastore
      89: lload_1
      90: bipush        32
      92: lshr
      93: lstore_1
      94: lload_1
      95: lconst_0
      96: lcmp
      97: ifeq          165
     100: lload_1
     101: aload_0
     102: iconst_4
     103: iaload
     104: i2l
     105: ldc2_w        #61                 // long 4294967295l
     108: land
     109: ladd
     110: lstore_1
     111: aload_0
     112: iconst_4
     113: lload_1
     114: l2i
     115: iastore
     116: lload_1
     117: bipush        32
     119: lshr
     120: lstore_1
     121: lload_1
     122: aload_0
     123: iconst_5
     124: iaload
     125: i2l
     126: ldc2_w        #61                 // long 4294967295l
     129: land
     130: ladd
     131: lstore_1
     132: aload_0
     133: iconst_5
     134: lload_1
     135: l2i
     136: iastore
     137: lload_1
     138: bipush        32
     140: lshr
     141: lstore_1
     142: lload_1
     143: aload_0
     144: bipush        6
     146: iaload
     147: i2l
     148: ldc2_w        #61                 // long 4294967295l
     151: land
     152: ladd
     153: lstore_1
     154: aload_0
     155: bipush        6
     157: lload_1
     158: l2i
     159: iastore
     160: lload_1
     161: bipush        32
     163: lshr
     164: lstore_1
     165: lload_1
     166: aload_0
     167: bipush        7
     169: iaload
     170: i2l
     171: ldc2_w        #61                 // long 4294967295l
     174: land
     175: lconst_1
     176: lsub
     177: ladd
     178: lstore_1
     179: aload_0
     180: bipush        7
     182: lload_1
     183: l2i
     184: iastore
     185: return

  static {};
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_m1
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_m1
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_0
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_m1
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_m1
      23: iastore
      24: dup
      25: iconst_5
      26: iconst_m1
      27: iastore
      28: dup
      29: bipush        6
      31: iconst_m1
      32: iastore
      33: dup
      34: bipush        7
      36: bipush        -2
      38: iastore
      39: putstatic     #95                 // Field P:[I
      42: bipush        16
      44: newarray       int
      46: dup
      47: iconst_0
      48: iconst_1
      49: iastore
      50: dup
      51: iconst_1
      52: iconst_0
      53: iastore
      54: dup
      55: iconst_2
      56: bipush        -2
      58: iastore
      59: dup
      60: iconst_3
      61: iconst_1
      62: iastore
      63: dup
      64: iconst_4
      65: iconst_1
      66: iastore
      67: dup
      68: iconst_5
      69: bipush        -2
      71: iastore
      72: dup
      73: bipush        6
      75: iconst_0
      76: iastore
      77: dup
      78: bipush        7
      80: iconst_2
      81: iastore
      82: dup
      83: bipush        8
      85: bipush        -2
      87: iastore
      88: dup
      89: bipush        9
      91: bipush        -3
      93: iastore
      94: dup
      95: bipush        10
      97: iconst_3
      98: iastore
      99: dup
     100: bipush        11
     102: bipush        -2
     104: iastore
     105: dup
     106: bipush        12
     108: iconst_m1
     109: iastore
     110: dup
     111: bipush        13
     113: iconst_m1
     114: iastore
     115: dup
     116: bipush        14
     118: iconst_0
     119: iastore
     120: dup
     121: bipush        15
     123: bipush        -2
     125: iastore
     126: putstatic     #96                 // Field PExt:[I
     129: return
}
