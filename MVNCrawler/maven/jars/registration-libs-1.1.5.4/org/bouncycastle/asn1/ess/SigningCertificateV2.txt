public class org.bouncycastle.asn1.ess.SigningCertificateV2 extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.ASN1Sequence certs;

  org.bouncycastle.asn1.ASN1Sequence policies;

  public static org.bouncycastle.asn1.ess.SigningCertificateV2 getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #34                 // class org/bouncycastle/asn1/ess/SigningCertificateV2
       8: ifeq          16
      11: aload_0
      12: checkcast     #34                 // class org/bouncycastle/asn1/ess/SigningCertificateV2
      15: areturn
      16: aload_0
      17: instanceof    #31                 // class org/bouncycastle/asn1/ASN1Sequence
      20: ifeq          35
      23: new           #34                 // class org/bouncycastle/asn1/ess/SigningCertificateV2
      26: dup
      27: aload_0
      28: checkcast     #31                 // class org/bouncycastle/asn1/ASN1Sequence
      31: invokespecial #91                 // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      34: areturn
      35: aconst_null
      36: areturn

  private org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_1
       9: if_icmplt     20
      12: aload_1
      13: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: iconst_2
      17: if_icmple     50
      20: new           #27                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #28                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #1                  // String Bad sequence size:
      33: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      40: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: iconst_0
      53: invokevirtual #85                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      56: invokestatic  #86                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      59: putfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      62: aload_1
      63: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      66: iconst_1
      67: if_icmple     82
      70: aload_0
      71: aload_1
      72: iconst_1
      73: invokevirtual #85                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      76: invokestatic  #86                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      79: putfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      82: return

  public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #32                 // class org/bouncycastle/asn1/DERSequence
       8: dup
       9: aload_1
      10: invokespecial #87                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      13: putfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      16: return

  public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[]);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #32                 // class org/bouncycastle/asn1/DERSequence
       8: dup
       9: aload_1
      10: invokespecial #88                 // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      13: putfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      16: return

  public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[], org.bouncycastle.asn1.x509.PolicyInformation[]);
    Code:
       0: aload_0
       1: invokespecial #83                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #32                 // class org/bouncycastle/asn1/DERSequence
       8: dup
       9: aload_1
      10: invokespecial #88                 // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      13: putfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      16: aload_2
      17: ifnull        32
      20: aload_0
      21: new           #32                 // class org/bouncycastle/asn1/DERSequence
      24: dup
      25: aload_2
      26: invokespecial #88                 // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      29: putfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      32: return

  public org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts();
    Code:
       0: aload_0
       1: getfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       7: anewarray     #33                 // class org/bouncycastle/asn1/ess/ESSCertIDv2
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      18: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      21: if_icmpeq     44
      24: aload_1
      25: iload_2
      26: aload_0
      27: getfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      30: iload_2
      31: invokevirtual #85                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      34: invokestatic  #90                 // Method org/bouncycastle/asn1/ess/ESSCertIDv2.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ess/ESSCertIDv2;
      37: aastore
      38: iinc          2, 1
      41: goto          13
      44: aload_1
      45: areturn

  public org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies();
    Code:
       0: aload_0
       1: getfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      13: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: anewarray     #35                 // class org/bouncycastle/asn1/x509/PolicyInformation
      19: astore_1
      20: iconst_0
      21: istore_2
      22: iload_2
      23: aload_0
      24: getfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      27: invokevirtual #84                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      30: if_icmpeq     53
      33: aload_1
      34: iload_2
      35: aload_0
      36: getfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      39: iload_2
      40: invokevirtual #85                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      43: invokestatic  #92                 // Method org/bouncycastle/asn1/x509/PolicyInformation.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/PolicyInformation;
      46: aastore
      47: iinc          2, 1
      50: goto          22
      53: aload_1
      54: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #29                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: iconst_2
       5: invokespecial #81                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: getfield      #74                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      14: invokevirtual #82                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      17: aload_0
      18: getfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      21: ifnull        32
      24: aload_1
      25: aload_0
      26: getfield      #75                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      29: invokevirtual #82                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      32: new           #32                 // class org/bouncycastle/asn1/DERSequence
      35: dup
      36: aload_1
      37: invokespecial #89                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      40: areturn
}
