Compiled from "EncodableHistogram.java"
public abstract class org.HdrHistogram.EncodableHistogram {
  public org.HdrHistogram.EncodableHistogram();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract int getNeededByteBufferCapacity();

  public abstract int encodeIntoCompressedByteBuffer(java.nio.ByteBuffer, int);

  public abstract long getStartTimeStamp();

  public abstract void setStartTimeStamp(long);

  public abstract long getEndTimeStamp();

  public abstract void setEndTimeStamp(long);

  public abstract java.lang.String getTag();

  public abstract void setTag(java.lang.String);

  public abstract double getMaxValueAsDouble();

  static org.HdrHistogram.EncodableHistogram decodeFromCompressedByteBuffer(java.nio.ByteBuffer, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
       5: invokevirtual #3                  // Method java/nio/ByteBuffer.getInt:(I)I
       8: istore_3
       9: iload_3
      10: invokestatic  #4                  // Method org/HdrHistogram/DoubleHistogram.isDoubleHistogramCookie:(I)Z
      13: ifeq          22
      16: aload_0
      17: lload_1
      18: invokestatic  #5                  // Method org/HdrHistogram/DoubleHistogram.decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;J)Lorg/HdrHistogram/DoubleHistogram;
      21: areturn
      22: aload_0
      23: lload_1
      24: invokestatic  #6                  // Method org/HdrHistogram/Histogram.decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;J)Lorg/HdrHistogram/Histogram;
      27: areturn
}
