Compiled from "ConcurrentHistogram.java"
public class org.HdrHistogram.ConcurrentHistogram extends org.HdrHistogram.Histogram {
  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.HdrHistogram.ConcurrentHistogram> totalCountUpdater;

  volatile long totalCount;

  volatile org.HdrHistogram.ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset activeCounts;

  volatile org.HdrHistogram.ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset inactiveCounts;

  transient org.HdrHistogram.WriterReaderPhaser wrp;

  static final boolean $assertionsDisabled;

  void setIntegerToDoubleValueConversionRatio(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: aload_0
       8: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      11: dconst_1
      12: dload_1
      13: ddiv
      14: invokeinterface #4,  3            // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.setDoubleToIntegerValueConversionRatio:(D)V
      19: aload_0
      20: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      23: astore_3
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      29: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      32: aload_0
      33: aload_3
      34: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      37: aload_0
      38: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      41: invokevirtual #6                  // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:()V
      44: aload_0
      45: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      48: dconst_1
      49: dload_1
      50: ddiv
      51: invokeinterface #4,  3            // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.setDoubleToIntegerValueConversionRatio:(D)V
      56: aload_0
      57: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      60: astore_3
      61: aload_0
      62: aload_0
      63: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      66: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      69: aload_0
      70: aload_3
      71: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      74: aload_0
      75: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      78: invokevirtual #6                  // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:()V
      81: aload_0
      82: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      85: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      88: goto          103
      91: astore        4
      93: aload_0
      94: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      97: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     100: aload         4
     102: athrow
     103: aload_0
     104: dload_1
     105: invokespecial #8                  // Method org/HdrHistogram/Histogram.setIntegerToDoubleValueConversionRatio:(D)V
     108: return
    Exception table:
       from    to  target type
           0    81    91   any
          91    93    91   any

  long getCountAtIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      71: aload_0
      72: iload_1
      73: aload_0
      74: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      77: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      82: aload_0
      83: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      86: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      91: invokevirtual #15                 // Method normalizeIndex:(III)I
      94: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      99: lstore_2
     100: aload_0
     101: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     104: aload_0
     105: iload_1
     106: aload_0
     107: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     110: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
     115: aload_0
     116: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     119: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
     124: invokevirtual #15                 // Method normalizeIndex:(III)I
     127: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
     132: lstore        4
     134: lload_2
     135: lload         4
     137: ladd
     138: lstore        6
     140: aload_0
     141: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     144: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     147: lload         6
     149: lreturn
     150: astore        8
     152: aload_0
     153: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     156: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     159: aload         8
     161: athrow
    Exception table:
       from    to  target type
           0   140   150   any
         150   152   150   any

  long getCountAtNormalizedIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      71: iload_1
      72: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      77: lstore_2
      78: aload_0
      79: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      82: iload_1
      83: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      88: lstore        4
      90: lload_2
      91: lload         4
      93: ladd
      94: lstore        6
      96: aload_0
      97: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     100: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     103: lload         6
     105: lreturn
     106: astore        8
     108: aload_0
     109: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     112: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     115: aload         8
     117: athrow
    Exception table:
       from    to  target type
           0    96   106   any
         106   108   106   any

  void incrementCountAtIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #17                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore_2
       8: aload_0
       9: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      12: aload_0
      13: iload_1
      14: aload_0
      15: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      18: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      23: aload_0
      24: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      27: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      32: invokevirtual #15                 // Method normalizeIndex:(III)I
      35: invokeinterface #18,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.atomicIncrement:(I)V
      40: aload_0
      41: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      44: lload_2
      45: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      48: goto          64
      51: astore        4
      53: aload_0
      54: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      57: lload_2
      58: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      61: aload         4
      63: athrow
      64: return
    Exception table:
       from    to  target type
           8    40    51   any
          51    53    51   any

  void addToCountAtIndex(int, long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #17                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        4
       9: aload_0
      10: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      13: aload_0
      14: iload_1
      15: aload_0
      16: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      19: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      24: aload_0
      25: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      28: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      33: invokevirtual #15                 // Method normalizeIndex:(III)I
      36: lload_2
      37: invokeinterface #20,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.atomicAdd:(IJ)V
      42: aload_0
      43: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      46: lload         4
      48: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      51: goto          68
      54: astore        6
      56: aload_0
      57: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      60: lload         4
      62: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      65: aload         6
      67: athrow
      68: return
    Exception table:
       from    to  target type
           9    42    54   any
          54    56    54   any

  void setCountAtIndex(int, long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      71: aload_0
      72: iload_1
      73: aload_0
      74: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      77: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      82: aload_0
      83: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      86: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      91: invokevirtual #15                 // Method normalizeIndex:(III)I
      94: lload_2
      95: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
     100: aload_0
     101: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     104: aload_0
     105: iload_1
     106: aload_0
     107: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     110: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
     115: aload_0
     116: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     119: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
     124: invokevirtual #15                 // Method normalizeIndex:(III)I
     127: lconst_0
     128: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
     133: aload_0
     134: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     137: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     140: goto          155
     143: astore        4
     145: aload_0
     146: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     149: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     152: aload         4
     154: athrow
     155: return
    Exception table:
       from    to  target type
           0   133   143   any
         143   145   143   any

  void setCountAtNormalizedIndex(int, long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      71: iload_1
      72: lload_2
      73: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      78: aload_0
      79: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      82: iload_1
      83: lconst_0
      84: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      89: aload_0
      90: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      93: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      96: goto          111
      99: astore        4
     101: aload_0
     102: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     105: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     108: aload         4
     110: athrow
     111: return
    Exception table:
       from    to  target type
           0    89    99   any
          99   101    99   any

  void recordConvertedDoubleValue(double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #17                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore_3
       8: dload_1
       9: aload_0
      10: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      13: invokeinterface #22,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getDoubleToIntegerValueConversionRatio:()D
      18: dmul
      19: d2l
      20: lstore        5
      22: aload_0
      23: lload         5
      25: invokevirtual #23                 // Method countsArrayIndex:(J)I
      28: istore        7
      30: aload_0
      31: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      34: aload_0
      35: iload         7
      37: aload_0
      38: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      41: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      46: aload_0
      47: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      50: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      55: invokevirtual #15                 // Method normalizeIndex:(III)I
      58: invokeinterface #18,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.atomicIncrement:(I)V
      63: aload_0
      64: lload         5
      66: invokevirtual #24                 // Method updateMinAndMax:(J)V
      69: aload_0
      70: invokevirtual #25                 // Method incrementTotalCount:()V
      73: aload_0
      74: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      77: lload_3
      78: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      81: goto          97
      84: astore        8
      86: aload_0
      87: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      90: lload_3
      91: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      94: aload         8
      96: athrow
      97: return
    Exception table:
       from    to  target type
           8    73    84   any
          84    86    84   any

  public void recordConvertedDoubleValueWithCount(double, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #17                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: dload_1
      10: aload_0
      11: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      14: invokeinterface #22,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getDoubleToIntegerValueConversionRatio:()D
      19: dmul
      20: d2l
      21: lstore        7
      23: aload_0
      24: lload         7
      26: invokevirtual #23                 // Method countsArrayIndex:(J)I
      29: istore        9
      31: aload_0
      32: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      35: aload_0
      36: iload         9
      38: aload_0
      39: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      42: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      47: aload_0
      48: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: invokevirtual #15                 // Method normalizeIndex:(III)I
      59: lload_3
      60: invokeinterface #20,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.atomicAdd:(IJ)V
      65: aload_0
      66: lload         7
      68: invokevirtual #24                 // Method updateMinAndMax:(J)V
      71: aload_0
      72: lload_3
      73: invokevirtual #26                 // Method addToTotalCount:(J)V
      76: aload_0
      77: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      80: lload         5
      82: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      85: goto          102
      88: astore        10
      90: aload_0
      91: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      94: lload         5
      96: invokevirtual #19                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      99: aload         10
     101: athrow
     102: return
    Exception table:
       from    to  target type
           9    76    88   any
          88    90    88   any

  int getNormalizingIndexOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
       4: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
       9: ireturn

  void setNormalizingIndexOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: iconst_0
       4: aload_0
       5: invokevirtual #27                 // Method getIntegerToDoubleValueConversionRatio:()D
       8: invokespecial #28                 // Method setNormalizingIndexOffset:(IIZD)V
      11: return

  private void setNormalizingIndexOffset(int, int, boolean, double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: getstatic     #9                  // Field $assertionsDisabled:Z
      70: ifne          102
      73: aload_0
      74: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      77: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      82: aload_0
      83: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      86: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      91: if_icmpeq     102
      94: new           #12                 // class java/lang/AssertionError
      97: dup
      98: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
     101: athrow
     102: iload_1
     103: aload_0
     104: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     107: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
     112: if_icmpne     123
     115: aload_0
     116: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     119: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     122: return
     123: aload_0
     124: iload_1
     125: iload_2
     126: iload_3
     127: dload         4
     129: invokespecial #29                 // Method setNormalizingIndexOffsetForInactive:(IIZD)V
     132: aload_0
     133: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     136: astore        6
     138: aload_0
     139: aload_0
     140: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     143: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     146: aload_0
     147: aload         6
     149: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     152: aload_0
     153: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     156: invokevirtual #6                  // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:()V
     159: aload_0
     160: iload_1
     161: iload_2
     162: iload_3
     163: dload         4
     165: invokespecial #29                 // Method setNormalizingIndexOffsetForInactive:(IIZD)V
     168: aload_0
     169: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     172: astore        6
     174: aload_0
     175: aload_0
     176: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     179: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     182: aload_0
     183: aload         6
     185: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     188: aload_0
     189: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     192: invokevirtual #6                  // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:()V
     195: aload_0
     196: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     199: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     202: goto          217
     205: astore        7
     207: aload_0
     208: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     211: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     214: aload         7
     216: athrow
     217: return
    Exception table:
       from    to  target type
           0   115   205   any
         123   195   205   any
         205   207   205   any

  private void setNormalizingIndexOffsetForInactive(int, int, boolean, double);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
       6: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      11: aload_0
      12: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      15: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      20: invokevirtual #15                 // Method normalizeIndex:(III)I
      23: istore        6
      25: aload_0
      26: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      29: iload         6
      31: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      36: lstore        7
      38: aload_0
      39: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      42: iload         6
      44: lconst_0
      45: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      50: aload_0
      51: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      54: iload_1
      55: invokeinterface #30,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.setNormalizingIndexOffset:(I)V
      60: iload_2
      61: ifle          75
      64: iload_3
      65: ifeq          75
      68: aload_0
      69: iload_2
      70: iload         6
      72: invokespecial #31                 // Method shiftLowestInactiveHalfBucketContentsLeft:(II)V
      75: aload_0
      76: iconst_0
      77: aload_0
      78: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      81: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      86: aload_0
      87: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      90: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      95: invokevirtual #15                 // Method normalizeIndex:(III)I
      98: istore        6
     100: aload_0
     101: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     104: iload         6
     106: lload         7
     108: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
     113: aload_0
     114: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     117: dconst_1
     118: dload         4
     120: ddiv
     121: invokeinterface #4,  3            // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.setDoubleToIntegerValueConversionRatio:(D)V
     126: return

  private void shiftLowestInactiveHalfBucketContentsLeft(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #32                 // Field subBucketHalfCountMagnitude:I
       5: ishr
       6: istore_3
       7: iconst_1
       8: istore        4
      10: iload         4
      12: aload_0
      13: getfield      #33                 // Field subBucketHalfCount:I
      16: if_icmpge     111
      19: aload_0
      20: iload         4
      22: invokevirtual #34                 // Method valueFromIndex:(I)J
      25: iload_3
      26: lshl
      27: lstore        5
      29: aload_0
      30: lload         5
      32: invokevirtual #23                 // Method countsArrayIndex:(J)I
      35: istore        7
      37: aload_0
      38: iload         7
      40: aload_0
      41: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      44: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
      49: aload_0
      50: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      53: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      58: invokevirtual #15                 // Method normalizeIndex:(III)I
      61: istore        8
      63: aload_0
      64: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      67: iload         4
      69: iload_2
      70: iadd
      71: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      76: lstore        9
      78: aload_0
      79: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      82: iload         8
      84: lload         9
      86: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      91: aload_0
      92: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      95: iload         4
      97: iload_2
      98: iadd
      99: lconst_0
     100: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
     105: iinc          4, 1
     108: goto          10
     111: return

  void shiftNormalizingIndexByOffset(int, boolean, double);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: invokevirtual #35                 // Method getNormalizingIndexOffset:()I
      71: iload_1
      72: iadd
      73: istore        5
      75: aload_0
      76: iload         5
      78: iload_1
      79: iload_2
      80: dload_3
      81: invokespecial #28                 // Method setNormalizingIndexOffset:(IIZD)V
      84: aload_0
      85: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      88: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      91: goto          106
      94: astore        6
      96: aload_0
      97: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     100: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     103: aload         6
     105: athrow
     106: return
    Exception table:
       from    to  target type
           0    84    94   any
          94    96    94   any

  org.HdrHistogram.ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset allocateArray(int, int);
    Code:
       0: new           #36                 // class org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset
       3: dup
       4: iload_1
       5: iload_2
       6: invokespecial #37                 // Method org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset."<init>":(II)V
       9: areturn

  void resize(long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: lload_1
      69: invokevirtual #38                 // Method determineArrayLengthNeeded:(J)I
      72: istore_3
      73: iload_3
      74: aload_0
      75: getfield      #10                 // Field countsArrayLength:I
      78: isub
      79: istore        4
      81: iload         4
      83: ifgt          94
      86: aload_0
      87: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      90: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      93: return
      94: aload_0
      95: iload_3
      96: aload_0
      97: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     100: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
     105: invokevirtual #39                 // Method allocateArray:(II)Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     108: astore        5
     110: aload_0
     111: iload_3
     112: aload_0
     113: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     116: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
     121: invokevirtual #39                 // Method allocateArray:(II)Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     124: astore        6
     126: aload_0
     127: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     130: astore        7
     132: aload_0
     133: aload         5
     135: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     138: aload_0
     139: aload         7
     141: iload         4
     143: invokevirtual #40                 // Method copyInactiveCountsContentsOnResize:(Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;I)V
     146: aload_0
     147: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     150: astore        8
     152: aload_0
     153: aload_0
     154: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     157: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     160: aload_0
     161: aload         8
     163: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     166: aload_0
     167: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     170: invokevirtual #6                  // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:()V
     173: aload_0
     174: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     177: astore        7
     179: aload_0
     180: aload         6
     182: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     185: aload_0
     186: aload         7
     188: iload         4
     190: invokevirtual #40                 // Method copyInactiveCountsContentsOnResize:(Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;I)V
     193: aload_0
     194: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     197: astore        8
     199: aload_0
     200: aload_0
     201: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     204: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     207: aload_0
     208: aload         8
     210: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     213: aload_0
     214: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     217: invokevirtual #6                  // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:()V
     220: aload_0
     221: lload_1
     222: invokevirtual #41                 // Method establishSize:(J)V
     225: getstatic     #9                  // Field $assertionsDisabled:Z
     228: ifne          255
     231: aload_0
     232: getfield      #10                 // Field countsArrayLength:I
     235: aload_0
     236: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     239: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
     244: if_icmpeq     255
     247: new           #12                 // class java/lang/AssertionError
     250: dup
     251: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
     254: athrow
     255: getstatic     #9                  // Field $assertionsDisabled:Z
     258: ifne          285
     261: aload_0
     262: getfield      #10                 // Field countsArrayLength:I
     265: aload_0
     266: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     269: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
     274: if_icmpeq     285
     277: new           #12                 // class java/lang/AssertionError
     280: dup
     281: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
     284: athrow
     285: aload_0
     286: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     289: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     292: goto          307
     295: astore        9
     297: aload_0
     298: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     301: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     304: aload         9
     306: athrow
     307: return
    Exception table:
       from    to  target type
           0    86   295   any
          94   285   295   any
         295   297   295   any

  void copyInactiveCountsContentsOnResize(org.HdrHistogram.ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset, int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokeinterface #14,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.getNormalizingIndexOffset:()I
       8: aload_1
       9: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      14: invokevirtual #15                 // Method normalizeIndex:(III)I
      17: istore_3
      18: iload_3
      19: ifne          64
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_1
      28: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      33: if_icmpge     61
      36: aload_0
      37: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      40: iload         4
      42: aload_1
      43: iload         4
      45: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      50: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      55: iinc          4, 1
      58: goto          25
      61: goto          143
      64: iconst_0
      65: istore        4
      67: iload         4
      69: iload_3
      70: if_icmpge     98
      73: aload_0
      74: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      77: iload         4
      79: aload_1
      80: iload         4
      82: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
      87: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      92: iinc          4, 1
      95: goto          67
      98: iload_3
      99: istore        4
     101: iload         4
     103: aload_1
     104: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
     109: if_icmpge     143
     112: iload         4
     114: iload_2
     115: iadd
     116: istore        5
     118: aload_0
     119: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
     122: iload         5
     124: aload_1
     125: iload         4
     127: invokeinterface #16,  2           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.get:(I)J
     132: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
     137: iinc          4, 1
     140: goto          101
     143: return

  public void setAutoResize(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #42                 // Field autoResize:Z
       5: return

  void clearCounts();
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: getstatic     #9                  // Field $assertionsDisabled:Z
      10: ifne          37
      13: aload_0
      14: getfield      #10                 // Field countsArrayLength:I
      17: aload_0
      18: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      21: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      26: if_icmpeq     37
      29: new           #12                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #9                  // Field $assertionsDisabled:Z
      40: ifne          67
      43: aload_0
      44: getfield      #10                 // Field countsArrayLength:I
      47: aload_0
      48: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      51: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      56: if_icmpeq     67
      59: new           #12                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: iconst_0
      68: istore_1
      69: iload_1
      70: aload_0
      71: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      74: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      79: if_icmpge     110
      82: aload_0
      83: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      86: iload_1
      87: lconst_0
      88: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
      93: aload_0
      94: getfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      97: iload_1
      98: lconst_0
      99: invokeinterface #21,  4           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.lazySet:(IJ)V
     104: iinc          1, 1
     107: goto          69
     110: getstatic     #43                 // Field totalCountUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     113: aload_0
     114: lconst_0
     115: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.set:(Ljava/lang/Object;J)V
     118: aload_0
     119: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     122: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     125: goto          138
     128: astore_2
     129: aload_0
     130: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
     133: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     136: aload_2
     137: athrow
     138: return
    Exception table:
       from    to  target type
           0   118   128   any

  public org.HdrHistogram.ConcurrentHistogram copy();
    Code:
       0: new           #45                 // class org/HdrHistogram/ConcurrentHistogram
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method "<init>":(Lorg/HdrHistogram/AbstractHistogram;)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #47                 // Method add:(Lorg/HdrHistogram/AbstractHistogram;)V
      14: aload_1
      15: areturn

  public org.HdrHistogram.ConcurrentHistogram copyCorrectedForCoordinatedOmission(long);
    Code:
       0: new           #45                 // class org/HdrHistogram/ConcurrentHistogram
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method "<init>":(Lorg/HdrHistogram/AbstractHistogram;)V
       8: astore_3
       9: aload_3
      10: aload_0
      11: lload_1
      12: invokevirtual #48                 // Method addWhileCorrectingForCoordinatedOmission:(Lorg/HdrHistogram/AbstractHistogram;J)V
      15: aload_3
      16: areturn

  public long getTotalCount();
    Code:
       0: getstatic     #43                 // Field totalCountUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.get:(Ljava/lang/Object;)J
       7: lreturn

  void setTotalCount(long);
    Code:
       0: getstatic     #43                 // Field totalCountUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.set:(Ljava/lang/Object;J)V
       8: return

  void incrementTotalCount();
    Code:
       0: getstatic     #43                 // Field totalCountUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.incrementAndGet:(Ljava/lang/Object;)J
       7: pop2
       8: return

  void addToTotalCount(long);
    Code:
       0: getstatic     #43                 // Field totalCountUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
       8: pop2
       9: return

  int _getEstimatedFootprintInBytes();
    Code:
       0: sipush        512
       3: bipush        16
       5: aload_0
       6: getfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
       9: invokeinterface #11,  1           // InterfaceMethod org/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset.length:()I
      14: imul
      15: iadd
      16: ireturn

  public org.HdrHistogram.ConcurrentHistogram(int);
    Code:
       0: aload_0
       1: lconst_1
       2: ldc2_w        #52                 // long 2l
       5: iload_1
       6: invokespecial #54                 // Method "<init>":(JJI)V
       9: aload_0
      10: iconst_1
      11: invokevirtual #55                 // Method setAutoResize:(Z)V
      14: return

  public org.HdrHistogram.ConcurrentHistogram(long, int);
    Code:
       0: aload_0
       1: lconst_1
       2: lload_1
       3: iload_3
       4: invokespecial #54                 // Method "<init>":(JJI)V
       7: return

  public org.HdrHistogram.ConcurrentHistogram(long, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: iconst_1
       6: invokespecial #56                 // Method "<init>":(JJIZ)V
       9: return

  public org.HdrHistogram.ConcurrentHistogram(org.HdrHistogram.AbstractHistogram);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #57                 // Method "<init>":(Lorg/HdrHistogram/AbstractHistogram;Z)V
       6: return

  org.HdrHistogram.ConcurrentHistogram(org.HdrHistogram.AbstractHistogram, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #58                 // Method org/HdrHistogram/Histogram."<init>":(Lorg/HdrHistogram/AbstractHistogram;Z)V
       6: aload_0
       7: new           #59                 // class org/HdrHistogram/WriterReaderPhaser
      10: dup
      11: invokespecial #60                 // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      14: putfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      17: iload_2
      18: ifeq          53
      21: aload_0
      22: new           #36                 // class org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset
      25: dup
      26: aload_0
      27: getfield      #10                 // Field countsArrayLength:I
      30: iconst_0
      31: invokespecial #37                 // Method org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset."<init>":(II)V
      34: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      37: aload_0
      38: new           #36                 // class org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset
      41: dup
      42: aload_0
      43: getfield      #10                 // Field countsArrayLength:I
      46: iconst_0
      47: invokespecial #37                 // Method org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset."<init>":(II)V
      50: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      53: aload_0
      54: bipush        8
      56: putfield      #61                 // Field wordSizeInBytes:I
      59: return

  org.HdrHistogram.ConcurrentHistogram(long, long, int, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: iconst_0
       6: invokespecial #62                 // Method org/HdrHistogram/Histogram."<init>":(JJIZ)V
       9: aload_0
      10: new           #59                 // class org/HdrHistogram/WriterReaderPhaser
      13: dup
      14: invokespecial #60                 // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      17: putfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      20: iload         6
      22: ifeq          57
      25: aload_0
      26: new           #36                 // class org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset
      29: dup
      30: aload_0
      31: getfield      #10                 // Field countsArrayLength:I
      34: iconst_0
      35: invokespecial #37                 // Method org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset."<init>":(II)V
      38: putfield      #5                  // Field activeCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      41: aload_0
      42: new           #36                 // class org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset
      45: dup
      46: aload_0
      47: getfield      #10                 // Field countsArrayLength:I
      50: iconst_0
      51: invokespecial #37                 // Method org/HdrHistogram/ConcurrentHistogram$AtomicLongArrayWithNormalizingOffset."<init>":(II)V
      54: putfield      #3                  // Field inactiveCounts:Lorg/HdrHistogram/ConcurrentHistogram$ConcurrentArrayWithNormalizingOffset;
      57: aload_0
      58: bipush        8
      60: putfield      #61                 // Field wordSizeInBytes:I
      63: return

  public static org.HdrHistogram.ConcurrentHistogram decodeFromByteBuffer(java.nio.ByteBuffer, long);
    Code:
       0: aload_0
       1: ldc           #45                 // class org/HdrHistogram/ConcurrentHistogram
       3: lload_1
       4: invokestatic  #63                 // Method decodeFromByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/AbstractHistogram;
       7: checkcast     #45                 // class org/HdrHistogram/ConcurrentHistogram
      10: areturn

  public static org.HdrHistogram.ConcurrentHistogram decodeFromCompressedByteBuffer(java.nio.ByteBuffer, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: ldc           #45                 // class org/HdrHistogram/ConcurrentHistogram
       3: lload_1
       4: invokestatic  #64                 // Method decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/AbstractHistogram;
       7: checkcast     #45                 // class org/HdrHistogram/ConcurrentHistogram
      10: areturn

  public static org.HdrHistogram.ConcurrentHistogram fromString(java.lang.String) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method org/HdrHistogram/Base64Helper.parseBase64Binary:(Ljava/lang/String;)[B
       4: invokestatic  #66                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       7: lconst_0
       8: invokestatic  #67                 // Method decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;J)Lorg/HdrHistogram/ConcurrentHistogram;
      11: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: new           #59                 // class org/HdrHistogram/WriterReaderPhaser
       8: dup
       9: invokespecial #60                 // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      12: putfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      15: return

  synchronized void fillBufferFromCountsArray(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #2                  // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: aload_0
       8: aload_1
       9: invokespecial #69                 // Method org/HdrHistogram/Histogram.fillBufferFromCountsArray:(Ljava/nio/ByteBuffer;)V
      12: aload_0
      13: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      16: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      19: goto          32
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field wrp:Lorg/HdrHistogram/WriterReaderPhaser;
      27: invokevirtual #7                  // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      30: aload_2
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    12    22   any

  public org.HdrHistogram.Histogram copyCorrectedForCoordinatedOmission(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #70                 // Method copyCorrectedForCoordinatedOmission:(J)Lorg/HdrHistogram/ConcurrentHistogram;
       5: areturn

  public org.HdrHistogram.Histogram copy();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method copy:()Lorg/HdrHistogram/ConcurrentHistogram;
       4: areturn

  public org.HdrHistogram.AbstractHistogram copyCorrectedForCoordinatedOmission(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #70                 // Method copyCorrectedForCoordinatedOmission:(J)Lorg/HdrHistogram/ConcurrentHistogram;
       5: areturn

  public org.HdrHistogram.AbstractHistogram copy();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method copy:()Lorg/HdrHistogram/ConcurrentHistogram;
       4: areturn

  static {};
    Code:
       0: ldc           #45                 // class org/HdrHistogram/ConcurrentHistogram
       2: invokevirtual #72                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: ldc           #45                 // class org/HdrHistogram/ConcurrentHistogram
      18: ldc           #73                 // String totalCount
      20: invokestatic  #74                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      23: putstatic     #43                 // Field totalCountUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      26: return
}
