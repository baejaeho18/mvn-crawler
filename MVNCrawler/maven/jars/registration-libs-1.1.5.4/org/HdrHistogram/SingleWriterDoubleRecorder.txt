Compiled from "SingleWriterDoubleRecorder.java"
public class org.HdrHistogram.SingleWriterDoubleRecorder implements org.HdrHistogram.DoubleValueRecorder {
  private static java.util.concurrent.atomic.AtomicLong instanceIdSequencer;

  private final long instanceId;

  private final org.HdrHistogram.WriterReaderPhaser recordingPhaser;

  private volatile org.HdrHistogram.DoubleHistogram activeHistogram;

  private org.HdrHistogram.DoubleHistogram inactiveHistogram;

  public org.HdrHistogram.SingleWriterDoubleRecorder(int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      11: putfield      #4                  // Field instanceId:J
      14: aload_0
      15: new           #5                  // class org/HdrHistogram/WriterReaderPhaser
      18: dup
      19: invokespecial #6                  // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      22: putfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      25: aload_0
      26: iload_2
      27: ifeq          47
      30: new           #8                  // class org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram
      33: dup
      34: aload_0
      35: aload_0
      36: getfield      #4                  // Field instanceId:J
      39: iload_1
      40: aconst_null
      41: invokespecial #9                  // Method org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram."<init>":(Lorg/HdrHistogram/SingleWriterDoubleRecorder;JILorg/HdrHistogram/SingleWriterDoubleRecorder$1;)V
      44: goto          61
      47: new           #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      50: dup
      51: aload_0
      52: aload_0
      53: getfield      #4                  // Field instanceId:J
      56: iload_1
      57: aconst_null
      58: invokespecial #11                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram."<init>":(Lorg/HdrHistogram/SingleWriterDoubleRecorder;JILorg/HdrHistogram/SingleWriterDoubleRecorder$1;)V
      61: putfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      64: aload_0
      65: aconst_null
      66: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      69: aload_0
      70: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      73: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      76: invokevirtual #15                 // Method org/HdrHistogram/DoubleHistogram.setStartTimeStamp:(J)V
      79: return

  public org.HdrHistogram.SingleWriterDoubleRecorder(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #16                 // Method "<init>":(IZ)V
       6: return

  public org.HdrHistogram.SingleWriterDoubleRecorder(long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      11: putfield      #4                  // Field instanceId:J
      14: aload_0
      15: new           #5                  // class org/HdrHistogram/WriterReaderPhaser
      18: dup
      19: invokespecial #6                  // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      22: putfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      25: aload_0
      26: new           #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      29: dup
      30: aload_0
      31: aload_0
      32: getfield      #4                  // Field instanceId:J
      35: lload_1
      36: iload_3
      37: aconst_null
      38: invokespecial #17                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram."<init>":(Lorg/HdrHistogram/SingleWriterDoubleRecorder;JJILorg/HdrHistogram/SingleWriterDoubleRecorder$1;)V
      41: putfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      44: aload_0
      45: aconst_null
      46: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      49: aload_0
      50: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      53: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      56: invokevirtual #15                 // Method org/HdrHistogram/DoubleHistogram.setStartTimeStamp:(J)V
      59: return

  public void recordValue(double);
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore_3
       8: aload_0
       9: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      12: dload_1
      13: invokevirtual #19                 // Method org/HdrHistogram/DoubleHistogram.recordValue:(D)V
      16: aload_0
      17: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      20: lload_3
      21: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      24: goto          40
      27: astore        5
      29: aload_0
      30: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      33: lload_3
      34: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      37: aload         5
      39: athrow
      40: return
    Exception table:
       from    to  target type
           8    16    27   any
          27    29    27   any

  public void recordValueWithCount(double, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: aload_0
      10: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      13: dload_1
      14: lload_3
      15: invokevirtual #21                 // Method org/HdrHistogram/DoubleHistogram.recordValueWithCount:(DJ)V
      18: aload_0
      19: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      22: lload         5
      24: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      27: goto          44
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      36: lload         5
      38: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      41: aload         7
      43: athrow
      44: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    32    30   any

  public void recordValueWithExpectedInterval(double, double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: aload_0
      10: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      13: dload_1
      14: dload_3
      15: invokevirtual #22                 // Method org/HdrHistogram/DoubleHistogram.recordValueWithExpectedInterval:(DD)V
      18: aload_0
      19: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      22: lload         5
      24: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      27: goto          44
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      36: lload         5
      38: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      41: aload         7
      43: athrow
      44: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    32    30   any

  public synchronized org.HdrHistogram.DoubleHistogram getIntervalHistogram();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #23                 // Method getIntervalHistogram:(Lorg/HdrHistogram/DoubleHistogram;)Lorg/HdrHistogram/DoubleHistogram;
       5: areturn

  public synchronized org.HdrHistogram.DoubleHistogram getIntervalHistogram(org.HdrHistogram.DoubleHistogram);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #24                 // Method getIntervalHistogram:(Lorg/HdrHistogram/DoubleHistogram;Z)Lorg/HdrHistogram/DoubleHistogram;
       6: areturn

  public synchronized org.HdrHistogram.DoubleHistogram getIntervalHistogram(org.HdrHistogram.DoubleHistogram, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #25                 // Method validateFitAsReplacementHistogram:(Lorg/HdrHistogram/DoubleHistogram;Z)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      11: aload_0
      12: invokespecial #26                 // Method performIntervalSample:()V
      15: aload_0
      16: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      19: astore_3
      20: aload_0
      21: aconst_null
      22: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      25: aload_3
      26: areturn

  public synchronized void getIntervalHistogramInto(org.HdrHistogram.DoubleHistogram);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method performIntervalSample:()V
       4: aload_0
       5: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
       8: aload_1
       9: invokevirtual #27                 // Method org/HdrHistogram/DoubleHistogram.copyInto:(Lorg/HdrHistogram/DoubleHistogram;)V
      12: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method performIntervalSample:()V
       4: aload_0
       5: invokespecial #26                 // Method performIntervalSample:()V
       8: return

  private void performIntervalSample();
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #28                 // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: aload_0
       8: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      11: ifnonnull     94
      14: aload_0
      15: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      18: instanceof    #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      21: ifeq          47
      24: aload_0
      25: new           #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      28: dup
      29: aload_0
      30: aload_0
      31: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      34: checkcast     #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      37: aconst_null
      38: invokespecial #29                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram."<init>":(Lorg/HdrHistogram/SingleWriterDoubleRecorder;Lorg/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram;Lorg/HdrHistogram/SingleWriterDoubleRecorder$1;)V
      41: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      44: goto          94
      47: aload_0
      48: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      51: instanceof    #8                  // class org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram
      54: ifeq          84
      57: aload_0
      58: new           #8                  // class org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram
      61: dup
      62: aload_0
      63: aload_0
      64: getfield      #4                  // Field instanceId:J
      67: aload_0
      68: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      71: invokevirtual #30                 // Method org/HdrHistogram/DoubleHistogram.getNumberOfSignificantValueDigits:()I
      74: aconst_null
      75: invokespecial #9                  // Method org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram."<init>":(Lorg/HdrHistogram/SingleWriterDoubleRecorder;JILorg/HdrHistogram/SingleWriterDoubleRecorder$1;)V
      78: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      81: goto          94
      84: new           #31                 // class java/lang/IllegalStateException
      87: dup
      88: ldc           #32                 // String Unexpected internal histogram type for activeHistogram
      90: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
      98: invokevirtual #34                 // Method org/HdrHistogram/DoubleHistogram.reset:()V
     101: aload_0
     102: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
     105: astore_1
     106: aload_0
     107: aload_0
     108: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
     111: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
     114: aload_0
     115: aload_1
     116: putfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
     119: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
     122: lstore_2
     123: aload_0
     124: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
     127: lload_2
     128: invokevirtual #15                 // Method org/HdrHistogram/DoubleHistogram.setStartTimeStamp:(J)V
     131: aload_0
     132: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/DoubleHistogram;
     135: lload_2
     136: invokevirtual #35                 // Method org/HdrHistogram/DoubleHistogram.setEndTimeStamp:(J)V
     139: aload_0
     140: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     143: ldc2_w        #36                 // long 500000l
     146: invokevirtual #38                 // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:(J)V
     149: aload_0
     150: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     153: invokevirtual #39                 // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     156: goto          171
     159: astore        4
     161: aload_0
     162: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     165: invokevirtual #39                 // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     168: aload         4
     170: athrow
     171: return
    Exception table:
       from    to  target type
           0   149   159   any
         159   161   159   any

  private void validateFitAsReplacementHistogram(org.HdrHistogram.DoubleHistogram, boolean);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_1
       3: ifnonnull     11
       6: iconst_0
       7: istore_3
       8: goto          82
      11: aload_1
      12: instanceof    #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      15: ifeq          48
      18: iload_2
      19: ifeq          43
      22: aload_1
      23: checkcast     #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      26: invokestatic  #40                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram.access$400:(Lorg/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram;)J
      29: aload_0
      30: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      33: checkcast     #10                 // class org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram
      36: invokestatic  #40                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram.access$400:(Lorg/HdrHistogram/SingleWriterDoubleRecorder$InternalDoubleHistogram;)J
      39: lcmp
      40: ifne          48
      43: iconst_0
      44: istore_3
      45: goto          82
      48: aload_1
      49: instanceof    #8                  // class org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram
      52: ifeq          82
      55: iload_2
      56: ifeq          80
      59: aload_1
      60: checkcast     #8                  // class org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram
      63: invokestatic  #41                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram.access$500:(Lorg/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram;)J
      66: aload_0
      67: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/DoubleHistogram;
      70: checkcast     #8                  // class org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram
      73: invokestatic  #41                 // Method org/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram.access$500:(Lorg/HdrHistogram/SingleWriterDoubleRecorder$PackedInternalDoubleHistogram;)J
      76: lcmp
      77: ifne          82
      80: iconst_0
      81: istore_3
      82: iload_3
      83: ifeq          124
      86: new           #42                 // class java/lang/IllegalArgumentException
      89: dup
      90: new           #43                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #45                 // String replacement histogram must have been obtained via a previous getIntervalHistogram() call from this
      99: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     106: invokevirtual #48                 // Method java/lang/Class.getName:()Ljava/lang/String;
     109: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #49                 // String  instance
     114: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: return

  static {};
    Code:
       0: new           #52                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #53                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
