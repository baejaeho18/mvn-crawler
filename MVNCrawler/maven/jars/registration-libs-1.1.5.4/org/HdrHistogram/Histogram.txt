Compiled from "Histogram.java"
public class org.HdrHistogram.Histogram extends org.HdrHistogram.AbstractHistogram {
  long totalCount;

  long[] counts;

  int normalizingIndexOffset;

  long getCountAtIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #2                  // Field normalizingIndexOffset:I
      10: aload_0
      11: getfield      #3                  // Field countsArrayLength:I
      14: invokevirtual #4                  // Method normalizeIndex:(III)I
      17: laload
      18: lreturn

  long getCountAtNormalizedIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: iload_1
       5: laload
       6: lreturn

  void incrementCountAtIndex(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #2                  // Field normalizingIndexOffset:I
      10: aload_0
      11: getfield      #3                  // Field countsArrayLength:I
      14: invokevirtual #4                  // Method normalizeIndex:(III)I
      17: dup2
      18: laload
      19: lconst_1
      20: ladd
      21: lastore
      22: return

  void addToCountAtIndex(int, long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #2                  // Field normalizingIndexOffset:I
      10: aload_0
      11: getfield      #3                  // Field countsArrayLength:I
      14: invokevirtual #4                  // Method normalizeIndex:(III)I
      17: dup2
      18: laload
      19: lload_2
      20: ladd
      21: lastore
      22: return

  void setCountAtIndex(int, long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #2                  // Field normalizingIndexOffset:I
      10: aload_0
      11: getfield      #3                  // Field countsArrayLength:I
      14: invokevirtual #4                  // Method normalizeIndex:(III)I
      17: lload_2
      18: lastore
      19: return

  void setCountAtNormalizedIndex(int, long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: iload_1
       5: lload_2
       6: lastore
       7: return

  int getNormalizingIndexOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field normalizingIndexOffset:I
       4: ireturn

  void setNormalizingIndexOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field normalizingIndexOffset:I
       5: return

  void setIntegerToDoubleValueConversionRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #5                  // Method nonConcurrentSetIntegerToDoubleValueConversionRatio:(D)V
       5: return

  void shiftNormalizingIndexByOffset(int, boolean, double);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #6                  // Method nonConcurrentNormalizingIndexShift:(IZ)V
       6: return

  void clearCounts();
    Code:
       0: aload_0
       1: getfield      #1                  // Field counts:[J
       4: lconst_0
       5: invokestatic  #7                  // Method java/util/Arrays.fill:([JJ)V
       8: aload_0
       9: lconst_0
      10: putfield      #8                  // Field totalCount:J
      13: return

  public org.HdrHistogram.Histogram copy();
    Code:
       0: new           #9                  // class org/HdrHistogram/Histogram
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method "<init>":(Lorg/HdrHistogram/AbstractHistogram;)V
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokevirtual #11                 // Method add:(Lorg/HdrHistogram/AbstractHistogram;)V
      14: aload_1
      15: areturn

  public org.HdrHistogram.Histogram copyCorrectedForCoordinatedOmission(long);
    Code:
       0: new           #9                  // class org/HdrHistogram/Histogram
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method "<init>":(Lorg/HdrHistogram/AbstractHistogram;)V
       8: astore_3
       9: aload_3
      10: aload_0
      11: lload_1
      12: invokevirtual #12                 // Method addWhileCorrectingForCoordinatedOmission:(Lorg/HdrHistogram/AbstractHistogram;J)V
      15: aload_3
      16: areturn

  public long getTotalCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field totalCount:J
       4: lreturn

  void setTotalCount(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field totalCount:J
       5: return

  void incrementTotalCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field totalCount:J
       5: lconst_1
       6: ladd
       7: putfield      #8                  // Field totalCount:J
      10: return

  void addToTotalCount(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field totalCount:J
       5: lload_1
       6: ladd
       7: putfield      #8                  // Field totalCount:J
      10: return

  int _getEstimatedFootprintInBytes();
    Code:
       0: sipush        512
       3: bipush        8
       5: aload_0
       6: getfield      #1                  // Field counts:[J
       9: arraylength
      10: imul
      11: iadd
      12: ireturn

  void resize(long);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: getfield      #2                  // Field normalizingIndexOffset:I
       6: aload_0
       7: getfield      #3                  // Field countsArrayLength:I
      10: invokevirtual #4                  // Method normalizeIndex:(III)I
      13: istore_3
      14: aload_0
      15: lload_1
      16: invokevirtual #13                 // Method establishSize:(J)V
      19: aload_0
      20: getfield      #3                  // Field countsArrayLength:I
      23: aload_0
      24: getfield      #1                  // Field counts:[J
      27: arraylength
      28: isub
      29: istore        4
      31: aload_0
      32: aload_0
      33: getfield      #1                  // Field counts:[J
      36: aload_0
      37: getfield      #3                  // Field countsArrayLength:I
      40: invokestatic  #14                 // Method java/util/Arrays.copyOf:([JI)[J
      43: putfield      #1                  // Field counts:[J
      46: iload_3
      47: ifeq          94
      50: iload_3
      51: iload         4
      53: iadd
      54: istore        5
      56: aload_0
      57: getfield      #3                  // Field countsArrayLength:I
      60: iload         4
      62: isub
      63: iload_3
      64: isub
      65: istore        6
      67: aload_0
      68: getfield      #1                  // Field counts:[J
      71: iload_3
      72: aload_0
      73: getfield      #1                  // Field counts:[J
      76: iload         5
      78: iload         6
      80: invokestatic  #15                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      83: aload_0
      84: getfield      #1                  // Field counts:[J
      87: iload_3
      88: iload         5
      90: lconst_0
      91: invokestatic  #16                 // Method java/util/Arrays.fill:([JIIJ)V
      94: return

  public org.HdrHistogram.Histogram(int);
    Code:
       0: aload_0
       1: lconst_1
       2: ldc2_w        #17                 // long 2l
       5: iload_1
       6: invokespecial #19                 // Method "<init>":(JJI)V
       9: aload_0
      10: iconst_1
      11: invokevirtual #20                 // Method setAutoResize:(Z)V
      14: return

  public org.HdrHistogram.Histogram(long, int);
    Code:
       0: aload_0
       1: lconst_1
       2: lload_1
       3: iload_3
       4: invokespecial #19                 // Method "<init>":(JJI)V
       7: return

  public org.HdrHistogram.Histogram(long, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: iconst_1
       6: invokespecial #21                 // Method "<init>":(JJIZ)V
       9: return

  public org.HdrHistogram.Histogram(org.HdrHistogram.AbstractHistogram);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #22                 // Method "<init>":(Lorg/HdrHistogram/AbstractHistogram;Z)V
       6: return

  org.HdrHistogram.Histogram(org.HdrHistogram.AbstractHistogram, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method org/HdrHistogram/AbstractHistogram."<init>":(Lorg/HdrHistogram/AbstractHistogram;)V
       5: iload_2
       6: ifeq          19
       9: aload_0
      10: aload_0
      11: getfield      #3                  // Field countsArrayLength:I
      14: newarray       long
      16: putfield      #1                  // Field counts:[J
      19: aload_0
      20: bipush        8
      22: putfield      #24                 // Field wordSizeInBytes:I
      25: return

  org.HdrHistogram.Histogram(long, long, int, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iload         5
       5: invokespecial #25                 // Method org/HdrHistogram/AbstractHistogram."<init>":(JJI)V
       8: iload         6
      10: ifeq          23
      13: aload_0
      14: aload_0
      15: getfield      #3                  // Field countsArrayLength:I
      18: newarray       long
      20: putfield      #1                  // Field counts:[J
      23: aload_0
      24: bipush        8
      26: putfield      #24                 // Field wordSizeInBytes:I
      29: return

  public static org.HdrHistogram.Histogram decodeFromByteBuffer(java.nio.ByteBuffer, long);
    Code:
       0: aload_0
       1: ldc           #9                  // class org/HdrHistogram/Histogram
       3: lload_1
       4: invokestatic  #26                 // Method decodeFromByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/AbstractHistogram;
       7: checkcast     #9                  // class org/HdrHistogram/Histogram
      10: areturn

  public static org.HdrHistogram.Histogram decodeFromCompressedByteBuffer(java.nio.ByteBuffer, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: ldc           #9                  // class org/HdrHistogram/Histogram
       3: lload_1
       4: invokestatic  #27                 // Method decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/AbstractHistogram;
       7: checkcast     #9                  // class org/HdrHistogram/Histogram
      10: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: return

  public static org.HdrHistogram.Histogram fromString(java.lang.String) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/HdrHistogram/Base64Helper.parseBase64Binary:(Ljava/lang/String;)[B
       4: invokestatic  #30                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       7: lconst_0
       8: invokestatic  #31                 // Method decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;J)Lorg/HdrHistogram/Histogram;
      11: areturn

  public org.HdrHistogram.AbstractHistogram copyCorrectedForCoordinatedOmission(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #32                 // Method copyCorrectedForCoordinatedOmission:(J)Lorg/HdrHistogram/Histogram;
       5: areturn

  public org.HdrHistogram.AbstractHistogram copy();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method copy:()Lorg/HdrHistogram/Histogram;
       4: areturn
}
