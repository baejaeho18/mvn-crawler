Compiled from "Recorder.java"
public class org.HdrHistogram.Recorder implements org.HdrHistogram.ValueRecorder {
  private static java.util.concurrent.atomic.AtomicLong instanceIdSequencer;

  private final long instanceId;

  private final org.HdrHistogram.WriterReaderPhaser recordingPhaser;

  private volatile org.HdrHistogram.Histogram activeHistogram;

  private org.HdrHistogram.Histogram inactiveHistogram;

  public org.HdrHistogram.Recorder(int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      11: putfield      #4                  // Field instanceId:J
      14: aload_0
      15: new           #5                  // class org/HdrHistogram/WriterReaderPhaser
      18: dup
      19: invokespecial #6                  // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      22: putfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      25: aload_0
      26: iload_2
      27: ifeq          46
      30: new           #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
      33: dup
      34: aload_0
      35: getfield      #4                  // Field instanceId:J
      38: iload_1
      39: aconst_null
      40: invokespecial #9                  // Method org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram."<init>":(JILorg/HdrHistogram/Recorder$1;)V
      43: goto          59
      46: new           #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      49: dup
      50: aload_0
      51: getfield      #4                  // Field instanceId:J
      54: iload_1
      55: aconst_null
      56: invokespecial #11                 // Method org/HdrHistogram/Recorder$InternalConcurrentHistogram."<init>":(JILorg/HdrHistogram/Recorder$1;)V
      59: putfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      62: aload_0
      63: aconst_null
      64: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      67: aload_0
      68: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      71: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      74: invokevirtual #15                 // Method org/HdrHistogram/Histogram.setStartTimeStamp:(J)V
      77: return

  public org.HdrHistogram.Recorder(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #16                 // Method "<init>":(IZ)V
       6: return

  public org.HdrHistogram.Recorder(long, int);
    Code:
       0: aload_0
       1: lconst_1
       2: lload_1
       3: iload_3
       4: invokespecial #17                 // Method "<init>":(JJI)V
       7: return

  public org.HdrHistogram.Recorder(long, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      11: putfield      #4                  // Field instanceId:J
      14: aload_0
      15: new           #5                  // class org/HdrHistogram/WriterReaderPhaser
      18: dup
      19: invokespecial #6                  // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      22: putfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      25: aload_0
      26: new           #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      29: dup
      30: aload_0
      31: getfield      #4                  // Field instanceId:J
      34: lload_1
      35: lload_3
      36: iload         5
      38: aconst_null
      39: invokespecial #19                 // Method org/HdrHistogram/Recorder$InternalAtomicHistogram."<init>":(JJJILorg/HdrHistogram/Recorder$1;)V
      42: putfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      45: aload_0
      46: aconst_null
      47: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      50: aload_0
      51: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      54: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      57: invokevirtual #15                 // Method org/HdrHistogram/Histogram.setStartTimeStamp:(J)V
      60: return

  public void recordValue(long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore_3
       8: aload_0
       9: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      12: lload_1
      13: invokevirtual #21                 // Method org/HdrHistogram/Histogram.recordValue:(J)V
      16: aload_0
      17: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      20: lload_3
      21: invokevirtual #22                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      24: goto          40
      27: astore        5
      29: aload_0
      30: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      33: lload_3
      34: invokevirtual #22                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      37: aload         5
      39: athrow
      40: return
    Exception table:
       from    to  target type
           8    16    27   any
          27    29    27   any

  public void recordValueWithCount(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: aload_0
      10: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      13: lload_1
      14: lload_3
      15: invokevirtual #23                 // Method org/HdrHistogram/Histogram.recordValueWithCount:(JJ)V
      18: aload_0
      19: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      22: lload         5
      24: invokevirtual #22                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      27: goto          44
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      36: lload         5
      38: invokevirtual #22                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      41: aload         7
      43: athrow
      44: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    32    30   any

  public void recordValueWithExpectedInterval(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #20                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: aload_0
      10: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      13: lload_1
      14: lload_3
      15: invokevirtual #24                 // Method org/HdrHistogram/Histogram.recordValueWithExpectedInterval:(JJ)V
      18: aload_0
      19: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      22: lload         5
      24: invokevirtual #22                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      27: goto          44
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      36: lload         5
      38: invokevirtual #22                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      41: aload         7
      43: athrow
      44: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    32    30   any

  public synchronized org.HdrHistogram.Histogram getIntervalHistogram();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #25                 // Method getIntervalHistogram:(Lorg/HdrHistogram/Histogram;)Lorg/HdrHistogram/Histogram;
       5: areturn

  public synchronized org.HdrHistogram.Histogram getIntervalHistogram(org.HdrHistogram.Histogram);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #26                 // Method getIntervalHistogram:(Lorg/HdrHistogram/Histogram;Z)Lorg/HdrHistogram/Histogram;
       6: areturn

  public synchronized org.HdrHistogram.Histogram getIntervalHistogram(org.HdrHistogram.Histogram, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #27                 // Method validateFitAsReplacementHistogram:(Lorg/HdrHistogram/Histogram;Z)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      11: aload_0
      12: invokespecial #28                 // Method performIntervalSample:()V
      15: aload_0
      16: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      19: astore_3
      20: aload_0
      21: aconst_null
      22: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      25: aload_3
      26: areturn

  public synchronized void getIntervalHistogramInto(org.HdrHistogram.Histogram);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method performIntervalSample:()V
       4: aload_0
       5: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
       8: aload_1
       9: invokevirtual #29                 // Method org/HdrHistogram/Histogram.copyInto:(Lorg/HdrHistogram/AbstractHistogram;)V
      12: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method performIntervalSample:()V
       4: aload_0
       5: invokespecial #28                 // Method performIntervalSample:()V
       8: return

  private void performIntervalSample();
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #30                 // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: aload_0
       8: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      11: ifnonnull     146
      14: aload_0
      15: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      18: instanceof    #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      21: ifeq          64
      24: aload_0
      25: new           #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      28: dup
      29: aload_0
      30: getfield      #4                  // Field instanceId:J
      33: aload_0
      34: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      37: invokevirtual #31                 // Method org/HdrHistogram/Histogram.getLowestDiscernibleValue:()J
      40: aload_0
      41: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      44: invokevirtual #32                 // Method org/HdrHistogram/Histogram.getHighestTrackableValue:()J
      47: aload_0
      48: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      51: invokevirtual #33                 // Method org/HdrHistogram/Histogram.getNumberOfSignificantValueDigits:()I
      54: aconst_null
      55: invokespecial #19                 // Method org/HdrHistogram/Recorder$InternalAtomicHistogram."<init>":(JJJILorg/HdrHistogram/Recorder$1;)V
      58: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      61: goto          146
      64: aload_0
      65: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      68: instanceof    #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      71: ifeq          100
      74: aload_0
      75: new           #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      78: dup
      79: aload_0
      80: getfield      #4                  // Field instanceId:J
      83: aload_0
      84: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      87: invokevirtual #33                 // Method org/HdrHistogram/Histogram.getNumberOfSignificantValueDigits:()I
      90: aconst_null
      91: invokespecial #11                 // Method org/HdrHistogram/Recorder$InternalConcurrentHistogram."<init>":(JILorg/HdrHistogram/Recorder$1;)V
      94: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
      97: goto          146
     100: aload_0
     101: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     104: instanceof    #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
     107: ifeq          136
     110: aload_0
     111: new           #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
     114: dup
     115: aload_0
     116: getfield      #4                  // Field instanceId:J
     119: aload_0
     120: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     123: invokevirtual #33                 // Method org/HdrHistogram/Histogram.getNumberOfSignificantValueDigits:()I
     126: aconst_null
     127: invokespecial #9                  // Method org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram."<init>":(JILorg/HdrHistogram/Recorder$1;)V
     130: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
     133: goto          146
     136: new           #34                 // class java/lang/IllegalStateException
     139: dup
     140: ldc           #35                 // String Unexpected internal histogram type for activeHistogram
     142: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: aload_0
     147: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
     150: invokevirtual #37                 // Method org/HdrHistogram/Histogram.reset:()V
     153: aload_0
     154: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
     157: astore_1
     158: aload_0
     159: aload_0
     160: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     163: putfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
     166: aload_0
     167: aload_1
     168: putfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     171: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
     174: lstore_2
     175: aload_0
     176: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     179: lload_2
     180: invokevirtual #15                 // Method org/HdrHistogram/Histogram.setStartTimeStamp:(J)V
     183: aload_0
     184: getfield      #13                 // Field inactiveHistogram:Lorg/HdrHistogram/Histogram;
     187: lload_2
     188: invokevirtual #38                 // Method org/HdrHistogram/Histogram.setEndTimeStamp:(J)V
     191: aload_0
     192: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     195: ldc2_w        #39                 // long 500000l
     198: invokevirtual #41                 // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:(J)V
     201: aload_0
     202: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     205: invokevirtual #42                 // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     208: goto          223
     211: astore        4
     213: aload_0
     214: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     217: invokevirtual #42                 // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     220: aload         4
     222: athrow
     223: return
    Exception table:
       from    to  target type
           0   201   211   any
         211   213   211   any

  private void validateFitAsReplacementHistogram(org.HdrHistogram.Histogram, boolean);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_1
       3: ifnonnull     11
       6: iconst_0
       7: istore_3
       8: goto          149
      11: aload_1
      12: instanceof    #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      15: ifeq          58
      18: aload_0
      19: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      22: instanceof    #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      25: ifeq          149
      28: iload_2
      29: ifeq          53
      32: aload_1
      33: checkcast     #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      36: invokestatic  #43                 // Method org/HdrHistogram/Recorder$InternalAtomicHistogram.access$300:(Lorg/HdrHistogram/Recorder$InternalAtomicHistogram;)J
      39: aload_0
      40: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      43: checkcast     #18                 // class org/HdrHistogram/Recorder$InternalAtomicHistogram
      46: invokestatic  #43                 // Method org/HdrHistogram/Recorder$InternalAtomicHistogram.access$300:(Lorg/HdrHistogram/Recorder$InternalAtomicHistogram;)J
      49: lcmp
      50: ifne          149
      53: iconst_0
      54: istore_3
      55: goto          149
      58: aload_1
      59: instanceof    #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      62: ifeq          105
      65: aload_0
      66: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      69: instanceof    #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      72: ifeq          149
      75: iload_2
      76: ifeq          100
      79: aload_1
      80: checkcast     #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      83: invokestatic  #44                 // Method org/HdrHistogram/Recorder$InternalConcurrentHistogram.access$400:(Lorg/HdrHistogram/Recorder$InternalConcurrentHistogram;)J
      86: aload_0
      87: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
      90: checkcast     #10                 // class org/HdrHistogram/Recorder$InternalConcurrentHistogram
      93: invokestatic  #44                 // Method org/HdrHistogram/Recorder$InternalConcurrentHistogram.access$400:(Lorg/HdrHistogram/Recorder$InternalConcurrentHistogram;)J
      96: lcmp
      97: ifne          149
     100: iconst_0
     101: istore_3
     102: goto          149
     105: aload_1
     106: instanceof    #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
     109: ifeq          149
     112: aload_0
     113: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     116: instanceof    #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
     119: ifeq          149
     122: iload_2
     123: ifeq          147
     126: aload_1
     127: checkcast     #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
     130: invokestatic  #45                 // Method org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram.access$500:(Lorg/HdrHistogram/Recorder$InternalPackedConcurrentHistogram;)J
     133: aload_0
     134: getfield      #12                 // Field activeHistogram:Lorg/HdrHistogram/Histogram;
     137: checkcast     #8                  // class org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram
     140: invokestatic  #45                 // Method org/HdrHistogram/Recorder$InternalPackedConcurrentHistogram.access$500:(Lorg/HdrHistogram/Recorder$InternalPackedConcurrentHistogram;)J
     143: lcmp
     144: ifne          149
     147: iconst_0
     148: istore_3
     149: iload_3
     150: ifeq          200
     153: new           #46                 // class java/lang/IllegalArgumentException
     156: dup
     157: new           #47                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #49                 // String replacement histogram must have been obtained via a previous getIntervalHistogram() call from this
     166: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_0
     170: invokevirtual #51                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     173: invokevirtual #52                 // Method java/lang/Class.getName:()Ljava/lang/String;
     176: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: iload_2
     180: ifeq          188
     183: ldc           #53                 // String  insatnce
     185: goto          190
     188: ldc           #54                 // String  class
     190: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     199: athrow
     200: return

  static {};
    Code:
       0: new           #57                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #58                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
