Compiled from "BaseConstructor.java"
public abstract class org.yaml.snakeyaml.constructor.BaseConstructor {
  protected final java.util.Map<org.yaml.snakeyaml.nodes.NodeId, org.yaml.snakeyaml.constructor.Construct> yamlClassConstructors;

  protected final java.util.Map<org.yaml.snakeyaml.nodes.Tag, org.yaml.snakeyaml.constructor.Construct> yamlConstructors;

  protected final java.util.Map<java.lang.String, org.yaml.snakeyaml.constructor.Construct> yamlMultiConstructors;

  protected org.yaml.snakeyaml.composer.Composer composer;

  final java.util.Map<org.yaml.snakeyaml.nodes.Node, java.lang.Object> constructedObjects;

  private final java.util.Set<org.yaml.snakeyaml.nodes.Node> recursiveObjects;

  private final java.util.ArrayList<org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple<java.util.Map<java.lang.Object, java.lang.Object>, org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple<java.lang.Object, java.lang.Object>>> maps2fill;

  private final java.util.ArrayList<org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple<java.util.Set<java.lang.Object>, java.lang.Object>> sets2fill;

  protected org.yaml.snakeyaml.nodes.Tag rootTag;

  private org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils;

  private boolean explicitPropertyUtils;

  private boolean allowDuplicateKeys;

  protected final java.util.Map<java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.TypeDescription> typeDefinitions;

  protected final java.util.Map<org.yaml.snakeyaml.nodes.Tag, java.lang.Class<? extends java.lang.Object>> typeTags;

  public org.yaml.snakeyaml.constructor.BaseConstructor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/EnumMap
       8: dup
       9: ldc           #3                  // class org/yaml/snakeyaml/nodes/NodeId
      11: invokespecial #4                  // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      14: putfield      #5                  // Field yamlClassConstructors:Ljava/util/Map;
      17: aload_0
      18: new           #6                  // class java/util/HashMap
      21: dup
      22: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      25: putfield      #8                  // Field yamlConstructors:Ljava/util/Map;
      28: aload_0
      29: new           #6                  // class java/util/HashMap
      32: dup
      33: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      36: putfield      #9                  // Field yamlMultiConstructors:Ljava/util/Map;
      39: aload_0
      40: iconst_1
      41: putfield      #10                 // Field allowDuplicateKeys:Z
      44: aload_0
      45: new           #6                  // class java/util/HashMap
      48: dup
      49: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      52: putfield      #11                 // Field constructedObjects:Ljava/util/Map;
      55: aload_0
      56: new           #12                 // class java/util/HashSet
      59: dup
      60: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      63: putfield      #14                 // Field recursiveObjects:Ljava/util/Set;
      66: aload_0
      67: new           #15                 // class java/util/ArrayList
      70: dup
      71: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      74: putfield      #17                 // Field maps2fill:Ljava/util/ArrayList;
      77: aload_0
      78: new           #15                 // class java/util/ArrayList
      81: dup
      82: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      85: putfield      #18                 // Field sets2fill:Ljava/util/ArrayList;
      88: aload_0
      89: new           #6                  // class java/util/HashMap
      92: dup
      93: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      96: putfield      #19                 // Field typeDefinitions:Ljava/util/Map;
      99: aload_0
     100: new           #6                  // class java/util/HashMap
     103: dup
     104: invokespecial #7                  // Method java/util/HashMap."<init>":()V
     107: putfield      #20                 // Field typeTags:Ljava/util/Map;
     110: aload_0
     111: aconst_null
     112: putfield      #21                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
     115: aload_0
     116: iconst_0
     117: putfield      #22                 // Field explicitPropertyUtils:Z
     120: aload_0
     121: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
     124: ldc           #23                 // class java/util/SortedMap
     126: new           #24                 // class org/yaml/snakeyaml/TypeDescription
     129: dup
     130: ldc           #23                 // class java/util/SortedMap
     132: getstatic     #25                 // Field org/yaml/snakeyaml/nodes/Tag.OMAP:Lorg/yaml/snakeyaml/nodes/Tag;
     135: ldc           #26                 // class java/util/TreeMap
     137: invokespecial #27                 // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
     140: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: aload_0
     147: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
     150: ldc           #29                 // class java/util/SortedSet
     152: new           #24                 // class org/yaml/snakeyaml/TypeDescription
     155: dup
     156: ldc           #29                 // class java/util/SortedSet
     158: getstatic     #30                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     161: ldc           #31                 // class java/util/TreeSet
     163: invokespecial #27                 // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
     166: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     171: pop
     172: return

  public void setComposer(org.yaml.snakeyaml.composer.Composer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       5: return

  public boolean checkData();
    Code:
       0: aload_0
       1: getfield      #32                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       4: invokevirtual #33                 // Method org/yaml/snakeyaml/composer/Composer.checkNode:()Z
       7: ireturn

  public java.lang.Object getData();
    Code:
       0: aload_0
       1: getfield      #32                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       4: invokevirtual #33                 // Method org/yaml/snakeyaml/composer/Composer.checkNode:()Z
       7: pop
       8: aload_0
       9: getfield      #32                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
      12: invokevirtual #34                 // Method org/yaml/snakeyaml/composer/Composer.getNode:()Lorg/yaml/snakeyaml/nodes/Node;
      15: astore_1
      16: aload_0
      17: getfield      #21                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      20: ifnull        31
      23: aload_1
      24: aload_0
      25: getfield      #21                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      28: invokevirtual #35                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      31: aload_0
      32: aload_1
      33: invokevirtual #36                 // Method constructDocument:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      36: areturn

  public java.lang.Object getSingleData(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #32                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       4: invokevirtual #37                 // Method org/yaml/snakeyaml/composer/Composer.getSingleNode:()Lorg/yaml/snakeyaml/nodes/Node;
       7: astore_2
       8: aload_2
       9: ifnull        67
      12: getstatic     #38                 // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      15: aload_2
      16: invokevirtual #39                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      19: invokevirtual #40                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      22: ifne          67
      25: ldc           #41                 // class java/lang/Object
      27: aload_1
      28: if_acmpeq     46
      31: aload_2
      32: new           #42                 // class org/yaml/snakeyaml/nodes/Tag
      35: dup
      36: aload_1
      37: invokespecial #43                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/Class;)V
      40: invokevirtual #35                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      43: goto          61
      46: aload_0
      47: getfield      #21                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      50: ifnull        61
      53: aload_2
      54: aload_0
      55: getfield      #21                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      58: invokevirtual #35                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      61: aload_0
      62: aload_2
      63: invokevirtual #36                 // Method constructDocument:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      66: areturn
      67: aconst_null
      68: areturn

  protected final java.lang.Object constructDocument(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: invokespecial #45                 // Method fillRecursive:()V
      10: aload_0
      11: getfield      #11                 // Field constructedObjects:Ljava/util/Map;
      14: invokeinterface #46,  1           // InterfaceMethod java/util/Map.clear:()V
      19: aload_0
      20: getfield      #14                 // Field recursiveObjects:Ljava/util/Set;
      23: invokeinterface #47,  1           // InterfaceMethod java/util/Set.clear:()V
      28: aload_2
      29: areturn

  private void fillRecursive();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maps2fill:Ljava/util/ArrayList;
       4: invokevirtual #48                 // Method java/util/ArrayList.isEmpty:()Z
       7: ifne          76
      10: aload_0
      11: getfield      #17                 // Field maps2fill:Ljava/util/ArrayList;
      14: invokevirtual #49                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      17: astore_1
      18: aload_1
      19: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          69
      27: aload_1
      28: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #52                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
      36: astore_2
      37: aload_2
      38: invokevirtual #53                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._2:()Ljava/lang/Object;
      41: checkcast     #52                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
      44: astore_3
      45: aload_2
      46: invokevirtual #54                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._1:()Ljava/lang/Object;
      49: checkcast     #55                 // class java/util/Map
      52: aload_3
      53: invokevirtual #54                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._1:()Ljava/lang/Object;
      56: aload_3
      57: invokevirtual #53                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._2:()Ljava/lang/Object;
      60: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: goto          18
      69: aload_0
      70: getfield      #17                 // Field maps2fill:Ljava/util/ArrayList;
      73: invokevirtual #56                 // Method java/util/ArrayList.clear:()V
      76: aload_0
      77: getfield      #18                 // Field sets2fill:Ljava/util/ArrayList;
      80: invokevirtual #48                 // Method java/util/ArrayList.isEmpty:()Z
      83: ifne          140
      86: aload_0
      87: getfield      #18                 // Field sets2fill:Ljava/util/ArrayList;
      90: invokevirtual #49                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      93: astore_1
      94: aload_1
      95: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          133
     103: aload_1
     104: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #52                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
     112: astore_2
     113: aload_2
     114: invokevirtual #54                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._1:()Ljava/lang/Object;
     117: checkcast     #57                 // class java/util/Set
     120: aload_2
     121: invokevirtual #53                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._2:()Ljava/lang/Object;
     124: invokeinterface #58,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     129: pop
     130: goto          94
     133: aload_0
     134: getfield      #18                 // Field sets2fill:Ljava/util/ArrayList;
     137: invokevirtual #56                 // Method java/util/ArrayList.clear:()V
     140: return

  protected java.lang.Object constructObject(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #11                 // Field constructedObjects:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #59,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_0
      14: getfield      #11                 // Field constructedObjects:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn
      24: aload_0
      25: aload_1
      26: invokevirtual #61                 // Method constructObjectNoCheck:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      29: areturn

  protected java.lang.Object constructObjectNoCheck(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #14                 // Field recursiveObjects:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          29
      13: new           #63                 // class org/yaml/snakeyaml/constructor/ConstructorException
      16: dup
      17: aconst_null
      18: aconst_null
      19: ldc           #64                 // String found unconstructable recursive node
      21: aload_1
      22: invokevirtual #65                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      25: invokespecial #66                 // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
      28: athrow
      29: aload_0
      30: getfield      #14                 // Field recursiveObjects:Ljava/util/Set;
      33: aload_1
      34: invokeinterface #58,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #67                 // Method getConstructor:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
      45: astore_2
      46: aload_0
      47: getfield      #11                 // Field constructedObjects:Ljava/util/Map;
      50: aload_1
      51: invokeinterface #59,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      56: ifeq          72
      59: aload_0
      60: getfield      #11                 // Field constructedObjects:Ljava/util/Map;
      63: aload_1
      64: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: goto          79
      72: aload_2
      73: aload_1
      74: invokeinterface #68,  2           // InterfaceMethod org/yaml/snakeyaml/constructor/Construct.construct:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      79: astore_3
      80: aload_0
      81: aload_1
      82: aload_3
      83: invokevirtual #69                 // Method finalizeConstruction:(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload_0
      88: getfield      #11                 // Field constructedObjects:Ljava/util/Map;
      91: aload_1
      92: aload_3
      93: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: getfield      #14                 // Field recursiveObjects:Ljava/util/Set;
     103: aload_1
     104: invokeinterface #70,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     109: pop
     110: aload_1
     111: invokevirtual #71                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     114: ifeq          125
     117: aload_2
     118: aload_1
     119: aload_3
     120: invokeinterface #72,  3           // InterfaceMethod org/yaml/snakeyaml/constructor/Construct.construct2ndStep:(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)V
     125: aload_3
     126: areturn

  protected org.yaml.snakeyaml.constructor.Construct getConstructor(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method org/yaml/snakeyaml/nodes/Node.useClassConstructor:()Z
       4: ifeq          24
       7: aload_0
       8: getfield      #5                  // Field yamlClassConstructors:Ljava/util/Map;
      11: aload_1
      12: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      15: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #75                 // class org/yaml/snakeyaml/constructor/Construct
      23: areturn
      24: aload_0
      25: getfield      #8                  // Field yamlConstructors:Ljava/util/Map;
      28: aload_1
      29: invokevirtual #39                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      32: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #75                 // class org/yaml/snakeyaml/constructor/Construct
      40: astore_2
      41: aload_2
      42: ifnonnull     124
      45: aload_0
      46: getfield      #9                  // Field yamlMultiConstructors:Ljava/util/Map;
      49: invokeinterface #76,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      54: invokeinterface #77,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore_3
      60: aload_3
      61: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          110
      69: aload_3
      70: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #78                 // class java/lang/String
      78: astore        4
      80: aload_1
      81: invokevirtual #39                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      84: aload         4
      86: invokevirtual #79                 // Method org/yaml/snakeyaml/nodes/Tag.startsWith:(Ljava/lang/String;)Z
      89: ifeq          107
      92: aload_0
      93: getfield      #9                  // Field yamlMultiConstructors:Ljava/util/Map;
      96: aload         4
      98: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #75                 // class org/yaml/snakeyaml/constructor/Construct
     106: areturn
     107: goto          60
     110: aload_0
     111: getfield      #8                  // Field yamlConstructors:Ljava/util/Map;
     114: aconst_null
     115: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #75                 // class org/yaml/snakeyaml/constructor/Construct
     123: areturn
     124: aload_2
     125: areturn

  protected java.lang.Object constructScalar(org.yaml.snakeyaml.nodes.ScalarNode);
    Code:
       0: aload_1
       1: invokevirtual #80                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
       4: areturn

  protected java.util.List<java.lang.Object> createDefaultList(int);
    Code:
       0: new           #15                 // class java/util/ArrayList
       3: dup
       4: iload_1
       5: invokespecial #81                 // Method java/util/ArrayList."<init>":(I)V
       8: areturn

  protected java.util.Set<java.lang.Object> createDefaultSet(int);
    Code:
       0: new           #82                 // class java/util/LinkedHashSet
       3: dup
       4: iload_1
       5: invokespecial #83                 // Method java/util/LinkedHashSet."<init>":(I)V
       8: areturn

  protected java.util.Map<java.lang.Object, java.lang.Object> createDefaultMap();
    Code:
       0: new           #84                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #85                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn

  protected java.util.Set<java.lang.Object> createDefaultSet();
    Code:
       0: new           #82                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #86                 // Method java/util/LinkedHashSet."<init>":()V
       7: areturn

  protected java.lang.Object createArray(java.lang.Class<?>, int);
    Code:
       0: aload_1
       1: invokevirtual #87                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       4: iload_2
       5: invokestatic  #88                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
       8: areturn

  protected java.lang.Object finalizeConstruction(org.yaml.snakeyaml.nodes.Node, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
       9: aload_3
      10: invokeinterface #59,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          36
      18: aload_0
      19: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
      22: aload_3
      23: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #24                 // class org/yaml/snakeyaml/TypeDescription
      31: aload_2
      32: invokevirtual #90                 // Method org/yaml/snakeyaml/TypeDescription.finalizeConstruction:(Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn
      36: aload_2
      37: areturn

  protected java.lang.Object newInstance(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: ldc           #41                 // class java/lang/Object
       3: aload_1
       4: invokevirtual #91                 // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       7: areturn
       8: astore_2
       9: new           #93                 // class org/yaml/snakeyaml/error/YAMLException
      12: dup
      13: aload_2
      14: invokespecial #94                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/InstantiationException

  protected final java.lang.Object newInstance(java.lang.Class<?>, org.yaml.snakeyaml.nodes.Node) throws java.lang.InstantiationException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #95                 // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;Z)Ljava/lang/Object;
       7: areturn

  protected java.lang.Object newInstance(java.lang.Class<?>, org.yaml.snakeyaml.nodes.Node, boolean) throws java.lang.InstantiationException;
    Code:
       0: aload_2
       1: invokevirtual #89                 // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
       4: astore        4
       6: aload_0
       7: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
      10: aload         4
      12: invokeinterface #59,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          52
      20: aload_0
      21: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
      24: aload         4
      26: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #24                 // class org/yaml/snakeyaml/TypeDescription
      34: astore        5
      36: aload         5
      38: aload_2
      39: invokevirtual #96                 // Method org/yaml/snakeyaml/TypeDescription.newInstance:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      42: astore        6
      44: aload         6
      46: ifnull        52
      49: aload         6
      51: areturn
      52: iload_3
      53: ifeq          148
      56: aload_1
      57: aload         4
      59: invokevirtual #97                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      62: ifeq          148
      65: aload         4
      67: invokevirtual #98                 // Method java/lang/Class.getModifiers:()I
      70: invokestatic  #99                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z
      73: ifne          148
      76: aload         4
      78: iconst_0
      79: anewarray     #100                // class java/lang/Class
      82: invokevirtual #101                // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      85: astore        5
      87: aload         5
      89: iconst_1
      90: invokevirtual #102                // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      93: aload         5
      95: iconst_0
      96: anewarray     #41                 // class java/lang/Object
      99: invokevirtual #103                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     102: areturn
     103: astore        5
     105: new           #92                 // class java/lang/InstantiationException
     108: dup
     109: new           #105                // class java/lang/StringBuilder
     112: dup
     113: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #107                // String NoSuchMethodException:
     118: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload         5
     123: invokevirtual #109                // Method java/lang/NoSuchMethodException.getLocalizedMessage:()Ljava/lang/String;
     126: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #111                // Method java/lang/InstantiationException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: astore        5
     138: new           #93                 // class org/yaml/snakeyaml/error/YAMLException
     141: dup
     142: aload         5
     144: invokespecial #94                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     147: athrow
     148: new           #92                 // class java/lang/InstantiationException
     151: dup
     152: invokespecial #113                // Method java/lang/InstantiationException."<init>":()V
     155: athrow
    Exception table:
       from    to  target type
          76   102   103   Class java/lang/NoSuchMethodException
          76   102   136   Class java/lang/Exception

  protected java.util.Set<java.lang.Object> newSet(org.yaml.snakeyaml.nodes.CollectionNode<?>);
    Code:
       0: aload_0
       1: ldc           #57                 // class java/util/Set
       3: aload_1
       4: invokevirtual #91                 // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       7: checkcast     #57                 // class java/util/Set
      10: areturn
      11: astore_2
      12: aload_0
      13: aload_1
      14: invokevirtual #114                // Method org/yaml/snakeyaml/nodes/CollectionNode.getValue:()Ljava/util/List;
      17: invokeinterface #115,  1          // InterfaceMethod java/util/List.size:()I
      22: invokevirtual #116                // Method createDefaultSet:(I)Ljava/util/Set;
      25: areturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/InstantiationException

  protected java.util.List<java.lang.Object> newList(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: ldc           #117                // class java/util/List
       3: aload_1
       4: invokevirtual #91                 // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       7: checkcast     #117                // class java/util/List
      10: areturn
      11: astore_2
      12: aload_0
      13: aload_1
      14: invokevirtual #118                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
      17: invokeinterface #115,  1          // InterfaceMethod java/util/List.size:()I
      22: invokevirtual #119                // Method createDefaultList:(I)Ljava/util/List;
      25: areturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/InstantiationException

  protected java.util.Map<java.lang.Object, java.lang.Object> newMap(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: ldc           #55                 // class java/util/Map
       3: aload_1
       4: invokevirtual #91                 // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       7: checkcast     #55                 // class java/util/Map
      10: areturn
      11: astore_2
      12: aload_0
      13: invokevirtual #120                // Method createDefaultMap:()Ljava/util/Map;
      16: areturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/InstantiationException

  protected java.util.List<? extends java.lang.Object> constructSequence(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #121                // Method newList:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/List;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #122                // Method constructSequenceStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/util/Collection;)V
      12: aload_2
      13: areturn

  protected java.util.Set<? extends java.lang.Object> constructSet(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #123                // Method newSet:(Lorg/yaml/snakeyaml/nodes/CollectionNode;)Ljava/util/Set;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #122                // Method constructSequenceStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/util/Collection;)V
      12: aload_2
      13: areturn

  protected java.lang.Object constructArray(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #124                // Method org/yaml/snakeyaml/nodes/SequenceNode.getType:()Ljava/lang/Class;
       7: aload_1
       8: invokevirtual #118                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
      11: invokeinterface #115,  1          // InterfaceMethod java/util/List.size:()I
      16: invokevirtual #125                // Method createArray:(Ljava/lang/Class;I)Ljava/lang/Object;
      19: invokevirtual #126                // Method constructArrayStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  protected void constructSequenceStep2(org.yaml.snakeyaml.nodes.SequenceNode, java.util.Collection<java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #118                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
       4: invokeinterface #127,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_3
      20: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #128                // class org/yaml/snakeyaml/nodes/Node
      28: astore        4
      30: aload_2
      31: aload_0
      32: aload         4
      34: invokevirtual #44                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      37: invokeinterface #129,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      42: pop
      43: goto          10
      46: return

  protected java.lang.Object constructArrayStep2(org.yaml.snakeyaml.nodes.SequenceNode, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #124                // Method org/yaml/snakeyaml/nodes/SequenceNode.getType:()Ljava/lang/Class;
       4: invokevirtual #87                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       7: astore_3
       8: iconst_0
       9: istore        4
      11: aload_1
      12: invokevirtual #118                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
      15: invokeinterface #127,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        5
      22: aload         5
      24: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          348
      32: aload         5
      34: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #128                // class org/yaml/snakeyaml/nodes/Node
      42: astore        6
      44: aload         6
      46: invokevirtual #89                 // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      49: ldc           #41                 // class java/lang/Object
      51: if_acmpne     60
      54: aload         6
      56: aload_3
      57: invokevirtual #130                // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
      60: aload_0
      61: aload         6
      63: invokevirtual #44                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      66: astore        7
      68: aload_3
      69: invokevirtual #131                // Method java/lang/Class.isPrimitive:()Z
      72: ifeq          334
      75: aload         7
      77: ifnonnull     108
      80: new           #132                // class java/lang/NullPointerException
      83: dup
      84: new           #105                // class java/lang/StringBuilder
      87: dup
      88: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #133                // String Unable to construct element value for
      93: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload         6
      98: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #135                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: getstatic     #136                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     111: aload_3
     112: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     115: ifeq          135
     118: aload_2
     119: iload         4
     121: aload         7
     123: checkcast     #138                // class java/lang/Number
     126: invokevirtual #139                // Method java/lang/Number.byteValue:()B
     129: invokestatic  #140                // Method java/lang/reflect/Array.setByte:(Ljava/lang/Object;IB)V
     132: goto          342
     135: getstatic     #141                // Field java/lang/Short.TYPE:Ljava/lang/Class;
     138: aload_3
     139: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     142: ifeq          162
     145: aload_2
     146: iload         4
     148: aload         7
     150: checkcast     #138                // class java/lang/Number
     153: invokevirtual #142                // Method java/lang/Number.shortValue:()S
     156: invokestatic  #143                // Method java/lang/reflect/Array.setShort:(Ljava/lang/Object;IS)V
     159: goto          342
     162: getstatic     #144                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     165: aload_3
     166: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     169: ifeq          189
     172: aload_2
     173: iload         4
     175: aload         7
     177: checkcast     #138                // class java/lang/Number
     180: invokevirtual #145                // Method java/lang/Number.intValue:()I
     183: invokestatic  #146                // Method java/lang/reflect/Array.setInt:(Ljava/lang/Object;II)V
     186: goto          342
     189: getstatic     #147                // Field java/lang/Long.TYPE:Ljava/lang/Class;
     192: aload_3
     193: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     196: ifeq          216
     199: aload_2
     200: iload         4
     202: aload         7
     204: checkcast     #138                // class java/lang/Number
     207: invokevirtual #148                // Method java/lang/Number.longValue:()J
     210: invokestatic  #149                // Method java/lang/reflect/Array.setLong:(Ljava/lang/Object;IJ)V
     213: goto          342
     216: getstatic     #150                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     219: aload_3
     220: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     223: ifeq          243
     226: aload_2
     227: iload         4
     229: aload         7
     231: checkcast     #138                // class java/lang/Number
     234: invokevirtual #151                // Method java/lang/Number.floatValue:()F
     237: invokestatic  #152                // Method java/lang/reflect/Array.setFloat:(Ljava/lang/Object;IF)V
     240: goto          342
     243: getstatic     #153                // Field java/lang/Double.TYPE:Ljava/lang/Class;
     246: aload_3
     247: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     250: ifeq          270
     253: aload_2
     254: iload         4
     256: aload         7
     258: checkcast     #138                // class java/lang/Number
     261: invokevirtual #154                // Method java/lang/Number.doubleValue:()D
     264: invokestatic  #155                // Method java/lang/reflect/Array.setDouble:(Ljava/lang/Object;ID)V
     267: goto          342
     270: getstatic     #156                // Field java/lang/Character.TYPE:Ljava/lang/Class;
     273: aload_3
     274: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     277: ifeq          297
     280: aload_2
     281: iload         4
     283: aload         7
     285: checkcast     #157                // class java/lang/Character
     288: invokevirtual #158                // Method java/lang/Character.charValue:()C
     291: invokestatic  #159                // Method java/lang/reflect/Array.setChar:(Ljava/lang/Object;IC)V
     294: goto          342
     297: getstatic     #160                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     300: aload_3
     301: invokevirtual #137                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     304: ifeq          324
     307: aload_2
     308: iload         4
     310: aload         7
     312: checkcast     #161                // class java/lang/Boolean
     315: invokevirtual #162                // Method java/lang/Boolean.booleanValue:()Z
     318: invokestatic  #163                // Method java/lang/reflect/Array.setBoolean:(Ljava/lang/Object;IZ)V
     321: goto          342
     324: new           #93                 // class org/yaml/snakeyaml/error/YAMLException
     327: dup
     328: ldc           #164                // String unexpected primitive type
     330: invokespecial #165                // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     333: athrow
     334: aload_2
     335: iload         4
     337: aload         7
     339: invokestatic  #166                // Method java/lang/reflect/Array.set:(Ljava/lang/Object;ILjava/lang/Object;)V
     342: iinc          4, 1
     345: goto          22
     348: aload_2
     349: areturn

  protected java.util.Set<java.lang.Object> constructSet(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #123                // Method newSet:(Lorg/yaml/snakeyaml/nodes/CollectionNode;)Ljava/util/Set;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #167                // Method constructSet2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Set;)V
      12: aload_2
      13: areturn

  protected java.util.Map<java.lang.Object, java.lang.Object> constructMapping(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method newMap:(Lorg/yaml/snakeyaml/nodes/MappingNode;)Ljava/util/Map;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #169                // Method constructMapping2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Map;)V
      12: aload_2
      13: areturn

  protected void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #170                // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_3
       5: aload_3
       6: invokeinterface #127,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          177
      23: aload         4
      25: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #171                // class org/yaml/snakeyaml/nodes/NodeTuple
      33: astore        5
      35: aload         5
      37: invokevirtual #172                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      40: astore        6
      42: aload         5
      44: invokevirtual #173                // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      47: astore        7
      49: aload_0
      50: aload         6
      52: invokevirtual #44                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      55: astore        8
      57: aload         8
      59: ifnull        117
      62: aload         8
      64: invokevirtual #174                // Method java/lang/Object.hashCode:()I
      67: pop
      68: goto          117
      71: astore        9
      73: new           #63                 // class org/yaml/snakeyaml/constructor/ConstructorException
      76: dup
      77: ldc           #175                // String while constructing a mapping
      79: aload_1
      80: invokevirtual #176                // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      83: new           #105                // class java/lang/StringBuilder
      86: dup
      87: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #177                // String found unacceptable key
      92: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload         8
      97: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aload         5
     105: invokevirtual #172                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     108: invokevirtual #65                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     111: aload         9
     113: invokespecial #178                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     116: athrow
     117: aload_0
     118: aload         7
     120: invokevirtual #44                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     123: astore        9
     125: aload         6
     127: invokevirtual #71                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     130: ifeq          163
     133: aload_0
     134: getfield      #17                 // Field maps2fill:Ljava/util/ArrayList;
     137: iconst_0
     138: new           #52                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
     141: dup
     142: aload_2
     143: new           #52                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
     146: dup
     147: aload         8
     149: aload         9
     151: invokespecial #179                // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     154: invokespecial #179                // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     157: invokevirtual #180                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
     160: goto          174
     163: aload_2
     164: aload         8
     166: aload         9
     168: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     173: pop
     174: goto          13
     177: return
    Exception table:
       from    to  target type
          62    68    71   Class java/lang/Exception

  protected void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Set<java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #170                // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_3
       5: aload_3
       6: invokeinterface #127,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          151
      23: aload         4
      25: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #171                // class org/yaml/snakeyaml/nodes/NodeTuple
      33: astore        5
      35: aload         5
      37: invokevirtual #172                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      40: astore        6
      42: aload_0
      43: aload         6
      45: invokevirtual #44                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      48: astore        7
      50: aload         7
      52: ifnull        110
      55: aload         7
      57: invokevirtual #174                // Method java/lang/Object.hashCode:()I
      60: pop
      61: goto          110
      64: astore        8
      66: new           #63                 // class org/yaml/snakeyaml/constructor/ConstructorException
      69: dup
      70: ldc           #181                // String while constructing a Set
      72: aload_1
      73: invokevirtual #176                // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      76: new           #105                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #177                // String found unacceptable key
      85: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         7
      90: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: aload         5
      98: invokevirtual #172                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     101: invokevirtual #65                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     104: aload         8
     106: invokespecial #178                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     109: athrow
     110: aload         6
     112: invokevirtual #71                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     115: ifeq          139
     118: aload_0
     119: getfield      #18                 // Field sets2fill:Ljava/util/ArrayList;
     122: iconst_0
     123: new           #52                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
     126: dup
     127: aload_2
     128: aload         7
     130: invokespecial #179                // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     133: invokevirtual #180                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
     136: goto          148
     139: aload_2
     140: aload         7
     142: invokeinterface #58,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     147: pop
     148: goto          13
     151: return
    Exception table:
       from    to  target type
          55    61    64   Class java/lang/Exception

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #182                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       5: aload_0
       6: iconst_1
       7: putfield      #22                 // Field explicitPropertyUtils:Z
      10: aload_0
      11: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
      14: invokeinterface #183,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: astore_2
      20: aload_2
      21: invokeinterface #184,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          56
      36: aload_3
      37: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #24                 // class org/yaml/snakeyaml/TypeDescription
      45: astore        4
      47: aload         4
      49: aload_1
      50: invokevirtual #185                // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      53: goto          27
      56: return

  public final org.yaml.snakeyaml.introspector.PropertyUtils getPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #182                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: ifnonnull     18
       7: aload_0
       8: new           #186                // class org/yaml/snakeyaml/introspector/PropertyUtils
      11: dup
      12: invokespecial #187                // Method org/yaml/snakeyaml/introspector/PropertyUtils."<init>":()V
      15: putfield      #182                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      18: aload_0
      19: getfield      #182                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      22: areturn

  public org.yaml.snakeyaml.TypeDescription addTypeDescription(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #132                // class java/lang/NullPointerException
       7: dup
       8: ldc           #188                // String TypeDescription is required.
      10: invokespecial #135                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #189                // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      18: astore_2
      19: aload_0
      20: getfield      #20                 // Field typeTags:Ljava/util/Map;
      23: aload_2
      24: aload_1
      25: invokevirtual #190                // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      28: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: aload_0
      36: invokevirtual #191                // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      39: invokevirtual #185                // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      42: aload_0
      43: getfield      #19                 // Field typeDefinitions:Ljava/util/Map;
      46: aload_1
      47: invokevirtual #190                // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      50: aload_1
      51: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #24                 // class org/yaml/snakeyaml/TypeDescription
      59: areturn

  public final boolean isExplicitPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #22                 // Field explicitPropertyUtils:Z
       4: ireturn

  public boolean isAllowDuplicateKeys();
    Code:
       0: aload_0
       1: getfield      #10                 // Field allowDuplicateKeys:Z
       4: ireturn

  public void setAllowDuplicateKeys(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field allowDuplicateKeys:Z
       5: return
}
