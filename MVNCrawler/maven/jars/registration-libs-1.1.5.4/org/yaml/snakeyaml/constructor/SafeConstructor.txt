Compiled from "SafeConstructor.java"
public class org.yaml.snakeyaml.constructor.SafeConstructor extends org.yaml.snakeyaml.constructor.BaseConstructor {
  public static final org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined undefinedConstructor;

  private static final java.util.Map<java.lang.String, java.lang.Boolean> BOOL_VALUES;

  private static final java.util.regex.Pattern TIMESTAMP_REGEXP;

  private static final java.util.regex.Pattern YMD_REGEXP;

  public org.yaml.snakeyaml.constructor.SafeConstructor();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/yaml/snakeyaml/constructor/BaseConstructor."<init>":()V
       4: aload_0
       5: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
       8: getstatic     #7                  // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      11: new           #8                  // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlNull
      14: dup
      15: aload_0
      16: invokespecial #9                  // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlNull."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      19: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      29: getstatic     #11                 // Field org/yaml/snakeyaml/nodes/Tag.BOOL:Lorg/yaml/snakeyaml/nodes/Tag;
      32: new           #12                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBool
      35: dup
      36: aload_0
      37: invokespecial #13                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBool."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      40: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_0
      47: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      50: getstatic     #14                 // Field org/yaml/snakeyaml/nodes/Tag.INT:Lorg/yaml/snakeyaml/nodes/Tag;
      53: new           #15                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlInt
      56: dup
      57: aload_0
      58: invokespecial #16                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlInt."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      61: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload_0
      68: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      71: getstatic     #17                 // Field org/yaml/snakeyaml/nodes/Tag.FLOAT:Lorg/yaml/snakeyaml/nodes/Tag;
      74: new           #18                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlFloat
      77: dup
      78: aload_0
      79: invokespecial #19                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlFloat."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      82: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_0
      89: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
      92: getstatic     #20                 // Field org/yaml/snakeyaml/nodes/Tag.BINARY:Lorg/yaml/snakeyaml/nodes/Tag;
      95: new           #21                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBinary
      98: dup
      99: aload_0
     100: invokespecial #22                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBinary."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     103: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: aload_0
     110: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     113: getstatic     #23                 // Field org/yaml/snakeyaml/nodes/Tag.TIMESTAMP:Lorg/yaml/snakeyaml/nodes/Tag;
     116: new           #24                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlTimestamp
     119: dup
     120: invokespecial #25                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlTimestamp."<init>":()V
     123: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_0
     130: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     133: getstatic     #26                 // Field org/yaml/snakeyaml/nodes/Tag.OMAP:Lorg/yaml/snakeyaml/nodes/Tag;
     136: new           #27                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlOmap
     139: dup
     140: aload_0
     141: invokespecial #28                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlOmap."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     144: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     149: pop
     150: aload_0
     151: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     154: getstatic     #29                 // Field org/yaml/snakeyaml/nodes/Tag.PAIRS:Lorg/yaml/snakeyaml/nodes/Tag;
     157: new           #30                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlPairs
     160: dup
     161: aload_0
     162: invokespecial #31                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlPairs."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     165: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: aload_0
     172: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     175: getstatic     #32                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     178: new           #33                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet
     181: dup
     182: aload_0
     183: invokespecial #34                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     186: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: pop
     192: aload_0
     193: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     196: getstatic     #35                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
     199: new           #36                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlStr
     202: dup
     203: aload_0
     204: invokespecial #37                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlStr."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     207: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     212: pop
     213: aload_0
     214: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     217: getstatic     #38                 // Field org/yaml/snakeyaml/nodes/Tag.SEQ:Lorg/yaml/snakeyaml/nodes/Tag;
     220: new           #39                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq
     223: dup
     224: aload_0
     225: invokespecial #40                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     228: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     233: pop
     234: aload_0
     235: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     238: getstatic     #41                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     241: new           #42                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap
     244: dup
     245: aload_0
     246: invokespecial #43                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     249: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     254: pop
     255: aload_0
     256: getfield      #6                  // Field yamlConstructors:Ljava/util/Map;
     259: aconst_null
     260: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     263: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     268: pop
     269: aload_0
     270: getfield      #45                 // Field yamlClassConstructors:Ljava/util/Map;
     273: getstatic     #46                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
     276: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     279: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     284: pop
     285: aload_0
     286: getfield      #45                 // Field yamlClassConstructors:Ljava/util/Map;
     289: getstatic     #47                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
     292: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     295: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     300: pop
     301: aload_0
     302: getfield      #45                 // Field yamlClassConstructors:Ljava/util/Map;
     305: getstatic     #48                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     308: getstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     311: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     316: pop
     317: return

  protected void flattenMapping(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method processDuplicateKeys:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_1
       6: invokevirtual #50                 // Method org/yaml/snakeyaml/nodes/MappingNode.isMerged:()Z
       9: ifeq          36
      12: aload_1
      13: aload_0
      14: aload_1
      15: iconst_1
      16: new           #51                 // class java/util/HashMap
      19: dup
      20: invokespecial #52                 // Method java/util/HashMap."<init>":()V
      23: new           #53                 // class java/util/ArrayList
      26: dup
      27: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
      30: invokespecial #55                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;)Ljava/util/List;
      33: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/MappingNode.setValue:(Ljava/util/List;)V
      36: return

  protected void processDuplicateKeys(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_2
       5: new           #51                 // class java/util/HashMap
       8: dup
       9: aload_2
      10: invokeinterface #58,  1           // InterfaceMethod java/util/List.size:()I
      15: invokespecial #59                 // Method java/util/HashMap."<init>":(I)V
      18: astore_3
      19: new           #60                 // class java/util/TreeSet
      22: dup
      23: invokespecial #61                 // Method java/util/TreeSet."<init>":()V
      26: astore        4
      28: iconst_0
      29: istore        5
      31: aload_2
      32: invokeinterface #62,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        6
      39: aload         6
      41: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          225
      49: aload         6
      51: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #65                 // class org/yaml/snakeyaml/nodes/NodeTuple
      59: astore        7
      61: aload         7
      63: invokevirtual #66                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      66: astore        8
      68: aload         8
      70: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      73: getstatic     #68                 // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      76: invokevirtual #69                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      79: ifne          216
      82: aload_0
      83: aload         8
      85: invokevirtual #70                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      88: astore        9
      90: aload         9
      92: ifnull        150
      95: aload         9
      97: invokevirtual #71                 // Method java/lang/Object.hashCode:()I
     100: pop
     101: goto          150
     104: astore        10
     106: new           #73                 // class org/yaml/snakeyaml/constructor/ConstructorException
     109: dup
     110: ldc           #74                 // String while constructing a mapping
     112: aload_1
     113: invokevirtual #75                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     116: new           #76                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #78                 // String found unacceptable key
     125: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload         9
     130: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     133: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: aload         7
     138: invokevirtual #66                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     141: invokevirtual #82                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     144: aload         10
     146: invokespecial #83                 // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     149: athrow
     150: aload_3
     151: aload         9
     153: iload         5
     155: invokestatic  #84                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     158: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     163: checkcast     #85                 // class java/lang/Integer
     166: astore        10
     168: aload         10
     170: ifnull        216
     173: aload_0
     174: invokevirtual #86                 // Method isAllowDuplicateKeys:()Z
     177: ifne          208
     180: new           #87                 // class java/lang/IllegalStateException
     183: dup
     184: new           #76                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #88                 // String duplicate key:
     193: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload         9
     198: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     201: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: invokespecial #89                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     207: athrow
     208: aload         4
     210: aload         10
     212: invokevirtual #90                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
     215: pop
     216: iload         5
     218: iconst_1
     219: iadd
     220: istore        5
     222: goto          39
     225: aload         4
     227: invokevirtual #91                 // Method java/util/TreeSet.descendingIterator:()Ljava/util/Iterator;
     230: astore        6
     232: aload         6
     234: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     239: ifeq          265
     242: aload_2
     243: aload         6
     245: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     250: checkcast     #85                 // class java/lang/Integer
     253: invokevirtual #92                 // Method java/lang/Integer.intValue:()I
     256: invokeinterface #93,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     261: pop
     262: goto          232
     265: return
    Exception table:
       from    to  target type
          95   101   104   Class java/lang/Exception

  private java.util.List<org.yaml.snakeyaml.nodes.NodeTuple> mergeNode(org.yaml.snakeyaml.nodes.MappingNode, boolean, java.util.Map<java.lang.Object, java.lang.Integer>, java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: invokeinterface #62,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          374
      21: aload         5
      23: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #65                 // class org/yaml/snakeyaml/nodes/NodeTuple
      31: astore        6
      33: aload         6
      35: invokevirtual #66                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      38: astore        7
      40: aload         6
      42: invokevirtual #94                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      45: astore        8
      47: aload         7
      49: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      52: getstatic     #68                 // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      55: invokevirtual #69                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      58: ifeq          290
      61: aload         5
      63: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.remove:()V
      68: getstatic     #96                 // Field org/yaml/snakeyaml/constructor/SafeConstructor$1.$SwitchMap$org$yaml$snakeyaml$nodes$NodeId:[I
      71: aload         8
      73: invokevirtual #97                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      76: invokevirtual #98                 // Method org/yaml/snakeyaml/nodes/NodeId.ordinal:()I
      79: iaload
      80: lookupswitch  { // 2
                     1: 108
                     2: 129
               default: 248
          }
     108: aload         8
     110: checkcast     #99                 // class org/yaml/snakeyaml/nodes/MappingNode
     113: astore        9
     115: aload_0
     116: aload         9
     118: iconst_0
     119: aload_3
     120: aload         4
     122: invokespecial #55                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;)Ljava/util/List;
     125: pop
     126: goto          371
     129: aload         8
     131: checkcast     #100                // class org/yaml/snakeyaml/nodes/SequenceNode
     134: astore        10
     136: aload         10
     138: invokevirtual #101                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     141: astore        11
     143: aload         11
     145: invokeinterface #62,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     150: astore        12
     152: aload         12
     154: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     159: ifeq          245
     162: aload         12
     164: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #102                // class org/yaml/snakeyaml/nodes/Node
     172: astore        13
     174: aload         13
     176: instanceof    #99                 // class org/yaml/snakeyaml/nodes/MappingNode
     179: ifne          224
     182: new           #73                 // class org/yaml/snakeyaml/constructor/ConstructorException
     185: dup
     186: ldc           #74                 // String while constructing a mapping
     188: aload_1
     189: invokevirtual #75                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     192: new           #76                 // class java/lang/StringBuilder
     195: dup
     196: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     199: ldc           #103                // String expected a mapping for merging, but found
     201: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload         13
     206: invokevirtual #97                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     209: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: aload         13
     217: invokevirtual #82                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     220: invokespecial #104                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
     223: athrow
     224: aload         13
     226: checkcast     #99                 // class org/yaml/snakeyaml/nodes/MappingNode
     229: astore        14
     231: aload_0
     232: aload         14
     234: iconst_0
     235: aload_3
     236: aload         4
     238: invokespecial #55                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;)Ljava/util/List;
     241: pop
     242: goto          152
     245: goto          371
     248: new           #73                 // class org/yaml/snakeyaml/constructor/ConstructorException
     251: dup
     252: ldc           #74                 // String while constructing a mapping
     254: aload_1
     255: invokevirtual #75                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     258: new           #76                 // class java/lang/StringBuilder
     261: dup
     262: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     265: ldc           #105                // String expected a mapping or list of mappings for merging, but found
     267: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: aload         8
     272: invokevirtual #97                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     275: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     278: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     281: aload         8
     283: invokevirtual #82                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     286: invokespecial #104                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
     289: athrow
     290: aload_0
     291: aload         7
     293: invokevirtual #70                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     296: astore        9
     298: aload_3
     299: aload         9
     301: invokeinterface #106,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     306: ifne          343
     309: aload         4
     311: aload         6
     313: invokeinterface #107,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     318: pop
     319: aload_3
     320: aload         9
     322: aload         4
     324: invokeinterface #58,  1           // InterfaceMethod java/util/List.size:()I
     329: iconst_1
     330: isub
     331: invokestatic  #84                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     334: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     339: pop
     340: goto          371
     343: iload_2
     344: ifeq          371
     347: aload         4
     349: aload_3
     350: aload         9
     352: invokeinterface #108,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     357: checkcast     #85                 // class java/lang/Integer
     360: invokevirtual #92                 // Method java/lang/Integer.intValue:()I
     363: aload         6
     365: invokeinterface #109,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     370: pop
     371: goto          11
     374: aload         4
     376: areturn

  protected void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #111                // Method org/yaml/snakeyaml/constructor/BaseConstructor.constructMapping2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Map;)V
      11: return

  protected void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Set<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #112                // Method org/yaml/snakeyaml/constructor/BaseConstructor.constructSet2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Set;)V
      11: return

  private java.lang.Number createNumber(int, java.lang.String, int);
    Code:
       0: iload_1
       1: ifge          24
       4: new           #76                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #113                // String -
      13: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: astore_2
      24: aload_2
      25: iload_3
      26: invokestatic  #114                // Method java/lang/Integer.valueOf:(Ljava/lang/String;I)Ljava/lang/Integer;
      29: astore        4
      31: goto          59
      34: astore        5
      36: aload_2
      37: iload_3
      38: invokestatic  #116                // Method java/lang/Long.valueOf:(Ljava/lang/String;I)Ljava/lang/Long;
      41: astore        4
      43: goto          59
      46: astore        6
      48: new           #117                // class java/math/BigInteger
      51: dup
      52: aload_2
      53: iload_3
      54: invokespecial #118                // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      57: astore        4
      59: aload         4
      61: areturn
    Exception table:
       from    to  target type
          24    31    34   Class java/lang/NumberFormatException
          36    43    46   Class java/lang/NumberFormatException

  static java.util.Map access$000();
    Code:
       0: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
       3: areturn

  static java.lang.Number access$100(org.yaml.snakeyaml.constructor.SafeConstructor, int, java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #3                  // Method createNumber:(ILjava/lang/String;I)Ljava/lang/Number;
       7: areturn

  static java.util.regex.Pattern access$200();
    Code:
       0: getstatic     #2                  // Field YMD_REGEXP:Ljava/util/regex/Pattern;
       3: areturn

  static java.util.regex.Pattern access$300();
    Code:
       0: getstatic     #1                  // Field TIMESTAMP_REGEXP:Ljava/util/regex/Pattern;
       3: areturn

  static {};
    Code:
       0: new           #119                // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined
       3: dup
       4: invokespecial #120                // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined."<init>":()V
       7: putstatic     #44                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
      10: new           #51                 // class java/util/HashMap
      13: dup
      14: invokespecial #52                 // Method java/util/HashMap."<init>":()V
      17: putstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      20: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      23: ldc           #121                // String yes
      25: getstatic     #122                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      28: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      37: ldc           #123                // String no
      39: getstatic     #124                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      42: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      51: ldc           #125                // String true
      53: getstatic     #122                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      56: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      65: ldc           #126                // String false
      67: getstatic     #124                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      70: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      79: ldc           #127                // String on
      81: getstatic     #122                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      84: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      93: ldc           #128                // String off
      95: getstatic     #124                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      98: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: ldc           #129                // String ^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:(?:[Tt]|[ \t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \t]*(?:Z|([-+][0-9][0-9]?)(?::([0-9][0-9])?)?))?)?$
     106: invokestatic  #130                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     109: putstatic     #1                  // Field TIMESTAMP_REGEXP:Ljava/util/regex/Pattern;
     112: ldc           #131                // String ^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)$
     114: invokestatic  #130                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     117: putstatic     #2                  // Field YMD_REGEXP:Ljava/util/regex/Pattern;
     120: return
}
