Compiled from "Token.java"
public final class org.yaml.snakeyaml.tokens.Token$ID extends java.lang.Enum<org.yaml.snakeyaml.tokens.Token$ID> {
  public static final org.yaml.snakeyaml.tokens.Token$ID Alias;

  public static final org.yaml.snakeyaml.tokens.Token$ID Anchor;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockEntry;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockMappingStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID BlockSequenceStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID Directive;

  public static final org.yaml.snakeyaml.tokens.Token$ID DocumentEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID DocumentStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowEntry;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowMappingStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID FlowSequenceStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID Key;

  public static final org.yaml.snakeyaml.tokens.Token$ID Scalar;

  public static final org.yaml.snakeyaml.tokens.Token$ID StreamEnd;

  public static final org.yaml.snakeyaml.tokens.Token$ID StreamStart;

  public static final org.yaml.snakeyaml.tokens.Token$ID Tag;

  public static final org.yaml.snakeyaml.tokens.Token$ID Value;

  public static final org.yaml.snakeyaml.tokens.Token$ID Whitespace;

  public static final org.yaml.snakeyaml.tokens.Token$ID Comment;

  public static final org.yaml.snakeyaml.tokens.Token$ID Error;

  private static final org.yaml.snakeyaml.tokens.Token$ID[] $VALUES;

  public static org.yaml.snakeyaml.tokens.Token$ID[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/yaml/snakeyaml/tokens/Token$ID;
       3: invokevirtual #2                  // Method "[Lorg/yaml/snakeyaml/tokens/Token$ID;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/yaml/snakeyaml/tokens/Token$ID;"
       9: areturn

  public static org.yaml.snakeyaml.tokens.Token$ID valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/yaml/snakeyaml/tokens/Token$ID
       9: areturn

  private org.yaml.snakeyaml.tokens.Token$ID();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
       3: dup
       4: ldc           #7                  // String Alias
       6: iconst_0
       7: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #9                  // Field Alias:Lorg/yaml/snakeyaml/tokens/Token$ID;
      13: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      16: dup
      17: ldc           #10                 // String Anchor
      19: iconst_1
      20: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #11                 // Field Anchor:Lorg/yaml/snakeyaml/tokens/Token$ID;
      26: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      29: dup
      30: ldc           #12                 // String BlockEnd
      32: iconst_2
      33: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #13                 // Field BlockEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
      39: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      42: dup
      43: ldc           #14                 // String BlockEntry
      45: iconst_3
      46: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      49: putstatic     #15                 // Field BlockEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
      52: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      55: dup
      56: ldc           #16                 // String BlockMappingStart
      58: iconst_4
      59: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      62: putstatic     #17                 // Field BlockMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
      65: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      68: dup
      69: ldc           #18                 // String BlockSequenceStart
      71: iconst_5
      72: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      75: putstatic     #19                 // Field BlockSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
      78: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      81: dup
      82: ldc           #20                 // String Directive
      84: bipush        6
      86: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
      89: putstatic     #21                 // Field Directive:Lorg/yaml/snakeyaml/tokens/Token$ID;
      92: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
      95: dup
      96: ldc           #22                 // String DocumentEnd
      98: bipush        7
     100: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     103: putstatic     #23                 // Field DocumentEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     106: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     109: dup
     110: ldc           #24                 // String DocumentStart
     112: bipush        8
     114: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     117: putstatic     #25                 // Field DocumentStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     120: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     123: dup
     124: ldc           #26                 // String FlowEntry
     126: bipush        9
     128: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     131: putstatic     #27                 // Field FlowEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
     134: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     137: dup
     138: ldc           #28                 // String FlowMappingEnd
     140: bipush        10
     142: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     145: putstatic     #29                 // Field FlowMappingEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     148: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     151: dup
     152: ldc           #30                 // String FlowMappingStart
     154: bipush        11
     156: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     159: putstatic     #31                 // Field FlowMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     162: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     165: dup
     166: ldc           #32                 // String FlowSequenceEnd
     168: bipush        12
     170: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     173: putstatic     #33                 // Field FlowSequenceEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     176: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     179: dup
     180: ldc           #34                 // String FlowSequenceStart
     182: bipush        13
     184: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     187: putstatic     #35                 // Field FlowSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     190: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     193: dup
     194: ldc           #36                 // String Key
     196: bipush        14
     198: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     201: putstatic     #37                 // Field Key:Lorg/yaml/snakeyaml/tokens/Token$ID;
     204: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     207: dup
     208: ldc           #38                 // String Scalar
     210: bipush        15
     212: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     215: putstatic     #39                 // Field Scalar:Lorg/yaml/snakeyaml/tokens/Token$ID;
     218: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     221: dup
     222: ldc           #40                 // String StreamEnd
     224: bipush        16
     226: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     229: putstatic     #41                 // Field StreamEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     232: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     235: dup
     236: ldc           #42                 // String StreamStart
     238: bipush        17
     240: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     243: putstatic     #43                 // Field StreamStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     246: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     249: dup
     250: ldc           #44                 // String Tag
     252: bipush        18
     254: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     257: putstatic     #45                 // Field Tag:Lorg/yaml/snakeyaml/tokens/Token$ID;
     260: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     263: dup
     264: ldc           #46                 // String Value
     266: bipush        19
     268: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     271: putstatic     #47                 // Field Value:Lorg/yaml/snakeyaml/tokens/Token$ID;
     274: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     277: dup
     278: ldc           #48                 // String Whitespace
     280: bipush        20
     282: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     285: putstatic     #49                 // Field Whitespace:Lorg/yaml/snakeyaml/tokens/Token$ID;
     288: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     291: dup
     292: ldc           #50                 // String Comment
     294: bipush        21
     296: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     299: putstatic     #51                 // Field Comment:Lorg/yaml/snakeyaml/tokens/Token$ID;
     302: new           #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     305: dup
     306: ldc           #52                 // String Error
     308: bipush        22
     310: invokespecial #8                  // Method "<init>":(Ljava/lang/String;I)V
     313: putstatic     #53                 // Field Error:Lorg/yaml/snakeyaml/tokens/Token$ID;
     316: bipush        23
     318: anewarray     #4                  // class org/yaml/snakeyaml/tokens/Token$ID
     321: dup
     322: iconst_0
     323: getstatic     #9                  // Field Alias:Lorg/yaml/snakeyaml/tokens/Token$ID;
     326: aastore
     327: dup
     328: iconst_1
     329: getstatic     #11                 // Field Anchor:Lorg/yaml/snakeyaml/tokens/Token$ID;
     332: aastore
     333: dup
     334: iconst_2
     335: getstatic     #13                 // Field BlockEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     338: aastore
     339: dup
     340: iconst_3
     341: getstatic     #15                 // Field BlockEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
     344: aastore
     345: dup
     346: iconst_4
     347: getstatic     #17                 // Field BlockMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     350: aastore
     351: dup
     352: iconst_5
     353: getstatic     #19                 // Field BlockSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     356: aastore
     357: dup
     358: bipush        6
     360: getstatic     #21                 // Field Directive:Lorg/yaml/snakeyaml/tokens/Token$ID;
     363: aastore
     364: dup
     365: bipush        7
     367: getstatic     #23                 // Field DocumentEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     370: aastore
     371: dup
     372: bipush        8
     374: getstatic     #25                 // Field DocumentStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     377: aastore
     378: dup
     379: bipush        9
     381: getstatic     #27                 // Field FlowEntry:Lorg/yaml/snakeyaml/tokens/Token$ID;
     384: aastore
     385: dup
     386: bipush        10
     388: getstatic     #29                 // Field FlowMappingEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     391: aastore
     392: dup
     393: bipush        11
     395: getstatic     #31                 // Field FlowMappingStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     398: aastore
     399: dup
     400: bipush        12
     402: getstatic     #33                 // Field FlowSequenceEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     405: aastore
     406: dup
     407: bipush        13
     409: getstatic     #35                 // Field FlowSequenceStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     412: aastore
     413: dup
     414: bipush        14
     416: getstatic     #37                 // Field Key:Lorg/yaml/snakeyaml/tokens/Token$ID;
     419: aastore
     420: dup
     421: bipush        15
     423: getstatic     #39                 // Field Scalar:Lorg/yaml/snakeyaml/tokens/Token$ID;
     426: aastore
     427: dup
     428: bipush        16
     430: getstatic     #41                 // Field StreamEnd:Lorg/yaml/snakeyaml/tokens/Token$ID;
     433: aastore
     434: dup
     435: bipush        17
     437: getstatic     #43                 // Field StreamStart:Lorg/yaml/snakeyaml/tokens/Token$ID;
     440: aastore
     441: dup
     442: bipush        18
     444: getstatic     #45                 // Field Tag:Lorg/yaml/snakeyaml/tokens/Token$ID;
     447: aastore
     448: dup
     449: bipush        19
     451: getstatic     #47                 // Field Value:Lorg/yaml/snakeyaml/tokens/Token$ID;
     454: aastore
     455: dup
     456: bipush        20
     458: getstatic     #49                 // Field Whitespace:Lorg/yaml/snakeyaml/tokens/Token$ID;
     461: aastore
     462: dup
     463: bipush        21
     465: getstatic     #51                 // Field Comment:Lorg/yaml/snakeyaml/tokens/Token$ID;
     468: aastore
     469: dup
     470: bipush        22
     472: getstatic     #53                 // Field Error:Lorg/yaml/snakeyaml/tokens/Token$ID;
     475: aastore
     476: putstatic     #1                  // Field $VALUES:[Lorg/yaml/snakeyaml/tokens/Token$ID;
     479: return
}
