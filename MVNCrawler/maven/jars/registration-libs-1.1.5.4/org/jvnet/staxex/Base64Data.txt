Compiled from "Base64Data.java"
public class org.jvnet.staxex.Base64Data implements java.lang.CharSequence,java.lang.Cloneable {
  private javax.activation.DataHandler dataHandler;

  private byte[] data;

  private java.lang.String hrefCid;

  private int dataLen;

  private boolean dataCloneByRef;

  private java.lang.String mimeType;

  private static final java.util.logging.Logger logger;

  private static final int CHUNK_SIZE;

  static final boolean $assertionsDisabled;

  public org.jvnet.staxex.Base64Data();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public org.jvnet.staxex.Base64Data(org.jvnet.staxex.Base64Data);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #4                  // Method get:()[B
       8: pop
       9: aload_1
      10: getfield      #5                  // Field dataCloneByRef:Z
      13: ifeq          27
      16: aload_0
      17: aload_1
      18: getfield      #2                  // Field data:[B
      21: putfield      #2                  // Field data:[B
      24: goto          54
      27: aload_0
      28: aload_1
      29: getfield      #1                  // Field dataLen:I
      32: newarray       byte
      34: putfield      #2                  // Field data:[B
      37: aload_1
      38: getfield      #2                  // Field data:[B
      41: iconst_0
      42: aload_0
      43: getfield      #2                  // Field data:[B
      46: iconst_0
      47: aload_1
      48: getfield      #1                  // Field dataLen:I
      51: invokestatic  #6                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: aload_0
      55: iconst_1
      56: putfield      #5                  // Field dataCloneByRef:Z
      59: aload_0
      60: aload_1
      61: getfield      #1                  // Field dataLen:I
      64: putfield      #1                  // Field dataLen:I
      67: aload_0
      68: aconst_null
      69: putfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      72: aload_0
      73: aload_1
      74: getfield      #8                  // Field mimeType:Ljava/lang/String;
      77: putfield      #8                  // Field mimeType:Ljava/lang/String;
      80: return

  public void set(byte[], int, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field data:[B
       5: aload_0
       6: iload_2
       7: putfield      #1                  // Field dataLen:I
      10: aload_0
      11: iload         4
      13: putfield      #5                  // Field dataCloneByRef:Z
      16: aload_0
      17: aconst_null
      18: putfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      21: aload_0
      22: aload_3
      23: putfield      #8                  // Field mimeType:Ljava/lang/String;
      26: return

  public void set(byte[], int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #9                  // Method set:([BILjava/lang/String;Z)V
       8: return

  public void set(byte[], java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: arraylength
       4: aload_2
       5: iconst_0
       6: invokevirtual #9                  // Method set:([BILjava/lang/String;Z)V
       9: return

  public void set(javax.activation.DataHandler);
    Code:
       0: getstatic     #10                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #11                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      23: aload_0
      24: aconst_null
      25: putfield      #2                  // Field data:[B
      28: return

  public javax.activation.DataHandler getDataHandler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
       4: ifnonnull     31
       7: aload_0
       8: new           #13                 // class org/jvnet/staxex/Base64Data$Base64StreamingDataHandler
      11: dup
      12: aload_0
      13: new           #14                 // class org/jvnet/staxex/Base64Data$Base64DataSource
      16: dup
      17: aload_0
      18: aconst_null
      19: invokespecial #15                 // Method org/jvnet/staxex/Base64Data$Base64DataSource."<init>":(Lorg/jvnet/staxex/Base64Data;Lorg/jvnet/staxex/Base64Data$1;)V
      22: invokespecial #16                 // Method org/jvnet/staxex/Base64Data$Base64StreamingDataHandler."<init>":(Lorg/jvnet/staxex/Base64Data;Ljavax/activation/DataSource;)V
      25: putfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      28: goto          56
      31: aload_0
      32: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      35: instanceof    #17                 // class org/jvnet/staxex/StreamingDataHandler
      38: ifne          56
      41: aload_0
      42: new           #18                 // class org/jvnet/staxex/Base64Data$FilterDataHandler
      45: dup
      46: aload_0
      47: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      50: invokespecial #19                 // Method org/jvnet/staxex/Base64Data$FilterDataHandler."<init>":(Ljavax/activation/DataHandler;)V
      53: putfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      56: aload_0
      57: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      60: areturn

  public byte[] getExact();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #1                  // Field dataLen:I
       9: aload_0
      10: getfield      #2                  // Field data:[B
      13: arraylength
      14: if_icmpeq     43
      17: aload_0
      18: getfield      #1                  // Field dataLen:I
      21: newarray       byte
      23: astore_1
      24: aload_0
      25: getfield      #2                  // Field data:[B
      28: iconst_0
      29: aload_1
      30: iconst_0
      31: aload_0
      32: getfield      #1                  // Field dataLen:I
      35: invokestatic  #6                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_0
      39: aload_1
      40: putfield      #2                  // Field data:[B
      43: aload_0
      44: getfield      #2                  // Field data:[B
      47: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
       4: ifnull        15
       7: aload_0
       8: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      11: invokevirtual #20                 // Method javax/activation/DataHandler.getInputStream:()Ljava/io/InputStream;
      14: areturn
      15: new           #21                 // class java/io/ByteArrayInputStream
      18: dup
      19: aload_0
      20: getfield      #2                  // Field data:[B
      23: iconst_0
      24: aload_0
      25: getfield      #1                  // Field dataLen:I
      28: invokespecial #22                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      31: areturn

  public boolean hasData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public byte[] get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: ifnonnull     70
       7: new           #23                 // class org/jvnet/staxex/ByteArrayOutputStreamEx
      10: dup
      11: sipush        1024
      14: invokespecial #24                 // Method org/jvnet/staxex/ByteArrayOutputStreamEx."<init>":(I)V
      17: astore_1
      18: aload_0
      19: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      22: invokevirtual #25                 // Method javax/activation/DataHandler.getDataSource:()Ljavax/activation/DataSource;
      25: invokeinterface #26,  1           // InterfaceMethod javax/activation/DataSource.getInputStream:()Ljava/io/InputStream;
      30: astore_2
      31: aload_1
      32: aload_2
      33: invokevirtual #27                 // Method org/jvnet/staxex/ByteArrayOutputStreamEx.readFrom:(Ljava/io/InputStream;)V
      36: aload_2
      37: invokevirtual #28                 // Method java/io/InputStream.close:()V
      40: aload_0
      41: aload_1
      42: invokevirtual #29                 // Method org/jvnet/staxex/ByteArrayOutputStreamEx.getBuffer:()[B
      45: putfield      #2                  // Field data:[B
      48: aload_0
      49: aload_1
      50: invokevirtual #30                 // Method org/jvnet/staxex/ByteArrayOutputStreamEx.size:()I
      53: putfield      #1                  // Field dataLen:I
      56: aload_0
      57: iconst_1
      58: putfield      #5                  // Field dataCloneByRef:Z
      61: goto          70
      64: astore_1
      65: aload_0
      66: iconst_0
      67: putfield      #1                  // Field dataLen:I
      70: aload_0
      71: getfield      #2                  // Field data:[B
      74: areturn
    Exception table:
       from    to  target type
           7    61    64   Class java/io/IOException

  public int getDataLen();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #1                  // Field dataLen:I
       9: ireturn

  public java.lang.String getMimeType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mimeType:Ljava/lang/String;
       4: ifnonnull     10
       7: ldc           #32                 // String application/octet-stream
       9: areturn
      10: aload_0
      11: getfield      #8                  // Field mimeType:Ljava/lang/String;
      14: areturn

  public int length();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #1                  // Field dataLen:I
       9: iconst_2
      10: iadd
      11: iconst_3
      12: idiv
      13: iconst_4
      14: imul
      15: ireturn

  public char charAt(int);
    Code:
       0: iload_1
       1: iconst_4
       2: irem
       3: istore_2
       4: iload_1
       5: iconst_4
       6: idiv
       7: iconst_3
       8: imul
       9: istore_3
      10: iload_2
      11: tableswitch   { // 0 to 3
                     0: 40
                     1: 52
                     2: 100
                     3: 168
               default: 196
          }
      40: aload_0
      41: getfield      #2                  // Field data:[B
      44: iload_3
      45: baload
      46: iconst_2
      47: ishr
      48: invokestatic  #33                 // Method org/jvnet/staxex/Base64Encoder.encode:(I)C
      51: ireturn
      52: iload_3
      53: iconst_1
      54: iadd
      55: aload_0
      56: getfield      #1                  // Field dataLen:I
      59: if_icmpge     75
      62: aload_0
      63: getfield      #2                  // Field data:[B
      66: iload_3
      67: iconst_1
      68: iadd
      69: baload
      70: istore        4
      72: goto          78
      75: iconst_0
      76: istore        4
      78: aload_0
      79: getfield      #2                  // Field data:[B
      82: iload_3
      83: baload
      84: iconst_3
      85: iand
      86: iconst_4
      87: ishl
      88: iload         4
      90: iconst_4
      91: ishr
      92: bipush        15
      94: iand
      95: ior
      96: invokestatic  #33                 // Method org/jvnet/staxex/Base64Encoder.encode:(I)C
      99: ireturn
     100: iload_3
     101: iconst_1
     102: iadd
     103: aload_0
     104: getfield      #1                  // Field dataLen:I
     107: if_icmpge     165
     110: aload_0
     111: getfield      #2                  // Field data:[B
     114: iload_3
     115: iconst_1
     116: iadd
     117: baload
     118: istore        4
     120: iload_3
     121: iconst_2
     122: iadd
     123: aload_0
     124: getfield      #1                  // Field dataLen:I
     127: if_icmpge     143
     130: aload_0
     131: getfield      #2                  // Field data:[B
     134: iload_3
     135: iconst_2
     136: iadd
     137: baload
     138: istore        5
     140: goto          146
     143: iconst_0
     144: istore        5
     146: iload         4
     148: bipush        15
     150: iand
     151: iconst_2
     152: ishl
     153: iload         5
     155: bipush        6
     157: ishr
     158: iconst_3
     159: iand
     160: ior
     161: invokestatic  #33                 // Method org/jvnet/staxex/Base64Encoder.encode:(I)C
     164: ireturn
     165: bipush        61
     167: ireturn
     168: iload_3
     169: iconst_2
     170: iadd
     171: aload_0
     172: getfield      #1                  // Field dataLen:I
     175: if_icmpge     193
     178: aload_0
     179: getfield      #2                  // Field data:[B
     182: iload_3
     183: iconst_2
     184: iadd
     185: baload
     186: bipush        63
     188: iand
     189: invokestatic  #33                 // Method org/jvnet/staxex/Base64Encoder.encode:(I)C
     192: ireturn
     193: bipush        61
     195: ireturn
     196: new           #34                 // class java/lang/IllegalStateException
     199: dup
     200: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":()V
     203: athrow

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #4                  // Method get:()[B
      12: pop
      13: iload_1
      14: istore        4
      16: iload         4
      18: iload_2
      19: if_icmpge     39
      22: aload_3
      23: aload_0
      24: iload         4
      26: invokevirtual #38                 // Method charAt:(I)C
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: iinc          4, 1
      36: goto          16
      39: aload_3
      40: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #2                  // Field data:[B
       9: iconst_0
      10: aload_0
      11: getfield      #1                  // Field dataLen:I
      14: invokestatic  #40                 // Method org/jvnet/staxex/Base64Encoder.print:([BII)Ljava/lang/String;
      17: areturn

  public void writeTo(char[], int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()[B
       4: pop
       5: aload_0
       6: getfield      #2                  // Field data:[B
       9: iconst_0
      10: aload_0
      11: getfield      #1                  // Field dataLen:I
      14: aload_1
      15: iload_2
      16: invokestatic  #41                 // Method org/jvnet/staxex/Base64Encoder.print:([BII[CI)I
      19: pop
      20: return

  public void writeTo(javax.xml.stream.XMLStreamWriter) throws java.io.IOException, javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: ifnonnull     92
       7: aload_0
       8: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      11: invokevirtual #25                 // Method javax/activation/DataHandler.getDataSource:()Ljavax/activation/DataSource;
      14: invokeinterface #26,  1           // InterfaceMethod javax/activation/DataSource.getInputStream:()Ljava/io/InputStream;
      19: astore_2
      20: new           #42                 // class java/io/ByteArrayOutputStream
      23: dup
      24: invokespecial #43                 // Method java/io/ByteArrayOutputStream."<init>":()V
      27: astore_3
      28: new           #44                 // class org/jvnet/staxex/Base64EncoderStream
      31: dup
      32: aload_1
      33: aload_3
      34: invokespecial #45                 // Method org/jvnet/staxex/Base64EncoderStream."<init>":(Ljavax/xml/stream/XMLStreamWriter;Ljava/io/OutputStream;)V
      37: astore        4
      39: getstatic     #46                 // Field CHUNK_SIZE:I
      42: newarray       byte
      44: astore        6
      46: aload_2
      47: aload         6
      49: invokevirtual #47                 // Method java/io/InputStream.read:([B)I
      52: dup
      53: istore        5
      55: iconst_m1
      56: if_icmpeq     72
      59: aload         4
      61: aload         6
      63: iconst_0
      64: iload         5
      66: invokevirtual #48                 // Method org/jvnet/staxex/Base64EncoderStream.write:([BII)V
      69: goto          46
      72: aload_3
      73: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.close:()V
      76: aload         4
      78: invokevirtual #50                 // Method org/jvnet/staxex/Base64EncoderStream.close:()V
      81: goto          112
      84: astore_2
      85: aload_0
      86: iconst_0
      87: putfield      #1                  // Field dataLen:I
      90: aload_2
      91: athrow
      92: aload_0
      93: getfield      #2                  // Field data:[B
      96: iconst_0
      97: aload_0
      98: getfield      #1                  // Field dataLen:I
     101: invokestatic  #40                 // Method org/jvnet/staxex/Base64Encoder.print:([BII)Ljava/lang/String;
     104: astore_2
     105: aload_1
     106: aload_2
     107: invokeinterface #51,  2           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeCharacters:(Ljava/lang/String;)V
     112: return
    Exception table:
       from    to  target type
           7    81    84   Class java/io/IOException

  public org.jvnet.staxex.Base64Data clone();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #53                 // class org/jvnet/staxex/Base64Data
       7: astore_1
       8: aload_1
       9: invokevirtual #4                  // Method get:()[B
      12: pop
      13: aload_1
      14: getfield      #5                  // Field dataCloneByRef:Z
      17: ifeq          31
      20: aload_0
      21: aload_1
      22: getfield      #2                  // Field data:[B
      25: putfield      #2                  // Field data:[B
      28: goto          58
      31: aload_0
      32: aload_1
      33: getfield      #1                  // Field dataLen:I
      36: newarray       byte
      38: putfield      #2                  // Field data:[B
      41: aload_1
      42: getfield      #2                  // Field data:[B
      45: iconst_0
      46: aload_0
      47: getfield      #2                  // Field data:[B
      50: iconst_0
      51: aload_1
      52: getfield      #1                  // Field dataLen:I
      55: invokestatic  #6                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      58: aload_0
      59: iconst_1
      60: putfield      #5                  // Field dataCloneByRef:Z
      63: aload_0
      64: aload_1
      65: getfield      #1                  // Field dataLen:I
      68: putfield      #1                  // Field dataLen:I
      71: aload_0
      72: aconst_null
      73: putfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      76: aload_0
      77: aload_1
      78: getfield      #8                  // Field mimeType:Ljava/lang/String;
      81: putfield      #8                  // Field mimeType:Ljava/lang/String;
      84: aload_1
      85: areturn
      86: astore_1
      87: ldc           #53                 // class org/jvnet/staxex/Base64Data
      89: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      92: invokestatic  #56                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      95: getstatic     #57                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      98: aconst_null
      99: aload_1
     100: invokevirtual #58                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     103: aconst_null
     104: areturn
    Exception table:
       from    to  target type
           0    85    86   Class java/lang/CloneNotSupportedException

  static java.lang.String getProperty(java.lang.String);
    Code:
       0: invokestatic  #59                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     11
       6: aload_0
       7: invokestatic  #60                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn
      11: new           #61                 // class org/jvnet/staxex/Base64Data$1
      14: dup
      15: aload_0
      16: invokespecial #62                 // Method org/jvnet/staxex/Base64Data$1."<init>":(Ljava/lang/String;)V
      19: invokestatic  #63                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      22: checkcast     #64                 // class java/lang/String
      25: areturn

  public java.lang.String getHrefCid();
    Code:
       0: aload_0
       1: getfield      #65                 // Field hrefCid:Ljava/lang/String;
       4: ifnonnull     38
       7: aload_0
       8: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      11: ifnull        38
      14: aload_0
      15: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      18: instanceof    #17                 // class org/jvnet/staxex/StreamingDataHandler
      21: ifeq          38
      24: aload_0
      25: aload_0
      26: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      29: checkcast     #17                 // class org/jvnet/staxex/StreamingDataHandler
      32: invokevirtual #66                 // Method org/jvnet/staxex/StreamingDataHandler.getHrefCid:()Ljava/lang/String;
      35: putfield      #65                 // Field hrefCid:Ljava/lang/String;
      38: aload_0
      39: getfield      #65                 // Field hrefCid:Ljava/lang/String;
      42: areturn

  public void setHrefCid(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field hrefCid:Ljava/lang/String;
       5: aload_0
       6: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
       9: ifnull        33
      12: aload_0
      13: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      16: instanceof    #17                 // class org/jvnet/staxex/StreamingDataHandler
      19: ifeq          33
      22: aload_0
      23: getfield      #7                  // Field dataHandler:Ljavax/activation/DataHandler;
      26: checkcast     #17                 // class org/jvnet/staxex/StreamingDataHandler
      29: aload_1
      30: invokevirtual #67                 // Method org/jvnet/staxex/StreamingDataHandler.setHrefCid:(Ljava/lang/String;)V
      33: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method clone:()Lorg/jvnet/staxex/Base64Data;
       4: areturn

  static byte[] access$100(org.jvnet.staxex.Base64Data);
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: areturn

  static int access$200(org.jvnet.staxex.Base64Data);
    Code:
       0: aload_0
       1: getfield      #1                  // Field dataLen:I
       4: ireturn

  static {};
    Code:
       0: ldc           #53                 // class org/jvnet/staxex/Base64Data
       2: invokevirtual #69                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: ldc           #53                 // class org/jvnet/staxex/Base64Data
      18: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokestatic  #56                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      24: putstatic     #70                 // Field logger:Ljava/util/logging/Logger;
      27: sipush        1024
      30: istore_0
      31: ldc           #71                 // String org.jvnet.staxex.Base64DataStreamWriteBufferSize
      33: invokestatic  #72                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_1
      37: aload_1
      38: ifnull        46
      41: aload_1
      42: invokestatic  #73                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      45: istore_0
      46: goto          62
      49: astore_1
      50: getstatic     #70                 // Field logger:Ljava/util/logging/Logger;
      53: getstatic     #75                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      56: ldc           #76                 // String Error reading org.jvnet.staxex.Base64DataStreamWriteBufferSize property
      58: aload_1
      59: invokevirtual #58                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      62: iload_0
      63: putstatic     #46                 // Field CHUNK_SIZE:I
      66: return
    Exception table:
       from    to  target type
          31    46    49   Class java/lang/Exception
}
